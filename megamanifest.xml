<pkgs><package name="waypoint_controller" path="/trunk/cturtle/waypoint_controller" repo="seabee3-ros-pkg" repo_host="http://seabee3-ros-pkg.googlecode.com/svn">
  <description brief="waypoint_controller">

     waypoint_controller

  </description>
  <author>Edward T. Kaszubski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/waypoint_controller</url>
  <depend package="base_libs"/>
  <depend package="common_utils"/>
  <depend package="localization_defs"/>
  <depend package="seabee3_driver"/>
  <export>
    <cpp cflags="-std=c++0x -I${prefix}/include -I${prefix}/msg/cpp -I${prefix}/srv/cpp" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib"/>
  </export>

</package><package name="neo_watchdogs" path="" repo="neo_driver" repo_host="https://github.com/neobotix/neo_driver">
  <description brief="neo_watchdogs">

     neo_watchdogs

  </description>
  <author>Timo Hackel</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/neo_watchdogs</url>
  <depend package="cob_relayboard"/>
  <depend package="move_base_msgs"/>
  <depend package="pr2_msgs"/>
  <depend package="roscpp"/>
</package><package name="eros_python_tools" path="/trunk/tools/eros_python_tools" repo="eros" repo_host="https://code.ros.org/svn/eros">
  <description brief="Ros embedded development python tools.">

  <p>
  Provides python tools to aid in embedded development with the ros.
  </p>
  
  </description>
  <author>Daniel Stonier (d.stonier@gmail.com)</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/eros_python_tools</url>
  <depend package="roslib"/>
  <depend package="eros_license"/>
  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>
</package><package name="parsec_simulation_stage" path="" repo="parsec" repo_host="https://code.google.com/p/parsec">
  <description brief="parsec_simulation_stage">

     parsec_simulation_stage

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>Apache 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/parsec_simulation_stage</url>
  <depend package="stage"/>
  <depend package="parsec_navigation"/>

</package><package name="hrl_object_fetching" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="hrl_object_fetching">

     hrl_object_fetching

  </description>
  <author>kelsey</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hrl_object_fetching</url>
  <depend package="pr2_overhead_grasping"/>
  <depend package="hrl_rfid"/>
  <depend package="rospy"/>
  <depend package="roslaunch"/>
  <depend package="rosnode"/>
  <depend package="spline_smoother"/>
  <depend package="tf"/>
  <depend package="bullet"/>
  <depend package="pcl_ros"/>
  <depend package="pcl"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="image_transport"/>
  <depend package="hrl_cvblobslib"/>

</package><package name="schunk_bringup" path="" repo="schunk_robots" repo_host="git://github.com/ipa320/schunk_robots">
  <description brief="schunk_bringup">

     This package provides launch files for operating Schunk components.

  </description>
  <author>Florian Weisshardt</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/schunk_bringup</url>
  <depend package="robot_state_publisher"/>
  <depend package="schunk_sdh"/>
  <depend package="schunk_powercube_chain"/>
  <depend package="schunk_hardware_config"/>
  <depend package="cob_trajectory_controller"/>
  <depend package="schunk_default_config"/>
  <depend package="cob_script_server"/>
  <depend package="cob_dashboard"/>
  <depend package="cob_command_gui"/>
  
</package><package name="swissranger_visualizer" path="/drivers/swissranger_visualizer" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description>A simple SwissRanger viewer</description>
  <author>Radu Bogdan Rusu (rusu@cs.tum.edu)</author>
  <license>BSD</license>
  <depend package="roscpp"/>
  <depend package="deprecated_msgs"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <url/>
</package><package name="task_monitor_gui" path="" repo="usc-clmc-ros-pkg" repo_host="https://github.com/usc-clmc/usc-clmc-ros-pkg">
  <description brief="task_monitor_gui">

     task_monitor_gui

  </description>
  <author>Peter Pastor</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/task_monitor_gui</url>

  <depend package="roscpp"/>
  
  <depend package="usc_utilities"/>
  <depend package="gui_utilities"/>
  
  <depend package="task_recorder2"/>
  <depend package="task_recorder2_msgs"/>
  <depend package="task_recorder2_utilities"/>

  <depend package="task_event_detector"/>
  <depend package="task_label_gui"/>
  <depend package="task_monitor"/>

</package><package name="mrpt_libs" path="/trunk/mrpt_common/mrpt_libs" repo="mrpt-ros-pkg" repo_host="http://mrpt-ros-pkg.googlecode.com/svn">
	<description brief="MRPT C++ libraries">

		Adding this package to your dependencies assures that MRPT libraries will
		be installed in your system. For example, in Ubuntu this means
		installing
		the libmrpt-dev package.

	</description>
	<author>Jose Luis Blanco Claraco</author>
	<license>BSD</license>
	<review notes="" status="unreviewed"/>
	<url>http://ros.org/wiki/mrpt_libs</url>

	<export>
		<cpp cflags="`pkg-config mrpt-base mrpt-bayes mrpt-slam mrpt-detectors mrpt-graphs mrpt-graphslam mrpt-hmtslam mrpt-reactivenav mrpt-scanmatching mrpt-scanmatching mrpt-topography mrpt-vision mrpt-maps mrpt-hwdrivers --cflags`" lflags="`pkg-config mrpt-base mrpt-bayes mrpt-slam mrpt-detectors mrpt-graphs mrpt-graphslam mrpt-hmtslam mrpt-reactivenav mrpt-scanmatching mrpt-scanmatching mrpt-topography mrpt-vision mrpt-maps mrpt-hwdrivers --libs`"/>
	</export>

	<rosdep name="mrpt"/>

</package><package name="test_bond" path="" repo="bond_core" repo_host="https://kforge.ros.org/common/bondcore">
  <description brief="test_bond">

     Contains tests for [[bond]], including tests for [[bondpy]] and [[bondcpp]].

  </description>
  <author>Stuart Glaser</author>
  <license>BSD</license>
  <review notes="http://www.ros.org/wiki/bond/Reviews/2010-07-28_API_Review" status="N/A"/>
  <url>http://ros.org/wiki/test_bond</url>
  <depend package="rostest"/>
  <depend package="bond"/>
  <depend package="bondpy"/>
  <depend package="bondcpp"/>

</package><package name="view_meshset3d" path="/trunk/stacks/bosch_surface_reconstruction/view_meshset3d" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <author>Benjamin Pitzer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <depend package="roscpp"/>
  <depend package="rtc"/>
  <depend package="pcl"/>
  <rosdep name="libdevil-dev"/>
  <rosdep name="libglew-dev"/>
  <rosdep name="libglui-dev"/>
</package><package name="pr2_build_map_gazebo_demo" path="/stacks/wg_robots_gazebo/trunk/pr2_build_map_gazebo_demo" repo="wg_robots_gazebo" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_build_map_gazebo_demo">

     Map building example in simulation.

  </description>
  <author>John Hsu</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_build_map_gazebo_demo</url>
  <depend package="pr2_gazebo"/>
  <depend package="pr2_tuckarm"/>
  <depend package="rviz"/>
  <depend package="gmapping"/>
  <depend package="pr2_teleop"/>

</package><package name="rovio_common" path="" repo="iheart-ros-pkg" repo_host="git://github.com/IHeartRobotics/iheart-ros-pkg">
  <description brief="rovio_common">

     rovio_common contains common messages and services related to the Rovio stack

  </description>
  <author>I Heart Robotics</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rovio_common</url>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="rosbagmigration"/>
  <export>
    <cpp cflags="-I${prefix}/msg/cpp -I${prefix}/srv/cpp"/>
    <rosbagmigration rule_file="migration_rules/rovio_msgs.bmr"/>
  </export>

</package><package name="pr2_tabletop_manipulation_launch" path="/stacks/pr2_tabletop_manipulation_apps/branches/0.4-branch/pr2_tabletop_manipulation_launch" repo="pr2_tabletop_manipulation_apps" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_tabletop_manipulation_launch">

    Launch files for starting the manipulation pipeline, complete with
    sensor processing for manipulation, on the PR2 robot.

  </description>
  <author>Matei Ciocarlie</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_tabletop_manipulation_launch</url>

  <depend package="pr2_object_manipulation_launch"/>
  <depend package="household_objects_database"/>
  <depend package="tabletop_object_detector"/>
  <depend package="tabletop_collision_map_processing"/>
  <depend package="pr2_interactive_manipulation"/>
</package><package name="block_swat" path="/trunk/arrg/ua_experimental/block_swat" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="block_swat">
        block_swat
    </description>

    <author>RobotLab</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/block_swat</url>

    <depend package="rospy"/>
    <depend package="gazebo"/>
    <depend package="dynamixel_controllers"/>

    <depend package="std_msgs"/>
    <depend package="geometry_msgs"/>
    <depend package="move_base_msgs"/>
    <depend package="actionlib_msgs"/>
    <depend package="wubble_actions"/>
</package><package name="pr2_move_base" path="" repo="pr2_navigation" repo_host="https://kforge.ros.org/pr2navigation/hg">
  <description brief="pr2_move_base">

     pr2_move_base

  </description>
  <author>Eitan Marder-Eppstein</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_move_base</url>
  <depend package="move_base_msgs"/>
  <depend package="pr2_msgs"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="rospy"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="pr2_common_action_msgs"/>
</package><package name="orogen" path="" repo="orocos_toolchain" repo_host="https://git.gitorious.org/orocos-toolchain/orogen.git">
    <description brief="Orocos/RTT component specification and code generation tool">
        orogen offers a specification interface for components developped in the
        Orocos Realtime Toolkit. Moreover, it generates the specified modules,
        thus offering an easy and fast development process.
    </description>
    <author>Sylvain Joyeux/sylvain.joyeux@m4x.org</author>
    <copyright>
        DFKI/robotik@dfki.de
        Sylvain Joyeux/sylvain.joyeux@m4x.org
    </copyright>
    <license>GPL v2 or later</license>
    <url>http://doudou.github.com/orogen</url>

    <depend package="rtt"/>
    <depend package="typelib"/>
    <!--
    Disabled for now, until I know whether tools/service_discovery will be moved
    to orocos-toolchain or not
    <depend package="tools/service_discovery" optional="1" />
    -->
    <depend package="rtt_typelib"/>
    <rosdep name="libxslt"/>
    <rosdep name="nokogiri"/>
    <rosdep name="rake"/>
    <rosdep name="ruby"/>
    <!--
    <rosdep name="webgen" type="doc" />
    <rosdep name="coderay" type="doc" />
    <rosdep name="rdoc" type="doc" />
    -->
</package><package name="detect_cans_in_fridge_201202" path="/trunk/demos/detect_cans_in_fridge_201202" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="detect_cans_in_fridge_201202">

     detect_cans_in_fridge_201202

  </description>
  <author>Manabu Saito, Youhei Kakiuchi</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/detect_cans_in_fridge_201202</url>
  <depend package="roseus"/>
  <depend package="jsk_perception"/>
  <depend package="jsk_pcl_ros"/>
  <!-- depend package="rectangular_solid_filter"/ -->
  <depend package="robot_self_filter_color"/>

  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>
            

</package><package name="reem_arm_navigation" path="" repo="reem_arm_navigation" repo_host="https://github.com/pal-robotics/reem_arm_navigation">
  <description brief="REEM arm navigation configuration and launch files.">
    The contents of this package are based on the original pr2_arm_navigation stack, and has been following its
    evolution since the Boxturtle release, hence credit for its contents goes mainly to the authors of the original
    stack.
    The authors listed in this stack's packages have mostly adapting the original work to the REEM robot.

    The contents of this stack are based on the original pr2_arm_navigation, and has been following its evolution since
    the Boxturtle release, hence credit for its contents goes mainly to the authors of the original stack.
    The authors listed in this stack's packages have mostly adapting the original work to the REEM robot.
  </description>
  <author>Adolfo Rodriguez Tsouroukdissian</author>
  <license>Modified BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/reem_arm_navigation</url>
  <depend package="planning_environment"/>
  <depend package="arm_kinematics_constraint_aware"/>
  <depend package="ompl_ros_interface"/>
  <depend package="trajectory_filter_server"/>
  <depend package="constraint_aware_spline_smoother"/>
  <depend package="move_arm"/>
  <depend package="robot_self_filter"/>
  <depend package="collider"/>
</package><package name="BarrettWAM" path="/trunk/WAM/BarrettWAM" repo="ubc-ros-pkg" repo_host="https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg">
<description>Barrett low-level controllers (stock btclient)</description>
<author>Barrett corp.</author>
<license>BSD.</license>
<export>
  <cpp cflags="-I${prefix}/btclient/include" lflags="-L${prefix}/btclient/lib -lbtsystem -lbtwam"/>
</export>
</package><package name="cyberglove" path="" repo="sr_teleop" repo_host="lp:sr-teleop">
  <description brief="Cyberglove ROS interface">

     This is a generic ROS interface to the Cyberglove from Immersion. It reads data from the Cyberglove, calibrate them
     and streams them to two different /joint_states topic: calibrated and raw data.

  </description>
  <author>Ugo Cupcic</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cyberglove</url>
  <depend package="roslib"/>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="diagnostic_msgs"/>

  <depend package="cereal_port"/>

  <export>
    <cpp cflags="-I${prefix}/include/"/>
    <python path="${prefix}/python_lib"/>
    <python path="${prefix}/src"/>
  </export>

  <rosdep name="tinyxml"/>

</package><package name="matlab" path="/trunk/sandbox/matlab/matlab" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="matlab">

     provides flags and tools for compiling matlab mex libraries

  </description>
  <author>Edward T. Kaszubski ( ekaszubski@gmail.com )</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/matlab</url>
  <depend package="rosbuild"/>
  <depend package="cpp11"/>
  <export>
    <cpp cflags="-I${prefix}/include" lflags=""/>
    <rosbuild cmake_directory="${prefix}/cmake"/>
  </export>

</package><package name="cob_generic_states_experimental" path="" repo="cob_scenario_states" repo_host="git://github.com/ipa320/cob_scenario_states">
  <description brief="cob_generic_states_experimental">

     cob_generic_states_experimental

  </description>
  <author>Tobias Sing</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_generic_states_experimental</url>
  <depend package="rospy"/>
  <depend package="smach"/>
  <depend package="smach_ros"/>
  <depend package="actionlib_msgs"/>
  <depend package="tf"/>
  <depend package="tf_conversions"/>
  <depend package="kinematics_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="cob_script_server"/>
  <depend package="cob_object_detection_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="cob_arm_navigation_python"/>

  <python path="${prefix}/states"/>

</package><package name="win_bzip2" path="" repo="win_ros" repo_host="https://github.com/stonier/win_ros">
  <description brief="rosinstall for windows">

Rosinstall is a tool to check out source code. This is a slightly modified version so that it works on windows. Alot of the patches to rosinstall are already being merged upstream to the actual rosinstall package, whilst others will remain here until its decided they are stable (at which point we'll try to merge them upstream). 

  </description>
  <author>Daniel Stonier</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/rosinstall</url>
  <!-- Indirectly exporting this straight from svn, so don't need it as a ros dependency. -->
  <!-- <depend package="vcstools"/> -->

</package><package name="book_stacking" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="book_stacking">

     book_stacking

  </description>
  <author>Akansel</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/book_stacking</url>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="roscpp"/>
  <depend package="actionlib_msgs"/>
  <depend package="arm_navigation_msgs"/>
  <depend package="pr2_arm_navigation_perception"/>
  <depend package="pr2_arm_navigation_planning"/>
  <depend package="pr2_arm_navigation_actions"/>
  <depend package="pr2_arm_navigation_filtering"/>
  <depend package="pr2_arm_navigation_kinematics"/>
  <depend package="pr2_grasp_adjust"/>
  <depend package="pr2_machine"/>
  <depend package="pr2_navigation_config"/>
  <depend package="pr2_move_base"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="pr2_msgs"/>
  <depend package="pr2_gazebo"/>
  <depend package="planning_environment"/>
  <depend package="interpolated_ik_motion_planner"/>
  <depend package="trajectory_filter_server"/>
  <depend package="simple_Jtranspose_controller"/>
  <depend package="book_stacking_msgs"/>
  <depend package="command_generator_PR2"/>
  <depend package="kinematics_msgs"/>
  <depend package="laser_assembler"/>
  <depend package="visualization_msgs"/>
  <depend package="object_manipulation_msgs"/>
  <depend package="robot_self_filter"/>
  <depend package="pcl"/>
  <depend package="omnix"/>
  <depend package="pcl_ros"/>
  <depend package="move_base"/>
  <depend package="topic_tools"/>
  <depend package="tabletop_collision_map_processing"/>
  <depend package="object_manipulator"/>
  <depend package="household_objects_database"/>
</package><package name="lwr_fri" path="" repo="lwr_hardware" repo_host="https://github.com/RCPRG-ros-pkg/lwr_hardware">
  <description brief="LWR">

     LWR FRI components

  </description>
  <author>Ruben Smits</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/LWR</url>

  <depend package="rtt"/>
  <depend package="orocos_kdl"/>
  <depend package="rtt_std_msgs"/>
  <depend package="rtt_geometry_msgs"/>
  <depend package="rtt_sensor_msgs"/>
  <depend package="rtt_diagnostic_msgs"/>
  <depend package="tf_conversions"/>
  <depend package="kuka_lwr_fri"/>

</package><package name="r2_msgs" path="" repo="nasa_r2_common" repo_host="https://bitbucket.org/nasa_ros_pkg/nasa_r2_common">
  <description brief="r2_msgs">

     r2_msgs

  </description>
  <author>Paul Dinh</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/r2_msgs</url>
  
  <depend package="std_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="geometry_msgs"/>
<!--  <rosdep name="protobuf-dev" /> -->
  
</package><package name="pioneer_arm_launch" path="" repo="gt-ros-pkg.humans" repo_host="https://code.google.com/p/gt-ros-pkg.humans">
  <description brief="Launch files for simulating and controlling a Pioneer 5-DOF robotic arm">

     Launch files for simulating and controlling a Pioneer 5-DOF robotic arm.

  </description>
  <author>Stephen Williams</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pioneer_arm_launch</url>
  
  <depend package="robot_state_publisher"/>
  <depend package="p2os_urdf"/>
  <depend package="pioneer_arm_description"/>
  <depend package="p2os_with_arm_driver"/>

</package><package name="re2darmGazeboPlugins" path="/darpa_arm_sim_servers/re2darmGazeboPlugins" repo="darpa_arm_sim_servers" repo_host="http://svn.thearmrobot.com">
  <description brief="Gazebo Plugins for DarmSim">
    Gazebo Plugins for Darm Sim.
  </description>
  <author>Andrew Somerville, Rorry Brenner</author>
  <license>BSD</license>
  
  <depend package="angles"/>
  <depend package="bullet"/>
  <depend package="Bumblebee2_msgs"/>
  <depend package="cv_bridge"/>
  <depend package="diagnostic_updater"/>
  <depend package="diagnostic_msgs"/>
  <depend package="driver_base"/>
  <depend package="gazebo"/>
  <depend package="gazebo_tools"/>
  <depend package="geometry_msgs"/>
  <depend package="image_transport"/>
  <depend package="nav_msgs"/>
  <depend package="opende"/>
  <depend package="opencv2"/>
  <depend package="polled_camera"/>
  <depend package="pr2_msgs"/>
  <depend package="pr2_hardware_interface"/>
  <depend package="pr2_controller_manager"/>
  <depend package="pr2_mechanism_model"/>
  <depend package="prosilica_msgs"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>  
  <depend package="sensor_msgs"/>
  <depend package="std_msgs"/>
  <depend package="std_srvs"/>
  <depend package="tinyxml"/>
  <depend package="tf"/>
  <depend package="urdf"/>
  <depend package="polled_camera"/>
  <depend package="prosilica_msgs"/>
  <depend package="Bumblebee2_msgs"/>
  <depend package="SR4000_msgs"/>
  <depend package="image_transport"/>

  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp -I${prefix}/srv/cpp" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib"/>
    <gazebo plugin_path="${prefix}/lib"/>
  </export>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="hector_nist_arena_worlds" path="/trunk/hector_nist_arenas_gazebo/hector_nist_arena_worlds" repo="hector_nist_arenas_gazebo" repo_host="https://tu-darmstadt-ros-pkg.googlecode.com/svn">
  <description brief="hector_nist_arena_worlds">

     hector_nist_arena_worlds by default contains NIST standard test arena scenarios created using the hector_nist_arena_designer GUI.

  </description>
  <author>Johannes Simon, Stefan Kohlbrecher</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hector_nist_arena_worlds</url>
  
  <depend package="hector_nist_arena_elements"/>

</package><package name="actuator_array_gui" path="" repo="gt-ros-pkg.humans" repo_host="https://code.google.com/p/gt-ros-pkg.humans">
  <description brief="Simple GUI for viewing and controlling the state of an actuator array">

     This package provides a simple GUI for viewing and controlling the state of an actuator array.
     The joint names to be controlled are read from the parameter server. Joint limits are extracted
     from the &quot;robot_description.&quot; 

  </description>
  <author>Stephen Williams</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/actuator_array_gui</url>
  
  <depend package="rospy"/>
  <depend package="sensor_msgs"/>
  <depend package="std_srvs"/>

</package><package name="ogre_tools" path="/stacks/visualization_common/trunk/ogre_tools" repo="visualization_common" repo_host="https://code.ros.org/svn/ros-pkg">
    <description brief="Ogre Tools">
    
    Provides the stl_to_mesh tool for converting .stl files into
    Ogre's .mesh format, and the ogre_tools library, which contains
    the STLLoader class for loading .stl files into an Ogre program.
    
    </description>
    <author>Josh Faust</author>
    <license>BSD</license>
    <review notes="2009/08/04 by kwc" status="doc reviewed"/>
    <url>http://ros.org/wiki/ogre_tools</url>
    <export> 
      <cpp cflags="-I${prefix}/src/" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -logre_tools"/>
    </export>
    <depend package="ogre"/>
    <depend package="rosconsole"/>
    <depend package="roslib"/>
</package><package name="pr2_3dnav" path="/stacks/pr2_arm_navigation/trunk/pr2_3dnav" repo="pr2_arm_navigation" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_3dnav">
    This application for the PR2 launches the navigation stack for the arm and allows you to move the arms using collision free motion planning
  </description>
  <author>Sachin Chitta</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_3dnav</url>

  <depend package="pr2_arm_navigation_kinematics"/>
  <depend package="pr2_arm_navigation_perception"/>
  <depend package="pr2_arm_navigation_filtering"/>
  <depend package="pr2_arm_navigation_actions"/>
  <depend package="pr2_arm_navigation_planning"/>
 
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="extrinsic_calibration" path="" repo="ethzasl_mapping" repo_host="https://github.com/ethz-asl/ros-mapping">
  <description brief="extrinsic_calibration">

    Calibration of 3D transform of a depth sensor given two sets of TFs, one from the odometry and one from the sensor pose.
	Uses modular_cloud_matcher to provide the sensor pose using ICP.

  </description>
  <author>François Pomerleau, Francis Colas, and Stéphane Magnenat</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/extrinsic_calibration</url>
  <depend package="rospy"/> 
  <depend package="roscpp"/>
  <depend package="tf"/> 
  <rosdep name="eigen"/> 

</package><package name="semantic_model_web_interface" path="" repo="worldmodel" repo_host="https://kforge.ros.org/worldmodel/hg">
  <description brief="semantic_model_web_interface">

     semantic_model_web_interface

  </description>
  <author>Bhaskara Marthi</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/semantic_model_web_interface</url>
  <depend package="semanticmodel"/>
  <depend package="pcl"/>
  <depend package="mongo_ros"/>

  <export>
  </export>

</package><package name="usbi2c-ros-pkg" path="" repo="usbi2c-ros-pkg" repo_host="lp:usbi2c-ros-pkg">
  <description brief="usbi2c">

     A package for use with USB to I2C Communication Module, used to communicate with sonar sensors
     See http://www.robot-electronics.co.uk/htm/usb_i2c_tech.htm

  </description>
  <author>Bob Mottram</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>https://launchpad.net/usbi2c-ros-pkg</url>
  <depend package="std_msgs"/>
  <depend package="roscpp"/>

</package><package name="SSC32_core" path="/branches/SSC32/SSC32_core" repo="rtc-us-ros-pkg-branches" repo_host="https://rtc-us-ros-pkg.svn.sourceforge.net/svnroot/rtc-us-ros-pkg">
  <description brief="SSC32_core">

     SSC32_core: A library to interface a SSC32 hardware board

  </description>
  <author>Steven Bellens - steven.bellens@mech.kuleuven.be</author>
  <license>LGPLv2.1 / BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/SSC32_core</url>
    <export>
        <cpp cflags="-I${prefix}/src" lflags="-Wl,-rpath,${prefix}/lib  -L${prefix}/lib -lSSC32_core"/>
    </export>
</package><package name="depth_image_proc_jsk_patch" path="/trunk/jsk_ros_patch/depth_image_proc_jsk_patch" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="depth_image_proc_jsk_patch">

     depth_image_proc_jsk_patch

  </description>
  <author>tsuda</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/depth_image_proc_jsk_patch</url>

  <export>
    <nodelet plugin="${prefix}/nodelet_plugins.xml"/>
  </export>

  <depend package="depth_image_proc"/>
  <depend package="nodelet"/>
</package><package name="point_head_process_module" path="" repo="cram_pr2" repo_host="https://github.com/moesenle/cram_pr2">
  <description brief="point_head_process_module">

     point_head_process_module

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/point_head_process_module</url>
  <depend package="pr2_controllers_msgs"/>
  <depend package="actionlib_lisp"/>
  <depend package="cram_process_modules"/>
  <depend package="cram_designators"/>
  <depend package="cram_reasoning"/>
  <depend package="cram_roslisp_common"/>
  <depend package="cram_plan_knowledge"/>
  <depend package="cram_projection"/>
  <depend package="alexandria"/>

</package><package name="image_scaler" path="/trunk/cturtle/image_scaler" repo="seabee3-ros-pkg" repo_host="http://seabee3-ros-pkg.googlecode.com/svn">
  <description brief="image_scaler">

     image_scaler

  </description>
  <author>Edward</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/image_scaler</url>
  <depend package="base_libs"/>

</package><package name="kdl_arm_kinematics" path="" repo="cram_physics" repo_host="https://github.com/moesenle/cram_physics">
  <description brief="A generic package for computing Arm Kinematics based on KDL">

    A generic package for computing both forward and backward kinematics for arms.
    Developed as an alternative to pr2_arm_kinematics for people not using the PR2.

    This package is a fork of urdf_tools/arm_kinematics. It adds
    mechanisms to configure some of the KDL solver parameters and thus
    allows for greater flexibility.


  </description>
  <author>David Lu!!, Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/kdl_arm_kinematics</url>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="tf_conversions"/>
  <depend package="kdl_parser"/>
  <depend package="kinematics_msgs"/>
  <depend package="arm_navigation_msgs"/>

</package><package name="knowrob_omics" path="/tags/latest/knowrob_omics" repo="knowrob" repo_host="http://code.in.tum.de/pubsvn/knowrob">
  <description brief="knowrob_omics">

     knowrob_omics

  </description>
  <author>Lars Kunze</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/knowrob_omics</url>
  <depend package="ias_knowledge_base"/>

</package><package name="interactivespaces-master-webapp" path="" repo="interactive-spaces" repo_host="https://code.google.com/p/interactive-spaces">
  <description brief="interactivespaces.master.webapp">
    Space Master webapp for Interactive Spaces.
  </description>
  <author>Keith Hughes/khughes@google.com</author>
  <license>Apache License 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://code.google.com/p/interactive-spaces/</url>
  
  <depend package="interactivespaces.master"/>

  <rosdep name="java"/>
</package><package name="tidyup_msgs" path="/trunk/tidyup_robot/tidyup_msgs" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="tidyup_msgs">
    Messages used in the TidyUp project.
  </description>
  <author>Maintained by Christian Dornhege</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/tidyup_msgs</url>

  <depend package="actionlib_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="arm_navigation_msgs"/>

</package><package name="simon_game" path="/darpa_arm_sim_servers/simon_game" repo="darpa_arm_sim_servers" repo_host="http://svn.thearmrobot.com">
  <description brief="simon_game">

     simon_game is used to control the Simon-like game hardware
     (lights and buttons)

  </description>
  <author>RE2, Inc.</author>
  <license>Private</license>

  <depend package="roscpp"/>


</package><package name="osx_joystick" path="" repo="osx_joystick" repo_host="https://github.com/walchko/osx_joystick">
  <description brief="osx_joystick">

     Joystick driver for OSX.

  </description>
  <author>Kevin Walchko</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://github.com/walchko/osx_joystick</url>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <rosdep name="glfw"/>

</package><package name="ee_cart_imped_control" path="/trunk/ee_cart_imped/ee_cart_imped_control" repo="mit-ros-pkg-trunk" repo_host="https://svn.csail.mit.edu/mit-ros-pkg">
  <description brief="ee_cart_imped_control">

     A force/impedance controller.

  </description>
  <author>Mario Bollini, Jenny Barry, and Huan Liu</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ee_cart_imped_control</url>
  <depend package="geometry_msgs"/>
  <depend package="eigen"/>
  <depend package="kdl"/>
  <depend package="pr2_controller_manager"/>
  <depend package="pr2_controller_interface"/>
  <depend package="pr2_mechanism_model"/>
  <depend package="pluginlib"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="realtime_tools"/>
  <depend package="ee_cart_imped_msgs"/>

  <export>
    <pr2_controller_interface plugin="${prefix}/controller_plugins.xml"/>
    <rosdoc config="rosdoc.yaml"/>
  </export>

</package><package name="theora_imagem_transport" path="" repo="ethzasl_message_transport" repo_host="https://github.com/ethz-asl/ros-message-transport">
  <description brief="theora_imagem_transport">

     theora_imagem_transport

  </description>
  <author>Ethan Dreyfuss, Cedric Pradalier</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://pr.willowgarage.com/wiki/theora_imagem_transport</url>
  <depend package="sensor_msgs"/>
  <depend package="message_transport_common"/>
  <depend package="sharedmem_transport"/>
  <depend package="imagem_transport"/>
  <rosdep name="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="pluginlib"/>
  <rosdep name="libtheora"/>
  <rosdep name="libogg"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -ltheora_image_transport"/>
    <imagem_transport plugin="${prefix}/compressed_plugins.xml"/>
  </export>

</package><package name="mini_max_defs" path="/trunk/mini_max/mini_max_defs" repo="vanadium-ros-pkg" repo_host="http://vanadium-ros-pkg.googlecode.com/svn">
  <description brief="URDF/YAML definition, bringup info for Mini Maxwell"/>
  <author>Michael Ferguson</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/mini_max_defs</url>

  <!-- definitions -->
  <depend package="urdf"/>
  <depend package="xacro"/>
  <depend package="ivcon"/>

  <!-- diagnostics -->
  <depend package="diagnostic_msgs"/>

  <!-- hardware -->
  <depend package="arbotix_python"/>
  <depend package="turtlebot_bringup"/>

  <!-- arm -->
  <depend package="simple_arm_server"/>
  <depend package="arm_kinematics"/>

</package><package name="visual_servo" path="" repo="gt-ros-pkg.cpl" repo_host="https://code.google.com/p/gt-ros-pkg.cpl">
  <description brief="visual_servo">

     visual_servo

  </description>
  <author>Stephan Lee</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/visual_servo</url>
  <depend package="roscpp"/>
  <depend package="stereo_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="tf"/>
  <depend package="tf_conversions"/>
  <!-- <depend package="opencv2"/> -->
  <depend package="image_transport"/>
  <depend package="cv_bridge"/>
  <!-- <depend package="hrl_pr2_lib"/> -->
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/> 
  <!-- <depend package="hrl_pr2_arms"/> -->
  <depend package="robot_mechanism_controllers"/>
  <depend package="pr2_gripper_sensor_action"/>
  <depend package="tabletop_pushing"/>
  <rosdep name="opencv2"/>
</package><package name="underwater_vehicle_dynamics" path="/trunk/underwater_simulation/underwater_vehicle_dynamics" repo="uji-ros-pkg" repo_host="http://uji-ros-pkg.googlecode.com/svn">
  <description brief="underwater_vehicle_dynamics">

     underwater_vehicle_dynamics

  </description>
  <author>Arnau Carrera, Narcís Palomeras, Mario Prats</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/underwater_vehicle_dynamics</url>

  <depend package="std_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="rospy"/>
  <depend package="tf"/>
  <depend package="tf_conversions"/>
  <depend package="kdl"/>

</package><package name="dynamixel_msgs" path="/stacks/dynamixel_motor/trunk/dynamixel_msgs" repo="dynamixel_motor" repo_host="https://ua-ros-pkg.googlecode.com/svn">
    <description brief="Common messages for Dynamixel motors">
        Common messages used throughout dynamixel_motor stack.
    </description>
    
    <author>Antons Rebguns</author>
    
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/dynamixel_msgs</url>
</package><package name="ros2opencv" path="/trunk/pi_vision/ros2opencv" repo="pi-robot-ros-pkg" repo_host="http://pi-robot-ros-pkg.googlecode.com/svn">
  <description brief="ros2opencv">

     This package defines a base class for other packages in the
     pi_vision stack for converting ROS image topics to OpenCV
     format, displaying the image + markers, etc.

  </description>
  <author>Patrick Goebel</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ros2opencv</url>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="image_transport"/>
  <depend package="openni_camera"/>
  <depend package="uvc_cam"/>

</package><package name="rqt_pose_view" path="" repo="rqt" repo_host="https://kforge.ros.org/visualization/rqt">
  <description brief="Plugin for visualizing 3D poses">
    rqt_pose_view provides a GUI plugin for visualizing 3D poses.
  </description>
  <author>Dorian Scholz</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rqt_pose_view</url>

  <depend package="rqt_gui"/>
  <depend package="rqt_gui_py"/>
  <depend package="rostopic"/>
  <depend package="geometry_msgs"/>
  <depend package="tf"/>
  <rosdep name="python-opengl"/>
  <rosdep name="python-qt-bindings-gl"/>

  <export>
    <rqt_gui plugin="${prefix}/plugin.xml"/>
  </export>
</package><package name="rotating_unit" path="/highlevel/rotating_unit" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description>
    Controls a rotating Directed Perception PTU D47 unit via a serial interface and triggers the acquisition of PointCloud messages.
  </description>

  <author>Radu Bogdan Rusu, Dejan Pangercic</author>
  <license>BSD</license>

  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="mapping_srvs"/>
  <depend package="perception_srvs"/>
  <depend package="eigen"/>
  <depend package="point_cloud_mapping"/>

</package><package name="task_recorder2_file_io" path="" repo="usc-clmc-ros-pkg" repo_host="https://github.com/usc-clmc/usc-clmc-ros-pkg">
  <description brief="task_recorder2_file_io">

     task_recorder2_file_io

  </description>
  <author>Arm User</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/task_recorder2_file_io</url>
  <depend package="rospy"/>
  <depend package="rosbag"/>
  <depend package="task_recorder2_msgs"/>

</package><package name="ias_maps" path="/stacks/ias_nav/ias_maps" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="ias_maps">

     ias_maps

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ias_maps</url>
  <rosdep name="imagemagick"/>

</package><package name="bmc050_driver" path="/trunk/stacks/bosch_drivers/bmc050_driver" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="bmc050_driver">

     bmc050

  </description>
  <author>Joshua Vasquez, Philip Roan. Maintained by Philip Roan</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/bmc050</url>
  <depend package="bosch_drivers_common"/>

  <export>
    <cpp cflags="-I${prefix}/include/bmc050_driver" lflags="-L${prefix}/lib -lbmc050"/>
  </export>
  <export>
    <cpp cflags="-I${prefix}/include/bmc050_driver" lflags="-L${prefix}/lib -lbmc050_parameters"/>
  </export>

</package><package name="eros_apr" path="/trunk/packages/rosdeps/core/eros_apr" repo="eros" repo_host="https://code.ros.org/svn/eros">
  <description brief="Build recipe for cross-compiling the apache runtime">

	This provides a source package for compiling the apache runtime.
	Ordinarily this is not useful as you would install via your system's
	installation method (e.g. apt-get for ubuntu), but for cross-compiling 
    it provides the recipe needed to make a toolchain ros-ready.

  </description>
  <author>Daniel Stonier (d.stonier@gmail.com)</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/eros_apr</url>
  <depend package="eros_license"/>
  <depend package="eros_build"/>
</package><package name="cob_navigation_config" path="" repo="cob_navigation" repo_host="git://github.com/ipa320/cob_navigation">
  <description brief="cob_navigation_config">

    This package holds common configuration files for running the  <a href="http://ros.org/wiki/move_base">move_base</a> node and other navigation related nodes on the <a href="http://ros.org/wiki/care-o-bot">Care-O-bot</a>.

  </description>
  <author>Matthias Gruhler</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_navigation_config</url>

  <depend package="robot_pose_ekf"/>

</package><package name="flyatar_manual" path="" repo="flyatar" repo_host="http://github.com/peterpolidoro/Flyatar">
  <description brief="flyatar_manual">

     flyatar_manual

  </description>
  <author>Peter Polidoro</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/manual</url>
  <depend package="rospy"/>
  <depend package="joystick_commands"/>
  <depend package="stage_message_interface"/>

</package><package name="alica_turtle" path="" repo="cn-alica-ros-pkg" repo_host="https://code.google.com/p/cn-alica-ros-pkg">
  <description brief="alica_turtle">

     alica_turtle

  </description>
  <author>hendrik</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/alica_turtle</url>
  <depend package="AlicaEngine"/>
  <depend package="Castor"/>
  <depend package="roscs"/>
  <depend package="turtlesim"/>
  <depend package="std_msgs"/>
</package><package name="map_annotation" path="" repo="cram_highlevel" repo_host="https://github.com/moesenle/cram_highlevel">
  <description brief="map_annotation">

     map_annotation

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/map_annotation</url>
  <depend package="geometry_msgs"/>
  <depend package="rospy"/>
  <depend package="cram_reasoning"/>
  <depend package="cram_roslisp_common"/>
  <depend package="cl_transforms"/>

</package><package name="srs_object_database_msgs" path="" repo="srs_common" repo_host="git://github.com/ipa320/srs_common">
  <description brief="srs_object_database_msgs">

     srs_object_database_msgs

  </description>
  <author>Georg Arbeiter</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/srs_object_database_msgs</url>

  <depend package="pcl"/>
  <depend package="visualization_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="arm_navigation_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -l"/>
  </export>

</package><package name="test_pr2_2dnav_gazebo" path="/stacks/wg_robots_gazebo/trunk/test_pr2_2dnav_gazebo" repo="wg_robots_gazebo" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description>Test 2dnav stack in 3d sim.</description>
  <author>John Hsu</author>
  <license>BSD</license>
  <review notes="" status="NA"/>
  <url>http://pr.willowgarage.com/wiki/pr2_simulator</url>
  <depend package="pr2_gazebo_plugins"/>
  <depend package="gazebo_plugins"/>
  <depend package="gazebo_msgs"/>
  <depend package="map_server"/>
  <depend package="fake_localization"/>
  <depend package="robot_pose_ekf"/>
  <depend package="pr2_gazebo"/>
  <depend package="tf"/>
  <depend package="laser_assembler"/>
  <depend package="std_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="rviz"/>
  <depend package="rxtools"/>
  <depend package="pr2_2dnav_gazebo"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="phippi" path="" repo="TYROS" repo_host="https://github.com/tonuonu/TYROS">
  <description brief="phippi">

     phippi

  </description>
  <author>Tonu Samuel</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/phippi</url>
  <depend package="std_msgs"/>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="nav_msgs"/>
  <depend package="move_base"/>
  <depend package="map_server"/>
  <depend package="tyros_camera"/>
  <depend package="joint_state_publisher"/>
  <depend package="robot_state_publisher"/>

</package><package name="wm_arm_teleop" path="/penn_lightweight_teleop/trunk/wm_arm_teleop" repo="penn_lightweight_teleop" repo_host="https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs">
  <description brief="wm_arm_teleop">

     wm_arm_teleop

  </description>
  <author>Will McMahan</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/wm_arm_teleop</url>
  <depend package="roscpp"/>
  <depend package="trajectory_msgs"/>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="actionlib"/>
  <depend package="joint_trajectory_action"/>
  <depend package="kinematics_msgs"/>
  <depend package="tf"/>
  <depend package="penn_lightweight_teleop_msgs"/>
  <depend package="joy"/>
  <depend package="bullet"/>
  <depend package="angles"/>  

</package><package name="reem_machine" path="" repo="reem_common" repo_host="https://github.com/pal-robotics/reem_common">
  <description brief="reem_machine">
     This package contains the xxx.machine files that describe the different hosts a node can be spawned on.
  </description>
  <author>Adolfo Rodriguez Tsouroukdissian</author>
  <license>Modified BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/reem_machine</url>

</package><package name="rosie_arm_kinematics_test" path="/arm_navigation/rosie_arm_navigation/rosie_arm_kinematics_test" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="rosie_arm_kinematics_test">

     rosie_arm_kinematics_test

  </description>
  <author>Alexis Maldonado</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/kinematics_tutorials</url>
  <depend package="kinematics_msgs"/>

</package><package name="jtalk" path="/trunk/3rdparty/jtalk" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="jtalk">

     jtalk

  </description>
  <author>Nagoya Institute of Technology, Department of Computer
  Science. ROS package maintained by Kei Okada</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/jtalk</url>
  <depend package="sound_play"/>

</package><package name="message_to_tf" path="/branches/fuerte/hector_common/message_to_tf" repo="hector_common" repo_host="https://tu-darmstadt-ros-pkg.googlecode.com/svn">
  <description brief="message_to_tf translates pose information from different kind of common_msgs message types to tf.">

     message_to_tf translates pose information from different kind of common_msgs message types to tf. Currently the node supports nav_msgs/Odometry, geometry_msgs/PoseStamped and sensor_msgs/Imu messages as input.
     The resulting transform is divided into three subtransforms with intermediate frames for the footprint and the stabilized base frame (without roll and pitch).

  </description>
  <author>Johannes Meyer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/message_to_tf</url>

  <depend package="tf"/>
  <depend package="nav_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>

</package><package name="soem_core" path="" repo="soem" repo_host="http://git.mech.kuleuven.be/robotics/soem.git">
  <description brief="soem_core">

     SOEM is an open source EtherCAT master library written in c. Its
     primary target is Linux but can be adapted to other OS and
     embedded systems. (http://developer.berlios.de/projects/soem/)

     This package contains the original soem c code provided by the Technische Universiteit Eindhoven.

  </description>
  <author>Arthur Ketels and M.J.G. van den Molengraft; packaged by Ruben Smits</author>
  <license>GPL+linking exception</license>
  <review notes="" status="unreviewed"/>
  <url>http://developer.berlios.de/projects/soem</url>

  <export>
    <cpp cflags="-I${prefix}/build/soem_core/src" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lsoem_core"/>
  </export>
</package><package name="megatree_import" path="" repo="megatree" repo_host="http://kforge.ros.org/megatree/megatree">
  <description brief="megatree_import">

     megatree_import

  </description>
  <author>Wim Meeussen</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/megatree_import</url>
  <depend package="megatree_storage"/>
  <depend package="megatree_cpp"/>

</package><package name="sbpl_collision_checking" path="/sbpl_arm_planning/trunk/sbpl_collision_checking" repo="sbpl_arm_planning" repo_host="https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs">
  <description brief="SBPL 3D Collision Checking Library">

    Benjamin Cohen - University of Pennsylvania
    Advised by:
    Maxim Likhachev - Carnegie Mellon University

  </description>
  <author>Benjamin Cohen/bcohen@seas.upenn.edu</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.ros.org/wiki/sbpl_collision_checking</url>

	<depend package="roscpp"/>
	<depend package="angles"/>
  <depend package="kdl"/>
  <depend package="kdl_parser"/>
	<depend package="distance_field"/>
  <depend package="urdf"/>
	<depend package="bullet"/>
	<depend package="tf"/>
  <depend package="tf_conversions"/>
  <depend package="moveit_msgs"/>
  <depend package="geometric_shapes"/>
  <depend package="visualize_arm"/>
	<depend package="sensor_msgs"/>
  <depend package="message_filters"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="geometry_msgs"/>

  <depend package="planning_scene"/>
  <depend package="planning_scene_monitor"/>

  <depend package="sbpl_geometry_utils"/>
  <rosdep name="eigen"/>

  <export>
      <cpp cflags="-I${prefix}/include  -O3 -g" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lsbpl_collision_checking"/>
  </export>

</package><package name="wall_detection_service" path="/trunk/pr2_elevator/wall_detection_service" repo="ubc-ros-pkg" repo_host="https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg">
  <description>
    Detects planar structures (e.g., walls) from stereo cameras point clouds (usually generated using a texture projector).
  </description>

  <author>Radu Bogdan Rusu</author>
  <license>BSD</license>
  <url>http://pr.willowgarage.com</url>
  <review notes="beta" status="experimental"/>

  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="angles"/>
  <depend package="eigen"/>
  <depend package="visualization_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/srv/cpp"/>
  </export>
</package><package name="hrl_pr2_lib" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="hrl_pr2_lib">

      Collection of small useful utilities for interlab use of
      the PR2.

  </description>
  <author>haidai</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hrl_pr2_lib</url>
  <depend package="rospy"/>
  <depend package="tf"/>
  <!-- <depend package="pr2_laser_snapshotter"/> -->

  <depend package="kinematics_msgs"/>
  <depend package="hrl_lib"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="move_base_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="trajectory_msgs"/>
  <depend package="pr2_mechanism_msgs"/>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <!--<depend package="sound_play"/>-->

  <depend package="kinematics_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="pr2_arm_kinematics"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="actionlib"/>
  <depend package="pr2_gripper_reactive_approach"/>
  <depend package="pr2_msgs"/>
  <depend package="dynamic_reconfigure"/>

  <depend package="kdl"/>

  <depend package="object_manipulator"/>
  <depend package="pr2_gripper_sensor_msgs"/>
  <depend package="arm_navigation_msgs"/>
  <depend package="pr2_arm_navigation_perception"/>

</package><package name="rosserial_embeddedlinux" path="" repo="rosserial" repo_host="https://kforge.ros.org/rosserial/hg">
  <description brief="Libraries and examples for ROSserial usage on Embedded Linux Enviroments"/>
  <author>Paul Bouchier</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosserial_embeddedlinux</url>  

  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="rosserial_client"/>
  
</package><package name="armadillo_2wd" path="/trunk/vanadium_robots/armadillo_2wd" repo="vanadium-ros-pkg" repo_host="http://vanadium-ros-pkg.googlecode.com/svn">
  <description brief="armadillo_2wd">
    Definitions, applications, and launch files for the Vanadium Armadillo mobile manipulator.
  </description>
  <author>Michael E. Ferguson</author>
  <license>BSD</license>

  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/armadillo_2wd</url>

  <depend package="arbotix_python"/>
  <depend package="arbotix_controllers"/>
  <depend package="urdf"/>

</package><package name="ar_bounding_box" path="/public/tags/latest/object_scanning/ar_bounding_box" repo="roboearth" repo_host="https://ipvs.informatik.uni-stuttgart.de/roboearth/repos">
  <description brief="Object Recording using Multiple Markers and Kinect">
     
     <p>
     ar_bounding_box detects a set of marker patterns and creates a coordinate
     system and a bounding box around them. The point cloud inside this
     bounding box is published and can be used by re_object_recorder to create
     object models.
     </p>

     <p>
     This package is based on Michael Ferguson's <a href="http://www.ros.org/wiki/ar_kinect">ar_kinect</a> package.
     </p>

     <p>
     This package is part of RoboEarth (EU FP7, grant 248942).
     </p>
  </description>
  <author>Andreas Koch</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.ros.org/wiki/ar_bounding_box</url>
  <versioncontrol type="svn" url="https://ipvs.informatik.uni-stuttgart.de/roboearth/repos/release"/>
  <!--<export> <rosdoc external="http://roboearth.org/wiki"/> </export> -->
  <logo>http://www.roboearth.org/sites/default/files/RoboEarth.org_logo.gif</logo>

  <rosdep name="glut"/>
  <depend package="visualization_msgs"/>
  <depend package="artoolkit"/>
  <depend package="ar_pose"/>
  <depend package="geometry_msgs"/>
  <depend package="tf"/>
  <depend package="pcl_ros"/>
  <depend package="pcl"/>
  <depend package="opencv2"/>
  <depend package="image_transport"/>
  <depend package="cv_bridge"/>
  <depend package="roscpp"/>
</package><package name="visualization_msgs" path="/stacks/common_msgs/trunk/visualization_msgs" repo="common_msgs" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Visualization Messages">

<p>
visualization_msgs is a set of messages used by higher level packages, such as <a href="/wiki/rviz">rviz</a>, that deal in visualization-specific data.
</p>
<p>
The main messages in visualization_msgs is <tt>visualization_msgs/Marker</tt>.  The marker message is used to send visualization &quot;markers&quot; such as boxes, spheres, arrows, lines, etc. to a visualization environment such as <a href="http:///www.ros.org/wiki/rviz">rviz</a>.  See the rviz tutorial <a href="http://www.ros.org/wiki/rviz/Tutorials">rviz tutorials</a> for more information.
</p>
  </description>
  <author>Josh Faust/jfaust@willowgarage.com, David Gossow/dgossow@willowgarage.com</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/visualization_msgs</url>

  <depend package="geometry_msgs"/>
  <depend package="std_msgs"/>

  <export>
    <cpp cflags="`PKG_CONFIG_PATH=${prefix}/../../lib/pkgconfig pkg-config --cflags visualization_msgs`" lflags="`PKG_CONFIG_PATH=${prefix}/../../lib/pkgconfig pkg-config --libs visualization_msgs`"/>
  </export>

</package><package name="cl_bullet" path="" repo="cram_physics" repo_host="https://github.com/moesenle/cram_physics">
  <description brief="cl_bullet">

     A Common Lisp wrapper of the bullet physics engine

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cl_bullet</url>
  <depend package="roslisp_runtime"/>
  <depend package="bullet"/>
  <depend package="cffi"/>
  <depend package="cffi_ros_utils"/>
  <depend package="trivial_garbage"/>
  <depend package="split_sequence"/>
  <depend package="cl_transforms"/>
  <depend package="cram_utilities"/>
  <export>
    <cpp lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lbullet_cl"/>
  </export>

</package><package name="nxt_robot_kit_test" path="" repo="foote-nxt" repo_host="https://nxt.foote-ros-pkg.googlecode.com/hg/">
  <description brief="nxt_robot_kit_test">

     nxt_robot_kit_test provides a simple birkc with sensors attached to get a feel for ROS and NXT.

  </description>
  <author>Melonee Wise</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/nxt_robot_kit_test</url>

  <depend package="robot_state_publisher"/>
  <depend package="nxt_ros"/>
  <depend package="nxt_msgs"/>
  <depend package="nxt_description"/>

</package><package name="pointcloud_snapshot_service" path="/trunk/stacks/bosch_web_visualization/pointcloud_snapshot_service" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="pointcloud_snapshot_service">

     pointcloud_snapshot_service

  </description>
  <author>Sarah Osentoski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pointcloud_snapshot_service</url>
  <depend package="roscpp"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="sensor_msgs"/>
</package><package name="rtcus_conversions" path="/trunk/rtcus_mobile_robots/rtcus_conversions" repo="rtc-us-ros-pkg-trunk" repo_host="https://rtc-us-ros-pkg.svn.sourceforge.net/svnroot/rtc-us-ros-pkg">
	<description brief="rtcus_conversions">

		Conversions between data types is extremely important in a platform like ROS
		which tries to integrate and unify huge set of software packages. This package
		provides a generic typed and extensible c++ library with only one function:
		convert (srcType,dstType). It is based on template specialization. Here an example:

template&lt;&gt;
  inline void Conversions::convert&lt;Twist2D, Twist&gt;(const Twist2D&amp; src, Twist&amp; dst)
  {
    dst.linear.x = src.linear;
    dst.linear.y = src.lateral;
    dst.angular.z = src.angular;
  }
  		
		
		New conversions included in this library will be added by demand and it is open
		to contributions.

	</description>
	<author>Pablo Iñigo Blasco</author>
	<license>BSD</license>
	<review notes="" status="unreviewed"/>
	<url>http://ros.org/wiki/rtcus_conversions</url>

	<export>
		<cpp cflags="-I${prefix}/include -I${prefix}/cfg/cpp -I${prefix}/msg_gen/cpp/include" lflags="-L${prefix}/lib -lrtcus_conversions"/>
	</export>

	<depends package="roscpp"/>
	<depend package="mrpt_bridge"/>
	<depend package="geometry_msgs"/>
	<depend package="sensor_msgs"/>
	<depend package="rtcus_nav_msgs"/>
	<depend package="nav_msgs"/>
	<depend package="laser_geometry"/>
</package><package name="simmechanics_tutorial" path="/branches/stable/urdf_tools/simmechanics_tutorial" repo="wu-ros-pkg" repo_host="https://wu-robotics.googlecode.com/svn">
  <description brief="SimMechanics to URDF tutorial example">
    Files for the SimMechanics to URDF tutorial example
  </description>
  <author>David V. Lu!!</author>
  <license>BSD</license>
  <url>http://www.ros.org/wiki/simmechanics_to_urdf/Tutorials/Converting%20SimMechanics%20To%20URDF</url>
  <depend package="simmechanics_to_urdf"/>

</package><package name="kinect_utils" path="/trunk/stacks/tuc_pelican/kinect_utils" repo="tuc-ros-pkg" repo_host="https://borstel.etit.tu-chemnitz.de:8080/svn/tuc-ros-pkg">
  <description brief="kinect_utils">

     This packages contains a node that processes the 3D point cloud provided by the kinect sensor to identify walls, obstacles, and the position and orientation of the sensor inside a corridor. The node generates a trajectory to navigate down the corridor.


  </description>
  <author>Niko Suenderhauf, Peer Neubert</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/kinect_utils</url>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="pcl"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="image_transport"/>
  <depend package="visualization_msgs"/>

</package><package name="vision_srvs" path="" repo="ias_common" repo_host="http://code.in.tum.de/git/ias-common.git">
  <description>Cognitive Perception Server</description>
  <author>Ulrich F Klank</author>
  <license>Closed</license>
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>  
  <depend package="vision_msgs"/>
  <depend package="arm_navigation_msgs"/>
  <export>
        <cpp cflags="-I${prefix}/srv/cpp"/>
   </export>
</package><package name="ds_master_executive" path="/trunk/stacks/drink_serving/ds_master_executive" repo="bosch-ros-pkg-e" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg-e/code">
  <description brief="ds_master_executive">

     drink_executive

  </description>
  <author>Ben Pitzer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ds_master_executive</url>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="std_srvs"/>
  <depend package="ds_turtle_2dnav"/>
  <depend package="ds_common_msgs"/>
  <depend package="ds_fridge_manipulation_executive"/>
  <depend package="turtlebot_node"/>
  <depend package="busbot_node"/>
</package><package name="urdf_tutorial" path="" repo="robot_model_tutorials" repo_host="https://kforge.ros.org/robotmodel/tutorials">
  <description brief="Code for some URDF Tutorials">
    Support code for the step by step URDF tutorials on ROS.org
  </description>
  <author>David Lu!!</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/urdf_tutorial</url>

</package><package name="sbpl_two_arm_planner" path="/sbpl_arm_planning/trunk/sbpl_two_arm_planner" repo="sbpl_arm_planning" repo_host="https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs">
  <description brief="sbpl_two_arm_planner">

     sbpl_two_arm_planner

  </description>
  <author>Benjamin Cohen</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sbpl_two_arm_planner</url>
  <depend package="sbpl_arm_planner"/>
  <depend package="roscpp"/>
  <depend package="geometric_shapes"/>
  <depend package="tf"/>
  <depend package="tf_conversions"/>
  <depend package="geometry_msgs"/>

    <export>
          <cpp cflags="-I${prefix}/include  -O3 -g" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lsbpl_two_arm_planner"/>
    </export>

</package><package name="android_tutorial_image_transport" path="" repo="android_core" repo_host="https://code.google.com/p/rosjava.android/">
  <description brief="android_image_transport_tutorial">
    android_image_transport_tutorial
  </description>
  <author>Damon Kohler</author>
  <license>Apache 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/android_image_transport_tutorial</url>
</package><package name="pursuit" path="" repo="cmr-ros-pkg" repo_host="lp:cmr">
  <description brief="pursuit">

     pursuit

  </description>
  <author/>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pursuit</url>
  <depend package="base_local_planner"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="costmap_2d"/>
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="tf"/>
  <depend package="voxel_grid"/>
  <depend package="angles"/>
  <depend package="visualization_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="nav_core"/>
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lbase_local_planner"/>
    <nav_core plugin="${prefix}/blp_plugin.xml"/>
  </export>
</package><package name="maximus_setup_tf" path="" repo="smart-robotics-ros-pkg" repo_host="https://github.com/JBot/smart-robotics-ros-pkg">
  <description brief="maximus_setup_tf">

     maximus_setup_tf

  </description>
  <author>Joffrey</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/maximus_setup_tf</url>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="geometry_msgs"/>

</package><package name="hrl_cvblobslib" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="hrl_cvblobslib">

     hrl_cvblobslib

  </description>
  <author>kelsey</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hrl_cvblobslib</url>
  <depend package="roscpp"/>
  <depend package="opencv2"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lcvblobslib"/>
  </export>

</package><package name="teleop_ros" path="" repo="generic_teleop" repo_host="https://github.com/skynetish/generic_teleop">

  <!-- Package summary -->
  <description brief="Tele-operation nodes and utilities for ROS.">

    This package provides ROS nodes and utilities related to tele-operation.

    The teleop_source_ros node determines and publishes the state of a given
    teleop source device (e.g. a keyboard, a joystick, etc.).

    The teleop_sink_twist_ros node subscribes to the state of a given teleop
    source device (e.g. keyboard, joystick, etc.), and converts this state
    into a generic twist message, which is then published.

    The twist.sh utility simply publishes twist values to a given twist topic.

  </description>
  <author>Kevin LeBlanc (kevin.canadian@gmail.com)</author>
  <license>BSD</license>
  <url>https://github.com/skynetish/generic_teleop/wiki</url>

  <!-- External dependencies -->
  <rosdep name="boost"/>

  <!-- Package dependencies -->
  <depend package="teleop_framework"/>
  <depend package="teleop_source_keyboard"/>
  <depend package="teleop_source_joystick"/>
  <depend package="teleop_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="roscpp"/>

</package><package name="w2_arm_navigation_tests" path="/trunk/arrg/ua_experimental/w2_arm_navigation_tests" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
  <description brief="w2_arm_navigation_tests">
     w2_arm_navigation_tests
  </description>

  <author>Antons Rebguns</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/w2_arm_navigation_tests</url>

  <depend package="actionlib"/>
  <depend package="planning_environment"/>
  <depend package="wubble_arm_kinematics"/>

  <depend package="arm_navigation_msgs"/>
  <depend package="kinematics_msgs"/>
  <depend package="actionlib_msgs"/>
  <depend package="control_msgs"/>
</package><package name="cob_lightmode" path="" repo="cob_driver" repo_host="git://github.com/ipa320/cob_driver">
  <description brief="cob_lightmode">

     This package contains routines to control the robots light by sound or with different operation modies

  </description>
  <author>Benjamin Maidel</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_lightmode</url>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="cob_light"/>

  <rosdep name="libgtkmm-dev"/>
  <rosdep name="libfftw3-dev"/>
  <rosdep name="libasound2-dev"/>
  <rosdep name="libpulse-dev"/>

</package><package name="point_cloud_ros" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="Using PCL, interfacing it with python etc.">
  </description>
  <author>Advait Jain (Healthcare Robotics Lab, Georgia Tech)</author>
  <license>New BSD</license>
  <depend package="rospy"/>
  <depend package="std_srvs"/>
  <depend package="std_msgs"/>

  <depend package="geometry_msgs"/>
  <depend package="pcl"/>

  <depend package="hrl_lib"/>
  <depend package="hrl_tilting_hokuyo"/>
  <depend package="visualization_msgs"/>

  <rosdep name="mayavi2"/>

</package><package name="opencv_ros_bridge_tutorial" path="/trunk/agentsystem_ros_tutorials/opencv_ros_bridge_tutorial" repo="rtm-ros-robotics/agentsystem_ros_tutorials" repo_host="https://rtm-ros-robotics.googlecode.com/svn">
  <description brief="opencv_ros_bridge_tutorial">

     opencv_ros_bridge_tutorial

  </description>
  <author>Kei Okada</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/opencv_ros_bridge_tutorial</url>
  <depend package="sensor_msgs"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="image_transport"/>
  <depend package="dynamic_reconfigure"/>

</package><package name="pipeline_finder" path="/trunk/cturtle/pipeline_finder" repo="seabee3-ros-pkg" repo_host="http://seabee3-ros-pkg.googlecode.com/svn">
  <description brief="pipeline_finder">

     pipeline_finder

  </description>
  <author>Randolph Voorhies</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pipeline_finder</url>
  <depend package="base_libs"/>
  <depend package="color_blob_finder"/>
  <depend package="opencv2"/>
  
  <cpp cflags="-std=c++0x"/>
  

</package><package name="sim_clock" path="/trunk/hwu_osl_software/sim_clock" repo="hwu-osl-ros-pkg" repo_host="http://hwu-osl-ros-pkg.googlecode.com/svn">
  <description brief="sim_clock">

     sim_clock

  </description>
  <author>Joel Cartwright</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sim_clock</url>
  <depend package="roscpp"/>
  <depend package="osl_core"/>

</package><package name="pr2eus_tutorials" path="/trunk/pr2eus_tutorials" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="pr2eus_tutorials">

     pr2eus_tutorials

  </description>
  <author>JSK PR2 Group</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2eus_tutorials</url>

  <depend package="roseus"/>
  <depend package="pr2_gazebo"/>
  <depend package="pr2_interactive_manipulation"/>

</package><package name="art_pilot" path="/trunk/stacks/art_vehicle/art_pilot" repo="utexas-art-ros-pkg" repo_host="http://utexas-art-ros-pkg.googlecode.com/svn">
  <description brief="ART vehicle pilot">

     Servo coordination for the ART autonomous vehicle.

  </description>
  <author>Austin Robot Technology, Jack O'Quin</author>
  <license>BSD</license>
  <review notes="2011-04-13" status="API reviewed"/>
  <url>http://www.ros.org/wiki/art_pilot</url>

  <depend package="angles"/>
  <depend package="art_common"/>
  <depend package="art_msgs"/>
  <depend package="driver_base"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="roscpp"/>
  <depend package="roslib"/>
  <depend package="rospy"/>
  <depend package="std_msgs"/>

</package><package name="hector_turtlebot_apps" path="/trunk/hector_turtlebot/hector_turtlebot_apps" repo="hector_turtlebot" repo_host="https://tu-darmstadt-ros-pkg.googlecode.com/svn">
  <description brief="hector_turtlebot_apps provides launch files for launching move_base, SLAM and AMCL localization on the hector_turtlebot">

     hector_turtlebot_apps provides launch files for launching move_base, SLAM and AMCL localization on the hector_turtlebot

  </description>
  <author>Stefan Kohlbrecher</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hector_turtlebot_apps</url>

</package><package name="nodemon_py" path="" repo="node_monitoring" repo_host="http://github.com/timn/ros-node_monitoring">
  <description brief="nodemon_py">

     nodemon_py

  </description>
  <author>Tim Niemueller</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/nodemon_py</url>
  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>
  <depend package="rospy"/>
  <depend package="nodemon_msgs"/>
</package><package name="vslam_system" path="/stacks/vslam/trunk/vslam_system" repo="vslam" repo_host="https://code.ros.org/svn/ros-pkg">
  <description>
    VSLAM applications (visual odometry, visual SLAM, stereo and monocular)
  </description>
  <author>Kurt Konolige, Patrick Mihelich, Helen Oleynikova</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>

  <depend package="roscpp"/>
  
  <depend package="image_transport"/>
  <depend package="image_geometry"/>
  <rosdep name="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="message_filters"/>
  
  <depend package="pcl"/>
  <depend package="tf"/>
  <depend package="std_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="sensor_msgs"/>
  <depend package="stereo_msgs"/>
  
  <depend package="sba"/>
  <depend package="posest"/>
  <depend package="vocabulary_tree"/>

  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lvo"/>
    <rosdoc config="rosdoc.yaml"/>
  </export>

</package><package name="throttled_transport" path="" repo="ethzasl_message_transport" repo_host="https://github.com/ethz-asl/ros-message-transport">
  <description brief="throttled_transport">

     throttled_transport

  </description>
  <author>Cedric Pradalier</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/throttled_transport</url>
  <depend package="std_msgs"/> <!-- for testing -->
  <depend package="message_transport_common"/>

  <export>
      <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lthrottled_transport"/>
  </export>


</package><package name="power_msgs" path="" repo="power_supplies" repo_host="http://ram.umd.edu/git/ros/power_supplies.git">
  <description brief="power_msgs">

     power_msgs

  </description>
  <author/>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/power_msgs</url>

  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp -I${prefix}/srv/cpp" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib"/>
  </export>
</package><package name="read_text" path="/literate_pr2/trunk/read_text" repo="literate_pr2" repo_host="https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs">
  <description brief="read_text">

     Detect and recognize text from indoor environment.  

  </description>
  <author>Menglong Zhu: menglong(at)seas.upenn.edu</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/read_text</url>
  <depend package="opencv2"/>
  <depend package="roscpp"/>
  <depend package="tesseract"/>
  <export>
      <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,-L${prefix}/lib -lread_text"/>
  </export>
</package><package name="world_magnetic_model" path="/trunk/hector_localization/world_magnetic_model" repo="hector_localization" repo_host="https://tu-darmstadt-ros-pkg.googlecode.com/svn">
  <description brief="world_magnetic_model">

     world_magnetic_model

  </description>
  <author>Johannes Meyer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/world_magnetic_model</url>

  <export>
    <rosdoc external="http://www.ngdc.noaa.gov/geomag/WMM/DoDWMM.shtml"/>
    <cpp cflags="-I${prefix}/src" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lworld_magnetic_model"/>
  </export>

</package><package name="turtlebot_description" path="" repo="turtlebot" repo_host="https://kforge.ros.org/turtlebot/turtlebot">
  <description brief="turtlebot_description">

     turtlebot_description provides a complete 3D model of the TurtleBot for simulation and visualization. The files in this package are parsed and used by a variety of other components. Most users will not interact directly with this package.
  </description>
  <author>Melonee Wise</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/turtlebot_description</url>
  <depend package="urdf"/>
  <depend package="xacro"/>

</package><package name="interface_testing" path="" repo="pandora-auth-ros-pkg" repo_host="https://github.com/pandora-auth-ros-pkg/pandora-auth-ros-pkg">
  <description brief="interface_testing">

    Utility Classes for testing ROS Node Interfaces

  </description>
  <author>Miltiadis Allamanis, Pelagia Amanatidou, Marina Stamatiadou</author>
  <license>MIT</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/interface_testing</url>
  <depend package="roscpp"/>
  <depend package="actionlib"/>
  <depend package="diagnostic_updater"/>
  
   <export>
	<cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib"/>
  </export>
	
</package><package name="arbotix_controllers" path="/trunk/arbotix/arbotix_controllers" repo="vanadium-ros-pkg" repo_host="http://vanadium-ros-pkg.googlecode.com/svn">
  <description brief="Basic controllers for ArbotiX connected devices">
    Extends the arbotix_node package with a number of more sophisticated ROS wrappers for common devices. 
  </description>
  <author>Michael Ferguson</author>
  <license>BSD</license>

  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/arbotix_controllers</url>

  <depend package="arbotix_python"/>
  <depend package="trajectory_msgs"/>
  <depend package="tf"/>
</package><package name="recovery_tutorials" path="/trunk/stacks/recovery_shared_autonomy/recovery_tutorials" repo="bosch-ros-pkg-e" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg-e/code">
  <description brief="recovery_tutorials">

     Tutorials scripts on how to use smach with recovery behaviors

  </description>
  <author>Bharath Sankaran</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/recovery_tutorials</url>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="smach_recovery"/>
  <depend package="smach_recovery_ros"/>
  <depend package="recovery"/>
  <depend package="tf"/>
  <depend package="geometry_msgs"/>
  <depend package="roslib"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="tf_conversions"/>
  <depend package="object_manipulation_msgs"/>
  <depend package="object_manipulator"/>
  <depend package="tabletop_object_detector"/>
  <depend package="tabletop_collision_map_processing"/>
  <depend package="household_objects_database"/>
  <depend package="pr2_gripper_reactive_approach"/>
  <depend package="simple_Jtranspose_controller"/>
  <!--depend package="pr2_tabletop_manipulation_launch"/-->
  <!--depend package="pr2_pick_and_place_demos"/-->

</package><package name="turtlebot_arm_bringup" path="" repo="turtlebot_arm" repo_host="https://kforge.ros.org/turtlebot/turtlebot_arm">
  <description brief="turtlebot_arm_bringup">
     turtlebot_arm_bringup provides launch files for starting the drivers for the TurtleBot arm.
  </description>
  <author>Melonee Wise, Helen Oleynikova, Michael Ferguson</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/turtlebot_arm_bringup</url>
  
  <depend package="arbotix_python"/>
  <depend package="arbotix_controllers"/>
  <depend package="planning_environment"/>
  <depend package="simple_arm_server"/>
  <depend package="arm_kinematics_constraint_aware"/>
</package><package name="maxwell_calibration" path="/trunk/maxwell/maxwell_calibration" repo="vanadium-ros-pkg" repo_host="http://vanadium-ros-pkg.googlecode.com/svn">
  <description brief="maxwell_calibration">
    Launch and configuration files for calibrating Maxwell using the new generic 'calibration' stack.
  </description>
  <author>Michael Ferguson</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/maxwell_calibration</url>

  <depend package="calibration_launch"/>
  <depend package="calibration_estimation"/>

  <!-- For running tests -->
  <depend package="pr2_calibration_launch"/>
  <depend package="kdl"/>
  <depend package="kdl_parser"/>
</package><package name="husky_interactive_markers" path="" repo="clearpath_husky" repo_host="https://github.com/clearpathrobotics/clearpath_husky">
  <description brief="Interactive control for the Husky.">

    An interactive markers package for Husky.

  </description>
  <author>Ryan Gariepy</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/husky_interactive_markers</url>
 
  <depend package="roscpp"/>
  <depend package="visualization_msgs"/>
  <depend package="interactive_markers"/>

</package><package name="turtle_tf" path="" repo="geometry_tutorials" repo_host="https://kforge.ros.org/geometry/tutorials">
  <description brief="turtle_tf">

     turtle_tf demonstrates how to write a tf broadcaster and listener with the turtlesim. The tutle_tf_listener commands turtle2 to follow turtle1 around as you drive turtle1 using the keyboard.

  </description>
  <author>James Bowman</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/turtle_tf</url>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="turtlesim"/>
  <depend package="tf"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="chameleon_firmware" path="/trunk/clearpath_chameleon/chameleon_firmware" repo="clearpath-ros-pkg" repo_host="http://clearpath-ros-pkg.googlecode.com/svn">
  <description brief="chameleon_firmware">

     chameleon_firmware

  </description>
  <author>Mike Purvis</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/chameleon_firmware</url>
  <depend package="rosserial_arduino"/>
  <depend package="std_msgs"/>
  <depend package="chameleon_msgs"/>
</package><package name="moving_object" path="" repo="itasc_robots_objects" repo_host="http://git.mech.kuleuven.be/robotics/itasc_robots_objects.git">
    <description brief="Moving Object">
        This package contains a Moving Object, which is an itasc object
	Part of the iTaSC-Skill framework, itasc_robots_objects.
    </description>
    <license>BSD,LGPL</license>
    <author>Dominick Vanthienen</author>
    <url>http://www.orocos.org/itasc</url>
    <depend package="rtt"/>
    <rosdep name="eigen"/>
    <depend package="orocos_kdl"/>
    <depend package="ocl"/>
    <depend package="itasc_core"/>
</package><package name="lwr_dashboard" path="" repo="lwr_gui" repo_host="https://github.com/RCPRG-ros-pkg/lwr_gui">
  <description brief="lwr_dashboard">

    lwr_dashboard

  </description>
  <author>Maciej Stefańczyk</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url/>

  <depend package="rxtools"/>
  <depend package="robot_monitor"/>
  <depend package="std_msgs"/>
  <depend package="std_srvs"/>
  <depend package="rospy"/>
  <depend package="roslib"/>

</package><package name="cob_generic_can" path="" repo="cob_driver" repo_host="git://github.com/ipa320/cob_driver">
  <description brief="cob_generic_can">

     The package cob_generic_can provides an interface for nodes on a can-bus and examplary wrappers for two PeakSys-can-libs. When a can-bus-device is generated (for an example see base_dirve_chain) you can use generic_can to create as many itfs as there will be components communicating via this can-bus. Assign type of the can communication device (e.g. usb-to-can or can-card of a specific vendor) and can-address of the target device. This package comes with wrappers for PeakSys and PeakSysUSB adapters.

  </description>
  <author>Christian Connette</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_generic_can</url>

  <!-- Dependencies from other packages or external libs-->
  <depend package="roscpp"/>
  <depend package="cob_utilities"/>
  <depend package="libpcan"/>
  <depend package="libntcan"/>

  <!-- As we deviate from the standard ROS Repository-Structure we have to tell ROS where to find header and lib -->
  <export>
    <cpp cflags="-I${prefix}/common/include" lflags="-Wl,-rpath,${prefix}/common/lib -L${prefix}/common/lib -lcob_generic_can_peaksysusb -lcob_generic_can_peaksys -lcob_generic_can_esd"/>
  </export>

</package><package name="simulator_bridge" path="/stacks/wu_utils/trunk/simulator_bridge" repo="wu-ros-pkg" repo_host="https://wu-ros-pkg.svn.sourceforge.net/svnroot/wu-ros-pkg">
  <description brief="simulator_bridge">

     simulator_bridge

  </description>
  <author>Erik Karulf</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/simulator_bridge</url>
  <depend package="rospy"/>
  <depend package="rosmultimaster"/>
  <depend package="tf"/>
  <depend package="basic_utils"/>
  <depend package="roslaunch_tools"/>
</package><package name="sub20_interface" path="/trunk/stacks/bosch_drivers/sub20_interface" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="sub20_interface">

     The sub20_interface class contains details specific to 
     interfacing sensors with software using a sub20 as
     the physical hardware interface. The sub20 passes data to 
     higher-level software via a usb connection.
     
     Finally, this class inherits the bosch_hardware_interface
     base class. In this manner, specific sensor_driver classes can 
     access sensor data through the virtual functions provided by 
     the parent bosch_hardware_interface class.
     
  </description>
  <author>Joshua Vasquez and Philip Roan. Maintained by Philip Roan</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sub20_interface</url>
  <depend package="roscpp"/>
  <depend package="bosch_drivers_common"/>
  <depend package="sub20"/>
  
  <!-- Export the header files so library can be used by other packages. -->
  <export>
    <cpp cflags="-I${prefix}/include/sub20_interface" lflags="-L${prefix}/lib -lsub20_interface"/>
  </export>

</package><package name="navigation_task" path="" repo="continuous_ops" repo_host="https://kforge.ros.org/contops/hg">
  <description brief="navigation_task">

     navigation_task

  </description>
  <author>Eitan Marder-Eppstein</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/navigation_task</url>
  <depend package="move_base_msgs"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="continuous_ops_msgs"/>
  <depend package="continuous_ops_task_manager"/>
  <depend package="smach"/>
  <depend package="smach_ros"/>
  <depend package="roslib"/>
  <depend package="rospy"/>
  <depend package="pr2_common_action_msgs"/>
  <depend package="pr2_controllers_msgs"/>
</package><package name="bmp085" path="/trunk/stacks/bosch_drivers/bmp085" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="bmp085">

     This package contains a driver for the Bosch Sensortec BMP085 barometric pressure sensor. A specific implementation of the driver using a Sub20 device from Xdimax is also included. This implementation can be modified to work with other hardware interfaces, such as the Arduino.

  </description>
  <author>Philip Roan</author>
  <license>Apache 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/bmp085</url>
  <depend package="roscpp"/>
  <depend package="sub20"/>

</package><package name="app_manager_android" path="" repo="multimaster_experimental" repo_host="https://kforge.ros.org/appmanandroid/multimaster_experimental">
  <description brief="app_manager_android">

     Code to assist using app_manager with Android.

  </description>
  <author>Ken Conley</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/app_manager_android</url>
  <depend package="pyqrnative"/>
  <depend package="roslib"/>

</package><package name="amtec" path="/trunk/stacks/bosch_drivers/amtec" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="driver for Schunk(formerly Amtec) pan-tilt unit">A driver for the Schunk(formerly Amtec) pan-tilt unit. Provides a library, ROS wrapper, test program and ROS node for sweeping the unit. </description>
  <author>Charles DuHadway, Benjamin Pitzer (Maintained by Benjamin Pitzer)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="tf"/>  
  <export>
    <cpp cflags="-I${prefix}/msg/cpp -I${prefix}/srv/cpp"/>
  </export>
</package><package name="tvmet" path="/trunk/rtmros_common/tvmet" repo="rtm-ros-robotics/rtmros_common" repo_host="https://rtm-ros-robotics.googlecode.com/svn">
  <description brief="tvmet">

     tvmet

  </description>
  <author>Olaf Petzold, ROS Package maintained by Kei Okada</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/tvmet</url>
  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>
</package><package name="multiview" path="/trunk/multiview" repo="stanford-ros-pkg" repo_host="https://stanford-ros-pkg.googlecode.com/svn">
  <description brief="multiview">

     Object recognition from multiple views

  </description>
  <author>Jiahui Shi</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/multiview</url>
  <depend package="opencv2"/>
  <depend package="roscpp"/>
  <depend package="prosilica_camera"/>
  <depend package="polled_camera"/>  
  <depend package="tf"/>
  <depend package="ancient_powercube"/>
  <depend package="cv_bridge"/>
  <depend package="sensor_msgs"/>
  <depend package="std_msgs"/>

</package><package name="r2_dynamic_reconfigure" path="" repo="nasa_r2_common" repo_host="https://bitbucket.org/nasa_ros_pkg/nasa_r2_common">
  <description brief="r2_dynamic_reconfigure">

     r2_dynamic_reconfigure

  </description>
  <author>Paul Dinh</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/r2_dynamic_reconfigure</url>
  <depend package="dynamic_reconfigure"/>

</package><package name="wge100_camera_firmware" path="/stacks/wge100_driver/trunk/wge100_camera_firmware" repo="wge100_driver" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Source for the WGE100 Ethernet camera">
    Source for the WGE100 Ethernet camera: Verilog source for the
    FPGA, Forth source for the camera firmware.  Intended for camera
    developers.  Note that a built binary from this package is checked
    in under wge100_camera/firmware_images/
  </description>
  <author>James Bowman, Blaise Gassend. MAC by Jared Casper and Morgan Quigley</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <depend package="rostest"/>
  <depend package="rospy"/>
  <rosdep name="gforth"/>
  <url>http://ros.org/wiki/wge100_camera_firmware</url>
  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>
</package><package name="ur5_gazebo" path="" repo="universal_robot" repo_host="https://kforge.ros.org/ros_industrial/universal_robot">
  <description brief="ur5_gazebo">

     ur5_gazebo

  </description>
  <author>Alexander Bubeck</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ur5_gazebo</url>
  <depend package="ur5_description"/>

</package><package name="sbl_launch" path="/trunk/sbl_experimental/sbl_launch" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="sbl_launch">

     sbl_launch

  </description>
  <author>Edward T. Kaszubski ( ekaszubski@gmail.com )</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sbl_launch</url>
</package><package name="robot_learning_language" path="" repo="roll" repo_host="http://code.in.tum.de/git/roll.git">
  <description brief="robot_learning_language">
    The Robot Learning Language: Extensions of the CRAM Plan Language to integrate experience-based learning into CRAM plans
  </description>
  <author>Alexandra Kirsch</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/robot_learning_language</url>
  <depend package="cram_language"/>
  <depend package="designators"/>
  <depend package="cl_libsvm"/>
  <depend package="cl_port"/>
  <depend package="clsql"/>
  <depend package="clmd5"/>
  <depend package="cffi"/>
  <depend package="uffi"/>
  <depend package="babel"/>
</package><package name="android_tutorial_camera" path="" repo="android_core" repo_host="https://code.google.com/p/rosjava.android/">
  <description brief="android_camera_tutorial">
     android_camera_tutorial
  </description>
  <author>Damon Kohler (damonkohler@google.com)</author>
  <license>Apache 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/android_camera_tutorial</url>
</package><package name="interactive_marker_tutorials" path="/stacks/visualization_tutorials/branches/visualization_tutorials-0.6/interactive_marker_tutorials" repo="visualization_tutorials" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="marker_tutorials">

     interactive_marker_tutorials

  </description>
  <author>David Gossow</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/marker_tutorials</url>
  <depend package="roscpp"/>
  <depend package="visualization_msgs"/>
  <depend package="interactive_markers"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="bullet_reasoning_designators" path="" repo="cram_physics" repo_host="https://github.com/moesenle/cram_physics">
  <description brief="bullet_reasoning_designators">

     bullet_reasoning_designators

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/bullet_reasoning_designators</url>
  <depend package="cram_reasoning"/>
  <depend package="designators_ros"/>
  <depend package="cram_utilities"/>
  <depend package="bullet_reasoning"/>
  <depend package="cram_designators"/>
  <depend package="location_costmap"/>
  <depend package="cram_environment_representation"/>

</package><package name="pr2_doors_gazebo_demo" path="/stacks/wg_robots_gazebo/trunk/pr2_doors_gazebo_demo" repo="wg_robots_gazebo" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description>Launch files for door opening in Gazebo.</description>
  <author>John Hsu</author>
  <license>BSD</license>
  <review notes="" status="na"/>
  <url>http://pr.willowgarage.com/wiki/FIXME</url>

  <depend package="pr2_doors_executive"/>
  <depend package="pr2_doors_actions"/>
  <depend package="actionlib"/>
  <depend package="pr2_gazebo"/>
  <depend package="pr2_controller_manager"/>
  <depend package="gazebo_tools"/>
  <depend package="rostopic"/>
  <depend package="pr2_tuckarm"/>
  <depend package="gazebo"/>
  <depend package="ros_epic_fail"/>
  <depend package="move_base_msgs"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="robotino_grappler_description" path="/robotino-ros-pkg/trunk/robotino_grappler/robotino_grappler_description" repo="robotino-ros-pkg" repo_host="http://svn.openrobotino.org">
  <description brief="robotino_grappler_description">

urdf, xacro and mesh files for robotino's grappler

  </description>
  <author>indorewala@servicerobotics.eu</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/robotino_grappler_description</url>

</package><package name="loopback_controller_manager" path="/arm_navigation/loopback_controller_manager" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="loop back simulation for pr2 realtime controllers">
    controller manager that does a very simple simulation of joints:
    It just &quot;loops back&quot; effort to joint velocity / position.
  </description>
  <author>Ingo Kresse</author>
  <license>BSD</license>
  <review status="unreviewed"/>
  <depend package="roscpp"/>
  <depend package="robot_mechanism_controllers"/>
  <depend package="pr2_hardware_interface"/>
  <depend package="pr2_controller_manager"/>
  <depend package="pr2_mechanism_model"/>
  <depend package="tinyxml"/>
  <depend package="urdf"/>

</package><package name="laser_scan_matcher" path="" repo="scan_tools" repo_host="https://github.com/ccny-ros-pkg/scan_tools">
  <description brief="laser_scan_matcher">

     An incremental laser scan matcher, using Andrea Censi's Canonical Scan Matcher implementation.
     More about CSM: http://www.cds.caltech.edu/~andrea/research/sw/csm.html

  </description>
  <author>Ivan Dryanovski, William Morris</author>
  <license url="http://www.opensource.org/licenses/BSD-3-Clause">BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/laser_scan_matcher</url>
  <depend package="roscpp"/>
  <depend package="nodelet"/>
  <depend package="sensor_msgs"/>
  <depend package="tf"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="csm"/>

  <export>
    <nodelet plugin="${prefix}/laser_scan_matcher_nodelet.xml"/>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg_gen/cpp/include"/>
  </export>

</package><package name="arm_navigation_tutorials" path="" repo="wpdros" repo_host="https://github.com/wpd/wpdros">
  <description brief="arm_navigation_tutorials">

     arm_navigation_tutorials

  </description>
  <author>Patrick Doyle</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/arm_navigation_tutorials</url>
  <depend package="pr2_arm_navigation_tutorials"/>

</package><package name="pr2_dashboard" path="/stacks/pr2_gui/trunk/pr2_dashboard" repo="pr2_gui" repo_host="https://code.ros.org/svn/wg-ros-pkg">
    <description brief="PR2 Dashboard">
    
      pr2_dashboard is a GUI for debugging and controlling low-level state of the PR2.  It shows things like battery status and breaker states, as well as integrating tools like rxconsole and robot_monitor.
    
    </description>
    <author>Josh Faust</author>
    <license>BSD</license>
    <review notes="" status="Doc reviewed"/>
    <url>http://ros.org/wiki/pr2_dashboard</url>
    <depend package="rxtools"/>
    <depend package="robot_monitor"/>
    <depend package="rospy"/>
    <depend package="roslib"/>
    <depend package="std_srvs"/>
    <depend package="std_msgs"/>
    <depend package="pr2_power_board"/>
    <depend package="pr2_msgs"/>
    
  <rosdep name="wxwidgets"/>
  <rosdep name="wxpython"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="test_matlab_basic_ros" path="/trunk/sandbox/matlab/test_matlab_basic_ros" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="test_matlab_basic_ros">

     A basic MEX test that uses a SharedMemorySubscriber and a system() call to connect to a fully-functional ROS node run in another process
     and fetch a serialized message from that process. See test_matlab_full_ros for the implementation of the other ROS node

  </description>
  <author>Edward T. Kaszubski ( ekaszubski@gmail.com )</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/test_matlab_basic_ros</url>
  <depend package="matlab"/>
  <depend package="roscpp_simple"/>
  <depend package="std_msgs"/>
  <!--depend package="geometry_msgs"/-->
  <!--depend package="roscpp"/-->

</package><package name="sensor_msgs" path="/stacks/common_msgs/trunk/sensor_msgs" repo="common_msgs" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="sensor_msgs">

    This package defines messages for commonly used sensors, including
cameras and scanning laser rangefinders.

  </description>
  <author>Maintained by Tully Foote/tfoote@willowgarage.com</author>
  <license>BSD</license>
  <review notes="http://www.ros.org/wiki/sensor_msgs/Reviews/2009-09-30_Doc_Review" status="doc reviewed"/>
  <url>http://ros.org/wiki/sensor_msgs</url>

  <depend package="geometry_msgs"/>

  <export>
    <cpp cflags="`PKG_CONFIG_PATH=${prefix}/../../lib/pkgconfig pkg-config --cflags sensor_msgs`" lflags="`PKG_CONFIG_PATH=${prefix}/../../lib/pkgconfig pkg-config --libs sensor_msgs`"/>
  </export>

</package><package name="realtime_tools" path="" repo="pr2_mechanism" repo_host="https://kforge.ros.org/pr2mechanism/hg">
  <description brief="Realtime tools">
    This package contains a set of tools that can be used from a hard
    realtime thread, without breaking the realtime behavior.  The
    tools currently only provides the realtime publisher, which makes
    it possible to publish messages to a ROS topic from a realtime
    thread. We plan to add a basic implementation of a realtime
    buffer, to make it possible to get data from a (non-realtime)
    topic callback into tha realtime loop. Once the lockfree buffer is
    created, the realtime publisher will start using it, which will
    result in major API changes for the realtime publisher (removal of
    all lock methods).
  </description>
  <author>Stuart Glaser &lt;sglaser@willowgarage.com&gt;</author>
  <license>BSD</license>
  <review status="doc reviewed"/>
  <url>http://ros.org/wiki/realtime_tools</url>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <export>
    <cpp cflags="-I${prefix}/include "/>
  </export>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="hironx_ros_bridge" path="/trunk/rtmros_common/hironx_ros_bridge" repo="rtm-ros-robotics/rtmros_common" repo_host="https://rtm-ros-robotics.googlecode.com/svn">
  <description brief="hiro_ros_bridge">

     hiro_ros_bridge

  </description>
  <author>k-okada</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hiro_ros_bridge</url>

  <depend package="hrpsys"/>
  <depend package="hrpsys_ros_bridge"/>

</package><package name="odor_bar" path="/stacks/odor_tools/trunk/odor_bar" repo="odor_tools" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="odor_bar">

     Odor bar node. Publishes a group of visualization_msgs/Marker as a bar for visually monitoring odor concentrations in rviz.

  </description>
  <author>Pedro Sousa</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/odor_bar</url>
  <depend package="roscpp"/>
  <depend package="visualization_msgs"/>
  <depend package="lse_sensor_msgs"/>

</package><package name="oro_server" path="/knowledge/oro/oro_server" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description>A Java-based knowledge base for cognitive robotic applications</description>
  <author>Séverin Lemaignan, LAAS-CNRS/TUM-IAS, 2010</author>
  <license>CeCiLL</license>
  <url>http://homepages.laas.fr/slemaign/official/work/oro-server.html</url>

  <depend package="jena"/>
  <depend package="pellet"/>
</package><package name="rl_2dnav" path="/trunk/stacks/aaai_lfd_demo/rl_2dnav" repo="bosch-ros-pkg-e" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg-e/code">
  <description brief="rl_2dnav">

     The remote lab 2D navigation package provides an interface to navigate between a number of fixed positions. 

  </description>
  <author>Dejan Pangercic, Benjamin Pitzer (Maintained by Sarah Osentoski)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rl_2dnav</url>
  <depend package="roscpp"/>
  <depend package="map_server"/>
  <depend package="pr2_2dnav"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="move_base_msgs"/>
  <depend package="yaml_cpp"/>
  <depend package="pr2_nav_pcontroller"/>
  <depend package="SnapMapICP"/>
 </package><package name="swistrack" path="/trunk/arrg/ua_experimental/swistrack" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="Multi-Object Tracking Software for Robotics and Biology">
        SwisTrack is a powerful tool for tracking robots, humans, animals and
        objects using a camera or a recorded video as input source. It uses
        OpenCV library for fast image processing and contains interfaces for
        USB, FireWire and GigE cameras, as well as AVI files.
    </description>
    <author>Distributed Intelligent Systems and Algorithms Laboratory (DISAL) and the LPM Vision Group at EPFL in Lausanne, Switzerland. Packaged for ROS build system by Antons Rebguns</author>
    <license>GPL v3</license>
    <review notes="" status="unreviewed"/>
    <url>http://www5.epfl.ch/swis/page3080.html</url>
    <depend package="roscpp"/>
    <depend package="opencv2"/>

    <export>
        <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lcamshift_wrapper -lcvblobslib -ltsai -lswistrackcore"/>
    </export>

</package><package name="rosie_2dnav_gazebo" path="/simulation/rosie_2dnav_gazebo" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="rosie_2dnav_gazebo">

     rosie_2dnav_gazebo

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosie_2dnav_gazebo</url>
  <depend package="fake_localization"/>
  <depend package="rosie_move_base"/>
  <depend package="nav_pcontroller"/>

</package><package name="static_transform_broadcaster" path="/stacks/object_manipulation/branches/0.6-branch/static_transform_broadcaster" repo="object_manipulation" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="static_transform_broadcaster">

     static_transform_broadcaster

  </description>
  <author>Matei Ciocarlie</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/static_transform_broadcaster</url>
  <depend package="tf"/>
  <depend package="geometry_msgs"/>

</package><package name="mesh_label_node" path="/knowledge/mesh_label_node" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="mesh_label_node">

     mesh_label_node

  </description>
  <author>Moritz Tenorth</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/mesh_label_node</url>

  <depend package="mod_vis"/>
  <depend package="triangle_mesh_msgs"/>
</package><package name="lms100" path="/trunk/Scan3D/lms100" repo="roblab-whge-ros-pkg" repo_host="http://roblab-whge-ros-pkg.googlecode.com/svn">
  <description brief="rcf_com_lms100">

     rcf_com_lms100
     
     ROS driver for the sick lms100 laser scanner. The driver is part of the rcf4ros
     communication layer.
     
     Adapted from driver code for the sick lms400 laser scanner.

  </description>
  <author>Stefan Stiene, Jan Elsberg, Benjamin Fabricius</author>
  <license>CreativeCommons BY-NC-SA License</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rcf_com_lms100</url>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>

</package><package name="move_arm_goal" path="" repo="uuisrc-ros-pkg" repo_host="https://github.com/cburbridge/uuisrc-ros-pkg">
  <description brief="move_arm_goal">

     move_arm_goal

  </description>
  <author>Lorenzo Riano</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/move_arm_goal</url>
  <depend package="move_arm_msgs"/>
  <depend package="actionlib"/>
  <depend package="kinematics_msgs"/>
  <depend package="geometry_msgs"/>

</package><package name="laser_joint_processor" path="" repo="pr2_calibration" repo_host="https://kforge.ros.org/calibration/pr2_calibration">
  <description brief="Get joint angles from detcted corners in a snapshot">
     Computes joint angles associated with a specific set of detected checkerboard corners.
     This package is experimental and unstable.
     Expect its APIs to change.
  </description>
  <author>Vijay Pradeep</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.ros.org/wiki/laser_joint_processor</url>

  <!-- ROS -->
  <depend package="geometry_msgs"/>
  <depend package="message_filters"/>
  
  <!-- robot_calibration -->
  <depend package="settlerlib"/>
  <depend package="joint_states_settler"/>

  <depend package="opencv2"/>
</package><package name="pr2_gripper_sensor_action" path="/stacks/pr2_object_manipulation/branches/0.6-branch/manipulation/pr2_gripper_sensor_action" repo="pr2_object_manipulation" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_gripper_sensor_action">

  The pr2_gripper_sensor_action package provides an action interface for talking to the pr2_gripper_sensor_controller real-time controller.

  It provides several different actions for getting high-level sensor information from the PR2 palm-mounted accelerometers, fingertip pressure arrays, and gripper motor/encoder, as well as several sensor-based gripper control actions that respond with low-latency in real-time.

  </description>
  <author>Joe Romano</author>
  <license>BSD</license>
  <review status=""/>
  <url/>
  <depend package="roscpp"/>
  <depend package="actionlib_msgs"/>
  <depend package="actionlib"/>  
  <depend package="pr2_gripper_sensor_msgs"/>
  <depend package="pr2_mechanism_controllers"/>
  <depend package="robot_mechanism_controllers"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="pr2_mechanism_model"/>
  <depend package="pr2_gripper_sensor_controller"/>

  <export>
    <cpp cflags="-I${prefix}/msg/cpp"/>
  </export>

</package><package name="player" path="/stacks/erratic_robot/trunk/player" repo="erratic_robot" repo_host="https://ua-ros-pkg.googlecode.com/svn">
    <description brief="Player">
        This package contains Player, from the Player Project
        (http://playerstage.sf.net). This package does not modify Player in any
        way; it simply provides a convenient way to download and compile the
        headers and libraries in a way that can be managed by the ROS dependency
        system.
    </description>

    <author>Brian Gerkey, with contributions from many others. See web page for a full credits llist.</author>
    <license>LGPL</license>
    <review notes="" status="3rdparty"/>
    <url>http://playerstage.sf.net</url>

    <export>
        <cpp cflags="-I${prefix}/player/include/player-2.2" lflags="-Wl,-rpath,${prefix}/player/lib -L${prefix}/player/lib -lplayercore -lplayerxdr -lplayerutils -lplayererror -lplayerdrivers"/>
        <doxymaker external="http://playerstage.sourceforge.net/doc/Player-cvs/player"/>
    </export>

    <versioncontrol type="svn" url="https://playerstage.svn.sourceforge.net/svnroot/playerstage/code/player/trunk"/>
    <rosdep name="pkg-config"/>
</package><package name="openni_tracker" path="" repo="openni_tracker" repo_host="https://kforge.ros.org/openni/openni_tracker">
  <description brief="OpenNI skeleton tracker">

    openni_tracker broadcasts the OpenNI skeleton frames using tf.

  </description>
  <author>Tim Field</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/openni_tracker</url>

  <depend package="geometry_msgs"/>
  <depend package="kdl"/>
  <depend package="roscpp"/>
  <depend package="roslib"/>
  <depend package="tf"/>

  <rosdep name="openni-dev"/>
  <rosdep name="nite-dev"/>
  <rosdep name="ps-engine"/>
</package><package name="planning_models" path="" repo="arm_navigation" repo_host="https://kforge.ros.org/armnavigation/armnavigation">
  <description brief="A set of robot models">
    A set of robot models that can be instantiated from a parsed URDF file.
  </description>
  <author>Ioan Sucan/isucan@willowgarage.com</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.ros.org/wiki/urdf</url>

  <depend package="urdf"/>
  <depend package="rosconsole"/>
  <depend package="geometric_shapes"/>
  <depend package="bullet"/>
  <depend package="angles"/>
  <rosdep name="pkg-config"/>

  <export>
    <cpp cflags="-I${prefix}/include `rosboost-cfg --cflags`" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lplanning_models `rosboost-cfg --lflags thread`"/>
  </export>
  
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="starmac_kinect_obstacle_avoidance" path="" repo="starmac-ros-pkg" repo_host="https://bitbucket.org/bouffard/starmac-ros-pkg">
  <description brief="starmac_kinect_obstacle_avoidance">

    starmac_kinect_obstacle_avoidance

  </description>
  <author>bouffard</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/starmac_kinect_obstacle_avoidance</url>
  <depend package="rospy"/>
  <depend package="starmac_kinect"/>
  <depend package="flyer_controller"/>
  <depend package="starmac_roshlib"/>
  <depend package="flyer_common"/>
  <depend package="joy"/>
  
  
  <!-- depend package="pcl"/>
  <depend package="pcl_tf"/>
  <depend package="pcl_ros"/>
  <depend package="tf"/>
  <depend package="angles"/>
  <depend package="asctec_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="kinect_camera"/>
  <depend package="nodelet"/>
  <depend package="pluginlib"/>
  <depend package="message_filters"/>
  <depend package="sensor_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="flyer_controller"/> -->

</package><package name="openhrp_plugins" path="" repo="stacks/simulator_openhrp" repo_host="git://github.com/laas/simulator_openhrp">
  <description brief="openhrp_plugins">

     openhrp_plugins

  </description>
  <author>Thomas Moulard</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/openhrp_plugins</url>

  <depend package="roscpp"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="bullet"/>
  <depend package="tf"/>
  <depend package="rosgraph_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="std_srvs"/>

  <depend package="openhrp_msgs"/>

  <depend package="openhrp"/>

  <rosdep name="boost"/>
</package><package name="master_sync_fkie" path="" repo="fkie-ros-pkg" repo_host="git://github.com/fkie/fkie-ros-pkg">
  <description brief="master_sync_fkie">

     Synchronize the local ROS master to the remote masters 
     discovered by master_discovery_fkie node. The registration
     of topics and services is only perform by local ROS master.

  </description>
  <author>Alexander Tiderko</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/master_sync_fkie</url>

  <depend package="rospy"/>
  <depend package="roslib"/>
  <depend package="rosgraph"/>
  <depend package="master_discovery_fkie"/>

  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>
</package><package name="gridmap_2d" path="/trunk/humanoid_stacks/humanoid_navigation/gridmap_2d" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="2D gridmap data structure and API based in OpenCV's cv::Mat">

     gridmap_2d - a simple 2D gridmap structure, based on OpenCV's cv::Mat

  </description>
  <author>Armin Hornung</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/gridmap_2d</url>
  
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lgridmap_2d"/>
  </export>
  
  <depend package="nav_msgs"/>
  <!-- for electric 
  <depend package="opencv2"/> -->
  <!-- for Fuerte (creates problems with electric...) -->
    <rosdep name="opencv2"/>

</package><package name="wviz_scene_manager" path="/trunk/stacks/bosch_web_visualization/wviz_scene_manager" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="wviz_scene_manager">A node maintains the scene state for web based visualization (wviz).</description>
  <author>Benjamin Pitzer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/wviz_scene_manager</url>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="roslib"/>
  <depend package="visualization_msgs"/>
</package><package name="pr2_arm_kinematics_constraint_aware" path="/stacks/pr2_kinematics/trunk/pr2_arm_kinematics_constraint_aware" repo="pr2_kinematics" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_arm_kinematics_constraint_aware">
    pr2_arm_kinematics_constraint_aware
  </description>
  <author>Sachin Chitta</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_arm_kinematics_constraint_aware</url>
  <depend package="pr2_arm_kinematics"/>
  <depend package="collision_space"/>
  <depend package="planning_models"/>
  <depend package="planning_environment"/>
  <depend package="arm_navigation_msgs"/>

  <export>
   <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lpr2_arm_kinematics_constraint_aware_lib"/>
  </export>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="proximity_sensor_visualize" path="/trunk/stacks/bosch_proximity_sensor/proximity_sensor_visualize" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="proximity_sensor_visualize">

     proximity_sensor_visualize

  </description>
  <author>Adrian Funk (Maintained by Philip Roan)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/proximity_sensor_visualize</url>
  <depend package="roscpp"/>
  <depend package="proximity_sensor_driver"/>
  <depend package="proximity_sensor_tf"/>
  <depend package="visualization_msgs"/>

</package><package name="rosrtw" path="" repo="rosmatlab" repo_host="https://github.com/tu-darmstadt-ros-pkg/rosmatlab">
  <description brief="rosrtw">

     rosrtw

  </description>
  <author>Johannes Meyer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosrtw</url>

  <depend package="rosmatlab"/>
  <depend package="rosbuild"/>

  <export>
    <rosbuild cmake_directory="${prefix}/cmake"/>
  </export>

</package><package name="pr2_hardware_test_monitor" path="/stacks/wg_hardware_test/trunk/pr2_hardware_test_monitor" repo="wg_hardware_test" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="Utilities for monitoring status of PR2 during hardware testing">
    Test monitoring utilities for runtime monitoring of PR2 component testing.
  </description>
  <author>Kevin Watts</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_hardware_test_monitor</url>
  <depend package="pr2_self_test_msgs"/>
  <depend package="rospy"/>
  <depend package="diagnostic_msgs"/>
  <depend package="std_msgs"/>
  <depend package="std_srvs"/>
  <depend package="pr2_mechanism_msgs"/>
  <depend package="rostopic"/>
  <depend package="robot_monitor"/>
  <depend package="ectools"/>
  <depend package="pr2_mechanism_diagnostics"/>
  <depend package="pr2_transmission_check"/>
  <depend package="xacro"/> <!-- For testing with dummy URDF files -->
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="hrpsys" path="/trunk/rtmros_common/hrpsys" repo="rtm-ros-robotics/rtmros_common" repo_host="https://rtm-ros-robotics.googlecode.com/svn">
  <description brief="hrpsys">

    Basic RT components and utilities to control robots using OpenRTM

  </description>
  <author>AIST, ROS package is maintained by Kei Okada</author>
  <license>EPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hrpsys</url>

  <export>
    <rosdoc config="rosdoc.yaml"/>
    <python path="${prefix}/src:${prefix}/share/hrpsys/python"/>
  </export>
  <depend package="openhrp3"/>

  <rosdep name="doxygen"/>
  <rosdep name="libirrlicht-dev"/>
  <rosdep name="libglew-dev"/>
</package><package name="dense_laser_assembler" path="" repo="pr2_calibration" repo_host="https://kforge.ros.org/calibration/pr2_calibration">
  <description brief="Build dense laser range and intensity clouds">
    Stores streaming data from a laser sensor in a
    dense representation. This allows the user to do 'image-like'
    processing on the data, and can also be used for very fast approx
    neighborhood searches.  This package is still experimental and unstable.
    Expect its APIs to change.
  </description>
  <author>Vijay Pradeep</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://www.ros.org/wiki/dense_laser_assembler</url>

  <!-- ros -->
  <depend package="roscpp"/>
  <depend package="std_msgs"/>

  <!-- common_msgs -->
  <depend package="sensor_msgs"/>

  <!-- calibration -->
  <depend package="calibration_msgs"/>
  <depend package="settlerlib"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -ldense_laser_assembler"/>
  </export>
</package><package name="parsec_msgs" path="" repo="parsec" repo_host="https://code.google.com/p/parsec">
  <description brief="parsec_msgs">

     parsec_msgs

  </description>
  <author>Damon Kohler</author>
  <license>Apache 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/parsec_msgs</url>

  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
</package><package name="robotino_local_move" path="/robotino-ros-pkg/trunk/robotino/robotino_local_move" repo="robotino-ros-pkg" repo_host="http://svn.openrobotino.org">
  <description brief="robotino_local_move">
Implements an actionlib client and server node to move Robotino with pre-defined goals.
  </description>
  <author>indorewala@servicerobotics.eu</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/robotino_local_move</url>
  <depend package="robotino_node"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="tf"/>
  <depend package="geometry_msgs"/>
  <depend package="std_msgs"/>
  <depend package="nav_msgs"/>
</package><package name="nxt_ros" path="" repo="foote-nxt" repo_host="https://nxt.foote-ros-pkg.googlecode.com/hg/">
  <description brief="nxt_ros">
     The nxt_ros package provides the bindings between the NXT world
     and the ROS world.  This package will create a ROS topic for each
     NXT sensor, and publish the sensor's data on this topic. The
     package also creates a topic for each NXT motor, which allows you
     to command the motor from ROS. The nxt_ros bindings talk directly
     to the NXT brick, either over USB or over Bluetooth (note that
     the Bluetooth connection is currently too slow to be very
     useful).  Binding an NXT robot to ROS only requires a single
     configuration file.
  </description>
  <author>Wim Meeussen</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/nxt_ros</url>
  <depend package="rospy"/>
  <depend package="nxt_python"/>
  <depend package="kdl"/>
  <depend package="sensor_msgs"/> 
  <depend package="nxt_msgs"/> 
</package><package name="metralabs_ros" path="" repo="uuisrc-ros-pkg" repo_host="https://github.com/cburbridge/uuisrc-ros-pkg">
  <description brief="metralabs_ros">

     An interface to the MetraLabs Scitos G5 mobile robot with a Schunk Manipulator.
     

  </description>
  <author>Yianni Gatsoulis and Chris Burbridge and Lorenzo Riano</author>
  <license>GPL</license>

  
  <depend package="std_msgs"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="sensor_msgs"/>
  <depend package="urdf"/>
  
  <depend package="sensor_msgs"/>
  <depend package="tf"/>
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="trajectory_msgs"/>
  <depend package="pr2_controllers_msgs"/>


</package><package name="SimGazeboControllers" path="/darpa_arm_sim_servers/SimGazeboControllers" repo="darpa_arm_sim_servers" repo_host="http://svn.thearmrobot.com">
  <description brief="DARPA ARM PROJECT Track C Mechanism Controller Library">
  </description>
  <author>AM</author>
  <license>GPL</license>

  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="angles"/>
  <depend package="filters"/>
  <depend package="tf"/>
  <depend package="tf_conversions"/>
  <depend package="kdl"/>
  <depend package="pluginlib"/>
  <depend package="actionlib"/>

  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="diagnostic_msgs"/>
  <depend package="trajectory_msgs"/>

  <depend package="pr2_controllers_msgs"/>
  <depend package="pr2_controller_interface"/>
  <depend package="pr2_controller_manager"/>
  <depend package="kdl_parser"/>
  <depend package="pr2_mechanism_model"/>
  <depend package="control_toolbox"/>
  <depend package="realtime_tools"/>
  <depend package="message_filters"/>
  
  <depend package="std_srvs"/>

  <depend package="TestExecution_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp -I${prefix}/srv/cpp" lflags="-Wl,-rpath,${prefix}/lib/ -L${prefix}/lib -lSimGazeboControllers"/>
    <pr2_controller_interface plugin="${prefix}/controller_plugins.xml"/>
  </export>
  <rosdep name="libtool"/>
</package><package name="primes_testbench" path="" repo="iheart-ros-pkg" repo_host="git://github.com/IHeartRobotics/iheart-ros-pkg">
  <description brief="primes_testbench">
Test checks if several large numbers are prime.
  </description>
  <author>I Heart Engineering</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/primes_testbench</url>
  <depend package="roscpp"/>
  <depend package="pluginlib"/>
  <depend package="testbench"/>
  <export>
    <testbench plugin="${prefix}/primes_testbench.xml"/>
  </export>
</package><package name="DPM" path="/trunk/resources/DPM" repo="ubc-ros-pkg" repo_host="https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg">
    <description brief="DPM">
        Python implementation of Pedro Felzenszwalb's deformable part models detector.
    </description>

    <author>Kenji Okuma</author>
    <license/>
    <review notes="" status="3rdparty"/>
    <rosdep name="python-matplotlib"/>
    <rosdep name="python-scipy"/>
    <rosdep name="libgsl0-dev"/>		
    <rosdep name="wxpython"/>
    <depend package="rospy"/>
    <url/>
    <export>
        <python path="${prefix}:${prefix}/DPMlib"/>
    </export>

</package><package name="jsk_2011_07_pr2_semantic" path="/trunk/demos/jsk_2011_07_pr2_semantic" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="jsk_2011_07_pr2_semantic">

     jsk_2011_07_pr2_semantic

  </description>
  <author>Manabu Saito, Lars Kunze, Haseru Chen</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/jsk_2011_07_pr2_semantic</url>
  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>

  <depend package="pr2eus"/>
  <depend package="json_prolog"/>
  <depend package="jsk_semantic_maps"/>
  <depend package="jsk_pcl_ros"/>
  <depend package="pr2eus_openrave"/>
  <depend package="pr2_gripper_sensor_action"/>

</package><package name="turtlebot_follower" path="" repo="turtlebot_apps" repo_host="https://kforge.ros.org/turtlebot/turtlebot_apps">
  <description brief="follower">

     Follower for the turtlebot. Follows humans and robots around
     by following the centroid of a box points infront of the
     turtlebot.

  </description>
  <author>Tony Pratkanis</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/follower</url>
  <depend package="nodelet"/>
  <depend package="tf"/>
  <depend package="roscpp"/>
  <depend package="pcl_ros"/>
  <export>
    <nodelet plugin="${prefix}/nodelets.xml"/>
  </export>
</package><package name="face_follow" path="/trunk/face_follow" repo="hacdc-ros-pkg" repo_host="http://hacdc-ros-pkg.googlecode.com/svn">
  <description brief="face_follow">

     face_follow

  </description>
  <author>andrewha</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/face_follow</url>
  <depend package="std_msgs"/>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="pid_control"/>
  <depend package="face_detection"/>
  <depend package="geometry_msgs"/>

</package><package name="ee_cart_imped_msgs" path="/trunk/ee_cart_imped/ee_cart_imped_msgs" repo="mit-ros-pkg-trunk" repo_host="https://svn.csail.mit.edu/mit-ros-pkg">
  <description brief="ee_cart_imped_msgs">

     Messages for ee_cart_imped stack.

  </description>
  <author>Jenny Barry, Mario Bollini, and Huan Liu</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ee_cart_imped_msgs</url>
  <depend package="geometry_msgs"/>
  <depend package="actionlib_msgs"/>

</package><package name="ecl_ipc" path="/trunk/ecl_core/ecl_ipc" repo="ecl_core" repo_host="https://embedded-control-library.googlecode.com/svn">
  <description brief="Cross platform framework for inter-process mechanisms">

  Interprocess mechanisms vary greatly across platforms - sysv, posix, win32, there
  are more than a few. This package provides an infrastructure to allow for developing 
  cross platform c++ wrappers around the lower level c api's that handle these 
  mechanisms. These make it not only easier to utilise such mechanisms, but allow it 
  to be done consistently across platforms.

  </description>
  <author>Daniel Stonier (d.stonier@gmail.com)</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://snorriheim.dnsdojo.com/redmine/wiki/ecl</url>
  
  <depend package="ecl_config"/>
  <depend package="ecl_errors"/>
  <depend package="ecl_exceptions"/>
  <depend package="ecl_time_lite"/>
  <depend package="ecl_time"/>
  <depend package="ecl_license"/>
  <depend package="ecl_build"/>
  
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lecl_ipc"/>
  </export>
</package><package name="cob_collision_velocity_filter" path="" repo="cob_driver" repo_host="git://github.com/ipa320/cob_driver">
  <description brief="cob_collision_velocity_filter">

  The cob_collision_velocity_filter package is a package for collision avoidance using teleoperation.

  </description>
  <author>Matthias Gruhler</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_collision_velocity_filter</url>

  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="move_base_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="tf"/>
  <depend package="cob_footprint_observer"/>

</package><package name="hrl_head_tracking" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="hrl_head_tracking">

     hrl_head_tracking

  </description>
  <author>Kelsey Hawkins</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hrl_head_tracking</url>
  <depend package="roscpp"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="pcl_ros"/>
  <depend package="opencv2"/>
  <depend package="eigen_conversions"/>
  <depend package="cv_bridge"/>
  <depend package="image_transport"/>
  <depend package="image_geometry"/>
</package><package name="katana_trajectory_filter" path="" repo="katana_driver" repo_host="http://kos.informatik.uni-osnabrueck.de/katana_driver.git">
  <description brief="Filters a trajectory to have at most 16 segments">

     <p>
     This filter removes the smallest segments from a trajectory until at most
     MAX_NUM_POINTS (currently 16) are left. The reason for doing this is that
     the Katana arm only supports trajectories with at most MAX_NUM_POINTS.
     </p>

     <p>
     All desired velocities and accelerations are removed from the trajectory.
     This works if this filter is used in conjunction with the
     JointTrajectoryActionController from the <a href="/wiki/katana">katana</a>
     package, because it recomputes splines for velocities and accelerations
     anyway. It would not work with PR2's JointTrajectoryActionController,
     which only computes linear segments if the velocities are missing.
     </p>

     <p>
     Also, this filter does not check if the resulting trajectory is collision-free,
     although it should.
     </p>

  </description>
  <author>Martin Günther</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/katana_trajectory_filter</url>
  <depend package="roscpp"/>
  <depend package="filters"/>
  <depend package="spline_smoother"/>
  <depend package="trajectory_msgs"/>
  <depend package="arm_navigation_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lkatana_trajectory_filter"/>
    <filters plugin="${prefix}/default_plugins.xml"/>
  </export>
</package><package name="kinect_near_mode_calibration" path="/trunk/jsk_openni_kinect/kinect_near_mode_calibration" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="kinect_near_mode_calibration">

     kinect_near_mode_calibration

  </description>
  <author>Atushi Tsuda (tsuda@jsk.t.u-tokyo.ac.jp), Kei Okada(k-okada@jsk.t.u-tokyo.ac.jp)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/kinect_near_mode_calibration</url>

  <depend package="opencv2"/>
  <depend package="std_srvs"/>
  <depend package="image_view_jsk_patch"/>
  <depend package="checkerboard_detector"/>
  <depend package="openni_camera"/>
  <depend package="jsk_tools"/>

  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>

</package><package name="rcommander_pr2_gui" path="" repo="rcommander_pr2" repo_host="https://kforge.ros.org/rcommander/rcommander_pr2">
  <description brief="rcommander_pr2_gui">
     rcommander_pr2
  </description>

  <author>Hai Nguyen</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rcommander_pr2</url>

  <depend package="rospy"/>
  <depend package="tf"/>
  <depend package="smach"/>
  <depend package="actionlib"/>

  <depend package="rcommander"/>
  <depend package="tts_server"/>

  <depend package="geometry_msgs"/>
  <depend package="spline_smoother"/>
  <depend package="arm_navigation_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="std_msgs"/>
  <depend package="face_detector"/>

  <depend package="move_base_msgs"/>
  <depend package="pr2_common_action_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="pr2_gripper_sensor_msgs"/>
  <depend package="pr2_object_manipulation_msgs"/>

  <depend package="trajectory_msgs"/>
  <depend package="object_manipulator"/>
  <depend package="ptp_arm_action"/>
  <depend package="kinematics_msgs"/>
  <depend package="tf_broadcast_server"/>
  <depend package="face_detector"/>

  <export>
      <rcommander plugin="rcommander_pr2_gui.tuck_tool" robot="pr2" tab="Manipulation"/> 
      <rcommander plugin="rcommander_pr2_gui.position_priority_move_tool" robot="pr2" tab="Manipulation"/>
      <rcommander plugin="rcommander_pr2_gui.velocity_priority_move_tool" robot="pr2" tab="Manipulation"/>
      <rcommander plugin="rcommander_pr2_gui.move_arm_tool" robot="pr2" tab="Manipulation"/>
      <rcommander plugin="rcommander_pr2_gui.move_tool" robot="pr2" tab="Manipulation"/>
      <rcommander plugin="rcommander_pr2_gui.gripper_tool" robot="pr2" tab="Manipulation"/>
      <rcommander plugin="rcommander_pr2_gui.gripper_event_tool" robot="pr2" tab="Manipulation"/>
      <rcommander plugin="rcommander_pr2_gui.spine_tool" robot="pr2" tab="Manipulation"/> 
      <rcommander plugin="rcommander_pr2_gui.navigate_tool" robot="all" tab="Navigation"/>      
      <rcommander plugin="rcommander_pr2_gui.speak_tool" robot="all" tab="Interaction"/>  
      <rcommander plugin="rcommander_pr2_gui.move_head_tool" robot="pr2" tab="Interaction"/>  
      <rcommander plugin="rcommander_pr2_gui.face_detect_tool" robot="pr2" tab="Origins"/>  
  </export>

</package><package name="pr2_led_kinect_calib" path="" repo="pr2_led_kinect_calib" repo_host="https://github.com/ruehr/pr2_led_kinect_calib">
  <description brief="pr2_led_kinect_calib">

     pr2_led_kinect_calib

  </description>
  <author>Thomas Ruehr</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_led_kinect_calib</url>
  <depend package="tf"/>
  <depend package="tf_conversions"/>
  <depend package="roscpp"/>
  <depend package="ethercat_trigger_controllers"/>
  <depend package="pcl_ros"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <!--depend package="arm_navigation_msgs"/-->
  <depend package="pr2_controllers_msgs"/>
  <depend package="actionlib"/>

</package><package name="wubble_description" path="/trunk/arrg/ua_robots/wubble_description" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="URDF description for the Wubble Robot">

     wubble_description

    </description>
    <author>UA Robotics Research Group</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/wubble_description</url>

    <depend package="xacro"/>

    <depend package="erratic_description"/>
    <depend package="smart_arm_description"/>
    <depend package="hokuyo_urg_description"/>
    <depend package="swissranger_camera_description"/>
    <depend package="videre_stoc_description"/>

    <depend package="gazebo"/>
    <depend package="gazebo_tools"/>
    <depend package="gazebo_worlds"/>
    <depend package="gazebo_plugins"/>
    <depend package="erratic_gazebo_plugins"/>
    <depend package="wubble_environments"/>

    <depend package="fake_localization"/>
    <depend package="move_base"/>
    <depend package="map_server"/>

    <depend package="stereo_image_proc"/>
    <depend package="robot_self_filter"/>
    <depend package="laser_filters"/>
<!--    <depend package="wubble_actions"/> -->

    <depend package="pr2_controller_manager"/>
    <depend package="pr2_gazebo_plugins"/>

    <!-- Dependencies of the spawner node -->
    <depend package="rospy"/>
    <depend package="geometry_msgs"/>
    <depend package="tf"/>

    <export>
        <gazebo gazebo_media_path="${prefix}"/>
    </export>
</package><package name="gscam" path="/trunk/distribution/brown_perception/gscam" repo="brown-ros-pkg" repo_host="http://brown-ros-pkg.googlecode.com/svn">
  <description brief="gscam">
A ROS camera driver that uses gstreamer to connect to devices such as webcams.
  </description>
  <author>Graylin Trevor Jay, Christopher Crick</author>
  <email>tjay@cs.brown.edu, chriscrick@cs.brown.edu</email>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>

  <rosdep name="libgstreamer0.10-dev"/>
  <rosdep name="libgstreamer-plugins-base0.10-dev"/>
  <depend package="roscpp"/>
  <depend package="image_transport"/>
  <depend package="sensor_msgs"/>
  <depend package="camera_calibration_parsers"/>

</package><package name="uvc_camera" path="" repo="camera_umd" repo_host="http://ram.umd.edu/git/ros/camera_umd.git">
  <description brief="uvc_camera">

     A collection of node(let)s that stream images from USB cameras (UVC)
     and provide CameraInfo messages to consumers. Includes a
     two-camera node that provides rough synchronization
     for stereo vision.

     Currently uses the base driver from Morgan Quigley's uvc_cam package.

  </description>
  <author>Ken Tossell/ktossell@umd.edu</author>
  <license>GPL</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/uvc_camera</url>
  <depend package="sensor_msgs"/>
  <depend package="camera_info_manager"/>
  <depend package="image_transport"/>
  <depend package="nodelet"/>
  <!-- <depend package="dynamic_reconfigure" /> -->

  <export>
    <nodelet plugin="${prefix}/nodelet_uvc_camera.xml"/>
  </export>
</package><package name="cwru_wsn_steering" path="" repo="cwru-ros-pkg" repo_host="http://github.com/cwru-robotics/cwru-ros-pkg">
  <description brief="cwru_wsn_steering">

     cwru_wsn_steering

  </description>
  <author>Eric Perko, Ben Ballard, Wyatt Newman</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cwru_wsn_steering</url>
  <depend package="tf"/>
  <depend package="nav_msgs"/>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="roscpp"/>
  <depend package="base_local_planner"/>
  <depend package="costmap_2d"/>

</package><package name="semanticmodel" path="" repo="worldmodel" repo_host="https://kforge.ros.org/worldmodel/hg">
  <description brief="semanticmodel">

    Perceptual pipeline for object-based semantic world modeling.

  </description>
  <author>Julian (&quot;Mac&quot;) Mason</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/semanticmodel</url>

  <depend package="sensor_msgs"/>
  <depend package="std_srvs"/>
  <depend package="pcl16_ros"/>
  <depend package="flann"/>
  <depend package="pcl16"/>
  <depend package="nodelet"/>
  <depend package="visualization_msgs"/>
  <depend package="tf"/>
  <depend package="driver_base"/>
  <!-- <depend package="pr2_msgs"/> -->
  
  <depend package="dynamic_reconfigure"/>
  <depend package="opencv2"/>
  <depend package="image_transport"/>
  <depend package="image_geometry"/>
  <depend package="geometry_msgs"/>
  <depend package="actionlib"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
<!--   <depend package="pr2_controllers_msgs"/> -->
<!--   <depend package="pr2_common_action_msgs"/> -->
  <depend package="rospy"/>
  <depend package="topic_tools"/>
  <depend package="mongo_ros"/> 
  <depend package="mongodb"/> 
  <depend package="move_base_msgs"/>
  <depend package="message_filters"/>
  <depend package="nav_msgs"/>
  <depend package="stereo_msgs"/>
  <depend package="occupancy_grid_utils"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -lsemanticmodel"/>
  </export>

</package><package name="seabee3_physics" path="/trunk/cturtle/seabee3_physics" repo="seabee3-ros-pkg" repo_host="http://seabee3-ros-pkg.googlecode.com/svn">
  <description brief="seabee3_physics">

     seabee3_physics

  </description>
  <author>Randolph Voorhies</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/seabee3_physics</url>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="bullet"/>
  <depend package="tf"/>
  <depend package="base_libs"/>
  <depend package="seabee3_driver_base"/>
  <depend package="seabee3_common"/>
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp -I${prefix}/srv/cpp" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib"/>
  </export>
</package><package name="actuator_array_driver" path="" repo="gt-ros-pkg.humans" repo_host="https://code.google.com/p/gt-ros-pkg.humans">
  <description brief="A base class for an ActuatorArrayDriver node">
    <p>	
	This package contains a base class for an Actuator Array Driver. This is intended for use with chains of R/C Servos or other
	similar devices where position (and velocity) commands are sent at irregular intervals, as opposed to the tight, real-time
	control loop of the <a href="http://www.ros.org/wiki/pr2_controller_manager">PR2 Controller Manager</a> system. 
    </p>
    <p>
    This base class performs some standard functionality, such as parsing joint limits out of the robot_description, subscribing to 
    a 'command' topic, publishing on the 'joint_states' topic, and setting up a 'stop' and 'home' service call. This is designed to 
    work as a stand-alone driver for controlling/tele-operating a chain of servos, or in conjunction with the 
    <a href="http://www.ros.org/wiki/actuator_array_joint_trajectory_action">Actuator Array Joint Trajectory Action</a>. However, this is 
    provided as a convenience only, and is not required for successful operation with the Actuator Array Joint Trajectory Action.
    </p>
  </description>

  <author>Stephen Williams</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/actuator_array_driver</url>

  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>
  
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="std_srvs"/>
  <depend package="urdf"/>

</package><package name="pr2_template_based_grasping" path="" repo="usc-clmc-ros-pkg" repo_host="https://github.com/usc-clmc/usc-clmc-ros-pkg">
  <description brief="Implementation of grasp_template_planning on the PR2">

     pr2_template_based_grasping

  </description>
  <author>Alexander Herzog (USC)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/template_based_grasp_planning</url>

  <depend package="roscpp"/>
  <!-- depend package="rosrt"/ -->
  
  <depend package="grasp_template"/>
  <depend package="grasp_template_planning"/>
  
  <depend package="pcl"/>
  
  <depend package="tabletop_object_detector"/>
  <depend package="visualization_msgs"/>
  
  <depend package="actionlib"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="pr2_arm_navigation_tutorials"/>
  <depend package="tabletop_collision_map_processing"/>
  <depend package="object_manipulation_msgs"/>
    
  <depend package="arm_navigation_msgs"/>
</package><package name="pr2_pose_saver" path="/stacks/cart_pushing/trunk/pr2_pose_saver" repo="cart_pushing" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_pose_saver">

    Simple util for taking snapshots of pr2 body positions, and loading them back up 

  </description>
  <author>Jonathan Scholz</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2__bookmarker</url>
  <depend package="rospy"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="geometry_msgs"/>

</package><package name="collvoid_simple_global_planner" path="" repo="multi_robot_collision_avoidance" repo_host="https://kforge.ros.org/collvoid/collvoid">
  <description brief="collvoid_simple_global_planner">

     collvoid_simple_global_planner

  </description>
  <author>Daniel Claes</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/collvoid_simple_global_planner</url>
  <depend package="roscpp"/>
  <depend package="pluginlib"/>
  <depend package="nav_core"/>
  <depend package="costmap_2d"/>
  <depend package="base_local_planner"/>
  <depend package="tf"/>
  <depend package="angles"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lcollvoid_simple_global_planner"/>
    <nav_core plugin="${prefix}/bgp_plugin.xml"/>
  </export>

</package><package name="laser_assembler" path="/stacks/laser_pipeline/trunk/laser_assembler" repo="laser_pipeline" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Aggregation nodes for a laser rangefinder">
    Provides nodes to assemble point clouds from either LaserScan or PointCloud messages
  </description>
  <author>Vijay Pradeep</author>
  <license>BSD</license>
  <review notes="09/29/2009" status="Doc reviewed"/>
  <url>http://ros.org/wiki/laser_assembler</url>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="laser_geometry"/>
  <depend package="laser_filters"/>
  <depend package="sensor_msgs"/>
  <depend package="tf"/>

 <export>
    <cpp cflags="-I${prefix}/include"/>
 </export>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="mod_srdl" path="/tags/latest/mod_srdl" repo="knowrob" repo_host="http://code.in.tum.de/pubsvn/knowrob">
  <description brief="mod_srdl">
    Implementation of the Semantic Robot Description Language (SRDL) that
    provides model and reasoning tools to match prerequisites of actions
    to the capabilities of a robot.
  </description>
  <author>Moritz Tenorth, Tobias Roehm</author>
  <license>GPL</license>
  <url>http://ros.org/wiki/mod_srdl</url>
  <review notes="" status="unreviewed"/>
  <depend package="ias_knowledge_base"/>
  <depend package="knowrob_common"/>
  <depend package="urdf"/>
  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>
</package><package name="forward_laser_scan" path="/trunk/pr2_elevator/forward_laser_scan" repo="ubc-ros-pkg" repo_host="https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg">
  <description brief="visionsandbox_ros">

     visionsandbox_ros

  </description>
  <author>Junaed Sattar</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/visionsandbox_ros</url>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="actionlib"/>
  <depend package="pr2_controllers_msgs"/>
</package><package name="cwru_goal_planner" path="" repo="cwru-ros-pkg" repo_host="http://github.com/cwru-robotics/cwru-ros-pkg">
  <description brief="cwru_goal_planner">

     cwru_goal_planner

  </description>
  <author>Eric Perko</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cwru_goal_planner</url>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="cwru_nav"/>

</package><package name="access_point_control" path="/stacks/linux_networking/trunk/access_point_control" repo="linux_networking" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="access_point_control">
    Defines an API for access point control based on 
    dynamic_reconfigure. Other packages must
    implement the API for various access-point models: 
    for example: hostapd_access_point for hostapd-based control or
    linksys_access_point for Linksys router web interface.
  </description>
  <author>Catalin Drula</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/access_point_control</url>
  <depend package="rospy"/>
  <depend package="dynamic_reconfigure"/>
</package><package name="pddl_msgs" path="/trunk/pddl/pddl_msgs" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="message for pddl planner">
   message for pddl planner
  </description>
  <author>Ryohei Ueda (ueda@jsk.t.u-tokyo.ac.jp)</author>
  <license>Apache License 2.0</license>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp -I${prefix}/srv/cpp"/>
    <rosbagmigration rule_file="migration_rules/pddl_msgs.bmr"/>
  </export>
</package><package name="assimp" path="" repo="assimp" repo_host="https://kforge.ros.org/robotmodel/assimp">
  <description brief="Assimp">
Open Asset Import Library (Short name: Assimp) is a free library to
import various well-known 3D model formats into applications. The
library has been designed for maximum stability and
efficiency. Written in C++, it is licensed under the BSD license. The
API is provided for both C and C++. Wrappers for Python and D are
available, more bindings are in development. The library loads models
in a straightforward in-memory format that can be easily read and
processed by applications. Various post processing steps can be
executed on the imported data to optimize it for a particular purpose.
  </description>

  <author>Thomas Schulze, Alexander Gessler, Kim Kulling, David Nadlinger, Jonathan Klein, Mark Sibly, Matthias Gubisch</author>
  <license>BSD</license>
  <review notes="ticket:2879" status="3rdparty doc reviewed"/>
  <url>http://assimp.sourceforge.net/</url>
  <export>
    <cpp cflags="-I/usr/include" lflags="-Wl,-rpath,/usr/lib -L/usr/lib -lassimp"/>
    <doxymaker external="http://assimp.sourceforge.net/main_doc.html"/>
  </export>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>

  <rosdep name="assimp"/>

</package><package name="hector_gazebo_thermal_camera" path="/branches/fuerte/hector_gazebo/hector_gazebo_thermal_camera" repo="hector_gazebo" repo_host="https://tu-darmstadt-ros-pkg.googlecode.com/svn">
  <description brief="hector_gazebo_thermal_camera">

     hector_gazebo_thermal_camera provides a gazebo plugin that produces simulated thermal camera images. The plugin uses modified code from the gazebo_ros_camera plugin.

  </description>
  <author>Stefan Kohlbrecher</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hector_gazebo_thermal_camera</url>
  <depend package="nodelet"/>
  <depend package="pcl_ros"/>
  <depend package="gazebo"/>
  <depend package="image_transport"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="driver_base"/>
  <depend package="gazebo_plugins"/>
  
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib"/>
    <gazebo plugin_path="${prefix}/lib"/>
  </export>

</package><package name="coverage_3d_srvs" path="/trunk/coverage_3d/coverage_3d_srvs" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="coverage_srvs">

     coverage_srvs

  </description>
  <author>tidyup</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/coverage_srvs</url>
  <depend package="geometry_msgs"/>
</package><package name="busbot_filter" path="/trunk/stacks/drink_serving/busbot_filter" repo="bosch-ros-pkg-e" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg-e/code">
  <description brief="busbot_filter">

    A simple LaserScan to LaserScan filter that removes ranges of beams from the scan. 

  </description>
  <author>Chris Mansley</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/busbot_filter</url>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>

</package><package name="pr2_doors_actions" path="" repo="pr2_doors" repo_host="https://kforge.ros.org/doors/hg">
  <description>
    The highlevel controllers for the door domain
  </description>

  <author>Wim Meeussen</author>
  <license>BSD</license>
  <url>http://pr.willowgarage.com</url>
  <review notes="beta" status="experimental"/>

  <depend package="roscpp"/>
  <depend package="kdl"/>
  <depend package="tf"/>

  <depend package="actionlib"/>
  <depend package="pr2_common_action_msgs"/>
  <depend package="pr2_arm_move_ik"/>
  <depend package="joint_trajectory_generator"/>

  <depend package="std_msgs"/>
  <depend package="diagnostic_msgs"/>
  <depend package="diagnostic_updater"/>
  <depend package="door_msgs"/>
  <depend package="move_base_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="actionlib_msgs"/>
  <depend package="pr2_controllers_msgs"/>

  <depend package="door_handle_detector"/>
  <depend package="pr2_doors_common"/>
  <depend package="tff_controller"/>

  <depend package="costmap_2d"/>
  <depend package="base_local_planner"/>
  <depend package="laser_assembler"/>
  <depend package="pr2_laser_snapshotter"/>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib "/>
  </export>


  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="proxemic_recognizers" path="/trunk/sbl_experimental/proxemics/proxemic_recognizers" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="proxemic_recognizers">

     proxemic_recognizers

  </description>
  <author>Edward T. Kaszubski ( ekaszubski@gmail.com )</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/proxemic_recognizers</url>
  <depend package="quickdev_cpp"/>
  <depend package="nodelet"/>
  <depend package="humanoid_recognizers"/>
  <depend package="proxemic_models"/>
  <depend package="visualization_msgs"/>
  <export>
    <nodelet plugin="${prefix}/nodelets/nodelet_plugins.xml"/>
  </export>
</package><package name="reem_kinematics_constraint_aware" path="" repo="reem_kinematics" repo_host="https://github.com/pal-robotics/reem_kinematics">
  <description brief="reem_kinematics_constraint_aware">
    Inverse kinematics solver and plugin for the REEM robot upper body.
  </description>
  <author>Adolfo Rodriguez Tsouroukdissian, Hilario Tome.</author>
  <license>Modified BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/reem_kinematics_constraint_aware</url>

  <depend package="angles"/>
  <depend package="kdl"/>
  <depend package="kdl_parser"/>
  <depend package="kinematics_base"/>
  <depend package="pluginlib"/>
  <depend package="tf"/>
  <depend package="tf_conversions"/>

  <depend package="arm_navigation_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="kinematics_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lreem_kinematics_constraint_aware"/>
    <kinematics_base plugin="${prefix}/kinematics_plugins.xml"/>
  </export>
</package><package name="proximity_sensor_fake_data" path="/trunk/stacks/bosch_proximity_sensor/proximity_sensor_fake_data" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="proximity_sensor_fake_data">

     proximity_sensor_fake_data

  </description>
  <author>Adrian Funk (Maintained by Philip Roan)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/proximity_sensor_fake_data</url>
  <depend package="roscpp"/>
  <depend package="proximity_sensor_driver"/>

</package><package name="learning_image_geometry" path="/branches/learning_image_geometry" repo="rtc-us-ros-pkg-branches" repo_host="https://rtc-us-ros-pkg.svn.sourceforge.net/svnroot/rtc-us-ros-pkg">
  <description brief="learning_image_geometry">

     learning_image_geometry

  </description>
  <author>Pablo Iñigo Blasco</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/learning_image_geometry</url>
  <depend package="image_geometry"/>
  <depend package="image_transport"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="tf"/>
  <depend package="image_view"/>

</package><package name="cob_ehealth2012" path="" repo="cob_scenarios" repo_host="git://github.com/ipa320/cob_scenarios">
  <description brief="cob_ehealth2012">

     cob_ehealth2012

  </description>
  <author>Tobias Sing</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_ehealth2012</url>
  <depend package="cob_generic_states_experimental"/>
  <depend package="cob_generic_states"/>
  <depend package="rospy"/>
  <depend package="smach"/>
  <depend package="cob_script_server"/>
  <depend package="cob_command_gui"/>
  <depend package="cob_default_robot_config"/>
  <depend package="cob_default_env_config"/>
  <depend package="cob_dashboard"/>
  <depend package="cob_bringup"/>
  <depend package="cob_bringup_sim"/>
  <depend package="cob_navigation_global"/>
  <depend package="cob_manipulator"/>
  <depend package="cob_arm_navigation"/>
  <depend package="cob_tactiletools"/>

  <python path="${prefix}/states"/>

</package><package name="oro_chatter" path="/knowledge/oro/oro_chatter" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="ORO Chatter">ORO Chatter listen to human inputs from
the web_hri ROS node, and try to answer question/execute commands with the
Naive Natural Language module of ORO.
  </description>
  <author>Séverin Lemaignan</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/oro_chatter</url>
  <depend package="web_hri"/>
  <depend package="rospy"/>
  <depend package="oro_ros"/>
  <depend package="std_msgs"/>

</package><package name="ar_pose_ekf" path="" repo="camera_pose_estimation" repo_host="http://git.mech.kuleuven.be/robotics/camera_pose_estimation.git">
  <description brief="ar_pose_ekf">

      ar_pose_ekf: Orocos component which fuses marker pose estimates from different cameras. The component uses a 
      <a href="http://www.orocos.org/bfl">BFL (Bayesian Filter Library)</a> Extended Kalman Filter
      to merge the different estimates. 

      Input node: <a href="http://www.ros.org/doc/api/ar_pose/html/msg/ARMarker.html">ar_pose::ARMarker message</a>
      Output nodes: <a href="http://www.ros.org/doc/api/ar_pose/html/msg/ARMarker.html">ar_pose::ARMarker message</a>
                   - <a href="http://www.ros.org/doc/api/visualization_msgs/html/msg/Marker.html">visualization_msgs::Marker message</a>

      Connection between the Orocos and ROS framework is done using the 
      <a href="http://ros.org/wiki/orocos_toolchain_ros">Orocos ROS integration stack</a>.

  </description>
  <author>Steven Bellens - steven.bellens@mech.kuleuven.be</author>
  <license>LGPLv2.1 - BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ar_pose_ekf</url>

  <depend package="rtt"/>
  <depend package="rtt_rosnode"/>
  <depend package="rtt_visualization_msgs"/>
  <depend package="rtt_ar_pose"/>
  <depend package="orocos_kdl"/>
  <depend package="orocos_bfl"/>
  <depend package="bfl_typekit"/>

  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>
</package><package name="proxemic_models" path="/trunk/sbl_experimental/proxemics/proxemic_models" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="proxemic_models">

     proxemic_models

  </description>
  <author>Edward T. Kaszubski ( ekaszubski@gmail.com )</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/proxemic_models</url>
  <depend package="quickdev_cpp"/>
  <depend package="humanoid_models"/>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lproxemic_models"/>
  </export>
</package><package name="eigen" path="" repo="eigen" repo_host="https://kforge.ros.org/geometry/eigen">
  <description brief="Eigen">
    This package contains version 3 of the Eigen C++ template
    library for linear algebra. It automatically downloads, extracts
    a tarball. For each major release of the Eigen
    library, the tarball will get updated. This ROS package does not
    intend to modify Eigen in any way, it simply provides a convenient
    way to download and compile the Eigen library. When Eigen becomes
    available from the major OS package managers, this ROS package is
    likely to be replaced by a system dependency.

    This package contains Eigen3 with EIGEN2_SUPPORT enabled.  In
    future versions EIGEN2_SUPPORT will be removed. 
  </description>

  <author>Gaeal Guennebaud and Benoit Jacob</author>
  <license>LGPL</license>
  <review notes="ticket:2879" status="3rdparty doc reviewed"/>
  <url>http://eigen.tuxfamily.org/</url>
  <export>
    <cpp cflags="`pkg-config  --cflags eigen3`" lflags=""/> 
    <doxymaker external="http://eigen.tuxfamily.org/api/"/>
  </export>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>

  <rosdep name="eigen"/>

</package><package name="kinematic_analyzer" path="" repo="turbo-ros-pkg" repo_host="https://github.com/tu-rbo/turbo-ros-pkg">
  <description brief="kinematic_analyzer">

     kinematic_analyzer

  </description>
  <author>Roberto Martin, Sebastian Hoefer</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/kinematic_analyzer</url>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="sensor_msgs"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="image_transport"/>
  <depend package="iap_common"/>
  <depend package="visualization_msgs"/>
  <depend package="geometry_msgs"/>

  <depend package="bayes_filter_ros"/>

  <export>
     <cpp cflags="-I${prefix}/include -I${prefix}/include/kinematic_analyzer -I${prefix}/include/kinematic_analyzer/joint -I${prefix}/include/kinematic_analyzer/joint_detection -I${prefix}/include/kinematic_analyzer/joint_estimation" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lka -lBayesFilter"/>
  </export>

</package><package name="turtlebot_teleop" path="" repo="turtlebot_apps" repo_host="https://kforge.ros.org/turtlebot/turtlebot_apps">
  <description brief="turtlebot_teleop">

     Provides teleoperation using joysticks or keyboard. 

  </description>
  <author>Melonee Wise</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/turtlebot_teleop</url>
  <depend package="joy"/>
  <depend package="geometry_msgs"/>
  <depend package="roscpp"/>

</package><package name="sr_example" path="" repo="shadow_robot" repo_host="lp:sr-ros-interface">
  <description brief="sr_example">

    sr_example is an example of a real package interfaced with our robot. Please refer to the tutorial Creating a package to interact with our robots.

  </description>
  <author>Ugo Cupcic</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sr_example</url>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="sr_robot_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="std_msgs"/>

</package><package name="active_realtime_segmentation" path="/stacks/tabletop_object_perception/branches/0.4-branch/active_realtime_segmentation" repo="tabletop_object_perception" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="Active Realtime Segmentation">
    This package implements a real-time active 3D scene segmentation. 
    It is based on an implementation of Belief Propagation on the GPU.
  </description>
  <author>Marten Bjorkman. Maintained by Jeannette Bohg</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/active_realtime_segmentation</url>
  
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="stereo_msgs"/>

  <export>
     <cpp cflags="-I${prefix}/include  -I${prefix}/src" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lfgbgsegment "/>
    </export>
</package><package name="cffi" path="" repo="cram_core" repo_host="https://github.com/moesenle/cram_core">
  <description brief="cffi">
      CFFI - The Common Foreign Function Interface
      http://common-lisp.net/project/cffi/
  </description>
  <author>James Bielman</author>
  <license>cffi</license>
  <review notes="" status="unreviewed"/>

  <depend package="alexandria"/>
  <depend package="trivial_features"/>
  <depend package="babel"/>
</package><package name="rflex" path="/branches/stable/rwi/rflex" repo="wu-ros-pkg" repo_host="https://wu-robotics.googlecode.com/svn">
  <description brief="rflex">
    ROS adaptations of the RFLEX driver. 
  </description>
  <author>David V. Lu!!, Mikhail Medvedev</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rflex</url>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="tf"/>
  <depend package="angles"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="diagnostic_updater"/>

</package><package name="pr2_mannequin_mode_app" path="" repo="pr2_mannequin_mode_app" repo_host="https://kforge.ros.org/pr2apps/pr2_manne_modehg">
  <description brief="Application for mannequin_mode">
    Application for mannequin mode.
  </description>
  <author>Tony Pratkanis</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/pr2_mannequin_mode_app</url>

  <depend package="pr2_mannequin_mode"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="erratic_description" path="/stacks/erratic_robot/trunk/erratic_description" repo="erratic_robot" repo_host="https://ua-ros-pkg.googlecode.com/svn">
    <description brief="URDF for Erratic mobile base">
        URDF description files for the ERA-MOBI (Erratic) mobile robot base from Videre.
    </description>

    <author>Maintained by Antons Rebguns</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/erratic_description</url>

    <depend package="convex_decomposition"/>
    <depend package="ivcon"/>
    <depend package="urdf"/>
    <depend package="xacro"/>
    <depend package="gazebo"/>
    <depend package="gazebo_tools"/>
    <depend package="fake_localization"/>
    <depend package="erratic_gazebo_plugins"/>
    <depend package="map_server"/>
    <depend package="gazebo_worlds"/>
    <depend package="robot_state_publisher"/>
    <depend package="laser_filters"/>
    <depend package="robot_self_filter"/>
    <depend package="pr2_gazebo_plugins"/>

    <export>
        <gazebo gazebo_media_path="${prefix}"/>
    </export>
</package><package name="schunk_bringup_sim" path="" repo="schunk_simulation" repo_host="git://github.com/ipa320/schunk_simulation">
  <description brief="schunk_bringup_sim">

     This package provides launch files for starting a simulated Schunk components.

  </description>
  <author>Florian Weisshardt</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/schunk_bringup_sim</url>

  <depend package="schunk_hardware_config"/>
  <depend package="schunk_controller_configuration_gazebo"/>
  <depend package="cob_controller_configuration_gazebo"/>
  <depend package="gazebo"/>
  <depend package="cob_gazebo_worlds"/>

</package><package name="ompl" path="/stacks/motion_planners/trunk/ompl" repo="motion_planners" repo_host="https://code.ros.org/svn/wg-ros-pkg">

  <description brief="Open Motion Planning Library (OMPL)">
    A library of sampling-based motion planning algorithms
  </description>

  <author>Ioan Sucan/isucan@rice.edu, Mark Moll/mmoll@rice.edu, Lydia Kavraki/kavraki@rice.edu</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ompl</url>

  <depend package="rosconsole"/>

  <export>
    <cpp cflags="-I${prefix}/installation/include `rosboost-cfg --cflags`" lflags="-Wl,-rpath,${prefix}/installation/lib -L${prefix}/installation/lib -lompl `rosboost-cfg --lflags date_time,thread`"/>
  </export>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
  <platform os="ubuntu" version="10.10"/>
  
</package><package name="rosie_executive" path="" repo="cram_rosie" repo_host="http://code.in.tum.de/git/cram-rosie.git">
  <description brief="Cram based executive for the TUM Rosie robot.">
  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <depend package="cram_language"/>
  <depend package="cram_execution_trace"/>
  <depend package="cram_reasoning"/>
  <depend package="cram_utilities"/>
  <depend package="cram_math"/>
  <depend package="designators_ros"/>
  <depend package="cram_roslisp_common"/>
  <depend package="cram_plan_library"/>
  <depend package="cram_plan_knowledge"/>  
  <depend package="cl_json_pl_client"/>
  <depend package="location_costmap"/>
  <depend package="occupancy_grid_costmap"/>
  <depend package="semantic_map_costmap"/>
  <depend package="cram_plan_actionserver"/>
  <depend package="jlo_navp_process_module"/>
  <depend package="kuka_arm_hand_process_module"/>
  <depend package="perception_process_module"/>
  <depend package="powercube_ptu_process_module"/>
</package><package name="prosilica_msgs" path="/darpa_arm_msgs/prosilica_msgs" repo="darpa_arm_msgs" repo_host="http://svn.thearmrobot.com">
  <description brief="prosilica_msgs">

     prosilica_msgs

  </description>
  <author>DARPA ARM GFE Team</author>
  <license>GPL</license>

  <depend package="roscpp"/>

  <export>
    <cpp cflags="-I${prefix}/msg/cpp -I${prefix}/srv/cpp"/>
  </export>
  
</package><package name="stage_message_interface" path="" repo="flyatar" repo_host="http://github.com/peterpolidoro/Flyatar">
  <description brief="stage_message_interface">

     stage_message_interface

  </description>
  <author>Peter Polidoro</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/stage_message_interface</url>
  <depend package="rospy"/>
  <depend package="roslib"/>
  <depend package="tf"/>
  <depend package="stage"/>

</package><package name="itasc_core" path="" repo="itasc_core" repo_host="http://git.mech.kuleuven.be/robotics/itasc_core.git">
  <description brief="iTaSC_core">
    iTaSC core functionallity of the iTaSC-Skill framework
  </description>
  <author>Dominick Vanthienen, Ruben Smits</author>
  <license>BSD, LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.orocos.org/itasc</url>
  <!-- depend package="eigen"/ -->
  <rosdep name="eigen"/>
  <depend package="orocos_kdl"/>
  <depend package="ocl"/>
  <depend package="rtt"/> 
  <export>                                                                                              
    <cpp cflags="-I${prefix}/install/include/orocos -DEIGEN2_SUPPORT"/>                       
  </export>
</package><package name="segway_rmp_demos" path="" repo="segway-rmp-ros-pkg" repo_host="https://github.com/wjwwood/segway-rmp-ros-pkg">
  <description brief="segway_rmp200_demos">

     segway_rmp200_demos

  </description>
  <author>William Woodall</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/segway_rmp200_demos</url>
  <depend package="segway_rmpX"/>
  <depend package="joy2twist_segway_rmp"/>

</package><package name="SIA20D_Mesh_arm_navigation" path="/trunk/motoman/SIA20D_Mesh_arm_navigation" repo="swri-ros-pkg" repo_host="http://swri-ros-pkg.googlecode.com/svn">
  <description brief="SIA20D_Mesh_arm_navigation">

     SIA20D_Mesh_arm_navigation

  </description>
  <author>Shaun Edwards</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/SIA20D_Mesh_arm_navigation</url>
  <depend package="kinematics_base"/>
  <depend package="planning_environment"/>
  <depend package="arm_kinematics_constraint_aware"/>
  <depend package="ompl_ros_interface"/>
  <depend package="trajectory_filter_server"/>
  <depend package="constraint_aware_spline_smoother"/>
  <depend package="move_arm"/>
  <export>
    <kinematics_base plugin="${prefix}/kinematics_plugins.xml"/>
  </export>
</package><package name="geometric_semantics_orocos_typekit" path="" repo="geometric_relations_semantics" repo_host="http://git.mech.kuleuven.be/robotics/geometric_relations_semantics.git">
    <description brief="Orocos geometric_semantics_orocos_typekit package">
        This package contains the orocos typekit for the geometric relations semantics
    </description>
  <author>Tinne De Laet</author>
  <license>LGPLv2.1 / BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.orocos.org/wiki/geometric-relations-semantics-wiki</url> 
    <depend package="rtt"/>
    <depend package="geometric_semantics"/>
    <depend package="geometric_semantics_kdl"/>
</package><package name="stereo_msgs" path="/stacks/common_msgs/trunk/stereo_msgs" repo="common_msgs" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="stereo_msgs">

     stereo_msgs contains messages specific to stereo processing, such as disparity images.

  </description>
  <author>Patrick Mihelich, Kurt Konolige</author>
  <license>BSD</license>
  <review notes="2010/01/18" status="Doc reviewed"/>
  <url>http://www.ros.org/wiki/stereo_msgs</url>

  <depend package="sensor_msgs"/>

  <export>
    <cpp cflags="`PKG_CONFIG_PATH=${prefix}/../../lib/pkgconfig pkg-config --cflags stereo_msgs`" lflags="`PKG_CONFIG_PATH=${prefix}/../../lib/pkgconfig pkg-config --libs stereo_msgs`"/>
  </export>

</package><package name="elas_ros" path="" repo="cyphy_elas_ros" repo_host="https://code.google.com/p/cyphy-elas-ros/">
  <description brief="ROS-Wrapper for libelas">
    This is the ROS wrapper for libelas, library for Efficient LArge Scale stereo matching (see package elas).
  </description>
  <author>Patrick Ross/patrick.ross@connect.qut.edu.au</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/elas_ros</url>

  <depend package="elas"/>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="message_filters"/>
  <depend package="image_transport"/>
  <depend package="cv_bridge"/>
  <depend package="image_geometry"/>
  <depend package="tf"/>
  <depend package="pcl_ros"/>
  <depend package="pcl"/>
  <depend package="geometry_msgs"/>

</package><package name="maximus_2dnav" path="" repo="smart-robotics-ros-pkg" repo_host="https://github.com/JBot/smart-robotics-ros-pkg">
  <description brief="maximus_2dnav">

     maximus_2dnav

  </description>
  <author>Joffrey</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/maximus_2dnav</url>
  <depend package="move_base"/>
  <depend package="maximus_position"/>
  <depend package="maximus_sensors"/>

</package><package name="aaai_lfd_mixed_manipulator" path="/trunk/stacks/aaai_lfd_demo/aaai_lfd_mixed_manipulator" repo="bosch-ros-pkg-e" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg-e/code">
  <description brief="aaai_lfd_mixed_manipulator">

     Object Manipulation for Breakfast Objects - Uses both the openloop manipulation and the manipulation stack
     

  </description>
  <author>Sarah Osentoski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/aaai_lfd_mixed_manipulator</url>
  <depend package="rospy"/>
  <depend package="actionlib_msgs"/>
  <depend package="pr2_pick_and_place_demos"/>
  <depend package="object_manipulator"/>
  <depend package="openloop_object_manipulation"/>
  <depend package="rl_2dnav"/>
</package><package name="deictic_recognizers" path="/trunk/sbl_experimental/deixis/deictic_recognizers" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="deictic_recognizers">

     deictic_recognizers

  </description>
  <author>Edward T. Kaszubski ( ekaszubski@gmail.com )</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/deictic_recognizers</url>
  <depend package="quickdev_cpp"/>
  <depend package="nodelet"/>
  <depend package="humanoid_recognizers"/>
  <depend package="visualization_msgs"/>
  <export>
    <nodelet plugin="${prefix}/nodelets/nodelet_plugins.xml"/>
  </export>
</package><package name="ps3joy" path="/stacks/joystick_drivers/trunk/ps3joy" repo="joystick_drivers" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Playstation 3 SIXAXIS or DUAL SHOCK 3 joystick driver.">
	Driver for the Sony PlayStation 3 SIXAXIS or DUAL SHOCK 3 joysticks. In
	its current state, this driver is not compatible with the use of other
	Bluetooth HID devices. The driver listens for a connection on the HID ports,
	starts the joystick streaming data, and passes the data to the Linux
	uinput device so that it shows up as a normal joystick.
	</description>
  <author>Blaise Gassend, pascal@pabr.org, and Melonee Wise</author>
  <license>BSD</license>

  <review notes="reviewed 10-1-2009" status="Doc reviewed"/>
  <url>http://www.ros.org/wiki/ps3joy</url>
  <depend package="diagnostic_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="rospy"/>
  <depend package="rosgraph"/>

  <rosdep name="libusb-dev"/>
  <rosdep name="joystick"/>
  <rosdep name="bluez"/>
  <rosdep name="python-bluez"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="roslisp_tutorials" path="/stacks/roslisp_support/trunk/roslisp_tutorials" repo="roslisp_support" repo_host="https://code.ros.org/svn/ros">
  <description brief="roslisp tutorials">Examples to demonstrate usage of roslisp</description>
  <author>Bhaskara Marthi</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <depend package="roslisp_runtime"/>
  <depend package="std_msgs"/>
  <url>http://pr.willowgarage.com/wiki/roslisp</url>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="rfid_people_following" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="rfid_people_following">
    RFID people following
  </description>
  <author>Travis Deyle (Healthcare Robotics Lab, Georgia Tech)</author>
  <license>new BSD</license>
  <depend package="gt_pr2"/>  
  <depend package="hrl_rfid"/>  
  <depend package="robotis"/>  
</package><package name="default_cfg_fkie" path="" repo="fkie-ros-pkg" repo_host="git://github.com/fkie/fkie-ros-pkg">
  <description brief="default_cfg_fkie">

     A node which loads a given launch configuration and offers services to 
     list or start the contained nodes. It provides additional description 
     extracted from launch file. This is used by node_manager_fkie.

  </description>
  <author>Alexander Tiderko</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/default_cfg_fkie</url>

  <depend package="rospy"/>
  <depend package="roslib"/>
  <depend package="roslaunch"/>

  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>

</package><package name="semantic_map_cache" path="" repo="cram_highlevel" repo_host="https://github.com/moesenle/cram_highlevel">
  <description brief="semantic_map_cache">

     semantic_map_cache

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/semantic_map_cache</url>
  <depend package="cl_semantic_map_utils"/>
  <depend package="cram_plan_knowledge"/>
  <depend package="cram_designators"/>
  <depend package="cram_projection"/>
</package><package name="kobuki_driver" path="" repo="kobuki" repo_host="https://github.com/yujinrobot/kobuki">
  <description brief="c++ driver library for kobuki">
    <p>
      Pure c++ driver library for Kobuki. This is for those who do not wish to use 
      ROS on their systems.
    </p>
  </description>
  <author>Daniel Stonier, Jorge Santos Simon, 주영훈</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/kobuki_driver</url>
  
  <!--  Ecl -->
  <depend package="ecl_mobile_robot"/>
  <depend package="ecl_converters"/>
  <depend package="ecl_devices"/>
  <depend package="ecl_geometry"/>
  <depend package="ecl_sigslots"/>
  <depend package="ecl_time"/>
  
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lkobuki"/>
  </export>
</package><package name="rqt_web" path="" repo="rqt" repo_host="https://kforge.ros.org/visualization/rqt">
  <description brief="rqt_web">
      rqt_web is a a Python GUI plugin for displaying and interacting with web tools.
  </description>
  <author>Aaron Blasdel</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rqt_web</url>
  <depend package="rospy"/>
  <depend package="qt_gui"/>
  <export>
      <rqt_gui plugin="${prefix}/plugin.xml"/>
  </export>

</package><package name="robotino_node" path="/robotino-ros-pkg/trunk/robotino/robotino_node" repo="robotino-ros-pkg" repo_host="http://svn.openrobotino.org">
  <description brief="robotino_node">
Implements a node which reads sensor data from Robotino and broadcasts it. 
It also implements a few services.
  </description>
  <author>indorewala@servicerobotics.eu</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/robotino_node</url>
  <depend package="robotino_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="tf"/>
  <depend package="image_transport"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
</package><package name="pr2_calibration_launch" path="" repo="pr2_calibration" repo_host="https://kforge.ros.org/calibration/pr2_calibration">
  <description brief="Launch files and configuration files needed to run the calibration pipeline on PR2">
     Launch files and configuration files needed to run the calibration pipeline on PR2. This package is
     still experimental. Expect large changes tp occur.
  </description>
  <author>Vijay Pradeep</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.ros.org/wiki/pr2_calibration_launch</url>

  <!-- Calibration Generic -->
  <depend package="calibration_msgs"/>
  <depend package="calibration_estimation"/>
  <depend package="calibration_launch"/>

  <!--  Laser Stuff -->
  <depend package="pr2_dense_laser_snapshotter"/>
  <depend package="laser_cb_detector"/>
  <depend package="laser_joint_processor"/>
  <depend package="laser_joint_projector"/>

  <!--  Camera Stuff -->
  <depend package="stereo_image_proc"/>
  <depend package="image_cb_detector"/>
  <depend package="monocam_settler"/>

  <!-- Chain Stuff -->
  <depena package="joint_states_settler"/>
  <depend package="image_view"/>
  <depend package="robot_mechanism_controllers"/>

  <!-- msgs -->
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>

  <depend package="pr2_teleop"/>

  <!-- For Running Tests -->
  <depend package="rospy"/>
  <depend package="rostest"/>
  <depend package="kdl"/>
  <depend package="kdl_parser"/>
</package><package name="costmap_2d" path="" repo="navigation" repo_host="https://kforge.ros.org/navigation/navigation">
<description brief="A 2D Costmap">
  This package provides an implementation of a 2D costmap that takes in sensor
  data from the world, builds a 2D or 3D occupancy grid of the data (depending
  on whether a voxel based implementation is used), and inflates costs in a
  2D costmap based on the occupancy grid and a user specified inflation radius.
  This package also provides support for map_server based initialization of a
  costmap, rolling window based costmaps, and parameter based subscription to
  and configuration of sensor topics.
</description>
<author>Eitan Marder-Eppstein</author>
<license>BSD</license>
<review notes="" status="Doc reviewed"/>
<url>http://pr.willowgarage.com/wiki/costmap_2d</url>
<depend package="rosconsole"/>
<depend package="roscpp"/>
<depend package="std_msgs"/>
<depend package="geometry_msgs"/>
<depend package="sensor_msgs"/>
<depend package="laser_geometry"/>
<depend package="tf"/>
<depend package="voxel_grid"/>
<depend package="nav_msgs"/>
<depend package="visualization_msgs"/>
<depend package="rosbag"/>
<depend package="map_server"/>
<rosdep name="pcl"/>
<depend package="pcl_ros"/>
<depend package="dynamic_reconfigure"/>
<depend package="common_rosdeps"/>
<rosdep name="eigen"/>
<export>
    <cpp cflags="-I${prefix}/cfg/cpp -I${prefix}/include `rosboost-cfg --cflags`" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib `rosboost-cfg --lflags thread` -lcostmap_2d"/>
</export>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="polonius_interface" path="/branches/stable/polonius/polonius_interface" repo="wu-ros-pkg" repo_host="https://wu-robotics.googlecode.com/svn">
  <description brief="Polonius Graphical Interface">
    The GUI interface for human control of Polonius
  </description>
  <author>David V. Lu!!</author>
  <license>BSD</license>
  <url>http://ros.org/wiki/polonius_interface</url>
  <depend package="rospy"/>
  <depend package="polonius_msgs"/>
  <rosdep name="wxpython"/>
</package><package name="pr2_gazebo_benchmarks" path="/stacks/pr2_simulator/trunk/pr2_gazebo_benchmarks" repo="pr2_simulator" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description>Package for basic physics tests</description>
  <author>John Hsu</author>
  <license>BSD</license>
  <review notes="" status="na"/>
  <url>http://pr.willowgarage.com/wiki/</url>
  <depend package="pr2_gazebo_plugins"/>
  <depend package="gazebo_plugins"/>
  <depend package="gazebo_worlds"/>
  <depend package="pr2_controller_configuration_gazebo"/>
  <depend package="robot_mechanism_controllers"/>
  <depend package="pr2_mechanism_controllers"/>
  <depend package="robot_state_publisher"/>
  <depend package="pr2_gazebo"/>
  <depend package="gazebo"/>
  <!--depend package="parallel_quickstep"/-->

  <!-- we have a controller -->
  <depend package="pr2_controller_manager"/>
  <depend package="pr2_controller_interface"/>

  <depend package="rospy"/>
  <depend package="std_srvs"/>
  <depend package="std_msgs"/>
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp -I${prefix}/srv/cpp" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib"/>
    <pr2_controller_interface plugin="${prefix}/gazebo_physics_controller_plugins.xml"/>
    <gazebo plugin_path="${prefix}/lib"/>
  </export>
  <rosdep name="libtool"/>
  
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="cyton_driver" path="/trunk/rtcus_applications/cyton_driver" repo="rtc-us-ros-pkg-trunk" repo_host="https://rtc-us-ros-pkg.svn.sourceforge.net/svnroot/rtc-us-ros-pkg">
  <description brief="cython_driver">

     cyton_driver

  </description>
  <author>Pablo Iñigo Blasco</author>
  <license>BSD</license>
  
  <export>
  <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib  -L${prefix}/lib -lecFoundCore -lecCytonHardwareInterface -lecActinSE"/>
  <doxymaker external="http://orocos.org/kdl"/>
  <rosdoc config="rosdoc.yaml"/>
  </export>

  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cython_driver</url>
</package><package name="thea" path="/tags/latest/thea" repo="knowrob" repo_host="http://code.in.tum.de/pubsvn/knowrob">
  <description brief="thea">
      Owl parser and reasoner library for swi-prolog.

      Taken from: http://www.semanticweb.gr/TheaOWLLib/
  </description>
  <author>Vangelis Vassiliadis</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/thea</url>
  
  <depends>rosprolog</depends>
  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>
</package><package name="robotino_kinect_registration" path="/robotino-ros-pkg/trunk/robotino_kinect/robotino_kinect_registration" repo="robotino-ros-pkg" repo_host="http://svn.openrobotino.org">
  <description brief="robotino_kinect_registration">
  </description>
  <author>indorewala@servicerobotics.eu</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/robotino_kinect_registration</url>
  <depend package="robotino_node"/>
  <depend package="pcl"/>
  <depend package="actionlib"/>
  <depend package="robotino_local_move"/>
</package><package name="felz_detector" path="/trunk/recognition/felz_detector" repo="ubc-ros-pkg" repo_host="https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg">
  <description brief="felz_detector">
     A ROS node that wraps DPM(Deformable Parts Model) detector code. One node is responsible for publishing 
     hypothesis of one particular class. It used the model trained using DPM training code in the DPM node.    
  </description>
  <author>Ankur Gupta</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/felz_detector</url>
  <depend package="rospy"/>
  <depend package="DPM"/>
  <depend package="batchdetector"/>
  <depend package="recognition_msgs"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="image_transport"/>
</package><package name="ppl_detection" path="/trunk/ppl_detection" repo="astar-ros-pkg" repo_host="http://astar-ros-pkg.googlecode.com/svn">
  <description brief="ppl_detection">

     People detection using the Microsoft Kinect

  </description>
  <author>Soh De Loong</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ppl_detection</url>
  <depend package="tf"/>
  <depend package="sensor_msgs"/>
  <depend package="std_msgs"/>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="laser_geometry"/>
  <depend package="pcl_ros"/>
  <depend package="pcl_visualization"/>
  <depend package="visualization_msgs"/>
  <depend package="geometry_msgs"/>
</package><package name="mocap_optitrack" path="/trunk/stacks/ais_bonn_drivers/mocap_optitrack" repo="ais-bonn-ros-pkg" repo_host="http://ais-bonn-ros-pkg.googlecode.com/svn">
  <description brief="Streaming of OptiTrack mocap data to tf">
    <p>
    This package contains a node that translates motion capture data from an OptiTrack rig to tf transforms.
    The node receives the binary packages that are streamed by the Arena software,
    decodes them and broadcasts the poses of rigid bodies as tf transforms.
    </p>
    <p>
    Currently, this node supports the NatNet streaming protocol v1.4.
    </p>
    <p>
    Copyright (c) 2010, University of Bonn, Computer Science Institute VI<br/>
    All rights reserved.
    </p>
  </description>
  <author>Kathrin Gräve/graeve@ais.uni-bonn.de</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/mocap_optitrack</url>
  <depend package="roscpp"/>
  <depend package="tf"/>
</package><package name="pr2_navigation_teleop" path="" repo="pr2_navigation" repo_host="https://kforge.ros.org/pr2navigation/hg">
  <description brief="Teleop configuration for the PR2 while running navigation.">
     This package holds a special teleop configuration for the PR2 robot that
     should be used when running applications that use autonomous navigation.
  </description>
  <author>Eitan Marder-Eppstein</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_navigation_teleop</url>
  <depend package="pr2_teleop"/>
  <depend package="pr2_machine"/>
  <depend package="topic_tools"/>
</package><package name="pluginlib" path="" repo="pluginlib" repo_host="https://kforge.ros.org/common/pluginlib">
  <description brief="Tools for creating and using plugins with ROS">
    The pluginlib package provides tools for writing and dynamically loading plugins using the ROS build infrastructure.
    To work, these tools require plugin providers to register their plugins in the manifest.xml of their package.
    Pluginlib includes parts of Poco from pocoproject.org
  </description>
  <author>Maintained by Dirk Thomas</author>
  <license>BSD, Boost Software License</license>
  <review notes="http://www.ros.org/wiki/pluginlib/Reviews/2009-10-06_Doc_Review" status="doc reviewed"/>
  <url>http://ros.org/wiki/pluginlib</url>

  <depend package="roslib"/>
  <depend package="rosconsole"/>

  <rosdep name="tinyxml"/>

  <export>
    <cpp cflags="`pkg-config --cflags pluginlib`" lflags="`pkg-config --libs pluginlib`"/>
    <pluginlib plugin="${prefix}/test/test_plugins.xml"/>
  </export>

  <platform os="ubuntu" version="10.04"/>
  <platform os="ubuntu" version="10.10"/>
  <platform os="ubuntu" version="11.04"/>
</package><package name="oit_msgs" path="/trunk/OIT/oit_msgs" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="oit_msgs">
  </description>
  <author>dfseifer@usc.edu</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://robotics.usc.edu/ros</url>
  <depend package="std_msgs"/>
  <export>
    <cpp cflags="-I${prefix}/msg/cpp"/>
  </export>
</package><package name="stop_server" path="" repo="roboframenet" repo_host="https://kforge.ros.org/appmanandroid/roboframenet">
  <description brief="stop_server">

     stop_server is an RFNServer which halts all activity.  It does this through the executor's preemption, which stops the previous activity.  In this sense, the actual code in this package does very little, but the stop server itself allows for an escape from other activities.

  </description>
  <author>Brian Thomas</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/stop_server</url>
  <depend package="rospy"/>
  <depend package="rfnserver"/>

</package><package name="robchair_bringup" path="/stacks/robchair_robot/trunk/robchair_bringup" repo="robchair_robot" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="robchair_bringup">

     This package holds all the files required to start the RobChair robot, the smart wheelchair from the ISR UC.

  </description>
  <author>Gonçalo Cabrita</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/robchair_bringup</url>

</package><package name="object_graph" path="/trunk/mapping/object_graph" repo="ubc-ros-pkg" repo_host="https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg">
  <description brief="object_graph">

     object_graph

  </description>
  <author>David Meger</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/scene_server</url>

  <depend package="point_cloud_mapping"/>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="recognition_msgs"/>
  <depend package="tf"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>

  <rosdep name="db-cpp"/>

</package><package name="openrtm_python" path="" repo="stacks/openrtm_python" repo_host="git://github.com/laas/openrtm_python">
  <description brief="OpenRTM Python">
    ROS package of the 3rd party package OpenRTM-aist Python.
  </description>
  <author>Thomas Moulard/thomas.moulard@gmail.com</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://www.openrtm.org/</url>

  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>

  <rosdep name="python"/>
  <rosdep name="doxygen"/>
</package><package name="cop_collision_interface" path="" repo="ias_perception" repo_host="http://code.in.tum.de/git/ias-perception.git">
  <description brief="cop_collision_interface">

     cop_collision_interface

  </description>
  <author>Ulrich Friedrich Klank</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cop_collision_interface</url>
  <depend package="cop_sr4_plugins"/>
  <depend package="cognitive_perception"/>
  <depend package="tabletop_collision_map_processing"/>
  <depend package="arm_navigation_msgs"/>

</package><package name="maximus_sensors" path="" repo="smart-robotics-ros-pkg" repo_host="https://github.com/JBot/smart-robotics-ros-pkg">
  <description brief="maximus_sensors">

     maximus_sensors

  </description>
  <author>Joffrey</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/maximus_sensors</url>
  <depend package="avr_bridge"/>
  <depend package="geometry_msgs"/>
  <depend package="std_msgs"/>
  <depend package="roscpp"/>
  <depend package="nav_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="tf"/>
  <depend package="joy"/>
  <depend package="move_base_msgs"/>
  <depend package="actionlib"/>
  <depend package="laser_geometry"/>

</package><package name="object_manipulation_msgs" path="/stacks/object_manipulation/branches/0.6-branch/object_manipulation_msgs" repo="object_manipulation" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="object_manipulation_msgs">

    Generic messages for pickup and place functionality. The messages
    contained here define a complete interface for pickup and place
    tasks. 

    Note that for some of the general services and actions defined
    here, robot-specific implementations might exist elsewhere and be
    used at run time.

  </description>
  <author>Matei Ciocarlie</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/object_manipulation_msgs</url>

  <depend package="actionlib_msgs"/>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="trajectory_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="household_objects_database_msgs"/>
  <depend package="arm_navigation_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>
  
</package><package name="rve_interfaces" path="" repo="visualization_engine" repo_host="https://kforge.ros.org/visengine/hg">
  <description brief="rve_interfaces">

     rve_interfaces

  </description>
  <author>Josh Faust</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rve_interfaces</url>
  <depend package="rve_interface_gen"/>
  <depend package="rve_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  
  <export>
  	<cpp cflags="-I${prefix}/include -I${prefix}/interface_gen/cpp/include" lflags="-lrve_interfaces -L${prefix}/lib -Wl,-rpath,${prefix}/lib"/>
  </export>
</package><package name="bond" path="" repo="bond_core" repo_host="https://kforge.ros.org/common/bondcore">
  <description brief="bond">

     A bond allows two processes, A and B, to know when the other has
     terminated, either cleanly or by crashing.  The bond remains
     connected until it is either broken explicitly or until a
     heartbeat times out.

  </description>
  <author>Stuart Glaser</author>
  <license>BSD</license>
  <review notes="http://www.ros.org/wiki/bond/Reviews/2010-07-28_API_Review" status="API cleared"/>
  <url>http://ros.org/wiki/bond</url>
  <depend package="roslib"/>

</package><package name="scout_ndirect" path="/stacks/scout_robot/trunk/scout_ndirect" repo="scout_robot" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="scout_ndirect">

     Wraper for the Ndirect library, allowing control of a Scout robot on ROS.

  </description>
  <author>Gonçalo Cabrita and Pedro Sousa</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/scout_ndirect</url>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="nav_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="lse_sensor_msgs"/>

</package><package name="joystick_ps3" path="" repo="flyatar" repo_host="http://github.com/peterpolidoro/Flyatar">
  <description brief="joystick_ps3">

     joystick_ps3

  </description>
  <author>Peter Polidoro</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url/>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <!-- <depend package="ps3joy"/> -->
  <depend package="joy"/>

</package><package name="empty_pointcloud" path="" repo="uuisrc-ros-pkg" repo_host="https://github.com/cburbridge/uuisrc-ros-pkg">
  <description brief="empty_pointcloud">

     empty_pointcloud

  </description>
  <author>Lorenzo Riano</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/empty_pointcloud</url>
  <depend package="roscpp"/>
  <depend package="roslib"/>
  <depend package="sensor_msgs"/>

</package><package name="object_recognition_server" path="" repo="object_recognition" repo_host="git://github.com/wg-perception/ros-object_recognition">
  <description brief="object_recognition_server">

     object_recognition_server

  </description>
  <author>Ethan Rublee</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/object_recognition_server</url>

  <depend package="object_recognition_msgs"/>
  <depend package="object_recognition_core"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <export>
    <cpp cflags="-I${prefix}/include/msg_gen/cpp/include/"/>
  </export>
</package><package name="rcf_mod_map_compress" path="/trunk/RCF4ROS/mod/rcf_mod_map_compress" repo="roblab-whge-ros-pkg" repo_host="http://roblab-whge-ros-pkg.googlecode.com/svn">
  <description brief="Static map server">

     Provides the function to up- and download from the client. 

  </description>
  <author>B. König</author>
  <license>CreativeCommons BY-NC-SA License</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/Testknoten</url>
  <depend package="roscpp"/>
  <depend package="nav_msgs"/>
  <depend package="rcf_control_protocol"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="pr2_collision_monitor" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="pr2_collision_monitor">

      Provides an easy to use and train collision detection service for
      the pr2's arm joints when using the JointTrajectoryController.

  </description>
  <author>Kelsey Hawkins, Advisor: Prof. Charlie Kemp (Healthcare Robotics Lab
    at Georgia Tech)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_collision_detection</url>
  <depend package="roscpp"/>
  <depend package="rosbag"/>
  <depend package="std_msgs"/>
  <depend package="std_srvs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="pr2_msgs"/>
</package><package name="ecl_errors" path="/trunk/ecl_lite/ecl_errors" repo="ecl_lite" repo_host="https://embedded-control-library.googlecode.com/svn">
  <description brief="Error mechanisms for debugging.">

    This library provides lean and mean error mechanisms. 
    It includes c style error functions as well as a few 
    useful macros. For higher level mechanisms, 
	refer to ecl_exceptions.

  </description>
  <author>Daniel Stonier (d.stonier@gmail.com)</author>
  <license>BSD</license>
  <review notes="" status="doc reviewed"/>
  <url>http://snorriheim.dnsdojo.com/redmine/wiki/ecl</url>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lecl_errors"/>
  </export>
	
  <depend package="ecl_license"/>
  <depend package="ecl_build"/>
  <depend package="ecl_config"/>
  <rosbuild2>
    <export>
      <include_dir>${ecl_errors_SOURCE_DIR}/include</include_dir>
      <!--lib>ecl_errors</lib-->
    </export>
    <depend package="ecl_license"/>
    <depend package="ecl_build"/>
    <depend package="ecl_config"/>
  </rosbuild2>
</package><package name="hector_geotiff" path="/branches/fuerte/hector_slam/hector_geotiff" repo="hector_slam" repo_host="https://tu-darmstadt-ros-pkg.googlecode.com/svn">
  <description brief="     hector_geotiff provides a node that can be used to save occupancy grid map, robot trajectory and object of interest data to RoboCup Rescue compliant GeoTiff images">

     hector_geotiff provides a node that can be used to save occupancy grid map, robot trajectory and object of interest data to RoboCup Rescue compliant GeoTiff images 

  </description>
  <author>Stefan Kohlbrecher</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hector_geotiff</url>
  <depend package="nav_msgs"/>
  <depend package="std_msgs"/>
  <depend package="roscpp"/>
  <depend package="hector_map_tools"/>
  <depend package="hector_nav_msgs"/>
  <depend package="pluginlib"/>

  <rosdep name="libqt4-dev"/>
  <rosdep name="eigen"/>

  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>
</package><package name="engagement_generation" path="/trunk/engagement/engagement_generation" repo="ros-engagement" repo_host="http://ros-engagement.svn.sourceforge.net/svnroot/ros-engagement">
  <description brief="Generating Engagement Behaviors in Human-Robot Interaction">
    Human-robot engagement generation package developed at Worcester Polytechnic
    Institute by Aaron Holroyd et al. <br/>Currently contains the 
    <b>generation node</b> that is responsible for generating 
    <u>directed gaze</u>, <u>mutual facial gaze</u>, <u>adjacency 
    pairs</u>, and <u>backchannels</u> during an interaction.
  </description>
  <author>Aaron Holroyd (aholroyd (at) wpi (dot) edu)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://sourceforge.net/projects/ros-engagement/</url>
  <depend package="engagement_msgs"/>
  <depend package="engagement_srvs"/>
  <depend package="bml_msgs"/>
  <depend package="bml_srvs"/>
  <depend package="bml_realizer"/>
  
  <export>
  	<rosdoc config="../rosdoc.yaml"/>
  </export>
</package><package name="cob_light" path="" repo="cob_driver" repo_host="git://github.com/ipa320/cob_driver">
  <description brief="cob_light">

     This package contains scripts to operate the LED lights on Care-O-bot.

  </description>
  <author>Florian Weisshardt</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_light</url>
  
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="visualization_msgs"/>

</package><package name="rocon_gateway_tests" path="" repo="rocon_multimaster" repo_host="https://github.com/robotics-in-concert/rocon_multimaster">
  <description brief="rocon_gateway_tests">

     rocon_gateway_tests

  </description>
  <author>Jihoon</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rocon_gateway_tests</url>
  <depend package="rospy"/>
  <depend package="gateway_comms"/>

</package><package name="cob_robot_calibration_est" path="" repo="cob_calibration" repo_host="git://github.com/ipa320/cob_calibration">
  <description brief="cob_robot_calibration_est">

     The cob_robot_calibration_est package is adapted from the electric version of
     pr2_calibration_estimation. It runs optimizations to estimate kinematic parameters
     of Care-O-bot.

  </description>
  <author>Vijay Pradeep, Sebastian Haug</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_robot_calibration_est</url>

  <depend package="rospy"/>
  <depend package="rostest"/>

  <depend package="sensor_msgs"/>
  <depend package="visualization_msgs"/>

  <depend package="cob_calibration_msgs"/>

  <rosdep name="python-scipy"/>

</package><package name="hydra_pr2_teleop" path="/trunk/hydra_pr2_teleop" repo="stanford-ros-pkg" repo_host="https://stanford-ros-pkg.googlecode.com/svn">
  <description brief="hydra_pr2_teleop">
     hydra_pr2_teleop
  </description>
  <author/>
  <depend package="geometry_msgs"/>
  <depend package="roscpp"/>
  <depend package="hydra"/>
  <depend package="tf"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="actionlib"/>
</package><package name="rviz_plugin_tutorials" path="/stacks/visualization_tutorials/branches/visualization_tutorials-0.6/rviz_plugin_tutorials" repo="visualization_tutorials" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="RViz plugin tutorials">

     Tutorials showing how to write plugins for RViz.

  </description>
  <author>Dave Hershberger</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rviz_plugin_tutorials</url>
  <depend package="rviz"/>
  <export>
      <rosdoc config="${prefix}/rosdoc.yaml"/>
      <rviz plugin="${prefix}/plugin_description.xml"/>
  </export>
</package><package name="mrpt_ekf_slam_3d" path="/trunk/mrpt_slam/mrpt_ekf_slam_3d" repo="mrpt-ros-pkg" repo_host="http://mrpt-ros-pkg.googlecode.com/svn">
  <description brief="mrpt_ekf_slam_3d">

     mrpt_ekf_slam_3d

  </description>
  <author>Jose Luis</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/mrpt_ekf_slam_3d</url>
  <depend package="mrpt_msgs"/>
  <depend package="roscpp"/>

</package><package name="planner_benchmarks" path="/trunk/symbolic_planning/planner_benchmarks" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="domains">
      A collection of PDDL, PDDL/M domains and problems mainly from the International Planning Competition (IPC).
  </description>
  <author>Multiple</author>
  <license/>
  <review notes="" status="unreviewed"/>
  <url>http://www.ros.org/wiki/planner_benchmarks</url>
</package><package name="kuka_lwr" path="" repo="itasc_robots_objects" repo_host="http://git.mech.kuleuven.be/robotics/itasc_robots_objects.git">
    <description brief="Kuka LWR">
        This package contains itasc robot component for a KUKA LWR
	    Part of the iTaSC-Skill framework, itasc_robots_objects
    </description>
    <license>BSD,LGPL</license>
    <author>Dominick Vanthienen</author>
    <url>http://www.orocos.org/itasc</url>
    <depend package="rtt"/>
    <rosdep name="eigen"/>
    <depend package="orocos_kdl"/>
    <depend package="ocl"/>
    <depend package="itasc_core"/>
</package><package name="usc_utilities" path="" repo="usc-clmc-ros-pkg" repo_host="https://github.com/usc-clmc/usc-clmc-ros-pkg">
  <description brief="usc_utilities">

     utilities contain utility functions used across several packages

  </description>
  <author>Mrinal Kalakrishnan</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>

  <depend package="rosconsole"/>
  <depend package="roscpp"/>
  <depend package="kdl"/>
  <depend package="tf"/>
  <depend package="kdl_parser"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="visualization_msgs"/>
  
  <depend package="rosbag"/>
  <depend package="bspline"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lusc_utilities"/>
  </export>

</package><package name="rviz" path="/stacks/visualization/branches/visualization-1.8/rviz" repo="visualization" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Robot VIsualiZer">

  A 3d visualization environment for robots using ROS.

  </description>
  <author>Dave Hershberger, Josh Faust</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rviz</url>

  <depend package="python_qt_binding"/>
  <depend package="ogre"/>
  <depend package="ogre_tools"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="rosconsole"/>
  <depend package="message_filters"/>
  <depend package="std_msgs"/>
  <depend package="std_srvs"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="tf"/>
  <depend package="laser_geometry"/>
  <depend package="visualization_msgs"/>
  <depend package="urdf"/>
  <depend package="urdf_interface"/>
  <depend package="resource_retriever"/>
  <depend package="image_transport"/>
  <depend package="interactive_markers"/>
  <depend package="pluginlib"/>
  <depend package="common_rosdeps"/>
  <export> 
      <cpp cflags="-I${prefix}/src/" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lrviz"/>
      <python path="${prefix}/lib:${prefix}/src/python_bindings"/>
      <rviz plugin="${prefix}/src/rviz/default_plugin/plugin_description.xml"/>
  </export>
  <rosdep name="libqt4-dev"/>
  <rosdep name="libqt4-opengl-dev"/>
  <rosdep name="qt4-qmake"/>
  <rosdep name="assimp"/>
  <rosdep name="yaml-cpp"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="message_sampler" path="" repo="scene_labelling_rgbd" repo_host="https://github.com/aa755/scene_labelling_rgbd">
  <description brief="message_sampler">

     message_sampler

  </description>
  <author>Hema Koppula</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/message_sampler</url>

  <!--depend package="tf"/-->
  <!--depend package="tf2"/-->
  <depend package="pcl"/>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <!--depend package="eigen"/-->
  <depend package="pcl_ros"/>
  <!--depend package="opencv2"/-->
  <!--depend package="cv_bridge"/-->
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <!--depend package="image_geometry"/-->
  <depend package="pcl_ros"/>


</package><package name="tf_prolog" path="/tags/latest/tf_prolog" repo="knowrob" repo_host="http://code.in.tum.de/pubsvn/knowrob">
  <description brief="mod_tf">

     mod_tf

  </description>
  <author>Sjoerd van den Dries, Moritz Tenorth</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/tf_test</url>
  <depend package="jpl"/>
  <depend package="tfjava"/>

  <export>
    <java classpath="${prefix}/bin"/>
  </export>

</package><package name="pr2_camera_synchronizer" path="" repo="pr2_robot" repo_host="https://kforge.ros.org/pr2robot/hg">
  <description brief="Node to manage synchronization of the pr2 cameras and     the texture projector.">
    <p>
    The PR2 is equipped with a texture projector that can be used to
    project a texture onto featureless surfaces, allowing their
    three-dimensional structure to be determined using stereoscopy. The
    projector operates in a pulsed mode, producing brief (2ms) pulses of
    light. Cameras that want to see the texture must expose during the
    projector pulse; other cameras should be expose while the projector is
    off.
    </p>
    
    <p>
      This package contains the pr2_projector_synchronizer node. Based on its dynamically reconfigurable parameters, this node controls the projector pulsing, and sets up triggering of the WGE100 cameras. 
    </p>
  </description>
  <author>Blaise Gassend</author>
  <license>BSD</license>
  <review notes="Jan 21 2010" status="Doc Reviewed"/>
  <url>http://pr.willowgarage.com/wiki/pr2_camera_synchronizer</url>
  <depend package="ethercat_trigger_controllers"/>
  <depend package="rospy"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="wge100_camera"/>
  <depend package="diagnostic_msgs"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="armadillo_arm_navigation" path="/trunk/swri_demos/armadillo_arm_navigation" repo="swri-ros-pkg" repo_host="http://swri-ros-pkg.googlecode.com/svn">
  <description brief="armadillo_arm_navigation">

     armadillo_arm_navigation

  </description>
  <author>Shaun Edwards</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/armadillo_arm_navigation</url>
  <depend package="kinematics_base"/>
  <depend package="planning_environment"/>
  <depend package="arm_kinematics_constraint_aware"/>
  <depend package="ompl_ros_interface"/>
  <depend package="trajectory_filter_server"/>
  <depend package="constraint_aware_spline_smoother"/>
  <depend package="move_arm"/>
  <depend package="chomp_motion_planner"/>
  <depend package="armadillo"/>
  <depend package="dx100"/>

  <export>
    <kinematics_base plugin="${prefix}/kinematics_plugins.xml"/>
  </export>
</package><package name="ias_mechanism_controllers" path="/controllers/ias_mechanism_controllers" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="ias_mechanism_controllers">
    Mechanism controllers for ias related stuff
    (Odometry publisher for simulated ROSIE and a
    multi-joint velocity controller.)
  </description>
  <author>Lorenz Moesenlechner, Ingo Kresse</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>

  <depend package="pluginlib"/>

  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="pr2_controller_interface"/>
  <depend package="pr2_mechanism_model"/>
  <depend package="pr2_mechanism_controllers"/>
  <depend package="pr2_mechanism_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="filters"/>
  <depend package="control_toolbox"/>
  <depend package="realtime_tools"/>
  <depend package="pr2_controller_manager"/>

  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp -I${prefix}/srv/cpp" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lias_mechanism_controllers"/>
    <pr2_controller_interface plugin="${prefix}/controller_plugins.xml"/>
  </export>

</package><package name="robotiq_modbus_tcp" path="/trunk/robotiq/robotiq_modbus_tcp" repo="swri-ros-pkg" repo_host="http://swri-ros-pkg.googlecode.com/svn">
  <description brief="Robotiq Modbus TCP Communication">

     A stack to communicate with Robotiq grippers using the Modbus TCP protocol

  </description>
  <author>Nicolas Lauzier (Robotiq inc.)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/robotiq_modbus_tcp</url>
  <rosdep name="python-pymodbus"/>
</package><package name="camera_self_filter" path="/trunk/stacks/bosch_image_proc/camera_self_filter" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="camera_self_filter">

     camera_self_filter

  </description>
  <author>Christian Bersch (Maintained by Benjamin Pitzer)</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/camera_self_filter</url>
  <depend package="roscpp"/>
  <depend package="image_geometry"/>
  <depend package="image_transport"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="sensor_msgs"/>
  <depend package="urdf"/>
  <depend package="tf"/>
  <depend package="message_filters"/>
  <depend package="resource_retriever"/>

  <rosdep name="libglew-dev"/>
</package><package name="tts_server" path="" repo="rcommander_pr2" repo_host="https://kforge.ros.org/rcommander/rcommander_pr2">
  <description brief="tts_server">

     tts_server

  </description>
  <author>haidai</author>
  <license>BSD</license>

  <review notes="" status="unreviewed"/>
  <depend package="rospy"/>
  <rosdep name="festival-extra"/>
  <url>http://ros.org/wiki/tts_server</url>

</package><package name="nite" path="" repo="openni_kinect" repo_host="https://kforge.ros.org/openni/openni_ros">
  <description brief="nite">

    Meta package to pull in the dependencies for NITE and export the
    necessary build flags. This package is deprecated in Fuerte;
    compile directly against the system dependency instead. See the
    wiki docs for migration instructions.

  </description>
  <author>Tully Foote</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/nite</url>
  <depend package="openni"/>

  <rosdep name="nite-dev"/>
  <rosdep name="ps-engine"/>

  <export>
    <cpp cflags="-I/usr/include/nite"/>
  </export>


</package><package name="laser_filters" path="/stacks/laser_pipeline/trunk/laser_filters" repo="laser_pipeline" repo_host="https://code.ros.org/svn/ros-pkg">
<description brief="Filters for processing laser scans">

Assorted filters designed to operate on 2D planar laser scanners,
which use the sensor_msgs/LaserScan type.

</description>
<author>Tully Foote</author>
<license>BSD</license>
<review notes="09/29/2009" status="Doc reviewed"/>
<url>http://ros.org/wiki/laser_filters</url>
<depend package="sensor_msgs"/>
<depend package="roscpp"/>
<depend package="tf"/>
<depend package="filters"/>
<depend package="message_filters"/>
<depend package="laser_geometry"/>
<depend package="pluginlib"/>
<depend package="pcl_ros"/>
<export>
<cpp cflags="-I${prefix}/include `rosboost-cfg --cflags`" lflags=""/>
<filters plugin="${prefix}/laser_filters_plugins.xml"/>
</export>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="rviz_plugin_covariance" path="" repo="stacks/rviz_plugin_covariance" repo_host="git://github.com/laas/rviz_plugin_covariance">
  <description brief="RViz plugin covariance">

     Plug-in providing geometry_msgs/PoseWithCovariance display.

  </description>
  <author>Thomas Moulard</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rviz_plugin_covariance</url>

  <export>
      <rosdoc config="${prefix}/rosdoc.yaml"/>
      <rviz plugin="${prefix}/plugin_description.xml"/>
  </export>

  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="rviz"/>
  <rosdep name="eigen"/>
</package><package name="cob_calibration_data" path="" repo="cob_calibration_data" repo_host="git://github.com/ipa320/cob_calibration_data">
  <description brief="cob_calibration_data">

     This repository holds the current calibration data for Care-O-bot.

  </description>
  <author>Florian Weisshardt</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_calibration_data</url>

</package><package name="rocon_gateway" path="" repo="rocon_multimaster" repo_host="https://github.com/robotics-in-concert/rocon_multimaster">
  <description brief="rocon_gateway">

     rocon_gateway

  </description>
  <author>Jihoon</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rocon_gateway</url>
  <depend package="rospy"/>
  <depend package="roslib"/>
  <depend package="zeroconf_comms"/>
  <depend package="rocon_gateway_sync"/>
  <depend package="gateway_comms"/>

</package><package name="hector_marker_drawing" path="/branches/fuerte/hector_common/hector_marker_drawing" repo="hector_common" repo_host="https://tu-darmstadt-ros-pkg.googlecode.com/svn">
  <description brief="hector_marker_drawing">

     hector_marker_drawing provides convenience functions for easier publishing of visualization markers

  </description>
  <author>Stefan Kohlbrecher</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hector_marker_drawing</url>
  <depend package="visualization_msgs"/>
  <depend package="roscpp"/>
  
  <rosdep name="eigen"/>

  <export>
  <cpp cflags="`pkg-config --cflags eigen3` -I${prefix}/include"/>
  </export>

</package><package name="srs_assisted_arm_navigation_msgs" path="" repo="srs_public" repo_host="git://github.com/ipa320/srs_public">
  <description brief="srs_assisted_arm_navigation_msgs">

     srs_assisted_arm_navigation_msgs

  </description>
  <author>Zdenek Materna</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/srs_assisted_arm_navigation_msgs</url>
  
  <depend package="geometry_msgs"/>
  <depend package="actionlib_msgs"/>

</package><package name="move_arm_head_monitor" path="" repo="arm_navigation_experimental" repo_host="https://kforge.ros.org/armnavigation/experimental">
  <description brief="move_arm_head_monitor">

     A node that provides monitoring capability for robot arms by continuously pointing the head at the location in space where an arm will be in the future.

  </description>
  <author>Adam Harmat</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/move_arm_head_monitor</url>
  <depend package="roscpp"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="control_msgs"/>
  <depend package="visualization_msgs"/> 
  <depend package="tf"/>
  <depend package="planning_environment"/>
  <depend package="head_monitor_msgs"/>
  <depend package="common_rosdeps"/>

  <rosdep name="eigen"/>


</package><package name="kinematics_tests" path="" repo="sr_contrib" repo_host="lp:sr-contrib">
  <description brief="kinematics_tests">

    This package contains some programs to test the inverse kinematics implemented
    in sr_kinematics.

  </description>
  <author>Guillaume WALCK, derived partially from kinematics_tutorial</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/kinematics_tutorial</url>
  <depend package="kinematics_msgs"/>
  <depend package="sr_robot_msgs"/>
  <depend package="pr2_mechanism_msgs"/>
  <depend package="std_msgs"/>
  <depend package="sr_hand"/>
  <depend package="tf"/>
</package><package name="win_roscd" path="" repo="win_ros" repo_host="https://github.com/stonier/win_ros">
  <description brief="Implements the legendary bash roscd in the windows shell">

  Some quick magic to implement roscd in cmd.exe. This is called from 
  winshell.bat (see win_env).

  </description>
  <author>Daniel Stonier</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/win_roscd</url>

</package><package name="small" path="" repo="csiro-asl-ros-pkg" repo_host="lp:csiro-asl-ros-pkg">
  <description brief="small">

     SMALL is a C++ library defining and implementing common geometric and 
     mathematical functionality required for robotics applications.
     SMALL consists of two major parts: a linear algebra library 
     (matrices and vectors) and a spatial math library (poses and transformations).
	 It is just a collection of C++ headers and not a binary library.

  </description>
  <author>Maintained by Fred Pauling</author>
  <license>LGPL</license>
  <review notes="" status="experimental"/>
  <url>https://launchpad.net/small</url>
  <rosdep name="bzr"/>
  <export>
      <cpp cflags="-I${prefix}/include"/>
	  <rosdoc config="rosdoc.yaml"/>
  </export>

</package><package name="controller_demos" path="/branches/pr2_demos/iros_demos/controller_demos" repo="mit-ros-pkg-pr2-demos" repo_host="https://svn.csail.mit.edu/mit-ros-pkg">
  <description brief="controller_demos">

     controller_demos

  </description>
  <author>Jenny Barry</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/controller_demos</url>
  <depend package="pr2_utils"/>
  <depend package="rospy"/>
  <depend package="demo_tools"/>

</package><package name="pr2_tabletop_manipulation_gazebo_demo" path="/stacks/wg_robots_gazebo/trunk/pr2_tabletop_manipulation_gazebo_demo" repo="wg_robots_gazebo" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_tabletop_manipulation_gazebo_demo">

     Tests pr2_tabletop_manipulation in gazebo simulation.
     Uses the grasping pipeline and runs through a single pick and place routine.

  </description>
  <author>John Hsu</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_tabletop_manipulation_gazebo_demo</url>
  <depend package="pr2_tabletop_manipulation_launch"/>
  <depend package="pr2_gazebo"/>
  <depend package="gazebo"/>
  <depend package="gazebo_plugins"/>
  <depend package="gazebo_msgs"/>
  <depend package="rosgraph_msgs"/>
  <depend package="pr2_tuckarm"/>
  <depend package="robot_state_publisher"/>
  <depend package="household_objects_database"/>
  <depend package="actionlib"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="pr2_common_action_msgs"/>
  <depend package="pr2_pick_and_place_demos"/>

  <rosdep name="python-scipy"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="pr2_gripper_action" path="/stacks/pr2_controllers/trunk/pr2_gripper_action" repo="pr2_controllers" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_gripper_action">

  The pr2_gripper_action provides an action interface for using the
  gripper. Users can specify what position to move to (while limiting the
  force) and the action will report success when the position is reached or
  failure when the gripper cannot move any longer.

  </description>
  <author>Stuart Glaser</author>
  <license>BSD</license>
  <review notes="http://www.ros.org/wiki/pr2_gripper_action/Reviews/2010-01-13_Doc_Review" status="Doc reviewed"/>
  <url>http://ros.org/wiki/pr2_gripper_action</url>
  <depend package="roscpp"/>
  <depend package="actionlib_msgs"/>
  <depend package="actionlib"/>
  <depend package="pr2_mechanism_controllers"/>
  <depend package="robot_mechanism_controllers"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="pr2_mechanism_model"/>

  <export>
    <cpp cflags="-I${prefix}/msg/cpp"/>
  </export>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="fast_plane_detection" path="/stacks/tabletop_object_perception/branches/0.4-branch/fast_plane_detection" repo="tabletop_object_perception" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="fast_plane_detector">

     fast_plane_detector

  </description>
  <author>Jeannette Bohg</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/fast_plane_detector</url>
  <depend package="std_msgs"/>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="stereo_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="tf"/>
  <!--depend package="pcl"/-->
  <depend package="rviz"/>
  <depend package="image_transport"/>

</package><package name="hrl_segway_omni" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="segway_omni">
      A package for commanding omnidirectional Segway bases.
  </description>
  <author>Cressel Anderson, Hai Nguyen, Marc Killpack, Advait Jain Advisor: Prof. Charlie Kemp, Lab: Healthcare Robotics Lab at Georgia Tech</author>
  <license>new BSD</license>
  <depend package="rospy"/>  
  <depend package="zenither"/>  
  <depend package="hrl_lib"/>  
  <depend package="hrl_msgs"/>  
  <depend package="hrl_srvs"/>  
  <depend package="geometry_msgs"/> 
  <depend package="tf"/> 
  <depend package="joy"/> 

</package><package name="cob_sound" path="" repo="cob_driver" repo_host="git://github.com/ipa320/cob_driver">
  <description brief="cob_sound">

     This package implements a sound play module using text2wave and aplay through python.

  </description>
  <author>Florian Weisshardt</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_sound</url>
  
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="sound_play"/>
  <depend package="actionlib"/>
  <depend package="std_msgs"/>

</package><package name="pr2_controllers_msgs" path="/stacks/pr2_controllers/trunk/pr2_controllers_msgs" repo="pr2_controllers" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_controllers_msgs">

     Messages, services, and actions used in the pr2_controllers stack.

  </description>
  <author>Stuart Glaser</author>
  <license>BSD</license>
  <review notes="" status="Doc reviewed"/>
  <url>http://ros.org/wiki/pr2_controllers_msgs</url>

  <depend package="actionlib_msgs"/>
  <depend package="trajectory_msgs"/>
  <depend package="geometry_msgs"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="tf2_geometry_msgs" path="" repo="geometry_experimental" repo_host="https://kforge.ros.org/geometry/experimental">
  <description brief="tf2_geometry_msgs">

     tf2_geometry_msgs

  </description>
  <author>Wim Meeussen</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/tf2_geometry_msgs</url>

  <depend package="geometry_msgs"/>
  <depend package="tf2_ros"/>
  <depend package="kdl"/>

 <export>
    <cpp cflags="-I${prefix}/include"/>    
 </export>

</package><package name="background_filters" path="/trunk/arrg/ua_vision/background_filters" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="Filters for removing the background from sensor data">

     Currently only includes a simple filter for filtering floor points out of PointCloud data.

    </description>
    <author>Daniel Hewlett, Antons Rebguns</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/background_filters</url>

    <depend package="roscpp"/>
    <depend package="rosconsole"/>

    <depend package="sensor_msgs"/>

    <depend package="tf"/>
    <depend package="pluginlib"/>
    <depend package="filters"/>

    <depend package="opencv2"/>
    <depend package="cv_bridge"/>
    <depend package="sensor_msgs"/>
    <depend package="image_transport"/>
    <depend package="geometry_msgs"/>

    <depend package="nmpt"/>

    <depend package="pcl"/>
    <depend package="visualization_msgs"/>

    <export>
        <cpp cflags="-I${prefix}/include `rosboost-cfg --cflags`" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lbackground_subtractor"/>
        <filters plugin="${prefix}/config/background_filters.xml"/>
    </export>
</package><package name="pr2_arm_navigation_perception" path="/stacks/pr2_arm_navigation/trunk/pr2_arm_navigation_perception" repo="pr2_arm_navigation" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_arm_navigation_perception">
    This package contains launch file for launching the perception components of the pr2_arm_navigation stack. The perception components allow you to build a collision space representation of the world. 
  </description>
  <author>Sachin Chitta</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_arm_navigation_perception</url>

  <depend package="pr2_machine"/>

  <!-- messages -->
  <depend package="sensor_msgs"/>
  <depend package="pr2_msgs"/>

  <!-- perception -->
  <depend package="laser_filters"/>
  <depend package="laser_assembler"/>
  <depend package="robot_self_filter"/>
  <depend package="collider"/>
  <depend package="stereo_image_proc"/>

  <!-- rosWTF mandated -->
  <depend package="planning_environment"/>
  <depend package="pr2_arm_navigation_config"/>
  <depend package="pr2_mechanism_controllers"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="turtle_teleop" path="/stacks/joystick_drivers_tutorials/trunk/turtle_teleop" repo="joystick_drivers_tutorials" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="turtle_teleop">

     turtle_teleop is a simple package to demonstrate how to write a teleoperation node in ROS using the turtlesim.

  </description>
  <author>Melonee Wise</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/turtle_teleop</url>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="turtlesim"/>
  <depend package="ps3joy"/>
  <depend package="joy"/>
  <depend package="wiimote"/>
  <depend package="spacenav_node"/>
  <depend package="sensor_msgs"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="applanix" path="/trunk/stacks/art_vehicle/applanix" repo="utexas-art-ros-pkg" repo_host="http://utexas-art-ros-pkg.googlecode.com/svn">
  <description brief="Applanix POS-LV driver">

     ROS driver for the Applanix Position and Orientation System for
     Land Vehicles (POS-LV).

  </description>
  <author>Jack O'Quin, Patrick Beeson, Alberto Alonso</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://www.ros.org/wiki/applanix</url>

  <depend package="angles"/>
  <depend package="art_common"/>
  <depend package="art_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="tf"/>

  <!-- declare build dependency on pcap library -->
  <rosdep name="libpcap"/>

  <export>
    <cpp lflags="-lpcap"/>
  </export>

</package><package name="c3d" path="/branches/stable/motion_capture/c3d" repo="wu-ros-pkg" repo_host="https://wu-robotics.googlecode.com/svn">
  <description brief="c3d">
    A package for reading in c3d motion capture files. 
  </description>
  <author>David V. Lu!!</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/c3d</url>
  <depend package="rospy"/>
</package><package name="pcl_ias_sample_consensus" path="" repo="mapping" repo_host="http://code.in.tum.de/git/mapping.git">
  <description>
    A collection of sample consensus models developed at IAS@TUM
  </description>

  <author>Nico Blodow, Dejan Pangercic, Zoltan-Csaba MArton</author>
  <license>BSD</license>
  <review notes="beta" status="experimental"/>

  <depend package="pcl"/>
  <depend package="roscpp"/>
  
  <export>
    <cpp cflags="-I${prefix}/include/" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lpcl_ias_sample_consensus"/>
  </export>

</package><package name="image_view_jsk_patch" path="/trunk/jsk_ros_patch/image_view_jsk_patch" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="image_view_jsk_patch">

     image_view_jsk_patch

  </description>
  <author>Atsushi Tsuda</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/image_view_jsk_patch</url>

  <depend package="image_view"/>
  <depend package="std_srvs"/>

</package><package name="rososc_tutorials" path="" repo="rososc_tutorials" repo_host="https://github.com/Auburn-Automow/rososc_tutorials">
    <description brief="Tutorials for using ROS OSC">
        This package attempts to show the features of ROSOSC
    </description>
    <author>Michael Carroll</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/rososc_tutorials</url>
    <depend package="rospy"/>
    <depend package="osc_bridge"/>
    <depend package="pytouchosc"/>
    <depend package="touchosc_bridge"/>
    <depend package="touchosc_msgs"/>
    <depend package="diagnostic_msgs"/>
    <platform os="ubuntu" version="11.04"/>
</package><package name="teleop_source_joystick" path="" repo="generic_teleop" repo_host="https://github.com/skynetish/generic_teleop">

  <!-- Package summary -->
  <description brief="Tele-operation source which uses a joystick as input.">

    This package provides header files and a library which implement a
    tele-operation source which uses a joystick as input.

  </description>
  <author>Kevin LeBlanc (kevin.canadian@gmail.com)</author>
  <license>BSD</license>
  <url>https://github.com/skynetish/generic_teleop/wiki</url>

  <!-- External dependencies -->
  <rosdep name="boost"/>

  <!-- Package dependencies -->
  <depend package="teleop_framework"/>

  <!-- Exports -->
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lteleop_source_joystick"/>
  </export>

</package><package name="cob_footprint_observer" path="" repo="cob_driver" repo_host="git://github.com/ipa320/cob_driver">
  <description brief="cob_footprint_observer">

  The cob_footprint_observer package adjusts the footprint of the robot based on the setup (e.g. arm and/or tray).

  </description>
  <author>Matthias Gruhler</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_footprint_observer</url>

  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="std_msgs"/>
</package><package name="pr2_mechanism_controllers" path="/stacks/pr2_controllers/trunk/pr2_mechanism_controllers" repo="pr2_controllers" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="Controllers for the PR2">
    The pr2_mechanism_controllers package contains realtime
    controllers that are meant for specific mechanisms of the PR2.
  </description>
  <author>Sachin Chita, John Hsu, Melonee Wise</author>
  <license>BSD</license>
  <review notes="http://www.ros.org/wiki/pr2_mechanism_controllers/Reviews/2010-01-14_Doc_Review https://code.ros.org/trac/wg-ros-pkg/ticket/3574" status="Doc reviewed"/>

  <rosdep name="eigen"/>

  <!-- ROS Interfaces -->
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="pr2_mechanism_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="pr2_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="diagnostic_msgs"/>

  <!-- Plugins -->
  <depend package="pr2_controller_interface"/>
  
  <depend package="roscpp"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="pr2_mechanism_model"/>
  <depend package="realtime_tools"/>
  <depend package="robot_mechanism_controllers"/>
  <depend package="rospy"/>
  <depend package="pluginlib"/>
  <depend package="rosconsole"/>
  <depend package="tf"/>
  <depend package="angles"/>
  <depend package="control_toolbox"/>
  <depend package="filters"/>
  <depend package="diagnostic_updater"/>
  
  <url>http://ros.org/pr2_mechanism_controllers</url>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lpr2_mechanism_controllers"/>
    <pr2_controller_interface plugin="${prefix}/controller_plugins.xml"/>

  </export>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="octomap_ros" path="/trunk/octomap_stacks/octomap_ros" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="octomap_ros - conversions and wrappers to use octomap in ROS">

     octomap_ros provides conversion functions between ROS / PCL and <a href="http://octomap.sourceforge.net/">OctoMap</a>'s native types. 
     This enables a convenvient use of the octomap package in ROS.

  </description>
  <author>Armin Hornung</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/octomap_ros</url>
  
  <export>
    <cpp cflags="-I${prefix}/include -DOCTOMAP_NODEBUGOUT" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -loctomap_ros"/>
  </export>
  
  <depend package="roscpp"/>
<!--  <depend package="octomap_msgs"/> -->
  <depend package="sensor_msgs"/>
  <depend package="pcl"/>
  <depend package="tf"/>
  
  <rosdep name="octomap"/>
  <rosdep name="octomap_msgs"/>

</package><package name="path_learning_experiment" path="/trunk/arrg/ua_experimental/path_learning_experiment" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="An experiment in learning path schemas">

     path_learning_experiment

    </description>
    <author>Daniel Hewlett</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/path_learning_experiment</url>

    <depend package="rospy"/>
    <depend package="actionlib"/>    

    <depend package="std_msgs"/>
    <depend package="sensor_msgs"/>
    <depend package="geometry_msgs"/>
    <depend package="move_base_msgs"/>
    <depend package="nav_msgs"/>
</package><package name="rosjava_osgi" path="" repo="interactive-spaces" repo_host="https://code.google.com/p/interactive-spaces">
  <description brief="osgi">
    Support for using OSGi with rosjava
  </description>
  <author>Keith Hughes/khughes@google.com</author>
  <license>Apache License 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://code.google.com/p/interactive-spaces/</url>
  
  <depend package="rosjava"/>
  <depend package="osgi_msgs"/>

  <rosdep name="java"/>
</package><package name="sbpl_arm_planner_interface" path="/sbpl_arm_planning/trunk/sbpl_arm_planner_interface" repo="sbpl_arm_planning" repo_host="https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs">
  <description brief="sbpl_arm_planner_interface">

    sbpl_arm_planner_interface

  </description>
  <author>Benjamin Cohen/bcohen@seas.upenn.edu</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.ros.org/wiki/sbpl_arm_planner_interface</url>

	<depend package="angles"/>
	<depend package="kdl"/>
	<depend package="urdf"/>
	<depend package="kinematics_msgs"/>
	<depend package="roscpp"/>
	<depend package="tf"/>
	<depend package="moveit_msgs"/>
	<depend package="sensor_msgs"/>
  <depend package="geometric_shapes"/>
	<depend package="sbpl_arm_planner"/>
	<depend package="sbpl_cartesian_arm_planner"/>
  <depend package="visualize_arm"/>
  <depend package="geometry_msgs"/>
  <depend package="kdl_parser"/>
  <depend package="planning_scene"/>
  <depend package="planning_scene_monitor"/>
  <depend package="kinematics_plugin_loader"/>
  <depend package="kinematics_base"/>
  <depend package="pviz"/>

  <export>
    <cpp cflags="-I${prefix}/include  -O3 -g" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib  -lsbpl_arm_planner_interface"/>
  </export>


</package><package name="skin_dashboard" path="/trunk/stacks/bosch_skin/skin_dashboard" repo="bosch-ros-pkg-e" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg-e/code">
  <description brief="skin_dashboard">

     skin_dashboard

  </description>
  <author>Joerg Wagner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/skin_dashboard</url>
  <depend package="roslib"/>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="skin_driver"/>
  
  <rosdep name="wxwidgets"/>
</package><package name="openni_unstable" path="/trunk/openni_usc/openni_unstable" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="openni_unstable">

     openni_unstable

  </description>
  <author>David Feil-Seifer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/openni_unstable</url>

	<rosdep name="glut"/>
	<rosdep name="graphviz"/>
	<rosdep name="libusb1.0"/>
	<rosdep name="doxygen"/>
	<rosdep name="git"/>
	<rosdep name="java"/>
	<rosdep name="mono"/>
</package><package name="allocators" path="/stacks/ros_realtime/trunk/allocators" repo="ros_realtime" repo_host="https://code.ros.org/svn/ros">
  <description brief="A collection of memory allocators">
  
    Contains aligned allocation functions, as well as an STL-compatible AlignedAllocator class.

  </description>
  <author>Josh Faust</author>
  <license>BSD</license>
  <review notes="" status="API reviewed"/>
  <url>http://ros.org/wiki/allocators</url>
  
  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="TIChronos" path="" repo="TYROS" repo_host="https://github.com/tonuonu/TYROS">
  <description brief="TIChronos">

     TIChronos

  </description>
  <author>Tonu Samuel</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/TIChronos</url>
  <depend package="std_msgs"/>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>

</package><package name="rviz_interaction_tools" path="/stacks/object_manipulation/branches/0.6-branch/rviz_interaction_tools" repo="object_manipulation" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="rviz_interaction_tools">

     Various tools for realizing 3D user interfaces in rviz,
     e.g. for scene segmentation, object recognition or
     grasping.

  </description>
  <author>David Gossow</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rviz_interaction_tools</url>

  <depend package="rviz"/>
  <depend package="sensor_msgs"/> <!-- PointCloud, CameraInfo, Image -->
  <depend package="stereo_msgs"/> <!-- DisparityImage -->
  <depend package="geometry_msgs"/> <!-- Pose -->
  <depend package="arm_navigation_msgs"/> <!-- mesh -->

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lrviz_interaction_tools"/>
  </export>
  
</package><package name="ubc_vrs_result_analysis" path="/trunk/ubc_vrs/ubc_vrs_result_analysis" repo="ubc-ros-pkg" repo_host="https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg">
  <description brief="ubc_vrs_result_analysis">

     ubc_vrs_result_analysis

  </description>
  <author/>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ubc_vrs_result_analysis</url>

</package><package name="sr_worlds" path="" repo="sr_object_manipulation" repo_host="lp:sr-manipulation">
  <description brief="sr_worlds">

     sr_worlds contains necessary files to setup scenes in gazebo for object manipulation

  </description>
  <author>Guillaume WALCK (UPMC)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sr_worlds</url>
  <depend package="xacro"/>
  <depend package="gazebo"/>
  <depend package="gazebo_plugins"/>

</package><package name="automow_handler" path="" repo="au_automow_apps" repo_host="https://github.com/Auburn-Automow/au_automow_apps">
  <description brief="automow_handler">

     automow_handler

  </description>
  <author>Michael Carroll</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/automow_handler</url>

  <depend package="touchosc_bridge"/>
  <depend package="automow_node"/>

</package><package name="trajectory_msgs" path="/stacks/common_msgs/trunk/trajectory_msgs" repo="common_msgs" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="trajectory_msgs">

     trajectory_msgs

  </description>
  <author>Stuart Glaser</author>
  <license>BSD</license>
  <review notes="http://www.ros.org/wiki/robot_mechanism_controllers/Reviews/2009-10-16_Traj_API_Review" status="Doc reviewed"/>
  <url>http://ros.org/wiki/trajectory_msgs</url>

  <export>
    <cpp cflags="`PKG_CONFIG_PATH=${prefix}/../../lib/pkgconfig pkg-config --cflags trajectory_msgs`" lflags="`PKG_CONFIG_PATH=${prefix}/../../lib/pkgconfig pkg-config --libs trajectory_msgs`"/>
  </export>

</package><package name="rrt_demos" path="/branches/pr2_demos/rrt_demos" repo="mit-ros-pkg-pr2-demos" repo_host="https://svn.csail.mit.edu/mit-ros-pkg">
  <description brief="rrt_demos">

     rrt_demos

  </description>
  <author>Jenny Barry</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rrt_demos</url>
  <depend package="pr2_utils"/>
  <depend package="geometry_msgs"/>
  <depend package="arm_navigation_msgs"/>
  <depend package="rospy"/>

</package><package name="megatree_server" path="" repo="megatree" repo_host="http://kforge.ros.org/megatree/megatree">
  <description brief="megatree_server">

     megatree_server

  </description>
  <author>Wim Meeussen</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/megatree_server</url>

 <depend package="megatree_core"/>
 <depend package="megatree_cpp"/>

 <rosdep name="fcgi"/>

</package><package name="abb_common" path="/trunk/abb/abb_common" repo="swri-ros-pkg" repo_host="http://swri-ros-pkg.googlecode.com/svn">
  <description brief="abb_common">

     abb_common

  </description>
  <author>Shaun Edwards</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/abb_common</url>
  <depend package="urdf"/>

</package><package name="humanoid_localization" path="/trunk/humanoid_stacks/humanoid_navigation/humanoid_localization" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="6D localization in an OctoMap for humanoid robots">

     6D localization for humanoid robots based on depth data (laser, point clouds).
     Two observation models are currently available based on OctoMap as 3D map:
     Ray casting and an end point model (lookup in the distance map).

  </description>
  <author>Armin Hornung, Stefan Osswald, Daniel Maier</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/humanoid_localization</url>
  
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="message_filters"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="std_msgs"/>
  <depend package="std_srvs"/>
  <depend package="octomap_msgs"/>
  <depend package="octomap_ros"/>
  <depend package="visualization_msgs"/>
  <depend package="pcl_ros"/>
  <depend package="sensor_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lhumanoid_localization"/>
  </export>
</package><package name="bosch_drivers_example_nodes" path="/trunk/stacks/bosch_drivers/bosch_drivers_example_nodes" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="bosch_drivers_example_nodes">

     This package contains example ROS nodes sampling various sensors
     using various protocols on various hardware interfaces.  
     Note: not all possible combinations contain examples.

  </description>
  <author>Joshua Vasquez, Philip Roan. Maintained by Philip Roan</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/bosch_drivers_example_nodes</url>
  <depend package="bosch_drivers_common"/>
  <depend package="arduino_interface"/>
  <depend package="sub20_interface"/>
  <depend package="bmc050_driver"/>
  <depend package="bmp085_driver"/>
  <depend package="bma180_driver"/> 
</package><package name="krypton_typekit" path="" repo="krypton_hardware" repo_host="http://git.mech.kuleuven.be/robotics/krypton_hardware.git">
  <description brief="krypton RTT bindings">

      This package contains the krypton RTT bindings, in order to easily read out and modify all Krypton structs in the Taskbrowser.

  </description>
  <author>Steven Bellens, steven.bellens@mech.kuleuven.be</author>
  <license>LGPLv2.1 / BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/krypton_typekit</url>

  <depend package="rtt"/>
  <depend package="krypton"/>

  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>
</package><package name="app_manager" path="" repo="multimaster_experimental" repo_host="https://kforge.ros.org/appmanandroid/multimaster_experimental">
  <description brief="app_manager">

     app_manager

  </description>
  <author>Jeremy Leibs, Ken Conley</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/app_manager</url>
  <depend package="rospy"/>
  <depend package="roslaunch"/>
  <depend package="rosgraph"/>
  <depend package="rosunit"/>

</package><package name="DPPanTiltCompat" path="/darpa_arm_sim_servers/DPPanTiltCompat" repo="darpa_arm_sim_servers" repo_host="http://svn.thearmrobot.com">
  <description brief="DPPanTiltCompat">

     DPPanTiltCompat

  </description>
  <author>DARPA ARM GFE Team</author>
  <license>GPLv3</license>

  <depend package="roscpp"/>
  <depend package="DPPanTilt_msgs"/>
  <depend package="re2logger"/>
  <depend package="pr2_mechanism_msgs"/>
  <depend package="SimGazeboControllers"/>  

  <export>
    <cpp cflags="-I${prefix}/src/" lflags="-Wl,-rpath,${prefix}/lib/ -L${prefix}/lib -ldpcompat"/>
  </export>

</package><package name="hrl_camera" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="hrl_camera">
     hrl_camera
  </description>
  <author>Hai Nguyen, Advait Jain, Cressel Anderson, Marc Killpack</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <depend package="rospy"/>
  <depend package="hrl_lib"/>
  <depend package="opencv2"/>
  <depend package="hrl_opencv"/>
  <depend package="cv_bridge"/>
  <depend package="sensor_msgs"/>
  <depend package="polled_camera"/>
</package><package name="asctec_proc" path="" repo="asctec_drivers" repo_host="https://github.com/ccny-ros-pkg/asctec_drivers">
  <description brief="asctec_proc">

     The asctec_proc package is a bridge between the asctec_autopilot software and hardware-independent MAV tools.

  </description>
  <author>Ivan Dryanovski</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/asctec_proc</url>
  <depend package="roscpp"/>
  <depend package="nodelet"/>
  <depend package="mav_msgs"/>
  <depend package="mav_srvs"/>
  <depend package="asctec_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="std_msgs"/>
  <depend package="tf"/>

  <export>
    <nodelet plugin="${prefix}/asctec_proc_nodelet.xml"/>
  </export>

</package><package name="pr2_arm_navigation_config" path="/stacks/pr2_arm_navigation/trunk/pr2_arm_navigation_config" repo="pr2_arm_navigation" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_arm_navigation_config">

     pr2_arm_navigation_config

  </description>
  <author>Sachin Chitta</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_arm_navigation_config</url>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="R1_teleop_key" path="" repo="JKU_Robotic_Stack" repo_host="https://github.com/AaronMR/JKU_Robotic_Stack">
  <description brief="R1_teleop_key">

     R1_teleop_key

  </description>
  <author>aaronmr</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/R1_teleop_key</url>
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>

</package><package name="point_cloud_server" path="/stacks/object_manipulation/branches/0.6-branch/point_cloud_server" repo="object_manipulation" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="point_cloud_server">

     point_cloud_server

  </description>
  <author>Adam Leeper</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/point_cloud_server</url>

  <depend package="roscpp"/>
  <depend package="interactive_markers"/>
  <depend package="sensor_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="tf"/>
  <depend package="actionlib"/>

  <!-- Robot interface... only for getting access to message_helpers... -->
  <depend package="object_manipulator"/>

</package><package name="2009_humanoids_epc_pull" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
    <description brief="2009_humanoids_epc_pull">
        This package contains code associated with the following
        publication: 
        Pulling Open Novel Doors and Drawers with Equilibrium Point Control.
        Advait Jain and Charles C. Kemp. IEEE-RAS International Conference on
        Humanoid Robots (Humanoids), 2009.
    </description>
    <author>Advait Jain, Charles C. Kemp (Healthcare Robotics Lab, Georgia Tech)</author>
    <license>New BSD</license>

    <depend package="rospy"/>
    <depend package="hrl_lib"/>
    <depend package="hrl_hokuyo"/>
    <depend package="hrl_tilting_hokuyo"/>
    <depend package="zenither"/>

</package><package name="asctec_hl_interface" path="" repo="asctec_mav_framework" repo_host="https://github.com/ethz-asl/asctec_mav_framework">
  <description brief="Interface to the HighLevel Processor of the Ascending Technologies helicopters">

     Interfaces to the &quot;HighLevel&quot; Processor of the Ascending Technologies helicopters where fast IMU datafusion with arbitrary external position input and position control is executed at 1 kHz. 
     Furthermore, all relevant data as IMU, GPS and status can be accessed at configurable rates and baudrates.

  </description>
  <author>Markus Achtelik, Michael Achtelik, Stephan Weiss, Laurent Kneip</author>
  <license>BSD</license>
  <review notes="This is unstable and under active development" status="unreviewed"/>
  <url>http://ros.org/wiki/asctec_hl_interface</url>
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="tf"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="asctec_hl_comm"/>
  <depend package="actionlib"/>
  <depend package="diagnostic_updater"/>
  <depend package="sensor_fusion_comm"/>
  
  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>

</package><package name="riq_hand_ethercat_hardware" path="/stacks/riq_hand/trunk/riq_hand_ethercat_hardware" repo="riq_hand" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="riq_hand_ethercat_hardware">

     riq_hand_ethercat_hardware

  </description>
  <author>Derek King</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/riq_hand_ethercat_hardware</url>
  <depend package="roscpp"/>
  <depend package="ethercat_hardware"/>
  <depend package="riq_msgs"/>

  <export>
    <ethercat_hardware plugin="${prefix}/ethercat_device_plugin.xml"/>
  </export>

</package><package name="nxt_lejos_map_server" path="/trunk/ros/nxt_lejos/nxt_lejos_map_server" repo="lejos-ros-pkg" repo_host="https://lejos.svn.sourceforge.net/svnroot/lejos">
  <description brief="nxt_lejos_map_server">
     The nxt_lejos_map_server package will publish leJOS line maps
     as occupancy grid maps so that they can be used by rviz and
     the ROS navigation stack. Currently it publishes line maps as
     markers that can be shown in rviz.
  </description>
  <author>leJOS development</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/nxt_lejos_map_server</url>
  
  <depend package="rosjava"/>
  <depend package="visualization_msgs"/>
</package><package name="wg_flirtlib" path="" repo="flirtlib_features" repo_host="https://kforge.ros.org/startuploc/git">
  <description brief="wg_flirtlib">
    Launch files and data for using flirtlib in willow garage map
  </description>
  <author>Bhaskara Marthi</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/wg_flirtlib</url>
  <depend package="flirtlib_ros"/>

</package><package name="people_msgs" path="" repo="people" repo_host="https://github.com/wg-perception/people">
  <description brief="people_msgs">

     Messages used by nodes in the people stack.

  </description>
  <author>Caroline Pantofaru</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/people_msgs</url>

  <depend package="geometry_msgs"/>
  <export>
    <cpp cflags="-I${prefix}/msg/cpp -I${prefix}/srv/cpp"/>
  </export>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="pcl_to_octree" path="" repo="mapping" repo_host="http://code.in.tum.de/git/mapping.git">
  <description brief="pcl_to_octree">

<p>
     pcl_to_octree - a package to convert the PointCloud format to octree format
</p>
  </description>
  Based on the orginal code by Kai M. Wurm and Armin Hornung
  http://octomap.sourceforge.net
  <author>Hozefa Indorewala, Dejan Pangercic</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pcl_to_octree</url>

  <!-- ROS dependencies -->
  <depend package="roscpp"/>
  <depend package="pcl"/>
  <depend package="octomap"/>
  <depend package="octomap_server"/>

  <!-- Message type dependencies -->
  <depend package="sensor_msgs"/>
  <depend package="visualization_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -loctree_pcl"/>
  </export>

</package><package name="good_pr2_local_nav" path="" repo="uuisrc-pr2-pkgs" repo_host="https://github.com/uu-isrc-robotics/uu-isrc-robotics-pr2-pkgs">
  <description brief="Parameters for local navigation">

     A set of parameters that work fine with the PR2 at University of Ulster. Based on
     code from Travis Deyle.

  </description>
  <author>Lorenzo Riano</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/good_pr2_local_nav</url>
  <depend package="pr2_navigation_perception"/>
  <depend package="pr2_navigation_teleop"/>
  <depend package="pr2_machine"/>
  <depend package="move_base"/>
  <depend package="sbpl"/>

</package><package name="phidgetspp_c_api" path="" repo="foote-phidget" repo_host="https://phidget.foote-ros-pkg.googlecode.com/hg/">
<description brief="The Phidgets C API">

This package contains the Official Phidgets C API

</description>
<author>Phidgets, Inc.</author>
<license>LGPL</license>
<url>http://www.phidgets.com/downloads.php?example_id=30</url>
<export>
  <cpp cflags="-I${prefix}/include " lflags="-L${prefix}/lib -lphidget21 -lpthread -ldl"/>
  <doxymaker external="http://www.phidgets.com/downloads.php?example_id=30"/>
</export>
</package><package name="acado" path="" repo="optimization" repo_host="http://git.mech.kuleuven.be/robotics/optimization.git">
  <description brief="acado">

     <a href="http://www.acadotoolkit.org/">ACADO toolkit</a> is a software environment and algorithm collection for automatic control and dynamic optimization. It provides a general framework for using a great variety of algorithms for direct optimal control, including model predictive control, state and parameter estimation and robust optimization. ACADO Toolkit is implemented as self-contained C++ code and comes along with user-friendly Matlab interfaces. The object-oriented design allows for convenient coupling of existing optimization packages and for extending it with user-written optimization routines.

  </description>
  <author>Wilm Decre (package author), Hans Joachim Ferreau (acado author),Boris Houska (acado author)</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/acado</url>
<export>
<!--  <cpp cflags="-I${prefix}/include -I${prefix}/external_packages"
lflags="-Wl,-rpath,${prefix}/libs -L${prefix}/libs -lqpOASES2.0
-lqpOASESextras2.0 -lacado_acado2gnuplot -lacado_integrators
-lacado_optimal_control -lcsparse -lacado_toolkit"/>-->
<!--<cpp cflags="-I${prefix}/include -I${prefix}/external_packages"
lflags="-Wl,-rpath,${prefix}/libs -L${prefix}/libs -lacado_acado2gnuplot -lacado_optimal_control -lqpOASES2.0 -lqpOASESextras2.0  -lacado_integrators -lcsparse -lacado_toolkit"/>-->
<cpp cflags="-I${prefix}/include -I${prefix}/external_packages -fPIC" lflags="-Wl,-rpath,${prefix}/libs -L${prefix}/libs -lacado_optimal_control -lacado_toolkit -lacado_integrators -lqpOASES2.0 -lqpOASESextras2.0 -lcsparse "/>
</export>

</package><package name="imu_filter" path="" repo="imu_filter" repo_host="https://kforge.ros.org/megaslam/imu_filter">
  <description brief="imu_filter">

     imu_filter

  </description>
  <author>Sebastian Klose</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/imu_filter</url>
  <depend package="roscpp"/>
  <depend package="microstrain_3dmgx2_imu"/>
  <depend package="eigen"/>
  <depend package="tf"/>
  <depend package="visualization_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="opencv2"/>
  <depend package="dynamic_reconfigure"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -limu_filter -Wl,-rpath,${prefix}/lib"/>
  </export>

</package><package name="turtlebot_rndmwalk" path="/trunk/clearpath_turtlebot/turtlebot_rndmwalk" repo="clearpath-ros-pkg" repo_host="http://clearpath-ros-pkg.googlecode.com/svn">
  <description brief="turtlebot_rndmwalk">

     A small demo application to get your TurtleBot moving around autonomously. The random behaviour of the robot causes it to switch between driving left, straight and right. After detecting an obstacle, the robot will stop and turn for a random period of time before attempting to continue motion.

  </description>
  <author>Sean Anderson</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/turtlebot_rndmwalk</url>

  <depend package="clearpath_tools"/>
  <depend package="clearpath_kinect_demo"/>
  <depend package="turtlebot_node"/>

</package><package name="RangeTests" path="" repo="pandora-auth-ros-pkg" repo_host="https://github.com/pandora-auth-ros-pkg/pandora-auth-ros-pkg">
  <description brief="RangeTests">

     Range Tests Specific for the PANDORA

  </description>
  <author>Stamatiadou Marina</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url/>
  <depend package="roscpp"/>
  <depend package="dataFusion_communications"/>
  <depend package="vision_communications"/>
  <depend package="controllersAndSensors_communications"/>
  <depend package="slam_communications"/>
  <depend package="mainMotorControl_communications"/>
  <depend package="RoboticArm_communications"/>
  <depend package="mock_objects"/>
  <depend package="std_msgs"/>
  <depend package="tf"/>

</package><package name="seabee3_driver_base" path="/trunk/cturtle/seabee3_driver_base" repo="seabee3-ros-pkg" repo_host="http://seabee3-ros-pkg.googlecode.com/svn">
  <description brief="seabee3_driver_base">

     seabee3_driver_base

  </description>
  <author>Edward T. Kaszubski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/seabee3_driver_base</url>
  <depend package="libseabee3_beestem"/>
  <depend package="base_libs"/>
  <depend package="xsens_node"/>
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp -I${prefix}/srv/cpp" lflags="-L/{prefix}/lib"/>
  </export>
</package><package name="mongodb" path="" repo="warehousewg" repo_host="https://kforge.ros.org/warehousewg/warehouse-hg">
  <description brief="mongodb">

    The mongo database

  </description>
  <author>Nate Koenig</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/mongodb</url>

  <depend package="rospy"/>
  <rosdep name="scons"/>
  <rosdep name="tcsh"/>
  <rosdep name="pcre-dev"/>
  <rosdep name="xulrunner-dev"/>
  <rosdep name="readline-dev"/>

  <export>
    <cpp cflags="-I${prefix}/mongo/include" lflags="-Wl,-rpath,${prefix}/mongo/lib64 -Wl,-rpath,${prefix}/mongo/lib -L${prefix}/mongo/lib64 -L${prefix}/mongo/lib -lmongoclient"/>
    </export>
         

</package><package name="testMarkers" path="/branches/testMarkers" repo="rtc-us-ros-pkg-branches" repo_host="https://rtc-us-ros-pkg.svn.sourceforge.net/svnroot/rtc-us-ros-pkg">
  <description brief="testMarkers">

     testMarkers

  </description>
  <author>Pablo Iñigo Blasco</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/testMarkers</url>
  <depend package="visualization_msgs"/>

</package><package name="two_lwr_bringup" path="" repo="two_lwr_robot" repo_host="https://github.com/RCPRG-ros-pkg/two_lwr_robot">
  <description brief="two_lwr_bringup">

     two_lwr_bringup

  </description>
  <author>Konrad Banachowicz</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/two_lwr_bringup</url>

</package><package name="ffha" path="/trunk/3rdparty/ffha" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="ffha: pddl planner">
http://ipc.informatik.uni-freiburg.de/Planners

Copyright 2002 Albert Ludwigs University Freiburg Institute of
Computer Science

Copyright 2008 Emil Keyder, Hector Geffner

Most of the code in this program comes from from Jorg Hoffmanns
Metric-FF planner. Additions are due to Emil Keyder and Hector
Geffner. The code as a whole is distributed under the GPL license. See
the file gpl.txt for more information.

Contact emilkeyder@gmail.com with bug reports or questions.

  </description>
  <author>Emil Keyder, Hector Geffner</author>
  <license>GPL</license>
</package><package name="pr2_interactive_manipulation" path="/stacks/pr2_tabletop_manipulation_apps/branches/0.4-branch/pr2_interactive_manipulation" repo="pr2_tabletop_manipulation_apps" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_interactive_manipulation">

     A package that allows a remote user to request and assist with
     grasping and manipulation tasks, primarily using an rviz display.

  </description>
  <author>Matei Ciocarlie</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_interactive_manipulation</url>

  <depend package="rviz"/>
  <depend package="tf"/>
  <depend package="tabletop_collision_map_processing"/>
  <depend package="object_manipulation_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="pr2_create_object_model"/>
  <depend package="pr2_gripper_click"/>
  
  <!-- interactive object detection -->
  <depend package="pr2_interactive_object_detection"/>
  
  <depend package="rviz_interaction_tools"/>

  <!-- for move arm -->
  <depend package="object_manipulator"/>

  <!-- for included launch files -->
  <depend package="pr2_object_manipulation_launch"/>

  <export>
    <rviz plugin="${prefix}/lib/rviz_plugin.yaml"/>
    <cpp cflags="-I${prefix}/include"/>
  </export>

</package><package name="ecl_utilities" path="/trunk/ecl_core/ecl_utilities" repo="ecl_core" repo_host="https://embedded-control-library.googlecode.com/svn">
  <description brief="Tools and utilities useful for c++ programming">

     Includes various supporting tools and utilities for c++ programming.

  </description>
  <author>Daniel Stonier (d.stonier@gmail.com)</author>
  <license>BSD</license>
  <review notes="" status="doc reviewed"/>
  <url>http://snorriheim.dnsdojo.com/redmine/wiki/ecl</url>
  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>
  <depend package="ecl_concepts"/>
  <depend package="ecl_mpl"/>
  <depend package="ecl_license"/>
  <depend package="ecl_build"/>
  <rosbuild2>
    <export>
      <include_dir>${ecl_utilities_SOURCE_DIR}/include</include_dir>
    </export>
    <depend package="ecl_concepts"/>
    <depend package="ecl_mpl"/>
    <depend package="ecl_license"/>
    <depend package="ecl_build"/>
  </rosbuild2>
</package><package name="teleop_controllers" path="/stacks/pr2_cockpit/trunk/teleop_controllers" repo="pr2_cockpit" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="teleop_controllers">

     This package contains the cartesian controllers used in the
     Willow Garage teleop setup.

  </description>
  <author>Stuart Glaser</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/teleop_controllers</url>

  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="rosrt"/>
  <depend package="angles"/>
  <depend package="tf"/>
  <depend package="tf_conversions"/>
  <depend package="kdl"/>
  <depend package="pluginlib"/>

  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="diagnostic_msgs"/>

  <depend package="pr2_controller_interface"/>
  <depend package="pr2_controller_manager"/>
  <depend package="kdl_parser"/>
  <depend package="pr2_mechanism_model"/>
  <depend package="control_toolbox"/>
  <depend package="realtime_tools"/>
  <depend package="eigen_conversions"/>
  <depend package="rosatomic"/> <!-- rosrt -->
  <depend package="allocators"/> <!-- rosrt -->
  <depend package="lockfree"/> <!-- rosrt -->

  <depend package="common_rosdeps"/>
  <rosdep name="eigen"/>

  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp -I${prefix}/srv/cpp" lflags="-Wl,-rpath,${prefix}/lib/ -L${prefix}/lib -lteleop_controllers"/>
    <pr2_controller_interface plugin="${prefix}/controller_plugins.xml"/>
  </export>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="trajectory_filter_server" path="" repo="arm_navigation" repo_host="https://kforge.ros.org/armnavigation/armnavigation">
  <description brief="trajectory_filter_server">
  This package contains a server that advertises a ROS service over which joint trajectories can be filtered. Internally, it creates and uses a chain of filters that can filter joint trajectories. The filters are configured using a yaml configuration file. 
  </description>
  <author>Sachin Chitta</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/trajectory_filter</url>
  <depend package="filters"/>
  <depend package="roscpp"/>
  <depend package="trajectory_msgs"/>
  <depend package="arm_navigation_msgs"/>
  <depend package="spline_smoother"/>
  <depend package="joint_normalization_filters"/>
  <depend package="urdf"/>
  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="pal_vision_segmentation" path="" repo="pal_image_processing" repo_host="https://github.com/pal-robotics/pal_image_processing">
  <description brief="pal_vision_segmentation">

    This package provides segmentation nodes based on various techniques. <br/>
    Masked image or mask provided, and can be tuned via dynamic_reconfigure.

  </description>
  <author>Created by Bence Magyar. Maintained by Jordi Pages</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pal_disparity_segmentation</url>
  <depend package="roscpp"/>
  <depend package="opencv2"/>
  <depend package="stereo_image_proc"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="cv_bridge"/>
  <depend package="image_transport"/>
  <depend package="geometry_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lpal_vision_segmentation"/>
    <rosdoc config="rosdoc.yaml"/>
  </export>

</package><package name="asebaros" path="" repo="ethzasl_aseba" repo_host="https://github.com/ethz-asl/ros-aseba">
  <description brief="asebaros">
    Bridge to access an Aseba network from ROS.
    For more information about Aseba, see: http://aseba.wikidot.com
  </description>
  <author>Stéphane Magnenat</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/asebaros</url>
  <depend package="std_msgs"/>
  <depend package="roscpp"/>
  <depend package="dashel"/>
  <depend package="aseba"/>
  <rosdep name="libudev-dev"/>
  <rosdep name="boost"/>
  <rosdep name="libqt4-dev"/>
  <rosdep name="qt4-dev-tools"/>
  <rosdep name="libqwt5-qt4-dev"/>
  <rosdep name="libxml2"/>

</package><package name="rosprolog" path="/tags/latest/rosprolog" repo="knowrob" repo_host="http://code.in.tum.de/pubsvn/knowrob">
  <description brief="rosprolog">
    Script to execute prolog and set the prolog library paths
    to other ros prolog packages.
  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.ros.org/wiki/rosprolog</url>
  <rosdep name="swi-prolog"/>
  <rosdep name="swi-prolog-clib"/>
  <rosdep name="swi-prolog-http"/>
  <rosdep name="swi-prolog-odbc"/>
  <rosdep name="swi-prolog-semweb"/>
  <rosdep name="swi-prolog-sgml"/>
  <rosdep name="swi-prolog-xpce"/>

  <depend package="rosbuild"/>
  <export>
    <rosdoc config="rosdoc.yaml"/>
    <rosbuild cmake_directory="${prefix}/cmake"/>
  </export>
</package><package name="lse_miniq_msgs" path="/stacks/lse_miniq_robot/trunk/lse_miniq_msgs" repo="lse_miniq_robot" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="lse_miniq_msgs">

     This package contains messages used by the LSE miniQ stack.

  </description>
  <author>Gonçalo Cabrita</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/lse_miniq_msgs</url>
  <depend package="roscpp"/>

</package><package name="kni" path="" repo="katana_driver" repo_host="http://kos.informatik.uni-osnabrueck.de/katana_driver.git">
  <description brief="Third-party KNI library for Katana arms">

     This package provides the third-party KNI (Katana Native Interface) library for Katana
     robot arms.

     Instead of using the KNI library directly, the <a href="/wiki/katana">katana</a>
     package should be used for communication with the Katana arm.

  </description>
  <author>Neuronics AG (see AUTHORS.txt); ROS wrapper by Martin Günther</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/kni</url>
  <export>
    <cpp cflags="-I${prefix}/KNI_4.3.0/include" lflags="-Wl,-rpath,${prefix}/KNI_4.3.0/lib/linux -L${prefix}/KNI_4.3.0/lib/linux      -lKNIBase -lKinematics -lKNI_InvKin -lKNI_LM"/>
  </export>
</package><package name="jaus_adapter" path="/trunk/cturtle/jaus_adapter" repo="seabee3-ros-pkg" repo_host="http://seabee3-ros-pkg.googlecode.com/svn">
  <description brief="jaus_adapter">

     jaus_adapter

  </description>
  <author>John O'Hollaren, Edward T. Kaszubski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/jaus_adapter</url>
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="xsens_node"/>

</package><package name="roseus_tutorials" path="/trunk/roseus_tutorials" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="roseus_tutorials">

     roseus_tutorials

  </description>
  <author>Kei Okada, Tsukasa Ito, Manabu Saito</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/roseus_tutorials</url>
  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>
  <depend package="roseus"/>

  <depend package="uvc_camera"/>
  <depend package="ar_pose"/>
  <depend package="saliency_tracking"/>
  <depend package="cmvision"/>
  <depend package="checkerboard_pose"/>
  <depend package="face_detector_mono"/>
  <depend package="aques_talk"/>
  <depend package="checkerboard_detector"/>
  <depend package="image_proc"/>
  <depend package="image_view2"/>
  <depend package="jsk_perception"/>
  <depend package="visualization_msgs"/>
  <depend package="tabletop_object_detector"/>
</package><package name="cob_gazebo" path="" repo="cob_simulation" repo_host="git://github.com/ipa320/cob_simulation">
  <description brief="cob_gazebo">

    Launch files and tools for 3D simulation of Care-O-bot in gazebo simulator.

  </description>
  <author>Florian Weisshardt</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_gazebo</url>
  
  <depend package="gazebo"/>
  <depend package="gazebo_plugins"/>
  <depend package="cv_bridge"/>
  <depend package="image_transport"/>
  <depend package="gazebo_worlds"/>
  <depend package="gazebo_tools"/>

  <depend package="tf"/>
  <depend package="robot_state_publisher"/>
  <depend package="joint_trajectory_action"/>
  <depend package="single_joint_position_action"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="move_base_msgs"/>

  <depend package="cob_srvs"/>
  <depend package="cob_description"/>
  <depend package="desire_description"/>
  <depend package="raw_description"/>
  <depend package="cob_ogre"/>
  <depend package="cob_gazebo_worlds"/>
  <depend package="cob_hardware_config"/>
  <depend package="cob_controller_configuration_gazebo"/>

  <depend package="pr2_gazebo"/>
  <depend package="pr2_gazebo_plugins"/>

	<depend package="nodelet"/>

	<export>
		<nodelet plugin="${prefix}/nodelet_plugins.xml"/>
	</export>

</package><package name="ride_karulf_thesis" path="/stacks/wu_experiments/trunk/ride_karulf_thesis" repo="wu-ros-pkg" repo_host="https://wu-ros-pkg.svn.sourceforge.net/svnroot/wu-ros-pkg">
  <description brief="ride_karulf_thesis">

     ride_karulf_thesis

  </description>
  <author>Erik Karulf</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ride_karulf_thesis</url>
  <depend package="ride_msgs"/>
  <depend package="ride_stage"/>
  <depend package="tf"/>
  <depend package="roslaunch_tools"/>

</package><package name="rfnserver" path="" repo="roboframenet" repo_host="https://kforge.ros.org/appmanandroid/roboframenet">
  <description brief="rfnserver">

    rfnserver (aka, RFNServer, or RoboFrameNet Server) is a class which provides bindings to RoboFrameNet for the purpose of adding semantic frames, adding lexical units, and registering callbacks to semantic frames.

  </description>
  <author>Brian Thomas</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rfnserver</url>
  <depend package="rospy"/>
  <depend package="actionlib"/>
  <depend package="roboframenet_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib"/> <!-- -lrfnserver -->
  </export>


</package><package name="jsk_smart_gui" path="/trunk/jsk_smart_apps/jsk_smart_gui" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="jsk_smart_gui">

     jsk_smart_gui for tablets

  </description>
  <author>chen</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/jsk_smart_gui</url>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="visualization_msgs"/>

  <depend package="roseus"/>
  <depend package="jsk_gui_msgs"/>
  <depend package="jsk_pcl_ros"/>
  <depend package="jsk_maps"/>
  <depend package="image_view2"/>

  <depend package="tf"/>
  <depend package="sound_play"/>
  <depend package="topic_tools"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="image_transport"/>
  <depend package="image_geometry"/>

  <depend package="dynamic_tf_publisher"/>
</package><package name="code_sourcery_arm_gnueabi" path="/trunk/packages/toolchains/arm/code_sourcery_arm_gnueabi" repo="eros" repo_host="https://code.ros.org/svn/eros">
  <description brief="Build recipe to install code sourcery's g++ lite toolchain for arm-gnueabi">

     Installer script for code sourcery's g++ lite arm-none-linux-gnueabi toolchain.
     As this downloads a binary version of the toolchain, it only works on 
     x86. To work for amd64, need to automate a download and compile of the toolchain's source.
     for 64 bit machines.

  </description>
  <author>Daniel Stonier (d.stonier@gmail.com)</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/code_sourcery</url>
  <depend package="eros_license"/>
  <depend package="eros_build"/>
</package><package name="pr2_pickup_object_demo" path="/stacks/wg_robots_gazebo/trunk/pr2_pickup_object_demo" repo="wg_robots_gazebo" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_pickup_object_demo">

     pr2_pickup_object_demo

  </description>
  <author>Kevin Watts</author>
  <license/>
  <depend package="rxtools"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="stereo_msgs"/>
  <depend package="tf"/>
  <depend package="driver_base"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="gazebo"/>
  <depend package="gazebo_plugins"/>
  <depend package="gazebo_tools"/>
  <depend package="wge100_camera"/>
  <depend package="pr2_gazebo"/>
  <depend package="xacro"/>
  <depend package="image_geometry"/>
  <depend package="kinematics_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="trajectory_msgs"/>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib"/>
    <gazebo plugin_path="${prefix}/lib"/>
  </export>
</package><package name="trajectory_sampling_gui" path="/trunk/pr2_teleop_imitation/trajectory_sampling_gui" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="trajectory_sampling_gui">

     trajectory_sampling_gui

  </description>
  <author/>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/trajectory_sampling_gui</url>
  <depend package="rospy"/>
  <depend package="rosservice"/>
  <depend package="roslib"/>
  <depend package="rosparam"/>
  <!-- <depend package="learner_node"/> -->
  <!-- <depend package="rtrl"/> -->
  <depend package="dmp_motion_learner"/>
  <depend package="dmp_motion_controller"/>
  <depend package="pr2_mechanism_msgs"/>
  <depend package="sensor_msgs"/>

</package><package name="maxwell_interactive_markers" path="/trunk/maxwell/maxwell_interactive_markers" repo="vanadium-ros-pkg" repo_host="http://vanadium-ros-pkg.googlecode.com/svn">
  <description brief="maxwell_interactive_markers">
    This is an adaptation of the turtlebot interactive marker server to the Maxwell robot.
  </description>
  <author>Michael Ferguson</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/maxwell_interactive_markers</url>

  <depend package="roscpp"/>
  <depend package="visualization_msgs"/>
  <depend package="interactive_markers"/>
  <depend package="arbotix_msgs"/>
  <depend package="arbotix_controllers"/>
  <depend package="simple_arm_server"/>
  <depend package="actionlib"/>

</package><package name="sbpl_dynamic_planner" path="/sbpl_dynamic_env/trunk/sbpl_dynamic_planner" repo="sbpl_dynamic_env" repo_host="https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs">
  <description brief="sbpl_dynamic_planner">

  An anytime planner for dynamic environments. It takes in a start, goal, static costmap, and predicted dynamic obstacle trajectories. It returns a safe path (x,y,theta) if one exists.

  </description>
  <author>Michael Phillips,  Maxim Likhachev</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sbpl_dynamic_planner</url>
  <depend package="sbpl"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lsbpl_dynamic_planner"/>
  </export>


</package><package name="xsens_node" path="/trunk/cturtle/xsens_node" repo="seabee3-ros-pkg" repo_host="http://seabee3-ros-pkg.googlecode.com/svn">
  <description brief="xsens_node">

     xsens_node

  </description>
  <author>Edward T. Kaszubski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/xsens_node</url>
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="std_msgs"/>
  <depend package="std_srvs"/>
  <depend package="tf"/>
  <depend package="libxsens"/>
  <depend package="base_libs"/>
  <depend package="rosbag"/>
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp -I${prefix}/srv/cpp" lflags="-L/{prefix}/lib"/>
    <rosbag migration_rule_file="rosbag_migration/IMUData_to_Imu.bmr"/>
  </export>
</package><package name="bz2_transport" path="" repo="ethzasl_message_transport" repo_host="https://github.com/ethz-asl/ros-message-transport">
  <description brief="bz2_transport">

     bz2_transport

  </description>
  <author>Cedric Pradalier</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/bz2_transport</url>
  <depend package="std_msgs"/> <!-- for testing -->
  <depend package="message_transport_common"/>

  <export>
      <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lbz2_transport -lbz2"/>
  </export>


  <rosdep name="bzip2"/>

</package><package name="corobot_joystick" path="/trunk/Diamondback/Corobot/corobot_joystick" repo="roscorobot" repo_host="http://svn.code.sf.net/p/roscorobot/code">
  <description brief="corobot_joystick">

     Package that permits to control the Corobot with a joystick. 

  </description>
  <author>Gang Li/GangLi@coroware.com</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/joystick_control</url>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="corobot_ssc32"/>
  <depend package="corobot_msgs"/>
  <depend package="corobot_srvs"/>
  <depend package="joy"/>

</package><package name="cob_object_detection_msgs" path="" repo="cob_object_perception" repo_host="git://github.com/ipa320/cob_object_perception">
  <description brief="cob_object_detection_msgs">

     cob_object_detection_msgs

  </description>
  <author>Florian Weisshardt</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_object_detection_msgs</url>

  <depend package="actionlib_msgs"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>

</package><package name="smach" path="" repo="executive_smach" repo_host="https://kforge.ros.org/smach/executive_smach">
  <description brief="Smach">
    SMACH, which stands for 'state machine', is a task-level
    architecture for rapidly creating complex robot behavior. At its
    core, SMACH is a ROS-independent Python library to build
    hierarchical state machines.  SMACH is a new library that takes
    advantage of very old concepts in order to quickly create robust
    robot behavior with maintainable and modular code.
  </description>
  <author>Jonathan Bohren</author>
  <license>BSD</license>
  <review notes="" status="Doc reviewed"/>
  <url>http://ros.org/wiki/smach</url>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
  <export>
    <rosdoc config="rosdoc.yaml"/>    
  </export>
</package><package name="cram_manipulation_knowledge" path="" repo="cram_highlevel" repo_host="https://github.com/moesenle/cram_highlevel">
  <description brief="cram_manipulation_knowledge">

     cram_manipulation_knowledge

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cram_manipulation_knowledge</url>
  <depend package="cram_reasoning"/>
  <depend package="cram_utilities"/>
  <depend package="cl_transforms"/>
</package><package name="ckill" path="/stacks/web_interface/trunk/ckill" repo="web_interface" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description>Cluster kill</description>
  <author>Scott Hassan</author>
  <license>BSD</license>
  <review notes="" status="na"/>
  <url>http://pr.willowgarage.com/wiki/ckill</url>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="bosch_maps" path="/trunk/stacks/bosch_common/bosch_maps" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="bosch-ros-pkg maps">
     Maps supporting bosch-ros-pkg
  </description>
  <author>Charles DuHadway (Maintained by Benjamin Pitzer)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
</package><package name="wdls_prior_vel_solver" path="" repo="itasc_solvers" repo_host="http://git.mech.kuleuven.be/robotics/itasc_solvers.git">
    <description brief="WDLS Priorities Velocity Solver">
        This package contains the components of the WDLSPriorVelSolver package.
	Part of the iTaSC-Skill framework, itasc_solvers.
    </description>
    <license>BSD,LGPL</license>
    <url>http://www.orocos.org/itasc</url>
    <author>Dominick Vanthienen</author>
    <depend package="rtt"/>
    <rosdep name="eigen"/>
    <depend package="orocos_kdl"/>
    <depend package="ocl"/>
    <depend package="itasc_core"/>
</package><package name="saap_pkg" path="/stacks/auction_methods_stack/trunk/saap_pkg" repo="auction_methods_stack" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="sap_pkg">

     sap_pkg

  </description>
  <author>Joao Manuel Leitao Quintas</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sap_pkg</url>

  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="auction_msgs"/>
  <depend package="auction_srvs"/>

</package><package name="pr2_arm_teleop_skin" path="/trunk/stacks/bosch_proximity_sensor_applications/pr2_arm_teleop_skin" repo="bosch-ros-pkg-e" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg-e/code">
  <description brief="pr2_arm_teleop_skin">

     pr2_arm_teleop_skin

  </description>
  <author>Adrian Funk (maintained by Philip Roan)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_arm_teleop_skin</url>
  <!--<depend package="joy"/>-->
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="topic_tools"/>
  <depend package="actionlib"/>
  <depend package="tf"/>
  <depend package="kinematics_msgs"/>
  <depend package="arm_navigation_msgs"/>

</package><package name="scene_generic" path="" repo="scene_labelling_rgbd" repo_host="https://github.com/aa755/scene_labelling_rgbd">
  <description brief="scene_generic">

     scene_generic

  </description>
  <author>Hema Koppula</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/scene_generic</url>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <!--depend package="scene_processing"/-->


</package><package name="libptp2" path="/trunk/resources/libptp2" repo="ubc-ros-pkg" repo_host="https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg">
    <description brief="libptp2">
        libptp2 is a library used to communicate with PTP devices like still
        imaging cameras or MP3 players (KODAK mc3). You can download files
        or tweak camera properties using ptpcam program boundled with libptp2.
    </description>

    <author/>
    <license/>
    <review notes="" status="3rdparty"/>
    <url/>
    <export>
        <cpp cflags="-I${prefix}/build/include" lflags="-L${prefix}/build/lib -lptp2"/>
    </export>

    <rosdep name="libusb"/>

</package><package name="rosdep" path="" repo="rosdep" repo_host="https://kforge.ros.org/rosrelease/rosdep">
  <description brief="A ROS system dependency manager">

This is a standalone version of the rosdep system 
dependency tool.  This package should NOT be added
to a ROS_PACKAGE_PATH.  Instead, it is designed to be
installed as a system dependency via apt, pip, or the like.

   </description>
  <author>Tully Foote/tfoote@willowgarage.com, Ken Conley/kwc@willowgarage.com</author>
  <license>BSD</license>

  <review notes="" status="experimental"/>

  <export>
    <rosdoc config="rosdoc.yaml"/>    
  </export>

</package><package name="katana_gazebo_plugins" path="" repo="katana_driver" repo_host="http://kos.informatik.uni-osnabrueck.de/katana_driver.git">
  <description brief="Provides Gazebo plugins to simulate the Katana arm">

     This package provides Gazebo plugins to simulate the Katana arm.

  </description>
  <author>Martin Günther</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/katana_gazebo_plugins</url>
  <depend package="gazebo"/>
  <depend package="trajectory_msgs"/>
  <depend package="sensor_msgs"/>

  <!-- for gazebo_ros_katana_gripper -->
  <depend package="object_manipulation_msgs"/>
  <depend package="control_toolbox"/>
  <depend package="actionlib"/>
  <depend package="katana_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="spline_smoother"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib"/>
    <gazebo plugin_path="${prefix}/lib"/>
  </export>
</package><package name="kingfisher_teleop" path="/trunk/clearpath_kingfisher/kingfisher_teleop" repo="clearpath-ros-pkg" repo_host="http://clearpath-ros-pkg.googlecode.com/svn">
  <description brief="kingfisher_teleop">
    This package contains launch files which enable simple 
    teleoperation of the Clearpath Robotics Kingfisher.
  </description>
  <author>Mike Purvis</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/kingfisher_teleop</url>

  <depend package="kingfisher_bringup"/>
  <depend package="clearpath_teleop"/>
</package><package name="srs_grasping" path="" repo="srs_public" repo_host="git://github.com/ipa320/srs_public">

  <description brief="srs_grasping">

      This package provides tools to generate and simulate different grasping solutions in the Care-o-Bot.

  </description>

  <author>Robotnik Automation SLL</author>
  <license>LGPL</license>

  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/srs_grasping</url>

  <depend package="rospy"/>
  <depend package="actionlib"/>
  <depend package="tf"/>
  <depend package="trajectory_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="kinematics_msgs"/>
  <depend package="srs_msgs"/>
  <depend package="srs_object_database_msgs"/>
  <depend package="schunk_sdh"/> 
  <depend package="cob_srvs"/> 
  <depend package="cob_script_server"/>
  <depend package="cob_object_detection_msgs"/>

  <!--depend package="openrave"/-->  			<!-- Uncomment this line if you use the openrave_planning package -->
  <rosdep name="openrave"/> 				<!-- Comment this line if you use the openrave_planning package -->

  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/srv_gen/cpp/include"/>
  </export>

</package><package name="aisoy_ros_client" path="" repo="aisoy-ros-pkg" repo_host="https://github.com/aisoy-robotics/aisoy-ros-pkg">
  <description brief="aisoy_ros_client">
     aisoy_ros_client: Package used to send commands to AISoy1 through services requests to the Server.
  </description>
  <author>Adrian Jimenez, ajimenez@aisoy.com and Pablo Garcia, pgarcia@aisoy.com </author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -laisoy_ros_client"/>
  </export>

  <depend package="std_msgs"/>
  <depend package="roscpp"/>
  <depend package="image_transport"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>

</package><package name="rosserial_xbee" path="" repo="rosserial" repo_host="https://kforge.ros.org/rosserial/hg">
  <description brief="rosserial_xbee">

     rosserial_xbee provides tools to do point to multipoint communication
     between rosserial nodes connected to an xbee.  All of the nodes
     communicate back to a master xbee connected to a computer running
     ROS.  This software currently only works with Series 1 Xbees.
     
     This pkg includes python code from the python-xbee project:
     http://code.google.com/p/python-xbee/
     
  </description>
  <author>Adam Stambler</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosserial_xbee</url>
  <depend package="rosserial_python"/>

</package><package name="roswiki" path="/stacks/rosorg/trunk/roswiki" repo="rosorg" repo_host="https://code.ros.org/svn/ros">
  <description brief="roswiki">

     Package for managing macros and other related code for the ROS.org wiki

  </description>
  <author>Kenneth Conley</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/roswiki</url>

</package><package name="sr_generic_tools" path="" repo="sr_contrib" repo_host="lp:sr-contrib">
  <description brief="sr_generic_tools">

     This package will contain a diverse set of tools for the Shadow Robot Hand

  </description>
  <author>Toni Oliver Duran</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sr_generic_tools</url>
  <depend package="roslib"/>
  <depend package="rospy"/>
  <depend package="sensor_msgs"/>
  <depend package="sr_hand"/>
  <depend package="sr_robot_msgs"/>
  <depend package="std_msgs"/>

</package><package name="nxt_description" path="" repo="foote-nxt" repo_host="https://nxt.foote-ros-pkg.googlecode.com/hg/">
  <description brief="nxt_description">

     nxt_description contains the nxt collada models for nxt_ros. The collada models are created from  
     ldraw.org part models and are named by part number.

  </description>
  <author>Melonee Wise</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/nxt_description</url>

</package><package name="explore_stage" path="/trunk/trunk/summit_xl_sim_fuerte/summit_xl_exploration/explore_stage" repo="summit-xl-ros-stack" repo_host="http://summit-xl-ros-stack.googlecode.com/svn">
  <description brief="Explore demos">Demos for explore package in bosch-ros-pkg</description>
  <author>Charles DuHadway (maintained by Benjamin Pitzer)</author>
  <license>BSD</license>
  <review notes="" status="na"/>
  <url>http://ros.org/wiki/explore_stage</url>
  <depend package="stage"/>
  <depend package="explore"/>
  <depend package="move_base"/>
  <depend package="gmapping"/>
  <depend package="tf"/>

</package><package name="cwru_sim_stage" path="" repo="cwru-ros-pkg" repo_host="http://github.com/cwru-robotics/cwru-ros-pkg">
  <description brief="cwru_sim_stage">

     cwru_sim_stage

  </description>
  <author>Eric Perko</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cwru_sim_stage</url>
  <depend package="stage"/>
  <depend package="cwru_nav"/>
  <depend package="map_server"/>
  <depend package="cwru_maps"/>

</package><package name="sub20" path="/trunk/stacks/bosch_drivers/sub20" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="ROS driver for the Sub20 device from XDIMAX.">

     The driver enables communication with a XDIMAX SUB20 device via USB. The sub20 sources are downloaded from XDIMAX during build.

  </description>
  <author>Sebastian Haug, Philip Roan (Maintained by Philip Roan)</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sub20</url>

  <rosdep name="libusb-1.0-dev"/>
  
  <export>
    <cpp cflags="-I${prefix}/src" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lsub20"/>
  </export>

</package><package name="powerbot_defs" path="/trunk/robots/powerbot_defs" repo="ubc-ros-pkg" repo_host="https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg">
  <description brief="powerbot">
      Powerbot URDF definitions.
  </description>
  <author>Marius Muja</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url/>
  <depend package="xacro"/>
  <depend package="urdf"/>

</package><package name="soar_tests" path="/branches/soar_tests" repo="rtc-us-ros-pkg-branches" repo_host="https://rtc-us-ros-pkg.svn.sourceforge.net/svnroot/rtc-us-ros-pkg">
  <description brief="soar_tests">

     soar_tests

  </description>
  <author>Pablo Iñigo Blasco</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/soar_tests</url>

</package><package name="wubble_robot" path="/trunk/arrg/ua_apps/wubble_robot" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="Wubble robot hardware">

        wubble_robot

    </description>
    <author>UA Robot Lab</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/wubble_robot</url>
    
    <depend package="wubble_description"/>
    <depend package="erratic_player"/>
    <depend package="hokuyo_node"/>
    
    <depend package="wubble_teleop"/>
    <depend package="wubble_mapping"/>
    <depend package="wubble_actions"/>
    <depend package="wubble_2dnav"/>

</package><package name="generic_controllers" path="/trunk/cturtle/generic_controllers" repo="seabee3-ros-pkg" repo_host="http://seabee3-ros-pkg.googlecode.com/svn">
  <description brief="generic_controllers">

     generic_controllers

  </description>
  <author>Edward T. Kaszubski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/generic_controllers</url>
  <depend package="roscpp"/>
  <depend package="common_utils"/>
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp -I${prefix}/srv/cpp" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lgeneric_controllers"/>
  </export>

</package><package name="flyatar_calibration" path="" repo="flyatar" repo_host="http://github.com/peterpolidoro/Flyatar">
  <description brief="flyatar_calibration">

     flyatar_calibration

  </description>
  <author>Peter Polidoro</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url/>
  <depend package="rospy"/>
  <depend package="joystick_commands"/>
  <depend package="camera1394v2"/>
  <depend package="pythonmodules"/>
  <depend package="track_image_contours"/>
  <depend package="plate_tf"/>

</package><package name="cob_navigation_slam" path="" repo="cob_navigation" repo_host="git://github.com/ipa320/cob_navigation">
  <description brief="cob_navigation_slam">

     This package provides launch files for running  <a href="http://ros.org/wiki/care-o-bot">Care-O-bot</a> with the  <a href="http://ros.org/wiki/gmapping">gmapping</a> slam package of ROS. It further provides the usual navigation functionalities as provided by the <a href="http://ros.org/wiki/move_base">move_base</a> node.

  </description>
  <author>Florian Weisshardt</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_navigation_slam</url>

  <depend package="cob_navigation_config"/>
  <depend package="cob_navigation_global"/>
  <depend package="cob_mapping_slam"/>
  
</package><package name="wubble_controllers" path="/trunk/arrg/ua_controllers/wubble_controllers" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="Controllers for Wubble Robot">
        Controllers for Wubble Robot (head pan/tilt, laser tilt, etc.)
    </description>

    <author>Arizona Robotics Research Group</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/wubble_controllers</url>

    <depend package="dynamixel_controllers"/>
    
    <depend package="pr2_controllers_msgs"/>
    <depend package="sensor_msgs"/>
    <depend package="dynamixel_msgs"/>
</package><package name="android_voice_message" path="/trunk/jsk_smart_apps/android_voice_message" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="android_voice_message">
     android_voice_message
  </description>
  <author>Damon Kohler</author>
  <license>Apache 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/android_voice_message</url>
</package><package name="rosserial_arduino" path="" repo="rosserial" repo_host="https://kforge.ros.org/rosserial/hg">
  <description brief="Libraries and examples for ROSserial usage on Arduino/AVR Platforms"/>
  <author>Michael Ferguson, Adam Stambler</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosserial_arduino</url>  

  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="rosserial_client"/>

  <rosdep name="gcc-avr"/>
  <rosdep name="avr-libc"/>
  
</package><package name="hrl_clickable_world" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="hrl_clickable_world">

    Contains a visual &quot;clickable-world&quot; interface for semi-autonomous control. 

  </description>
  <author>Kelsey Hawkins, Advisor: Prof. Charlie Kemp (Healthcare Robotics Lab at Georgia Tech)</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/hrl_clickable_world</url>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="smach"/>
  <depend package="roslib"/>
  <depend package="std_srvs"/>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="cv_bridge"/>
  <depend package="image_geometry"/>
  <depend package="image_transport"/>
  <depend package="tf"/>
  <depend package="opencv2"/>
  <depend package="pixel_2_3d"/>

</package><package name="longhorn_arm_navigation" path="/trunk/swri_demos/longhorn_arm_navigation" repo="swri-ros-pkg" repo_host="http://swri-ros-pkg.googlecode.com/svn">
  <description brief="longhorn_arm_navigation">

     longhorn_arm_navigation

  </description>
  <author>Shaun Edwards</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/longhorn_arm_navigation</url>
  <depend package="dx100"/>
  <depend package="kinematics_base"/>
  <depend package="planning_environment"/>
  <depend package="arm_kinematics_constraint_aware"/>
  <depend package="ompl_ros_interface"/>
  <depend package="trajectory_filter_server"/>
  <depend package="constraint_aware_spline_smoother"/>
  <depend package="move_arm"/>
  <export>
    <kinematics_base plugin="${prefix}/kinematics_plugins.xml"/>
  </export>
</package><package name="tf_throttle" path="/stacks/pr2_object_manipulation/branches/0.6-branch/applications/tf_throttle" repo="pr2_object_manipulation" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="tf_throttle">

     tf_throttle

  </description>
  <author>Matei Ciocarlie</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/tf_throttle</url>
  <depend package="tf"/>

</package><package name="rocon_gateway_discovery" path="" repo="rocon_multimaster" repo_host="https://github.com/robotics-in-concert/rocon_multimaster">
  <description brief="rocon_gateway_discovery">

     rocon_gateway_discovery

  </description>
  <author>Daniel Stonier</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rocon_gateway_discovery</url>

</package><package name="cv_markers" path="/stacks/vision_opencv/trunk/cv_markers" repo="vision_opencv" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="cv_markers">

     cv_markers

  </description>
  <author>James Bowman</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cv_markers</url>

  <depend package="tf"/>
  <depend package="image_geometry"/>
  <depend package="cv_bridge"/>
  <depend package="message_filters"/>
  <depend package="tf_conversions"/>
  <depend package="kdl"/>
  <depend package="opencv2"/>
  
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
  <rosdep name="opencv2"/>
</package><package name="visualization_utilities" path="" repo="usc-clmc-ros-pkg" repo_host="https://github.com/usc-clmc/usc-clmc-ros-pkg">
  <description brief="visualization_utilities">

     visualization_utilities

  </description>
  <author>Mrinal Kalakrishnan</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/visualization_utilities</url>

  <depend package="visualization_msgs"/>
  <depend package="arm_navigation_msgs"/>
  <depend package="planning_environment"/>
  <depend package="kdl"/>

  <depend package="robot_info"/>
  <depend package="usc_utilities"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lvisualization_utilities"/>
  </export>


</package><package name="cob_base_drive_chain" path="" repo="cob_driver" repo_host="git://github.com/ipa320/cob_driver">
  <description brief="cob_base_drive_chain">

     This package contains classes that are able to control the platform of the Care-O-Bot. This means to establish a CAN communication to drive and steering motors of the platform and later send motion commands and receive motor information.

  </description>
  <author>Christian Connette</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_base_drive_chain</url>

  <!-- Dependencies from other packages or external libs-->
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="diagnostic_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="cob_srvs"/>
  <depend package="cob_generic_can"/>
  <depend package="cob_canopen_motor"/>
  <depend package="cob_utilities"/>
  <depend package="libpcan"/>

  <!-- As we deviate from the standard ROS Repository-Structure we have to tell ROS where to find header and lib -->
  <export>
    <cpp cflags="-I${prefix}/common/include" lflags="-Wl,-rpath,${prefix}/common/lib -L${prefix}/common/lib -lcob_base_drive_chain"/>
  </export>

</package><package name="midi_reader" path="/branches/stable/music/midi_reader" repo="wu-ros-pkg" repo_host="https://wu-robotics.googlecode.com/svn">
  <description brief="Midi Reader">
    Library for reading MIDI files into Song messages (from music_msgs)
  </description>
  <author>David V. Lu!!</author>
  <license>BSD</license>
  <url>http://ros.org/wiki/midi_reader</url>
  <depend package="music_msgs"/>
  <depend package="rospy"/>

</package><package name="corobot_phidgetIK" path="/trunk/Diamondback/Corobot/corobot_phidgetIK" repo="roscorobot" repo_host="http://svn.code.sf.net/p/roscorobot/code">
  <description brief="corobot_phidgetIK">

     this package is an interface to the device Phidget interface Kit 8/8/8 for CoroWare's robot Corobot. 

  </description>
  <author>CoroWare/mcormier@coroware.com</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/phidget_node_test</url>
  <depend package="std_msgs"/>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="corobot_srvs"/>
  <depend package="corobot_msgs"/>
  <depend package="sensor_msgs"/>

</package><package name="srs_pellet" path="" repo="srs_public" repo_host="git://github.com/ipa320/srs_public">
  <description brief="srs_pellet">

     srs_pellet

  </description>
  <author>Ze Ji</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/srs_pellet</url>

  <export>
    <cpp cflags="-I${prefix}/common/lib"/>
  </export>

</package><package name="rosrtw_examples" path="" repo="rosmatlab" repo_host="https://github.com/tu-darmstadt-ros-pkg/rosmatlab">
  <description brief="rosrtw_examples">

     rosrtw_examples

  </description>
  <author>Johannes Meyer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosrtw_examples</url>

  <depend package="rosrtw"/>

</package><package name="simulation_object_tracker" path="/trunk/tidyup_robot/simulation_object_tracker" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="simulation_object_tracker">

     simulation_object_tracker

  </description>
  <author>andreas</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/simulation_object_tracker</url>
  <depend package="rospy"/>
  <depend package="tf"/>
  <depend package="tidyup_msgs"/>
  <depend package="hardcoded_facts"/>
  <depend package="tidyup_arm_services"/>
  <depend package="visualization_msgs"/>
  <depend package="arm_navigation_msgs"/>
  <depend package="pr2_python"/>
  <depend package="actionlib"/>

</package><package name="openrtm" path="/trunk/rtmros_common/openrtm" repo="rtm-ros-robotics/rtmros_common" repo_host="https://rtm-ros-robotics.googlecode.com/svn">
  <description brief="openrtm">

     openrtm

  </description>
  <author>AIST, ros package is maintained by Kei Okada</author>
  <license>EPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/openrtm</url>

  <rosdep name="tix"/>
  <rosdep name="omniorb"/>
  <rosdep name="python-omniorb"/>

  <depend package="rtmbuild"/>
  <depend package="xdot"/>

  <export>
    <python path="${prefix}/src/openrtm:${prefix}/src/openrtm/OpenRTM_aist/:${prefix}/src/openrtm/OpenRTM_aist/utils:${prefix}/src/openrtm/OpenRTM_aist/RTM_IDL"/>
  </export>

</package><package name="nxt_lxf2urdf" path="" repo="foote-nxt" repo_host="https://nxt.foote-ros-pkg.googlecode.com/hg/">
  <description brief="nxt_lxf2urdf">

     nxt_lxf2urdf converts a <a href="http://ldd.lego.com/">LEGO
     Digital Design file (*.lxf)</a> 
     to <a href="http://ros.org/wiki/urdf">urdf </a>.  nxt_lxf2urdf
     needs a (*.lxf) and a (*.ldr) file for completing the conversion
     from lxf to urdf.  It also has the ldraw.xml file that is in the
     assests folder of the LEGO Digital Designer which has been
     modified to add more parts.

  </description>
  <author>Melonee Wise</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/nxt_lxf2urdf</url>

</package><package name="pr2_etherCAT" path="" repo="pr2_robot" repo_host="https://kforge.ros.org/pr2robot/hg">
  <description brief="Main robot execution loop">
Main loop that runs the robot.
  </description>
  <author>Rob Wheeler/wheeler@willowgarage.com</author>
  <license>BSD</license>
  <review notes="" status="Doc Reviewed"/>
  <depend package="pr2_controller_manager"/>
  <depend package="pr2_mechanism_model"/>
  <depend package="pr2_hardware_interface"/>
  <depend package="roscpp"/>
  <depend package="ethercat_hardware"/>
  <depend package="std_srvs"/>
  <depend package="realtime_tools"/>
  <depend package="diagnostic_msgs"/>
  <depend package="diagnostic_updater"/>
  <url>http://pr.willowgarage.com</url>
  <repository>http://pr.willowgarage.com/repos</repository>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="ccny_asctec_firmware_2" path="" repo="asctec_drivers" repo_host="https://github.com/ccny-ros-pkg/asctec_drivers">
  <description brief="ccny_asctec_firmware_2">

     Firmware for the Asctec Autopilot HighLevel Processor, in part based on asctec_hl_firmware by Achtelik et al. For the 2012 version of the asctec HL/LL SDK.

  </description>
  <author>Ivan Dryanovski, Roberto G. Valenti</author>
  <license>BSD</license>
  <review notes="Under active development" status="unreviewed"/>
  <url>http://ros.org/wiki/ccny_asctec_firmware_2</url>
</package><package name="cob_dashboard" path="" repo="cob_command_tools" repo_host="git://github.com/ipa320/cob_command_tools">
    <description brief="Care-O-bot Dashboard">
    
      cob_dashboard is a modified version of [[pr2_dashboard]].
    
    </description>
    <author>Alexander Bubeck</author>
    <license>LGPL</license>
    <url>http://ros.org/wiki/cob_dashboard</url>
    <depend package="rxtools"/>
    <depend package="robot_monitor"/>
    <depend package="rospy"/>
    <depend package="roslib"/>
    <depend package="std_srvs"/>
    <depend package="std_msgs"/>
    <depend package="pr2_power_board"/>
    <depend package="pr2_msgs"/>
    <depend package="pr2_dashboard"/>
    
  <rosdep name="wxwidgets"/>
  <rosdep name="wxpython"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="ds_pr2_fridge_handle_detector" path="/trunk/stacks/drink_serving/ds_pr2_fridge_handle_detector" repo="bosch-ros-pkg-e" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg-e/code">
  <description brief="handle_detection">

     fridge_handle_detector

  </description>
  <author>Dejan Pangercic</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/fridge_handle_detector</url>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="visualization_msgs"/>
</package><package name="pr2_gripper_grasp_planner_cluster" path="/stacks/pr2_object_manipulation/branches/0.6-branch/manipulation/pr2_gripper_grasp_planner_cluster" repo="pr2_object_manipulation" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_gripper_grasp_planner_cluster">

    Plans grasps for unknown objects using the PR2 gripper. Uses only
    a (segmented) point cloud of the target object, often originating
    from a single view or scan.

  </description>
  <author>Kaijen Hsiao</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_gripper_grasp_planner_cluster</url>

  <depend package="rospy"/>
  <depend package="tf"/>
  <depend package="actionlib"/>
  <depend package="geometry_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="interpolated_ik_motion_planner"/>
  <depend package="object_manipulator"/>
  <depend package="object_manipulation_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/srv/cpp"/>
  </export>


</package><package name="cyphy_kbd" path="" repo="cyphy_legacy" repo_host="http://launchpad.net/cyphy">
  <description brief="cyphy_kbd">

     cyphy_kbd

  </description>
  <author>Inkyu Sa</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cyphy_kbd</url>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="roslib"/>
  <depend package="rosconsole"/>

</package><package name="grasp_template" path="" repo="usc-clmc-ros-pkg" repo_host="https://github.com/usc-clmc/usc-clmc-ros-pkg">
  <description brief="grasp_template">

     grasp_template

  </description>
  <author>Alexander Herzog</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/grasp_template</url>

  <depend package="roscpp"/>

  <depend package="geometry_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="sensor_msgs"/>
   
  <depend package="pcl"/>
  <depend package="eigen"/>
  
  <depend package="tf"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lgrasp_template"/>
  </export>
  
</package><package name="CANOpen_driver" path="" repo="schunk_modular_robotics" repo_host="git://github.com/ipa320/schunk_modular_robotics">
  <description brief="CANOpen_driver">

     CANOpen_driver

  </description>
  <author>Tim Fröhlich</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/CANOpen_driver</url>
	
  <depend package="roscpp"/>
  <depend package="diagnostic_msgs"/>
  <depend package="cob_generic_can"/>
  <depend package="cob_utilities"/>

</package><package name="rosserial_msgs" path="" repo="rosserial" repo_host="https://kforge.ros.org/rosserial/hg">
  <description brief="Messages for automatic topic configuration using rosserial.">
     Messages for automatic topic configuration using rosserial.
  </description>
  <author>Michael Ferguson</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosserial_msgs</url>

</package><package name="kobuki_keyop" path="" repo="kobuki" repo_host="https://github.com/yujinrobot/kobuki">
  <description brief="Creates a remote keyboard operation node for kobukibot">

     This relays commands from a keyboard to the kobukibot's core. 
     
  </description>
  <author>Daniel Stonier</author>
  <license>Yujin</license>
  <review notes="" status="doc reviewed"/>
  <url>http://ros.org/wiki/kobuki_keyop</url>

  <!-- Ros -->
  <depend package="geometry_msgs"/>
  <depend package="std_srvs"/>
  <depend package="std_msgs"/>
  <depend package="roscpp"/>
  <!-- Kobuki -->
  <depend package="kobuki_comms"/>
  <!-- Ecl -->
  <depend package="ecl_threads"/>
  <depend package="ecl_time"/>
</package><package name="wubble2_gripper_controller" path="/trunk/arrg/ua_experimental/wubble2_gripper_controller" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="wubble2_gripper_controller">
        wubble2_gripper_controller
    </description>
    
    <author>Antons Rebguns</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/wubble2_gripper_controller</url>
    
    <depend package="roscpp"/>
    <depend package="tf"/>
    <depend package="std_msgs"/>
    <depend package="dynamixel_hardware_interface"/>
    <depend package="phidgets_ros"/>
    
    <export>
        <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lwubble2_gripper_controller"/>
        <dynamixel_hardware_interface plugin="${prefix}/controller_plugins.xml"/>
    </export>
</package><package name="ias_semantic_map" path="/tags/latest/ias_semantic_map" repo="knowrob" repo_host="http://code.in.tum.de/pubsvn/knowrob">
  <description brief="ias_semantic_map">

    Semantic maps of different kitchens of the IAS group at TUM, created from 3D laser scans,
    represented as OWL file, plus additional predicates for manipulating the map and reasoning on it.

  </description>
  <author>Lars Kunze, Lorenz Moesenlechner, Moritz Tenorth</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.ros.org/wiki/ias_semantic_map</url>
  <depend package="comp_spatial"/>
  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>
</package><package name="orocos_kdl" path="" repo="orocos_kinematics_dynamics" repo_host="http://git.mech.kuleuven.be/robotics/orocos_kinematics_dynamics.git">
<description brief="The Kinematics and Dynamics Library (latest)">

This package contains a recent version of the Kinematics and Dynamics
Library (KDL), distributed by the Orocos Project. 

</description>
<author>Ruben Smits, Erwin Aertbelien, Orocos Developers</author>
<license>LGPL</license>
<review notes="" status="reviewed"/>
<url>http://www.orocos.org/kdl</url>
<export>
  <cpp cflags="-I${prefix}/install_dir/include `pkg-config --cflags eigen3`" lflags="-Wl,-rpath,${prefix}/install_dir/lib  -L${prefix}/install_dir/lib -lorocos-kdl"/>
  <doxymaker external="http://www.orocos.org/kdl"/>
</export>

<rosdep name="cppunit"/>
<rosdep name="pkg-config"/>
<rosdep name="eigen"/>

</package><package name="kobuki_utilities" path="" repo="kobuki" repo_host="https://github.com/yujinrobot/kobuki">
  <description brief="Package containing utililities specific for kobukibot">
    A dumping ground for our scripts, launchers that are kobukibot specific. 
  </description>
  <author>Daniel Stonier, 주영훈</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.ros.org/wiki/kobuki_utilities</url>

  <!-- Kobuki -->
  <depend package="kobuki_node"/>
  <depend package="kobuki_description"/>
  <depend package="zeroconf_avahi"/>
 
  <!-- Turtlebot --> 
  <depend package="turtlebot_teleop"/> <!-- launch dependency -->
  <depend package="turtlebot_bringup"/> <!-- launch dependency -->
  <depend package="turtlebot_navigation"/> <!-- indirect launch dependency -->
  
  <!--  Ros -->
  <depend package="robot_state_publisher"/>

  <!-- Visualization -->
  <depend package="rviz"/>
  <depend package="joint_state_publisher"/>
  
  <!-- 3d Sensing -->
  <depend package="openni_camera"/>
  <depend package="pointcloud_to_laserscan"/>

  <!-- System Utilities -->
  <rosdep name="unison"/>

</package><package name="database_interface" path="/stacks/sql_database/trunk/database_interface" repo="sql_database" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="database_interface">

    Provides an easy to use and general interface between a SQL
    database and object-oriented C++ code, making it easy to
    encapsulate the conceptual &quot;objects&quot; contained in the database as
    C++ classes.

  </description>
  <author>Matei Ciocarlie and Lorenz Mosenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/database_interface</url>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lpostgresql_database"/>
  </export>

  <depend package="roscpp"/>
  <depend package="common_rosdeps"/>

  <rosdep name="libpq-dev"/>
  <rosdep name="yaml-cpp"/>

</package><package name="ihr_demo_bags" path="" repo="iheart-ros-pkg" repo_host="git://github.com/IHeartRobotics/iheart-ros-pkg">
  <description brief="ihr_demo_bags">
    Bag files used in Demos
  </description>
  <author>I Heart Robotics</author>
  <license>Creative Commons BY-NC-SA</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ihr_demo_bags</url>
  <depend package="std_msgs"/>
</package><package name="asmach_tutorials" path="/stacks/linux_networking/trunk/asmach_tutorials" repo="linux_networking" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="smach_tutorials">
    This package containes numerous examples of how to use SMACH. See the examples directory.
  </description>
  <author>Jonathan Bohren</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/smach_tutorials</url>

  <depend package="rospy"/>
  <depend package="asmach"/>
  <depend package="smach_ros"/>

  <depend package="turtlesim"/>
  <!--depend package='turtle_actionlib'/-->

  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/msg/cpp"/>
  </export>

</package><package name="headmath" path="/branches/stable/head_tracking/headmath" repo="wu-ros-pkg" repo_host="https://wu-robotics.googlecode.com/svn">
  <description brief="headmath">

     headmath

  </description>
  <author>Lazewatsky Daniel</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/headmath</url>
  <depend package="rospy"/>
  <depend package="tf"/>
  <depend package="geometry_msgs"/>


</package><package name="mainMotorControl_communications" path="" repo="pandora-auth-ros-pkg" repo_host="https://github.com/pandora-auth-ros-pkg/pandora-auth-ros-pkg">
  <description brief="mainMotorControl_communications">

     The mainMotorControl_communications defines main motor control messages and services

  </description>
  <author>Allamanis Miltiadis, Serenis Charalambos, Stamatiadou Marina, Sykoudi Pelagia </author>
  <license>MIT</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/mainMotorControl_communications</url>
  <depend package="interface_tester"/>

</package><package name="pcl_to_scan" path="" repo="elektron_kinectbot" repo_host="https://github.com/RCPRG-ros-pkg/elektron_kinectbot">
  <description brief="pcl_to_scan">

     Pointcloud utilities to simulate laser readings. 

  </description>
  
  <author>Maciej Stefanczyk</author>
  
  <license>BSD</license>
  
  <review notes="" status="unreviewed"/>
  
  <url>http://ros.org/wiki/pcl_to_scan</url>
  
  <depend package="nodelet"/>
  <depend package="sensor_msgs"/>
  <depend package="pcl_ros"/>
  <depend package="visualization_msgs"/>
  <depend package="openni_camera"/>
  <depend package="tf"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="dynamic_reconfigure"/>

  <export>
    <nodelet plugin="${prefix}/nodelets.xml"/>
  </export>

</package><package name="eros_toolchains" path="/trunk/tools/eros_toolchains" repo="eros" repo_host="https://code.ros.org/svn/eros">
  <description brief="cmake toolchain modules for popular toolchains">

  eros_toolchains is a library of preconfigured cmake toolchain modules
  for popular/standard toolchain configurations on various platforms.

  </description>
  <author>Daniel Stonier</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/eros_toolchains</url>
  <depend package="eros_license"/>
  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>
</package><package name="katana_kinematics_constraint_aware" path="" repo="katana_manipulation" repo_host="http://kos.informatik.uni-osnabrueck.de/katana_manipulation.git">

  <description brief="A kinematics plugin for the Katana 450 arm based on OpenRave IK and urdf-based FK">

    <p>
      This package provides an plugin implementation of the kinematics_base interface to establish constraint aware kinematics services.
      The plugin combines the OpenRave IK service from the orroplanning package and the generic urdf-based FK from the arm_kinematics package. To provide constraint_aware services the plugin must be used with the arm_kinematics_constraint_aware node of the respective package.
    </p>

    <p>
      Additionally, the non_constraint_aware_ik_adapter node provides the
      <a href="/doc/api/kinematics_msgs/html/srv/GetConstraintAwarePositionIK.html">get_constraint_aware_ik</a>
      service. It just strips away all the constraint aware stuff and calls a normal (non-constraint aware)
      <a href="/doc/api/kinematics_msgs/html/srv/GetPositionIK.html">get_ik</a> service instead.
    </p>

    <p>
      Normally, get_constraint_aware_ik checks the space of potential IK solutions (from get_ik) for a
      solution that obeys all constraints (i.e., a solution that is not in self-collision or in collision
      with the environment). That only really makes sense for a redundant (&gt;6 DoF) robot arm. Since the
      Katana only has 5 DoF, we only get at most one IK solution, so there is nothing to filter.
    </p>

    <p>
      If we return a solution that violates constraints - for instance, that is in self-collision - then
      move_arm will abort with an error code.  But if the solution is valid, everything should work.
    </p>

  </description>

  <author>Henning Deeken, Martin Günther</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/katana_kinematics_constraint_aware</url>

  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="orrosplanning"/>
  <depend package="kinematics_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="motion_planning_msgs"/>
  <depend package="urdf"/>
  <depend package="pluginlib"/>
  <depend package="kinematics_base"/>
  <depend package="arm_kinematics_constraint_aware"/>
  <depend package="ompl"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lkatana_openrave_kinematics"/>
    <kinematics_base plugin="${prefix}/katana_openrave_kinematics.xml"/>
  </export>

</package><package name="roshlaunch" path="" repo="rosh_core" repo_host="https://kforge.ros.org/rosh/rosh_core">
  <description brief="ROSH Process Launcher">

roshlaunch is a temporary package for redesigning roslaunch to have better programmatic APIs for libraries like rosh.

  </description>
  <author>Ken Conley/kwc@willowgarage.com</author>
  <license>BSD</license>
  <review status="experimental"/>
  <url>http://ros.org/wiki/roslaunch</url>
  <depend package="roslib"/>
  <depend package="rosclean"/>
  <depend package="rosgraph"/>
  <depend package="rospy"/>
  <depend package="rosmaster"/>  
  <depend package="rosout"/>
  <rosdep name="paramiko"/>
  <rosdep name="python-yaml"/>
  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>    
</package><package name="lse_miniq_bringup" path="/stacks/lse_miniq_robot/trunk/lse_miniq_bringup" repo="lse_miniq_robot" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="lse_miniq_bringup">

     This package holds all the files required to start the LSE miniQ robot in single and multi-robot mode.

  </description>
  <author>Gonçalo Cabrita</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/lse_miniq_bringup</url>

</package><package name="hrl_srvs" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="hrl_srvs">
    ROS services that the Healthcare Robotics Lab, Georgia Tech often
    uses.
  </description>
  <author>Advait Jain</author>
  <license>New BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hrl_srvs</url>

  <depend package="geometry_msgs"/> 

</package><package name="ardrone_utd" path="" repo="ardrone_utd" repo_host="https://github.com/jpiramirez/ardrone_utd">
  <description brief="ardrone_utd">

     ardrone_utd

  </description>
  <author>Juan Pablo Ramirez/pablo.ramirez@utdallas.edu</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>TBD</url>
  <depend package="rosjava"/>

</package><package name="laser_cb_detector" path="" repo="calibration" repo_host="http://kforge.ros.org/calibration/calibration">
  <description brief="Extracts checkerboard corners from a dense laser snapshot">
     Extracts checkerboard corners from a dense laser snapshot.
     This package is experimental and unstable. Expect its APIs to change.
  </description>
  <author>Vijay Pradeep</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.ros.org/wiki/laser_cb_detector</url>

  <!-- ROS -->
  <depend package="roscpp"/>
  <depend package="message_filters"/>
  <depend package="std_msgs"/>

  <!-- common_msgs -->
  <depend package="actionlib_msgs"/>

  <!-- calibration -->
  <depend package="calibration_msgs"/>
  <depend package="image_cb_detector"/>

  <!-- opencv -->
  <rosdep name="opencv2"/>
  <depend package="cv_bridge"/>
</package><package name="location_costmap" path="" repo="cram_highlevel" repo_host="https://github.com/moesenle/cram_highlevel">
  <description brief="location_costmap">

     location_costmap

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/location_costmap</url>
  <depend package="alexandria"/>
  <depend package="cram_utilities"/>
  <depend package="cram_roslisp_common"/>
  <depend package="cl_transforms"/>
  <depend package="cram_math"/>
  <depend package="cram_language"/>
  <depend package="cram_reasoning"/>
  <depend package="designators_ros"/>
  <depend package="nav_msgs"/>
  <depend package="arm_navigation_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="trivial_garbage"/>
  <depend package="lisp_unit"/>
  <depend package="cram_manipulation_knowledge"/>
</package><package name="roboard_gui" path="/trunk/veltrop-ros-pkg/roboard/roboard_gui" repo="veltrop-ros-pkg" repo_host="https://veltrop-ros-pkg.svn.sourceforge.net/svnroot/veltrop-ros-pkg">
  <description brief="roboard_gui">

     GUI programs for the roboard stack.

  </description>
  <author>Taylor Veltrop</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://taylor.veltrop.com/robotics/khrhumanoidv2.php?topic=veltrop-ros-pkg</url>
  
  <depend package="roboard_servos"/>

</package><package name="ocl" path="" repo="orocos_toolchain" repo_host="https://git.gitorious.org/orocos-toolchain/ocl.git">
    <description brief="Orocos component library">
        This package contains standard components for the Orocos Toolchain
    </description>
		<license>LGPL v2</license>
		<author>OCL Development Team</author>

		<review notes="" status="unreviewed"/>
		<url>http://www.orocos.org/ocl</url>

		<rosdep name="libreadline-dev"/>
		<rosdep name="libncurses-dev"/>
		<rosdep name="lua-dev"/>
		<depend package="rtt"/>
		<depend package="log4cpp"/>

		<export>
			<cpp cflags="-I${prefix}/install/include/orocos" lflags="-L${prefix}/lib"/>
		</export>

</package><package name="sbpl_door_planner" path="/sbpl_door_planning/trunk/sbpl_door_planner" repo="sbpl_door_planning" repo_host="https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs">
  <description brief="Doorway Planning Research">

  </description>
  <author>Maxim Likhachev/maximl@seas.upenn.edu, Sachin Chitta/schitta@willowgarage.com</author>
  <license>BSD</license>
    <depend package="sbpl"/>
    <depend package="roscpp"/>
    <depend package="rosconsole"/>
    <depend package="std_msgs"/>
    <depend package="geometry_msgs"/>
    <depend package="door_msgs"/>
    <depend package="pr2_doors_common"/>
    <depend package="angles"/>
    <depend package="tf"/>
  <url/>

  <export>
      <cpp cflags="-I${prefix}/include  -O3 -g" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lsbpl_door_planner"/>
  </export>

</package><package name="face_detector" path="" repo="people" repo_host="https://github.com/wg-perception/people">
  <description brief="face_detector">
    Face detection in images.
  </description>
  <author>Caroline Pantofaru</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/face_detector</url>

<depend package="roscpp"/>
<depend package="std_msgs"/>
<depend package="geometry_msgs"/>
<depend package="std_srvs"/>
<depend package="cv_bridge"/>
<rosdep name="opencv2"/>
<depend package="stereo_msgs"/>
<depend package="sensor_msgs"/>
<depend package="tf"/>
<depend package="rosbag"/>
<depend package="image_transport"/>
<depend package="people_msgs"/>
<depend package="image_geometry"/>
<depend package="actionlib_msgs"/>
<depend package="actionlib"/>

<export>
<cpp cflags="-I${prefix}/msg/cpp -I${prefix}/srv/cpp"/>
</export>

  <platform os="ubuntu" version="10.04"/>
  <platform os="ubuntu" version="11.10"/>
  <platform os="ubuntu" version="12.04"/>
</package><package name="accompany_example_action" path="" repo="accompany" repo_host="git://github.com/ipa320/accompany">
  <description brief="accompany_example_action">

     accompany_example_action is an example package that implements an action providing component, i.e. a component that may be called to deliver some requested response, and an action calling component which initiates the action at the server side. Actions are very similar to services but actions may not interrupt your program until you receive the response.

  </description>
  <author>Richard Bormann</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/accompany_example_action</url>

  <depend package="roscpp"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>

</package><package name="model_completion" path="/perception/model_completion" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="model_completion">
     model_completion
  </description>
  <author>Monica Opris</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/model_completion</url>
  <depend package="opencv2"/>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="cv_bridge"/>
  <depend package="robot_mask"/>
  <depend package="tf"/>
  <depend package="libsiftfast"/>
</package><package name="pc_grasp_position" path="/stacks/grasping/pc_grasp_position" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
<description>Reads a poind clound and parameter describing the gripper and
selects a valid hand position</description>
<author>Ulrich F Klank</author>
<license>GPL</license>
<depend package="roscpp"/>
<depend package="sensor_msgs"/>
<depend package="simple_grasp_planner"/>
<export>
</export>
</package><package name="pr2_gazebo_wg" path="/stacks/wg_robots_gazebo/trunk/pr2_gazebo_wg" repo="wg_robots_gazebo" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description>Gazebo 3D simulation PR2 examples.</description>
  <author>John Hsu</author>
  <license>BSD</license>
  <review notes="" status="na"/>
  <url>http://pr.willowgarage.com/wiki/pr2_gazebo_wg</url>
  <depend package="pr2_gazebo_plugins"/>
  <depend package="gazebo_plugins"/>
  <depend package="gazebo_tools"/>
  <depend package="pr2_ogre"/>
  <depend package="gazebo_worlds"/>
  <depend package="pr2_description"/>
  <depend package="pr2_tuckarm"/>
  <depend package="pr2_controller_configuration_gazebo"/>
  <depend package="robot_mechanism_controllers"/>
  <depend package="pr2_mechanism_controllers"/>
  <depend package="robot_state_publisher"/>

  <depend package="rospy"/>
  <depend package="std_msgs"/>
  <depend package="household_objects_database"/>

  <depend package="pr2_controllers_msgs"/>
  <depend package="actionlib"/>
  <depend package="rviz"/>

  <depend package="actionlib_msgs"/>  
  <depend package="trajectory_msgs"/>  
  <depend package="pr2_common_action_msgs"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="neo_base_mp_500" path="" repo="neo_driver" repo_host="https://github.com/neobotix/neo_driver">
  <description brief="neo_base_mp_500">

     neo_base_mp_500

  </description>
  <author>mob</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/neo_base_mp_500</url>
  <depend package="neo_platformctrl_diff"/>
  <depend package="cob_relayboard"/>
  <depend package="cob_sick_s300"/>

</package><package name="recognition_msgs" path="/trunk/recognition/recognition_msgs" repo="ubc-ros-pkg" repo_host="https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg">
  <description brief="recognition_msgs">
      This package contains messages used by the recognition stack.
  </description>
  <author>Marius Muja</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/recognition_msgs</url>
  
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <export>
      <cpp cflags="-I${prefix}/msg/cpp -I${prefix}/srv/cpp"/>
  </export>

</package><package name="pr2_clutter_helper" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="pr2_clutter_helper">

     pr2_clutter_helper
     
     Helpful short functions for trapping an image, pointcloud,
       transforms from tf, camera_info from the PR2.
     Used to grab data for the package &quot;gt-ros-pkg/hrl/clutter_segmentation&quot;
       
     Works on bagged data as well (if --clock is published).
     
     Main source file: acquire_pr2_data.py
     
     This collects and formats everythin needed by clutter_svm_segmentation.
     Also has code to map camera coloring into pointcloud and republish
        for easy viewing in ROS (Active if run stand-alone).
     
     Also helpful launch files.

  </description>
  <author>Jason Okerman, Advisors: Prof. Charlie Kemp and Jim Regh, Lab: Healthcare Robotics Lab at Georgia Tech</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_clutter_helper</url>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="tf"/>
  <depend package="rospy"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="image_geometry"/>

</package><package name="my_android_package" path="/trunk/jsk_smart_apps/my_android_package" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="android_tutorial_pubsub">
     android_tutorial_pubsub
     sample package, will be removed
  </description>
  <author>Damon Kohler</author>
  <license>Apache 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/android_tutorial_pubsub</url>
</package><package name="table_wiping_demo" path="/branches/pr2_demos/iros_demos/table_wiping_demo" repo="mit-ros-pkg-pr2-demos" repo_host="https://svn.csail.mit.edu/mit-ros-pkg">
  <description brief="table_wiping_demo">

     table_wiping_demo

  </description>
  <author>Jenny Barry</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/table_wiping_demo</url>
  <depend package="geometry_msgs"/>
  <depend package="rospy"/>
  <depend package="pr2_pick_and_place_demos"/>
  <depend package="visualization_msgs"/>
  <depend package="object_manipulator"/>
  <depend package="actionlib_msgs"/>
  <depend package="pr2_utils"/>
  <depend package="arm_navigation_msgs"/>
  <depend package="demo_tools"/>

</package><package name="cpl_superpixels" path="" repo="gt-ros-pkg.cpl" repo_host="https://code.google.com/p/gt-ros-pkg.cpl">
  <description brief="cpl_superpixels">

     cpl_superpixels

  </description>
  <author>Tucker Hermans</author>
  <license>GPLv2</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cpl_superpixels</url>
  <depend package="roscpp"/>
  <depend package="cv_bridge"/>
  <depend package="image_transport"/>
  <depend package="std_msgs"/>
  <depend package="pcl_ros"/>
  <depend package="pcl"/>
  <depend package="sensor_msgs"/>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lcpl_superpixels_base"/>
  </export>
  <rosdep name="opencv2"/>

</package><package name="geometric_shapes" path="" repo="arm_navigation" repo_host="https://kforge.ros.org/armnavigation/armnavigation">
  <description brief="geometric_shapes">
    The geometric shapes package provides implementations of basic geometric primitives. It can be used for collision checking, ray intersection and other operations with geoemtric primitives. 
  </description>
  <author>Ioan Sucan</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/geometric_shapes</url>

  <depend package="bullet"/>
  <depend package="rosconsole"/>
  <depend package="resource_retriever"/>
  <depend package="tf"/>

  <rosdep name="assimp"/>
  <rosdep name="pkg-config"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lgeometric_shapes"/>
  </export>
  
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="cob_tray_monitor" path="" repo="cob_manipulation" repo_host="git://github.com/ipa320/cob_manipulation">
  <description brief="cob_tray_monitor">

     cob_tray_monitor

  </description>
  <author>Florian Weisshardt</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_tray_monitor</url>

  <depend package="rospy"/>
  <depend package="sensor_msgs"/>
  <depend package="cob_srvs"/>

</package><package name="cart_interp" path="/trunk/chessbot/cart_interp" repo="stanford-ros-pkg" repo_host="https://stanford-ros-pkg.googlecode.com/svn">
  <description brief="cart_interp">

     cart_interp

  </description>
  <author>David Mandle</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cart_interp</url>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="geometry_msgs"/>
  <depend package="std_msgs"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="teleop_controllers"/>
</package><package name="parsec_calibration" path="" repo="parsec" repo_host="https://code.google.com/p/parsec">
  <description brief="parsec_calibration">

     parsec_calibration

  </description>
  <author>Damon Kohler</author>
  <license>Apache 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/parsec_calibration</url>

  <depend package="geometry_msgs"/>
  <depend package="rospy"/>
  <depend package="sensor_msgs"/>
  <depend package="parsec_msgs"/>
  <depend package="kdl"/>

</package><package name="hrl_move_floor_detect" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="hrl_move_floor_detect">

     hrl_move_floor_detect

  </description>
  <author>kelsey</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hrl_move_floor_detect</url>
  <depend package="rospy"/>
  <depend package="roslaunch"/>
  <depend package="rosnode"/>
  <depend package="tf"/>
  <depend package="bullet"/>
  <depend package="pcl_ros"/>
  <depend package="pcl"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="image_transport"/>
  <depend package="nav_core"/>
  <depend package="move_base"/>
  <depend package="image_geometry"/>

</package><package name="cl_glx" path="" repo="cram_physics" repo_host="https://github.com/moesenle/cram_physics">
  <description brief="cl_glx">

     cl_glx

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cl_glx</url>
  
  <depend package="cffi"/>
  <depend package="alexandria"/>
  <depend package="trivial_garbage"/>
</package><package name="articulate_cart" path="/stacks/cart_pushing/trunk/articulate_cart" repo="cart_pushing" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="articulate_cart">
     articulate_cart
  </description>
  <author>Jonathan Scholz</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rotate_cart</url>
  <depend package="pr2_controllers_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="manipulation_transforms"/>
  <depend package="std_msgs"/>
  <depend package="roslib"/>
  <depend package="rospy"/>
  <depend package="actionlib"/>
  <depend package="pr2_mechanism_msgs"/>
  <depend package="move_base_msgs"/>
  <depend package="pr2_controller_manager"/>  
  <export>
    <cpp cflags="-I${prefix}/include `rosboost-cfg --cflags`"/>
  </export>

</package><package name="costmap_trajectory_checker" path="/stacks/cart_pushing/trunk/costmap_trajectory_checker" repo="cart_pushing" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="costmap_trajectory_checker">

     costmap_trajectory_checker

  </description>
  <author>Jonathan Scholz</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/costmap_trajectory_checker</url>
  <depend package="roscpp"/>
  <depend package="costmap_2d"/>
  <depend package="base_local_planner"/>
  <depend package="tf"/>
  <depend package="geometry_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lcostmap_trajectory_checker"/>
  </export>


</package><package name="pr2_calib_proximity_sensor" path="/trunk/stacks/bosch_proximity_sensor_applications/pr2_calib_proximity_sensor" repo="bosch-ros-pkg-e" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg-e/code">
  <description brief="pr2_calib_proximity_sensor">

     pr2_calib_proximity_sensor

  </description>
  <author>Adrian Funk (maintained by Philip Roan)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_calib_proximity_sensor</url>
  <depend package="roscpp"/>
  <depend package="arm_navigation_msgs"/>
  <depend package="actionlib"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="proximity_sensor_driver"/>
  <depend package="visualization_msgs"/>
  <depend package="pcl"/>

</package><package name="task_msgs" path="" repo="usc-clmc-ros-pkg" repo_host="https://github.com/usc-clmc/usc-clmc-ros-pkg">
  <description brief="task_msgs">

     task_msgs

  </description>
  <author>Peter Pastor</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/task_msgs</url>

  <depend package="geometry_msgs"/>

</package><package name="cob_image_flip" path="" repo="cob_perception_common" repo_host="git://github.com/ipa320/cob_perception_common">
	<description brief="cob_image_flip">

		Flips the image of Care-O-bots kinect in dependence of the viewving direction of the cameras to receive an upright image all the time.

	</description>
	<author>Richard Bormann</author>
	<license>LGPL</license>
	<review notes="" status="unreviewed"/>
	<url>http://ros.org/wiki/cob_image_flip</url>

	<depend package="roscpp"/>
	<depend package="nodelet"/>
	<depend package="sensor_msgs"/>
	<depend package="tf"/>
	<depend package="image_transport"/>
	<depend package="opencv2"/>
	<depend package="cv_bridge"/>
	<depend package="pcl"/>
	<depend package="pcl_ros"/>
	<depend package="cob_vision_utils"/>

	<export>
		<nodelet plugin="${prefix}/nodelet_plugins.xml"/>
	</export>

</package><package name="wifibot" path="/trunk" repo="wifibot" repo_host="https://roswifibot.svn.sourceforge.net/svnroot/roswifibot">
  <description brief="wifibot">

    ROS Driver for wifibot lab mobile robot.
    More information at www.wifibot.com

  </description>
  <author>claire, jean-charles</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/wifibot</url>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="std_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="tf"/>

</package><package name="cyphy_rosfalcon" path="" repo="cyphy_legacy" repo_host="http://launchpad.net/cyphy">
  <description brief="rosfalcon">

     rosfalcon

  </description>
  <author>Steven Martin</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosfalcon</url>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="joy"/>
  <depend package="geometry_msgs"/>
  <rosdep name="boost"/>
  <rosdep name="libusb-1.0"/>
  <rosdep name="libnifalcon"/>

</package><package name="pr2_handy_tools" path="/stacks/pr2_object_manipulation/branches/0.6-branch/manipulation/pr2_handy_tools" repo="pr2_object_manipulation" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_arm_joint_states">

    A simple node to print joint states for the left or right arm.

  </description>
  <author>Adam Leeper</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/</url>
  <depend package="planning_environment"/>
</package><package name="photo_cam" path="/trunk/drivers/photo_cam" repo="ubc-ros-pkg" repo_host="https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg">
  <description brief="photo_cam">
      A ROS node for remote capturing pictures using a consumer digital camera that supports remote capture. For a list of cameras supporting remote control see: http://www.gphoto.org/doc/remote/
  </description>
  <author>Marius Muja</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/photo_cam</url>

  <depend package="rospy"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="image_transport"/>
  <depend package="capture"/>

  <rosdep name="python-pexpect"/>
</package><package name="cljlo" path="" repo="cram_highlevel" repo_host="https://github.com/moesenle/cram_highlevel">
  <description brief="cljlo, a jlo interface for common lisp">
  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <rosdep name="sbcl"/>
  <depend package="roslisp"/>
  <depend package="vision_srvs"/>
  <depend package="alexandria"/>
  <depend package="trivial_garbage"/>
</package><package name="xacro" path="" repo="xacro" repo_host="https://kforge.ros.org/common/xacro">
  <description brief="Xacro (XML Macros)">
    Xacro is an XML macro language. With xacro, you can construct shorter and more readable XML files by using macros that expand to larger XML expressions. 
  </description>
  <author>Stuart Glaser</author>
  <license>BSD</license>
  <url>http://ros.org/wiki/xacro</url>  
  <review notes="http://www.ros.org/wiki/xacro" status="doc reviewed"/>
  <depend package="rostest"/>
  <depend package="rosbuild"/>
  <export>
    <rosbuild cmake="${prefix}/cmake/xacro.cmake"/>
  </export>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="trike" path="/trunk/albany_robots/trike" repo="albany-ros-pkg" repo_host="http://albany-ros-pkg.googlecode.com/svn">
  <description brief="Trike Robot Utilities">
    Configuration and launch files for Trike.
  </description>
  <author>Michael Ferguson</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/trike</url>
  <depend package="rospy"/>
  <depend package="irobot_create_2_1"/>
  <depend package="openni_camera"/>
</package><package name="humanoid_models" path="/trunk/humanoid/humanoid_models" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="humanoid_models">

     humanoid_models

  </description>
  <author>Edward T. Kaszubski ( ekaszubski@gmail.com )</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/humanoid_models</url>
  <depend package="quickdev_cpp"/>
  <depend package="nodelet"/>
  <depend package="openni_multitracker"/>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lhumanoid_models"/>
    <nodelet plugin="${prefix}/nodelets/nodelet_plugins.xml"/>
  </export>
</package><package name="turtlebot_kinect_arm_calibration" path="" repo="turtlebot_arm" repo_host="https://kforge.ros.org/turtlebot/turtlebot_arm">
  <description brief="turtlebot_kinect_arm_calibration">

     turtlebot_kinect_arm_calibration allows calibration of a kinect to a TurtleBot arm, including a kinect on-board and off-board the TurtleBot for more precise manipulation.

  </description>
  <author>Helen Oleynikova</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/turtlebot_kinect_arm_calibration</url>

  <depend package="roscpp"/>
  <depend package="visualization_msgs"/>
  <depend package="tf"/>
  <depend package="eigen"/>
  <depend package="opencv2"/>
  <depend package="image_geometry"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="image_transport"/>
  <depend package="cv_bridge"/>

</package><package name="eml" path="/stacks/pr2_ethercat_drivers/trunk/eml" repo="pr2_ethercat_drivers" repo_host="https://code.ros.org/svn/wg-ros-pkg">
<description brief="EtherCAT Master Library">

This is an implementation of the EtherCAT master protocol for the PR2 robot based on the work done at Flanders' Mechatronics Technology Centre.

</description>
<author>Tom Panis, Klaas Gadeyne, Bob Koninckx</author>
<license>binary only</license>
<review notes="" status="3rdparty"/>
<url>http://ethercatmaster.berlios.de/</url>
<export>
  <cpp cflags="-I${prefix}/eml/include" lflags="-Wl,-rpath,${prefix}/eml/lib -L${prefix}/eml/lib -leml"/>
  <doxymaker external="http://ethercatmaster.berlios.de/doxygen/html/index.html"/>
</export>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="ackermann_hks" path="/trunk/stacks/ackermann_teleop/ackermann_hks" repo="utexas-art-ros-pkg" repo_host="http://utexas-art-ros-pkg.googlecode.com/svn">
  <description brief="Ackermann steering HKS tele-operation">

     HKS game controller tele-operation interface for driving a
     vehicle with Ackermann steering under human control.

  </description>
  <author>Jack O'Quin, Joshua Bennett</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://www.ros.org/wiki/ackermann_hks</url>

  <depend package="ackermann_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="joy"/>
  <depend package="rospy"/>

</package><package name="robotiq_c_model_control" path="/trunk/robotiq/robotiq_c_model_control" repo="swri-ros-pkg" repo_host="http://swri-ros-pkg.googlecode.com/svn">
  <description brief="Robotiq C-Model">

     Package to control a C-Model Gripper from Robotiq inc.

  </description>
  <author>Nicolas Lauzier (Robotiq inc.)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/robotiq_c_model_control</url>

</package><package name="auv_joy" path="/trunk/hwu_osl_software/auv_joy" repo="hwu-osl-ros-pkg" repo_host="http://hwu-osl-ros-pkg.googlecode.com/svn">
  <description brief="Simple joypad remote control module for an AUV.">

     This node allows the control of real or simulated AUVs by sending 6 axis vehicle force messages based on input received from a Linux compatible joy pad with dual analogue sticks. Only 4/5 axes are actually controllable: x, y, z, and yaw by default, and pitch on a button press. Tested with Logitech joypads. TODO: Change to accept ROS joystick message as input rather than reading direct from joystick.
  </description>
  <author>Joel Cartwright</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>TODO</url>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="geometry_msgs"/>
  <depend package="osl_core"/>

</package><package name="timeutils" path="/trunk/dfki_sks_laser_drivers/timeutils" repo="dfki-sks-ros-pkg" repo_host="https://svn-agbkb.informatik.uni-bremen.de/dfki-sks-ros-pkg">
  <description brief="timeutils">

     timeutils contains utility code related to time(stamps) on *NIX.

  </description>
  <author>Rene Wagner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>

  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>

</package><package name="point_cloud_publisher_tutorial" path="" repo="navigation_tutorials" repo_host="https://kforge.ros.org/navigation/tutorials">
  <description brief="point_cloud_publisher_tutorial">

     point_cloud_publisher_tutorial

  </description>
  <author>Eitan Marder-Eppstein</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://pr.willowgarage.com/wiki/point_cloud_publisher_tutorial</url>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="megatree_core" path="" repo="megatree" repo_host="http://kforge.ros.org/megatree/megatree">
  <description brief="megatree_core">

     megatree_core

  </description>
  <author>Stuart Glaser</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/megatree_core</url>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lmegatree_core"/>
  </export>

  <!--
     megatree_core exists to reduce the dependencies of mapreduce
     programs.  The mapreduce programs require Node and NodeFile
     classes, but should avoid dependencies on ROS, PCL, thrift, or
     any messages.

     If you are adding dependencies here, you are probably doing the
     wrong thing.
    -->
</package><package name="pr2_biolab_gazebo_demo" path="" repo="viaflo_pipette" repo_host="https://kforge.ros.org/viaflopipette/hg">
  <description brief="pr2_biolab_gazebo_demo">

     pr2_biolab_gazebo_demo

  </description>
  <author>John Hsu</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_biolab_gazebo_demo</url>
  <depend package="pr2_gazebo"/>
  <depend package="gazebo_worlds"/>
  <depend package="gazebo"/>
  <depend package="pr2_tuckarm"/>
  <depend package="robot_state_publisher"/>
  <depend package="pr2_common_action_msgs"/>
  <depend package="actionlib"/>
  <depend package="roscpp"/>
  <depend package="joint_trajectory_action"/>
  <depend package="geometry_msgs"/>
  <depend package="kinematics_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="tf"/>
  <depend package="biolab_description"/>

</package><package name="irobot_create_2_1" path="/trunk/distribution/brown_drivers/irobot_create_2_1" repo="brown-ros-pkg" repo_host="http://brown-ros-pkg.googlecode.com/svn">
  <description brief="irobot_create_2_1">
 irobot_create_2_1 is a ROS driver for the iRobot iCreate.
  </description>
  <author>Graylin Trevor Jay, Brian Thomas</author>
  <email>tjay@cs.brown.edu, brian@cs.brown.edu</email>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>

  <rosdep name="python-serial"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="geometry_msgs"/>
  <depend package="tf"/>
  <depend package="nav_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/msg/cpp"/>
    <cpp cflags="-I${prefix}/srv/cpp"/>
  </export>

</package><package name="saliency_attention" path="/trunk/attention/saliency_attention" repo="ubc-ros-pkg" repo_host="https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg">
  <description brief="saliency_attention">

     attention

  </description>
  <author>LCI USER</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/saliency_attention</url>
  
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="MSER"/>
  <depend package="visualization_msgs"/> 
  <depend package="topic_synchronizer2"/>
  <depend package="geometry_msgs"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="sensor_msgs"/>
  <depend package="image_transport"/>

</package><package name="master_discovery_fkie" path="" repo="fkie-ros-pkg" repo_host="git://github.com/fkie/fkie-ros-pkg">
  <description brief="master_discovery_fkie">

     A Node to discovery the running ROS Masters in local network. The 
     discovering is done by send a echo heartbeat messages to a defined 
     multicast group.
     The alternative is to use a zeroconf/avahi daemon to register the ROS 
     master as service and discover other ROS masters.
     
  </description>
  <author>Alexander Tiderko</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/master_discovery_fkie</url>

  <depend package="rospy"/>
  <depend package="roslib"/>
  <!-- needed, if using zeroconf with avahi -->
  <rosdep name="python-avahi"/>
  <rosdep name="avahi-daemon"/>

  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>

</package><package name="capabilities_server" path="/trunk/capabilities/capabilities_server" repo="vanadium-ros-pkg" repo_host="http://vanadium-ros-pkg.googlecode.com/svn">
  <description brief="Capabilities Management Server">
    Capabilities Management Server
  </description>
  <author>Michael Ferguson</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/capabilities_server</url>
  <depend package="rospy"/>
  <depend package="capabilities_msgs"/>
  <depend package="rostest"/>
</package><package name="krypton_component" path="" repo="krypton_hardware" repo_host="http://git.mech.kuleuven.be/robotics/krypton_hardware.git">
  <description brief="Orocos krypton Component">

    Krypton OROCOS component using the <a href="http://www.ros.org/wiki/krypton">krypton</a> library to communicate with and retrieve measurement data from the Krypton system. The component is linked with a FileDescriptorActivity which allows monitoring of multiple sockets without blocking. As soon as one of the sockets gets updates, the updateHook() is executed.
    Usage:
    <ul>
      <li>Connect your computer with the HF-controller using a fixed IP in the range 192.168.254.x (default HF-controller IP is 192.168.254.254)</li>
      <li>Define your project in the DMM software and do file &gt; export as init file</li>
      <li>Launch the component: rosrun krypton_component runkrypton.sh</li>
    </ul>
    All available data is streamed directly to /krypton/ctrl_msg and /krypton/data_msgs

  </description>
	<license>LGPLv2.1 / BSD</license>
	<author>Steven Bellens, steven.bellens@mech.kuleuven.be</author>
	<review notes="" status="unreviewed"/>
	<url>http://ros.org/wiki/krypton_component</url>

  <depend package="rtt"/>
  <depend package="rtt_rosnode"/>
  <depend package="rtt_krypton_msgs"/>
  <depend package="krypton"/>
  <depend package="krypton_msgs"/>
  <depend package="krypton_typekit"/>

  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>
</package><package name="rail_youbot_description" path="/trunk/distribution/wpi-rail-ros-pkg/rail_youbot/rail_youbot_description" repo="wpi-rail-ros-pkg" repo_host="http://wpi-rail.googlecode.com/svn">
	<description brief="Customized YouBot URDF used by the RAIL lab at WPI">A customized URDF of the Kuka YouBot that contains extra features such as a Kinect camera.</description>
	<author>Russell Toris</author>
	<license>BSD</license>
	<review notes="" status="unreviewed"/>
	<url>http://ros.org/wiki/rail_youbot_description</url>
	<depend package="gazebo"/>
	<depend package="youbot_description"/>
	<depend package="pr2_description"/>
	<depend package="gazebo_plugins"/>

	<export>
		<gazebo gazebo_media_path="${prefix}"/>
	</export>
</package><package name="pr2_cockpit_msgs" path="/stacks/pr2_cockpit/trunk/pr2_cockpit_msgs" repo="pr2_cockpit" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_cockpit_msgs">

     pr2_cockpit_msgs

  </description>
  <author>Stuart Glaser</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_cockpit_msgs</url>

  <depend package="std_msgs"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="runtime_monitor" path="/stacks/diagnostics_monitors/trunk/runtime_monitor" repo="diagnostics_monitors" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Monitor diagnostics on a robot">
    The runtime monitor displays raw diagnostics data in an easy to read GUI.
  </description>
  <author>Tully Foote</author>
  <license>BSD</license>
  <review notes="" status="Doc reviewed"/>
  <url>http://ros.org/wiki/runtime_monitor</url>
  <export>
    <cpp cflags="-I${prefix}/include " lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib"/>
    <rxbag plugin="runtime_monitor.rxbag_plugins"/>
  </export>
  <depend package="rospy"/>
  <depend package="diagnostic_msgs"/>
  <depend package="rxbag"/>
  <rosdep name="wxwidgets"/>
  <rosdep name="wxpython"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="oro_joint_trajectory_action" path="" repo="orocos_controllers" repo_host="https://github.com/RCPRG-ros-pkg/orocos_controllers">
  <description brief="oro_joint_trajectory_action">

     oro_joint_trajectory_action

  </description>
  <author>Konrad Banachowicz</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/oro_joint_trajectory_action</url>
  <depend package="rtt"/>
  <depend package="ocl"/>
  <depend package="oro_action_server"/>
  <depend package="control_msgs"/>
  <depend package="rtt_trajectory_msgs"/>

</package><package name="cob_calibration_srvs" path="" repo="cob_calibration" repo_host="git://github.com/ipa320/cob_calibration">
  <description brief="cob_calibration_srvs">

     The cob_calibration_srvs package contains Care-O-bot calibration specific
     service definitions.

  </description>
  <author>Sebastian Haug</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_calibration_srvs</url>

  <depend package="std_msgs"/>

</package><package name="next_best_view" path="" repo="mapping" repo_host="http://code.in.tum.de/git/mapping.git">
  <description brief="next_best_view">

     next_best_view

  </description>
  <author>Felix Ruess</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/next_best_view</url>
  <depend package="roscpp"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="octomap"/>
  <depend package="octomap_server"/>
  <depend package="pcl_to_octree"/>
  <depend package="tf"/>

</package><package name="python_msg_conversions" path="" repo="perception_pcl_fuerte_unstable" repo_host="https://bitbucket.org/macmason/perception_pcl_fuerte_unstable">
  <description brief="python_msg_conversions">

    Python conversion functions for common ROS msgs.

  </description>
  <author>Jonathan Binney</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/python_msg_conversions</url>

  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>

</package><package name="sr_move_arm" path="" repo="shadow_robot" repo_host="lp:sr-ros-interface">
  <description brief="sr_move_arm">

    This is an actionlib server wrapup around the shadow arm. It's goal is to move
    the arm, given a goal. It also contains a reactive grasp / reactive approach action
    server. This server computes dynamic checks during the approach phase, during
    the grasping, during the lifting of the object, as well as when placing the object
    on the table.

  </description>
  <author>Ugo Cupcic</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sr_move_arm</url>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="std_msgs"/>
  <depend package="std_srvs"/>
  <depend package="arm_navigation_msgs"/>
  <depend package="trajectory_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="object_manipulation_msgs"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="sr_robot_msgs"/>
  <depend package="object_manipulator"/>

</package><package name="sortbot" path="/trunk/sortbot" repo="stanford-ros-pkg" repo_host="https://stanford-ros-pkg.googlecode.com/svn">
  <description brief="sortbot">
    AWESUM
  </description>
  <author>Dave Jackson</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="std_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="actionlib"/>
</package><package name="art_map" path="/trunk/stacks/art_vehicle/art_map" repo="utexas-art-ros-pkg" repo_host="http://utexas-art-ros-pkg.googlecode.com/svn">
  <description brief="ART road map">

     ART autonomous vehicle road map.

  </description>
  <author>David Li, Patrick Beeson, Bartley Gillen, Tarun Nimmagadda,
          Mickey Ristroph, Michael Quinlan, Jack O'Quin </author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/art_map</url>

  <depend package="angles"/>
  <depend package="art_common"/>
  <depend package="art_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="tf"/>
  <depend package="visualization_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib"/>
  </export>

</package><package name="teleop_handler" path="" repo="rososc" repo_host="https://github.com/Auburn-Automow/rososc">
  <description brief="teleop_handler">

     TouchOSC layout and tabpage handler for publishing teleop messages with an iPhone or iPad.

  </description>
  <author>Michael Carroll</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/teleop_handler</url>
  <depend package="touchosc_bridge"/>
  <depend package="geometry_msgs"/>

</package><package name="kelsey_sandbox" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="kelsey_sandbox">

     kelsey_sandbox

  </description>
  <author>kelsey</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/kelsey_sandbox</url>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="pr2_msgs"/>
  <!--
  <depend package="hrl_lib"/>
  <depend package="hrl_pr2_lib"/>
  -->
  <depend package="laser_interface"/>
  <depend package="pcl"/>
  <depend package="geometry_msgs"/>
  <depend package="cv_bridge"/>
  <depend package="image_geometry"/>
  <depend package="image_transport"/>
  <depend package="tf"/>
  <depend package="opencv2"/>
  <!--<depend package="kdl"/>-->
  <depend package="python_orocos_kdl"/>
  <depend package="camera_calibration"/>
  <depend package="pixel_2_3d"/>

  <depend package="pr2_controller_interface"/>
  <depend package="pluginlib"/>
  <depend package="filters"/>
  <!--
  <export>
    <cpp cflags="-I${prefix}/include `rosboost-cfg -cflags`" lflags=""/>
    <pr2_controller_interface plugin="${prefix}/controller_plugins.xml" />
    <filters plugin="${prefix}/filter_plugins.xml" />
  </export>
  -->

</package><package name="ssc32py" path="" repo="mk-ros-pkg" repo_host="https://github.com/kalmes/mk-ros-pkg">
  <description brief="SSC32py controls servos attached to a SSC-32 controller">
    SSC32py provides a library to interact with the SSC32 controller by Lynxmotion.  
    
	It is based strongly on the Robotis library by Healthcare Robotics Lab at Georgia Tech,
	and provides a full server that will listen to angle commands and publish the current
	state of servos attached to the SSC-32
  </description>
  <author>Mark Kalmes</author>
  <license>New BSD</license>
  <url>http://www.ros.org/wiki/ssc32py</url>

  <sysdepend os="ubuntu" package="python-serial" version="8.04-hardy"/>
  <depend package="rospy"/>
  <depend package="std_srvs"/>
  <!-- <depend package="tf"/>
  <export>
    <cpp cflags="-I${prefix}/msg/cpp"/>
  </export>
  -->
  

</package><package name="SR4000_sim_server" path="/darpa_arm_sim_servers/SR4000_sim_server" repo="darpa_arm_sim_servers" repo_host="http://svn.thearmrobot.com">
  <description brief="SR4000_sim_camera">

     SR4000_sim_camera

  </description>
  <author>DARPA ARM GFE Team</author>
  <license>private</license>
  
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="SR4000_msgs"/>
  <depend package="image_transport"/>
  <depend package="re2logger"/>

</package><package name="priority_mux" path="" repo="parsec" repo_host="https://code.google.com/p/parsec">
  <description brief="priority_mux">

     priority_mux

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/priority_mux</url>
  <depend package="roscpp"/>
  <depend package="topic_tools"/>
  <depend package="std_msgs"/>
  <depend package="priority_mux_msgs"/>  

</package><package name="tff_controller" path="" repo="pr2_doors" repo_host="https://kforge.ros.org/doors/hg">
  <description brief="tff_controller">

     tff_controller

  </description>
  <author>Wim Meeussen</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/tff_controller</url>
  <depend package="kdl"/>
  <depend package="tf"/>
  <depend package="pr2_controller_interface"/>
  <depend package="pr2_mechanism_model"/>
  <depend package="realtime_tools"/>
  <depend package="control_toolbox"/>
  <depend package="geometry_msgs"/>
  <depend package="pluginlib"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib/ -L${prefix}/lib -ltff_controller"/>
   <pr2_controller_interface plugin="${prefix}/controller_plugins.xml"/>
  </export>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="object_manipulation_tools" path="/trunk/industrial_experimental/object_manipulation_tools" repo="swri-ros-pkg" repo_host="http://swri-ros-pkg.googlecode.com/svn">
  <description brief="object_manipulation_tools">

     object_manipulation_tools

  </description>
  <author>Jnicho</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/object_manipulation_tools</url>
  <depend package="trajectory_execution_monitor"/>
  <depend package="object_manipulator"/>
  <depend package="object_manipulation_msgs"/>
  <depend package="planning_environment"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="tabletop_object_detector"/>
  <export>
  	<rosbuild cmake_directory="${prefix}/cmake"/>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -lobject_manipulation_tools"/>    
  </export>

</package><package name="rtcus_erratic_slam" path="/trunk/rtcus_applications/rtcus_erratic_slam" repo="rtc-us-ros-pkg-trunk" repo_host="https://rtc-us-ros-pkg.svn.sourceforge.net/svnroot/rtc-us-ros-pkg">
  <description brief="erratic_slam">
     rtcus_erratic_slam
  </description>
  <author>Pablo Iñigo Blasco</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/erratic_slam</url>
  
  <depend package="rospy"/>
  
  <depend package="sound_play"/>
  <depend package="joy"/>
  <depend package="geometry_msgs"/>
  <depend package="std_msgs"/>

</package><package name="flysim" path="" repo="flyatar" repo_host="http://github.com/peterpolidoro/Flyatar">
  <description brief="flysim">

     flysim is a tool made from turtlesim... 

  </description>
  <author>Josh Faust / Peter Polidoro</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url/>
  <depend package="roscpp"/>
  <depend package="roslib"/>
  <depend package="rosconsole"/>
  <depend package="std_srvs"/>
  
  <rosdep name="wxwidgets"/>

  <export>
    <cpp cflags="-I${prefix}/msg/cpp -I${prefix}/srv/cpp"/>
  </export>

</package><package name="osgOcean" path="/trunk/underwater_simulation/osgOcean" repo="uji-ros-pkg" repo_host="http://uji-ros-pkg.googlecode.com/svn">
<description brief="osgOcean">

This package contains a recent version of the osgOcean library (http://code.google.com/p/osgocean/). 
This ROS package does not intend to modify osgOcean
in any way, it simply provides a convenient way to download and
compile the library, because osgOcean is not available from an OS package
manager. However, this package might contain some temporary patches to
osgOcean while they are being applied upstream, or while a permanent fix
for a problem is being discussed by the osgOcean community.

</description>
<author>EU FP6 VENUS Project. Port to ROS by Mario Prats</author>
<license>LGPL</license>
<url>http://code.google.com/p/osgocean/</url>
<review notes="" status="unreviewed"/>
<export>
  <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib  -L${prefix}/lib -losgOcean"/>
</export>

<rosdep name="libopenscenegraph"/>
<rosdep name="libfftw3"/>
<rosdep name="opengl"/>
</package><package name="pr2_mechanism_diagnostics" path="" repo="pr2_mechanism" repo_host="https://kforge.ros.org/pr2mechanism/hg">
  <description brief="Produces diagnostics from pr2_controller_manager for joints and controllers">
The `pr2_mechanism_diagnostics` node subscribes to `mechanism_statistics` and publishes diagnostics data for joints and controllers on `/diagnostics`. 
  </description>
  <author>Kevin Watts</author>
  <license>BSD</license>
  <review notes="" status="doc reviewed"/>
  <url>http://ros.org/wiki/pr2_mechanism_diagnostics</url>
  <depend package="roscpp"/>
  <depend package="urdf"/>
  <depend package="rospy"/>
  <depend package="diagnostic_updater"/>
  <depend package="diagnostic_msgs"/>
  <depend package="pr2_mechanism_msgs"/>
  <depend package="pr2_mechanism_model"/>
  <depend package="angles"/>
  <depend package="std_srvs"/>
    <depend package="std_msgs"/>
  <depend package="xacro"/>
  
</package><package name="cob_bringup_sim" path="" repo="cob_simulation" repo_host="git://github.com/ipa320/cob_simulation">
  <description brief="cob_bringup_sim">

     This package provides launch files for starting a simulated Care-O-bot.

  </description>
  <author>Florian Weisshardt</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_bringup_sim</url>

  <depend package="gazebo"/>
  <depend package="cob_gazebo"/>
  <depend package="cob_gazebo_worlds"/>
  <depend package="cob_default_robot_config"/>
  <depend package="cob_default_env_config"/>

</package><package name="rtt_geometry_msgs" path="" repo="rtt_common_msgs" repo_host="http://git.mech.kuleuven.be/robotics/rtt_common_msgs.git">
  <description brief="rtt_geometry_msgs">

    Provides an rtt typekit for ROS geometry_msgs messages.

    It allows you to use ROS messages transparently in
    RTT components and applications.

    This package was automatically generated by the
    create_rtt_msgs generator and should not be manually
    modified.

    See the http://ros.org/wiki/geometry_msgs documentation
    for the documentation of the ROS messages in this
    typekit.

  </description>
  <author>create_rtt_msgs Generator</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rtt_rosnode</url>
  <depend package="rtt_rosnode"/>
  <depend package="geometry_msgs"/>
  <depend package="rtt_std_msgs"/>
  <depend package="rtt_rosgraph_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>


</package><package name="ecl_doc" path="/trunk/ecl_tools/ecl_doc" repo="ecl_tools" repo_host="https://embedded-control-library.googlecode.com/svn">
  <description brief="Documentation generator for the ecl">

     Generates documentation and graphs for the ecl - powered
     by rosdoc under the hood.

  </description>
  <author>Daniel Stonier (d.stonier@gmail.com)</author>
  <license>BSD</license>
  <review notes="" status="api cleared"/>
  <url>http://snorriheim.dnsdojo.com/redmine/wiki/ecl</url>
  <depend package="rosdoc"/>
  <depend package="ecl_license"/>
</package><package name="cl_libsvm" path="" repo="roll" repo_host="http://code.in.tum.de/git/roll.git">
  <description brief="cl_libsvm">

     cl_libsvm

  </description>
  <author>Gabor Melis</author>
  <license/>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cl_libsvm</url>

  <depend package="cffi"/>
  <depend package="cffi_ros_utils"/>
  <export>
    <cpp lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/src/lib/src -llibsvm"/>
  </export>

</package><package name="lcm_mavlink_ros" path="" repo="mavlink-ros-pkg" repo_host="https://github.com/pixhawk/mavlink-ros-pkg">
  <description brief="lcm_mavlink_ros">

     lcm_mavlink_ros

  </description>
  <author/>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/lcm_mavlink_ros</url>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="roscpp"/>
  <depend package="tf"/>

</package><package name="pcl_tests" path="" repo="uuisrc-ros-pkg" repo_host="https://github.com/cburbridge/uuisrc-ros-pkg">
  <description brief="pcl_tests">

     pcl_tests - some simple tests for saving point clouds

  </description>
  <author>Lorenzo</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pcl_tests</url>
  <depend package="pcl"/>
  <depend package="roscpp"/>
  <depend package="pcl_ros"/>
  <depend package="pcl_visualization"/>
  <depend package="tf"/>
  <depend package="sensor_msgs"/>

</package><package name="ecl_geometry" path="/trunk/ecl_core/ecl_geometry" repo="ecl_core" repo_host="https://embedded-control-library.googlecode.com/svn">
  <description brief="Geometry tools and functions">

     Any tools relating to mathematical geometry. 
     Primarily featuring polynomials and interpolations.
     
  </description>
  <author>Daniel Stonier (d.stonier@gmail.com)</author>
  <license>BSD</license>
  <review notes="" status="doc reviewed"/>
  <url>http://snorriheim.dnsdojo.com/redmine/wiki/ecl</url>
  
  <depend package="ecl_license"/>
  <depend package="ecl_build"/>
  <depend package="ecl_config"/>
  <depend package="ecl_containers"/>
  <depend package="ecl_formatters"/>
  <depend package="ecl_linear_algebra"/>
  <depend package="ecl_exceptions"/>
  <depend package="ecl_math"/>
  <depend package="ecl_type_traits"/>
  <depend package="ecl_mpl"/>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lecl_geometry"/>
  </export>
  <rosbuild2>
    <export>
      <include_dir>${ecl_geometry_SOURCE_DIR}/include</include_dir>
	  <lib>ecl_geometry</lib>
    </export>
    <depend package="ecl_license"/>
    <depend package="ecl_build"/>
    <depend package="ecl_config"/>
    <depend package="ecl_containers"/>
    <depend package="ecl_formatters"/>
    <depend package="ecl_linear_algebra"/>
    <depend package="ecl_exceptions"/>
    <depend package="ecl_math"/>
    <depend package="ecl_type_traits"/>
    <depend package="ecl_mpl"/>
  </rosbuild2>
  
</package><package name="roscpp_simple" path="/trunk/sandbox/matlab/roscpp_simple" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="roscpp_simple">

     provides the basic functionality of ROS message serialization without depending on rosconsole (for applications that are not compatible with log4cxx/rosconsole)

  </description>
  <author>Edward T. Kaszubski ( ekaszubski@gmail.com )</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/roscpp_simple</url>
  <depend package="roscpp_serialization"/>
  <depend package="rostime"/>
  <depend package="roscpp_traits"/>
  <depend package="cpp0x"/>
  <export>
	<cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lroscpp_simple"/>
  </export>

</package><package name="objects_of_daily_use_finder" path="/perception/objects_of_daily_use_finder" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="objects_of_daily_use_finder">

     objects_of_daily_use_finder

  </description>
  <author>Vladimir Haltakov, Dejan Pangercic</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/objects_of_daily_use_finder</url>
  <depend package="roscpp"/>
  <depend package="libsiftfast"/>
  <depend package="cv_bridge"/>
  <depend package="opencv2"/>
  <depend package="vocabulary_tree"/>
  <depend package="eigen"/>
  <depend package="image_transport"/>
  <depend package="ann2"/>
  <!--for cop answer -->
  <depend package="vision_msgs"/>
  <export>
      <cpp cflags="-I${prefix}/include/" lflags="-Wl,-rpath,${prefix}/lib       -L${prefix}/lib           -lodu_finder"/>
  </export>
</package><package name="pointcloud_registration" path="" repo="mapping" repo_host="http://code.in.tum.de/git/mapping.git">
  <description brief="pointcloud_registration">

     pointcloud_registration: This package implements registration of point clouds. 
     It also contains an additional feature called Spin Image Local.
 
     Based on original code written by Radu Rusu (rusu@willowgarage.com)
     Contact Persons:
     1. Hozefa Indorewala: 	h.indorewala@jacobs-university.de
     2. Dejan Pangercic: 	dejan.pangercic@cs.tum.edu
     3. Zoltan-Csaba Marton: 	marton@cs.tum.edu
     4. Nico Blodow:		blodow@cs.tum.edu

  </description>
  <author>Hozefa Indorewala</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pointcloud_registration</url>
 
   <!-- ROS DEPENDENCIES -->
   <depend package="pcl"/>
   <depend package="pcl_ros"/>
   <depend package="roscpp"/>
   <depend package="actionlib"/>
   <depend package="bullet"/>
    <depend package="nodelet"/>

   <!-- MSG DEPENDENCIES -->
   <depend package="sensor_msgs"/>
   <depend package="geometry_msgs"/>
   <depend package="move_base_msgs"/>
   <depend package="pr2_controllers_msgs"/>
   <depend package="pr2_msgs"/>
   
   
   <export>
      <nodelet plugin="${prefix}/nodelets.xml"/>
   </export>
</package><package name="ball_reaching" path="" repo="stacks/redundant_manipulator_control_tutorial" repo_host="git://github.com/laas/redundant_manipulator_control_tutorial">
  <description brief="ball_reaching">

     This tutorial implements a control graph aimed at grasping a ball
     detected by vision on humanoid robot HRP2. When the ball is hold at a given
     position with respect to robot waist, the robot triggers a motion arm to
     catch the ball. The tutorial is specific to HRP-2 control architecture but
     can be reasonably extended to any other humanoid robot running ROS.

     The motion is generated by the hierarchical kinematic task solver &quot;Stack of
     Tasks&quot; wrapped into ROS via dynamic_graph_bridge.

  </description>
  <author>Florent Lamiraux</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ball_reaching</url>
  <depend package="dynamic_graph_bridge"/>
  <depend package="hueblob"/>
  <depend package="actionlib"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="roslib"/>
  <depend package="std_msgs"/>
  <depend package="actionlib_msgs"/>
  <export>
    <python path="${prefix}:${prefix}/src"/>
  </export>
</package><package name="clsql" path="" repo="roll" repo_host="http://code.in.tum.de/git/roll.git">
  <description brief="clsql">

     clsql

  </description>
  <author>Kevin M. Rosenberg</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/clsql</url>

</package><package name="compressed_imagem_transport" path="" repo="ethzasl_message_transport" repo_host="https://github.com/ethz-asl/ros-message-transport">
  <description brief="compressed_imagem_transport">

     compressed_imagem_transport

  </description>
  <author>Cedric Pradalier</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://pr.willowgarage.com/wiki/compressed_imagem_transport</url>
  <depend package="sensor_msgs"/>
  <depend package="message_transport_common"/>
  <depend package="imagem_transport"/>
  <rosdep name="opencv2"/>
  <depend package="cv_bridge"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lcompressed_imagem_transport"/>
	<imagem_transport plugin="${prefix}/compressedm_plugins.xml"/> 
  </export>

</package><package name="xsens_mti" path="" repo="xsens_hardware" repo_host="http://git.mech.kuleuven.be/robotics/xsens_hardware.git">
  <description brief="xsens_mti">

     Library to communicate with the Xsens MTI Measurement Unit.

     The library contains different methods, of which, to the outside, only the decodeIMU() method is important. Calling this method will update the IMUdata struct. This struct gives you access to the accelerometer, gyroscope and filtered Euler angle data. In order for the IMU reading to work, the MTI has to be configured to output accelerometer, gyroscope and XYZ Euler angles data.

  </description>
  <author>Koen Buys - koen.buys@mech.kuleuven.be, Steven Bellens - steven.bellens@mech.kuleuven.be</author>
  <license>LGPLv2.1 / BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/xsens_mti</url>

  <export>
      <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib  -L${prefix}/lib -lxsens_mti"/>
  </export>
</package><package name="ias_projected_light" path="" repo="mapping" repo_host="http://code.in.tum.de/git/mapping.git">
  <description brief="projected_light">
    Out-of-the-box solution for projected stereo using
    a Videre STOC camera and a regular wall projector.
  </description>
  <author>Florian Zacherl, Dejan Pangercic</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.ros.org/wiki/ias_projected_light</url>
  <!--Get from https://cmu-ros-pkg.svn.sourceforge.net/svnroot -->
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="roscpp"/>
  <depend package="pcl"/>
  <depend package="image_transport"/>
</package><package name="joint_qualification_controllers" path="/stacks/pr2_self_test/trunk/joint_qualification_controllers" repo="pr2_self_test" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="Joint Qualification Controllers">
Controllers used in PR2 hardware testing. For testing counterbalance of PR2, and for internal WG use.
  </description>
  <author>Kevin Watts, Melonee Wise</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <depend package="pr2_controller_interface"/>
  <depend package="pr2_mechanism_model"/>
  <depend package="pr2_hardware_interface"/>
  <depend package="control_toolbox"/>
  <depend package="roscpp"/>
  <depend package="robot_mechanism_controllers"/>
  <depend package="pluginlib"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="realtime_tools"/>
  <depend package="urdf"/>
  <url>http://www.ros.org/wiki/joint_qualification_controllers</url>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -ljoint_qualification_controllers"/>
    <pr2_controller_interface plugin="${prefix}/controller_plugins.xml"/>
  </export>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="mod_vis" path="/tags/latest/mod_vis" repo="knowrob" repo_host="http://code.in.tum.de/pubsvn/knowrob">
  <description brief="mod_vis">

     Visualization module for the Prolog knowledge base.

     Instances in the knowledge base can be pushed to the visualization
     canvas, are then drawn and can be further inspected.

     Currently supported: Action sequences, linked to the resp. human pose
     sequence, as well as most objects that are relevant in the IAS kitchen.

  </description>
  <author>Moritz Tenorth, Jakob Engel</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/mod_vis</url>

  <depend package="knowrob_cad_models"/>
  <depend package="knowrob_cad_parser"/>
  <depend package="ias_knowledge_base"/>
  <depend package="jpl"/>
  <depend package="rosjava_jni"/>

  <export>
    <java classpath="${prefix}/bin:${prefix}/lib/vecmath.jar:${prefix}/lib/dae4j.jar:${prefix}/lib/processing/core.jar:${prefix}/lib/processing/PeasyCam.jar:${prefix}/lib/log4j-1.2.16.jar:${prefix}/lib/controlP5.jar:${prefix}/lib/snakeyaml-1.9.jar"/>
    <rosdoc config="rosdoc.yaml"/>
  </export>

</package><package name="rve_qt" path="" repo="visualization_engine" repo_host="https://kforge.ros.org/visengine/hg">
  <description brief="rve_qt">

     rve_qt

  </description>
  <author>Josh Faust</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rve_qt</url>
  <depend package="roscpp"/>
  <depend package="rve_msgs"/>
  <depend package="rve_render_client"/>
  <depend package="rve_interfaces"/>

  <rosdep name="qt4"/>
  
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-lrve_qt -L${prefix}/lib -Wl,-rpath,${prefix}/lib"/>
  </export>
</package><package name="evart-client" path="" repo="stacks/motion_analysis_mocap" repo_host="git://github.com/laas/motion_analysis_mocap">
  <description brief="EVaRT client">

    EVa Real-Time Software(tm) - EVaRT(tm) - provides a user with a
    simple and powerful interface to the Motion Analysis(tm) motion
    capture hardware. Under a single software environment you can set
    up, calibrate, capture motion in real-time, capture motion for
    post processing, edit and save data in the format of your choice.

    The evart-stream package contains a network server that connects
    to the EVaRT(tm) motion capture software through the official
    SDK. It then listen to the network for data streaming requests.

    evart-client (this package) is a library with a programming
    interface that can control the evart-stream server. It also
    contains a very basic debugging client that can understand simple
    commands from the standard input and send them to the server.

  </description>
  <author>Anthony Mallet/anthony.mallet@laas.fr,
    packaging by Thomas Moulard/thomas.moulard@gmail.com</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://homepages.laas.fr/mallet/soft/mocap/evart-client</url>

  <export>
    <cpp cflags="-I${prefix}/install/include" lflags="-Wl,-rpath,${prefix}/install/lib -L${prefix}/install/lib -levart-client"/>
    <rosdoc config="rosdoc.yaml"/>
  </export>

  <versioncontrol type="git" url="git://git.openrobots.org/robots/evart-client"/>

  <rosdep name="doxygen"/>

  <platform os="ubuntu" version="10.04"/>
  <platform os="ubuntu" version="10.10"/>
  <platform os="ubuntu" version="11.04"/>
</package><package name="launch_manager" path="/trunk/highlevel/launch_manager" repo="ubc-ros-pkg" repo_host="https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg">
  <description brief="launch_manager">
      This package containg a launch manager node capable of starting and stopping launch files on teh fly. In the SRVC contest this was used to switch from a local navigation stack to a global navigation stack.
  </description>
  <author>Marius Muja</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/launch_manager</url>
  <depend package="rospy"/>
  <depend package="roslaunch"/>

</package><package name="arbotix_sensors" path="/trunk/arbotix/arbotix_sensors" repo="vanadium-ros-pkg" repo_host="http://vanadium-ros-pkg.googlecode.com/svn"> 
  <description brief="Basic sensors for ArbotiX connected devices">
    Extends the arbotix_node package with a number of more sophisticated ROS wrappers for common devices. 
  </description>
  <author>Michael Ferguson</author>
  <license>BSD</license>

  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/arbotix_sensors</url>

  <depend package="arbotix_python"/>
</package><package name="surfacelet" path="/trunk/coverage_3d/surfacelet" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="Discretizes a point cloud into a set of surface patches.">
   This package discretizes a point cloud into a set of surface patches. Each patch is 
   attributed a position and a surface normal. If several point clouds are inserted the patches are merged.
  </description>
  
  <author>Juergen Hess</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/surfacelet</url>
 <!--  <depend package="pcl" /> -->
  <rosdep name="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="std_msgs"/>
  <depend package="roscpp"/>
  <depend package="octomap_ros"/>
  <depend package="octomap"/>
  <depend package="tf"/>
  <depend package="visualization_msgs"/>
  <depend package="common_rosdeps"/>
  <rosdep name="eigen"/>
  <depend package="actionlib"/>
  
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/srv_gen/cpp/include -I${prefix}/srv/cpp -I${prefix}/src" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lsurfacelet"/>
  </export>

</package><package name="auv_msgs" path="/trunk/hwu_osl_common/auv_msgs" repo="hwu-osl-ros-pkg" repo_host="http://hwu-osl-ros-pkg.googlecode.com/svn">
  <description brief="auv_msgs">

     auv_msgs

  </description>
  <author>Joel Cartwright</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>TODO</url>
<!--  <depend package="actionlib_msgs"/> -->
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="actionlib_msgs"/>

</package><package name="aques_talk" path="/trunk/3rdparty/aques_talk" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="aques_talk">

     aques_talk
     r829 for old version

  </description>
  <author>AQUEST Corp, ROS package maintained by Kei Okada</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/aques_talk</url>

  <rosdep name="kakasi"/>
  <rosdep name="nkf"/>
  <depend package="sound_play"/>

</package><package name="tfd_modules" path="/trunk/symbolic_planning/tfd_modules" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="tfd_modules">
      This package contains the symbolic temporal planner Temporal Fast Downward with a modular interface (TFD/M).
  </description>
  <author>Maintained by Christian Dornhege (see AUTHORS file).</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/tfd_modules</url>

  <depend package="roscpp"/>
  <depend package="pluginlib"/>

  <depend package="continual_planning_executive"/>

  <rosdep name="libqt4-dev"/>

  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/downward/opl/interface" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -ltfd_module_api -ldl -ltfd_opl_interface"/>
    <continual_planning_executive plugin="${prefix}/tfdm_interface_plugin.xml"/>
  </export>

</package><package name="rosmaster_sd" path="" repo="multimaster-ros-pkg" repo_host="http://github.com/jonfink/multimaster-ros-pkg">
  <description brief="rosmaster_sd">

     ROS <a href="http://ros.org/wiki/Master">Master</a> implementation.

  </description>
  <author>Ken Conley</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>

  <depend package="roslib"/>
  <export>
    <rosdoc config="rosdoc.yaml"/>    
  </export>
  
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
  <platform os="macports" version="macports"/>
</package><package name="collvoid_controller" path="" repo="multi_robot_collision_avoidance" repo_host="https://kforge.ros.org/collvoid/collvoid">
  <description brief="collvoid_controller">

     collvoid_controller

  </description>
  <author>Daniel Claes</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/collvoid_controller</url>
  <depend package="rospy"/>
  <depend package="std_msgs"/>
  <depend package="tf"/>
  <depend package="geometry_msgs"/>
  <depend package="std_srvs"/>
  <depend package="collvoid_local_planner"/>
</package><package name="sr_robot_msgs" path="" repo="shadow_robot" repo_host="lp:sr-ros-interface">
  <description brief="sr_robot_msgs">

     sr_robot_msgs contains some messages used in the shadow_robot stack.

  </description>
  <author>Ugo Cupcic/ugo@shadowrobot.com</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sr_robot_msgs</url>
  <depend package="roslib"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <export>
    <cpp cflags="-I${prefix}/include"/>
    <python path="${prefix}/src"/>
  </export>

</package><package name="meka_arm_navigation_tutorials" path="/trunk/meka_arm_navigation/meka_arm_navigation_tutorials" repo="meka-ros" repo_host="http://mekabot.com/meka-ros">
  <description brief="meka_arm_navigation_tutorials">
    
  </description>
  <author/>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url/>
  <depend package="arm_navigation_msgs"/>
  <depend package="kinematics_msgs"/>

  <depend package="actionlib_msgs"/>
  <depend package="pr2_controllers_msgs"/>

  <depend package="arm_navigation_msgs"/>
  <depend package="planning_environment"/>

  <depend package="pr2_arm_navigation_perception"/>
  <depend package="mapping_rviz_plugin"/>

  
</package><package name="pr2_task_recorder" path="" repo="usc-clmc-ros-pkg" repo_host="https://github.com/usc-clmc/usc-clmc-ros-pkg">
  <description brief="pr2_task_recorder">

     pr2_task_recorder

  </description>
  <author>Peter Pastor</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_task_recorder</url>
  <depend package="roscpp"/>
  <depend package="task_recorder"/>
  <depend package="filters"/>
  <depend package="message_filters"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="pr2_gripper_sensor_msgs"/>
  <depend package="laser_geometry"/>

</package><package name="kurt_navigation_local" path="" repo="kurt_apps" repo_host="http://kos.informatik.uni-osnabrueck.de/kurt_apps.git">
  <description brief="XML files for running the move_base node on a PR2 in an odometric frame.">
    This package holds xml files for running the <a href="http://www.ros.org/wiki/move_base">move_base</a> node on a Kurt
    robot in an odometric frame. No static map is needed for the <a href="http://www.ros.org/wiki/move_base">move_base</a> node in this
    configuration. This package is modeled after pr2_navigation_local.
  </description>
  <author>Martin Günther</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/kurt_navigation_local</url>
  <depend package="move_base"/>
  <depend package="topic_tools"/>
</package><package name="ncd_parser" path="" repo="scan_tools" repo_host="https://github.com/ccny-ros-pkg/scan_tools">
  <description brief="ncd_parser">

     The ncd_parser package reads in .alog data files from the New College Dataset and broadcasts scan and odometry messages to ROS.

  </description>
  <author>Ivan Dryanovski</author>
  <license url="http://www.opensource.org/licenses/BSD-3-Clause">BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ncd_parser</url>
  <depend package="tf"/>
  <depend package="geometry_msgs"/> 
  <depend package="sensor_msgs"/> 

</package><package name="kinect_camera" path="" repo="cyphy_legacy" repo_host="http://launchpad.net/cyphy">
  <description brief="A Microsoft Kinect camera ROS driver">

    A general purpose ROS driver for the Microsoft XBOX 360 Kinect sensor. The driver publishes:
    <ul>
      <li> RGB/IR image data</li>
      <li> depth data as PointCloud and PointCloud2</li>
      <li> ... </li>
    </ul>
    
    There are two versions of the driver: a standard ROS node, and a nodelet. 

  </description>

  <author>Ivan Dryanovski, William Morris, Stéphane Magnenat, Radu Bogdan Rusu, Patrick Mihelich</author>

  <license>BSD</license>

  <url>http://ros.org/wiki/kinect_camera</url>

  <review notes="beta" status="experimental"/>

  <depend package="roscpp"/>
  <depend package="nodelet"/>
  <depend package="camera_info_manager"/>
  <depend package="image_transport"/>
  <depend package="sensor_msgs"/>
  <depend package="freenect"/>
  <depend package="dynamic_reconfigure"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lkinect_driver -lkinect_driver_nodelets"/>
    <nodelet plugin="${prefix}/kinect_nodelets.xml"/>
  </export>

  <platform os="ubuntu" version="10.04"/>
  <platform os="ubuntu" version="10.10"/>
</package><package name="game_faces" path="/trunk/arrg/ua_game_theory/game_faces" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
  <description brief="game_faces">

     game_faces

  </description>
  <author>Arizona Robotics Research Group</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/game_faces</url>
  <depend package="std_msgs"/>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="opencv2"/>

</package><package name="cob_people_detection" path="" repo="cob_people_perception" repo_host="git://github.com/ipa320/cob_people_perception">
  <description brief="cob_people_detection">
    Detects persons through head and face detection and face identification if desired. The results are tracked over time to increase confidence. The system is optimized to be used with a Microsoft Kinect or Asus Xtion Pro Live sensor but could also handle different sensors as long as depth and color images are provided.
  </description>
  <author>Richard Bormann</author>
  <license>LGPL, Fraunhofer IPA</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_people_detection</url>

<depend package="roscpp"/>
<depend package="roslib"/>
<depend package="std_msgs"/>
<depend package="geometry_msgs"/>
<depend package="std_srvs"/>
<depend package="opencv2"/>
<depend package="cv_bridge"/>
<depend package="stereo_msgs"/>
<depend package="sensor_msgs"/>
<depend package="tf"/>
<depend package="image_transport"/>
<depend package="image_geometry"/>
<depend package="actionlib_msgs"/>
<depend package="actionlib"/>
<depend package="pcl"/>
<depend package="pcl_ros"/>
<depend package="nodelet"/>
<depend package="openni"/>
<depend package="nite"/>
<depend package="kdl"/>
<depend package="tinyxml"/>
<depend package="cob_people_detection_msgs"/>
<depend package="cob_vision_utils"/>
<depend package="cob_image_flip"/>
<depend package="openni_launch"/>
<depend package="dynamic_reconfigure"/>

<export>
  <cpp cflags="-I${prefix}/msg/cpp -I${prefix}/srv/cpp"/>
  <nodelet plugin="${prefix}/nodelet_plugins.xml"/>
</export>


  <!--platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/-->
</package><package name="sensor_scope" path="" repo="sr_visualization" repo_host="lp:sr-visualization">
  <description brief="sensor_scope">

     This package is used to plot the debug data coming out of the Shadow Hand in realtime.

  </description>
  <author>Ugo Cupcic</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sensor_scope</url>


  <rosdep name="qt4"/>

  <!-- rosbuild1 -->
  <depend package="qt_build"/>
  <depend package="roscpp"/>
  <depend package="sr_robot_msgs"/>

  <rosbuild2>
    <depend package="qt_build"/>
    <depend package="roscpp"/>
  </rosbuild2>

</package><package name="robot_pose_publisher" path="" repo="robot_pose_publisher" repo_host="https://github.com/WPI-RAIL/robot_pose_publisher">
	<description brief="Simple node to publish the robot's position relative to the map.">A simple node to publish the robot's position relative to the map using TFs.</description>
	<author>Russell Toris</author>
	<license>BSD</license>  
	<review notes="" status="unreviewed"/>
	<url>http://ros.org/wiki/robot_pose_publisher</url>

	<depend package="roscpp"/>
	<depend package="tf"/>
	<depend package="geometry_msgs"/>
</package><package name="neo_description_mp_500" path="" repo="neo_common" repo_host="https://github.com/neobotix/neo_common">
  <description brief="neo_description_mp_500">

     neo_description_mp_500

  </description>
  <author>Timo Hackel</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/neo_description_mp_500</url>


    <depend package="convex_decomposition"/>
    <depend package="ivcon"/>
    <depend package="urdf"/>
    <depend package="xacro"/>
    <depend package="gazebo"/>
    <depend package="gazebo_tools"/>
    <depend package="fake_localization"/>
    <depend package="erratic_gazebo_plugins"/>
    <depend package="map_server"/>
    <depend package="gazebo_worlds"/>
    <depend package="robot_state_publisher"/>
    <depend package="laser_filters"/>
    <depend package="robot_self_filter"/>
    <depend package="pr2_gazebo_plugins"/>
    <depend package="point_cloud_converter"/>
    <depend package="erratic_gazebo_plugins"/>

</package><package name="kurt_description" path="" repo="kurt_driver" repo_host="http://kos.informatik.uni-osnabrueck.de/kurt_driver.git">
  <description brief="URDF descriptions of KURT robots">

     This package contains URDF descriptions of the KURT robots. The complete
     robots are available in the directory &quot;robots/&quot;. Each robot consists of
     a base and a top (see those two directories). Usually, a top is made up
     from several parts (see directory &quot;parts/&quot;), such as a laser scanner.

  </description>
  <author>Jochen Sprickerhof, Martin Günther</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/kurt_description</url>
  <depend package="urdf"/>
  <depend package="xacro"/>

  <depend package="gazebo_plugins"/>
  <depend package="pr2_gazebo_plugins"/>
  <depend package="kurt_gazebo_plugins"/>
</package><package name="openvgr" path="/trunk/rtmros_common/openvgr" repo="rtm-ros-robotics/rtmros_common" repo_host="https://rtm-ros-robotics.googlecode.com/svn">
  <description brief="openvgr">

     openvgr

This program has been developed by Task-Vision Research Group, AIST.
Please see their official web sites to see the details of their licenses.

  </description>
  <author>Task-Vision Research Group, AIST.</author>
  <license>EPL Ver 1.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/openvgr</url>

  <depend package="openrtm"/>
  <depend package="camera1394"/>

</package><package name="ar_kinect" path="/trunk/albany_vision/ar_kinect" repo="albany-ros-pkg" repo_host="http://albany-ros-pkg.googlecode.com/svn">
  <description brief="Improved AR-markers using a Kinect">
    This package extends the ar_pose package to handle point clouds + images generated from the kinect for improved AR marker localization.
  </description>
  <author>Michael Ferguson</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ar_kinect</url>

  <rosdep name="glut"/>
  <depend package="visualization_msgs"/>
  <depend package="artoolkit"/>
  <depend package="ar_pose"/>
  <depend package="geometry_msgs"/>
  <depend package="tf"/>
  <depend package="pcl_ros"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="roscpp"/>
</package><package name="mrw_robot_agent" path="/trunk/rtcus_applications/mas_ros_workshop/mrw_robot_agent" repo="rtc-us-ros-pkg-trunk" repo_host="https://rtc-us-ros-pkg.svn.sourceforge.net/svnroot/rtc-us-ros-pkg">
  <description brief="mrw_robot_agent">

     mrw_robot_agent

  </description>
  <author>Pablo Iñigo Blasco</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/mrw_robot_agent</url>
  
  <depend package="rospy"/>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>

</package><package name="mav_msgs" path="" repo="mav_tools" repo_host="https://github.com/ccny-ros-pkg/mav_tools">
  <description brief="Hardware-independent MAV messages">

     mav_msgs

  </description>
  <author>Ivan Dryanovski, William Morris</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/mav_msgs</url>

  <depend package="roscpp"/>

  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg_gen/cpp/include"/>
  </export>

</package><package name="rosjava_messages" path="" repo="rosjava_core" repo_host="https://code.google.com/p/rosjava/">
  <description brief="rosjava_messages">
     rosjava_messages generates message interfaces.
  </description>
  <author>Damon Kohler (damonkohler@google.com)</author>
  <license>Apache 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosjava_messages</url>
</package><package name="automow_node" path="" repo="au_automow_common" repo_host="https://github.com/Auburn-Automow/au_automow_common">
  <description brief="Auburn Automow ROS driver node">

      ROS interface for the Auburn Autonomous Lawnmower.

  </description>
  <author>Michael Carroll</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/automow_node</url>

  <depend package="rospy"/>
  <depend package="geometry_msgs"/>
  <depend package="diagnostic_msgs"/>
  <depend package="dynamic_reconfigure"/>

</package><package name="rgbd_registration" path="" repo="mapping" repo_host="http://code.in.tum.de/git/mapping.git">
  <description brief="rgbd_registration">
   This package aligns two point clouds together by combining 2D RGB feature matching and a modified Iterative Closest Point (ICP) algorithm in one &quot;Joint Optimization&quot; step. It is not a SLAM system, it simply aligns two point clouds at a time.

  </description>
  <author>Ross Kidson</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rgbd_registration</url>

  <depend package="pcl"/>
  <depend package="roscpp"/>

  <rosdep name="eigen"/> 
  <depend package="opencv2"/> 

</package><package name="triclops_msgs" path="/darpa_arm_msgs/triclops_msgs" repo="darpa_arm_msgs" repo_host="http://svn.thearmrobot.com">
  <description brief="triclops_msgs">

     triclops_msgs

  </description>
  <author>DARPA ARM GFE Team</author>
  <license>GPL</license>

  <depend package="roscpp"/>

  <export>
    <cpp cflags="-I${prefix}/msg/cpp -I${prefix}/srv/cpp"/>
  </export>
  
</package><package name="python_orocos_kdl" path="" repo="orocos_kinematics_dynamics" repo_host="http://git.mech.kuleuven.be/robotics/orocos_kinematics_dynamics.git">
  <description brief="python_orocos_kdl">

     python_orocos_kdl

  </description>
  <author>Ruben Smits</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/python_orocos_kdl</url>

  <depend package="orocos_kdl"/>
  <rosdep name="python-sip"/>

  <export>
    <python path="${prefix}/lib"/>
  </export>

</package><package name="katana_joint_movement_adapter" path="" repo="katana_driver" repo_host="http://kos.informatik.uni-osnabrueck.de/katana_driver.git">
  <description brief="Converts a JointMovement to a JointTrajectory for the Katana arm">

    Provides a node that converts a katana_msgs/JointMovement to a pr2_controllers_msgs/JointTrajectory.
    When running on real hardware, the katana package provides a JointMovement action. This node only
    needs to be run when running on the Gazebo simulator.

  </description>
  <author>Martin Günther</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/katana_joint_movement_adapter</url>
  <depend package="roscpp"/>
  <depend package="actionlib"/>
  <depend package="katana_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="arm_navigation_msgs"/>
  <depend package="joint_trajectory_generator"/>

</package><package name="test_redis" path="" repo="rocon_multimaster" repo_host="https://github.com/robotics-in-concert/rocon_multimaster">
  <description brief="test_redis">

     test_redis

  </description>
  <author>jihoonl</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/test_redis</url>
  <depend package="rospy"/>

</package><package name="smart_arm_affordance" path="/trunk/arrg/ua_experimental/smart_arm_affordance" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="smart_arm_affordance">
        smart_arm_affordance
    </description>

    <author>UARobots</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/smart_arm_affordance</url>

    <depend package="rospy"/>
    <depend package="phidgets_ros"/>
    <depend package="message_filters"/>
    <depend package="dynamixel_controllers"/>

    <depend package="std_msgs"/>
    <depend package="dynamixel_msgs"/>
</package><package name="sr_control_gui" path="" repo="sr_visualization" repo_host="lp:sr-visualization">
  <description brief="Control interface for Shadow hardware">
    sr_control_gui is a graphic application which integrates anything needed by the end-user to control the hand.
  </description>
  <author>Sacha Aury, Ugo Cupcic / ugo@shadowrobot.com, contact@shadowrobot.com</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.shadowrobot.com</url>
  <depend package="rospy"/>
  <depend package="sr_hand"/>
  <depend package="sr_robot_lib"/>
  <depend package="std_msgs"/>
  <depend package="tabletop_object_detector"/>
  <depend package="tabletop_collision_map_processing"/>
  <depend package="sensor_msgs"/>
  <depend package="sr_robot_msgs"/>
  <depend package="pr2_mechanism_msgs"/>
  <depend package="object_manipulator"/>
  <depend package="cyberglove"/>
  <depend package="control_toolbox"/>
  <depend package="sr_automatic_pid_tuning"/>
  <depend package="sr_friction_compensation"/>

  <rosdep name="python-scipy"/>
  <rosdep name="paramiko"/>
  <rosdep name="pyqt4"/>
  <rosdep name="python-qt4-gl"/>
  <export>
    <rosdoc config="rosdoc.yaml"/>
    <python path="${prefix}/src/sr_control_gui"/>
    <python path="${prefix}/src/sr_control_gui/plugins"/>
  </export>
</package><package name="aaai_lfd_demo_launch" path="/trunk/stacks/aaai_lfd_demo/aaai_lfd_demo_launch" repo="bosch-ros-pkg-e" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg-e/code">
  <description brief="aaai_lfd_demo_launch">

     Launches original demo

  </description>
  <author>Benjamin Pitzer (Maintained by Sarah Osentoski)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/aaai_lfd_demo_launch</url>

  <depend package="rospy"/>
  <depend package="openloop_object_manipulation"/>
  <depend package="aaai_lfd_demo_executive"/>
  <depend package="rl_2dnav"/>
  <depend package="SnapMapICP"/>
  <depend package="nav_pcontroller"/>
  <depend package="simple_robot_control"/>
</package><package name="veltrobot_gui" path="/trunk/veltrop-ros-pkg/veltrobot/veltrobot_gui" repo="veltrop-ros-pkg" repo_host="https://veltrop-ros-pkg.svn.sourceforge.net/svnroot/veltrop-ros-pkg">
  <description brief="veltrobot_gui">

     GUI programs for the veltrobot stack.

  </description>
  <author>Taylor Veltrop</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://taylor.veltrop.com/robotics/khrhumanoidv2.php?topic=veltrop-ros-pkg</url>
  
  <depend package="std_msgs"/>
  <depend package="veltrobot_msgs"/>
  <depend package="veltrobot_movement"/>

</package><package name="ias_robot_monitor" path="/utils/ias_robot_monitor" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="Displays aggregated robot diagnostics">
    This is a patched version of robot_monitor which includes a usability
    <a href="https://code.ros.org/trac/ros-pkg/ticket/5123">patch</a>
    that is awaiting its integration into the Fuerte release.
  </description>
  <author>Ingo Kresse (kresse@in.tum.de), Kevin Watts (watts@willowgarage.com), Josh Faust (jfaust@willowgarage.com)</author>
  <license>BSD</license>
  <review notes="2010/01/09" status="Doc reviewed"/>
  <url>http://www.ros.org/wiki/robot_monitor</url>
  <depend package="rospy"/>
  <depend package="diagnostic_msgs"/>
  <depend package="rxbag"/>
  <rosdep name="wxwidgets"/>
  <rosdep name="wxpython"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
  <export>
    <rxbag plugin="robot_monitor.rxbag_plugins"/>
  </export>
</package><package name="demo_exec" path="/branches/pr2_demos/iros_demos/demo_exec" repo="mit-ros-pkg-pr2-demos" repo_host="https://svn.csail.mit.edu/mit-ros-pkg">
  <description brief="demo_exec">

     demo_exec

  </description>
  <author>Jenny Barry</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/demo_exec</url>
  <depend package="table_wiping_demo"/>
  <depend package="demo_tools"/>
  <depend package="rospy"/>
  <depend package="controller_demos"/>

</package><package name="corobot_msgs" path="/trunk/Diamondback/Corobot/corobot_msgs" repo="roscorobot" repo_host="http://svn.code.sf.net/p/roscorobot/code">
  <description brief="corobot_msgs">

     Package reuniting the Corobot's specific messages.

  </description>
  <author>Morgan Cormier/mcormier@coroware.com</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/corobot_msgs</url>
  <depend package="roscpp"/>

</package><package name="hrl_kinematics" path="/trunk/humanoid_stacks/humanoid_navigation/hrl_kinematics" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="Kinematics library for humanoid robots based on KDL: CoM and static stability">

     A small kinematics library for humanoid robots based on KDL. The main components are (recursive) center of mass, (static) stability, and support polygon computations.

  </description>
  <author>Armin Hornung</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hrl_kinematics</url>
  
  <depend package="roscpp"/>
  <depend package="kdl_parser"/>

  <depend package="tf_conversions"/> 
  <depend package="geometric_shapes"/>
  <depend package="sensor_msgs"/>
  <depend package="robot_state_publisher"/>
  <depend package="visualization_msgs"/>
  <depend package="pcl"/>
  
  <rosdep name="assimp"/>
  
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lhrl_kinematics"/>
  </export>

</package><package name="ptam_com" path="" repo="ethzasl_ptam" repo_host="https://github.com/ethz-asl/ethzasl_ptam">
  <description brief="ptam_com">

      header files for the modified version of the monocular SLAM framework PTAM

  </description>
  <author>Stephan Weiss, Markus Achtelik, Simon Lynen</author>
  <license>see http://www.robots.ox.ac.uk/~gk/PTAM/download.html </license>
  <review notes="under active development" status="unreviewed"/>
  <url>http://ros.org/wiki/ethzasl_ptam/ptam_com</url>
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/srv/cpp -I${prefix}/msg/cpp"/>
  </export>

</package><package name="furniture_features" path="" repo="mapping" repo_host="http://code.in.tum.de/git/mapping.git">
  <description brief="furniture_features">

     furniture_features

  </description>
  <author>Stefan</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/simple_features</url>
  <depend package="pcl17"/>
  <rosdep name="eigen"/>
  
  <export>
  	<cpp cflags="-I${prefix}/include/"/>
  </export>


</package><package name="ultraspeech" path="/trunk/arrg/ua_experimental/ultraspeech" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
  <description brief="ultraspeech">

     ultraspeech

  </description>
  <author>Jeff Berry</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ultraspeech</url>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="rosbag"/>
  <depend package="opencv2"/>

  <rosdep name="libiec61883-dev"/>

</package><package name="pi_tb_description" path="/trunk/pi_tb_description" repo="pi-robot-ros-pkg" repo_host="http://pi-robot-ros-pkg.googlecode.com/svn">
  <description brief="pi_tb_description">

     Modifications of the TurtleBot to include a pan and tilt head.

  </description>
  <author>Patrick Goebel</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pi_tb_description</url>
  <depend package="urdf_parser"/>
  <depend package="xacro"/>
  <depend package="turtlebot_description"/>
</package><package name="sr_edc_launch" path="" repo="shadow_robot_ethercat" repo_host="lp:sr-ros-interface-ethercat">
  <description brief="sr_edc_launch">

    Package with launch files to start the needed nodes for the Shadow Robot EtherCAT hand.

  </description>
  <author>Yann Sionneau, Ugo Cupcic / ugo@shadowrobot.com , software@shadowrobot.com</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sr_edc_launch</url>

  <depend package="sr_ethercat_hand_config"/>
  <depend package="roscpp"/>
  <depend package="diagnostic_aggregator"/>
  <depend package="diagnostic_updater"/>
  <depend package="diagnostic_msgs"/>
  <depend package="self_test"/>
  <depend package="urdf"/>
  <depend package="xacro"/>
  <depend package="convex_decomposition"/>
  <depend package="ivcon"/>
  <depend package="pr2_etherCAT"/>
  <depend package="pr2_bringup"/>
  <depend package="robot_mechanism_controllers"/>
  <depend package="sr_description"/>
</package><package name="continual_planning_monitor" path="/trunk/symbolic_planning/continual_planning_monitor" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="continual_planning_monitor">
      continual_planning_monitor contain a GUI to monitor and control the progress
      of the continual_planning_executive.
  </description>
  <author>Christian Dornhege</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/continual_planning_monitor</url>
  <depend package="roscpp"/>
  <depend package="continual_planning_executive"/>

  <rosdep name="libqt4-dev"/>

</package><package name="interactive_kinematic" path="/branches/interactive_kinematic" repo="rtc-us-ros-pkg-branches" repo_host="https://rtc-us-ros-pkg.svn.sourceforge.net/svnroot/rtc-us-ros-pkg">
  <description brief="interactive_kinematic">

     interactive_kinematic

  </description>
  <author>Pablo Iñigo Blasco</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/interactive_kinematic</url>
  <depend package="kdl"/>
  <depend package="rospy"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="urdf"/>
 
  
</package><package name="R1_Odom" path="" repo="JKU_Robotic_Stack" repo_host="https://github.com/AaronMR/JKU_Robotic_Stack">
  <description brief="R1_Odom">

     R1_Odom

  </description>
  <author>aaronmr</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/R1_Odom</url>
  <depend package="roscpp"/>
  <depend package="joy"/>
  <depend package="nav_msgs"/>
  <depend package="tf"/>
  
  <depend package="geometry_msgs"/>
</package><package name="robotiq_s_model_control" path="/trunk/robotiq/robotiq_s_model_control" repo="swri-ros-pkg" repo_host="http://swri-ros-pkg.googlecode.com/svn">
  <description brief="Robotiq S-Model">

     Package to control a S-Model Gripper from Robotiq inc.

  </description>
  <author>Nicolas Lauzier (Robotiq inc.)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/robotiq_s_model_control</url>

</package><package name="smach_recovery_msgs" path="/trunk/stacks/recovery_shared_autonomy/smach_recovery_msgs" repo="bosch-ros-pkg-e" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg-e/code">
  <description brief="smach_recovery_msgs">
    This package contains a set of messages that are used in the
    internal debugging interface of a SMACH recovery state
    machine. The <a href="http://www.ros.org/wiki/smach_recovery_viewer">smach recovery
    viewer</a> uses this debugging interface to visualize complete
    hierarchical state machines.
  </description>
  <author>Bharath Sankaran and Jonathan Bohren</author>
  <license>BSD</license>
  <review notes="" status="Doc reviewed"/>
  <url>http://ros.org/wiki/smach_recovery_msgs</url>

</package><package name="rospy_tutorials" path="/stacks/ros_tutorials/trunk/rospy_tutorials" repo="ros_tutorials" repo_host="https://code.ros.org/svn/ros">
  <description brief="Shows the features of ROS step-by-step">
    This package attempts to show the features of ROS python API step-by-step,
    including using messages, servers, parameters, etc. These tutorials are compatible with the nodes in roscpp_tutorial.
  </description>
  <author>Ken Conley</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rospy_tutorials</url>
  <export>
    <cpp cflags="-I${prefix}/srv/cpp -I${prefix}/msg/cpp"/> 
  </export>
</package><package name="pcl_tools" path="/trunk/pcl_tools" repo="mit-ros-pkg-trunk" repo_host="https://svn.csail.mit.edu/mit-ros-pkg">
  <description brief="pcl_tools">

     pcl_tools

  </description>
  <author>garratt</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pcl_tools</url>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="nnn"/>
  <depend package="tf"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="roscpp"/>
 <export>
    <cpp cflags=" -I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib "/>
  </export>

</package><package name="mrpt_ekf_slam_2d" path="/trunk/mrpt_slam/mrpt_ekf_slam_2d" repo="mrpt-ros-pkg" repo_host="http://mrpt-ros-pkg.googlecode.com/svn">
  <description brief="mrpt_ekf_slam_2d">

     mrpt_ekf_slam_2d

  </description>
  <author>Jose Luis</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/mrpt_ekf_slam_2d</url>
  <depend package="mrpt_msgs"/>
  <depend package="roscpp"/>

</package><package name="obstacle_avoidance" path="/trunk/OIT/obstacle_avoidance" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="obstacle_avoidance">

     obstacle_avoidance

  </description>
  <author>David Feil-Seifer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/obstacle_avoidance</url>
  <depend package="oit_msgs"/>
  <depend package="point_map"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="laser_geometry"/>
  <depend package="tf"/>

</package><package name="trajectory_execution_monitor" path="" repo="arm_navigation_experimental" repo_host="https://kforge.ros.org/armnavigation/experimental">
  <description brief="trajectory_execution_monitor">

     trajectory_execution_monitor

  </description>
  <author>Gil Jones</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/trajectory_execution_monitor</url>
  <depend package="arm_navigation_msgs"/>
  <depend package="control_msgs"/>
  <depend package="actionlib"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="planning_environment"/>

  <export>
    <cpp cflags="-I${prefix}/include `rosboost-cfg --cflags`" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -ltrajectory_execution_monitor"/>
  </export>

</package><package name="semantic_framer" path="" repo="roboframenet" repo_host="https://kforge.ros.org/appmanandroid/roboframenet">
  <description brief="semantic_framer">
    semantic_framer manages lexical units and fits parsed sentences to them.  The semantic framer manages lexical units, akin to FrameNet but designed for robotics, which are accessible by a given verb.  The semantic framer communicates with other nodes by providing interfaces for adding lexical units (through yaml files) and for filling lexical units (given a parse).
  </description>
  <author>Brian Thomas</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/semantic_framer</url>
  <depend package="rospy"/>
  <depend package="roboframenet_msgs"/>
  <depend package="stanford_parser_msgs"/>
  <depend package="std_msgs"/>

</package><package name="vlr" path="/trunk/stacks/pr2_dremel/vlr" repo="bosch-ros-pkg-e" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg-e/code">
  <description brief="vlr">

     vlr

  </description>
  <author>Soeren Kammel</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/vlr</url>
  <depend package="roscpp"/>
  <depend package="tf"/>
  
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -lvlr"/>
  </export>
  <rosdep name="libftgl-dev"/>
</package><package name="pr2_arms_kdl" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="pr2_arms_kdl">

     pr2_arms_kdl

  </description>
  <author>Advait Jain</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_arms_kdl</url>
  <depend package="rospy"/>
  <depend package="kdl"/>
  <depend package="hrl_lib"/>

</package><package name="coverage_3d_executive" path="/trunk/coverage_3d/coverage_3d_executive" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="Package holding main coverage functions.">

   Package holding main coverage functions

  </description>
  <author>Juergen Hess</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/coverage_3d_executive</url>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="std_msgs"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="octomap_ros"/>
  <depend package="octomap"/>
  <depend package="tf"/>
    <depend package="tf2"/>
 <depend package="visualization_msgs"/>
  <depend package="common_rosdeps"/>
  <rosdep name="eigen"/>
  <depend package="lkh_solver"/>
  <depend package="arm_navigation_msgs"/> 
  <depend package="planning_environment"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="actionlib"/>
  <depend package="angles"/>
  <depend package="kdl"/>
  <depend package="kdl_parser"/>
  <depend package="voro"/> 
  <depend package="coverage_3d_arm_navigation"/>
  <depend package="coverage_3d_tools"/>
  <depend package="coverage_3d_srvs"/>
  <depend package="coverage_3d_planning"/>
  <depend package="surfacelet"/>  
</package><package name="cob_manipulator" path="" repo="cob_manipulation" repo_host="git://github.com/ipa320/cob_manipulation">
  <description brief="cob_manipulator">

     cob_manipulator

  </description>
  <author>Alexander Bubeck</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_manipulator</url>
  
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="trajectory_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="kinematics_msgs"/>
  <depend package="cob_srvs"/>
  <depend package="tf_conversions"/>
  <depend package="tf"/>
  <depend package="kdl"/>
  <depend package="kdl_parser"/>
  <!--  <depend package="pr2_arm_kinematics"/> -->
  <depend package="collada_urdf"/>
  <depend package="pluginlib"/>
  <depend package="kinematics_base"/>
  <depend package="arm_navigation_msgs"/>

  <depend package="urdf"/>
  <depend package="pr2_arm_kinematics"/>

  <rosdep name="liblapack"/>

  <export>
    <kinematics_base plugin="${prefix}/cob_manipulator_plugins.xml"/>
  </export>
</package><package name="playsound_recovery" path="" repo="cwru-ros-pkg" repo_host="http://github.com/cwru-robotics/cwru-ros-pkg">
  <description brief="playsound_recovery">

     playsound_recovery

  </description>
  <author>Eric Perko</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/playsound_recovery</url>
  <depend package="roscpp"/>
  <depend package="pluginlib"/>
  <depend package="costmap_2d"/>
  <depend package="tf"/>
  <depend package="nav_core"/>
  <depend package="sound_play"/>

  <export>
	  <cpp clags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lplaysound_recovery"/>
	  <nav_core plugin="${prefix}/playsound_recovery.xml"/>
  </export>

</package><package name="srs_scenarios" path="" repo="srs_public" repo_host="git://github.com/ipa320/srs_public">
  <description brief="srs_scenarios">

     srs_scenarios

  </description>
  <author>Renxi Qiu</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/srs_scenarios</url>
  <depend package="cob_script_server"/>
  <depend package="srs_knowledge"/>
  <!--depend package="rosjava_jni"/-->
  <depend package="srs_decision_making"/>
  <!--depend package="srs_decision_making_experimental"/-->
  <depend package="sound_play"/>
  <depend package="cob_object_detection_msgs"/>
  <depend package="cob_object_detection_fake"/>
  <depend package="cob_3d_mapping_msgs"/>
  <depend package="cob_3d_mapping_pipeline_fake"/>
  <depend package="cob_bringup_sim"/>
  <!--depend package="srs_grasping"/-->
  <depend package="srs_object_database_msgs"/>
  <!--depend package="cob_navigation_global"/-->
  <!--depend package="cob_navigation_linear"/-->
</package><package name="laser_to_pointcloud" path="" repo="uuisrc-ros-pkg" repo_host="https://github.com/cburbridge/uuisrc-ros-pkg">
  <description brief="laser_to_pointcloud">

     laser_to_pointcloud

  </description>
  <author>Lorenzo Riano</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/laser_to_pointcloud</url>
  <depend package="sensor_msgs"/>
  <depend package="pcl"/>
  <depend package="laser_geometry"/>

</package><package name="joint_normalization_filters" path="" repo="arm_navigation" repo_host="https://kforge.ros.org/armnavigation/armnavigation">
  <description brief="joint_normalization_filters">
    This package implements a set of filters that can deal with wrapping or unwrapping continuous joints.
  </description>
  <author>Sachin Chitta</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/joint_normalization_filters</url>
  <depend package="spline_smoother"/>
  <depend package="angles"/>
  <depend package="filters"/>

  <export>
    <cpp lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -ljoint_normalization_filters"/>
    <filters plugin="${prefix}/default_plugins.xml"/>
  </export>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="indomptable_ai" path="" repo="smart-robotics-ros-pkg" repo_host="https://github.com/JBot/smart-robotics-ros-pkg">
  <description brief="indomptable_ai">

     indomptable_ai

  </description>
  <author>Jbot</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/indomptable_ai</url>
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  <depend package="move_base"/>
  <depend package="std_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="tf"/>
  <depend package="move_base_msgs"/>
  <depend package="actionlib"/>
  <depend package="indomptable_nav"/>
  <depend package="indomptable_vision"/>

</package><package name="srs_msgs" path="" repo="srs_public" repo_host="git://github.com/ipa320/srs_public">
  <description brief="srs_msgs">

     srs_msgs

  </description>
  <author>renxi</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/srs_msgs</url>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="roslib"/>
  <depend package="geometry_msgs"/>
  <depend package="actionlib_msgs"/>
  <depend package="trajectory_msgs"/>

</package><package name="navigation_srvs" path="/trunk/navigation/navigation_srvs" repo="ubc-ros-pkg" repo_host="https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg">
  <description brief="navigation_srvs">
      This package contains definitions of services used by the different navigation algorithms used in the SRVC contest.
  </description>
  <author>Marius Muja</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/navigation_srvs</url>

  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>


  <export>
      <cpp cflags="-I${prefix}/msg/cpp -I${prefix}/srv/cpp"/>
  </export>


</package><package name="cob_android_script_server" path="" repo="cob_android" repo_host="git://github.com/ipa320/cob_android">
  <description brief="cob_android_script_server">

     cob_script_server_android

  </description>
  <author>Benjamin Maidel</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_script_server_android</url>

  <depend package="rospy"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="tf"/>
  <depend package="std_msgs"/>
  <depend package="cob_srvs"/>
  <depend package="trajectory_msgs"/>
  <depend package="kinematics_msgs"/>
  <depend package="geometry_msgs"/>
   <depend package="control_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="move_base_msgs"/>
  <depend package="arm_navigation_msgs"/>
  <depend package="cob_light"/>
  <depend package="cob_sound"/>
  <depend package="cob_script_server"/>
</package><package name="Aria" path="" repo="amor-ros-pkg" repo_host="https://amor-ros-pkg.googlecode.com/hg/">
<description brief="MobileRobots' Advanced Robot Interface for Applications (ARIA) C++ library">

This package contains MobileRobots' ARIA C++ library (software development toolkit or SDK)
for all MobileRobots' ActivMedia platforms.
ARIA can dynamically control your robot's velocity, heading, relative heading and
other motion parameters either through simple low-level commands or
through its high-level Actions infrastructure.
ARIA also receives odometric position estimates, sonar readings and
all other current operating data sent by the robot platform.

</description>
<author>Maintained by Srećko Jurić-Kavelj</author>
<license>BSD</license>
<review notes="" status="3rdparty doc reviewed"/>
<url>http://www.ros.org/wiki/Aria</url>
<export>
  <cpp cflags="-fPIC -I${prefix}/Aria/include" lflags="-Wl,-rpath,${prefix}/Aria/lib -L${prefix}/Aria/lib -lAria -lpthread -ldl -lrt"/>
   <doxymaker external="http://robots.mobilerobots.com/wiki/ARIA"/>
</export>
</package><package name="laser_tilt_controller_filter" path="" repo="pr2_navigation" repo_host="https://kforge.ros.org/pr2navigation/hg">
  <description brief="laser_tilt_controller_filter">

     laser_tilt_controller_filter

  </description>
  <author>Eitan Marder-Eppstein</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/laser_tilt_controller_filter</url>
  <depend package="filters"/>
  <depend package="sensor_msgs"/>
  <depend package="roscpp"/>
  <depend package="pluginlib"/>
  <depend package="pr2_msgs"/>
  <export>
  <cpp cflags="-I${prefix}/include `rosboost-cfg --cflags`" lflags=""/>
  <filters plugin="${prefix}/laser_tilt_controller_filter_plugins.xml"/>
  </export>
</package><package name="srldb" path="/tags/latest/srldb" repo="knowrob" repo_host="http://code.in.tum.de/pubsvn/knowrob">
  <description brief="srldb">

     Statistical relational learning package developed in the IAS group at TUM.

  </description>
  <author>Dominik Jain, Stefan Waldherr, Moritz Tenorth</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <depend package="rosjava_jni"/>

  <url>http://ros.org/wiki/srldb</url>
  <export>
    <java classpath="${prefix}/bin:${prefix}/lib/bnj.jar:${prefix}/lib/bnj_res.jar:${prefix}/lib/proximity.jar:${prefix}/lib/jahmm.jar:${prefix}/lib/log4j-1.2.9.jar:${prefix}/lib/jdom.jar:${prefix}/lib/mysql-connector-java-3.0.11-stable-bin.jar:${prefix}/lib/jython22.jar:${prefix}/lib/jsmile_linux_i386/smile.jar:${prefix}/lib/processing.org/xml.jar:${prefix}/lib/swt_linux_i386/swt.jar:${prefix}/lib/yarp_linux_amd64/jyarprpc.jar"/>
    <rosdoc config="rosdoc.yaml"/>
  </export>

</package><package name="pr2_finder" path="/trunk/OIT/pr2_finder" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="pr2_finder">

     pr2_finder

  </description>
  <author>David Feil-Seifer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_finder</url>
  <depend package="oit_msgs"/>
	<depend package="nav_msgs"/>
  <depend package="tf"/>
  <depend package="image_geometry"/>
  <depend package="cv_bridge"/>
  <depend package="image_transport"/>
	<depend package="opencv2"/>
</package><package name="ecl_slam" path="/trunk/ecl_navigation/ecl_slam" repo="ecl_navigation" repo_host="https://embedded-control-library.googlecode.com/svn">
  <description brief="Slam algorithms for mobile robot navigation">

	Slam structures and mechanisms for various algorithms. A level of 
	genericity is the focus here - where elements are common to many
	slam algorithms, they're pulled into this package library.

  </description>
  <author>Daniel Stonier (d.stonier@gmail.com)</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://snorriheim.dnsdojo.com/redmine/wiki/ecl</url>
  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>
  <depend package="ecl_exceptions"/>
  <depend package="ecl_linear_algebra"/>
  <depend package="ecl_time"/>
  <depend package="ecl_license"/>
  <depend package="ecl_build"/>
</package><package name="ua_overhead_cam" path="/trunk/arrg/ua_drivers/ua_overhead_cam" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="ua_overhead_cam">

        ua_overhead_cam

    </description>
    <author>RobotLab</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/ua_overhead_cam</url>
    <depend package="roscpp"/>
    <depend package="visualization_msgs"/>
    <depend package="prosilica_camera"/>
</package><package name="freetail_trajectory_filters" path="/trunk/freetail/freetail_trajectory_filters" repo="swri-ros-pkg" repo_host="http://swri-ros-pkg.googlecode.com/svn">
  <description brief="freetail_trajectory_filters">

     freetail_trajectory_filters

  </description>
  <author>Shaun Edwards</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/freetail_trajectory_filters</url>
  <depend package="filters"/>
  <depend package="trajectory_msgs"/>
  <depend package="arm_navigation_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -libfreetail_trajectory_filters"/>
    <filters plugin="${prefix}/default_plugins.xml"/>
  </export>

</package><package name="pr2_transmission_check" path="/stacks/wg_hardware_test/trunk/pr2_transmission_check" repo="wg_hardware_test" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_transmission_check">

     pr2_transmission_check

  </description>
  <author>Kevin Watts</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_transmission_check</url>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="pr2_msgs"/>
  <depend package="std_msgs"/>
  <depend package="std_srvs"/>
  <depend package="diagnostic_msgs"/>
  <depend package="pr2_description"/>
  <depend package="pr2_component_descriptions"/>
  <depend package="pr2_mechanism_msgs"/>
  <depend package="angles"/>
  <depend package="urdf"/>
  <depend package="xacro"/>
  <depend package="diagnostic_updater"/>
  <depend package="pr2_mechanism_model"/>
</package><package name="vr920_tracker" path="/trunk/veltrop-ros-pkg/virtual_reality/vr920_tracker" repo="veltrop-ros-pkg" repo_host="https://veltrop-ros-pkg.svn.sourceforge.net/svnroot/veltrop-ros-pkg">
  <description brief="vr920_tracker">

     This listens to the vr920 driver and publishes ros messages for the head positon.

  </description>
  <author>Taylor Veltrop</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/vr920_tracker</url>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="tf"/> 
  <depend package="kdl"/>

</package><package name="image_letterboxer" path="/trunk/OIT/image_letterboxer" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="image_letterboxer">
     enlarges an image by adding black bars around image
  </description>
  <author>dfseifer@usc.edu</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://pr.willowgarage.com/wiki/ros</url>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="opencv2"/>
  <depend package="image_transport"/>
  <depend package="cv_bridge"/>
<!--  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp"/>
  </export>-->
</package><package name="cob_calibration_msgs" path="" repo="cob_calibration" repo_host="git://github.com/ipa320/cob_calibration">
  <description brief="cob_calibration_msgs">

     This package is a slightly modified version of the electric version of calibration_msgs.
     It contains message definitions for storing calibration samples and was created
     because the calibration_msgs api in electric is unstable.

  </description>
  <author>Vijay Pradeep, Sebastian Haug</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_calibration_msgs</url>

  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>

</package><package name="osg_interactive_markers" path="/trunk/visualization_osg/osg_interactive_markers" repo="uji-ros-pkg" repo_host="http://uji-ros-pkg.googlecode.com/svn">
  <description brief="osg_interactive_markers">
	osg_interactive_markers is a library that creates and manages interaction with Interactive Markers in OpenSceneGraph
  </description>
  <author>Mario Prats</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/osg_interactive_markers</url>

  <depend package="roscpp"/>
  <depend package="roslib"/>
  <depend package="osg_markers"/>
  <depend package="osg_utils"/>
  <depend package="interactive_markers"/>
  <rosdep name="libopenscenegraph"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -losg_interactive_markers"/>
  </export>


</package><package name="pr2_examples_gazebo" path="/stacks/pr2_simulator/trunk/pr2_examples_gazebo" repo="pr2_simulator" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="PR2 Pendulum Simulation Example">Sample pendulum simulations using ROS-Gazebo plugins that demonstrate PR2 joint control.</description>
  <author>John Hsu</author>
  <license>BSD</license>
  <review notes="2010/01/20" status="Doc reviewed"/>
  <url>http://ros.org/wiki/pr2_examples_gazebo</url>
  <depend package="pr2_gazebo_plugins"/>
  <depend package="gazebo_plugins"/>
  <depend package="gazebo_tools"/>
  <depend package="pr2_mechanism_model"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>



  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -lpr2_examples_gazebo -Wl,-rpath,${prefix}/lib"/>
    <pr2_mechanism_model plugin="${prefix}/transmission_plugins.xml"/>
  </export>

  <rosdep name="tinyxml"/>

</package><package name="sbpl_arm_planner_interface_ros" path="/sbpl_arm_planning/trunk/sbpl_arm_planner_interface_ros" repo="sbpl_arm_planning" repo_host="https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs">
  <description brief="sbpl_arm_planner_interface">

    sbpl_arm_planner_interface

  </description>
  <author>Benjamin Cohen/bcohen@seas.upenn.edu</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.ros.org/wiki/sbpl_arm_planner_interface</url>

	<depend package="angles"/>
	<depend package="kdl"/>
	<depend package="urdf"/>
	<depend package="kinematics_msgs"/>
	<depend package="roscpp"/>
	<depend package="tf"/>
	<depend package="moveit_msgs"/>
	<depend package="sensor_msgs"/>
  <depend package="geometric_shapes"/>
	<depend package="sbpl_arm_planner_interface"/>
	<depend package="sbpl_two_arm_interface"/>
  <depend package="visualize_arm"/>
  <depend package="kdl_parser"/>
  <depend package="planning_scene"/>
  <depend package="planning_scene_monitor"/>
  <depend package="kinematics_plugin_loader"/>
  <depend package="kinematics_base"/>
  <depend package="planning_interface"/>

  <export>
    <planning_interface plugin="${prefix}/lib/plugin_description.xml"/>
  </export>


</package><package name="cyphy_xsens_mtig" path="" repo="cyphy_legacy" repo_host="http://launchpad.net/cyphy">
  <description brief="xsens_mtig">

  A modified version of the  lse_xsens_mti package with added functionalitly to work with the mti-g sensor.

     Xsens MTi node. The existing xsens_mti node is distributed in the form of a library and requires the MTi to be set to a determined configuration to work. We had some old code laying around so we just ported it to ROS. This sends the MTi to configuration mode at start and sets it to the propper mode of operation.

  Original Author: Gonçalo Cabrita

  </description>
  <author>Steven Martin</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/lse_xsens_mti</url>
  <depend package="sensor_msgs"/>
  <depend package="roscpp"/>
  <depend package="cereal_port"/>
  <depend package="tf"/>

</package><package name="tfjava" path="" repo="client_rosjava_jni" repo_host="http://code.in.tum.de/git/client-rosjava.git">
  <description brief="tfjava">

     tfjava

  </description>
  <author>Sjoerd van den Dries</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/tfjava</url>
  <depend package="rosjava_jni"/>
  <depend package="tf"/>  

  <export>
    <java classpath="${prefix}/bin:${prefix}/lib/vecmath.jar"/>    
  </export>

</package><package name="rail_youbot_teleop" path="/trunk/distribution/wpi-rail-ros-pkg/rail_youbot/rail_youbot_teleop" repo="wpi-rail-ros-pkg" repo_host="http://wpi-rail.googlecode.com/svn">
	<description brief="Control the Kuka YouBot via a joystick.">The rail_youbot_teleop package contains nodes to control the YouBot base via a joystick.</description>
	<author>Russell Toris</author>
	<license>BSD</license>
	<review notes="" status="unreviewed"/>
	<url>http://ros.org/wiki/rail_youbot_teleop</url>
  
	<depend package="roscpp"/>
	<depend package="joy"/>
	<depend package="geometry_msgs"/>
</package><package name="demo1_gerow" path="/trunk/cturtle/demo1/demo1_gerow" repo="seabee3-ros-pkg" repo_host="http://seabee3-ros-pkg.googlecode.com/svn">
  <description brief="demo1_gerow">

     demo1_gerow

  </description>
  <author>Mike Gerow</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/demo1_gerow</url>
  <depend package="roscpp"/>
  <depend package="base_libs"/>

</package><package name="rosjava_osgi_master" path="" repo="interactive-spaces" repo_host="https://code.google.com/p/interactive-spaces">
  <description brief="osgi_master">
    OSGi Master node for rosjava.
  </description>
  <author>Keith Hughes/khughes@google.com</author>
  <license>Apache License 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://code.google.com/p/interactive-spaces/</url>
  
  <depend package="rosjava"/>
  <depend package="osgi"/>
  <depend package="osgi_msgs"/>
  <depend package="rosjava_zeroconf_common"/>

  <rosdep name="java"/>
</package><package name="image_geometry" path="/stacks/vision_opencv/trunk/image_geometry" repo="vision_opencv" repo_host="https://code.ros.org/svn/ros-pkg">
  <description>
    `image_geometry` contains C++ and Python libraries for interpreting images
    geometrically. It interfaces the calibration parameters in sensor_msgs/CameraInfo
    messages with OpenCV functions such as image rectification, much as cv_bridge
    interfaces ROS sensor_msgs/Image with OpenCV data types.
  </description>
  <author>Patrick Mihelich</author>
  <license>BSD</license>
  <review notes="Jan 11, 2010" status="Doc reviewed"/>
  <url>http://www.ros.org/wiki/image_geometry</url>
  <export>
    <cpp cflags="`pkg-config opencv --cflags` -I${prefix}/include" lflags="`pkg-config opencv --libs` -Wl,-rpath,${prefix}/lib -L${prefix}/lib -limage_geometry"/>
    <rosdoc config="rosdoc.yaml"/>
  </export>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="opencv2"/>
  
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
  <rosdep name="opencv2"/>
  
</package><package name="starmac_msgs" path="" repo="starmac-ros-pkg" repo_host="https://bitbucket.org/bouffard/starmac-ros-pkg">
  <description brief="starmac_msgs">

     starmac_msgs

  </description>
  <author>bouffard</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/starmac_msgs</url>

</package><package name="arm_navigation_experimental_tools" path="" repo="arm_navigation_experimental" repo_host="https://kforge.ros.org/armnavigation/experimental">
  <description brief="arm_navigation_experimental_tools">

     arm_navigation_experimental_tools

  </description>
  <author>Gil Jones</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/arm_navigation_experimental_tools</url>
  <depend package="planning_environment"/>

</package><package name="swissranger_srv" path="/drivers/swissranger_srv" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description>Swissranger driver services. Should be moved later together with other services.</description>
  <author>Radu Bogdan Rusu (rusu@cs.tum.edu)</author>
  <license>BSD</license>
  <depend package="roscpp"/>
  <export>
    <cpp cflags="-I${prefix}/srv/cpp"/>
  </export>
  <url/>
</package><package name="reem_msgs" path="" repo="reem_msgs" repo_host="https://github.com/pal-robotics/reem_msgs">
  <description brief="reem_msgs">
    Messages specific to the REEM robot.
  </description>
  <author>Jordan Palacios</author>
  <license>Modified BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/reem_msgs</url>
  <depend package="std_msgs"/>
  <depend package="roslib"/>

</package><package name="test_diagnostic_aggregator" path="/stacks/diagnostics/trunk/test_diagnostic_aggregator" repo="diagnostics" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Unit and regression tests for diagnsotic_aggregator">
    Basic diagnostic_aggregator tests are  in the <b>diagnostic_aggregator</b> package, but any unit or regression tests that require new nodes, or new Analyzers go here.
  </description>
  <author>Kevin Watts</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/test_diagnostic_aggregator</url>
  <depend package="pluginlib"/>
  <depend package="diagnostic_msgs"/>
  <depend package="diagnostic_aggregator"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <export>
    <cpp cflags="-I${prefix}/include `rosboost-cfg --cflags`" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -ltestdiagnostic_aggregator `rosboost-cfg --lflags regex`"/>
       <diagnostic_aggregator plugin="${prefix}/test_diagnostic_aggregator_plugin.xml"/>
  </export>  
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="image_gui" path="" repo="flyatar" repo_host="http://github.com/peterpolidoro/Flyatar">
  <description brief="image_gui">

     image_gui

  </description>
  <author>XYFly</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/image_gui</url>
  <depend package="rospy"/>
  <depend package="track_image_contours"/>
  <depend package="stage"/>
  <depend package="tf"/>
  <depend package="plate_tf"/>
  <depend package="rosbag"/>

</package><package name="camera_pose_toolkits" path="" repo="camera_pose" repo_host="https://kforge.ros.org/calibration/camera_pose">
  <description brief="camera_pose_toolkits">

     The camera_pose_toolkits is a set of tools built around camera_pose_calibration package that allows the user to easily add new camera frame to existed tf tree. 

     We assume that the target tf tree already has (at least) one camera frame (let's call it urdf camera frame). The new camera frame has to be rigidly mounted on one of the frames in the tf tree, but there can be joints between the urdf camera frame and the frame on which the new camera is mounted. This package will find out the static transform between the new camera frame and its mounting frame. The package will publish that transform to tf. It can also convert that transform into a xml snippet and insert it into the existed urdf description file. 

  </description>
  <author> Yiping Liu</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/camera_pose_toolkits</url>
  <depend package="std_msgs"/>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="camera_pose_calibration"/>
  <depend package="kdl"/>
  <depend package="kdl_parser"/>
  <depend package="robot_state_publisher"/>
  <depend package="dynamic_reconfigure"/>
</package><package name="lse_roomba_stage" path="/stacks/lse_roomba_toolbox/trunk/lse_roomba_stage" repo="lse_roomba_toolbox" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="roomba_stage">

     Stage world files for the Roomba robot. Also includes 2dnav launch files. An example for multiple roombas running in Stage with multiple move_bases running is also present.

  </description>
  <author>Gonçalo Cabrita and Pedro Sousa</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/roomba_stage</url>

</package><package name="recyclerbot" path="/trunk/recyclerbot" repo="stanford-ros-pkg" repo_host="https://stanford-ros-pkg.googlecode.com/svn">
  <description brief="recyclerbot">

     recyclerbot

  </description>
  <author>Jiahui Shi jiahui@stanford.edu</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/recyclerbot</url>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="rosbag"/>
  <depend package="tf"/>
  <depend package="teleop_controllers"/>
  
  <depend package="std_srvs"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="kinematics_msgs"/>
  <depend package="move_arm_msgs"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="pr2_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="pr2_mechanism_msgs"/>
  <depend package="simple_Jtranspose_controller"/>

</package><package name="pr2_gazebo" path="/stacks/pr2_simulator/trunk/pr2_gazebo" repo="pr2_simulator" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description>
    Launch scripts for simulating the PR2 in <a href="http://ros.org/wiki/gazebo">gazebo</a>.
    The simulation equivalent of pr2.launch is found here.
    pr2_fingertip_pressure_contact_translator produces the same ROS topics as fingertip_pressure package for simulated PR2.
</description>
  <author>John Hsu</author>
  <license>BSD</license>
  <review notes="2010/01/21" status="Doc reviewed"/>
  <url>http://ros.org/wiki/pr2_gazebo</url>
  <depend package="pr2_gazebo_plugins"/>
  <depend package="gazebo_plugins"/>
  <depend package="gazebo"/>
  <depend package="pr2_ogre"/>
  <depend package="gazebo_worlds"/>
  <depend package="pr2_description"/>
  <depend package="robot_state_publisher"/>
  <depend package="diagnostic_aggregator"/>
  <depend package="pr2_dashboard_aggregator"/>

  <depend package="pr2_controller_configuration_gazebo"/>
  <depend package="robot_mechanism_controllers"/>
  <depend package="pr2_mechanism_controllers"/>
  <depend package="pr2_head_action"/>
  <depend package="joint_trajectory_action"/>
  <depend package="pr2_gripper_action"/>
  <depend package="single_joint_position_action"/>
  <depend package="stereo_image_proc"/>
  <depend package="image_proc"/>
  <depend package="robot_pose_ekf"/>
  <depend package="tf2_ros"/>
  <depend package="topic_tools"/>

  <depend package="rostest"/>

  <!-- added for fingertip_pressure simulation -->
  <depend package="pr2_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="rospy"/>
  <depend package="std_msgs"/>
  <depend package="fingertip_pressure"/>

  <!-- added for urdf2model test -->
  <depend package="xacro"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>

  <rosdep name="libqt4-dev"/>
  <rosdep name="libqt4-opengl-dev"/>

  <export>
    <gazebo gazebo_media_path="${prefix}/test"/>
  </export>
</package><package name="tf_relay" path="/utils/tf_relay" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="tf_relay">

     tf_relay

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/tf_relay</url>
  <depend package="tf"/>
  <depend package="geometry_msgs"/>
  <depend package="rospy"/>

</package><package name="TestExecution_msgs" path="/darpa_arm_msgs/TestExecution_msgs" repo="darpa_arm_msgs" repo_host="http://svn.thearmrobot.com">
  <description brief="TestExecution_msgs">

     TestExecution_msgs

  </description>
  <author>DARPA ARM GFE Team</author>
  <license>GPL</license>

  <depend package="roscpp"/>

  <export>
    <cpp cflags="-I${prefix}/msg/cpp"/>
  </export>

</package><package name="rcf_com_lms100" path="/trunk/RCF4ROS/com/rcf_com_lms100" repo="roblab-whge-ros-pkg" repo_host="http://roblab-whge-ros-pkg.googlecode.com/svn">
  <description brief="rcf_com_lms100">

     rcf_com_lms100
     
     ROS driver for the sick lms100 laser scanner. The Driver is part of the rcf4ros
     communication layer.
     
     Adapted from driver code for the sick lms400 laser scanner.

  </description>
  <author>Stefan Stiene, Jan Elsberg, Benjamin Fabricius</author>
  <license>CreativeCommons BY-NC-SA License</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rcf_com_lms100</url>
  <depend package="roscpp"/>
  <depend package="rcf_control_protocol"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="tf"/>
  <depend package="lms100"/>

</package><package name="demo1_tasha" path="/trunk/cturtle/demo1/demo1_tasha" repo="seabee3-ros-pkg" repo_host="http://seabee3-ros-pkg.googlecode.com/svn">
  <description brief="demo1_tasha">

     demo1_tasha

  </description>
  <author>uscr</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/demo1_tasha</url>
  <depend package="roscpp"/>
  <depend package="base_image_proc"/>

</package><package name="rocon_unreliable_experiments" path="" repo="rocon_multimaster" repo_host="https://github.com/robotics-in-concert/rocon_multimaster">
  <description brief="rocon_unreliable_experiments">

     rocon_unreliable_experiments

  </description>
  <author>Daniel Stonier</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rocon_unreliable_experiments</url>
  <depend package="roscpp"/>

</package><package name="cob_hokuyo" path="" repo="cob_driver" repo_host="git://github.com/ipa320/cob_driver">
  <description brief="cob_hokuyo">

     This Package is simply a Care-O-bot specific setup for the hokuyo scanner.

  </description>
  <author>Florian Weisshardt</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_hokuyo</url>

  <depend package="roscpp"/>
  <depend package="rostest"/>
  <depend package="sensor_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="hokuyo_node"/>

</package><package name="laser_slam_mapper" path="/stacks/topological_navigation/trunk/laser_slam_mapper" repo="topological_navigation" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="laser_slam_mapper">

A mapper that builds a 2d topological map using the output from the slam algorithm in the laser_slam package.

  </description>
  <author>Bhaskara Marthi</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/laser_slam_mapper</url>
  <depend package="laser_slam"/>
  <depend package="topological_map_2d"/>
  <depend package="mongo_roscpp"/>
  <depend package="tf"/>
  <depend package="pcl"/>
  <depend package="octomap_ros"/>
  <depend package="roscpp"/>
  <depend package="visualization_msgs"/>

</package><package name="teleop_source_keyboard" path="" repo="generic_teleop" repo_host="https://github.com/skynetish/generic_teleop">

  <!-- Package summary -->
  <description brief="Tele-operation source which uses a keyboard as input.">

    This package provides header files and a library which implement a
    tele-operation source which uses a keyboard as input.

  </description>
  <author>Kevin LeBlanc (kevin.canadian@gmail.com)</author>
  <license>BSD</license>
  <url>https://github.com/skynetish/generic_teleop/wiki</url>

  <!-- External dependencies -->
  <rosdep name="boost"/>

  <!-- Package dependencies -->
  <depend package="teleop_framework"/>

  <!-- Exports -->
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lteleop_source_keyboard"/>
  </export>

</package><package name="openraveros_tutorials" path="/trunk/openrave_planning/openraveros_tutorials" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="Tutorials on commanding OpenRAVE through ROS">
    There are two ways to start the server.

<p>1. Through the command line:</p>

<b>roslaunch openraveros_tutorials openrave.launch</b>

<p>2. Through python code shown in openraverosserver.py</p>

<b>rosrun openraveros_tutorials openraverosserver.py</b>

<p>Once the ROSServer is started, veriy that the services are indeed advertised:</p>

<b>rosservice list</b>

<p>Then either launch the C++ or python code to tell openrave to load a scene:</p>

<b>rosrun openraveros_tutorials loadscene</b><br/>

<b>rosrun openraveros_tutorials loadscene.py</b>

  </description>
  <author>Rosen Diankov</author>
  <license>Apache License, Version 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/openraveros</url>
  <depend package="openraveros"/>
  <depend package="rospy"/>

</package><package name="babel" path="" repo="cram_core" repo_host="https://github.com/moesenle/cram_core">
  <description brief="babel">
      Babel
      http://common-lisp.net/project/babel/
  </description>
  <author>Luis Oliveira</author>
  <license>babel</license>
  <review notes="" status="unreviewed"/>

  <depend package="alexandria"/>
  <depend package="trivial_features"/>
</package><package name="kdl_coupling" path="" repo="sr_contrib" repo_host="lp:sr-contrib">
  <description brief="kdl_coupling">

     Provides additionnal KDL functions or modified functions to handle coupling in joints as well as 3D IK solutions for less than 6 DOF chains.

  </description>
  <author>Juan Antonio Corrales Ramon (UPMC)</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/kdl_coupling</url>
  <depend package="roscpp"/>
  <depend package="orocos_kdl"/>
  <export>
	<cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -lkdl_coupling"/>
  </export>
</package><package name="demo1_dhruv" path="/trunk/cturtle/demo1/demo1_dhruv" repo="seabee3-ros-pkg" repo_host="http://seabee3-ros-pkg.googlecode.com/svn">
  <description brief="demo1_dhruv">

     demo1_dhruv

  </description>
  <author>root</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/demo1_dhruv</url>
  <depend package="roscpp"/>
  <depend package="base_libs"/>

</package><package name="kurt_base" path="" repo="kurt_driver" repo_host="http://kos.informatik.uni-osnabrueck.de/kurt_driver.git">
  <description brief="driver for KURT robots">

     This package contains a driver for KURT mobile robot bases and for their laser rotation units.

  </description>
  <author>Jochen Sprickerhof</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/kurt_base</url>
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="tf"/>

</package><package name="player_log_actarray" path="/controllers/player_log_actarray" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description>
    Convert Player actarray messages to ROS.
  </description>

  <author>Radu Bogdan Rusu</author>
  <license>BSD</license>

  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="tf"/>
  <depend package="angles"/>
  <depend package="eigen"/>
  <depend package="kdl"/>
  <depend package="mapping_srvs"/>
  <depend package="point_cloud_mapping"/>

  <export>
    <cpp cflags="-I${prefix}/msg/cpp -I${prefix}/include"/>
  </export>
</package><package name="rbdl" path="" repo="stacks/rbdl" repo_host="git://github.com/laas/rbdl">
  <description brief="RBDL">
    ROS package of the 3rd party package RBDL.

    RBDL, the Rigid Body Dynamics Library. The library contains highly
    efficient code for both forward and inverse dynamics. It includes:
    <ul>
      <li>Recursive Newton Euler Algorithm,</li>
      <li>Composite Rigid Body Algorithm,</li>
      <li>Articulated Body Algorithm.</li>
    </ul>

    The code is written by Martin Felis and heavily inspired by the
    pseudo code of the book &quot;Rigid Body Dynamics Algorithms&quot; of Roy
    Featherstone.
  </description>
  <author>Packaged by Thomas Moulard/thomas.moulard@gmail.com</author>
  <license>zlib</license>
  <review notes="" status="experimental"/>
  <url>http://rbdl.bitbucket.org/</url>

  <export>
    <cpp cflags="-I${prefix}/install/include -I${prefix}/install/include/rbdl `pkg-config  --cflags eigen3`" lflags="-L${prefix}/install/lib -Wl,-rpath,${prefix}/install/lib `pkg-config  --libs eigen3` -lrbdl"/>

    <rosdoc config="rosdoc.yaml"/>
  </export>

  <versioncontrol type="hg" url="https://bitbucket.org/rbdl/rbdl"/>

  <depend package="urdf"/>
  <depend package="urdf_interface"/>

  <rosdep name="eigen"/>
  <rosdep name="libunittest++"/>
</package><package name="ardros" path="/trunk/ros/ardros" repo="drh-robotics-ros" repo_host="http://drh-robotics-ros.googlecode.com/svn">
  <description brief="ardros">

     Arduino based robot controlled via ROS: Ard(uino)Ros

  </description>
  <author>Dr. Rainer Hessmer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ardros</url>
  <depend package="std_msgs"/>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="tf"/>
  <depend package="joy"/>
  <depend package="move_base_msgs"/>
  <depend package="actionlib"/>
</package><package name="photo" path="/trunk/stacks/bosch_drivers/photo" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="A generic driver for digital cameras based on gphoto2"/>
  <author>Benjamin Pitzer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="opencv2"/>
  <depend package="self_test"/>
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/srv/cpp" lflags="-L${prefix}/lib"/>
  </export>
  <rosdep name="libgphoto-dev"/>
</package><package name="hand_kinematics" path="" repo="sr_contrib" repo_host="lp:sr-contrib">
  <description brief="hand_kinematics">

    Computation of forward and inverse kinematics for the fingers of the Shadow Hand, including coupling.

  </description>
  <author>Juan Antonio Corrales Ramon (UPMC)</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hand_kinematics</url>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="urdf"/>
  <depend package="kdl_parser"/>
  <depend package="kdl_coupling"/>
  <depend package="orocos_kdl"/>
  <depend package="sensor_msgs"/>
  <depend package="tf_conversions"/>
  <depend package="kinematics_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="pr2_mechanism_msgs"/>
  <!-- uncomment the following if you want the plugin interface -->
  <!--  <depend package="pluginlib"/>
  <depend package="kinematics_base"/>
  <export>
	  <kinematics_base plugin="${prefix}/hand_kinematics_plugins.xml" />
  </export>
     -->
</package><package name="rqt_py_console" path="" repo="rqt" repo_host="https://kforge.ros.org/visualization/rqt">
  <description brief="rqt_py_console">
      rqt_py_console is a Python GUI plugin providing an interactive Python console.
  </description>
  <author>Dorian Scholz</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rqt_py_console</url>
  <depend package="rospy"/>
  <depend package="qt_gui"/>
  <depend package="qt_gui_py_common"/>
  <export>
      <rqt_gui plugin="${prefix}/plugin.xml"/>
  </export>

</package><package name="interactive_waypoint_markers" path="" repo="parsec" repo_host="https://code.google.com/p/parsec">
  <description brief="interactive_waypoint_markers">

     interactive_waypoint_markers

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>Apache 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/interactive_waypoint_markers</url>
  <depend package="rospy"/>
  <depend package="navigation_waypoints_server"/>
  <depend package="interactive_markers"/>
  <depend package="actionlib"/>

</package><package name="pr2eus" path="/trunk/pr2eus" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="pr2eus">

     pr2eus

  </description>
  <author>Kei Okada</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2eus</url>

  <depend package="roseus"/>
  <depend package="euscollada"/>
  <depend package="pr2_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="move_base_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="dynamic_reconfigure"/>

  <depend package="sound_play"/>
</package><package name="rgbd2cloud" path="/trunk/freiburg_tools/rgbd2cloud" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="rgbd2cloud">

    This package be used to subscribe to the kinect (rgb/mono and) depth images 
    and reconstruct the (colored) point cloud.

    To reconstruct point clouds from openni depth images:
    <tt>rosrun depth2cloud depth2cloud depth_image:=/camera/depth/image camera_info:=/camera/depth/camera_info</tt>

    To reconstruct rgb point clouds from openni rgb+depth imagess:
    <tt>rosrun rgbd2cloud rgbd2cloud rgb_image:=/camera/rgb/image_color depth_image:=/camera/depth/image camera_info:=/camera/depth/camera_info</tt>

    Or (for grayscale clouds):
    <tt>rosrun rgbd2cloud rgbd2cloud rgb_image:=/camera/rgb/image_mono depth_image:=/camera/depth/image camera_info:=/camera/depth/camera_info</tt>
  </description>
  <author>Felix Endres</author>
  <license>CC BY</license>
  <review notes="" status="unreviewed"/>

  <depend package="pcl"/>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="message_filters"/>
</package><package name="rosserial_adk_demo" path="" repo="rosserial_android" repo_host="https://kforge.ros.org/rosserial/android">
  <description brief="rosserial_adk_demo">

     rosserial_adk_demo contains example firmware for use with the 
     Android ADK and rosserial_android.  

  </description>
  <author>Adam Stambler</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosserial_adk_demo</url>
  <depend package="rosserial_arduino"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="rosserial_adk_demo_msgs"/>

</package><package name="PhidgetMotor" path="/trunk/Diamondback/Corobot/PhidgetMotor" repo="roscorobot" repo_host="http://svn.code.sf.net/p/roscorobot/code">
  <description brief="PhidgetMotor">

     A service to control the robot drive motors using the 
    Phidget HC Motor Control

    This package depends on the Phidgets client library being
    installed manually from
    http://www.phidgets.com/downloads/libraries/libphidget_2.1.8.20111028.tar.gz
    and then the Python module from
    http://www.phidgets.com/downloads/libraries/PhidgetsPython_2.1.8.20111028.zip

  </description>
  <author>Bill Mania/bmania@coroware.com</author>
  <license>Copyright 2011 Coroware, Inc.</license>
  <review notes="" status="unreviewed"/>
  <url/>
  <depend package="std_msgs"/>
  <depend package="rospy"/>
  <rosdep name="python"/>
  <depend package="corobot_srvs"/>
  <depend package="corobot_msgs"/>

</package><package name="meshset3d_tools" path="/trunk/stacks/bosch_surface_reconstruction/meshset3d_tools" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="meshset3d_tools">

     meshset3d_tools

  </description>
  <author>Benjamin Pitzer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/meshset3d_tools</url>
  <depend package="roscpp"/>
  <depend package="rtc"/>
</package><package name="mod_dialog" path="/knowledge/mod_dialog" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="mod_dialog">

    Simple dialog module to talk to KnowRob using natural language
    queries and responses.

  </description>
  <author>Moritz Tenorth</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/mod_dialog</url>

  <depend package="mod_vis"/>
  <depend package="rosjava_jni"/>
  <depend package="std_msgs"/>
  <depend package="mary_tts"/>
  <depend package="comp_ehow"/>
  <depend package="jpl"/>
  <depend package="srldb"/>
  <depend package="json_prolog"/>

  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>
</package><package name="imu_um6" path="/trunk/imu_um6" repo="aptima-ros-pkg" repo_host="http://aptima-ros-pkg.googlecode.com/svn">
  <description brief="imu_um6">
This package is a ROS driver for the CH Robotics UM6 IMU
  </description>
  <author>Jeff Rousseau</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/imu_um6</url>

  <depend package="rospy"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="tf"/>

</package><package name="rtt_ros_integration_example" path="" repo="rtt_ros_integration" repo_host="http://git.mech.kuleuven.be/robotics/rtt_ros_integration.git">
  <description brief="rtt_ros_integration_example">

    rtt_ros_integration_example provides a very basic example. A HelloRobot component with two input and two output ports is created. You can use 'rostopic echo/pub' to read from and write to them, e.g: rostopic pub /string_in std_msgs/String 'Hi, HelloRobot component'

  </description>
  <author>Ruben Smits, ruben.smits@mech.kuleuven.be</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rtt_ros_integration_example</url>
  <depend package="rtt"/>
  <depend package="rtt_rosnode"/>
  <depend package="std_msgs"/>

</package><package name="germandeli_crawler" path="/utils/germandeli_crawler" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="germandeli_crawler">
Germandeli_crawler will download structure and the images of the site www.germandeli.com

===============START=========================
To run the crawler execute the following command:
&quot;python3.1 start_extracting.py absolute_path_to_target_data_dir&quot;

===============ABOUT=========================
The script first extracts the structure of the site in the structure.xml file in the data directory. 
It than follows this file to do the actual extraction of the images. The images are stored in the data 
directory in subfolders, which follow the structure of the site. Additionally some  information 
(like product description, link, id, etc.) is added for every product in the structure.xml file and 
each page is marked as traced, so if the script is interrupted it can continue the crawling, when it is started again.
  </description>
  <author>Vladimir Haltakov, Dejan Pangercic</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/germandeli_crawler</url>
  <depend package="rospy"/>
</package><package name="track_image_contours" path="" repo="flyatar" repo_host="http://github.com/peterpolidoro/Flyatar">
  <description brief="track_image_points">

     track_image_points

  </description>
  <author>Peter Polidoro</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url/>
  <depend package="sensor_msgs"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="rospy"/>
  <depend package="std_msgs"/>
  <depend package="camera1394v2"/>
  <depend package="plate_tf"/>

</package><package name="schunk_hardware_config" path="" repo="schunk_robots" repo_host="git://github.com/ipa320/schunk_robots">
  <description brief="schunk_hardware_config">

     This package contains an example configuration for each Schunk component.

  </description>
  <author>Florian Weisshardt</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/schunk_hardware_config</url>
  <depend package="cob_description"/>
  <depend package="schunk_description"/>
  <depend package="schunk_sdh"/>
  <depend package="schunk_powercube_chain"/>

</package><package name="cob_object_handler" path="" repo="cob_manipulation" repo_host="git://github.com/ipa320/cob_manipulation">
  <description brief="cob_object_handler">

     cob_object_handler

  </description>
  <author>Felix Messmer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_object_handler</url>
  <depend package="roscpp"/>
  <depend package="actionlib"/>
  <depend package="arm_navigation_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="tf"/>
  <depend package="geometric_shapes"/>
  <depend package="planning_environment"/>
  <depend package="cob_object_detection_msgs"/>
</package><package name="cram_roslisp_common" path="" repo="cram_highlevel" repo_host="https://github.com/moesenle/cram_highlevel">
  <description brief="cram_roslisp_common">

     cram_roslisp_common

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cram_roslisp_common</url>
  <depend package="roslisp_runtime"/>
  <depend package="cram_utilities"/>
  <depend package="cl_tf"/>

</package><package name="pr2_navigation_slam" path="" repo="pr2_navigation" repo_host="https://kforge.ros.org/pr2navigation/hg">
  <description brief="XML files for running SLAM with the move_base node on a PR2 robot.">
    This package holds launch files for running the <a href="http://www.ros.org/wiki/move_base">move_base</a> node in conjunction with [[gmapping | SLAM]] on a PR2 robot.
  </description>
  <author>Eitan Marder-Eppstein</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_navigation_slam</url>
  <depend package="gmapping"/>
  <depend package="pr2_machine"/>
  <depend package="move_base"/>
  <depend package="pr2_navigation_config"/>
  <depend package="pr2_move_base"/>
  <depend package="topic_tools"/>

</package><package name="face_follower" path="/branches/stable/wu_pr2_demos/face_follower" repo="wu-ros-pkg" repo_host="https://wu-robotics.googlecode.com/svn">
  <description brief="Make the PR2 look at faces">
    A demonstration of face recognition, by having the PR2 point its head at faces that it detects. 
  </description>
  <author>Dan Lazewatsky</author>
  <license>BSD</license>
  <url>http://ros.org/wiki/face_follower</url>
  <depend package="rospy"/>
  <depend package="face_detector"/>
  <depend package="people_msgs"/>
  <depend package="tf"/>
  <depend package="image_geometry"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
</package><package name="camera_offsetter" path="/stacks/robot_calibration/trunk/camera_offsetter" repo="robot_calibration" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Hand tweak camera extrinsics. (unstable)">
     Provides a tool to make small changes to the location of a monocular camera or stereocamera attached to the robot. This package is still an unstable and experimental package.  The interface is a work in progress that will be changing.
  </description>
  <author>Vijay Pradeep, Alex Sorokin</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://pr.willowgarage.com/wiki/camera_offsetter</url>

  <!-- ROS -->
  <depend package="roscpp"/>

  <!-- geometry -->
  <depend package="tf"/>

  <!-- common_msgs -->
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>

  <!-- stereo -->
  <depend package="stereo_msgs"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="hyp_filter" path="/trunk/recognition/hyp_filter" repo="ubc-ros-pkg" repo_host="https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg">
  <description brief="hyp_filter">
	A node that filters hypothesis generated by a detector based on the 
	precision-recall curve for that particluar class and/or algorithm. 
	It is responsible for assigning a confidence score to each detection 
	hypothesis which can be used to compare detection confidences across 
	algorithms and classes.   
  </description>
  <author>Ankur Gupta</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hyp_filter</url>
  <depend package="rospy"/>
  <depend package="recognition_msgs"/>
  <depend package="pyUtils"/>   
</package><package name="rtcus_motion_models" path="/trunk/rtcus_mobile_robots/rtcus_motion_models" repo="rtc-us-ros-pkg-trunk" repo_host="https://rtc-us-ros-pkg.svn.sourceforge.net/svnroot/rtc-us-ros-pkg">
  <description brief="rtcus_motion_models">

     This package provides a template library to design different motion models making possible parametrize the type of the representations of the state, actions and time.
     For instance the state could consider dynamic variables or not. Moreover the state, actions or time could be represented with a probabilistic description following the Probabilistic Robotic Foundations.
     From the simplest transition function x_[t+1]=F(x_t,u,Delta t) a set of more complex functions are generated. Including: sample a trajectory, 
     obtain the final state after a set of asynchronous action history, obtain the final state after a set of actions, etc.
	
  </description>
  <author>Pablo Iñigo Blasco</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rtcus_motion_models</url>
<export>
	<cpp cflags="-I${prefix}/include -I${prefix}/cfg/cpp -I${prefix}/msg_gen/cpp/include" lflags="-L${prefix}/lib"/>
</export>
  <depend package="rtcus_stamp"/>
  <depend package="rtcus_compositions"/>
<depend package="rtcus_nav_msgs"/>
</package><package name="wg_pr2_2dnav" path="/stacks/wg_pr2_apps/trunk/wg_pr2_2dnav" repo="wg_pr2_apps" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="Global navigation for the PR2 robot at Willow Garage.">

     This application allows the PR2 robot to navigate autonomously in the Willow Garage office environment.

  </description>
  <author>Eitan Marder-Eppstein</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/wg_pr2_2dnav</url>
  <depend package="willow_maps"/>
  <depend package="map_server"/>
  <depend package="pr2_navigation_global"/>
  <depend package="pr2_navigation_perception"/>
  <depend package="pr2_navigation_teleop"/>
  <depend package="pr2_machine"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="osc_bridge" path="" repo="rososc" repo_host="https://github.com/Auburn-Automow/rososc">
  <description brief="osc_bridge">

     osc_bridge contains the core functionality of ROS-to-OSC communication.

  </description>
  <author>Michael Carroll</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/osc_bridge</url>
  <depend package="rospy"/>
  <depend package="pytouchosc"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>

  <rosdep name="pybonjour"/>
  <rosdep name="txosc"/>
  <export>
      <rosdoc config="rosdoc.yaml"/>
  </export>
</package><package name="mongodb_log" path="" repo="mongodb_log" repo_host="https://github.com/timn/ros-mongodb_log">
  <description brief="mongodb_log">
    Log ROS messages to MongoDB. Each individual message is converted
    to a document, possibly recursive.
  </description>
  <author>Tim Niemueller</author>
  <license>GPLv2+</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/mongodb_log</url>
  <depend package="roslua"/>
  <depend package="rospy"/>
  <depend package="roslib"/>
  <depend package="rosgraph"/>
  <depend package="rostopic"/>
  <depend package="tf"/>
  <depend package="sensor_msgs"/>
  <!-- <depend package="rviz_intel"/> -->
</package><package name="pr2_teleop_general_jsk_patch" path="/trunk/jsk_ros_patch/pr2_teleop_general_jsk_patch" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="pr2_teleop_general_jsk_patch">

     pr2_teleop_general_jsk_patch

  </description>
  <author>Manabu Saito</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_teleop_general_jsk_patch</url>

  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>

</package><package name="elektron_teleop" path="" repo="elektron_kinectbot" repo_host="https://github.com/RCPRG-ros-pkg/elektron_kinectbot">
  <description brief="elektron_teleop">

     Teleoperation nodes for Elektron mobile robot.

  </description>
  <author>Maciej Stefanczyk</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/elektron_teleop</url>
  <depend package="roscpp"/>
  <depend package="joy"/>
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="elektron_base"/>

</package><package name="tablescan" path="/trunk/resources/tablescan" repo="ubc-ros-pkg" repo_host="https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg">
  <description brief="tablescan">

     tablescan

  </description>
  <author>Matthew Baumann</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/tablescan</url>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>

</package><package name="rosie_description" path="/robot_model/rosie_description" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="rosie_description">

     URDF definitions of the ROSIE platform used at TU Muenchen.

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <depend package="xacro"/>

</package><package name="kurt_freespace" path="" repo="kurt_apps" repo_host="http://kos.informatik.uni-osnabrueck.de/kurt_apps.git">
  <description brief="Simple obstacle avoidance behavior">

    <p>
      This node implements a simple &quot;freespace&quot; (obstacle avoidance) behavior.
      It subscribes to a 2D laser scan and always tries to steer towards the
      largest open space.
    </p>

    <p>
      It was tested on the Kurt robot platform, but should work on any robot
      that has a 2D laser scanner and accepts
      <a href="http://www.ros.org/doc/api/geometry_msgs/html/msg/Twist.html">Twist</a>
      messages.
    </p>

  </description>
  <author>Jochen Sprickerhof</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/kurt_freespace</url>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>

</package><package name="windsonic" path="/stacks/lse_anemometer_drivers/trunk/windsonic" repo="lse_anemometer_drivers" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="windsonic">

     A ROS node to provide access to Gill Instruments Windsonic, an ultrasonic wind sensor.

  </description>
  <author>Gonçalo Cabrita</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/windsonic</url>
  <depend package="roscpp"/>
  <depend package="cereal_port"/>
  <depend package="lse_sensor_msgs"/>

</package><package name="schunk_arm_kinematics_constraint_aware" path="" repo="uuisrc-ros-pkg" repo_host="https://github.com/cburbridge/uuisrc-ros-pkg">
  <description brief="schunk_arm_kinematics_constraint_aware">

     schunk_arm_kinematics_constraint_aware

  </description>
  <author>Lorenzo Riano</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/schunk_arm_kinematics_constraint_aware</url>

  <depend package="roscpp"/>
  <depend package="kdl"/>
  <depend package="eigen"/>
  <depend package="angles"/>
  <depend package="tf_conversions"/>
  <depend package="urdf"/>
  <depend package="geometry_msgs"/>
  <depend package="kdl_parser"/>

  <depend package="kinematics_msgs"/>  
  <depend package="tf"/>
  <depend package="sensor_msgs"/>
  <depend package="kinematics_msgs"/>
  <depend package="motion_planning_msgs"/>
  <depend package="collision_space"/>
  <depend package="planning_models"/>
  <depend package="planning_environment"/>
  <depend package="mapping_msgs"/>
  <depend package="visualization_msgs"/>

</package><package name="ds_webinterface" path="/trunk/stacks/drink_serving/ds_webinterface" repo="bosch-ros-pkg-e" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg-e/code">
  <description brief="drinkserving_webinterface">

     drinkserving_webinterface

  </description>
  <author>Sarah Osentoski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/drinkserving_webinterface</url>
  <depend package="rosjs"/>
  <depend package="rosjs_common"/>
</package><package name="qnd_calibration" path="/trunk/sandbox/qnd_calibration" repo="vanadium-ros-pkg" repo_host="http://vanadium-ros-pkg.googlecode.com/svn">
  <description brief="qnd_calibration">

     qnd_calibration

  </description>
  <author>Michael Ferguson</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/qnd_calibration</url>
  <depend package="roscpp"/>
  <depend package="pcl_ros"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="sensor_msgs"/>
  <depend package="tf"/>

</package><package name="sot_pr2" path="" repo="stacks/redundant_manipulator_control" repo_host="git://github.com/laas/redundant_manipulator_control">
  <description brief="Dynamic graph PR-2 package">

    PR-2 real-time controller for dynamic-graph.

    Gather dedicated dynamic-graph entities, humanoid robot python
    classs definition and PR-2 real-time controller.

  </description>
  <author>Thomas Moulard</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sot_pr2</url>

  <export>
    <pr2_controller_interface plugin="${prefix}/controller_plugins.xml"/>
    <rosdoc config="rosdoc.yaml"/>
  </export>

  <rosdep name="dynamic-graph"/>
  <rosdep name="dynamic-graph-python"/>
  <rosdep name="sot-core"/>
  <rosdep name="sot-dynamic"/>

  <depend package="pr2_controller_interface"/>
  <depend package="pr2_mechanism_model"/>
  <depend package="control_toolbox"/>

  <depend package="urdf"/>
  <depend package="urdf_interface"/>

  <depend package="dynamic_graph_bridge"/>
  <depend package="jrl_dynamics_urdf"/>
</package><package name="geometric_semantics_examples" path="" repo="geometric_relations_semantics" repo_host="http://git.mech.kuleuven.be/robotics/geometric_relations_semantics.git">
  <description brief="geometric_semantics_examples">

      <a href="http://www.ros.org/wiki/geometric_semantics_examples">geometric_semantics_examples</a> groups some examples showing how the <a href="http://www.ros.org/wiki/geometric_semantics">geometric_semantics</a> can be used to provide semantic checking for the geometric relations between rigid bodies in your application.

  </description>
  <author>Tinne De Laet</author>
  <license>LGPLv2.1/BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.orocos.org/wiki/geometric-relations-semantics-wiki</url> 
  <depend package="geometric_semantics_kdl"/>
  <export>
        <rosdoc config="rosdoc.yaml"/>
   </export>
</package><package name="wubble_actions" path="/trunk/arrg/ua_controllers/wubble_actions" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="Action libraries for various controllers of the Wubble robot">
        wubble_actions
    </description>

    <author>Anh Tran</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/wubble_actions</url>

    <depend package="rospy"/>
    <depend package="roslib"/>
    <depend package="std_msgs"/>
    <depend package="geometry_msgs"/>
    <depend package="actionlib_msgs"/>
    <depend package="move_base_msgs"/>
    <depend package="pr2_msgs"/>
    <depend package="pr2_controllers_msgs"/>
    <depend package="actionlib"/>
    <depend package="tf"/>
    <depend package="smart_arm_controller"/>
    <depend package="smart_arm_kinematics"/>
    <depend package="wubble_controllers"/>

    <depend package="dynamixel_controllers"/>
    <depend package="dynamixel_msgs"/>
    <depend package="dynamixel_driver"/>
</package><package name="hueblob" path="" repo="stacks/hueblob" repo_host="git://github.com/laas/hueblob">
  <description brief="Hue blob stereo tracking">

    Stereo tracking of a color blob.

    Based on the hueblob LAAS robotics component by Anthony Mallet.

  </description>
  <author>Duong Dang, Thomas Moulard/thomas.moulard@gmail.com</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/hueblob</url>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lnodelet"/>
    <nodelet plugin="${prefix}/nodelet_plugins.xml"/>
    <rosdoc config="rosdoc.yaml"/>
  </export>
  <depend package="nodelet"/>
  <depend package="std_msgs"/>
  <depend package="yaml_cpp"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <!-- <depend package="pcl_visualization"/> -->
  <depend package="eigen"/>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="stereo_msgs"/>
  <depend package="image_transport"/>
  <depend package="geometry_msgs"/>
  <depend package="cv_bridge"/>
  <depend package="bullet"/>
  <depend package="visualization_msgs"/>
  <depend package="roslib"/>
  <depend package="resource_retriever"/>

  <rosdep name="opencv2.3"/>
</package><package name="rfid_nav2" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="rfid_nav2">

     rfid_nav2: A snapshot of rfid_nav used for RFID experiments.

  </description>
  <author>Travis Deyle</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rfid_nav</url>
  <depend package="pr2_navigation_slam"/>
  <depend package="pr2_navigation_perception"/>
  <depend package="pr2_navigation_teleop"/>
  <depend package="pr2_machine"/>
  <depend package="move_base"/>
  <depend package="sbpl"/>

</package><package name="ros_rt_wmp_msgs" path="" repo="unizar-rt-wmp-ros-pkg" repo_host="https://github.com/dantard/unizar-rt-wmp-ros-pkg">
  <description brief="ros_rt_wmp_msgs">

     ros_rt_wmp_msgs

  </description>
  <author>Pablo Urcola</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ros_rt_wmp_msgs</url>
  <depend package="roscpp"/>

</package><package name="follower" path="/trunk/kinect_utils/follower" repo="mit-ros-pkg-trunk" repo_host="https://svn.csail.mit.edu/mit-ros-pkg">
  <description brief="follower">

     follower

  </description>
  <author>Garratt</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/follower</url>
  <depend package="pcl_tools"/>
  <depend package="eigen"/>
  <depend package="tf"/>
  <depend package="nnn"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="nav_msgs"/>


</package><package name="roboptim-core" path="" repo="stacks/roboptim" repo_host="git://github.com/laas/roboptim">
  <description brief="RobOptim core layer">

    RobOptim core is a toolbox for numerical optimization
    applied to robotics.

  </description>
  <author>See package AUTHORS file.</author>
  <license>LGPL</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/roboptim-core</url>

  <export>
    <rosdoc external="http://laas.github.com/roboptim-core/doxygen/HEAD/index.html"/>
  </export>
  <rosdep name="boost"/>
  <rosdep name="libtool"/>

  <versioncontrol type="git" url="git://github.com/laas/roboptim-core.git"/>
</package><package name="flsl" path="/trunk/cturtle/flsl" repo="seabee3-ros-pkg" repo_host="http://seabee3-ros-pkg.googlecode.com/svn">
  <description brief="flsl">

     Filtered Landmark Sampling for Localization

  </description>
  <author>Edward T. Kaszubski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/flsl</url>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="geometry_msgs"/>
  <depend package="std_msgs"/>
  <depend package="opencv2"/>
  <depend package="localization_defs"/>
  <depend package="landmark_map_server"/>
  <depend package="landmark_finder"/>
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp -I${prefix}/srv/cpp" lflags="-L/{prefix}/lib"/>
  </export>
</package><package name="parallel_tools" path="/trunk/parallel_tools" repo="mit-ros-pkg-trunk" repo_host="https://svn.csail.mit.edu/mit-ros-pkg">
  <description brief="parallel_tools">

     parallel_tools

  </description>
  <author>garratt</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/parallel_tools</url>
  <depend package="roscpp"/>
 <export>
    <cpp cflags=" -I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib "/>
  </export>

</package><package name="sr_ethercat_hand_config" path="" repo="sr_config" repo_host="lp:sr-config">
  <description brief="sr_ethercat_hand_config">

    sr_ethercat_hand_config contains the different yaml files storing the parameters used on the etherCAT hand.

  </description>
  <author>Ugo Cupcic</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sr_ethercat_hand_config</url>

</package><package name="aruco_pose" path="/perception/aruco_pose" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">

	<description brief="aruco_pose">Marker tracking using aruco.</description>
	<author>Julian Brunner</author>
	<license>GPLv3</license>

	<depend package="roscpp"/>
	<depend package="tf"/>
	<depend package="opencv2"/>
	<depend package="cv_bridge"/>
	<depend package="image_transport"/>
	<depend package="image_geometry"/>
	<depend package="sensor_msgs"/>
	<depend package="visualization_msgs"/>

    <export>
        <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib  -L${prefix}/lib -larucotracker"/>
    </export>

</package><package name="sbpl_two_arm_interface" path="/sbpl_arm_planning/trunk/sbpl_two_arm_interface" repo="sbpl_arm_planning" repo_host="https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs">
  <description brief="sbpl_two_arm_planner_interface">

    sbpl_two_arm_planner_interface

  </description>
  <author>Benjamin Cohen/bcohen@seas.upenn.edu</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.ros.org/wiki/sbpl_two_arm_planner_interface</url>


  <depend package="angles"/>
  <depend package="kdl"/>
  <depend package="urdf"/>
  <depend package="kinematics_msgs"/>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="moveit_msgs"/>
  <depend package="geometric_shapes"/>
  <depend package="geometry_msgs"/>
  <depend package="kdl_parser"/>
  <depend package="planning_scene"/>
  <depend package="planning_scene_monitor"/>
  <depend package="kinematics_plugin_loader"/>
  <depend package="kinematics_base"/>

  <depend package="sbpl_arm_planner"/>
	<depend package="sbpl_two_arm_planner"/>
	<depend package="sbpl_arm_planner_interface"/>
  <depend package="visualize_arm"/>

    <export>
      <cpp cflags="-I${prefix}/include  -O3 -g" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib  -lsbpl_two_arm_interface"/>
    </export>


</package><package name="rtt_ros_integration_std_msgs" path="" repo="orocos_toolchain_ros" repo_host="http://git.mech.kuleuven.be/robotics/orocos_toolchain_ros.git">
  <description brief="rtt_ros_integration_std_msgs">
    
    Provides all rtt typekits for ROS std_msgs
    
  </description>
  <author>Ruben Smits ruben.smits@mech.kuleuven.be</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rtt_ros_integration_std_msgs</url>
  <depend package="rtt_ros_integration"/>
  <depend package="std_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>


</package><package name="rcf_com_ocr4ros" path="/trunk/RCF4ROS/com/rcf_com_ocr4ros" repo="roblab-whge-ros-pkg" repo_host="http://roblab-whge-ros-pkg.googlecode.com/svn">
  <description brief="rcf_com_ocr4ros">

     rcf_com_ocr4ros

	Provides doorplate information in the rcf.

  </description>
  <author>B. König</author>
  <license>CreativeCommons BY-NC-SA License</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rcf_com_ocr4ros</url>
  <depend package="roscpp"/>
  <depend package="rcf_control_protocol"/>
  <depend package="visualization_msgs"/>

</package><package name="task_manager" path="" repo="usc-clmc-ros-pkg" repo_host="https://github.com/usc-clmc/usc-clmc-ros-pkg">
  <description brief="task_manager">

     task_manager

  </description>
  <author>Peter Pastor</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/task_manager</url>

  <depend package="roscpp"/>
  <depend package="pluginlib"/>
  <depend package="policy_library"/>

  <depend package="usc_utilities"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -ltask_manager"/>
    <task_manager plugin="${prefix}/test/task_plugin_test.xml"/>
  </export>

</package><package name="srs_likelihood_calculation" path="" repo="srs_public" repo_host="git://github.com/ipa320/srs_public">
  <description brief="srs_likelihood_calculation">

     srs_likelihood_calculation

  </description>
  <author>Administrator</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/likelihood_calculation</url>
  <depend package="std_msgs"/>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="actionlib"/>
  <depend package="srs_decision_making"/>

</package><package name="visp" path="" repo="stacks/vision_visp" repo_host="git://github.com/laas/vision_visp">
  <description brief="ViSP, the Visual Servoing Platform">
    ViSP, standing for Visual Servoing Platform, is unique. This software
    is a complete cross-platform solution that allows prototyping and
    developing applications in visual tracking and visual servoing.

    ViSP can be useful in robotics, computer vision, augmented reality and
    computer animation.

    This package is based on the original visp package from Steven
    Bellens.
  </description>
  <author>INRIA Rennes - Bretagne Atlantique</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.irisa.fr/lagadic/visp</url>

  <export>
    <cpp cflags="`${prefix}/install/bin/visp-config --cflags`" lflags="`${prefix}/install/bin/visp-config --libs`"/>

    <rosdoc config="rosdoc.yaml"/>
  </export>

  <versioncontrol type="svn" url="svn://scm.gforge.inria.fr/svn/visp"/>

  <depend package="opencv2"/>

  <rosdep name="pkg-config"/>
  <rosdep name="libdc1394-dev"/>
  <rosdep name="libxml2"/>
  <rosdep name="libjpeg"/>
  <rosdep name="libpng12-dev"/>

  <rosdep name="liblapack-dev"/>
  <rosdep name="libcoin60-dev"/>
  <rosdep name="libsoqt4-dev"/>
  <rosdep name="gtk2"/>
</package><package name="hokuyo_urg_description" path="/trunk/arrg/ua_robots/hokuyo_urg_description" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="3D Meshes and URDF for Hokuyo URG Laser">

     hokuyo_urg_description

    </description>
    <author>UA Robotics Research Group</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/hokuyo_urg_description</url>

    <depend package="convex_decomposition"/>
    <depend package="ivcon"/>
    <depend package="urdf"/>

</package><package name="lidar_tracking" path="/sbpl_dynamic_env/trunk/lidar_tracking" repo="sbpl_dynamic_env" repo_host="https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs">
  <description brief="lidar_tracking">

A very simple (and not very robust) node for tracking dynamic obstacles using lidar. 

  </description>
  <author>Michael Phillips</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/fake_tracking</url>
  <depend package="roscpp"/>
  <depend package="rosconsole"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="dynamic_obs_msgs"/>
  <depend package="tf"/>
  <depend package="costmap_2d"/>

</package><package name="pick_and_place_demo_app" path="/stacks/pr2_object_manipulation/branches/0.6-branch/applications/pick_and_place_demo_app" repo="pr2_object_manipulation" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pick_and_place_demo_app">

     pick_and_place_demo_app

  </description>
  <author>Kaijen Hsiao</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pick_and_place_demo_app</url>

  <depend package="pr2_pick_and_place_demos"/>

</package><package name="opencv_tests" path="/stacks/vision_opencv/trunk/opencv_tests" repo="vision_opencv" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="opencv_tests">

     opencv_tests

  </description>
  <author>James Bowman</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://pr.willowgarage.com/wiki/opencv_tests</url>
  <depend package="cv_bridge"/>
  <depend package="rostest"/>
  <depend package="rospy"/>
  <depend package="sensor_msgs"/>
  <depend package="opencv2"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
  <rosdep name="opencv2"/>
</package><package name="deap" path="/trunk/rtcus_cognitive/deap" repo="rtc-us-ros-pkg-trunk" repo_host="https://rtc-us-ros-pkg.svn.sourceforge.net/svnroot/rtc-us-ros-pkg">
  <description brief="deap">
     This package is a wrapper of the &quot;Distributed evolutionary algorithms in python&quot; designed and developed by François-Michel De Rainville, Félix-Antoine Fortin and Marc-André Gardner.

It is useful to research about evolutive robotics or as a mechanism to solve optimization problems.
  </description>
  <author>Pablo Iñigo Blasco</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/deap</url>
  <export>
  	<python path="${prefix}/deap-0.6/"/>
  </export>
</package><package name="hector_quadrotor_ptam" path="/trunk/hector_quadrotor_experimental/hector_quadrotor_ptam" repo="hector_quadrotor_experimental" repo_host="https://tu-darmstadt-ros-pkg.googlecode.com/svn">
  <description brief="hector_quadrotor_ptam demonstrates the use of the ptam Visual SLAM package on a simulated quadrotor UAV">

     hector_quadrotor_ptam demonstrates the use of the ptam Visual SLAM package on a simulated quadrotor UAV

  </description>
  <author>Stefan Kohlbrecher</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hector_quadrotor_ptam</url>
  
  <depend package="ptam"/>
  <depend package="hector_nist_arena_worlds"/>
  <depend package="hector_quadrotor_gazebo"/>

</package><package name="mtrace_tools" path="/stacks/wg_hardware_test/trunk/mtrace_tools" repo="wg_hardware_test" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="mtrace_tools">

     Tools for viewing ethercat_hardware/MotorTrace messages from pr2_etherCAT

  </description>
  <author>Derek</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/mtrace_tools</url>
  <depend package="rospy"/>
  <depend package="ethercat_hardware"/>

</package><package name="webots_joy_demo" path="/trunk/kaist_webots/webots_joy_demo" repo="kaist_webots" repo_host="https://kaist-ros-pkg.googlecode.com/svn">
  <description brief="Webots joystick controller demo for ROS">
This is an example of a Webots Controller written in C++, running as a ROS Node. 
It demonstrates how to build a ROS package linked against the Webots CppLibrary, control a robot using ROS messages, and start the simulation from a single launch file.

The 'joy' node from the 'joystick_drivers' stack receives input from a USB joystick and publishes the state of the buttons and axes on the '/joy' topic.
This node uses that input to drive a simple simulated robot in Webots.
Speed commands are sent to the differential drive model using the Webots C++ API.

Tested with Webots 6.4.4, ROS Fuerte and Microsoft Xbox-360 joystick.
  </description>
  <author>David Butterworth. Based on work by Andreas Breitenser and Olivier Michel.</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/webots_joy_demo</url>
  <depend package="std_msgs"/>
  <depend package="roscpp"/>
  <depend package="joy"/>
  <depend package="webots_run"/>

</package><package name="cob_leptonica" path="" repo="cob_object_perception" repo_host="git://github.com/ipa320/cob_object_perception">
  <description brief="cob_leptonica">

     ROS wrapper for leptonica (http://www.leptonica.org/). Follows the procedure applied in package leptonica.

  </description>
  <author>Richard Bormann</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_leptonica</url>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -llept"/>
  </export>

</package><package name="kurtana_bringup" path="" repo="kurtana_robot" repo_host="http://kos.informatik.uni-osnabrueck.de/kurtana_robot.git">
  <description brief="kurtana_bringup">

     kurtana_bringup

  </description>
  <author>Martin Günther</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/kurtana_bringup</url>

</package><package name="sift_detector" path="/trunk/recognition/sift_detector" repo="ubc-ros-pkg" repo_host="https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg">
  <description brief="sift_detector">

     This package contains the object detector based upon sift matching, most of the 
     code residing in src/sift_detector/nodes
     
     sift_driver contains the functions to train sift detector nodes and to run these 
     nodes. This module is primiarly an interface between the sift-detector and ros. 
     The node itself contains a set of detectors (one for each category) and listens 
     for detection_request messages and returns hypothesis messages.
     
     srvc_matcher actually does the detection and the detection with the help help of the 
     other modules. It is possible to disentangle this and use it seperately from ros.
     
      bin/keypoints is binary for the sift feature extractor, whose code we cannot release.
  </description>
  <author>Scott Helmer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sift_detector</url>
  <depend package="rospy"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="batchdetector"/>
  <depend package="recognition_msgs"/>
  <depend package="scene_server"/>
</package><package name="cwru_vision" path="" repo="cwru-ros-pkg" repo_host="http://github.com/cwru-robotics/cwru-ros-pkg">
  <description brief="cwru_vision">

     cwru_vision

  </description>
  <author>Eric Perko</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cwru_vision</url>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="cwru_base"/>
  <depend package="opencv2"/>
  <depend package="image_transport"/>
  <depend package="image_geometry"/>
  <depend package="tf"/>
  <depend package="cv_bridge"/>
  <depend package="geometry_msgs"/>
  <depend package="image_proc"/>

</package><package name="rtt_ros_integration_nav_msgs" path="" repo="orocos_toolchain_ros" repo_host="http://git.mech.kuleuven.be/robotics/orocos_toolchain_ros.git">
  <description brief="rtt_ros_integration_nav_msgs">
    
    Provides all rtt typekits for ROS nav_msgs
    
  </description>
  <author>Steven Bellens steven.bellens@mech.kuleuven.be</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rtt_ros_integration_nav_msgs</url>
  <depend package="rtt_ros_integration"/>
  <depend package="rtt_ros_integration_geometry_msgs"/>
  <depend package="nav_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>


</package><package name="srs_object_verification" path="" repo="srs_public" repo_host="git://github.com/ipa320/srs_public">
  <description brief="srs_object_verification">

     srs_object_verification

  </description>
  <author>Georg Arbeiter</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/srs_object_verification</url>

  <!--depend package="srs_semantics_db"/-->
  <!--depend package="gdatabase"/-->
  <depend package="cob_3d_mapping_msgs"/>
  <depend package="pcl"/>
  <depend package="smach"/>
  <depend package="smach_ros"/>
  <depend package="geometry_msgs"/>

</package><package name="rosbridge" path="/trunk/distribution/brown_remotelab/rosbridge" repo="brown-ros-pkg" repo_host="http://brown-ros-pkg.googlecode.com/svn">
  <description brief="rosbridge">
rosbridge allows dynamic socket and web-socket based access to the full capabilities of ROS. A lightweight binding to Javascript for websocket-capable web browsers is included (ros.js), but access from any language supporting sockets and JSON is easy.
  </description>

  <author>Graylin Trevor Jay</author>
  <email>tjay@cs.brown.edu</email>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>

  <depend package="rospy"/>
  <depend package="std_msgs"/>

</package><package name="planning_environment" path="" repo="arm_navigation" repo_host="https://kforge.ros.org/armnavigation/armnavigation">
  <description brief="planning_environment">

    Define the robot model and collision environment based on ROS
    parameters. 

  </description>
  <author>Ioan Sucan</author>
  <license>BSD</license>
  <review notes="" status="API Reviewed"/>
  
  <depend package="roscpp"/>
  <depend package="rosconsole"/>
  <depend package="rosbag"/>
  <depend package="actionlib_msgs"/>
  <depend package="actionlib"/>
  <depend package="tf"/>
  <depend package="std_srvs"/>
  <depend package="message_filters"/>
  <depend package="angles"/>
  <depend package="geometric_shapes"/>
  <depend package="sensor_msgs"/>
  <depend package="arm_navigation_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="planning_models"/>
  <depend package="collision_space"/>
  <depend package="pcl_ros"/>
  <depend package="robot_self_filter"/>
  <depend package="rviz"/>

  <rosdep name="yaml-cpp"/>
  <rosdep name="libqt4-dev"/>
  <rosdep name="tinyxml"/>
  <rosdep name="pkg-config"/>

  <url>http://ros.org/wiki/planning_environment</url>

  <export>
    <cpp cflags="-I${prefix}/include `rosboost-cfg --cflags`" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lplanning_environment"/>
  </export>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="pr2_launch" path="" repo="usc-clmc-ros-pkg" repo_host="https://github.com/usc-clmc/usc-clmc-ros-pkg">
  <description brief="pr2_launch">

     pr2_launch

  </description>
  <author/>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_launch</url>

  <depend package="pr2_dynamic_movement_primitive_controller"/>
  <depend package="pr2_dynamic_movement_primitive_gui"/>
  <depend package="pr2_task_recorder2"/>

</package><package name="hrl_hokuyo" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="hrl_hokuyo">
  Python class that uses hokuyo_node from ros-pkg to get scans from
  UTMs and player to get scans from URGs.
  </description>
  <author>Advait Jain, Advisor: Prof. Charlie Kemp, Lab: Healthcare Robotics Lab at Georgia Tech</author>
  <license>New BSD</license>

  <depend package="hokuyo_node"/>
  <depend package="sensor_msgs"/>
  <depend package="rospy"/>

  <depend package="hrl_lib"/>

</package><package name="wgtest_status_indicator" path="/stacks/wg_hardware_test/trunk/wgtest_status_indicator" repo="wg_hardware_test" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="Controls status indicator light for Test Manager">
Controls Delcom USB indicator light with the status of Test Manager.
  </description>
  <author>Kevin Watts</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/wgtest_status_indicator</url>
  <depend package="roscpp"/>
  <depend package="pr2_self_test_msgs"/>
  <rosdep name="libhid"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="rve_pluginloader" path="" repo="visualization_engine" repo_host="https://kforge.ros.org/visengine/hg">
  <description brief="rve_pluginloader">

     rve_pluginloader

  </description>
  <author>Josh Faust</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rve_pluginloader</url>
  <depend package="yaml_cpp"/>
  <depend package="rosconsole"/>
  <depend package="rve_dynlib"/>
  
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lrve_pluginloader"/>
  </export>

</package><package name="cob_people_detection_msgs" path="" repo="cob_people_perception" repo_host="git://github.com/ipa320/cob_people_perception">
  <description brief="cob_people_detection_msgs">

     Contains some special messages used by cob_people_detection.

  </description>
  <author>Richard Bormann</author>
  <license>LGPL, Fraunhofer IPA</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_people_detection_msgs</url>

  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>

</package><package name="rtt_std_msgs" path="" repo="rtt_ros_comm" repo_host="http://git.mech.kuleuven.be/robotics/rtt_ros_comm.git">
  <description brief="rtt_std_msgs">

    Provides an rtt typekit for ROS std_msgs messages.

    It allows you to use ROS messages transparently in
    RTT components and applications.

    This package was automatically generated by the
    create_rtt_msgs generator and should not be manually
    modified.

    See the http://ros.org/wiki/std_msgs documentation
    for the documentation of the ROS messages in this
    typekit.

  </description>
  <author>create_rtt_msgs Generator</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rtt_rosnode</url>
  <depend package="rtt_rosnode"/>
  <depend package="std_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>


</package><package name="google_laser_projector" path="" repo="google" repo_host="https://code.google.com/p/rosjava.google/">
  <description brief="google_laser_projector">
     google_laser_projector
  </description>
  <author>Damon Kohler</author>
  <license>Apache 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/google_laser_projector</url>

  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="tf"/>
  <depend package="laser_geometry"/>
  <depend package="tf_conversions"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
</package><package name="json_prolog" path="/tags/latest/json_prolog" repo="knowrob" repo_host="http://code.in.tum.de/pubsvn/knowrob">
  <description brief="json_prolog">
    json_prolog provides an interface to SWI prolog through ROS
    services. It is implemented in Java by using rosjava and JPL.
  </description>
  <author>Lorenz Moesenlechner, Moritz Tenorth</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/json_prolog</url>
  <rosdep name="libjson-java"/>
  <rosdep name="libjson-glib"/>
  <depend package="rosjava_jni"/>
  <depend package="rosprolog"/>
  <depend package="jpl"/>
  <depend package="rospy"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -ljson_prolog"/>
    <java classpath="${prefix}/bin"/>
    <rosdoc config="rosdoc.yaml"/>
  </export>

</package><package name="pr2_arm_navigation_kinematics" path="/stacks/pr2_arm_navigation/trunk/pr2_arm_navigation_kinematics" repo="pr2_arm_navigation" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_arm_navigation_kinematics">

     pr2_arm_navigation_kinematics

  </description>
  <author>Sachin Chitta</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_arm_navigation_kinematics</url>  
  <depend package="pr2_arm_kinematics_constraint_aware"/>
  <depend package="pr2_arm_kinematics"/>
  <depend package="pr2_arm_navigation_config"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="icp" path="/trunk/articulation/icp" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="Iteratively Closest Point library">
     <p>
     ICP, an open-source implementation of the iteratively closest point library.
     </p>

     <p>
     ROS wrapper for the implementation of the 
     Iteratively Closest Point algorithm, originally
     implemented by Per Bergstrom, released under BSD.
     It uses a kd-Tree library, originally 
     implemented by Guy Shechter, released under BSD.
     </p>

     <p>
     http://www.mathworks.com/matlabcentral/fileexchange/16766
     </p>
     <p>
     http://www.mathworks.com/matlabcentral/fileexchange/4586-k-d-tree
     </p>
  </description>
  <author>Maintained by Juergen Sturm</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/icp</url>
  
  <depend package="articulation_msgs"/>
  <depend package="bullet"/>
  <depend package="roscpp"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -licp -Wl,-rpath,${prefix}/lib"/>
  </export>
  
</package><package name="cob_hardware_test" path="" repo="cob_robots" repo_host="git://github.com/ipa320/cob_robots">
  <description brief="cob_hardware_test">

     This stack supports for automated hardware testing of the bringup layer.

  </description>
  <author>Florian Weisshardt</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_hardware_test</url>

  <depend package="rostest"/>
  <depend package="cob_bringup"/>
  <depend package="cob_default_robot_config"/>

</package><package name="people_detector_2d_laser" path="/3rdparty/people_detector_2d_laser" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description>
    People Detection Library 
  </description>
  <author>
    Oscar Martinez Mozos
  </author>
  <license>BSD</license>
  <export>
    <cpp cflags="-I${prefix}/build/people_detector/common -I${prefix}/build/people_detector/features -I${prefix}/build/people_detector/linalg -I${prefix}/build/people_detector/PeopleDetector" lflags="-Wl,-rpath,${prefix}/build/people_detector/common -L${prefix}/build/people_detector/common -lcommon -Wl,-rpath,${prefix}/build/people_detector/features -L${prefix}/build/people_detector/features -lfeatures -Wl,-rpath,${prefix}/build/people_detector/linalg -L${prefix}/build/people_detector/linalg -llinalg -Wl,-rpath,${prefix}/build/people_detector/PeopleDetector -L${prefix}/build/people_detector/PeopleDetector -lPeopleDetector"/>
  </export>
  <rosdep name="libgsl0-dev"/>
</package><package name="ethercat_hardware" path="/stacks/pr2_ethercat_drivers/trunk/ethercat_hardware" repo="pr2_ethercat_drivers" repo_host="https://code.ros.org/svn/wg-ros-pkg">
<description brief="EtherCAT Hardware">
Package for creating a hardware interface to the robot using the EtherCAT motor controller/driver
</description>
<author>Rob Wheeler (email: wheeler@willowgarage.com),  Maintained by Derek King (email: dking@willowgarage.com)</author>
<license>BSD</license>
<review notes="" status="unreviewed"/>
<url>http://ros.org/wiki/ethercat_hardware</url>
<depend package="pr2_msgs"/>
<depend package="pr2_hardware_interface"/>
<depend package="eml"/>
<depend package="roscpp"/>
<depend package="realtime_tools"/>
<depend package="diagnostic_msgs"/>
<depend package="diagnostic_updater"/>
<depend package="pluginlib"/>

<rosdep name="tinyxml"/>

<export>
  <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -lethercat_hardware -Wl,-rpath,${prefix}/lib"/>
  <ethercat_hardware plugin="${prefix}/ethercat_device_plugin.xml"/>
</export>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="sr_object_manipulation_smach" path="" repo="sr_object_manipulation" repo_host="lp:sr-manipulation">
  <description brief="sr_object_manipulation_smach">

     sr_object_manipulation_smach

  </description>
  <author>Ugo Cupcic / ugo@shadowrobot.com, contact@shadowrobot.com</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sr_object_manipulation_smach</url>
  <depend package="rospy"/>
  <depend package="std_msgs"/>
  <depend package="sr_robot_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="smach"/>
  <depend package="smach_ros"/>
  <depend package="tabletop_object_detector"/>
  <depend package="tabletop_collision_map_processing"/>
</package><package name="shogun" path="" repo="usc-clmc-ros-pkg" repo_host="https://github.com/usc-clmc/usc-clmc-ros-pkg">
  <description brief="shogun">

     shogun

  </description>
  <author>Peter Pastor</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/shogun</url>

  <depend package="roscpp"/>

  <rosdep name="liblapack-dev"/>
  <rosdep name="libblas-dev"/>
  <rosdep name="libatlas-base-dev"/>
  <rosdep name="libatlas-cpp-0.6-dev"/>
  <rosdep name="liblzo2-dev"/>

  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/include/shogun" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lshogun"/>
  </export>

</package><package name="imu_integrator" path="/trunk/cturtle/imu_integrator" repo="seabee3-ros-pkg" repo_host="http://seabee3-ros-pkg.googlecode.com/svn">
  <description brief="imu_integrator">

     imu_integrator

  </description>
  <author>Edward</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/imu_integrator</url>
  <depend package="xsens_node"/>
  <depend package="bullet"/>
  <depend package="base_libs"/>

</package><package name="ua_audio_fft" path="/trunk/arrg/ua_experimental/ua_audio_fft" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
  <description brief="ua_audio_fft">

     ua_audio_fft

  </description>
  <author>robotlab</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ua_audio_fft</url>
  <depend package="std_msgs"/>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="ua_audio_msgs"/>

</package><package name="ecl_time_lite" path="/trunk/ecl_lite/ecl_time_lite" repo="ecl_lite" repo_host="https://embedded-control-library.googlecode.com/svn">
  <description brief="Cross platform api for low level time functions.">

     Provides a portable set of time functions that are especially useful for 
     porting other code or being wrapped by higher level c++ classes.

  </description>
  <author>Daniel Stonier (d.stonier@gmail.com)</author>
  <license>BSD</license>
  <review notes="" status="doc reviewed"/>
  <url>http://snorriheim.dnsdojo.com/redmine/wiki/ecl</url>
  
  <depend package="ecl_license"/>
  <depend package="ecl_build"/>
  <depend package="ecl_config"/>
  <depend package="ecl_errors"/>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lecl_time_lite"/>
    <rosdoc config="rosdoc.yaml"/>
  </export>
</package><package name="intersect_polys" path="/utils/intersect_polys" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
<description>Intersect polygons</description>
<author>Ulrich F Klank</author>
<license>Unknown</license>
<depend package="roscpp"/>
<depend package="vision_srvs"/>
</package><package name="schunk_simulated_tactile_sensors" path="" repo="schunk_modular_robotics" repo_host="git://github.com/ipa320/schunk_modular_robotics">
  <description brief="schunk_simulated_tactile_sensors">

     This package provides simulated tactile sensors for the Schunk Dextrous
     Hand (SDH) which is mounted on the Care-O-bot arm. The node subscribes to
     the Gazebo bumper topics of the SDH. It transforms the Gazebo feedback to
     the &quot;tactile_data&quot; topic to provide the same tactile sensor interface as
     the schunk_sdh package.
     
     The following parameters can be set:
     * cells_x: The number of patches on the tactile sensor in the direction
                perpendicular to the finger. Defaults to 6.
     * cells_y: The number of patches on the tactile sensor along the direction
                of the finger. Defaults to 14.
     * output_range: The maximum output value of one patch. Defaults to 3500.
     * sensitivity: The change of output in one patch per Newton. Defaults to
                    350. The sensitivity can be approximated by the following
                    formula: S = output_range / (measurement_range * cell_area)
                    - The measurement range of the tactile pads is 250 kPa (from
                      the data sheet).
                    - The output range can be determined by experiment from the
                      real SDH. It is about 3500.
                    - The cell area is the size of one patch. Length and width
                      of the area are determined by dividing the length/width
                      of the collision surface by the number of cells in the
                      respective direction.
                      Important: In most cases this is NOT the cell area that is
                                 given in the data sheet!
     * filter_length: The length of the moving average filter which smoothes
                      the values from simulation. Defaults to 10.
     
     The node subscribes to the following topics to receive data from the
     simulation:
     * thumb_2/state
     * thumb_3/state
     * finger_12/state
     * finger_13/state
     * finger_22/state
     * finger_23/state
     
     The node publishes the processed data on the following topic:
     * tactile_data
     
     The simulated bumper must obtain the collision data in the link that the
     sensor is attached to. This is achieved by setting the &quot;frameName&quot; property
     in the gazebo_ros_bumper controller.

  </description>
  <author>Sven Schneider</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/schunk_simulated_tactile_sensors</url>
  
  <depend package="rospy"/>
  <depend package="schunk_sdh"/>
  <depend package="gazebo_plugins"/>
  <depend package="geometry_msgs"/>

</package><package name="tidyup_actions" path="/trunk/pr2_symbolic_planning/tidyup_actions" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="tidyup_actions">
     tidyup_actions contains action executors and state creators for the tidyup domain.
  </description>
  <author>Christian Dornhege, Andreas Hertle</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/tidyup_actions</url>
  <depend package="tidyup_msgs"/>
  <depend package="std_srvs"/>
  <depend package="move_base_msgs"/>
  <depend package="arm_navigation_msgs"/>
  <depend package="hardcoded_facts"/>
  <depend package="tidyup_utils"/>
  <depend package="continual_planning_executive"/>
  <depend package="continual_planning_monitor"/>
  <depend package="tfd_modules"/>
  <depend package="planner_benchmarks"/>
  <depend package="planner_modules_pr2"/>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="visualization_msgs"/>
  <depend package="state_transformer"/>     <!-- from sushi -->
  <depend package="coverage_3d_srvs"/>
  <depend package="door_perception_msgs"/>

  <export>
      <continual_planning_executive plugin="${prefix}/tidyup_actions_plugins.xml"/>
  </export>

</package><package name="lse_roomba_tf_setup" path="/stacks/lse_roomba_toolbox/trunk/lse_roomba_tf_setup" repo="lse_roomba_toolbox" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="lse_roomba_tf_setup">

     Typical tf setups for the Erratics used in LSE. Includes setups with the Hokuyo laser and the LSE two nostril MOX nose.

  </description>
  <author>Gonçalo Cabrita and Pedro Sousa</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/lse_roomba_tf_setup</url>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="geometry_msgs"/>

</package><package name="kobuki_arm" path="" repo="kobuki" repo_host="https://github.com/yujinrobot/kobuki">
  <description brief="kobukibot_arm">

     kobukibot_arm

  </description>
  <author>Daniel Stonier</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://www.ros.org/wiki/kobuki_arm</url>

  <!-- Ros -->
  <depend package="rospy"/>
  <depend package="roslib"/>
  <depend package="std_msgs"/>
  <depend package="control_msgs"/>
  <depend package="dynamixel_msgs"/>
  <depend package="dynamixel_controllers"/>

  <!-- System dependencies -->
  <rosdep name="wxpython"/>
</package><package name="dynamic_obs_msgs" path="/sbpl_dynamic_env/trunk/dynamic_obs_msgs" repo="sbpl_dynamic_env" repo_host="https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs">
  <description brief="Messages for dynamic obstacles">

  </description>
  <author>Mike Phillips</author>
  <license>BSD</license>
  <url>http://ros.org/wiki/nav_msgs</url>
  <depend package="geometry_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/msg/cpp -I${prefix}/srv/cpp"/>
  </export>
</package><package name="correct_drift" path="/trunk/mapping/correct_drift" repo="ubc-ros-pkg" repo_host="https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg">
  <description brief="correct_drift">
      Package that tries to correct from drift of the map frame when integrating multiview data.
  </description>
  <author>Marius Muja</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/correct_drift</url>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="tf"/>
  <depend package="tf_conversions"/>
  <depend package="point_cloud_mapping"/>
  <depend package="laser_geometry"/>

</package><package name="mod_semantic_map" path="/knowledge/mod_semantic_map" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="mod_semantic_map">

     mod_semantic_map

     Node and tools to generate the OWL description of the semantic map
     from ROS messages

  </description>
  <author>Moritz Tenorth</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/mod_semantic_map</url>
  <depend package="rosjava_jni"/>
  <depend package="geometry_msgs"/>
  <depend package="ias_knowledge_base"/>
  <depend package="mod_vis"/>
	<depend package="knowrob_common"/>
</package><package name="gps_common" path="" repo="gps_umd" repo_host="http://ram.umd.edu/git/ros/gps_umd.git">
  <description brief="gps_common">

    GPS messages and common routines for use in GPS drivers

  </description>
  <author>Maintained by Ken Tossell</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/gps_common</url>
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp -I${prefix}/srv/cpp" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib"/>
  </export>

  <depend package="roscpp"/>
  <depend package="message_filters"/>
  <depend package="nav_msgs"/>
  <depend package="sensor_msgs"/>
</package><package name="parsec_navigation" path="" repo="parsec" repo_host="https://code.google.com/p/parsec">
  <description brief="parsec_navigation">

     parsec_navigation

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>Apache 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/parsec_navigation</url>

  <depend package="amcl"/>
  <depend package="base_local_planner"/>
  <depend package="gmapping"/>
  <depend package="hector_mapping"/>
  <depend package="move_base"/>
  <depend package="navfn"/>
  <depend package="parsec_perception"/>
  <depend package="point_cloud_converter"/>
  <depend package="rcconsole"/>
</package><package name="ros_rt_wmp" path="" repo="unizar-rt-wmp-ros-pkg" repo_host="https://github.com/dantard/unizar-rt-wmp-ros-pkg">
  <description brief="ros-rt-wmp">

     ros-rt-wmp

  </description>
  <author>Danilo Tardioli, dantard@unizar.es</author>
  <license>GPL v2 </license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ros-rt-wmp</url>
  <depend package="std_msgs"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="nav_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="tf"/>
  <depend package="ros_rt_wmp_msgs"/>
  <depend package="topic_tools"/>
</package><package name="ias_prolog_addons" path="/tags/latest/ias_prolog_addons" repo="knowrob" repo_host="http://code.in.tum.de/pubsvn/knowrob">
  <description brief="ias_prolog_addons">
      Some utilities for Prolog:
      * Interface to the Weka and Mallet machine learning libraries, whose algorithms can be applied to instances in KnowRob (in classifiers.pl)
      * jython-interface for Prolog (in jython.pl, deprecated for internal use)
      * Several small utility scripts (in util.pl)
      * Methods for computing different semantic similarity values (comp_similarity.pl)

  </description>
  <author>Bernhard Kirchlechner, Moritz Tenorth, Jakob Engel</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.ros.org/wiki/ias_prolog_addons</url>

  <depend package="jpl"/>
  <depend package="rosjava_jni"/>
  <depend package="rosprolog"/>

  <export>
    <java classpath="${prefix}/lib/classifier_interface.jar:${prefix}/lib/mallet-deps.jar:${prefix}/lib/mallet-dist.jar:${prefix}/lib/weka_fipm.jar"/>
    <rosdoc config="rosdoc.yaml"/>
  </export>

</package><package name="turtlebot_calibration" path="" repo="turtlebot_apps" repo_host="https://kforge.ros.org/turtlebot/turtlebot_apps">
  <description brief="turtlebot_calibration">

     turtlebot_calibration

  </description>
  <author>Wim Meeussen</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/turtlebot_calibration</url>

  <depend package="rospy"/>
  <depend package="sensor_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="kdl"/>


</package><package name="tele_mobile" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="tele_mobile">
      A package for teleoperation controls of segway, zenither, and dynamixel servos.
  </description>
  <author>Chih-Hung King, Advisor: Prof. Charlie Kemp, Lab: Healthcare Robotics Lab at Georgia Tech</author>
  <license>new BSD</license>
  <depend package="rospy"/>  
  <depend package="zenither"/>  
  <depend package="hrl_lib"/>  
  <depend package="geometry_msgs"/> 
  <depend package="tf"/> 

  <sysdepend os="ubuntu" package="python-usb" version="9.04-jaunty"/>
  <sysdepend os="ubuntu" package="python-usb" version="8.04-hardy"/>
  <sysdepend os="ubuntu" package="python-usb" version="7.04-feisty"/>
  <sysdepend os="ubuntu" package="python-pygame" version="9.04-jaunty"/>
  <sysdepend os="ubuntu" package="python-pygame" version="8.04-hardy"/>
  <sysdepend os="ubuntu" package="python-pygame" version="7.04-feisty"/>
</package><package name="skin_driver" path="/trunk/stacks/bosch_skin/skin_driver" repo="bosch-ros-pkg-e" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg-e/code">
  <description brief="skin_driver">

     skin_driver

  </description>
  <author>Joerg Wagner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/skin_driver</url>
  <depend package="roslib"/>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="dynamic_reconfigure"/>

  <depend package="sub20"/>
</package><package name="tfdump" path="/trunk/sandbox/tfdump" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="tfdump">

     tfdump

  </description>
  <author>Edward T. Kaszubski ( ekaszubski@gmail.com )</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/tfdump</url>
  <depend package="quickdev_cpp"/>
  <depend package="nodelet"/>
  <depend package="humanoid_recognizers"/>
  <export>
    <nodelet plugin="${prefix}/nodelets/nodelet_plugins.xml"/>
  </export>
</package><package name="rosbrowse" path="/stacks/rosorg/trunk/rosbrowse" repo="rosorg" repo_host="https://code.ros.org/svn/ros">
  <description brief="Some scripts to automate browsing the ROS universe">
A few scripts to generate and manipulate lists of all available ROS packages.
  </description>
  <author>Morgan Quigley, Ken Conley</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
</package><package name="calibration_launch" path="" repo="calibration" repo_host="http://kforge.ros.org/calibration/calibration">
  <description brief="Launch files for data collection.">
    This package contains a collection of launch files that can be helpful in configuring
    the calibration stack to run on your robot.
  </description>
  <author>Michael Ferguson</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/calibration_launch</url>

  <!-- capture data -->
  <depend package="topic_tools"/>
  <depend package="image_cb_detector"/>
  <depend package="laser_cb_detector"/>
  <depend package="image_view"/>
  <depend package="message_filters"/>
  <depend package="sensor_msgs"/>

  <depend package="monocam_settler"/>
  <depend package="joint_states_settler"/>
  <depend package="interval_intersection"/>

  <!-- messages -->
  <depend package="calibration_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="trajectory_msgs"/>

  <!-- urdf_pub -->
  <depend package="rospy"/>
  <depend package="std_msgs"/>
</package><package name="rfid_explore_room" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="rfid_explore_room">

     rfid_explore_room

  </description>
  <author>Travis Deyle</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rfid_explore_room</url>
  <depend package="rospy"/>
  <depend package="tf"/>
  <depend package="geometry_msgs"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="move_base_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="std_msgs"/>
  <depend package="nav_msgs"/>
</package><package name="arduino_hello_world" path="/branches/basic_arduino_project/arduino_hello_world" repo="rtc-us-ros-pkg-branches" repo_host="https://rtc-us-ros-pkg.svn.sourceforge.net/svnroot/rtc-us-ros-pkg">
  <description brief="arduino_hello_world">

     arduino_hello_world

  </description>
  <author>uca</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/arduino_hello_world</url>
  <depend package="rosserial_arduino"/>
  <depend package="joy"/>

</package><package name="knowrob_actions" path="/tags/latest/knowrob_actions" repo="knowrob" repo_host="http://code.in.tum.de/pubsvn/knowrob">
  <description brief="knowrob_actions">

     knowrob_actions

  </description>
  <author>Moritz Tenorth</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/knowrob_actions</url>
  <rosdep name="libjson-java"/>
  <depend package="knowrob_common"/>
  <depend package="knowrob_objects"/>

  <export>
    <java classpath="${prefix}/bin:/usr/share/java/json-lib.jar:/usr/share/java/commons-collections3.jar:/usr/share/java/ezmorph.jar:/usr/share/java/commons-beanutils.jar:/usr/share/java/commons-lang.jar:/usr/share/java/commons-logging.jar"/>
  </export>

</package><package name="maxondrivers" path="/trunk/maxondrivers" repo="cmu-ros-pkg" repo_host="https://cmu-ros-pkg.svn.sourceforge.net/svnroot/cmu-ros-pkg">
  <description brief="EPOS Maxon Controller using OpenRAVE and Orocos">
    Robot controller communicating with EPOS controllers through the CAN network using Orocos RTT and OCL. Uses OpenRAVE for kinematics and other information.
  </description>
  <author>Rosen Diankov (rdiankov@cs.cmu.edu)</author>
  <license>Apache License 2.0</license>
  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>
  <depend package="roscpp"/>
  <depend package="openrave_robot_control"/>
<!--   <depend package="ocl" />
  <depend package="rtt" /> -->
</package><package name="turtlebot_follower_rfn" path="" repo="roboframenet" repo_host="https://kforge.ros.org/appmanandroid/roboframenet">
  <description brief="turtlebot_follower_rfn">

    turtlebot_follower_rfn is an RFNServer which listens for requests to follow.  When a request comes in, turtlebot_follower_rfn launches the turtlebot follower application.  When a preempt request comes, it shuts down the same.

  </description>
  <author>Brian Thomas</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/turtlebot_follower_rfn</url>
  <depend package="rospy"/>
  <depend package="roslaunch"/>
  <depend package="rfnserver"/>

</package><package name="android_tutorial_teleop" path="" repo="android_core" repo_host="https://code.google.com/p/rosjava.android/">
  <description brief="android_tutorial_teleop">
     android_tutorial_teleop
  </description>
  <author>Damon Kohler (damonkohler@google.com)</author>
  <license>Apache 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/android_tutorial_teleop</url>
</package><package name="object_recognition_core" path="" repo="object_recognition" repo_host="git://github.com/wg-perception/ros-object_recognition">
  <description brief="object_recognition_core">
     The core modules for object recognition
  </description>
  <author>Ethan Rublee</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/object_recognition</url>
  <depend package="opencv2"/>
  <depend package="pcl"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="household_objects_database_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="common_rosdeps"/>
  <depend package="openni"/>
  <rosdep name="curl"/>
  <rosdep name="eigen"/>
  <rosdep name="git"/>
  <rosdep name="gtest"/>
  <rosdep name="python-argparse"/>
  <rosdep name="python-empy"/>
  <rosdep name="python-nose"/>
  <rosdep name="suitesparse"/>
  <export>
    <python path="${prefix}/pyshared"/>
  </export>
</package><package name="wpa_supplicant" path="/stacks/linux_networking/trunk/wpa_supplicant" repo="linux_networking" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="wpa_supplicant for multi_interface_roam">
     A version of wpa_supplicant that has been modified to work with
     multi_interface_roam.
  </description>
  <author>Package maintained by Blaise Gassend</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/wpa_supplicant</url>
  <rosdep name="libpcsclite-dev"/>
  <rosdep name="libncurses-dev"/>
  <rosdep name="libnl-dev"/>
  <rosdep name="libreadline-dev"/>
</package><package name="tyros_camera" path="" repo="TYROS" repo_host="https://github.com/tonuonu/TYROS">
  <description brief="tyros_cam">

     tyros_cam

  </description>
  <author>Tonu Samuel</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/tyros_cam</url>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="image_transport"/>
  <depend package="camera_info_manager"/>

</package><package name="policy_msgs" path="" repo="usc-clmc-ros-pkg" repo_host="https://github.com/usc-clmc/usc-clmc-ros-pkg">
  <description brief="policy_msgs">

     policy_msgs

  </description>
  <author>Mrinal Kalakrishnan</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/policy_msgs</url>

  <depend package="geometry_msgs"/>

</package><package name="locator" path="/trunk/albany_nav/locator" repo="albany-ros-pkg" repo_host="http://albany-ros-pkg.googlecode.com/svn">
  <description brief="Localization with AR Markers">
    Localizes a robot against a map being broadcast in TF. 
  </description>
  <author>Michael Ferguson</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/locator</url>

  <depend package="rospy"/>
  <depend package="geometry_msgs"/>
  <depend package="ar_pose"/>
</package><package name="ias_robot_defs" path="/robot_model/ias_robot_defs" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="ias_robot_defs">

     URDF definitions of the platforms used at TU Muenchen.

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <depend package="xacro"/>

</package><package name="teleop_ps3_application" path="/stacks/pr2_web_apps/trunk/teleop_ps3_application" repo="pr2_web_apps" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="teleop_ps3_application">
	This application provides remote control for a PR2 via a Playstation 3 controller.
  </description>
  <author>Scott Hassan</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/teleop_ps3_application</url>
  <depend package="roslib"/>
  <depend package="rospy"/>
  <depend package="webui"/>
  <depend package="rosweb"/>
  <depend package="std_msgs"/>
  <depend package="pr2_teleop"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="sicks300" path="/trunk/stacks/ais_bonn_drivers/sicks300" repo="ais-bonn-ros-pkg" repo_host="http://ais-bonn-ros-pkg.googlecode.com/svn">
  <description brief="Driver for the Sick 3000 Laserscanner">

	This driver was developed from Player drivers for the Sick 300 for a robotics lab in the 
	Autonomous Intelligent Systems Department at Bonn University.

  </description>
  <author>Andreas Hochrath, Torsten Fiolka</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.ros.org/wiki/sicks300/</url>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="sensor_msgs"/>
  
  <export>
  	<cpp cflags="-I${prefix}/msg/cpp"/>
  </export>

</package><package name="pr2_arm_navigation_tutorials" path="/stacks/pr2_arm_navigation/trunk/pr2_arm_navigation_tutorials" repo="pr2_arm_navigation" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_arm_navigation_tutorials">
    This package contains code for tutorials that work with the arm navigation stack.
  </description>
  <author>Sachin Chitta</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_arm_navigation_tutorials</url>
  <depend package="arm_navigation_msgs"/>
  <depend package="kinematics_msgs"/>

  <depend package="actionlib_msgs"/>
  <depend package="pr2_controllers_msgs"/>

  <depend package="arm_navigation_msgs"/>
  <depend package="planning_environment"/>

  <depend package="pr2_arm_navigation_perception"/>
  <depend package="mapping_rviz_plugin"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>

</package><package name="music_msgs" path="/branches/stable/music/music_msgs" repo="wu-ros-pkg" repo_host="https://wu-robotics.googlecode.com/svn">
  <description brief="Music msgs">
    Message types for Songs, Tunes and Notes
  </description>
  <author>David V. Lu!!</author>
  <license>BSD</license>
  <url>http://ros.org/wiki/music_msgs</url>

</package><package name="hokuyo" path="" repo="google" repo_host="https://code.google.com/p/rosjava.google/">
  <description brief="hokuyo">hokuyo</description>
  <author>Damon Kohler</author>
  <license>Apache License 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hokuyo</url>

  <depend package="sensor_msgs"/>
</package><package name="rqt_bag_plugins" path="" repo="rqt" repo_host="https://kforge.ros.org/visualization/rqt">
  <description brief="rqt_bag_plugins">

<p>rqt_bag_plugins contains visualization plugins for the <a href="/wiki/rqt_bag">rqt_bag</a> ROSGUI plugin.</p>
<p><a href="/wiki/rqt_bag">rqt_bag</a> is a graphical framework for analyzing <a href="/wiki/Bags">bag</a> (log) files. rqt_bag_plugins provide visualizers for <a href="/wiki/Messages">messages</a> of different types.</p>

  </description>
  <author>Aaron Blasdel</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rqt_bag_plugins</url>
  <depend package="rospy"/>
  <depend package="roslib"/>
  <depend package="std_msgs"/>
  <depend package="rosbag"/>  
  <depend package="rqt_bag"/> 
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <export>
    <rqt_bag plugin="rqt_bag_plugins.plugins"/>
  </export>

</package><package name="scene_server" path="/trunk/recognition/scene_server" repo="ubc-ros-pkg" repo_host="https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg">
  <description brief="scene_server">

     Scene server is a data storage node that allows numerous visual processing algorithms 
     such as object recognizers and 3D spatial reasoning nodes to run on the same set of data.
     
     The function of scene server is to synchronize incoming sensor information, serve this information
     to various processing nodes, and finally to correlate the results of each of these nodes in a consistent
     format to be viewed by the remainder of the system.     

  </description>
  <author>Marius Muja and David Meger</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/scene_server</url>

  <depend package="point_cloud_mapping"/>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="image_transport"/>
  <depend package="recognition_msgs"/>
  <depend package="tf"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="artag_register"/>
  <depend package="UBC_VRS_utils"/>


</package><package name="isolated_point_filter" path="/stacks/cart_pushing/trunk/isolated_point_filter" repo="cart_pushing" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="isolated_point_filter">

     isolated_point_filter

  </description>
  <author>Bhaskara Marthi</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/isolated_point_filter</url>
  
  <depend package="sensor_msgs"/>
  <depend package="filters"/>
  <depend package="pluginlib"/>
  <depend package="roscpp"/>
  <depend package="tf"/>

  <export>
    <filters plugin="${prefix}/ipf_plugin.xml"/>
  </export>

</package><package name="rqt_plot" path="" repo="rqt" repo_host="https://kforge.ros.org/visualization/rqt">
  <description brief="Plugin for plotting numeric values">
    rqt_plot provides a GUI plugin for visualizing numeric values in a 2D plot using PyQwt5.
  </description>
  <author>Dorian Scholz</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rqt_plot</url>

  <depend package="rqt_gui"/>
  <depend package="rqt_gui_py"/>
  <depend package="rqt_py_common"/>
  <depend package="qt_gui_py_common"/>
  <depend package="rostopic"/>
  <rosdep name="python-qt-bindings-qwt5"/>
  <rosdep name="python-matplotlib"/>

  <export>
    <rqt_gui plugin="${prefix}/plugin.xml"/>
  </export>
</package><package name="velodyne_msgs" path="/trunk/stacks/velodyne/velodyne_msgs" repo="utexas-art-ros-pkg" repo_host="http://utexas-art-ros-pkg.googlecode.com/svn">
  <description brief="Velodyne HDL-64E 3D LIDAR messages">

     ROS message definitions for Velodyne HDL-64E and HDL-64E S2 3D LIDARs.

  </description>
  <author>Jack O'Quin</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/velodyne_msgs</url>

  <depend package="rosbag"/>

  <export>
    <rosbag migration_rule_file="migration_rules/velodyne_msgs.bmr"/>
  </export>

</package><package name="rectangle_finder" path="/trunk/cturtle/rectangle_finder" repo="seabee3-ros-pkg" repo_host="http://seabee3-ros-pkg.googlecode.com/svn">
  <description brief="rectangle_finder">

     rectangle_finder

  </description>
  <author>Michael Wei</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rectangle_finder</url>
  <depend package="geometry_msgs"/>
  <depend package="base_libs"/>
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp -I${prefix}/srv/cpp" lflags="-L/{prefix}/lib"/>
  </export>

</package><package name="rviz_imu_plugin" path="" repo="imu_tools" repo_host="https://github.com/ccny-ros-pkg/imu_tools">
  <description brief="rviz_imu_plugin">

    RVIZ plugin for IMU visualization

  </description>
  <author>Ivan Dryanovski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rviz_imu_plugin</url>

  <depend package="rviz"/>

  <export>
      <rosdoc config="${prefix}/rosdoc.yaml"/>
      <rviz plugin="${prefix}/plugin_description.xml"/>
  </export>

</package><package name="remote_simulation" path="" repo="euRobotics_orocos_ws" repo_host="https://github.com/bellenss/euRobotics_orocos_ws">
  <description brief="remote_simulator">

     remote_simulator: this package contains the code to launch the remote (morse and gazebo) simulator 

  </description>
  <author>Tinne De Laet, Ruben Smits, Steven Bellens, first.last@mech.kuleuven.be</author>
  <license>LGPLv2.1 / BSD</license>
  <depend package="youbot_supervisor"/>
  <depend package="youbot_description"/>
  <depend package="calculateDistanceToWall"/>
  <depend package="rtt_tf"/>
  <depend package="polar_scan_matcher"/>
  <depend package="tf"/>
</package><package name="libseabee3_beestem" path="/trunk/cturtle/libseabee3_beestem" repo="seabee3-ros-pkg" repo_host="http://seabee3-ros-pkg.googlecode.com/svn">
  <description brief="libseabee3_beestem">

     libseabee3_beeste

  </description>
  <author>Edward T. Kaszubski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/libseabee3_beestem</url>
  <depend package="seabee3_common"/>
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp -I${prefix}/srv/cpp" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -llibseabee3_beestem"/>
  </export>
</package><package name="wubble_2dnav_local" path="/trunk/arrg/wubble_navigation_apps/wubble_2dnav_local" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="Local navigation for the Wubble robot.">
        This application allows the Wubble to navigate autonomously in an odometric frame.
    </description>
    <author>Antons Rebguns</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/wubble_2dnav_local</url>
    
    <depend package="wubble_navigation_local"/>
</package><package name="pr2_navigation_config" path="" repo="pr2_navigation" repo_host="https://kforge.ros.org/pr2navigation/hg">
  <description brief="PR2-specific move_base configuration">
  This package holds common configuration files for running the <a href="http://www.ros.org/wiki/move_base">move_base</a> node on the PR2 robot.
  </description>
  <author>Eitan Marder-Eppstein</author>
  <license>BSD</license>
  <review notes="" status="na"/>
  <url>http://pr.willowgarage.com/wiki</url>
  <depend package="move_base"/>
</package><package name="cuda_tests" path="" repo="gpgpu" repo_host="http://ram.umd.edu/git/ros/gpgpu.git">
  <description brief="cuda_tests">

     Simple CUDA tests to demonstrate that CUDA works in a ROS node

  </description>
  <author>Ken Tossell/ktossell@umd.edu</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cuda_tests</url>
  <depend package="cuda"/>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
</package><package name="cob_goco" path="" repo="cob_common" repo_host="git://github.com/ipa320/cob_common">
  <description brief="cob_goco">

     cob_goco

  </description>
  <author>Winfried Baum</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_goco</url>

</package><package name="msvc_sdk" path="" repo="win_ros" repo_host="https://github.com/stonier/win_ros">
  <description brief="resources for putting together the windows ros-sdk">

     Scripts and microsoft visual studio solutions for packaging and testing the sdk.

  </description>
  <author>Daniel Stonier (d.stonier@gmail.com)</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/msvc_sdk</url>

</package><package name="p2os_driver" path="/trunk/p2os/p2os_driver" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="p2os_driver">
     P2OS driver for ros
  </description>
  <author>dfseifer@usc.edu</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://pr.willowgarage.com/wiki/ros</url>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="tf"/>
  <depend package="diagnostic_updater"/>
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp"/>
  </export>
</package><package name="pr2_teleop_general" path="2_teleop_general" repo="pr2_apps" repo_host="">
  <description brief="pr2_teleop_general">

     pr2_teleop_general

  </description>
  <author>Gil Jones</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_teleop_general</url>

  <depend package="roscpp"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="pr2_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="pr2_controller_manager"/>
  <depend package="pr2_mechanism_msgs"/>
  <depend package="kinematics_msgs"/>
  <depend package="urdf"/>
  <depend package="urdf_interface"/>
  <depend package="ps3joy"/>
  <depend package="pr2_common_action_msgs"/>
  <depend package="polled_camera"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib"/>
  </export>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>

</package><package name="task_recorder2_msgs" path="" repo="usc-clmc-ros-pkg" repo_host="https://github.com/usc-clmc/usc-clmc-ros-pkg">
  <description brief="task_recorder2_msgs">

     task_recorder2_msgs

  </description>
  <author>Peter Pastor</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/task_recorder2_msgs</url>
  
  <depend package="roscpp"/>

  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/srv_gen/cpp/include -I${prefix}/msg_gen/cpp/include"/>
  </export>

</package><package name="cob_experimentation_days" path="" repo="cob_scenarios" repo_host="git://github.com/ipa320/cob_scenarios">
  <description brief="cob_experimentation_days">

     cob_experimentation_days

  </description>
  <author>Florian Weisshardt</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_experimentation_days</url>
  <depend package="cob_generic_states"/>
  <depend package="rospy"/>
  <depend package="smach"/>
  <depend package="cob_script_server"/>
  <depend package="cob_command_gui"/>
  <depend package="cob_default_robot_config"/>
  <depend package="cob_default_env_config"/>
  <depend package="cob_dashboard"/>
  <depend package="cob_bringup"/>
  <depend package="cob_bringup_sim"/>
  <depend package="cob_manipulator"/>
  <depend package="cob_navigation_global"/>
  <depend package="cob_object_detection_fake"/>


</package><package name="image_view2" path="/trunk/jsk_ros_patch/image_view2" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description>
  A simple viewer for ROS image topics with draw-on features
  </description>
  <author>Kei Okada</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/image_view2</url>
  <depend package="roscpp"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="image_transport"/>
  <depend package="tf"/>
  <depend package="image_geometry"/>
</package><package name="pa10demo" path="/trunk/pa10demo" repo="cmu-ros-pkg" repo_host="https://cmu-ros-pkg.svn.sourceforge.net/svnroot/cmu-ros-pkg">
  <description brief="Manipulation demo with OpenRAVE using PA-10 arm">
  </description>
  <author>Rosen Diankov (rdiankov@cs.cmu.edu)</author>
  <url>http://openrave.programmingvision.com/</url>
  <license>Apache License, Version 2.0</license>
  <export>
    <cpp cflags="-I${prefix}/msg/cpp -I${prefix}/srv/cpp"/>
    <python path="${prefix}"/>
  </export>
  <depend package="std_msgs"/>
  <depend package="rospy"/>
  <depend package="checkerboard_detector"/>
  <depend package="cameradc1394"/>
  <depend package="pa10controller"/>
  <depend package="openrave"/>
  <depend package="openraveros"/>
  <depend package="orrosplanning"/>
  <depend package="imagesift"/>
  <depend package="posedetectiondb"/>
  <depend package="openrave_robot_control"/>
  <depend package="openrave_calibration"/>
  <depend package="openrave_sensors"/>
  <depend package="rvision"/>
  <depend package="tf"/>
  <sysdepend os="ubuntu" package="python-numpy"/>
</package><package name="knowrob_common" path="/tags/latest/knowrob_common" repo="knowrob" repo_host="http://code.in.tum.de/pubsvn/knowrob">
  <description brief="knowrob_common">

     knowrob_common

  </description>
  <author>Moritz Tenorth</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/knowrob_common</url>
  <depend package="rosjava_jni"/>
  <depend package="jpl"/>
  <depend package="semweb"/>

  <export>
<!--     <java classpath="${prefix}/bin:${prefix}/lib/guava-r09.jar:${prefix}/lib/vecmath.jar"/> -->
  <java classpath="${prefix}/bin:${prefix}/lib/owlapi-bin.jar:${prefix}/lib/vecmath.jar:${prefix}/lib/guava-r09.jar:${prefix}/lib/commons-lang-2.6.jar:${prefix}/lib/HermiT.jar"/>
</export>


</package><package name="pgr_camera" path="" repo="pgr_camera" repo_host="https://github.com/pbouffard/ros.pgr_camera">
	<description brief="pgr_camera">
		A ROS node to provide access to Point Grey Research cameras, using the
		FlyCapture2 SDK API
		Acknowledgement: This package is based largely on the prosilica_camera package,
		by Patrick Mihelich (http://www.ros.org/wiki/prosilica_camera).
	</description>
	<author>Patrick Bouffard</author>
	<license>BSD</license>
	<review notes="" status="unreviewed"/>
	<url>http://ros.org/wiki/pgr_camera</url>
	<depend package="roscpp"/>
	<depend package="std_msgs"/>
	<depend package="sensor_msgs"/>
	<depend package="diagnostic_updater"/>
	<depend package="diagnostic_msgs"/>
	<depend package="image_transport"/>
	<depend package="self_test"/>
	<depend package="driver_base"/>
	<depend package="dynamic_reconfigure"/>
	<depend package="camera_calibration_parsers"/>
	<depend package="polled_camera"/>
	<export>
		<rosdoc config="rosdoc.yaml"/>
	</export>
</package><package name="kinect_config" path="/trunk/kinect_config" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="kinect_config">

     kinect_config

  </description>
  <author>Ross Mead</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/kinect_config</url>
  <depend package="driver_base"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="kinect_aux"/>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="std_msgs"/>

</package><package name="willow_maps" path="/stacks/wg_common/trunk/willow_maps" repo="wg_common" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="A package that holds Willow Garage maps">

     Holds maps of Willow Garage that can be used for a number of different applications.

  </description>
  <author>Eitan Marder-Eppstein</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://pr.willowgarage.com/wiki/willow_maps</url>

  <depend package="langs-dev"/>
  <depend package="langs"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="hrl_cody_arms" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
    <description brief="hrl_cody_arms">

        Control Meka Arms that HRL has on its robot Cody.

    </description>
    <author>Advait Jain, Advisor: Prof. Charlie Kemp, Lab: Healthcare Robotics Lab</author>
    <license>New BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/hrl_cody_arms</url>

    <depend package="rospy"/>
    <depend package="visualization_msgs"/>
    <depend package="std_srvs"/>
    <depend package="std_msgs"/>

    <depend package="kdl"/>
    <depend package="hrl_lib"/>
    <depend package="equilibrium_point_control"/>

</package><package name="turtlebot_metric_description" path="" repo="iheart-ros-pkg" repo_host="git://github.com/IHeartRobotics/iheart-ros-pkg">
  <description brief="turtlebot_metric_description">

     turtlebot_metric_description

  </description>
  <author>linda</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/turtlebot_metric_description</url>

  <depend package="urdf"/>
  <depend package="xacro"/>
  <depend package="pluginlib"/>

  <export>
    <urdf base="${prefix}/urdf/turtlebot_metric.uraf"/>
  </export>
</package><package name="octomap" path="/trunk/octomap_stacks/octomap_mapping/octomap" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="OctoMap -  A  probabilistic, flexible, and compact 3D mapping library for robotic systems.">

     <p>The <a href="http://octomap.sourceforge.net/">OctoMap library</a> implements a 3D occupancy grid mapping approach, 
     providing data structures and mapping algorithms. The map implementation is based on an octree.</p>
     <p>Deprecated. This package now forwards octomap pkgconfig flags through the manifest,
     do not depend on this feature. Instead use cmake's
     find_package infrastructure for the octomap package.</p>
     <p>More details are available at <a href="http://octomap.sourceforge.net/">http://octomap.sourceforge.net/</a>.</p>

  </description>
  <author>Kai M. Wurm and Armin Hornung</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.ros.org/wiki/octomap</url>
  <export>
    <cpp cflags="`pkg-config octomap --cflags`" lflags="`pkg-config octomap --libs`"/>
    <rosdoc external="http://octomap.sourceforge.net/doxygen/"/>
  </export>
  
  <depend package="roscpp"/>
  <rosdep name="octomap"/>

</package><package name="urdf_compose" path="" repo="iheart-ros-pkg" repo_host="git://github.com/IHeartRobotics/iheart-ros-pkg">
  <description brief="urdf_compose">

     urdf_compose provides a way to generate urdf files for the union of
     previously defined hardware.

  </description>
  <author>linda</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/urdf_compose</url>

  <depend package="urdf"/>
  <depend package="xacro"/>
  <depend package="rviz"/>
  <depend package="joint_state_publisher"/>
  <depend package="robot_state_publisher"/>
  <depend package="pluginlib"/>

  <export>
    <urdf base="${prefix}/urdf/turtlebot.uraf"/>
    <urdf plugin="${prefix}/urdf/kinect.uraf"/>
  </export>
</package><package name="libphidgets" path="" repo="cob_extern" repo_host="git://github.com/ipa320/cob_extern">
  <description brief="libphidgets">

     This package wraps the libphidgets to use it as a ros dependency

  </description>
  <author>Florian Weisshardt</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/libphidgets</url>

  <rosdep name="libusb-dev"/>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -lphidget21"/>
  </export>
</package><package name="geometric_semantics_msgs_conversions" path="" repo="geometric_relations_semantics" repo_host="http://git.mech.kuleuven.be/robotics/geometric_relations_semantics.git">
  <description brief="geometric_semantics_msgs_conversions">

     <a href="http://www.ros.org/wiki/geometric_semantics_msgs_conversions">geometric_semantics_msgs_conversions</a> provides support conversions between <a href="http://www.ros.org/wiki/geometric_semantics_msgs">geometric_semantics_msgs</a> and the C++ <a href="http://www.ros.org/wiki/geometric_semantics">geometric_semantics</a> types defined on the <a href="http://www.ros.org/wiki/geometric_semantics">geometric_semantics</a> package.

  </description>
  <author>Tinne De Laet</author>
  <license>LGPLv2.1 / BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.orocos.org/wiki/geometric-relations-semantics-wiki</url> 
  <depend package="geometric_semantics_msgs"/>
  <depend package="geometric_semantics"/>
  <depend package="roscpp"/>
  <export>
        <rosdoc config="rosdoc.yaml"/>
        <cpp cflags="-I${prefix}/src" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lgeometric_semantics_msgs_conversions"/>
   </export>

</package><package name="visualize_arm" path="/sbpl_arm_planning/trunk/visualize_arm" repo="sbpl_arm_planning" repo_host="https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs">
  <description brief="Visualization Library for the SBPL Arm Planner">

    Visualize Arm 

  </description>
  <author>Benjamin Cohen/bcohen@seas.upenn.edu</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.ros.org/wiki/visualize_arm</url>

	<depend package="roscpp"/>
	<depend package="kdl"/>
	<depend package="tf"/>
  <!--   <depend package="planning_environment" /> -->
  <depend package="actionlib"/>
  <depend package="kdl_parser"/>
	<depend package="kinematics_msgs"/>
	<depend package="moveit_msgs"/>
	<depend package="visualization_msgs"/>
	<depend package="sensor_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="geometry_msgs"/>

  <depend package="planning_models"/>
  <depend package="planning_scene_monitor"/>
  <depend package="kinematics_base"/>
  <depend package="kinematics_plugin_loader"/>

  <export>
    <cpp cflags="-I${prefix}/include  -O3 -g" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib  -lvisualize_arm"/>
  </export>

</package><package name="sklearn" path="/trunk/arrg/ua_experimental/sklearn" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
  <description brief="sklearn">

     sklearn

  </description>
  <author>Antons Rebguns</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sklearn</url>

</package><package name="nnn" path="/trunk/nnn" repo="mit-ros-pkg-trunk" repo_host="https://svn.csail.mit.edu/mit-ros-pkg">
  <description brief="nnn">
   Naive Nearest Neigbors
    This library provides a naive way of doing a radius search for nearest neighbors, by simply searching through all the points to find which points are within boxes around the point in question.
    This library was created as a benchmark against which ANN and FLANN should be compared (at least for radius search)

  </description>
  <author>Garratt</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/nnn</url>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>


  <export>
    <cpp cflags=" -I${prefix}/include " lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib "/>
  </export>


</package><package name="glados" path="" repo="UCLA-robomagellan" repo_host="https://github.com/garbear/UCLA-robomagellan">
  <description brief="glados">

     GLaDOS

  </description>
  <author>Jackie Jin</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/glados</url>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <!-- message depends -->
  <depend package="std_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="tf"/>
  <!-- glados stack depends -->
  <depend package="glados_sensors"/>
  <depend package="libax3500"/>
  <!-- opencv depends for opencv node -->
  <depend package="sensor_msgs"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="image_transport"/>
</package><package name="pr2_dmp_data" path="" repo="usc-clmc-ros-pkg" repo_host="https://github.com/usc-clmc/usc-clmc-ros-pkg">
  <description brief="pr2_dmp_data">

     pr2_dmp_data

  </description>
  <author>Peter Pastor</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_dmp_data</url>

</package><package name="rtt_rosnode" path="" repo="rtt_ros_integration" repo_host="http://git.mech.kuleuven.be/robotics/rtt_ros_integration.git">
  <description brief="rtt_rosnode">

     rtt_rosnode provides an RTT plugin to add a ROS node to the RTT process, and the necessary template files and cmake macros for automatic rtt typekit and transport generation from ROS msg files

  </description>
  <author>Ruben Smits, ruben.smits@mech.kuleuven.be</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rtt_rosnode</url>
  <depend package="roscpp"/>
  <depend package="roslib"/>
  <depend package="rtt"/>
  <depend package="rtt_rospack"/>
  <depend package="ocl"/>
  <depend package="rosbuild"/>

  <export>
    <rosbuild cmake_directory="${prefix}/cmake"/>
    <cpp cflags="-I${prefix}/src -I${prefix}/include"/>
  </export>
</package><package name="manyears" path="" repo="introlab-ros-pkg" repo_host="https://github.com/introlab/introlab-ros-pkg">
  <description brief="manyears">

     ManyEars library

  </description>
  <author>François Grondin</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://sourceforge.net/projects/manyears/</url>
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/rtaudio/include" lflags="-L${prefix}/lib -L${prefix}/rtaudio/lib -lmanyears -lrtaudio"/>
  </export>
</package><package name="Laser_PLS200" path="" repo="JKU_Robotic_Stack" repo_host="https://github.com/AaronMR/JKU_Robotic_Stack">
  <description brief="PLS200">

     PLS200

  </description>
  <author>aaronmr</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/PLS200</url>
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="joy"/>
  <depend package="nav_msgs"/>

  <depend package="angles"/>
  <depend package="tf"/>
  <depend package="laser_geometry"/>





</package><package name="collision_space" path="" repo="arm_navigation" repo_host="https://kforge.ros.org/armnavigation/armnavigation">
  <description brief="Collision space">
    This package can be used to build a collision representation of the world around the robot. 
  </description>

  <author>Ioan Sucan/isucan@willowgarage.com</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>

  <depend package="rosconsole"/>
  <depend package="planning_models"/>
  <depend package="geometric_shapes"/>
  <depend package="opende"/>
  <depend package="bullet"/>
  <rosdep name="pkg-config"/>

  <export>
    <cpp cflags="-I${prefix}/include `rosboost-cfg --cflags`" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lcollision_space `rosboost-cfg --lflags thread`"/>
  </export>
  
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="ic2020_loop" path="/trunk/ic2020_loop" repo="ic2020" repo_host="http://ic2020.googlecode.com/svn">
  <description brief="ic2020_loop">

     ic2020_loop

  </description>
  <author>Sean Anderson</author>
  <license>CC BY-NC-SA 2.5</license>
  <review notes="" status="unreviewed"/>

  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="ic2020_vodom"/>
  <depend package="ic2020_toro"/>
  <depend package="geometry_msgs"/>
  
</package><package name="bilibot_navigation" path="/trunk/bilibot/bilibot_navigation" repo="bilibot-ros-pkg" repo_host="http://bilibot-ros-pkg.googlecode.com/svn">
  <description brief="bilibot_navigation">

     bilibot_navigation

  </description>
  <author>garratt</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/bilibot_navigation</url>

</package><package name="gt_pr2" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="gt_pr2">

     gt_pr2

  </description>
  <author>Hai Nguyen, Advisor: Prof. Charlie Kemp, Lab: Healthcare Robotics Lab at Georgia Tech</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/gt_pr2</url>

</package><package name="hrl_tilting_hokuyo" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="hrl_tilting_hokuyo">
    Python code to use a Robotis servo to tilt a Hokuyo to get 3D point clouds.
  </description>
  <author>Advait Jain, Advisor: Prof. Charlie Kemp, Lab: Healthcare Robotics Lab at Georgia Tech</author>
  <license>New BSD</license>

  <url>http://www.ros.org/wiki/hrl_tilting_hokuyo</url>

  <depend package="rospy"/>
  <depend package="hrl_lib"/>
  <depend package="hrl_hokuyo"/>
  <depend package="robotis"/>

</package><package name="move_action_server" path="" repo="roboframenet" repo_host="https://kforge.ros.org/appmanandroid/roboframenet">
  <description brief="move_action_server">

     move_action_server is an RFNServer which instructs robots to move forwards and backwards and pivot left and right.

  </description>
  <author>Brian Thomas</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/move_action_server</url>
  <depend package="tf"/>
  <depend package="rfnserver"/>
  <depend package="geometry_msgs"/>
  <depend package="rospy"/>

</package><package name="explore_hrl" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="explore_hrl">

     explore_hrl

  </description>
  <author>Travis Deyle</author>
  <license>BSD</license>
  <url/>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="costmap_2d"/>
  <depend package="actionlib"/>
  <depend package="move_base_msgs"/>
  <depend package="tf"/>
  <depend package="actionlib_msgs"/>
  <depend package="roslib"/>
  <depend package="navfn"/>
  <depend package="visualization_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>

  <export>
  <cpp cflags="-I${prefix}/include `rosboost-cfg --cflags`" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib `rosboost-cfg --lflags thread` -lexplore"/>
  </export>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="pr2_laser_follow_behavior" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="pr2_laser_follow_behavior">
      A example for how the laser pointer interface works the PR2.  In this
      demo behavior, the PR2 tracks the detected point using its pan-tilt then
      navigates towards it when the user double clicks the selected point.
  </description>
  <author>Hai Nguyen, Advisor: Prof. Charlie Kemp, Lab: Healthcare Robotics Lab at Georgia Tech</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/laser_pointer_action</url>
  <depend package="actionlib"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="laser_interface"/>
  <depend package="move_base_msgs"/>
</package><package name="robot_pose_ekf" path="" repo="navigation" repo_host="https://kforge.ros.org/navigation/navigation">
<description>

The Robot Pose EKF package is used to estimate the 3D pose of a robot, based on (partial) pose measurements coming from different sources. It uses an extended Kalman filter with a 6D model (3D position and 3D orientation) to combine measurements from wheel odometry, IMU sensor and visual odometry. The basic idea is to offer loosely coupled integration with different sensors, where sensor signals are received as ROS messages.

</description>
<author>Wim Meeussen</author>
<license>BSD</license>
<review notes="" status="Doc reviewed"/>
<url>http://ros.org/wiki/robot_pose_ekf</url>
<depend package="roscpp"/>
<depend package="rosbag"/>
<depend package="bfl"/>
<depend package="std_msgs"/>
<depend package="geometry_msgs"/>
<depend package="sensor_msgs"/>
<depend package="nav_msgs"/>
<depend package="tf"/>

<platform os="ubuntu" version="9.04"/>
<platform os="ubuntu" version="9.10"/>
<platform os="ubuntu" version="10.04"/>
</package><package name="srs_env_model_percp" path="" repo="srs_public" repo_host="git://github.com/ipa320/srs_public">
  <description brief="srs_env_model_percp">

ROS environment perception package provided by dcgm-robotics@FIT group:
- plane detection in depth images
- bounding box estimator
- depth image segmentation

  </description>
  <author>Rostislav Hulik (ihulik@fit.vutbr.cz), Tomas Hodan, Michal Spanel (spanel@fit.vutbr.cz)</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/srs_env_model_percp</url>

  <depend package="opencv2"/>
  <depend package="eigen"/>
  <depend package="roscpp"/>
  <depend package="image_transport"/>
  <depend package="camera_calibration_parsers"/>
  <depend package="cv_bridge"/>
  <depend package="std_msgs"/>
  <depend package="pcl"/>
  <depend package="visualization_msgs"/>
  <depend package="pcl_ros"/>
  <depend package="srs_env_model"/>
  <!--depend package="octomap_ros"/-->
  <depend package="srs_interaction_primitives"/>

  <!--TODO: Add dependency to the official BUT package -->
  <!--depend package="but_plane_segmentation" /-->
</package><package name="build_all_transport_pkg" path="" repo="ethzasl_message_transport" repo_host="https://github.com/ethz-asl/ros-message-transport">
  <description brief="build_all_transport_pkg">

     build_all_transport_pkg

  </description>
  <author>Cedric Pradalier</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/build_all_transport_pkg</url>
  <depend package="message_transport_common"/>
  <depend package="templated_transports"/>
  <depend package="compressed_imagem_transport"/>
  <depend package="imagem_transport"/>
  <depend package="pointcloud_transport"/>
  <depend package="sharedmem_transport"/>
  <depend package="string_transport"/>
  <depend package="theora_imagem_transport"/>
  <depend package="udpmulti_transport"/>

</package><package name="freetail_io" path="/trunk/freetail/freetail_io" repo="swri-ros-pkg" repo_host="http://swri-ros-pkg.googlecode.com/svn">
  <description brief="freetail_io">

     freetail_io

  </description>
  <author>Shaun Edwards</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/freetail_io</url>

  <depend package="roscpp"/>
  
  <!--For SOEM installation, see
  http://ros.org/wiki/Industrial/Tutorials/Simple_EtherCAT_Network_IO-->
  <depend package="soem_master"/>  
  <depend package="ocl"/>
  <depend package="soem_beckhoff_drivers"/>
  
  <!--Grasping messages-->
  <depend package="object_manipulation_msgs"/>
  <depend package="actionlib"/>

</package><package name="hector_slam_launch" path="/branches/fuerte/hector_slam/hector_slam_launch" repo="hector_slam" repo_host="https://tu-darmstadt-ros-pkg.googlecode.com/svn">
  <description brief="hector_slam_launch contains launch files for launching hector_slam with different robot systems/setups/postprocessing scenarios">

     hector_slam_launch contains launch files for launching hector_slam with different robot systems/setups/postprocessing scenarios

  </description>
  <author>Stefan Kohlbrecher</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hector_slam_launch</url>

  <depend package="hector_mapping"/>
  <depend package="hector_map_server"/>
  <depend package="hector_trajectory_server"/>
  <depend package="hector_geotiff"/>

</package><package name="2dnav_neato" path="/trunk/neato_robot/2dnav_neato" repo="albany-ros-pkg" repo_host="http://albany-ros-pkg.googlecode.com/svn">
  <description brief="Navigation stuff for use with the Neato XV-11">
    This package contains configuration and launch files for using the navigation stack with the Neato XV-11 robot. 
  </description>
  <author>Michael Ferguson</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/2dnav_neato</url>

</package><package name="neo_2dnav_mp_500" path="" repo="neo_navigation" repo_host="https://github.com/neobotix/neo_navigation">
  <description brief="neo_2dnav_mp_500">

     neo_2dnav_mp_500

  </description>
  <author>Timo Hackel</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/neo_2dnav_mp_500</url>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="move_base"/>
  <depend package="map_server"/>
  <depend package="amcl"/>
</package><package name="april_test" path="/trunk/stacks/april/april_test" repo="utexas" repo_host="https://utexas-ros-pkg.googlecode.com/svn">
  <description brief="april_test">

     april_test

  </description>
  <author>Piyush Khandelwal</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/april_test</url>

  <depend package="april_msgs"/>
  <depend package="image_transport"/>
  <depend package="cv_bridge"/>
  <depend package="roscpp"/>

  <rosdep name="opencv2"/>

</package><package name="rtcus_kinect_reactive_navigation" path="/branches/rtcus_kinect_reactive_navigation" repo="rtc-us-ros-pkg-branches" repo_host="https://rtc-us-ros-pkg.svn.sourceforge.net/svnroot/rtc-us-ros-pkg">
  <description brief="rtcus_kinect_reactive_navigation">

     rtcus_kinect_reactive_navigation

  </description>
  <author>Pablo Iñigo Blasco</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rtcus_kinect_reactive_navigation</url>
  
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
</package><package name="interactivespaces-controller" path="" repo="interactive-spaces" repo_host="https://code.google.com/p/interactive-spaces">
  <description brief="interactivespaces.controller">
Interactive Spaces space controller.
  </description>
  <author>Keith Hughes/khughes@google.com</author>
  <license>Apache License 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://code.google.com/p/interactive-spaces/</url>
  <depend package="rosjava"/>
  <depend package="rosjava_actionlib"/>
  <depend package="interactivespaces_msgs"/>
  <depend package="interactivespaces"/>
  <depend package="interactivespaces-database"/>
  <depend package="interactivespaces-service-script"/>
  
  <depend package="osgi"/>

  <rosdep name="java"/>
</package><package name="meka_controller_configuration_gazebo" path="/trunk/meka_simulation/meka_controller_configuration_gazebo" repo="meka-ros" repo_host="http://mekabot.com/meka-ros">
  <description brief="meka_controller_configuration_gazebo"/>
  <author/>
  <license>Modified BSD</license>
  <review notes="" status="unreviewed"/>
  <url/>

</package><package name="pymongo" path="" repo="warehousewg" repo_host="https://kforge.ros.org/warehousewg/warehouse-hg">
  <description brief="pymongo">

     3rd party package that pulls the Pymongo python interface to MongoDB.

  </description>
  <author>Bhaskara Marthi</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pymongo</url>

  <depend package="mongodb"/>

</package><package name="pr2eus_openrave" path="/trunk/pr2eus_openrave" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="pr2eus_openrave">

     pr2eus_openrave

  </description>
  <author>Chen Cheng</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2eus_openrave</url>

  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>


  <depend package="pr2eus"/>

  <depend package="orrosplanning"/>
  <depend package="robot_state_publisher"/>

  <depend package="sensor_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="rviz"/>

  <depend package="jsk_tools"/>
</package><package name="cwru_obstacle_planner" path="" repo="cwru-ros-pkg" repo_host="http://github.com/cwru-robotics/cwru-ros-pkg">
  <description brief="cwru_obstacle_planner">

     cwru_obstacle_planner

  </description>
  <author>Ben Ballard</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cwru_obstacle_planner</url>
  <depend package="actionlib"/>
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="std_msgs"/>
  <depend package="rosmsg"/>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="move_base_msgs"/>
  <depend package="move_base"/>

</package><package name="slam_experiments" path="/trunk/albany_nav/slam_experiments" repo="albany-ros-pkg" repo_host="http://albany-ros-pkg.googlecode.com/svn">
  <description brief="slam_experiments">

     slam_experiments

  </description>
  <author>Michael Ferguson</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/slam_experiments</url>

</package><package name="safe_teleop_base" path="/trunk/stacks/bosch_shared_autonomy/safe_teleop_base" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="safe_teleop_base">
     This package provides automatic collision avoidance and is intended to be used for safer teleoperation of a robot base.
  </description>
  <author>Charles DuHadway (maintained by Benjamin Pitzer)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/safe_teleop_base</url>
  <depend package="roscpp"/>
  <depend package="base_local_planner"/>
  <depend package="costmap_2d"/>
</package><package name="art_image" path="/trunk/stacks/art_vehicle/art_image" repo="utexas-art-ros-pkg" repo_host="http://utexas-art-ros-pkg.googlecode.com/svn">
  <description brief="ART vehicle imaging tools">

     Visual imaging tools for the Austin Robot Technology autonomous vehicle.

  </description>
  <author/>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/art_image</url>
  <depend package="camera1394"/>
  <depend package="compressed_image_transport"/>
  <depend package="image_transport"/>
  <depend package="image_view"/>
  <depend package="theora_image_transport"/>

</package><package name="cmd_line_control_cu" path="/trunk/cmd_line_control_cu" repo="prairiedog" repo_host="http://prairiedog.googlecode.com/svn">
  <description>A graphical interface for the CU nodes.</description>
  <author>Michael Otte</author>
  <license>GNU GPL V3</license>
  <review notes="" status="unreviewed"/>
  <url>http://correll.cs.colorado.edu/pmwiki/index.php/Main/Visualization</url>
  <depend package="roscpp"/>
  <depend package="nav_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="tf"/>
  <depend package="message_filters"/>
  <depend package="move_base_msgs"/>
  
  <cpp cflags="-I${prefix}/src/" lflags="-lglut"/>
</package><package name="AlicaClient" path="" repo="cn-alica-ros-pkg" repo_host="https://code.google.com/p/cn-alica-ros-pkg">
  <description brief="AlicaClient">

     AlicaClient

  </description>
  <author>hendrik</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/AlicaClient</url>  
  <depend package="roscs"/>
  <depend package="roscpp"/>
  <depend package="Castor"/> 
  <depend package="AlicaEngine"/>
  <depend package="std_msgs"/> 
  <rosdep name="gtk-sharp"/>
</package><package name="pr2_common_action_msgs" path="/stacks/pr2_common_actions/trunk/pr2_common_action_msgs" repo="pr2_common_actions" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_common_action_msgs">

     pr2_common_action_msgs

  </description>
  <author>Wim Meeussen</author>
  <license>BSD</license>
  <review notes="" status="API cleared"/>
  <url>http://ros.org/wiki/pr2_common_action_msgs</url>
  <depend package="actionlib_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/msg/cpp -I${prefix}/srv/cpp"/>
    <rosdoc config="rosdoc.yaml"/>
  </export>


  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="ptu46" path="/branches/stable/wu_ptu/ptu46" repo="wu-ros-pkg" repo_host="https://wu-robotics.googlecode.com/svn">
  <description brief="Directed Perception ptu46 pan/tilt driver">
     Driver for the Directed Perception ptu46 pan/tilt driver, forked from player
  </description>
  <author>Erik Karulf, David Lu</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ptu46</url>
  <depend package="tf"/>
  <depend package="sensor_msgs"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="actionlib"/>
  <depend package="ptu_control"/>
</package><package name="rfid_artoolkit" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="rfid_artoolkit">

     rfid_artoolkit

  </description>
  <author>Travis Deyle</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rfid_artoolkit</url>
  <depend package="rfid_servoing"/>
  <depend package="ar_kinect"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="ar_pose"/>
</package><package name="ar_manipulation" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="ar_manipulation">

     ar_manipulation

  </description>
  <author>Aaron King</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ar_manipulation</url>
  <depend package="tf"/>
  <depend package="actionlib"/>
  <depend package="ar_kinect"/>
  <depend package="hrl_pr2_arms"/>
  <depend package="hrl_generic_arms"/>
  <depend package="hrl_lib"/>
  <depend package="hrl_msgs"/>
</package><package name="simple_armstack_goals" path="" repo="wpdros" repo_host="https://github.com/wpd/wpdros">
  <description brief="simple_armstack_goals">

     simple_armstack_goals

  </description>
  <author>Patrick Doyle</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/simple_armstack_goals</url>
  <depend package="move_arm_msgs"/>
  <depend package="actionlib"/>

</package><package name="seabee3_demo" path="/trunk/cturtle/seabee3_demo" repo="seabee3-ros-pkg" repo_host="http://seabee3-ros-pkg.googlecode.com/svn">
  <description brief="seabee3_demo">

     seabee3_demo

  </description>
  <author>Edward T. Kaszubski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/seabee3_demo</url>
  
  <depend package="roscpp"/>
  <depend package="base_libs"/>
  <depend package="seabee3_common"/>
  <depend package="seabee3_driver_base"/>
  
  <!-- not linking dependencies, but we want to make sure these are compiled and ready to go -->
  <!-- can't link against seabee3_driver...maybe because it has no messages or libs? <depend package="seabee3_driver"/> -->
  <depend package="xsens_node"/>
  <depend package="seabee3_teleop"/>
  <depend package="dead_reckoning_odom"/>
  <depend package="localization_defs"/>
  <depend package="seabee3_driver"/>

</package><package name="cl_bullet_vis" path="" repo="cram_physics" repo_host="https://github.com/moesenle/cram_physics">
  <description brief="cl_bullet_vis">

     cl_bullet_vis

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cl_bullet_vis</url>
  <depend package="cl_bullet"/>
  <depend package="cram_physics_utils"/>
  <depend package="cl_opengl"/>
  <depend package="cl_transforms"/>
  <depend package="cl_glx"/>
  <depend package="trivial_garbage"/>
  <depend package="alexandria"/>
  <depend package="lisp_unit"/>

</package><package name="person_grabber" path="" repo="uuisrc-ros-pkg" repo_host="https://github.com/cburbridge/uuisrc-ros-pkg">
  <description brief="person_grabber">

    This node integrates the the NITE skeleton tracking library with the openni_camera point cloud generation. A pointcloud is published, containing only the points that belong to the currently tracked human. (Actually, I did not try, but maybe a large monkey would also work..) 
    
    Upon starting the node (&quot;rosrun person_grabber person_grabber&quot;), nothing will be published. After standing in front of the camera, and calibrating in the usual Y shaped position, the pointcloud will start. The console informs of the current status of the tracking, and only one user is tracked and published at a time.
    
    The point cloud is of type PointCloud2, contains X, Y, Z and RGB values, and is on the topic &quot;/rgbd/points2&quot;. The code for calculating the 3D positions of the points is taken from the openni_camera node, but stripped of the PrimeSense development kit camera parts. As such, it will only operate with a Microsoft Kinect camera.

  </description>
  <author>Chris Burbridge</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>


  <depend package="roscpp"/>
  <depend package="roslib"/>
  <depend package="geometry_msgs"/>
  <depend package="openni"/>
  <depend package="kdl"/>
  <depend package="tf"/>
  <depend package="sensor_msgs"/>
  <depend package="message_filters"/>
  <depend package="pcl_ros"/>
</package><package name="rtt_trajectory_msgs" path="" repo="rtt_common_msgs" repo_host="http://git.mech.kuleuven.be/robotics/rtt_common_msgs.git">
  <description brief="rtt_trajectory_msgs">

    Provides an rtt typekit for ROS trajectory_msgs messages.

    It allows you to use ROS messages transparently in
    RTT components and applications.

    This package was automatically generated by the
    create_rtt_msgs generator and should not be manually
    modified.

    See the http://ros.org/wiki/trajectory_msgs documentation
    for the documentation of the ROS messages in this
    typekit.

  </description>
  <author>create_rtt_msgs Generator</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rtt_rosnode</url>
  <depend package="rtt_rosnode"/>
  <depend package="trajectory_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>


</package><package name="reactive_trajectory_controller" path="/trunk/stacks/bosch_proximity_sensor_applications/reactive_trajectory_controller" repo="bosch-ros-pkg-e" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg-e/code">
  <description brief="reactive_trajectory_controller">

    reactive_trajectory_controller

  </description>
  <author>John Hsu, Melonee Wise, Stuart Glaser, Adrian Funk</author>
  <license>BSD</license>
  <review notes="" status="unreviewd"/>

  <depend package="roscpp"/>
  <depend package="angles"/>
  <depend package="filters"/>
  <depend package="tf"/>
  <depend package="tf_conversions"/>
  <depend package="pluginlib"/>
  <depend package="actionlib"/>

  <depend package="trajectory_msgs"/>

  <depend package="pr2_controllers_msgs"/>
  <depend package="pr2_controller_interface"/>
  <depend package="pr2_controller_manager"/>
  <depend package="control_toolbox"/>
  <depend package="realtime_tools"/>
  <depend package="control_msgs"/>
  
  <depend package="kinematics_msgs"/>
  <depend package="arm_navigation_msgs"/>
  
  
  
  <url>http://ros.org/wiki/reactive_trajectory_controller</url>
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp -I${prefix}/srv/cpp" lflags="-Wl,-rpath,${prefix}/lib/ -L${prefix}/lib -lrobot_mechanism_controllers"/>
    <pr2_controller_interface plugin="${prefix}/controller_plugins.xml"/>
  </export>
  <rosdep name="libtool"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="pi_head_tracking_3d_part2" path="/trunk/pi_tutorials/pi_head_tracking_3d_part2" repo="pi-robot-ros-pkg" repo_host="http://pi-robot-ros-pkg.googlecode.com/svn">
  <description brief="pi_head_tracking_3d_part2">
     Head Tracking in 3D Part 2
  </description>
  <author>Patrick Goebel</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.pirobot.org/blog/0023</url>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="tf"/>
  <depend package="rviz"/>
  <depend package="pi_tb_description"/>
  <depend package="turtlebot_description"/>
  <depend package="robot_state_publisher"/>
  <depend package="joint_state_publisher"/>
  <depend package="openni_camera"/>
  <depend package="openni_tracker"/>
  <depend package="dynamixel_driver"/>
  <depend package="dynamixel_controllers"/>
  <depend package="dynamixel_msgs"/>
  <depend package="visualization_msgs"/>
</package><package name="task_event_detector" path="" repo="usc-clmc-ros-pkg" repo_host="https://github.com/usc-clmc/usc-clmc-ros-pkg">
  <description brief="task_event_detector">

     task_event_detector

  </description>
  <author>Peter Pastor</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/task_event_detector</url>

  <depend package="roscpp"/>
  <depend package="usc_utilities"/>

  <depend package="shogun"/>

  <depend package="task_recorder2"/>
  <depend package="task_recorder2_msgs"/>
  <depend package="task_recorder2_utilities"/>

  <depend package="task_label_gui"/>
  
  <depend package="SafetyLight_msgs"/>
  
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg_gen/cpp" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -ltask_event_detector -lsvm_classifier"/>
  </export>

</package><package name="yarp_to_ros_image" path="/utils/yarp_to_ros_image" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="yarp_to_ros_image">
     Converts Yarp to ROS image (through openCV image). 
     Provides launch files for getting images from:
     a)cameras on Icub robot and
     b)simulated camera source.
  </description>
  <author>Dejan Pangercic, Alexis Maldonado</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <depend package="yarp2"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="image_transport"/>
  <depend package="sensor_msgs"/>
  <depend package="camera_calibration_parsers"/>
</package><package name="occupancy_grid_utils" path="" repo="occupancy_grid_utils" repo_host="https://kforge.ros.org/gridutils/git">
  <description brief="grid_utils">

Utilities for dealing with occupancy grids, represented as nav_msgs::OccupancyGrid objects, including coordinate conversions, shortest paths, ray tracing, and constructing from laser scans.

  </description>
  <author>Bhaskara Marthi</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/grid_utils</url>

  <depend package="nav_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="tf"/>
  <depend package="sensor_msgs"/>
  <depend package="roscpp"/>
  <depend package="laser_geometry"/>
  <depend package="bullet"/>
  <depend package="rospy"/>
  <depend package="map_server"/> <!-- Map loading -->

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lgrid_utils"/>
    <python path="${prefix}/lib:${prefix}/src"/> 
  </export>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="maximus_nav" path="" repo="smart-robotics-ros-pkg" repo_host="https://github.com/JBot/smart-robotics-ros-pkg">
  <description brief="maximus_nav">

     maximus_nav

  </description>
  <author>Jbot</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/maximus_nav</url>
  <depend package="move_base"/>
  <depend package="maximus_position"/>
  <depend package="maximus_sensors"/>

</package><package name="chair_recognition" path="/trunk/student_projects/chair_grasping/chair_recognition" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="chair_recognition">

     In this package we use some filtertechniques to recognize
     the object, which is in our case an office chair.

  </description>
  <author>Jan Metzger</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/chair_recognition</url>
 
  <depend package="pcl"/> 
  <depend package="pcl_ros"/>
  <depend package="std_msgs"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="tf"/>
  <depend package="common_rosdeps"/>
  <rosdep name="eigen"/>
</package><package name="wubble_environments" path="/trunk/arrg/wubble_world/wubble_environments" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="Gazebo simulation environments for Wubble World">

     wubble_environments

    </description>
    <author>Anh Tran</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/wubble_environments</url>

    <depend package="gazebo"/>
    <depend package="pr2_gazebo"/>

    <export>
        <gazebo gazebo_media_path="${prefix}"/>
    </export>

</package><package name="industrial_robot_client" path="/trunk/industrial_experimental/industrial_robot_client" repo="swri-ros-pkg" repo_host="http://swri-ros-pkg.googlecode.com/svn">
  <description brief="industrial_robot_client">

     industrial_robot_client

  </description>
  <author>Christina Gomez</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/industrial_robot_client</url>
  <depend package="pcl_ros"/>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="control_msgs"/>
  <depend package="trajectory_msgs"/>
  <depend package="simple_message"/>
  <depend package="actionlib_msgs"/>
  <depend package="actionlib"/>
  
  <export>
    <cpp cflags="-I${prefix}/include/"/>
  </export>

</package><package name="seabee3_machines" path="/trunk/cturtle/seabee3_machines" repo="seabee3-ros-pkg" repo_host="http://seabee3-ros-pkg.googlecode.com/svn">
  <description brief="seabee3_machines">

     seabee3_machines

  </description>
  <author>Edward</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/seabee3_machines</url>

</package><package name="clearpath_base" path="/trunk/clearpath_common/clearpath_base" repo="clearpath-ros-pkg" repo_host="http://clearpath-ros-pkg.googlecode.com/svn">
  <description brief="clearpath_base">
     The base drivers needed to connect with the onboard system for all Clearpath Robotics platforms.
  </description>
  <author>Mike Purvis</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/clearpath_base</url>
  <rosdep name="python-serial"/>
  <rosdep name="pkg-config"/>
  <depend package="rospy"/>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
</package><package name="cob_read_text" path="" repo="cob_object_perception" repo_host="git://github.com/ipa320/cob_object_perception">
  <description brief="cob_read_text">

	bases on literate_pr2 package from Menglong Zhu: menglong(at)seas.upenn.edu

  </description>
  <author>Robert Heinze, Richard Bormann</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_read_text</url>

  <depend package="opencv2"/>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <!--depend package="geometry_msgs"/-->
  <!--depend package="pr2_controllers_msgs"/-->
  <depend package="pr2_mechanism_controllers"/>
  <depend package="cv_bridge"/>
  <depend package="std_msgs"/>
  <depend package="image_transport"/>
  <depend package="cob_tesseract"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/> 
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  
  <export>
      <cpp cflags="-I${prefix}/ros/include -I${prefix}/common/include" lflags="-L${prefix}/lib -Wl,-rpath,-L${prefix}/lib -lread_text"/>
  </export>
</package><package name="zeroconf_avahi_demos" path="" repo="zeroconf_implementations" repo_host="https://github.com/stonier/zeroconf_implementations">
  <description brief="demos and tests for the zeroconf_avahi library">

     Has several demos and launch-tests for the avahi based zero-configuration.

  </description>
  <author>Daniel Stonier</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/zeroconf_avahi_demos</url>
  <depend package="zeroconf_avahi"/>
</package><package name="r2_description" path="" repo="nasa_r2_common" repo_host="https://bitbucket.org/nasa_ros_pkg/nasa_r2_common">
  <description brief="r2_description">

     r2_description

  </description>
  <author>Paul Dinh</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/r2_description</url>

</package><package name="serializer" path="/trunk/serializer" repo="pi-robot-ros-pkg" repo_host="http://pi-robot-ros-pkg.googlecode.com/svn">
  <description brief="serializer">
  
     ROS Package for the Serializer microcontroller made by the Robotics Connection.
     (As of 2012, the Serializer is now called the Element and is sold by cmRobot.com.)
     
  </description>
  <author>Patrick Goebel</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.ros.org/wiki/serializer</url>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="tf"/>
</package><package name="nmpt" path="/trunk/arrg/ua_vision/nmpt" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="NMPT (Nick's Machine Perception Toolbox)">

        This package contains Nick's Machine Perception Toolbox (NMPT)

    </description>
    <author>Nicholas Butko, packaged for ROS by Antons Rebguns</author>
    <license>Copyright (c) 2008 Nicholas Butko, Machine Perception Laboratory, University of California San Diego</license>
    <url>http://mplab.ucsd.edu/~nick/NMPT/</url>
    <depend package="opencv2"/> 
    <export>
        <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lnmpt"/>
        <doxymaker external="http://mplab.ucsd.edu/~nick/NMPT/"/>
    </export>
</package><package name="coverage_3d_planning" path="/trunk/coverage_3d/coverage_3d_planning" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="Planning a coverage path on a 3d surface.">

   This package provides algorithms to compute different types paths on a 3d surface for a manipulation robot.

  </description>
  <author>Juergen Hess</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/coverage_3d_planning</url>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="std_msgs"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="octomap_ros"/>
  <depend package="octomap"/>
  <depend package="tf"/>
  <depend package="tf2"/>
  <depend package="visualization_msgs"/>
  <depend package="common_rosdeps"/>
  <rosdep name="eigen"/>
  <depend package="lkh_solver"/>
  <depend package="arm_navigation_msgs"/> 
  <depend package="planning_environment"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="actionlib"/>
  <depend package="angles"/>
  <depend package="kdl"/>
  <depend package="kdl_parser"/>
  <depend package="voro"/>
  <depend package="surfacelet"/>
  <depend package="coverage_3d_arm_navigation"/>
  <depend package="coverage_3d_tools"/>
  <depend package="voro"/>
	
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/srv_gen/cpp/include -I${prefix}/srv/cpp -I${prefix}/src" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lcoverage_3d_planning"/>
  </export>

</package><package name="maxlite_defs" path="/trunk/sandbox/maxlite_defs" repo="vanadium-ros-pkg" repo_host="http://vanadium-ros-pkg.googlecode.com/svn">
  <description brief="Definitions and launch files for Maxwell Lite">
    Maxwell Lite is a custom mobile manipulator, this package contains his configuration and launch files.
  </description>
  <author>Michael Ferguson</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/max_lite</url>
  <depend package="maxwell_defs"/>

</package><package name="ros_vrpn_client" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="ros_vrpn_client">
     ROS node which is a client for Virtual Reality Peripheral
     Networks and publishes a TF frame and TransformStamped for
     tracked bodies.

     Tested with the Optitrak motion capture system from NaturalPoint.
  </description>
  <author>Advait Jain, Chi-Hung King, Advisor: Prof. Charlie Kemp, Lab: Healthcare Robotics Lab at Georgia Tech</author>
  <license>New BSD</license>
  <review notes="" status="unreviewed"/>

  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="bullet"/>
  <depend package="geometry_msgs"/>
</package><package name="Castor" path="" repo="cn-util-ros-pkg" repo_host="https://code.google.com/p/cn-util-ros-pkg">
  <description brief="Castor">

     Castor

  </description>
  <author>Carpe Noctem</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/Castor</url>
  <depend package="roscs"/>
  <export>
	  <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/../../lib -lcastor"/>
    <cpp lflags="-Wl,-rpath" os="ubuntu"/>
    <cs lpath="${prefix}/../../lib"/>
  </export>

</package><package name="smart_arm_kinematics" path="/trunk/arrg/crustcrawler_smart_arm/smart_arm_kinematics" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="smart_arm_kinematics">
         smart_arm_kinematics
    </description>
    
    <author>Antons Rebguns</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/smart_arm_kinematics</url>
    
    <depend package="roscpp"/>
    <depend package="geometry_msgs"/>
    <depend package="tf"/>
    <depend package="urdf"/>
</package><package name="fake_servo" path="" repo="orocos_controllers" repo_host="https://github.com/RCPRG-ros-pkg/orocos_controllers">
  <description brief="fake_servo">

     fake_servo

  </description>
  <author>Konrad Banachowicz</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/fake_servo</url>
  <depend package="rtt"/>
  <depend package="rtt_rosnode"/>
<!--  <depend package="ocl"/> -->

</package><package name="p2os_launch" path="/trunk/p2os/p2os_launch" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="p2os_launch">

     This package contains launch and config files designed for use with the p2os stack.

  </description>
  <author>Edward Kaszubski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/launch</url>

</package><package name="cwru_teleop" path="" repo="cwru-ros-pkg" repo_host="http://github.com/cwru-robotics/cwru-ros-pkg">
  <description brief="cwru_teleop">

     cwru_teleop

  </description>
  <author>Eric Perko</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cwru_teleop</url>
  <depend package="cwru_base"/>
  <depend package="joy"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="geometry_msgs"/>
  <depend package="std_msgs"/>

</package><package name="meka_gazebo" path="/trunk/meka_simulation/meka_gazebo" repo="meka-ros" repo_host="http://mekabot.com/meka-ros">
  <description> meka_gazebo</description>
  <author/>
  <license>Modified BSD</license>
  <review notes="" status="unreviewed"/>
  <url/>

  <depend package="meka_controller_configuration_gazebo"/>
  <depend package="meka_description"/>
  <depend package="pr2_gazebo_plugins"/>
  <depend package="meka_controller_plugin"/>    
  <depend package="robot_mechanism_controllers"/>
  <depend package="gazebo"/>  
  <depend package="ogre"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="std_msgs"/>

  <export>
    <gazebo gazebo_media_path="${prefix}"/>
  </export>
</package><package name="reem_bringup" path="" repo="reem_robot" repo_host="https://github.com/pal-robotics/reem_robot">
  <description brief="reem_bringup">

     Launch files and scripts needed to bring up the ROS nodes of a REEM robot.

  </description>
  <author>Adolfo Rodriguez Tsouroukdissian</author>
  <license>Modified BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/reem_bringup</url>

  <depend package="reem_description"/>
  <depend package="reem_machine"/>
  <depend package="robot_state_publisher"/>

</package><package name="dock_marker_server" path="" repo="cyphy_legacy" repo_host="http://launchpad.net/cyphy">
  <description brief="dock_marker_server">

     dock_marker_server

  </description>
  <author>Liz Murphy</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/dock_marker_server</url>
  <depend package="roscpp"/>
  <depend package="visualization_msgs"/>
  <depend package="interactive_markers"/>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>

</package><package name="meka_description" path="/trunk/meka_common/meka_description" repo="meka-ros" repo_host="http://mekabot.com/meka-ros">
  <description brief="meka_description">
    
  </description>
  <author/>
  <license>Creative Commons BY-NC-ND 3.0</license>
  <review notes="" status="unreviewed"/>
  <url/>
  
</package><package name="pololu_driver" path="/trunk/pololu_driver" repo="bilibot-ros-pkg" repo_host="http://bilibot-ros-pkg.googlecode.com/svn">
  <description brief="pololu_driver">

     pololu_driver controls the pololu simple motor driver over the USB interface

  </description>
  <author>garratt</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pololu_driver</url>
  <depend package="rospy"/>
  <depend package="geometry_msgs"/>

</package><package name="openni_swipe" path="/trunk/jsk_openni_kinect/openni_swipe" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="openni_swipe">

     openni_swipe

  </description>
  <author>tsuda</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/openni_swipe</url>
  <depend package="roscpp"/>
  <depend package="roslib"/>
  <depend package="openni"/>
  <depend package="nite"/>
  <depend package="std_msgs"/>
  <!-- <cpp lflags="-lglut -lOpenNI -lXnVNite_1_5_0"/> -->

</package><package name="overhead_kinematics" path="/trunk/sandbox/overhead_kinematics" repo="vanadium-ros-pkg" repo_host="http://vanadium-ros-pkg.googlecode.com/svn">
  <description brief="Kinematics solvers for low-DOF, overhead arms.">
    Kinematics solvers for low-DOF, overhead arms.
  </description>
  <author>Michael Ferguson</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/overhead_kinematics</url>

  <depend package="kinematics_base"/>
  <depend package="arm_navigation_msgs"/>
  <depend package="kinematics_msgs"/>
  <depend package="kdl"/>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="sensor_msgs"/>
  <depend package="tf_conversions"/>
  <depend package="kdl_parser"/>
  <depend package="pluginlib"/>  

  <!--<depend package="planning_environment"/>  
  <depend package="planning_models"/>  -->

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -loverhead_kinematics_lib"/>
    <kinematics_base plugin="${prefix}/kinematics_plugins.xml"/>
  </export>

</package><package name="tf2_visualization" path="" repo="geometry_visualization" repo_host="https://kforge.ros.org/geometry/visualization">
  <description brief="tf2_visualization">

     tf2_visualization

  </description>
  <author>Wim Meeussen</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/tf2_visualization</url>
  <depend package="tf2_msgs"/>
  <depend package="tf2"/>
  <depend package="tf2_ros"/>
  <depend package="xdot"/>
  <depend package="rxbag"/>
  <export>
    <rxbag plugin="tf2_visualization.rxbag_plugin"/>
  </export>
</package><package name="ic2020_render" path="/trunk/ic2020_render" repo="ic2020" repo_host="http://ic2020.googlecode.com/svn">
  <description brief="ic2020_render">

     ic2020_render

  </description>
  <author>Sean Anderson</author>
  <license>CC BY-NC-SA 2.5</license>
  <review notes="" status="unreviewed"/>

  <depend package="std_msgs"/>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="ic2020_vodom"/>
  
  <depend package="geometry_msgs"/>
</package><package name="ground_truth" path="/trunk/stacks/austinvilla/ground_truth" repo="utexas" repo_host="https://utexas-ros-pkg.googlecode.com/svn">
  <description brief="utexas-ros-nao-kinect">

     Gets the ground truth for the naos using a kinect sensor

  </description>
  <author>Piyush Khandelwal</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>

  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="pcl_visualization"/>

  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="image_transport"/>
  <depend package="image_geometry"/>
  <depend package="eigen"/>

  <depend package="color_table"/>
  
</package><package name="p2os_dashboard" path="/trunk/p2os/p2os_dashboard" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
    <description brief="P2OS Dashboard">
    
      p2os_dashboard is a GUI for debugging and controlling low-level state of the P2OS.  It shows things like battery status and breaker states, as well as integrating tools like rxconsole and robot_monitor.
    
    </description>
    <author>David Feil-Seifer (dfseifer@usc.edu)</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki</url>
    <depend package="rxtools"/>
    <depend package="robot_monitor"/>
    <depend package="rospy"/>
    <depend package="roslib"/>
    <depend package="std_srvs"/>
    <depend package="std_msgs"/>
    <depend package="p2os_driver"/>    
  <rosdep name="wxwidgets"/>
  <rosdep name="wxpython"/>
</package><package name="projector_calibration" path="/trunk/3dscanning/projector_calibration" repo="stanford-ros-pkg" repo_host="https://stanford-ros-pkg.googlecode.com/svn">
  <description brief="projector_calibration">

     projector_calibration

  </description>
  <author>David Mandle</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/projector_calibration</url>
  <depend package="rospy"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="sensor_msgs"/>
  <depend package="image_geometry"/>
  <depend package="projector"/>

</package><package name="cob_voltage_control" path="" repo="cob_driver" repo_host="git://github.com/ipa320/cob_driver">
  <description brief="cob_voltage_control">

     Interface to IO board that manages emergency stop and battery voltage on rob@work 3

  </description>
  <author>Alexander Bubeck</author>
  <license/>
  <review notes="" status="unreviewed"/>
  <url/>

  <depend package="roscpp"/>
  <depend package="rostest"/>
  <depend package="pr2_msgs"/>
  <depend package="libphidgets"/>
  <depend package="cob_relayboard"/>
  <depend package="rospy"/>
  <depend package="dynamic_reconfigure"/>

  

</package><package name="vicon_bridge" path="" repo="ethzasl_drivers" repo_host="https://github.com/ethz-asl/ros-drivers">
  <description brief="vicon_bridge">

     This is a driver providing data from VICON motion capture systems. It is based on the vicon_mocap package from the starmac stacks. 
     Additionally, it can handle multiple subjects / segments and allows to calibrate an origin of the vehicle(s) as this is somehow tedious with the VICON Tracker.

  </description>
  <author>Markus Achtelik</author>
  <license>BSD, based on vicon_mocap from the starmac stacks </license>
  <review notes="experimental" status="unreviewed"/>
  <url>http://ros.org/wiki/vicon_bridge</url>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="geometry_msgs"/>
  <depend package="diagnostic_updater"/> 
  <depend package="dynamic_reconfigure"/>  
</package><package name="openarms" path="/trunk/openarms" repo="stanford-ros-pkg" repo_host="https://stanford-ros-pkg.googlecode.com/svn">
  <description brief="openarms">
    Concepts, ideas, and experiments on low-cost manipulator design and control.
  </description>
  <author>Morgan Quigley mquigley@cs.stanford.edu and Alan Asbeck aasbeck@stanford.edu</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ai.stanford.edu/~mquigley</url>
  <depend package="roscpp"/>
  <depend package="eigen"/>
  <depend package="serial_port"/>
  <depend package="tf"/>
  <depend package="joy"/>
  <depend package="wiimote"/>
  <depend package="robot_state_publisher"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="std_msgs"/>
  <depend package="visualization_msgs"/>
</package><package name="cyphy_pole_detect" path="" repo="cyphy_legacy" repo_host="http://launchpad.net/cyphy">
  <description brief="cyphy_pole_detect">

     cyphy_pole_detect

  </description>
  <author>Inkyu Sa</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cyphy_pole_detect</url>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="roslib"/>
  <depend package="tf"/>
  <depend package="laser_geometry"/>
  <depend package="visualization_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="eigen"/>



</package><package name="wbc_m3_ctrl" path="" repo="whole_body_control" repo_host="https://github.com/poftwaresatent/whole_body_control">
  <description brief="wbc_m3_ctrl">
    This package is based on the RTAI control code for Dreamer, the
    Meka M3 humanoid torso of the Human-Centered Robotics Group at the
    University of Texas at Austin. http://www.me.utexas.edu/~hcrl/
  </description>
  <author>Roland Philippsen</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>https://github.com/poftwaresatent/utaustin-wbc</url>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="wbc_uta_opspace"/>
  <!-- <export> -->
  <!--   <cpp cflags="-I${prefix}/include" -->
  <!-- 	 lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lwbc_m3_ctrl" /> -->
  <!-- </export> -->
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="pr2_position_scripts" path="2_position_scripts" repo="pr2_apps" repo_host="">
  <description brief="Position Scripts for the PR2">
    This package contains a number of scripts to set various components of the PR2. They are used in the apps to improve usablity.
  </description>
  <author>Tony Pratkanis</author>
  <license>BSD</license>
  <url>http://ros.org/wiki/pr2_position_scripts</url>
  <review notes="" status="na"/>
  <depend package="actionlib"/>
  <depend package="rospy"/>
  <depend package="tf"/>
  <depend package="pr2_controllers_msgs"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="detect_pose" path="/trunk/turn_taking/detect_pose" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="detect_pose">

     detect_pose

  </description>
  <author>David Feil-Seifer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/detect_pose</url>
  <depend package="sensor_msgs"/>
  <depend package="oit_models"/>

</package><package name="composite_swissranger" path="/graveyard/composite/composite_swissranger" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description>A library for accessing SwissRanger cameras though the use of libusbSR</description>
  <author>Radu Bogdan Rusu (rusu@cs.tum.edu)</author>
  <license>BSD</license>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
<!--  <depend package="libusbSR"/> -->
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <export>
    <cpp cflags="-I${prefix}/src" lflags="-L${prefix}/lib -lswissranger"/>
  </export>
  <url/>
</package><package name="desire_description" path="" repo="cob_common" repo_host="git://github.com/ipa320/cob_common">
  <description brief="desire_description">

  This package contains the description (mechanical, kinematic, visual,
  etc.) of the Desire robot. The files in this package are parsed and used by
  a variety of other components. Most users will not interact directly
  with this package.

  </description>
  <author>Florian Weisshardt</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/desire_description</url>

  <depend package="convex_decomposition"/>
  <depend package="ivcon"/>
  <depend package="urdf"/>
  <depend package="cob_description"/>

</package><package name="face_reinterpret" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="face_reinterpret">

     face_reinterpret

  </description>
  <author>haidai</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/face_reinterpret</url>
  <depend package="sensor_msgs"/>
  <depend package="visualization_msgs"/>

</package><package name="re_kinect_object_detector" path="/public/tags/latest/object_scanning/re_kinect_object_detector" repo="roboearth" repo_host="https://ipvs.informatik.uni-stuttgart.de/roboearth/repos">
  <description brief="Detection method for re_object_recorder">

     <p>
     This package implements a detection method for models created by
     re_object_recorder.
     </p>

     <p>
     This package is part of RoboEarth (EU FP7, grant 248942).
     </p>
  </description>
  <author>Andreas Koch</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/re_kinect_object_detector</url>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="tf"/>
  <depend package="image_transport"/>
  <depend package="cv_bridge"/>
  <depend package="pcl"/>
  <depend package="re_msgs"/>

  <rosdep name="tinyxml"/>

</package><package name="schunk_controller_configuration_gazebo" path="" repo="schunk_simulation" repo_host="git://github.com/ipa320/schunk_simulation">
  <description brief="schunk_controller_configutarion_gazebo">

     This packages provides the controller configuration for simulating Schunk components in the gazebo simulator.

  </description>
  <author>Nadia Hammoudeh Garcia</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/schunk_controller_configutarion_gazebo</url>

  <depend package="pr2_controller_manager"/>
  <depend package="joint_trajectory_action"/>
  <depend package="schunk_simulated_tactile_sensors"/>

</package><package name="hector_std_msgs" path="/branches/fuerte/hector_common/hector_std_msgs" repo="hector_common" repo_host="https://tu-darmstadt-ros-pkg.googlecode.com/svn">
  <description brief="hector_std_msgs">

     hector_std_msgs

  </description>
  <author>Johannes Meyer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hector_std_msgs</url>

</package><package name="ias_gazebo" path="/simulation/ias_gazebo" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description>Launch scripts for working with our simulated robot platforms.</description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>

  <depend package="std_msgs"/>
  <depend package="rospy"/>
    
  <depend package="ogre_tools"/>
  <depend package="rosie_description"/>
  <depend package="gazebo_tools"/>
  <depend package="pr2_gazebo_plugins"/>
  <depend package="jlo"/>
  <depend package="gmapping"/>
  <depend package="robot_state_chain_publisher"/>
  <depend package="pr2_controller_manager"/>
  <depend package="pr2_gazebo"/>
  <depend package="fake_localization"/>
  <depend package="ias_mechanism_controllers"/>
</package><package name="testbench" path="" repo="iheart-ros-pkg" repo_host="git://github.com/IHeartRobotics/iheart-ros-pkg">
  <description brief="testbench">
    ROS Performance Testbench
  </description>
  <author>I Heart Engineering</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/testbench</url>
  <depend package="roscpp"/>
  <depend package="pluginlib"/>
  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>
  <rosdep name="yaml-cpp"/>
</package><package name="utilrb" path="" repo="orocos_toolchain" repo_host="https://git.gitorious.org/orocos-toolchain/utilrb.git">
  <description brief="Ruby toolkit">
    This library is a collection of useful Ruby classes
  </description>
  <author>Sylvain Joyeux/sylvain.joyeux@m4x.org</author>
  <copyright>
      LAAS-CNRS/openrobots@laas.fr
      DFKI/robotik@dfki.de
      Sylvain Joyeux/sylvain.joyeux@m4x.org
  </copyright>
  <license>CeCILL-B (BSD-like)</license>
  
  <rosdep name="ruby"/>
  <rosdep name="nokogiri"/>
</package><package name="rosjava" path="" repo="rosjava_core" repo_host="https://code.google.com/p/rosjava/">
  <description brief="rosjava">
    An implementation of ROS in pure-Java with Android support.
  </description>
  <author>damonkohler@google.com (Damon Kohler)</author>
  <license>Apache 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosjava</url>
</package><package name="cob_srvs" path="" repo="cob_common" repo_host="git://github.com/ipa320/cob_common">
  <description brief="cob_srvs">

     This Package contains Care-O-bot specific service definitions.

  </description>
  <author>Florian Weisshardt</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_srvs</url>
  
  <depend package="std_msgs"/>
  <depend package="trajectory_msgs"/>
  <depend package="geometry_msgs"/>

  <!--export>
    <cpp cflags="-I${prefix}/srv/cpp"/>
  </export-->

</package><package name="rocket_msgs" path="" repo="ros_rocket" repo_host="https://github.com/trainman419/ros_rocket">
  <description brief="rocket_msgs">

     rocket_msgs

  </description>
  <author>Austin Hendrix</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rocket_msgs</url>

</package><package name="veltrobot_msgs" path="/trunk/veltrop-ros-pkg/veltrobot/veltrobot_msgs" repo="veltrop-ros-pkg" repo_host="https://veltrop-ros-pkg.svn.sourceforge.net/svnroot/veltrop-ros-pkg">
  <description brief="veltrobot_msgs">

     Common messages used throughout the Veltrobot system.

  </description>
  <author>Taylor Veltrop</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://taylor.veltrop.com/robotics/khrhumanoidv2.php?topic=veltrop-ros-pkg</url>

  <depend package="roscpp"/>

</package><package name="error_ellipses" path="" repo="au_automow_common" repo_host="https://github.com/Auburn-Automow/au_automow_common">
  <description brief="error_ellipses">

     error_ellipses

  </description>
  <author>William Woodall</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/error_ellipses</url>
  <depend package="rospy"/>
  <depend package="nav_msgs"/>
  <depend package="visualization_msgs"/>

</package><package name="rosjava_test" path="" repo="rosjava_core" repo_host="https://code.google.com/p/rosjava/">
  <description brief="rosjava_test">
     rosjava_test contains testing infrastructure for rosjava.
  </description>
  <author>Damon Kohler</author>
  <license>Apache 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosjava_test</url>

  <depend package="rospy"/>
  <depend package="std_msgs"/>

</package><package name="ptu_controller" path="/trunk/drivers/ptu_controller" repo="ubc-ros-pkg" repo_host="https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg">
  <description brief="ptu_controller">
      This package contains a node that controls the PTU-46-17.5 pan-tilt unit from Directed Perceptions. It uses the ptu46 driver from Player with slight modifications.
  </description>
  <author>Marius Muja and David Meger</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ptu_controller</url>

  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="angles"/>
  <depend package="joy"/>
  <depend package="tf"/>

</package><package name="cob_webportal" path="" repo="cob_web" repo_host="git://github.com/ipa320/cob_web">
  <description brief="cob_webportal">

     This package contain special launch files used by the web interface 

  </description>
  <author>Ulrich Reiser</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_webportal</url>

  <depend package="robot_state_publisher"/>
</package><package name="stereo_wall_detection" path="" repo="pr2_plugs" repo_host="https://kforge.ros.org/plugs/hg">
  <description>
    Detects planar structures (e.g., walls) from stereo cameras point clouds (usually generated using a texture projector).
  </description>

  <author>Radu Bogdan Rusu</author>
  <license>BSD</license>
  <url>http://pr.willowgarage.com</url>
  <review notes="beta" status="experimental"/>

  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="angles"/>
  <depend package="visualization_msgs"/>
  <depend package="pcl_ros"/>

  <export>
    <cpp cflags="-I${prefix}/srv/cpp"/>
  </export>
</package><package name="SafetyLight_msgs" path="/darpa_arm_msgs/SafetyLight_msgs" repo="darpa_arm_msgs" repo_host="http://svn.thearmrobot.com">
  <description brief="SafetyLight_msgs">

     SafetyLight_msgs

  </description>
  <author>DARPA ARM GFE Team</author>
  <license>GPL</license>

  <depend package="roscpp"/>
  <export>
    <cpp cflags="-I${prefix}/msg/cpp"/>
  </export>

</package><package name="SnapMapICP" path="/highlevel/SnapMapICP" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="SnapMapICP">

     SnapMapICP

  </description>
  <author>Thomas Ruehr</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/SnapMapICP</url>
  <depend package="std_msgs"/>
  <depend package="pcl"/>
  <depend package="nav_msgs"/>
  <depend package="laser_geometry"/>

</package><package name="gui" path="" repo="pandora-auth-ros-pkg" repo_host="https://github.com/pandora-auth-ros-pkg/pandora-auth-ros-pkg">
  <description brief="gui">

     The PANDORA GUI package

  </description>
  <author>Vitsios Dimitrios</author>
  <license>MIT</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/gui</url>
  <depend package="roscpp"/>
  <depend package="vision_communications"/>
  <depend package="slam_communications"/>
  <depend package="mainMotorControl_communications"/>
  <depend package="navigation_communications"/>
  <depend package="controllersAndSensors_communications"/>
  <depend package="RoboticArm_communications"/>
  <depend package="dataFusion_communications"/>
  <depend package="tf"/>
  <depend package="actionlib"/>
  <depend package="roslib"/>
  <depend package="gui_communications"/>
  <depend package="state_manager"/>
  <depend package="state_manager_communications"/>
  <depend package="image_transport"/>
  <depend package="compressed_image_transport"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="sensor_msgs"/>

</package><package name="tidyup_arm_services" path="/trunk/tidyup_robot/tidyup_arm_services" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="tidyup_arm_services">
      tidyup_arm_services contains services for providing object detection and checking/execution of
      pick and place operations for the Tidyup project.
  </description>
  <author>Andreas Hertle, Christian Dornhege</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/tidyup_arm_services</url>
  <depend package="rospy"/>
  <depend package="std_srvs"/>
  <depend package="tidyup_msgs"/>
  <depend package="actionlib"/>
  <depend package="pr2_tasks"/>
  <depend package="hardcoded_facts"/>


</package><package name="cram_environment_representation" path="" repo="cram_physics" repo_host="https://github.com/moesenle/cram_physics">
  <description brief="cram_environment_representation">

     cram_environment_representation

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cram_environment_representation</url>
  <depend package="cram_reasoning"/>
  <depend package="cram_utilities"/>
  <depend package="cram_designators"/>
  <depend package="cram_roslisp_common"/>
  <depend package="cram_projection"/>
  <depend package="bullet_reasoning"/>
  <depend package="cram_plan_knowledge"/>
  <depend package="cram_plan_library"/>

</package><package name="karto_scan_matcher" path="/stacks/slam_karto/trunk/karto_scan_matcher" repo="slam_karto" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="karto_scan_matcher">

A C++ library that wraps Karto's laser scan matcher

  </description>
  <author>Bhaskara Marthi</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/karto_scan_matcher</url>
  <depend package="sensor_msgs"/>
  <depend package="roscpp"/>
  <depend package="karto"/>
  <depend package="tf"/>
  <depend package="geometry_msgs"/>
  <depend package="common_rosdeps"/>
  <rosdep name="eigen"/>
  <!--
  <depend package="pcl_ros"/>
  -->

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lkarto_scan_matcher"/>
  </export>

</package><package name="presenter" path="" repo="presenter" repo_host="http://github.com/timn/ros-presenter">
  <description brief="presenter">
    ROS slide presentation program.
  </description>
  <author>Tim Niemueller</author>
  <license>GPLv2+</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/presenter</url>
  <depend package="roslib"/>
  <depend package="roscpp"/>
  <depend package="std_srvs"/>
  <rosdep name="xpdf"/> 
</package><package name="bma180_driver" path="/trunk/stacks/bosch_drivers/bma180_driver" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="bma180_driver">

  The bma180_driver class provides the user with sensor-specific 
  methods to access the temperature and acceleration data on the 
  bma180 sensor. This class addresses the sensor through a hardware
  interface using generic function calls common to all hardware
  interfaces. In this manner, the driver is independent of the 
  hardware device acting as a passthrough.  
  
  </description>
  <author>Joshua Vasquez, Philip Roan. Maintained by Philip Roan</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/bma180</url>
  <depend package="bosch_drivers_common"/>

  <export>
    <cpp cflags="-I${prefix}/include/bma180_driver" lflags="-L${prefix}/lib -lbma180"/>
  </export>
  <export>
    <cpp cflags="-I${prefix}/include/bma180_driver" lflags="-L${prefix}/lib -lbma180_parameters"/>
  </export>
  
</package><package name="kinematics_msgs" path="" repo="arm_navigation" repo_host="https://kforge.ros.org/armnavigation/armnavigation">
  <description brief="kinematics_msgs">
    This package provides general-purpose messages and services that can be used for kinematic computation using a ROS interface.
  </description>
  <author>Sachin Chitta</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/kinematics_msgs</url>

  <depend package="geometry_msgs"/>
  <depend package="trajectory_msgs"/>
  <depend package="arm_navigation_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="ecl_maps" path="/trunk/ecl_navigation/ecl_maps" repo="ecl_navigation" repo_host="https://embedded-control-library.googlecode.com/svn">
  <description brief="C++ containers for maps in robotic navigation">

	These establish some c++ style containers for maps
	used in robotic navigation.
	
  </description>
  <author>Daniel Stonier (d.stonier@gmail.com)</author>
  <license>BSD</license>
  <review notes="" status="api cleared"/>
  <url>http://snorriheim.dnsdojo.com/redmine/wiki/ecl</url>
  <depend package="ecl_exceptions"/>
  <depend package="ecl_formatters"/>
  <depend package="ecl_linear_algebra"/>
  <depend package="ecl_license"/>
  <depend package="ecl_build"/>
  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>
</package><package name="mesh_generator" path="/trunk/stacks/bosch_surface_reconstruction/mesh_generator" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <author>Benjamin Pitzer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="tf"/>
  <depend package="surface_modelling_common"/>
  <depend package="rtc"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="driver_base"/>
  <depend package="openmesh"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="triangle_mesh_msgs"/>
  <export>
    <cpp cflags="-I${prefix}/msg/cpp -I${prefix}/srv/cpp"/>
  </export>
</package><package name="pointcloud_transport" path="" repo="ethzasl_message_transport" repo_host="https://github.com/ethz-asl/ros-message-transport">
  <description brief="pointcloud_transport">

     pointcloud_transport

  </description>
  <author>Cedric Pradalier</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pointcloud_transport_base</url>
  <depend package="pluginlib"/>
  <depend package="message_transport_common"/>
  <depend package="templated_transports"/>
  <depend package="sensor_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lpointcloud_transport"/>
    <pointcloud_transport plugin="${prefix}/default_plugins.xml"/>
  </export>

</package><package name="clearpath_bringup" path="/trunk/clearpath_common/clearpath_bringup" repo="clearpath-ros-pkg" repo_host="http://clearpath-ros-pkg.googlecode.com/svn">
  <description brief="clearpath_bringup">
    The clearpath_bringup package provides a simple warn node.
  </description>
  <author>Mike Purvis</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/clearpath_bringup</url>
  <rosdep name="daemontools"/>
  <depend package="rospy"/>
  <depend package="std_msgs"/>
</package><package name="vrmagic_multi_driver" path="/trunk/vrmagic_camera/vrmagic_multi_driver" repo="vrmagic_camera" repo_host="https://tu-darmstadt-ros-pkg.googlecode.com/svn">
  <description brief="vrmagic_multi_driver">
    A node to provide access to VRmagic multi-sensor cameras. This driver is not feature complete and was only tested with a stereo configuration.
  </description>
  <author>Philipp Schneider, Stefan Kohlbrecher</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/vrmagic_multi_driver</url>
  <depend package="roscpp"/>
  <depend package="image_transport"/>
  <depend package="sensor_msgs"/>
  <depend package="stereo_msgs"/>
  <depend package="driver_base"/>
  <depend package="vrmagic_devkit_wrapper"/>
</package><package name="arbotix_msgs" path="/trunk/arbotix/arbotix_msgs" repo="vanadium-ros-pkg" repo_host="http://vanadium-ros-pkg.googlecode.com/svn">
  <description brief="Message/Service definitions for the ArbotiX">
    Messages and Services definitions for the ArbotiX.
  </description>
  <author>Michael Ferguson</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/arbotix_msgs</url>
  <depend package="rospy"/>
  <depend package="roscpp"/>
</package><package name="humanoid_nav_msgs" path="/trunk/humanoid_stacks/humanoid_msgs/humanoid_nav_msgs" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief=" Messages and services for humanoid robot navigation">

     Messages and services for humanoid robot navigation

  </description>
  <author>Armin Hornung</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/humanoid_nav_msgs</url>
  
  <depend package="geometry_msgs"/>
  <depend package="actionlib_msgs"/>
</package><package name="srs_people_tracking_filter" path="" repo="srs_public" repo_host="git://github.com/ipa320/srs_public">
  <description brief="srs_people_tracking_filter">

     tracker

  </description>
  <author>Alex Noyvirt</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/filter</url>
  
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="tf"/>
  <depend package="bfl"/>
  <depend package="bullet"/>
  <depend package="message_filters"/>
  <depend package="srs_msgs"/>
  <depend package="sensor_msgs"/>

 <export>
 <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lpeople_tracking_filter `rosboost-cfg --lflags thread,signals`"/>
 </export>


  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="ecl_math" path="/trunk/ecl_core/ecl_math" repo="ecl_core" repo_host="https://embedded-control-library.googlecode.com/svn">
  <description brief="Elementary math constants and functions">

    This package provides simple support to cmath, filling in holes
    or redefining in a c++ formulation where desirable.

  </description>
  <author>Daniel Stonier (d.stonier@gmail.com)</author>
  <license>BSD</license>
  <review notes="" status="doc reviewed"/>
  <url>http://snorriheim.dnsdojo.com/redmine/wiki/ecl</url>
  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>
  <depend package="ecl_license"/>
  <depend package="ecl_build"/>
  <depend package="ecl_type_traits"/>
  <rosbuild2>
    <export>
      <include_dir>${ecl_math_SOURCE_DIR}/include</include_dir>
    </export>
    <depend package="ecl_license"/>
    <depend package="ecl_build"/>
    <depend package="ecl_type_traits"/>
  </rosbuild2>
</package><package name="tidyup_utils" path="/trunk/tidyup_robot/tidyup_utils" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="tidyup_utils">
     tidyup_utils
  </description>
  <author>Andreas Hertle</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/tidyup_utils</url>
  <depend package="roscpp"/>
  <depend package="arm_navigation_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="planning_environment"/>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -ltidyup_utils"/>
  </export>

</package><package name="sr_hardware_interface" path="" repo="shadow_robot" repo_host="lp:sr-ros-interface">
  <description brief="sr_hardware_interface">

    This package contains the actuator used in the hand model.

  </description>
  <author>Ugo Cupcic / ugo@shadowrobot.com</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sr_hardware_interface</url>
  <depend package="roscpp"/>
  <depend package="pr2_hardware_interface"/>

  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>

</package><package name="ar_pose" path="" repo="ccny_vision" repo_host="http://robotics.ccny.cuny.edu/git/ccny-ros-pkg/ccny_vision.git">
  <description brief="ar_pose">
    Augmented Reality Marker Pose Estimation using ARToolkit
  </description>
  <author>Ivan Dryanovski, William Morris, Gautier Dumonteil et al.</author>
  <license>GPL</license>
  <review notes="" status="experimental"/>
  <url>http://www.ros.org/wiki/ar_pose</url>
  <rosdep name="glut"/>
  <depend package="visualization_msgs"/>
  <depend package="artoolkit"/>
  <depend package="geometry_msgs"/>
  <depend package="tf"/>
  <depend package="resource_retriever"/>
  <depend package="opencv2"/>
  <depend package="image_transport"/>
  <depend package="cv_bridge"/>
</package><package name="geometric_semantics_kdl" path="" repo="geometric_relations_semantics" repo_host="http://git.mech.kuleuven.be/robotics/geometric_relations_semantics.git">
  <description brief="geometric_semantics_kdl">

    This package provides support for <a href="http://www.ros.org/wiki/orocos_kdl">orocos_kdl</a> types on top of the <a href="http://www.ros.org/wiki/geometric_semantics">geometric_semantics</a> package (for instance KDL::Frame to represent the relative pose of two rigid bodies).

  </description>
  <author>Tinne De Laet</author>
  <license>LGPLv2.1 / BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.orocos.org/wiki/geometric-relations-semantics-wiki</url> 
  <depend package="orocos_kdl"/>
  <depend package="geometric_semantics"/>
  <export>
        <rosdoc config="rosdoc.yaml"/>
        <cpp cflags="-I${prefix}/src" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lgeometric_semantics_kdl"/>
   </export>

</package><package name="wpd_arm_nav" path="" repo="wpdros" repo_host="https://github.com/wpd/wpdros">
  <description brief="wpd_arm_nav">

     wpd_arm_nav

  </description>
  <author>Patrick Doyle</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/wpd_arm_nav</url>

</package><package name="eurobot_obstacles" path="" repo="smart-robotics-ros-pkg" repo_host="https://github.com/JBot/smart-robotics-ros-pkg">
  <description brief="eurobot_obstacles">

     eurobot_obstacles

  </description>
  <author>jbot</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/eurobot_obstacles</url>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="arm_navigation_msgs"/>
  <depend package="sensor_msgs"/>

</package><package name="starmac_roshlib" path="" repo="starmac-ros-pkg" repo_host="https://bitbucket.org/bouffard/starmac-ros-pkg">
  <description brief="starmac_roshlib">

     starmac_roshlib is intended to house any generic rosh-related code bits used by rosh
     scripts.

  </description>
  <author>bouffard</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/starmac_roshlib</url>
  <depend package="rosh"/>
  
</package><package name="pr2_base_application" path="/stacks/pr2_web_apps/trunk/pr2_base_application" repo="pr2_web_apps" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_base">
A collection of nodes that multiple apps depend on at runtime.  Eventually, many of these nodes will migrate into pr2_bringup/pr2.launch
  </description>
  <author>Wim Meeussen</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://pr.willowgarage.com/wiki/pr2_base</url>
  <depend package="roslib"/>
  <depend package="rospy"/>
  <depend package="webui"/>
  <depend package="rosweb"/>
  <depend package="std_msgs"/>
  <depend package="pr2_tuck_arms_action"/>
  <depend package="pr2_arm_move_ik"/>
  <depend package="joint_trajectory_generator"/>
  <depend package="dwa_local_planner"/>
  <depend package="wg_pr2_2dnav"/>
  <depend package="move_slow_and_clear"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="pr2_gripper_reactive_approach" path="/stacks/pr2_object_manipulation/branches/0.6-branch/manipulation/pr2_gripper_reactive_approach" repo="pr2_object_manipulation" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_gripper_reactive_approach">

     Executes a grasp with the PR2 gripper, starting from the
     pre-grasp stage and using the tactile sensors to correct for
     unexpected contacts encountered along the way.

  </description>
  <author>Kaijen Hsiao</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_gripper_reactive_approach</url>

  <depend package="rospy"/>
  <depend package="tf"/>
  <depend package="actionlib"/>
  <depend package="std_srvs"/>
  <depend package="arm_navigation_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="pr2_mechanism_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="interpolated_ik_motion_planner"/>
  <depend package="tabletop_collision_map_processing"/>
  <depend package="trajectory_msgs"/>
  <depend package="pr2_gripper_action"/>
  <depend package="pr2_mechanism_controllers"/>
  <depend package="sensor_msgs"/>
  <depend package="pr2_manipulation_controllers"/>
  <depend package="joint_trajectory_action"/>
  <depend package="object_manipulator"/>
  <depend package="object_manipulation_msgs"/>  
  <depend package="pr2_gripper_sensor_action"/>
  <depend package="pr2_gripper_sensor_msgs"/>

</package><package name="rqt_gui" path="" repo="rqt" repo_host="https://kforge.ros.org/visualization/rqt">
  <description brief="Integrated graphical user interface for ROS">
    rqt_gui provides the main to start an instance of the ROS integrated graphical user interface provided by qt_gui.
  </description>
  <author>Dirk Thomas</author>
  <license>BSD</license>
  <review notes="2012-06-20" status="API cleared"/>
  <url>http://ros.org/wiki/rqt_gui</url>

  <depend package="qt_gui"/>
</package><package name="blort_ros" path="" repo="perception_blort" repo_host="https://github.com/pal-robotics/perception_blort">
  <description brief="blort_ros">

    BLORT - The Blocks World Robotic Vision Toolbox <br/>
    ROS interface classes and nodes for the BLORT library.

  </description>
  <author>Bence Magyar</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/blort_ros</url>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="image_transport"/>
  <depend package="geometry_msgs"/>
  <depend package="std_msgs"/>
  <depend package="tf"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="blort"/>

</package><package name="wifi_ddwrt" path="/stacks/wifi_drivers/trunk/wifi_ddwrt" repo="wifi_drivers" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="dd-wrt wifi ap">
     Access to the DD-WRT wifi
  </description>
  <author>Scott Hassan/hassan@willowgarage.com, Eitan Marder-Eppstein/eitan@willowgarage.com</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://pr.willowgarage.com/wiki/wifi_ddwrt</url>
  <depend package="rospy"/>
  <depend package="std_msgs"/>  
  <depend package="pr2_msgs"/>
  <depend package="rostest"/>  
  <depend package="tf"/>  
  <depend package="geometry_msgs"/>  
  <depend package="nav_msgs"/>  
  <depend package="visualization_msgs"/>  

  <rosdep name="python-mechanize"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="google_map_transport" path="" repo="google" repo_host="https://code.google.com/p/rosjava.google/">
  <description brief="google_map_transport">
    A compressed transport for map data.
  </description>
  <author>Damon Kohler</author>
  <license>Apache 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/google_map_transport</url>
</package><package name="pointing_markers" path="/trunk/irvs-ros-pkg/pointing_markers" repo="irvs-ros-pkg" repo_host="http://subaru.ait.kyushu-u.ac.jp/svn/irvs-ros-pkg">
  <description brief="pointing_markers">

     pointing_markers

  </description>
  <author>pyo</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pointing_markers</url>
  <depend package="roscpp"/>
  <depend package="visualization_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="openni_camera"/>
  <depend package="openni_tracker"/>
  <depend package="image_view"/>
</package><package name="wm_imu_arm_tracker" path="/penn_lightweight_teleop/trunk/wm_imu_arm_tracker" repo="penn_lightweight_teleop" repo_host="https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs">
  <description brief="wm_imu_arm_tracker">

     wm_imu_arm_tracker

  </description>
  <author>Will McMahan</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/wm_imu_arm_tracker</url>
  
  <!-- Used for tracking the arm position with imus -->
  <depend package="rospy"/>
  <depend package="chr_6dm_imu"/>
  <depend package="penn_lightweight_teleop_msgs"/>
  <depend package="std_msgs"/>
  
  <!-- Used for visualizing the arm position. -->
  <depend package="roscpp"/>
  <depend package="visualization_msgs"/>
  <depend package="penn_lightweight_teleop_msgs"/>
  <depend package="geometry_msgs"/>
  
</package><package name="ias_kitchen_defs" path="/kitchen_model/ias_kitchen_defs" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="ias_kitchen_defs">

    URDF definitions of the kitchen lab used at IAS@TUM.

  </description>
  <author>Nico Blodow, Lucian Cosmin Goron</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>

  <depend package="xacro"/>
  <depend package="robot_state_chain_publisher"/>

</package><package name="simple_message" path="/trunk/industrial_core/simple_message" repo="swri-ros-pkg" repo_host="http://swri-ros-pkg.googlecode.com/svn">
  <description brief="simple_message">

     simple_message defines a simple messaging connection and protocol for communicating with an industrial robot controller.  Additional handler and manager classes are included for handling connection limited systems.

  </description>
  <author>Shaun Edwards</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/simple_message</url>
  
  <depend package="roscpp"/>

  <export>
    <cpp cflags="-I${prefix}/include -DROS=1" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lsimple_message"/>
  </export>

</package><package name="roscpplight" path="/trunk/packages/rosdeps/core/roscpplight" repo="eros" repo_host="https://code.ros.org/svn/eros">
  <description brief="Simple implementation of roscpp">
    roscpplight is a simple implementation of a part of the ROS communication layer, allowing a component to publish and subscribe to ROS messages.
    The purpose is to provide a library for interfacing simple nodes e.g. sensors, actuators or other robot control systems to ROS with a minimum set of dependencies and threading model constraints.
    The current version is a test of the concept and thus not meant for serious use.
    It uses boost asio for network communication to improve portability.
    XmlRpc++ has been used for convenience, but a different xmlrpc implementation would improve the threading constraints.
  </description>
  <author>Morten Kjærgaard</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/roscpplight</url>
  <depend package="xmlrpcpp"/>
  <depend package="std_msgs"/>
  <depend package="roscpp_serialization"/>
</package><package name="pr2_task_recorder2" path="" repo="usc-clmc-ros-pkg" repo_host="https://github.com/usc-clmc/usc-clmc-ros-pkg">
  <description brief="pr2_task_recorder2">

     pr2_task_recorder2

  </description>
  <author>Peter Pastor</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_task_recorder2</url>

  <depend package="roscpp"/>
  <depend package="task_recorder2"/>
  <depend package="task_recorder2_utilities"/>
  <depend package="task_recorder2_msgs"/>

</package><package name="gazebo" path="/stacks/simulator_gazebo/trunk/gazebo" repo="simulator_gazebo" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="gazebo">

  This ROS package checks out and compiles a hand-picked stable mercurial revision of the gazebo-1.x.x/release candidate from the
    <a href="http://gazebosim.org">Gazebo Project</a>.
  This package also provides some ROS plugins for working under the ROS environment.
  This package will update to newer gazebo-1.x.x releases of Gazebo incrementally as new revisions are made stable.

  If you are a developer and would like to contribute to the Gazebo simulator project directly, please visit
    <a href="http://kforge.ros.org/projects/gazebo">Kforge Gazebo Project page</a> and ask to join the project.

  </description>
  <author>Nate Koenig, Andrew Howard, with contributions from many others. See web page for a full credits llist.</author>
  <license>Apache 2.0</license>
  <review notes="" status="simulator_gazebo"/>
  <depend package="ogre"/>
  <depend package="gazebo_msgs"/>

  <!-- uncomment for cuda for parallel_quickstep
  <depend package="parallel_quickstep" />
  -->

  <url>http://playerstage.sf.net</url>
  <export>
    <cpp cflags="-I${prefix}/include `PKG_CONFIG_PATH=${prefix}/gazebo/lib/pkgconfig pkg-config --cflags gazebo` `PKG_CONFIG_PATH=${prefix}/gazebo/lib/pkgconfig pkg-config --cflags gazebo_ode` `PKG_CONFIG_PATH=${prefix}/gazebo/lib/pkgconfig pkg-config --cflags gazebo_transport`" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lurdf2gazebo `xml2-config --libs` `rosboost-cfg --lflags thread,signals` `fltk-config --use-gl --ldflags` -lfreeimage `PKG_CONFIG_PATH=${prefix}/gazebo/lib/pkgconfig pkg-config --libs gazebo` `PKG_CONFIG_PATH=${prefix}/gazebo/lib/pkgconfig pkg-config --libs gazebo_transport` `PKG_CONFIG_PATH=${prefix}/gazebo/lib/pkgconfig pkg-config --libs gazebo_ode`"/>
    <doxymaker external="http://playerstage.sourceforge.net/doc/Gazebo-manual-svn-html/"/>
    <gazebo gazebo_media_path="${prefix}/gazebo/share/gazebo-1.0.2"/>
    <gazebo plugin_path="${prefix}/gazebo/lib/gazebo-1.0.2/plugins"/>
  </export>
  <versioncontrol type="svn" url="https://playerstage.svn.sourceforge.net/svnroot/playerstage/code/gazebo/trunk"/>
  <depend package="roslib"/>
  <depend package="bullet"/>
  <depend package="common_rosdeps"/>
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  <depend package="urdf"/>
  <depend package="urdf_interface"/>
  <depend package="std_srvs"/>
  <depend package="tf"/> <!-- use tf python transforms -->
  <depend package="rosgraph_msgs"/>
  <depend package="dynamic_reconfigure"/>
  <rosdep name="protobuf-dev"/>
  <rosdep name="libtool"/>
  <rosdep name="fltk"/>
  <rosdep name="libxml2"/>
  <rosdep name="pkg-config"/>
  <rosdep name="yaml"/>
  <rosdep name="tinyxml"/>
  <rosdep name="libqt4-dev"/>
  <rosdep name="libqt4-opengl-dev"/>
  <rosdep name="tbb"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>

</package><package name="rosqwerk" path="/trunk/colbot-ros-pkg/rosqwerk" repo="colbot-ros-pkg" repo_host="http://colbot.googlecode.com/svn">
  <description brief="rosqwerk">
     ROS node to control Qwerk board (servos, motors, etc.) from Charmed Labs (http://www.charmedlabs.com)
  </description>
  <author>fpesquet@gmail.com</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>none</url>  
  <depend package="roslib"/>
  <depend package="rospy"/>
  <depend package="rosservice"/>
  <depend package="std_msgs"/>
  <depend package="std_srvs"/>
  <depend package="sensor_msgs"/>
</package><package name="teleop_msgs" path="" repo="generic_teleop" repo_host="https://github.com/skynetish/generic_teleop">

  <!-- Package summary -->
  <description brief="Tele-operation messages.">

    This package provides tele-operation message types.

  </description>
  <author>Kevin LeBlanc (kevin.canadian@gmail.com)</author>
  <license>BSD</license>
  <url>https://github.com/skynetish/generic_teleop/wiki</url>

</package><package name="polled_camera" path="/stacks/image_common/trunk/polled_camera" repo="image_common" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Library for polled camera drivers">

     polled_camera contains a service and C++ helper classes for implementing a polled
     camera driver node and requesting images from it. The package is currently for
     internal use as the API is still under development.

  </description>
  <author>Patrick Mihelich</author>
  <license>BSD</license>
  <review notes="2010/01/11" status="Doc reviewed"/>
  <url>http://ros.org/wiki/polled_camera</url>
  <depend package="image_transport"/>
  <depend package="sensor_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lpolled_camera"/>
  </export>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="ros_check" path="" repo="parsec" repo_host="https://code.google.com/p/parsec">
  <description brief="ros_check">

    Macros for checking condititions in C++ and printing a nice stack
    trace in case of failure.

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>Apache 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ros_check</url>
  <depend package="roscpp"/>
  <depend package="rosconsole"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lros_check"/>
  </export>
</package><package name="room_explore" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="room_explore">

     room_explore

  </description>
  <author>Travis Deyle</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/room_explore</url>
  <depend package="rospy"/>
  <depend package="tf"/>
  <depend package="geometry_msgs"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="move_base_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="std_msgs"/>
  <depend package="explore_hrl"/>
</package><package name="geometric_semantics_tf_msgs_conversions" path="" repo="geometric_relations_semantics" repo_host="http://git.mech.kuleuven.be/robotics/geometric_relations_semantics.git">
  <description brief="geometric_semantics_tf_msgs_conversions">

     <a href="http://www.ros.org/wiki/geometric_semantics_tf_msgs_conversions">geometric_semantics_tf_msgs_conversions</a> provides support conversions between <a href="http://www.ros.org/wiki/geometric_semantics_tf_msgs">geometric_semantics_tf_msgs</a> and the C++ <a href="http://www.ros.org/wiki/geometric_semantics_tf">geometric_semantics_tf</a> types defined on the <a href="http://www.ros.org/wiki/geometric_semantics_tf">geometric_semantics_tf</a> package.

  </description>
  <author>Tinne De Laet</author>
  <license>LGPLv2.1/BSD</license>
  <url>http://www.orocos.org/wiki/geometric-relations-semantics-wiki</url> 
  <review notes="" status="unreviewed"/>
  <depend package="geometric_semantics_tf"/>
  <depend package="geometric_semantics_tf_msgs"/>
  <depend package="geometric_semantics_msgs_conversions"/>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <export>
        <rosdoc config="rosdoc.yaml"/>
        <cpp cflags="-I${prefix}/src" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lgeometric_semantics_tf_msgs_conversions"/>
   </export>

</package><package name="SimRobot" path="/darpa_arm_sim_servers/SimRobot" repo="darpa_arm_sim_servers" repo_host="http://svn.thearmrobot.com">
  <description brief="SimRobot">

     SimRobot

  </description>
  <author>Andrew Somerville</author>
  <license>GLPv3</license>
  <review notes="" status="unreviewed"/>
  <depend package="re2gazeboPatch"/>
  <depend package="WAM_sim_server"/>
  <depend package="DPPanTilt_sim_server"/>
  <depend package="SafetyLight_sim_server"/>
  <depend package="Bumblebee2_sim_server"/>
<!--   <depend package="SR4000_sim_server"/> -->
  <!--depend package="prosilica_sim_server"/-->
  <depend package="audio_sim_server"/>
  <depend package="darm_dashboard"/>
  <depend package="re2darmGazeboPlugins"/>
  <depend package="re2darmGazeboReplay"/>

</package><package name="ecl_threads" path="/trunk/ecl_core/ecl_threads" repo="ecl_core" repo_host="https://embedded-control-library.googlecode.com/svn">
  <description brief="c++ extensions for threaded programming">

     This package provides the c++ extensions for a variety of threaded programming tools. These
     are usually different on different platforms, so the architecture for a cross-platform framework
     is also implemented.

  </description>
  <author>Daniel Stonier (d.stonier@gmail.com)</author>
  <license>BSD</license>
  <review notes="" status="api cleared"/>
  <url>http://yujin.dnsdojo.com:3000/wiki/ycs/</url>
  <depend package="ecl_concepts"/>
  <depend package="ecl_config"/>
  <depend package="ecl_errors"/>
  <depend package="ecl_exceptions"/>
  <depend package="ecl_time"/>
  <depend package="ecl_utilities"/>
  <depend package="ecl_license"/>
  <depend package="ecl_build"/>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lecl_threads"/>
  </export>
</package><package name="topological_roadmap" path="/stacks/topological_navigation/trunk/topological_roadmap" repo="topological_navigation" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="topological_roadmap">
Defines a topological roadmap, which overlays a graph of waypoints over a topological graph as defined in the topological_map_2d package.
  </description>
  <author>Bhaskara Marthi</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/topological_roadmap</url>
  <depend package="topological_nav_msgs"/>
  <depend package="topological_map_2d"/>
  <depend package="graph_mapping_utils"/>
  <depend package="occupancy_grid_utils"/>
  <depend package="mongo_roscpp"/>
  <depend package="visualization_msgs"/>
  <depend package="actionlib"/>
  <depend package="navfn"/>
  <depend package="costmap_2d"/>
  <depend package="move_base_msgs"/>

</package><package name="katana_openrave_test" path="" repo="katana_manipulation" repo_host="http://kos.informatik.uni-osnabrueck.de/katana_manipulation.git">
  <description brief="katana_openrave_test">

     katana_openrave_test

  </description>
  <author>Henning Deeken</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/katana_openrave_test</url>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="orrosplanning"/>
  <depend package="openrave"/>
  <depend package="ompl"/>
  <depend package="move_arm_msgs"/>


</package><package name="turtlebot_sounds" path="" repo="turtlebot_apps" repo_host="https://kforge.ros.org/turtlebot/turtlebot_apps">
  <description brief="turtlebot_sounds">

     Play a single fixed sound file when chirp.launch is launched, at full volume.

  </description>
  <author>Dave Hershberger</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/turtlebot_sounds</url>
</package><package name="policy_improvement_loop" path="" repo="usc-clmc-ros-pkg" repo_host="https://github.com/usc-clmc/usc-clmc-ros-pkg">
  <description brief="policy_improvement_loop">

     policy_improvement_loop

  </description>
  <author>Mrinal Kalakrishnan</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/policy_improvement_loop</url>

  <depend package="usc_utilities"/>
  <depend package="policy_improvement"/>
  <depend package="policy_library"/>
  <depend package="task_manager"/>
  <depend package="rosbag"/>

  <export>
    <task_manager plugin="${prefix}/task_plugins.xml"/>
    <cpp cflags="-I${prefix}/include -I${prefix}/srv/cpp -I${prefix}/msg/cpp" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lpolicy_improvement_loop"/>
  </export>

</package><package name="move_arm_tutorials" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="move_arm_tutorials">

     move_arm_tutorials

  </description>
  <author>Advait Jain</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/move_arm_tutorials</url>
  <depend package="rospy"/>
  <depend package="move_arm"/>
  <depend package="move_arm_msgs"/>
  <depend package="actionlib"/>

</package><package name="roscpp_tutorials" path="/stacks/ros_tutorials/trunk/roscpp_tutorials" repo="ros_tutorials" repo_host="https://code.ros.org/svn/ros">
  <description brief="Shows the features of ROS step-by-step">
    This package attempts to show the features of ROS step-by-step,
    including using messages, servers, parameters, etc.
  </description>
  <author>Morgan Quigley</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/roscpp_tutorials</url>
  <depend package="roscpp"/>
  <depend package="std_srvs"/>
  <depend package="std_msgs"/>
  <export>
    <cpp cflags="-I${prefix}/srv/cpp"/>
  </export>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>

</package><package name="face_detector_mono" path="/perception/face_detector_mono" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="face_detector_mono">
    Detects faces in 2D images using Haar-like features and cascade classifier.
    Based on facedetect.cpp from openCV.
  </description>
  <author>Dejan Pangercic</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="image_transport"/>
  <depend package="sensor_msgs"/>
<!--   <depend package="yarp2"/> -->
</package><package name="iowarrior" path="/trunk/RCF4ROS/devices/iowarrior" repo="roblab-whge-ros-pkg" repo_host="http://roblab-whge-ros-pkg.googlecode.com/svn">
  <description brief="iowarrior">

     Provides a package to control the relay-card.

  </description>
  <author>B.König</author>
  <license>CreativeCommons BY-NC-SA License</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/iowarrior</url>
  <depend package="roscpp"/>

</package><package name="cob_trajectory_controller" path="" repo="cob_driver" repo_host="git://github.com/ipa320/cob_driver">
  <description brief="cob_trajectory_controller">

     This package provides a trajectory controller which controlls velocities for a chain of joints. This controller can be used e.g. with [[schunk_powercube_chain]].

  </description>
  <author>Alexander Bubeck</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_trajectory_controller</url>
  
  <depend package="roscpp"/>
  <depend package="cob_srvs"/>
  <depend package="brics_actuator"/>
  <depend package="sensor_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="actionlib"/>
  <depend package="control_msgs"/>
  <depend package="kdl"/>

</package><package name="hector_xacro_tools" path="/branches/fuerte/hector_models/hector_xacro_tools" repo="hector_models" repo_host="https://tu-darmstadt-ros-pkg.googlecode.com/svn">
  <description brief="hector_xacro_tools provides common xacro macros useful for a wide variety of urdf models, like macros for commonly needed inertia tensors.">

     hector_xacro_tools

  </description>
  <author>Stefan Kohlbrecher</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hector_xacro_tools</url>

</package><package name="husky_localization" path="" repo="clearpath_husky" repo_host="https://github.com/clearpathrobotics/clearpath_husky">
  <description brief="husky_localization">

     The husky_localization package contains method for providing your Clearpath Robotics Husky with basic state estimation given a few possible sensor arrangements. Currently, it relies on robot_pose_ekf.

  </description>
  <author>Ryan Gariepy</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/husky_localization</url>

</package><package name="opende" path="/stacks/physics_ode/trunk/opende" repo="physics_ode" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="opende">

    <p>
    This package contains the <a href="http://opende.sf.net">Open Dynamics Engine</a> (ODE).  
    This package compiles a wg branch of ODE which is intended to be based on
    a pre-1.0 unreleased version of ODE from trunk with some additional custom patches such as
    threaded island computations, addes a few more parameter settings API for quickstep,
    untruncated hinge joint angles and possible additional minor bug fixes.
    </p>
    <p>
    The opende package pulls in and builds the <a href="http://threadpool.sourceforge.net">Threadpool Library</a> by Philipp Henkel for internal use.
    Threadpool uses the Boost Software License.
    </p>

  </description>
  <author>Russel Smith</author>
  <license>LGPL, Boost Software License</license>
  <review notes="" status="3rdparty doc reviewed"/>
  <url>http://opende.sf.net</url>
  <export>
    <cpp cflags="`${prefix}/opende/bin/ode-config --prefix=${prefix}/opende --cflags` -I${prefix}/threadpool" lflags="-Wl,-rpath,${prefix}/opende/lib `${prefix}/opende/bin/ode-config --prefix=${prefix}/opende --libs`"/>
    <doxymaker external="http://opende.sf.net"/>
  </export>

  <versioncontrol type="svn" url="https://opende.svn.sourceforge.net/svnroot/opende/trunk"/>
  <versioncontrol type="svn" url="https://oderutils.svn.sourceforge.net/svnroot/oderutils/trunk"/>

  <rosdep name="unzip"/>
  <rosdep name="libtool"/>
  <rosdep name="automake"/>
  <rosdep name="libx11"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>

</package><package name="lse_miniq_description" path="/stacks/lse_miniq_robot/trunk/lse_miniq_description" repo="lse_miniq_robot" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="lse_robchair_description">

     Description files for the LSE miniQ robot.

  </description>
  <author>Gonçalo Cabrita</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/lse_miniq_description</url>

</package><package name="pr2_self_test_msgs" path="/stacks/pr2_self_test/trunk/pr2_self_test_msgs" repo="pr2_self_test" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="Messages used for PR2 hardware testing">
Messages used in PR2 hardware testing.
  </description>
  <author>Kevin Watts</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_self_test_msgs</url>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="move_head_to_button" path="/trunk/pr2_elevator/move_head_to_button" repo="ubc-ros-pkg" repo_host="https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg">
  <description brief="move_head_to_button">

     move_head_to_button

  </description>
  <author>ankur</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/move_head_to_button</url>
  <depend package="actionlib"/>
  <depend package="pr2_controllers_msgs"/>
</package><package name="publish_line_map" path="/trunk/ros/nxt_lejos_ros/publish_line_map" repo="lejos-ros-pkg" repo_host="https://lejos.svn.sourceforge.net/svnroot/lejos">
  <description brief="publish_line_map">

     publish_line_map

  </description>
  <author>lawrie</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/publish_line_map</url>

  <depend package="rosjava"/>
  <depend package="visualization_msgs"/>

<export>
	    <rosjava-src location="src"/> 
	   	<rosjava-pathelement artifactId="org.lejos.ros.nodes.PublishMap" built="true" groupId="org.lejos.ros" location="target/" version="0.0.1"/>
		<rosjava-pathelement built="true" location="build/"/>
    	<rosjava-pathelement location="/home/lawrie/workspace/snapshot/lib/pc/pccomm.jar"/>
     	<rosjava-pathelement location="/home/lawrie/workspace/snapshot/lib/pc/3rdparty/bluecove-gpl.jar"/>
    	<rosjava-pathelement location="/home/lawrie/workspace/snapshot/lib/pc/3rdparty/bluecove.jar"/>	    	<rosjava-pathelement location="/home/lawrie/ros_workspace/nxt_lejos_ros/NXTLoader/lib/yamlbeans-1.06.jar"/>
  </export>
</package><package name="zeroconf" path="" repo="iheart-ros-pkg" repo_host="git://github.com/IHeartRobotics/iheart-ros-pkg">
  <description brief="zeroconf">Zero Configuration tools for ROS</description>
  <author>I Heart Robotics</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/zeroconf</url>
  <depend package="rospy"/>
  <depend package="roslib"/>
  <depend package="std_msgs"/>
  <rosdep name="python-avahi"/>
  <rosdep name="avahi-daemon"/>
</package><package name="cob_datamatrix" path="" repo="cob_object_perception" repo_host="git://github.com/ipa320/cob_object_perception">
  <description brief="cob_datamatrix">

     datamatrix

  </description>
  <author>Joshua Hampp</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_datamatrix</url>
  <depend package="opencv2"/>
  <depend package="libdmtx_python"/>
  <depend package="image_geometry"/>
  <depend package="cv_bridge"/>
  <depend package="message_filters"/>
  <depend package="tf"/>
  <depend package="tf_conversions"/>
  <depend package="cob_object_detection_msgs"/>

</package><package name="ee_cart_imped_launch" path="/trunk/ee_cart_imped/ee_cart_imped_launch" repo="mit-ros-pkg-trunk" repo_host="https://svn.csail.mit.edu/mit-ros-pkg">
  <description brief="ee_cart_imped_launch">

    Launch files for the ee_cart_imped stack.

  </description>
  <author>Jenny Barry, Mario Bollini, and Huan Liu</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ee_cart_imped_launch</url>
  <depend package="ee_cart_imped_action"/>
  <depend package="ee_cart_imped_control"/>

</package><package name="nodemon_webview" path="" repo="node_monitoring" repo_host="http://github.com/timn/ros-node_monitoring">
  <description brief="nodemon_webview">
   Webview extension for nodemon information.
  </description>
  <author>Tim Niemueller</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/nodemon_webview</url>
  <depend package="roscpp"/>
  <depend package="rospack"/>
  <depend package="rosfawkes"/>
  <depend package="webview_msgs"/>
</package><package name="rosjava_tutorial_services" path="" repo="rosjava_core" repo_host="https://code.google.com/p/rosjava/">
  <description brief="rosjava_tutorial_services">
     rosjava_tutorial_services is a simple example project.
  </description>
  <author>Damon Kohler</author>
  <license>Apache 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosjava_tutorial_services</url>
</package><package name="nmea_gps_driver" path="" repo="nmea_gps_driver" repo_host="https://kforge.ros.org/gpsdrivers/nmea_gps_driver">
  <description brief="nmea_gps_driver">
	Package to parse NMEA strings and publish standard ROS GPS messages. This package does not require the GPSD deamon.
  </description>
  <author>Steven Martin, Eric Perko</author>
  <license>BSD</license>
  <review notes="" status="API Reviewed"/>
  <url>http://ros.org/wiki/nmea_gps_driver</url>
  <depend package="sensor_msgs"/>
  <depend package="std_msgs"/>
  <depend package="rospy"/>
  <depend package="geometry_msgs"/>
  <rosdep name="python-serial"/>

</package><package name="log_msgs" path="/trunk/logging/log_msgs" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="log_msgs">

     log_msgs

  </description>
  <author>David Feil-Seifer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/log_msgs</url>
  <depend package="std_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/msg/cpp"/>
  </export>


</package><package name="mantis_grasp_planning" path="/trunk/mantis/mantis_grasp_planning" repo="swri-ros-pkg" repo_host="http://swri-ros-pkg.googlecode.com/svn">
  <description brief="mantis_grasp_planning">

     mantis_grasp_planning

  </description>
  <author>Jnicho</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/mantis_grasp_planning</url>

</package><package name="rcommander" path="" repo="rcommander_core" repo_host="https://kforge.ros.org/rcommander/rcommander_core">

  <description brief="rcommander">
      Package for RCommander runtime and libraries. See stack documentation for tutorials and documentation.
  </description>

  <author>Hai Nguyen (haidai@gmail.com)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rcommander_core</url>

  <rosdep name="python-qt4-gl"/>
  <depend package="rospy"/>
  <depend package="nodebox_qt"/>
  <depend package="smach"/>
  <depend package="smach_ros"/>
  <depend package="actionlib"/>
  <depend package="geometry_msgs"/>
  <depend package="tf"/>
  <depend package="tf_broadcast_server"/>

</package><package name="audio_capture" path="" repo="audio_common" repo_host="https://kforge.ros.org/audiocommon/audio_common">
  <description brief="audio_capture">
    Transports audio from a source to a destination. Audio sources can come
    from a microphone or file. The destination can play the audio or save it
    to an mp3 file.

  </description>
  <author>Nate Koenig</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/audio_capture</url>
  <depend package="roscpp"/>
  <depend package="audio_common_msgs"/>
  <rosdep name="libgstreamer0.10-dev"/>
  <rosdep name="libgstreamer-plugins-base0.10-dev"/>
  <rosdep name="python-gst"/>
  <rosdep name="gstreamer0.10-plugins-ugly"/>
  <rosdep name="gstreamer0.10-plugins-good"/>
</package><package name="hector_nist_arena_elements" path="/trunk/hector_nist_arenas_gazebo/hector_nist_arena_elements" repo="hector_nist_arenas_gazebo" repo_host="https://tu-darmstadt-ros-pkg.googlecode.com/svn">
  <description brief="hector_nist_arena_elements">

     hector_nist_arena_elements contains models of elements/parts used in NIST standard test arenas for response robots. Using these elements, scenarios can be generated for simulation using gazebo.

  </description>
  <author>Johannes Simon, Stefan Kohlbrecher</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hector_nist_arena_elements</url>
  
  <depend package="gazebo"/>
  
  <export>
    <gazebo gazebo_media_path="${prefix}"/>
  </export>


</package><package name="pr2_navigation_process_module" path="" repo="cram_pr2" repo_host="https://github.com/moesenle/cram_pr2">
  <description brief="pr2_navigation_process_module">

     pr2_navigation_process_module

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_navigation_process_module</url>
  <depend package="move_base_msgs"/>
  <depend package="actionlib_lisp"/>
  <depend package="cram_process_modules"/>
  <depend package="cram_designators"/>
  <depend package="cram_reasoning"/>
  <depend package="cram_roslisp_common"/>
  <depend package="cram_plan_failures"/>
  <depend package="cram_plan_knowledge"/>
  <depend package="cram_projection"/>
</package><package name="schunk_default_config" path="" repo="schunk_robots" repo_host="git://github.com/ipa320/schunk_robots">
  <description brief="schunk_default_config">

     Default configuration of the different Schunk components. Configuration is e.g. preconfigured joint positions.

  </description>
  <author>Nadia Hammoudeh Garcia</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/schunk_default_config</url>

</package><package name="multi_map_server" path="/trunk/jsk_ros_patch/multi_map_server" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="Static multi map server">

    multi_map_server provides the <tt>map_server</tt> ROS <a href="http://www.ros.org/wiki/Nodes">Node</a>, which offers map data as a ROS <a href="http://www.ros.org/wiki/Services">Service</a>. It also provides the <tt>map_saver</tt> command-line utility, which allows dynamically generated maps to be saved to file.

  </description>
  <author>Manabu Saito</author>
  <license>BSD</license>
  <review notes="" status="Doc reviewed"/>
  <url>http://ros.org/wiki/map_server</url>
  <depend package="map_server"/>

</package><package name="summit_controller" path="/trunk/trunk/summit_sim/summit_controller" repo="summit-ros-pkg" repo_host="http://summit-ros-stack.googlecode.com/svn">
  <description brief="summit_controller">

     summit_controller

  </description>
  <author>trurl</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/summit_controller</url>
  <depend package="pr2_controller_interface"/>
  <depend package="pr2_mechanism_model"/>
  <depend package="pluginlib"/>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="sensor_msgs"/>
  <depend package="nav_msgs"/>

  <export>
     <pr2_controller_interface plugin="${prefix}/controller_plugins.xml"/>
  </export>

</package><package name="create_driver" path="/trunk/bilibot/create_driver" repo="bilibot-ros-pkg" repo_host="http://bilibot-ros-pkg.googlecode.com/svn">
  <description brief="Driver for iRobot Create and Roomba">

     For ROS bindings, please see create_node. 

     This is a generic driver for iRobot Create and Roomba.  Port
     of pyrobot.py by Damon Kohler.  It is currently labeled as
     turtlebot_driver pending review by the entire create community
     before using the name create_driver.

  </description>
  <author>Damon Kohler. Ported and maintained by Ken Conley and Melonee Wise</author>
  <license>MIT</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/create_driver</url>
  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>

</package><package name="actuator_array_gazebo_plugin" path="" repo="gt-ros-pkg.humans" repo_host="https://code.google.com/p/gt-ros-pkg.humans">
  <description brief="Gazebo Plugin to control an array of position-controlled actuators">

     This package provides a Gazebo Plugin to control an array of position-controlled actuators, 
     such as RC Servos. In addition to the standard parameters for update rate and robot namespace,
     a series of &quot;joint&quot; elements are provided. Each &quot;joint&quot; element must provide a &quot;name&quot; and, 
     optionally, a &quot;home&quot; position and a set of PID parameters that control the joint stiffness
     inside Gazebo. Joint limits, max velocities, etc. are read from the &quot;robot_description&quot; parameter.

  </description>
  <author>Stephen Williams</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/actuator_array_gazebo_plugin</url>
  
  <depend package="roscpp"/>
  <depend package="gazebo"/>
  <depend package="angles"/>
  <depend package="sensor_msgs"/>
  <depend package="std_srvs"/>
  <depend package="control_toolbox"/>
  <depend package="urdf"/>
  <depend package="actuator_array_driver"/>

  <export>
    <gazebo plugin_path="${prefix}/lib"/>
  </export>

</package><package name="oro_controllers_manager" path="" repo="orocos_controllers" repo_host="https://github.com/RCPRG-ros-pkg/orocos_controllers">
  <description brief="oro_conatroller_manager">

     oro_conatroller_manager

  </description>
  <author>Konrad Banachowicz</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/oro_conatroller_manager</url>
  <depend package="oro_action_server"/>
  <depend package="actionlib_msgs"/>
  <depend package="rtt"/>

</package><package name="rovio" path="/trunk/rovio" repo="cornell-ros-pkg" repo_host="http://cornell-ros-pkg.googlecode.com/svn">
  <description brief="rovio">
    Rovio drivers. Allow for moving the bot and camera and gathering localization, odometry, and Obstacle detection Data.

  </description>
  <author>Jonathan Diamond (Cornell Robot Learning Lab), 
    Ashutosh Saxena (Cornell Robot Learning Lab)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://pr.cs.cornell.edu</url>
  <depend package="std_msgs"/>
  <depend package="rospy"/>
  <depend package="tf"/>
  <depend package="nav_msgs"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="sensor_msgs"/>

</package><package name="diagnostic_updater" path="/stacks/diagnostics/trunk/diagnostic_updater" repo="diagnostics" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Easily publishes diagnostics for a driver or node">
    diagnostic_updater contains tools for easily updating diagnostics. it is commonly used in device drivers to keep track of the status of output topics, device status, etc.
  </description>
  <author>Jeremy Leibs, Blaise Gassend</author>
  <license>BSD</license>
  <review notes="Jan 15 2010" status="Doc reviewed"/>
  <url>http://www.ros.org/wiki/diagnostic_updater</url>
  <depend package="roscpp"/>
  <depend package="diagnostic_msgs"/>
  <depend package="std_msgs"/>
  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="R1_urdf" path="" repo="JKU_Robotic_Stack" repo_host="https://github.com/AaronMR/JKU_Robotic_Stack">
  <description brief="Code for some URDF Tutorials">
    Support code for the step by step URDF tutorials on ROS.org
  </description>
  <author>David Lu!!</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/urdf_tutorial</url>

</package><package name="canon_vbc50i" path="" repo="ethzasl_drivers" repo_host="https://github.com/ethz-asl/ros-drivers">
  <description brief="canon_vbc50i">

     canon_vbc50i

  </description>
  <author>Cedric Pradalier</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/canon_vbc50i</url>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="image_transport"/>
  <depend package="driver_base"/>


</package><package name="slam_exporter" path="" repo="uos_slam" repo_host="http://kos.informatik.uni-osnabrueck.de/uos_slam.git">
  <description brief="slam_exporter">

     slam_exporter

  </description>
  <author>Jochen Sprickerhof</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/slam_exporter</url>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="tf"/>
  <depend package="pcl_ros"/>

</package><package name="guiabot_action" path="" repo="cyphy_legacy" repo_host="http://launchpad.net/cyphy">
  <description brief="guiabot_action">

	guiabot_action provides docking capability for the guiabot onto mobile robots triangular dock

  </description>
  <author>guiabot</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/guiabot_2dnav</url>
  <depend package="move_base"/>

</package><package name="rtcus_kinect_gestures" path="/trunk/rtcus_cognitive/rtcus_kinect_gestures" repo="rtc-us-ros-pkg-trunk" repo_host="https://rtc-us-ros-pkg.svn.sourceforge.net/svnroot/rtc-us-ros-pkg">
  <description brief="rtcus_kinect_gestures">

     Gestures interpreter using Microsoft's Kinect. Basic implementations of the DTW, HMM and GMM methods are provided.
     Gesture signal accomodation implemented.

  </description>
  <author>Pablo Iñigo Blasco and Tomás Murillo Morales</author>
  <license>BSD</license>
  
  <review notes="This package is still in development" status="unreviewed"/>
  
  <url>http://ros.org/wiki/rtcus_kinect_gestures</url>
  <rosdep name="mlpy"/>
  <rosdep name="htmlgen"/>
  
  <depend package="ghmm"/>
  <depend package="tf"/>
  <depend package="rospy"/>
  <depend package="std_msgs"/>
  <depend package="roslib"/>
  <depend package="visualization_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="kdl"/>
  <depend package="rostest"/>
  <depend package="rosunit"/>

</package><package name="phspline_pose_follower" path="" repo="pkganeshpk" repo_host="https://bitbucket.org/pkganeshpk/phspline_planner">
  <description brief="phspline_pose_follower">

     pose_follower

  </description>
  <author>Eitan Marder-Eppstein</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pose_follower</url>
  
  <depend package="phspline_generator"/>
  <depend package="nav_core"/>
  <depend package="base_local_planner"/>
  <depend package="costmap_2d"/>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="nav_msgs"/>
  <depend package="pluginlib"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lpose_follower"/>
    <nav_core plugin="${prefix}/blp_plugin.xml"/>
  </export>

</package><package name="projector" path="/trunk/3dscanning/projector" repo="stanford-ros-pkg" repo_host="https://stanford-ros-pkg.googlecode.com/svn">
  <description brief="projector">

     projector

  </description>
  <author>David Mandle</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/projector</url>
  <depend package="rospy"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="sensor_msgs"/>

</package><package name="android_honeycomb_mr2" path="" repo="android_core" repo_host="https://code.google.com/p/rosjava.android/">
  <description brief="android_honeycomb_mr2">
    android_honeycomb_mr2
  </description>
  <author>Damon Kohler (damonkohler@google.com)</author>
  <license>Apache 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/android</url>
</package><package name="rl_experiment" path="/trunk/stacks/reinforcement_learning/rl_experiment" repo="rl-texplore-ros-pkg" repo_host="http://rl-texplore-ros-pkg.googlecode.com/svn">
  <description brief="rl_experiment">

     A package to run RL experiments using the rl_agent and rl_env packages, by directly calling agents and environments without using the rl_msgs interface. Developed by <a href="http://www.cs.utexas.edu/~todd/">Todd Hester</a> and <a href="http://www.cs.utexas.edu/~pstone/">Peter Stone</a> at the University of Texas at Austin.

  </description>
  <author>Todd Hester</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rl_experiment</url>
  <depend package="std_msgs"/>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="rl_common"/>
  <depend package="rl_agent"/>
  <depend package="rl_env"/>

</package><package name="diagnostics_handler" path="" repo="rososc" repo_host="https://github.com/Auburn-Automow/rososc">
  <description brief="diagnostics_handler">

      diagnostics_handler provides a layout and tabpage handler for viewing diagnostics
      and aggregated diagnostics data from ROS on an iOS device with TouchOSC.

  </description>
  <author>Michael Carroll</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/diagnostics_handler</url>
  <depend package="touchosc_bridge"/>
  <depend package="rospy"/>
  <depend package="diagnostic_msgs"/>

</package><package name="mantis_io" path="/trunk/mantis/mantis_io" repo="swri-ros-pkg" repo_host="http://swri-ros-pkg.googlecode.com/svn">
  <description brief="mantis_io">

     mantis_io

  </description>
  <author>Jnicho</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/mantis_io</url>

</package><package name="arm_kinematics_constraint_aware" path="" repo="arm_navigation" repo_host="https://kforge.ros.org/armnavigation/armnavigation">
  <description brief="arm_kinematics_constraint_aware">

     arm_kinematics_constraint_aware

  </description>
  <author>Sachin Chitta</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/arm_kinematics_constraint_aware</url>
  <depend package="kinematics_base"/>
  <depend package="arm_navigation_msgs"/>
  <depend package="kinematics_msgs"/>
  <depend package="kdl"/>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="sensor_msgs"/>
  <depend package="tf_conversions"/>
  <depend package="kdl_parser"/>
  <depend package="pluginlib"/>  

  <depend package="planning_environment"/>  
  <depend package="planning_models"/>  


  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -larm_kinematics_constraint_aware_lib"/>
    <kinematics_base plugin="${prefix}/kinematics_plugins.xml"/>
  </export>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>

</package><package name="ptp_arm_action" path="" repo="rcommander_pr2" repo_host="https://kforge.ros.org/rcommander/rcommander_pr2">
  <description brief="ptp_arm_action">

     ptp_arm_action

  </description>
  <author>Hai Nguyen</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ptp_arm_action</url>

  <depend package="rospy"/>
  <depend package="tf"/>
  <depend package="actionlib"/>
  <depend package="object_manipulator"/>
  <depend package="pycontroller_manager"/>
</package><package name="cob_navigation_global" path="" repo="cob_navigation" repo_host="git://github.com/ipa320/cob_navigation">
  <description brief="cob_navigation_global">

     This package holds config and launch files for running the  <a href="http://ros.org/wiki/move_base">move_base</a> node on the <a href="http://ros.org/wiki/care-o-bot">Care-O-bot</a>.
     The move_base node is configured to run over a pre-specified static map.

  </description>
  <author>Matthias Gruhler</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_navigation_global</url>
  
  <depend package="move_base"/>
  <depend package="amcl"/>
  <depend package="map_server"/>
  <depend package="topic_tools"/>
  <depend package="cob_default_env_config"/>
  <depend package="cob_linear_nav"/>
  <depend package="cob_base_velocity_smoother"/>
  <depend package="cob_navigation_config"/>

</package><package name="auction_srvs" path="/stacks/auction_methods_stack/trunk/auction_srvs" repo="auction_methods_stack" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="auction_srvs">

     auction_srvs

  </description>
  <author>Joao Manuel Leitao Quintas</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/auction_srvs</url>

  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  
  <depend package="auction_msgs"/>
  

</package><package name="rl_msgs" path="/trunk/stacks/reinforcement_learning/rl_msgs" repo="rl-texplore-ros-pkg" repo_host="http://rl-texplore-ros-pkg.googlecode.com/svn">
  <description brief="rl_msgs">
    Provides the set of ROS messages to be passed between reinforcement learning (RL) agent nodes and environment nodes. Developed by <a href="http://www.cs.utexas.edu/~mquinlan/">Michael Quinlan</a>, <a href="http://www.cs.utexas.edu/~todd/">Todd Hester</a>, and <a href="http://www.cs.utexas.edu/~pstone/">Peter Stone</a> at the University of Texas at Austin.
  </description>
  <author>Michael Quinlan, Todd Hester</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rl_msgs</url>

</package><package name="automow_simulation2d" path="" repo="au_automow_simulation" repo_host="https://github.com/Auburn-Automow/au_automow_simulation">
  <description brief="automow_simulation2d">

     automow_simulation2d

  </description>
  <author>William Woodall</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/automow_simulation2d</url>
  <depend package="stage"/>

</package><package name="starmac_gui" path="" repo="starmac-ros-pkg" repo_host="https://bitbucket.org/bouffard/starmac-ros-pkg">
  <description brief="starmac_gui">

    starmac_gui

  </description>
  <author>bouffard</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/starmac_gui</url>

  <depend package="rospy"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>

</package><package name="EposGateway" path="" repo="pandora-auth-ros-pkg" repo_host="https://github.com/pandora-auth-ros-pkg/pandora-auth-ros-pkg">
  <description brief="EposGateway">
	A ROS EPOS Gateway
  </description>
  <author>Serenis Charalampos</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/EposGateway</url>
  <depend package="roscpp"/>

</package><package name="pr2_addons_application" path="/stacks/pr2_web_apps/trunk/pr2_addons_application" repo="pr2_web_apps" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_addons">
A collection of nodes that multiple apps depend on at runtime.  Eventually, many of these nodes will migrate into pr2_bringup/pr2.launch
  </description>
  <author>Brian Gerkey, Eitan Marder-Eppstein</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://pr.willowgarage.com/wiki/pr2_addons</url>
  <depend package="roslib"/>
  <depend package="rospy"/>
  <depend package="webui"/>
  <depend package="rosweb"/>
  <depend package="std_msgs"/>
  <depend package="pr2_navigation_global"/>
  <depend package="map_server"/>
  <depend package="willow_maps"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="sr_unplug_connector" path="" repo="sr_demo" repo_host="lp:sr-demo">
  <description brief="sr_unplug_connector">

     Unplugs different kinds of connector with the Shadow Hand attached to
     a Denso Arm.

  </description>
  <author>Ugo Cupcic / ugo@shadowrobot.com</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sr_unplug_connector</url>
  <depend package="smach_msgs"/>
  <depend package="smach_ros"/>
  <depend package="smach"/>
  <depend package="sr_utilities"/>
  <depend package="rospy"/>
  <depend package="actionlib"/>
  <depend package="object_manipulation_msgs"/>
  <depend package="household_objects_database_msgs"/>
  <depend package="re_kinect_object_detector"/>
  <depend package="denso_msgs"/>
  <depend package="std_srvs"/>
  <depend package="sensor_msgs"/>
  <depend package="interactive_markers"/>

</package><package name="door_perception" path="/trunk/dynamic_door_manipulation/door_perception" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="Nodes related to the perception of doors">

     This package contains nodes to map unknown doors and to detect the door state in real time using a laser scanner.
     Nodes:
     1. Door Mapper: Listens to a PoseStamped message, learns its kinematic model and computes a frame with the following properties:
       - Given the extremal (minimal and maximal) angles observed the X-Axis goes along the direction
         of the extremum that is closer to the first observed pose. The other tools assume this to
         be the CLOSED door. 
         =&gt; Thus you should start mapping of the door in closed state
       - The Z Axis points such that the angle increases (positively) when opening the door.
       - The Y Axis therefore is parallel to the door when opened 90 degrees

     2. Door State:  Listens to the laser range scanner, and looks within the area of the door for measurements that define a line and computes the door angle.
     3. Handle Detector: Listens to a point cloud and looks within the area of the door for measurements that define a plane. A line is fitted to the plane outliers and assumed to be the handle.
     4. Search Handle: Moves the head to look at random points in the area of the door until the handle detector sends out the pose of the handle
     5. Search Checkerboard: Randomly moves the head until a the checkerboard detector publishes the checkerboard transformation. Then tracks the checkerboard marker.
  </description>
  <author>Felix Endres</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <depend package="laser_geometry"/>
  <depend package="tf"/>
  <depend package="articulation_msgs"/>
  <depend package="articulation_models"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="std_msgs"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="door_perception_msgs"/>   
  <depend package="pr2_controllers_msgs"/> <!-- for point head action -->
  <depend package="actionlib"/><!-- for point head action -->
  <depend package="std_srvs"/>

</package><package name="libxsens" path="/trunk/cturtle/libxsens" repo="seabee3-ros-pkg" repo_host="http://seabee3-ros-pkg.googlecode.com/svn">
  <description brief="libxsens">

     libxsens

  </description>
  <author>Edward T. Kaszubski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/libxsens</url>
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp -I${prefix}/srv/cpp" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -llibxsens"/>
  </export>
</package><package name="designators_ros" path="" repo="cram_highlevel" repo_host="https://github.com/moesenle/cram_highlevel">
  <description brief="designators_ros">

     designators_ros

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/designators_ros</url>
  <depend package="cram_designators"/>
  <depend package="cl_tf"/>
  <depend package="cram_utilities"/>
  <depend package="cram_reasoning"/>
  <depend package="cram_roslisp_common"/>

</package><package name="pr2_camera_self_filter" path="/trunk/stacks/bosch_image_proc/pr2_camera_self_filter" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="pr2_camera_self_filter">

     pr2_camera_self_filter

  </description>
  <author>Christian Bersch (Maintained by Benjamin Pitzer)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_camera_self_filter</url>
  <depend package="rospy"/>
  <depend package="camera_self_filter"/>

</package><package name="ias_pr2_addons_application" path="/stacks/ias_web_apps/ias_pr2_addons_application" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="pr2_addons">
A collection of nodes that multiple apps depend on at runtime.  Eventually, many of these nodes will migrate into pr2_bringup/pr2.launch
  </description>
  <author>Brian Gerkey, Eitan Marder-Eppstein</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://pr.willowgarage.com/wiki/pr2_addons</url>
  <depend package="roslib"/>
  <depend package="rospy"/>
  <depend package="webui"/>
  <depend package="rosweb"/>
  <depend package="std_msgs"/>
  <depend package="map_server"/>
  <depend package="willow_maps"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="robchair_driver" path="/stacks/robchair_robot/trunk/robchair_driver" repo="robchair_robot" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="robchair_driver">

     Hardware driver for the RobChair robot, the smart wheelchair from the ISR UC.

  </description>
  <author>Gonçalo Cabrita</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/robchair_driver</url>
  <depend package="roscpp"/>
  <depend package="can_msgs"/>
  <depend package="tf"/>
  <depend package="nav_msgs"/>
  <depend package="geometry_msgs"/>

</package><package name="LMS1xx" path="" repo="RCPRG_laser_drivers" repo_host="https://github.com/RCPRG-ros-pkg/RCPRG_laser_drivers">
  <description brief="LMS1xx">

     Driver for SICK LMS1xx.

  </description>
  <author>Konrad Banachowicz</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://github.com/konradb3/RCPRG-ros-pkg/wiki/LMS1xx</url>
  <depend package="libLMS1xx"/>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>

</package><package name="ecl_core_apps" path="/trunk/ecl_core/ecl_core_apps" repo="ecl_core" repo_host="https://embedded-control-library.googlecode.com/svn">
  <description brief="app suite for the ecl_core">

     This includes a suite of programs demo'ing various aspects of the
     ecl_core. It also includes various benchmarking and utility programs for
     use primarily with embedded systems.

  </description>
  <author>Daniel Stonier (d.stonier@gmail.com)</author>
  <license>BSD</license>
  <review notes="" status="api cleared"/>
  <url>http://snorriheim.dnsdojo.com/redmine/wiki/ecl</url>
  
  <depend package="ecl_command_line"/>
  <depend package="ecl_config"/>
  <depend package="ecl_converters"/>
  <depend package="ecl_containers"/>
  <depend package="ecl_devices"/>
  <depend package="ecl_errors"/>
  <depend package="ecl_exceptions"/>
  <depend package="ecl_formatters"/>
  <depend package="ecl_geometry"/>
  <depend package="ecl_ipc"/>
  <depend package="ecl_linear_algebra"/>
  <depend package="ecl_sigslots"/>
  <depend package="ecl_streams"/>
  <depend package="ecl_type_traits"/>
  <depend package="ecl_license"/>
  <depend package="ecl_build"/>
  <depend package="ecl_time_lite"/>
</package><package name="safe_teleop_stage" path="/trunk/stacks/bosch_shared_autonomy/safe_teleop_stage" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="safe_teleop_stage">
     Demo of safe_teleop in stage
  </description>
  <author>Charles DuHadway (maintained by Benjamin Pitzer)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/safe_teleop_stage</url>

  <depend package="safe_teleop_base"/>
  <depend package="stage"/>
  <depend package="joy"/>
</package><package name="grabcut_3d" path="/trunk/stacks/bosch_shared_autonomy/grabcut_3d" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <author>Benjamin Pitzer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/grabcut_3d</url>
  <depend package="roscpp"/>
  <depend package="opencv2"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -lgrabcut3d"/>
  </export>
  
</package><package name="vocabulary_tree" path="/stacks/vslam/trunk/vocabulary_tree" repo="vslam" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="vocabulary_tree">

    A generic implementation of the vocabulary tree image retrieval approach of
    Nister and Stewenius. Can be used with any feature and distance metric.

  </description>
  <author>Patrick Mihelich</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/vocabulary_tree</url>
  <depend package="roscpp"/>
  <depend package="opencv2"/>
  <rosdep name="eigen"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lvocabulary_tree"/>
  </export>

</package><package name="smart_arm_description" path="/trunk/arrg/crustcrawler_smart_arm/smart_arm_description" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="3D Meshes and URDF for the CrustCrawler SmartArm">
        3D Meshes and URDF description for the CrustCrawler Smart Robotic Arm.
    </description>

    <author>Antons Rebguns</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/smart_arm_description</url>

    <depend package="convex_decomposition"/>
    <depend package="ivcon"/>
    <depend package="urdf"/>
    <depend package="gazebo"/>

    <export>
        <gazebo gazebo_media_path="${prefix}"/>
    </export>
</package><package name="nxt_lejos_ros_msgs" path="/trunk/ros/nxt_lejos_ros_msgs" repo="lejos-ros-pkg" repo_host="https://lejos.svn.sourceforge.net/svnroot/lejos">
  <description brief="nxt_lejos_ros_msgs">

     nxt_lejos_ros_msgs

  </description>
  <author>Juan Antonio Brenha Moral</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/nxt_lejos_ros_msgs</url>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>

</package><package name="student_database" path="/stacks/sql_database/trunk/student_database" repo="sql_database" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="student_database">

    Example package for using the database_interface. Contains the
    code used in the database_interface tutorials.

  </description>
  <author>Matei Ciocarlie</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/student_database</url>
  <depend package="database_interface"/>

</package><package name="surveyor" path="" repo="surveyor" repo_host="git://github.com/rene0/ros-surveyor">
  <description brief="surveyor">

     Surveyor is a driver for the Surveyor Vision System camera.

  </description>
  <author>Rene Ladan</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.surveyor.com/stereo/stereo_info.html</url>
  <depend package="roscpp"/>
  <depend package="opencv2"/>
  <depend package="image_transport"/>
</package><package name="lwr_markers" path="" repo="lwr_gui" repo_host="https://github.com/RCPRG-ros-pkg/lwr_gui">
  <description brief="lwr_markers">

     lwr_markers

  </description>
  <author>Maciej Stefanczyk</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/lwr_markers</url>

  <depend package="rospy"/>
  <depend package="actionlib"/>
  <depend package="arm_navigation_msgs"/>
  <depend package="interactive_markers"/>

</package><package name="roslisp_testing" path="/stacks/roslisp_support/trunk/roslisp_testing" repo="roslisp_support" repo_host="https://code.ros.org/svn/ros">
  <description brief="roslisp_testing">
    Contains common utilities for writing unit and integration tests.
  </description>
  <author>Thibault Kruse</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/roslisp_testing</url>
  <depend package="roslisp_runtime"/>

</package><package name="summit_xl_sbpl_nav" path="/trunk/trunk/summit_xl_sim_fuerte/summit_xl_sbpl_nav" repo="summit-xl-ros-stack" repo_host="http://summit-xl-ros-stack.googlecode.com/svn">
  <description brief="summit_xl_sbpl_nav">

     summit_xl_sbpl_nav

  </description>
  <author>Roberto</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/summit_xl_sbpl_nav</url>
  <depend package="roscpp"/>
  <!-- depend package="sbpl"/ -->
  <!-- depend package="sbpl_lattice_planner"/ -->

</package><package name="mav_srvs" path="" repo="mav_tools" repo_host="https://github.com/ccny-ros-pkg/mav_tools">
  <description brief="mav_srvs">

     mav_srvs

  </description>
  <author>Ivan Dryanovski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/mav_srvs</url>

  <depend package="roscpp"/>

  <export>
    <cpp cflags="-I${prefix}/srv_gen/cpp/include"/>
  </export>

</package><package name="image_stream" path="/stacks/web_interface/trunk/image_stream" repo="web_interface" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="image_stream">

     rosweb plugin to serve images as streams (MJPEG, Theora, FLV, etc)

  </description>
  <author>Rob Wheeler</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/image_stream</url>
  <depend package="rosweb"/>
  <depend package="rospy"/>
  <depend package="cv_bridge"/>
  <depend package="opencv2"/>
  <export>
    <rosweb plugin="image_stream.handler"/>
  </export>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="posest" path="/stacks/vslam/trunk/posest" repo="vslam" repo_host="https://code.ros.org/svn/ros-pkg">
  <description>
    Pose estimation from images and point clouds
  </description>
  <author>Kurt Konolige</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>

  <rosdep name="opencv2"/>
  <rosdep name="eigen"/>
  <depend package="frame_common"/>
  <depend package="sba"/>

  <rosdep name="libtbb"/>

  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lposest -lpe_simulated"/>
  </export>

</package><package name="pr2_doors_executive" path="" repo="pr2_doors" repo_host="https://kforge.ros.org/doors/hg">
  <description brief="pr2_doors_executive">

     pr2_doors_executive

  </description>
  <author>Wim Meeussen</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_doors_executive</url>

  <depend package="pr2_doors_actions"/>
  <depend package="door_handle_detector"/>
  <depend package="pr2_navigation_teleop"/>
  <depend package="pr2_navigation_perception"/>
  <depend package="pr2_navigation_local"/>
  <depend package="pr2_controller_manager"/>
  <depend package="pr2_mechanism_msgs"/>
  <depend package="smach"/>
  <depend package="smach_ros"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="flysim_tf" path="" repo="flyatar" repo_host="http://github.com/peterpolidoro/Flyatar">
  <description brief="flysim_tf">

     flysim_tf demonstrates how to write a tf broadcaster and listener with the flysim. The tutle_tf_listener commands robot to follow fly around as you drive fly using the keyboard.

  </description>
  <author>James Bowman / Peter Polidoro</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/turtlesim_tf</url>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="flysim_teleop"/>
  <depend package="flysim"/>
  <depend package="tf"/>

</package><package name="seabee3_launch" path="/trunk/cturtle/seabee3_launch" repo="seabee3-ros-pkg" repo_host="http://seabee3-ros-pkg.googlecode.com/svn">
  <description brief="seabee3_launch">

     seabee3_launch

  </description>
  <author>Edward T. Kaszubski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/seabee3_launch</url>
  <depend package="seabee3_driver_base"/>
  <depend package="seabee3_driver"/>
  <depend package="seabee3_teleop"/>
  <depend package="sparse_stereo"/>
  <depend package="image_sync"/>
  <depend package="image_server"/>
  <depend package="xsens_node"/>
  <depend package="seabee3_physics"/>
  <depend package="color_classifier"/>
  <depend package="landmark_map_server"/>
  <depend package="dead_reckoning_odom"/>

</package><package name="color_table" path="/trunk/stacks/austinvilla/color_table" repo="utexas" repo_host="https://utexas-ros-pkg.googlecode.com/svn">
  <description brief="color_table">

     Simple utility to construct a color lookup table from a ROS bag file.

  </description>
  <author>Piyush Khandelwal</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>

  <depend package="eros_build"/>
  <depend package="rosbag"/>
  <depend package="sensor_msgs"/>
  <depend package="cv_bridge"/>
  <depend package="opencv2"/>

  <rosdep name="qt4"/>

  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>

</package><package name="wubble_2dnav_slam" path="/trunk/arrg/wubble_navigation_apps/wubble_2dnav_slam" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="SLAM-based navigation for the Wubble robot.">
        This application allows the Wubble to navigate autonomously while also building a map of its environment as it drives along.
    </description>
    <author>Antons Rebguns</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/wubble_2dnav_slam</url>
    
    <depend package="wubble_navigation_slam"/>
</package><package name="pr2_recharge_application" path="/stacks/pr2_web_apps/trunk/pr2_recharge_application" repo="pr2_web_apps" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="PR2 Recharge Application">
A web application to make a PR2 plug itself into a standard wall outlet.
  </description>
  <author>Brian Gerkey, Wim Meeussen</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://pr.willowgarage.com/wiki/pr2_recharge_application</url>
  <depend package="roslib"/>
  <depend package="rospy"/>
  <depend package="webui"/>
  <depend package="rosweb"/>
  <depend package="std_msgs"/>
  <depend package="pr2_plugs_actions"/>
  <depend package="map_server"/>
  <depend package="willow_maps"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="screenrun" path="/trunk/freiburg_tools/screenrun" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="screenrun">
      screenrun is a small tool that pushes commands into a screen window.
      Use \015 after a command for ENTER, i.e. executing it.
  </description>
  <author>Christian Dornhege</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/screenrun</url>
  <depend package="roscpp"/>
</package><package name="schunk_powercube_chain" path="" repo="schunk_modular_robotics" repo_host="git://github.com/ipa320/schunk_modular_robotics">
  <description brief="cob_powercube_chain">

  This packages provides a configurable driver of a chain 
  of Schunk powercubes. The powercube chain is configured 
  through parameters. Most users will not directly interact 
  with this package but with the corresponding launch files 
  in other packages, e.g. schunk_bringup, cob_bringup, ... 

  </description>
  <author>Florian Weisshardt</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_powercube_chain</url>

  <export>
    <cpp cflags="-I${prefix}/common/include"/>
  </export>

  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="urdf"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="diagnostic_updater"/>
  <depend package="rostest"/>
  <depend package="schunk_libm5api"/>
  <depend package="libntcan"/>
  <depend package="libpcan"/>
  <depend package="cob_srvs"/>
  <depend package="brics_actuator"/>
  <depend package="diagnostic_msgs"/>
  

</package><package name="freenect" path="" repo="cyphy_legacy" repo_host="http://launchpad.net/cyphy">
  <description brief="freenect">
    Downloads, patches and compiles a libfreenect fork (originally written by Hector Martin).
  </description>

  <author>Ivan Dryanovski</author>
  <license>Apache 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/freenect</url>

  <export>
    <cpp cflags="-I${prefix}/libfreenect/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lfreenect -lusb-1.0"/>
  </export>

  <rosdep name="libusb1.0"/>
  <rosdep name="git"/>

</package><package name="automow_bringup" path="" repo="au_automow_common" repo_host="https://github.com/Auburn-Automow/au_automow_common">
  <description brief="automow_bringup">

     automow_bringup provides roslaunch scripts for bringing up base functionality of the lawnmower.

  </description>
  <author>Michael Carroll</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/automow_bringup</url>
  <depend package="app_manager"/>
  <depend package="automow_node"/>
  <depend package="automow_description"/>
  <depend package="joy"/>
  <depend package="robot_state_publisher"/>

</package><package name="april_msgs" path="/trunk/stacks/april/april_msgs" repo="utexas" repo_host="https://utexas-ros-pkg.googlecode.com/svn">
  <description brief="april_msgs">

     april_msgs

  </description>
  <author>Piyush Khandelwal</author>
  <license>Modified BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/april_msgs</url>

  <depend package="geometry_msgs"/>

</package><package name="fall_school_executive" path="/highlevel/fall_school_executive" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="fall_school_executive">

     fall_school_executive

  </description>
  <author>Brian Gerkey</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/fall_school_executive</url>
  <depend package="approach_table_tools"/>
  <depend package="actionlib"/>
  <depend package="move_base_msgs"/>
  <depend package="pr2_common_action_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="drive_base_action"/>

</package><package name="reem_description" path="" repo="reem_common" repo_host="https://github.com/pal-robotics/reem_common">
  <description brief="reem_description">
    This package contains the description (mechanical, kinematic, visual, etc.) of the REEM robot.
  </description>
  <author>Adolfo Rodriguez Tsouroukdissian, Joan Oliver Poyatos, Pablo Garcia Martinez</author>
  <license>Creative Commons BY-NC-ND 3.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/reem_description</url>

  <depend package="convex_decomposition"/>
  <depend package="ivcon"/>
</package><package name="pr2_props" path="/pr2_props_stack/trunk/pr2_props" repo="pr2_props_stack" repo_host="https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs">
  <description brief="pr2_props">

     pr2_props is a package designed to be the first step towards replacing your real (or imaginary) friends with a robot. Robot gives you mad props yo.

  </description>
  <author>Joe Romano</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_props</url>
  <depend package="roscpp"/>
  <depend package="actionlib"/>
  <depend package="pr2_gripper_sensor_action"/>
  <depend package="pr2_gripper_sensor_controller"/>
  <depend package="pr2_gripper_sensor_msgs"/>


</package><package name="ann2" path="/trunk/3rdparty/ann2" repo="cmu-ros-pkg" repo_host="https://cmu-ros-pkg.svn.sourceforge.net/svnroot/cmu-ros-pkg">
  <description brief="Approximate Nearest Neighbor Searching (ANN)">
    ANN is a library written in C++, which supports data structures and algorithms for both exact and approximate nearest neighbor searching in arbitrarily high dimensions. 
  </description>
  <license>LGPL</license>
  <author>David M. Mount and Sunil Arya</author>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lANN_1_1_1"/>
    <python path="${prefix}/src/lib/python"/>
  </export>
</package><package name="rms_pr2_gazebo_environment" path="/trunk/distribution/wpi-rail-ros-pkg/rms/rms_pr2_gazebo_environment" repo="wpi-rail-ros-pkg" repo_host="http://wpi-rail.googlecode.com/svn">
	<description brief="Launch files used to start a PR2 Gazebo RMS environment server.">Launch files used to start a PR2 Gazebo RMS environment server.</description>
	<author>Russell Toris</author>
	<license>BSD</license>
	<review notes="" status="unreviewed"/>
	<url>http://ros.org/wiki/rms_pr2_gazebo_environment</url>

	<depend package="rms_common"/>
	<depend package="gazebo"/>
	<depend package="pr2_description"/>
	<depend package="pr2_gazebo"/>
	<depend package="pr2_controller_configuration_gazebo"/>
	<depend package="rms_gazebo"/>
</package><package name="irobot_create_cu" path="/trunk/irobot_create_cu" repo="prairiedog" repo_host="http://prairiedog.googlecode.com/svn">
  <description brief="irobot_create_cu">

     This builds on the Brown irobot create package

  </description>
  <author>common</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://correll.cs.colorado.edu/pmwiki/index.php/Main/RobotBase</url>
  <depend package="irobot_create_rustic"/>
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="tf"/>

</package><package name="wiimote" path="/stacks/joystick_drivers/trunk/wiimote" repo="joystick_drivers" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="wiimote">
The wiimote package allows ROS nodes to communicate with a Nintendo
Wiimote and its related peripherals, including the Nunchuk, Motion
Plus, and (experimentally) the Classic. The package implements a ROS
node that uses Bluetooth to communicate with the Wiimote device,
obtaining accelerometer and gyro data, the state of LEDs, the IR
camera, rumble (vibrator), buttons, joystick, and battery state. The
node additionally enables ROS nodes to control the Wiimote's LEDs and
vibration for feedback to the human Wiimote operator. LEDs and
vibration may be switched on and off, or made to operate according to
a timed pattern.

  </description>
  <author>Andreas Paepcke and Melonee Wise</author>
  <license>GPL</license>
  <review notes="" status="Doc reviewed"/>
  <url>http://pr.willowgarage.com/wiki/wiimote</url>
  <rosdep name="python-numpy"/>
  <rosdep name="python-cwiid"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="std_msgs"/>  
  <depend package="std_srvs"/>
  <depend package="rospy"/>
  <depend package="roslib"/>
  <!--depend package="cwiid"/-->
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="pr2_tuckarm" path="2_tuckarm" repo="pr2_apps" repo_host="">
  <description brief="PR2 Tuck Arms">

     Tucks the arms of the PR2 robot into a safe position for moving the base of the robot.
     This also moves the arms out of the view of the tilting laser scanner, as much as possible.

  </description>
  <author>Wim Meeussen</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_tuckarm</url>

  <depend package="rospy"/>
  <depend package="trajectory_msgs"/>
  <depend package="pr2_mechanism_msgs"/>
  <depend package="pr2_tuck_arms_action"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="move_slow_and_clear" path="" repo="navigation" repo_host="https://kforge.ros.org/navigation/navigation">
  <description brief="move_slow_and_clear">

     move_slow_and_clear

  </description>
  <author>Eitan Marder-Eppstein</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/move_slow_and_clear</url>
  <depend package="roscpp"/>
  <depend package="nav_core"/>
  <depend package="costmap_2d"/>
  <depend package="geometry_msgs"/>
  <depend package="pluginlib"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="common_rosdeps"/>
  <rosdep name="eigen"/>

  <export>
    <nav_core plugin="${prefix}/recovery_plugin.xml"/>
  </export>

</package><package name="urdf_python" path="/branches/stable/urdf_tools/urdf_python" repo="wu-ros-pkg" repo_host="https://wu-robotics.googlecode.com/svn">
  <description brief="URDF Python">
    Test package for URDF Python libraries
  </description>
  <author>David V. Lu!!, Kelsey Hawkins, Thomas Moulard</author>
  <license>BSD</license>
  <url>http://ros.org/wiki/urdf_python</url>
  <depend package="rospy"/>
  <depend package="geometry_msgs"/>
  <depend package="tf"/>

</package><package name="wviz_tf_manager" path="/trunk/stacks/bosch_web_visualization/wviz_tf_manager" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="wviz_tf_manager">A node that buffers tf messages and publishes only changes.</description>
  <author>Benjamin Pitzer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/wviz_tf_manager</url>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="roslib"/>
  <depend package="tf"/>
</package><package name="mapping_msgs" path="" repo="ethzasl_mapping" repo_host="https://github.com/ethz-asl/ros-mapping">
  <description brief="mapping_msgs">

     This package defines messages commonly used in mapping packages.

  </description>
  <author>Stéphane Magnenat</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/mapping_msgs</url>
  <depend package="std_msgs"/>  
  <depend package="sensor_msgs"/>  

</package><package name="sicktoolbox_wrapper" path="/stacks/laser_drivers/trunk/sicktoolbox_wrapper" repo="laser_drivers" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="ROS wrappers for using the SICK Toolbox">
    <tt>sicktoolbox_wrapper</tt> is a ROS wrapper for the outstanding <a href="http://www.ros.org/wiki/sicktoolbox">sicktoolbox</a>
    library for interfacing with the SICK LMS2xx lasers.
  </description>
  <author>Morgan Quigley</author>
  <url>http://ros.org/wiki/sicktoolbox_wrapper</url>
  <license>BSD</license>
  <review notes="Dec 2009" status="Doc reviewed"/>
  <depend package="sicktoolbox"/>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="diagnostic_updater"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="pythonAudio" path="/trunk/sbl_experimental/vocalics/pythonAudio" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="pythonAudio">

     pythonAudio

  </description>
  <author>Dhruv Monga</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pythonAudio</url>
  <depend package="std_msgs"/>
  <depend package="rospy"/>
  <depend package="roscpp"/>

</package><package name="seabee3_common" path="/trunk/cturtle/seabee3_common" repo="seabee3-ros-pkg" repo_host="http://seabee3-ros-pkg.googlecode.com/svn">
  <description brief="seabee3_common">

     seabee3_common

  </description>
  <author>Edward T. Kaszubski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/seabee3_common</url>
  <depend package="geometry_msgs"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="driver_base"/>
  <depend package="generic_controllers"/>
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp -I${prefix}/srv/cpp" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lseabee3_common"/>
  </export>

</package><package name="ping" path="/trunk/stacks/remote_lab/ping" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="ping">A node to measure roundtrip delays.</description>
  <author>Benjamin Pitzer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ping</url>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="roslib"/>
</package><package name="interactivespaces-service-alert-notifier-mail" path="" repo="interactive-spaces" repo_host="https://code.google.com/p/interactive-spaces">
	<description brief="interactivespaces.service.alert">
		An Alert Notifier for use with email for Interactive Spaces.
	</description>
	<author>Keith Hughes/khughes@google.com</author>
	<license>Apache License 2.0</license>
	<review notes="" status="unreviewed"/>
	<url>http://code.google.com/p/interactive-spaces/</url>
	
	<depend package="interactivespaces-service-alert"/>
	<depend package="interactivespaces-service-mail-sender"/>

	<rosdep name="java"/>
</package><package name="wifi_comm" path="/stacks/lse_communication/trunk/wifi_comm" repo="lse_communication" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="wifi_comm">

     Multi robot communication library and discovery node. Needs foreign_relay and olsrd to work.

  </description>
  <author>Gonçalo Cabrita and Pedro Sousa</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/wifi_comm</url>
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lwifi_comm"/>
  </export>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="foreign_relay"/>

</package><package name="uvc_stereo" path="" repo="camera_umd" repo_host="http://ram.umd.edu/git/ros/camera_umd.git">
  <description brief="uvc_stereo">

    Deprecated. Please use stereo_node or StereoNodelet in
    package uvc_camera.

  </description>
  <author>Ken Tossell/ktossell@umd.edu</author>
  <license>GPL</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/uvc_stereo</url>
  <depend package="sensor_msgs"/>
  <depend package="camera_info_manager"/>
  <depend package="image_transport"/>
</package><package name="powerbot" path="/trunk/robots/powerbot" repo="ubc-ros-pkg" repo_host="https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg">
  <description brief="powerbot">
      Package containing launch files for starting the hardware nodes on the PowerBot robot.
  </description>
  <author>Marius Muja</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url/>
  <depend package="powerbot_player"/>
  <depend package="powerbot_defs"/>
  <depend package="joy"/>
  <depend package="pr2_teleop"/>
  <depend package="ptu_controller"/>
  <depend package="robot_state_publisher"/>
  <depend package="hokuyo_node"/>
  <depend package="laser_assembler"/>
  <depend package="pr2_laser_snapshotter"/>
  <depend package="sicktoolbox_wrapper"/>
  <depend package="photo_cam"/>
  <depend package="bumblebee_stereo"/>

</package><package name="stomp" path="" repo="usc-clmc-ros-pkg" repo_host="https://github.com/usc-clmc/usc-clmc-ros-pkg">
  <description brief="stomp">

     stomp

  </description>
  <author>Mrinal Kalakrishnan</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/stomp</url>

  <depend package="roscpp"/>
  <depend package="usc_utilities"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -lstomp -Wl,-rpath,${prefix}/lib"/>
  </export>


</package><package name="rtt_ros_param" path="" repo="orocos_toolchain_ros" repo_host="http://git.mech.kuleuven.be/robotics/orocos_toolchain_ros.git">
    <description brief="Orocos rtt_ros_param Component package">
        This package contains the components of the rtt_ros_param package
    </description>
    <license>LGPL</license>
    <author> Ruben Smits, ruben.smits@mech.kuleuven.be</author>
    <depend package="rtt"/>
    <depend package="roscpp"/>
    <depend package="rtt_ros_integration"/>

</package><package name="srs_assisted_detection" path="" repo="srs_public" repo_host="git://github.com/ipa320/srs_public">
  <description brief="srs_assisted_detection">

     srs_assisted_detection

  </description>
  <author>Heiko Hoennige</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/srs_assisted_detection</url>
  <depend package="std_msgs"/>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="cob_object_detection_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="smach"/>
  <depend package="smach_ros"/>
    <depend package="srs_symbolic_grounding"/>
  
</package><package name="head_traj_general" path="/trunk/head_interaction_behavior/head_traj_general" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="head_traj_general">

     head_traj_general

  </description>
  <author>David Feil-Seifer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/head_traj_general</url>
  <depend package="tf"/>
  <depend package="bandit_msgs"/>
  <depend package="people_msgs"/>
  <depend package="opencv2"/>

</package><package name="katana_object_manipulator" path="" repo="katana_manipulation" repo_host="http://kos.informatik.uni-osnabrueck.de/katana_manipulation.git">
  <description brief="core functionality for pickup and place tasks for the Katana arm">

     Core functionality for pickup and place tasks. Services Pickup
     and Place action goals. Copied from object_manipulator by 
     Matei Ciocarlie and adapted to Katana arm.

  </description>
  <author>Henning Deeken</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/katana_object_manipulator</url>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="tf"/>
  <depend package="actionlib"/>
  <depend package="object_manipulation_msgs"/>
  <depend package="move_arm_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="kinematics_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="motion_planning_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="planning_environment_msgs"/>
  <depend package="mapping_msgs"/>
  <depend package="interpolated_ik_motion_planner"/>
  <depend package="pr2_mechanism_msgs"/>
  <depend package="eigen"/>
  <depend package="eigen_conversions"/>
  <depend package="object_manipulator"/>

</package><package name="protobuf" path="" repo="protobuf" repo_host="https://kforge.ros.org/gazebo/protobuf">
  <description brief="Protobuf">
    Protobuf
  </description>
  <author>Google</author>
  <license>BSD</license>
  <url>http://ros.org/wiki/protobuf</url>  
  <review notes="http://www.ros.org/wiki/protobuf" status="doc reviewed"/>
  <depend package="rostest"/>
  <depend package="rosbuild"/>
  <export>
    <cpp cflags="-I${prefix}/protobuf/include" lflags="-Wl,-rpath,${prefix}/protobuf/lib -L${prefix}/protobuf/lib -lprotobuf -lz  -pthread  -lpthread"/>
  </export>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="imu_monitor" path="" repo="pr2_robot" repo_host="https://kforge.ros.org/pr2robot/hg">
  <description brief="imu_monitor">

This package contains a single node that monitors the drift of the IMU
gyroscopes. The results are published to the '/diagnostics' topic and
are aggregated in the PR2 dashboard. 

  </description>
  <author>Wim Meeussen</author>
  <license>BSD</license>
  <review notes="" status="Doc reviewed"/>
  <url>http://ros.org/wiki/imu_monitor</url>

  <depend package="sensor_msgs"/>
  <depend package="pr2_mechanism_controllers"/>
  <depend package="kdl"/>
  <depend package="rospy"/>

</package><package name="hrl_phri_2011" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="hrl_phri_2011">

    pHRI 2011 paper work.

  </description>
  <author>Kelsey Hawkins</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hrl_phri_2011</url>
  <depend package="rospy"/>
  <depend package="sensor_msgs"/>
  <depend package="tf"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="eigen_conversions"/>
  <depend package="pixel_2_3d"/>
  <depend package="opencv2"/>
  <depend package="image_transport"/>
  <depend package="cv_bridge"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="interactive_markers"/>
  <depend package="tf_conversions"/>

</package><package name="vr920" path="/trunk/veltrop-ros-pkg/virtual_reality/vr920" repo="veltrop-ros-pkg" repo_host="https://veltrop-ros-pkg.svn.sourceforge.net/svnroot/veltrop-ros-pkg">
  <description brief="vr920">

     wrapper package for vusix vr920 drivers

  </description>
  <author>Jürgen, ROS inclusion by Taylor Veltrop</author>
  <license>Attribution-NonCommercial-ShareAlike 3.0 Unported</license>
  <review notes="" status="3rdparty unreviewed"/>
  <url>http://www.mygnu.de/index.php/2011/03/vrtrack-1-0-headtracking-driver-for-the-vr920-hmd/</url>
  <rosdoc external="http://www.mygnu.de/index.php/2011/03/vrtrack-1-0-headtracking-driver-for-the-vr920-hmd/"/>

</package><package name="gmapping" path="/stacks/slam_gmapping/trunk/gmapping" repo="slam_gmapping" repo_host="https://code.ros.org/svn/ros-pkg">
<description brief="GMapping">

This package contains GMapping, from OpenSlam, and a ROS wrapper. The gmapping package provides laser-based SLAM (Simultaneous Localization and Mapping), as a ROS node called slam_gmapping. Using slam_gmapping, you can create a 2-D occupancy grid map (like a building floorplan) from laser and pose data collected by a mobile robot.

This package uses r39 from GMapping SVN repsitory at openslam.org, with
minor patches applied to support newer versions of GCC and OSX.

</description>
<author>Giorgio Grisetti, Cyrill Stachniss, Wolfram Burgard; ROS wrapper by
Brian Gerkey</author>
<license>CreativeCommons-by-nc-sa-2.0</license>
<review notes="" status="API cleared, doc cleared"/>
<url>http://openslam.org/</url>
  <depend package="roscpp"/>
  <depend package="rosbag"/>
  <depend package="rosconsole"/>
  <depend package="std_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="std_msgs"/>
  <depend package="tf"/>
  <depend package="message_filters"/>
  <!-- map_server/map_saver is used in testing -->
  <depend package="map_server"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="osgi_msgs" path="" repo="interactive-spaces" repo_host="https://code.google.com/p/interactive-spaces">
  <description brief="osgi_msgs">
These messages are used by the OSGi components of ROS Java
  </description>
  <author>Keith Hughes</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/osgi_msgs</url>

  <depend package="std_msgs"/>
  <depend package="actionlib_msgs"/>
</package><package name="proximity_sensor_dashboard" path="/trunk/stacks/bosch_proximity_sensor/proximity_sensor_dashboard" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="proximity_sensor_dashboard">

     proximity_sensor_dashboard

  </description>
  <author>Joerg Wagner, Adrian Funk (Maintained by Philip Roan)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/proximity_sensor_dashboard</url>
  <depend package="roslib"/>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="proximity_sensor_driver"/>
  
  <rosdep name="wxwidgets"/>
</package><package name="ectools" path="/stacks/wg_hardware_test/trunk/ectools" repo="wg_hardware_test" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="Uses EtherCAT Master Library for various tools">
    <b>ectools</b> uses the EtherCAT Master Library to make various tools for the testing of PR2 electrical components.
  </description>
  <author>Derek King</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/NO_WIKI_YET</url>
  <depend package="roscpp"/>
  <depend package="eml"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="starmac_templates" path="" repo="starmac-ros-pkg" repo_host="https://bitbucket.org/bouffard/starmac-ros-pkg">
  <description brief="starmac_templates">

     Templates/examples for various things, e.g. a C++ nodelet.

  </description>
  <author>bouffard</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/starmac_templates</url>
  <depend package="nodelet"/>
  <depend package="pluginlib"/>
  <depend package="std_msgs"/>
  <depend package="rospy"/>
  <depend package="starmac_roslib"/>
  <depend package="std_msgs"/>
  
  <export>
    <nodelet plugin="${prefix}/nodelets.xml"/>
  </export>

</package><package name="recovery" path="/trunk/stacks/recovery_shared_autonomy/recovery" repo="bosch-ros-pkg-e" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg-e/code">
  <description brief="recovery">
   This recovery package contains extenstions for the SMACH recovery library to enable oracle based recovery and shared autonomy interaction. State machines built on the existing smach architecture are vunerable to system failures. This smach recovery wrapper asserts a recovery behaviour on smach recovery state machines.

  </description>
  <author>Bharath Sankaran</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/recovery</url>
  <depend package="rospy"/>
  <depend package="rostest"/>
  <depend package="rostopic"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="smach_recovery_ros"/>
  <depend package="smach_recovery"/>
  <depend package="smach_recovery_msgs"/>
  <depend package="rospack"/>
</package><package name="rqt_tf_tree" path="" repo="rqt" repo_host="https://kforge.ros.org/visualization/rqt">
  <description brief="Plugin for visualizing the ROS TF frame tree">
    rqt_tf_tree provides a GUI plugin for visualizing the ROS TF frame tree.
  </description>
  <author>Thibault Kruse</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rqt_tf_tree</url>

  <depend package="rqt_gui"/>
  <depend package="qt_dotgraph"/>
  <depend package="rqt_graph"/>
  <rosdep name="python-rospkg"/>
  <depend package="rospy"/>
  <depend package="geometry_msgs"/>
  <depend package="tf2"/>

  <export>
    <rqt_gui plugin="${prefix}/plugin.xml"/>
  </export>
</package><package name="furniture_classification" path="" repo="mapping" repo_host="http://code.in.tum.de/git/mapping.git">
  <description brief="furniture_classification">

     furniture_classification

  </description>
  <author>Vladyslav Usenko</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/furniture_classification</url>
  <depend package="pcl17"/>
  <depend package="pcl17_ros"/>
  <depend package="opencv2"/>
  <depend package="furniture_features"/>
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  <rosdep name="yaml-cpp"/>

</package><package name="euslisp" path="/trunk/euslisp" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="euslisp">

     euslisp and irteus

  </description>
  <author>Toshihiro Matsui and JSK, ROS maintained by Kei Okada</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/euslisp</url>

  <export>
    <cpp cflags="-I${prefix}/eus/include"/>
    <rosdoc config="rosdoc.yaml"/>
  </export>

  <rosdep name="opengl"/>
  <rosdep name="libjpeg"/>
  <rosdep name="libx11-dev"/>
  <rosdep name="libxext"/>
  <rosdep name="libpng12-dev"/>
  <rosdep name="libpq-dev"/>
  <rosdep name="xfonts-100dpi"/>
  <rosdep name="xfonts-75dpi"/>
  <rosdep name="xfont-server"/>
  <!-- rosdep name="ttf-mscorefonts-installer" / -->
</package><package name="jrl_dynamics_urdf" path="" repo="stacks/redundant_manipulator_control" repo_host="git://github.com/laas/redundant_manipulator_control">
  <description brief="URDF parser for jrl-dynamics">

    URDF parser for jrl-dynamics

  </description>
  <author>Thomas Moulard</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/jrl_dynamics_urdf</url>

  <export>
    <cpp cflags="`rosboost-cfg --cflags` -DBOOST_FILESYSTEM_VERSION=2 -I${prefix}/include" lflags="-L${prefix}/lib -ljrl_dynamics_urdf -Wl,-rpath,${prefix}/lib"/>
    <rosdoc config="rosdoc.yaml"/>
  </export>

  <depend package="common_rosdeps"/>
  <rosdep name="boost"/>
  <rosdep name="gtest"/>
  <rosdep name="jrl-dynamics"/>

  <depend package="bullet"/>

  <depend package="urdf"/>
  <depend package="urdf_interface"/>
  <depend package="resource_retriever"/>

</package><package name="hector_turtlebot_scan_filter" path="/trunk/hector_turtlebot/hector_turtlebot_scan_filter" repo="hector_turtlebot" repo_host="https://tu-darmstadt-ros-pkg.googlecode.com/svn">
  <description brief="hector_turtlebot_scan_filter performs simple index-based filtering of laser scanner data to prevent robot parts and shadow points from showing up in laser scans">

     hector_turtlebot_scan_filter performs simple index-based filtering of laser scanner data to prevent robot parts and shadow points from showing up in laser scans

  </description>
  <author>Stefan Kohlbrecher</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hector_turtlebot_scan_filter</url>
  <depend package="sensor_msgs"/>

</package><package name="pr2_app_manager" path="2_app_manager" repo="pr2_apps" repo_host="">
  <description brief="Scripts and tools for the app manager">
    Scripts and tools for running the application manager on the PR2.
  </description>
  <author>Vijay Pradeep</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/application_manager</url>

  <depend package="app_manager"/>

</package><package name="roslua" path="" repo="roslua" repo_host="http://github.com/timn/roslua">
  <description brief="A Lua client library for ROS">
    This package is a Lua client library for ROS. It allows connecting to a
    rosmaster instance and to develop ROS packages in Lua.
  </description>
  <author>Tim Niemueller</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/roslua</url>
  <export>
    <doxymaker external="http://timn.github.com/roslua/"/>
  </export>
  <depend package="roslang"/>
  <depend package="roslib"/>
  <rosdep name="lua"/>
  <rosdep name="lua-devel"/>
  <rosdep name="lua-md5"/>
  <rosdep name="lua-posix"/>
  <rosdep name="lua-socket"/>
  <rosdep name="lua-wsapi"/>
  <rosdep name="lua-xmlrpc"/>
  <rosdep name="xavante"/>
</package><package name="app_manager_tutorial" path="" repo="multimaster_experimental" repo_host="https://kforge.ros.org/appmanandroid/multimaster_experimental">
  <description brief="app_manager_tutorial">

     app_manager_tutorial

  </description>
  <author>Jeremy Leibs</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/app_manager_tutorial</url>
  <depend package="rospy"/>
  <depend package="app_manager"/>

</package><package name="reaper" path="/stacks/ros_experimental/trunk/reaper" repo="ros_experimental" repo_host="https://code.ros.org/svn/ros">
  <description brief="reaper">

     Reaper provides a nodes that periodically unregisters dead nodes from the ROS master.

  </description>
  <author>Kenneth Conley</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/reaper</url>
  <depend package="rospy"/>
  <depend package="rosnode"/>

</package><package name="geometry_msgs" path="/stacks/common_msgs/trunk/geometry_msgs" repo="common_msgs" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Messages for geometric primatives">

    geometry_msgs provides messages for common geometric primatives
    such as points, vectors, and poses. These primatives are designed
    to provide a common data type and facilitate interoperability
    throughout the system.

  </description>
  <author>Tully Foote</author>
  <license>BSD</license>
  <review notes="http://www.ros.org/wiki/geometry_msgs/Reviews/2009-09-30_Doc_Review" status="doc reviewed"/>
  <url>http://ros.org/wiki/geometry_msgs</url>

  <export>
    <cpp cflags="`PKG_CONFIG_PATH=${prefix}/../../lib/pkgconfig pkg-config --cflags geometry_msgs`" lflags="`PKG_CONFIG_PATH=${prefix}/../../lib/pkgconfig pkg-config --libs geometry_msgs`"/>
  </export>

</package><package name="summit_xl_ctrl" path="/trunk/trunk/summit_xl_sim_fuerte/summit_xl_ctrl" repo="summit-xl-ros-stack" repo_host="http://summit-xl-ros-stack.googlecode.com/svn">
  <description brief="summit_xl_ctrl">

     summit_xl_ctrl

  </description>
  <author>Roberto</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/summit_xl_ctrl</url>
  <depend package="pr2_controller_interface"/>
  <depend package="pr2_mechanism_model"/>
  <depend package="pluginlib"/>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="sensor_msgs"/>
  <depend package="nav_msgs"/>

  <export>
     <pr2_controller_interface plugin="${prefix}/controller_plugins.xml"/>
  </export>

</package><package name="articulation_perception" path="/trunk/articulation/articulation_perception" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="articulation_perception">
This package provides a detector for cabinet fronts from dense depth images (as produced by Microsoft's Kinect sensor or the PR2's projected texture stereo system). The basic approach is to segment each image into planes and to search for the rectangle with the maximum support. 
  </description>
  <author/>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/articulation_perception</url>
  <depend package="visualization_msgs"/>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="cv_bridge"/>
  <depend package="opencv2"/>
  <depend package="sensor_msgs"/>
  <depend package="tf_conversions"/>
  <depend package="tf"/>
  <depend package="articulation_msgs"/>

</package><package name="zbar" path="" repo="ias_perception" repo_host="http://code.in.tum.de/git/ias-perception.git">
  <description brief="zbar">
    ZBar is an open source software suite for reading bar codes from various sources, such as video streams, image files and raw intensity sensors. It supports many popular symbologies (types of bar codes) including EAN-13/UPC-A, UPC-E, EAN-8, Code 128, Code 39, Interleaved 2 of 5 and QR Code.
  </description>
  <author> Jeff Brown (spadix@users.sourceforge.net)</author>
  <license>GNU LGPL 2.1</license>
  <review notes="" status="unreviewed"/>
  <url>http://zbar.sourceforge.net/index.html</url>

  <export>
    <cpp cflags="-I${prefix}/include/" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lzbar -lzbargtk -lzbarqt"/>
  </export>

  <rosdep name="libmagickwand-dev"/>
  <rosdep name="libmagick++-dev"/>
</package><package name="indomptable_vision" path="" repo="smart-robotics-ros-pkg" repo_host="https://github.com/JBot/smart-robotics-ros-pkg">
  <description brief="indomptable_vision">

     indomptable_vision

  </description>
  <author>jbot</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/indomptable_vision</url>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="std_msgs"/>
  <depend package="image_transport"/>

</package><package name="astromech_msgs" path="/astromech_msgs" repo="astromech-ros" repo_host="https://astromech-ros.svn.sourceforge.net/svnroot/astromech-ros">
  <description brief="astromech_msgs">

     astromech_msgs: Common messages for the astromech-ros stack

  </description>
  <author>Björn Giesler</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/astromech_msgs</url>

  <depend package="sensor_msgs"/>

</package><package name="ubc_vrs_annotation_tools" path="/trunk/ubc_vrs/ubc_vrs_annotation_tools" repo="ubc-ros-pkg" repo_host="https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg">
  <description brief="visual_annotation">

     visual_annotation

  </description>
  <author/>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/visual_annotation</url>
  
  <depend package="opencv2"/>

</package><package name="kurt_teleop" path="" repo="kurt_driver" repo_host="http://kos.informatik.uni-osnabrueck.de/kurt_driver.git">
  <description brief="kurt_teleop">

     kurt_teleop

  </description>
  <author>Jochen Sprickerhof</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/kurt_teleop</url>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>

</package><package name="bfl_eigen" path="/branches/fuerte/hector_common/bfl_eigen" repo="hector_common" repo_host="https://tu-darmstadt-ros-pkg.googlecode.com/svn">
  <description brief="The Bayesian Filtering Library (latest) with Eigen matrix class">

    This package contains a recent version of the Bayesian Filtering
    Library (BFL), distributed by the Orocos Project. Instead of the default Boost uBLAS library it uses Eigen for matrix operations.

  </description>
  <author>Klaas Gadeyne, Wim Meeussen, Tinne Delaet and many others. See web page for a full contributor list. Eigen matrix library support added by Johannes Meyer.</author>
  <license>LGPL</license>
  <url>http://www.orocos.org/bfl</url>
  <export>
    <cpp cflags="`pkg-config --cflags eigen3` -I${prefix}/install/include" lflags="-Wl,-rpath,${prefix}/install/lib  -L${prefix}/install/lib -lorocos-bfl"/>
    <doxymaker external="http://orocos.org/bfl"/>
  </export>

  <rosdep name="eigen"/>

</package><package name="android_tutorial_pubsub" path="" repo="android_core" repo_host="https://code.google.com/p/rosjava.android/">
  <description brief="android_tutorial_pubsub">
     android_tutorial_pubsub
  </description>
  <author>Damon Kohler</author>
  <license>Apache 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/android_tutorial_pubsub</url>
</package><package name="pi_face_tracker_gui" path="/trunk/pi_vision/pi_face_tracker_gui" repo="pi-robot-ros-pkg" repo_host="http://pi-robot-ros-pkg.googlecode.com/svn">
  <description brief="pi_face_tracker_gui">

     A web-based GUI for the pi_face_tracker package written by
     Scott Bell and using rosbridge and mjpeg_server.

  </description>
  <author>Scot Bell</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pi_face_tracker_gui</url>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="rosbridge"/>
  <depend package="mjpeg_server"/>
  <depend package="pi_face_tracker"/>
</package><package name="rospackwtf" path="/stacks/ros_experimental/trunk/rospackwtf" repo="ros_experimental" repo_host="https://code.ros.org/svn/ros">
  <description brief="rospackwtf">

     rospackwtf

  </description>
  <author>Tully Foote</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rospackwtf</url>
  <export>
    <roswtf plugin="rospackwtf.rospackwtf"/>
  </export>
  <depend package="roslib"/>
  <depend package="roswtf"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="rve_interface_gen" path="" repo="visualization_engine" repo_host="https://kforge.ros.org/visengine/hg">
  <description brief="RPC Interface Code Generation">

     Generates easy to use proxy classes and base classes which wrap rve_rpc method calls.

  </description>
  <author>Josh Faust</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rve_interface_gen</url>
  <depend package="roslib"/>
  <depend package="roscpp"/>
  <depend package="rve_rpc"/>
  <depend package="std_msgs"/>
  
  <export>
  	<cpp cflags="-I${prefix}/include"/>
  </export>
</package><package name="cob_default_env_config" path="" repo="cob_environments" repo_host="git://github.com/ipa320/cob_environments">
  <description brief="cob_default_env_config">

     This package contains configuration files for the default environments for Care-O-bot supported by IPA.

  </description>
  <author>Florian Weisshardt</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_default_env_config</url>

  <depend package="rostest"/>  

</package><package name="imagem_transport" path="" repo="ethzasl_message_transport" repo_host="https://github.com/ethz-asl/ros-message-transport">
  <description brief="imagem_transport">

     imagem_transport (the m is here to avoid the confusion with the
	 image_transport package)

  </description>
  <author>Cedric Pradalier</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/imagem_transport</url>
  <depend package="pluginlib"/>
  <depend package="message_transport_common"/>
  <depend package="templated_transports"/>
  <depend package="sensor_msgs"/>
  <rosdep name="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="message_filters"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -limagem_transport"/>
    <imagem_transport plugin="${prefix}/default_plugins.xml"/>
  </export>

</package><package name="rosjs_pr2interaction" path="/trunk/stacks/remote_lab/rosjs_pr2interaction" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="rosjs_pr2interaction">

     rosjs_pr2interaction

  </description>
  <author>Sarah Osentoski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosjs_pr2interaction</url>
  <!-- depend package="rosjs"/ -->
  <depend package="rosjs_common"/>
</package><package name="rotate_recovery" path="" repo="navigation" repo_host="https://kforge.ros.org/navigation/navigation">
  <description brief="rotate_recovery">

     This package provides a recovery behavior for the navigation stack that attempts to clear space by performing a 360 degree rotation of the robot.

  </description>
  <author>Eitan Marder-Eppstein</author>
  <license>BSD</license>
  <review notes="" status="Doc reviewed"/>
  <url>http://ros.org/wiki/rotate_recovery</url>
  <depend package="roscpp"/>
  <depend package="nav_core"/>
  <depend package="tf"/>
  <depend package="costmap_2d"/>
  <depend package="geometry_msgs"/>
  <depend package="base_local_planner"/>
  <depend package="pluginlib"/>
  <depend package="angles"/>
  <depend package="common_rosdeps"/>
  <rosdep name="eigen"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lrotate_recovery"/>
    <nav_core plugin="${prefix}/rotate_plugin.xml"/>
  </export>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="oit_models" path="/trunk/OIT_experimental/oit_models" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="oit_models">

     oit_models

  </description>
  <author>David Feil-Seifer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/oit_models</url>

  <depend package="roscpp"/>
  <depend package="opencv2"/>
	<depend package="geometry_msgs"/>
	<depend package="p2os_driver"/>
	<depend package="tf"/>

	<depend package="yaml_cpp"/>

  <export>
    <cpp cflags="-I${prefix}/srv/cpp"/>
  </export>

</package><package name="roboard_roboio" path="/trunk/veltrop-ros-pkg/roboard/roboard_roboio" repo="veltrop-ros-pkg" repo_host="https://veltrop-ros-pkg.svn.sourceforge.net/svnroot/veltrop-ros-pkg">
<description brief="Support library for the Roboard.">
This library allows hardware access to the Roboard.
</description>
<author>DMP Electronics, Inc. ROS inclusion and patch by Taylor Veltrop.</author>
<license>BSD</license>
<review notes="" status="3rdparty unreviewed"/>
<url>http://www.roboard.com</url>
<export>
  <rosdoc external="http://www.roboard.com"/>
  <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lRBIO"/>
</export>
</package><package name="hrl_rfid" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="hrl_rfid">
    UHF RFID (Ultra-High Frequency Radio Frequency Identification)
    reader based on ThingMagic Mercury5e (M5e) and Mercury5e-Compact
    (M5e-C) modules.  ThingMagic's highly-capable Gen2 UHF RFID
    modules interact with low-cost &quot;smart labels&quot; (tags) at distances
    up to 6 meters depending on choice of antennas (distances over 100
    meters possible using highly-directive antennas!) even without
    line-of-sight visibility, as RF penetrates most non-conducting
    materials.  The reader can simultaneously query for hundreds of
    tags in the environment at once or query for presence / absence of
    a individual tag among a sea of others.  A stand-alone Python
    library is provided as well as ROS wrappers.
  </description>
  <author>
    Travis Deyle, Advisor: Prof. Charlie Kemp (Healthcare Robotics Lab
    at Georgia Tech) and Prof. Matt Reynolds (Duke University)
  </author>
  <license>new BSD</license>
  <depend package="rospy"/>

  <export>
    <cpp cflags="-I${prefix}/msg/cpp -I${prefix}/srv/cpp"/>
  </export>
</package><package name="nav_pcontroller" path="/stacks/ias_nav/nav_pcontroller" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="nav_pcontroller">

     simple P-Controller for a holonomic robot base.

  </description>
  <author>Ingo Kresse</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <depend package="tf"/>
  <depend package="roscpp"/>
  <depend package="vision_srvs"/>
  <depend package="visualization_msgs"/>
  <depend package="actionlib_msgs"/>
  <depend package="navp_action"/>
  <depend package="move_base_msgs"/>
</package><package name="katana_teleop" path="" repo="katana_driver" repo_host="http://kos.informatik.uni-osnabrueck.de/katana_driver.git">
  <description brief="Katana Tele-Operation Package">

    <p>
    This package provides tele-operation nodes to control the Neuronics Katana 450 arm via keyboard commands or with a playstation 3 controller.
    </p>

    <p>
    GPL license
    </p>

  </description>

  <author>Henning Deeken</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/katana_teleop</url>

  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="katana_msgs"/>
  <depend package="actionlib"/>
  <depend package="kinematics_msgs"/>
  <depend package="object_manipulation_msgs"/>
</package><package name="wubble_teleop" path="/trunk/arrg/ua_apps/wubble_teleop" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="Joystick teleop demo of the Wubble robot">
        wubble_teleop
    </description>

    <author>Daniel Hewlett</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/wubble_teleop</url>

    <!-- Core ros packages -->
    <depend package="roscpp"/>
    <depend package="rospy"/>
    <depend package="geometry_msgs"/>
    <depend package="sensor_msgs"/>
    <depend package="dynamixel_msgs"/>
    <depend package="pr2_controllers_msgs"/>
    
    <!-- Joystick -->
    <depend package="joy"/>
    <depend package="joystick_remapper"/>
    <depend package="dynamixel_hardware_interface"/>

    <!-- Movement -->
    <depend package="move_base"/>
</package><package name="rtt_stereo_msgs" path="" repo="rtt_common_msgs" repo_host="http://git.mech.kuleuven.be/robotics/rtt_common_msgs.git">
  <description brief="rtt_stereo_msgs">

    Provides an rtt typekit for ROS stereo_msgs messages.

    It allows you to use ROS messages transparently in
    RTT components and applications.

    This package was automatically generated by the
    create_rtt_msgs generator and should not be manually
    modified.

    See the http://ros.org/wiki/stereo_msgs documentation
    for the documentation of the ROS messages in this
    typekit.

  </description>
  <author>create_rtt_msgs Generator</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rtt_rosnode</url>
  <depend package="rtt_rosnode"/>
  <depend package="stereo_msgs"/>
  <depend package="rtt_std_msgs"/>
  <depend package="rtt_rosgraph_msgs"/>
  <depend package="rtt_geometry_msgs"/>
  <depend package="rtt_sensor_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>


</package><package name="pr2_arm_gazebo" path="/stacks/wg_robots_gazebo/trunk/pr2_arm_gazebo" repo="wg_robots_gazebo" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description>Start a PR2 arm in 3D simulation environment.</description>
  <author>John Hsu</author>
  <license>BSD</license>
  <review notes="" status="na"/>
  <url>http://pr.willowgarage.com/wiki/pr2_simulator</url>
  <depend package="pr2_gazebo_plugins"/>
  <depend package="gazebo_plugins"/>
  <depend package="gazebo"/>
  <depend package="gazebo_msgs"/>
  <depend package="pr2_ogre"/>
  <depend package="gazebo_worlds"/>
  <depend package="pr2_controller_configuration_gazebo"/>
  <depend package="robot_mechanism_controllers"/>
  <depend package="pr2_mechanism_controllers"/>
  <depend package="robot_state_publisher"/>
  <depend package="pr2_mechanism_msgs"/>

  <depend package="rospy"/>
  <depend package="nav_msgs"/>
  <depend package="std_msgs"/>

  <!-- for moving gripper -->
  <depend package="actionlib"/>
  <depend package="pr2_controllers_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib"/>
    <gazebo plugin_path="${prefix}/lib"/>
  </export>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="prmini_defs" path="/trunk/sandbox/prmini/prmini_defs" repo="vanadium-ros-pkg" repo_host="http://vanadium-ros-pkg.googlecode.com/svn">
  <description brief="Definitions for the PR-MINI platform">
    Definitions for the PR-MINI platform.
  </description>
  <author>Michael Ferguson</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/prmini_defs</url>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="arbotix_node"/>
  <depend package="pr2_controller_msgs"/>
</package><package name="ua_audio_play" path="/trunk/arrg/ua_experimental/ua_audio_play" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
  <description brief="plays an audio stream captured by audio_capture">

A minimal node which plays an audio stream captured by the audio_capture node.

  </description>
  <author>Morgan Quigley</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <depend package="roscpp"/>
  <depend package="ua_audio_msgs"/>
  <rosdep name="portaudio"/>
</package><package name="pr2_image_snapshot_recorder" path="" repo="pr2_plugs" repo_host="https://kforge.ros.org/plugs/hg">
  <description brief="pr2_image_snapshot_recorder">

     pr2_image_snapshot_recorder

  </description>
  <author>Kevin Watts</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_image_snapshot_recorder</url>
  <depend package="rospy"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="rosbag"/>

</package><package name="pr2_utils" path="/branches/pr2_demos/pr2_utils" repo="mit-ros-pkg-pr2-demos" repo_host="https://svn.csail.mit.edu/mit-ros-pkg">
  <description brief="pr2_utils">

     pr2_utils

  </description>
  <author>Jenny Barry</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_utils</url>
  <depend package="geometry_msgs"/>
  <depend package="arm_navigation_msgs"/>
  <depend package="ee_cart_imped_control"/>
  <depend package="ee_cart_imped_action"/>
  <depend package="rospy"/>
  <depend package="pr2_msgs"/>
  <depend package="kinematics_msgs"/>
  <depend package="trajectory_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="pr2_pick_and_place_demos"/>
  <depend package="std_msgs"/>
  <depend package="object_manipulation_msgs"/>

</package><package name="constrained_inverse_kinematics" path="" repo="usc-clmc-ros-pkg" repo_host="https://github.com/usc-clmc/usc-clmc-ros-pkg">
  <description brief="constrained_inverse_kinematics">

     constrained_inverse_kinematics

  </description>
  <author>Mrinal Kalakrishnan</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/constrained_inverse_kinematics</url>

  <depend package="urdf"/>
  <depend package="kdl"/>
  <depend package="kdl_parser"/>
  <depend package="geometry_msgs"/>
  <depend package="arm_navigation_msgs"/>
  <depend package="kinematics_msgs"/>
  <depend package="usc_utilities"/>
  <depend package="conversions"/>
  <depend package="learnable_cost_function"/>

  <export>
     <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lconstrained_inverse_kinematics"/>
  </export>

</package><package name="pr2_dynamic_movement_primitive_controller" path="" repo="usc-clmc-ros-pkg" repo_host="https://github.com/usc-clmc/usc-clmc-ros-pkg">
  <description brief="pr2_dynamic_movement_primitive_controller">

     dynamic_movement_primitive_controller

  </description>
  <author>Alex Herzog and Peter Pastor</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_dynamic_movement_primitive_controller</url>

  <depend package="roscpp"/>
  <depend package="rosrt"/>
  <depend package="eigen"/>
  <depend package="filters"/>
  <depend package="geometry_msgs"/>
  <depend package="pluginlib"/>
  <depend package="control_toolbox"/>

  <depend package="pr2_controller_interface"/>
  <depend package="pr2_mechanism_model"/>
  <depend package="pr2_controllers_msgs"/>

  <depend package="dynamic_movement_primitive"/>
  <depend package="usc_utilities"/>
  <depend package="robot_info"/>

  <export>
    <pr2_controller_interface plugin="${prefix}/controller_plugins.xml"/>
    <cpp cflags="-I${prefix}/include -I${prefix}/srv/cpp -I${prefix}/msg/cpp" lflags="-Wl,-rpath,${prefix}/lib/ -L${prefix}/lib -lpr2_dynamic_movement_primitive_controller"/>
  </export>


</package><package name="smach_recovery" path="/trunk/stacks/recovery_shared_autonomy/smach_recovery" repo="bosch-ros-pkg-e" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg-e/code">
  <description brief="Smach Recovery">
    SMACH RECOVERY, which stands for 'state machine recovery', is a task-level architecture for rapidly creating complex robot behavior. At its core, SMACH RECOVERY is a ROS-independent Python library to build hierarchical state machines.  SMACH RECOVERY is a new library that is built on top of the SMACH library and retains a majority of the original functionality. This package also contains the additional functionality of recovery from task failures.
  </description>
  <author>Bharath Sankaran and Jonathan Bohren</author>
  <license>BSD</license>
  <review notes="" status="Doc reviewed"/>
  <url>http://ros.org/wiki/smach_recovery</url>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
  <export>
    <rosdoc config="rosdoc.yaml"/>    
  </export>
</package><package name="cminpack" path="" repo="perception_pcl_fuerte_unstable" repo_host="https://bitbucket.org/macmason/perception_pcl_fuerte_unstable">
  <description brief="CMinpack">

<p>
    <em>This is the official description of Minpack, from the original ReadMe file:</em>
    Minpack includes software for solving nonlinear equations and nonlinear
    least squares problems. Five algorithmic paths each include a core
    subroutine and an easy-to-use driver. The algorithms proceed either from an
    analytic specification of the Jacobian matrix or directly from the problem
    functions. The paths include facilities for systems of equations with a
    banded Jacobian matrix, for least squares problems with a large amount of
    data, and for checking the consistency of the Jacobian matrix with the
    functions.
</p>
<p>
    Minpack is probably the best open-source implementation of the
    Levenberg-Marquardt algorithm (in fact, it is even better, since it adds to
    L-M automatic variables scaling). There is another open-source L-M
    implementation in C/C++, levmar by Manolis Lourakis, but unfortunately is is
    released under the GPL, which restricts its inclusion in commercial
    software. Minpack is licensed under a BSD-like license (available in the
    distribution).
</p>
<p>
    I took a dozen of hours to rework all these problems, and came out with a
    pure C version of Minpack, with has standard (ISO C99) parameters passing,
    is fully reentrant, multithread-safe, and has a full set of examples and
    tests:
</p>
<p>
      1. Input variables are now passed by value, output variables are passed by
      reference. The keyword &quot;const&quot; is used as much as possible for constant
      arrays. The return value of each function is now used to get the function
      status (it was obtained via the IFLAG or INFO parameter in Minpack).
</p>
<p>
      2. All non-const static variables were removed, and the code was tested
      after that. Luckily, Minpack didn't use the nastiest feature in FORTRAN: all
      local variables are static, so that a function can behave differently when
      you call it several times.
</p>
<p>
      3. The function to be minimized and all the Minpack functions now take
      an extra &quot;void*&quot; argument, which can be used to pass any
      pointer-to-struct or pointer-to-class, and you can put all you extra
      parameters and datd in that struct. Just cast this pointer to the
      appropriate pointer type in your function, and there they are! There
      is no need for global variables anymore. Be careful if you access the
      same object from different threads, though.
</p>
<p>
      4. The Debian project did a C include file for Minpack. It still needed some
      work (add consts and C++ compatibility), so I did this work, and used the
      include file for the FORTRAN version as the base for my C/C++ version.
</p>
<p>
      5. The Debian project also translated all the FORTRAN examples to C. I
      worked from these to produce examples which also call my C/C++ version of
      Minpack instead of the FORTRAN version. Also included in the distribution
      are reference output files produced by the test runs (for comparison).
</p>
  </description>

  <author>Frédéric Devernay</author>
  <license>BSD</license>
  <review notes="" status="3rdparty"/>
  <url>http://devernay.free.fr/hacks/cminpack.html</url>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lcminpack"/>
  </export>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
  <platform os="ubuntu" version="10.10"/>
</package><package name="jsk_android_setup" path="/trunk/jsk_smart_apps/jsk_android_setup" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="jsk_android_setup">

     jsk_android_setup

  </description>
  <author>murase</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/jsk_android_setup</url>

</package><package name="busbot_description" path="/trunk/stacks/drink_serving/busbot_description" repo="bosch-ros-pkg-e" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg-e/code">
  <description brief="busbot_description">

     busbot_description provides a complete 3D model of the BusBot for simulation and visualization. The files in this package are parsed and used by a variety of other components. Most users will not interact directly with this package.
  </description>
  <author>Melonee Wise, Ben Pitzer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/busbot_description</url>
  <depend package="urdf"/>
  <depend package="xacro"/>

</package><package name="bosch_kitchen_defs" path="/trunk/stacks/bosch_kitchen_models/bosch_kitchen_defs" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="bosch_kitchen_defs">

     bosch_kitchen_defs

  </description>
  <author>Lucian Cosmin Goron</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/bosch_kitchen_defs</url>
  <depend package="xacro"/>

</package><package name="veltrobot_movement" path="/trunk/veltrop-ros-pkg/veltrobot/veltrobot_movement" repo="veltrop-ros-pkg" repo_host="https://veltrop-ros-pkg.svn.sourceforge.net/svnroot/veltrop-ros-pkg">
  <description brief="veltrobot_movement">

     Controls the movment of a robot using servos.
     Servo positons are sent as joint_states.  Poses and motions
     are defined by XML files.

  </description>
  <author>Taylor Veltrop</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://taylor.veltrop.com/robotics/khrhumanoidv2.php?topic=veltrop-ros-pkg</url>

  <depend package="roscpp"/>
  <depend package="tinyxml"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  
  <export>
  	<cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib"/>
	</export>
  
</package><package name="delayed_topics" path="/trunk/rtcus_tools/delayed_topics" repo="rtc-us-ros-pkg-trunk" repo_host="https://rtc-us-ros-pkg.svn.sourceforge.net/svnroot/rtc-us-ros-pkg">
  <description brief="delayed_topics">

  </description>
  <author>Pablo Iñigo Blasco</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/delayed_topics</url>
  
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/cfg/cpp -I${prefix}/msg_gen/cpp/include" lflags="-L${prefix}/lib"/>
  </export>
  
  <depend package="rtcus_stamp"/>
  <depend package="rtcus_motion_models"/>
  <depend package="mrpt_libs"/>
  <depend package="mrpt_bridge"/>
  <depend package="dynamic_reconfigure"/>
  
  <depend package="rospy"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="tf"/>
  <depend package="joy"/>
  <depend package="rosgraph_msgs"/>
  <depend package="std_srvs"/>
  
</package><package name="pr2_interactive_gripper_pose_action" path="/stacks/pr2_object_manipulation/branches/0.6-branch/manipulation/pr2_interactive_gripper_pose_action" repo="pr2_object_manipulation" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_interactive_gripper_pose_action">

    This package provides an action node that, when called,
    displays an interactive marker in Rviz (or any other client)
    to interactively select a pose for the pr2 gripper.

  </description>
  <author>Adam Leeper</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_marker_control</url>
  <depend package="roscpp"/>
  <depend package="interactive_markers"/>
  <depend package="interactive_marker_helpers"/>
  <depend package="sensor_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="tf"/>
  
  <!-- Contains the GetGripperPose and TestGripperPose actions  -->
  <depend package="pr2_object_manipulation_msgs"/>
  
  <!-- So we can send cloud to the (optional) grasp planner -->
  <depend package="point_cloud_server"/>

  <!-- Robot interface -->
  <depend package="object_manipulator"/>
  
  <!-- For joint states stuff 
  <depend package="planning_environment"/>
  <depend package="pr2_wrappers"/>
  -->

</package><package name="arm_kinematics" path="/branches/stable/urdf_tools/arm_kinematics" repo="wu-ros-pkg" repo_host="https://wu-robotics.googlecode.com/svn">
  <description brief="A generic package for computing Arm Kinematics">
    A generic package for computing both forward and backward kinematics for arms.
    Developed as an alternative to pr2_arm_kinematics for people not using the PR2. 
  </description>
  <author>David V. Lu!!</author>
  <license>BSD</license>
  <url>http://ros.org/wiki/arm_kinematics</url>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="sensor_msgs"/>
  <depend package="tf_conversions"/>
  <depend package="kdl_parser"/>
  <depend package="kinematics_msgs"/>

</package><package name="chessbot" path="/trunk/chessbot/chessbot" repo="stanford-ros-pkg" repo_host="https://stanford-ros-pkg.googlecode.com/svn">
  <description brief="chessbot">

     chessbot

  </description>
  <author>David Mandle</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/chessbot</url>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="geometry_msgs"/>
  <depend package="std_msgs"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="cart_interp"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="checkerboard_pose"/>
</package><package name="intercom_cu" path="/trunk/intercom_cu" repo="prairiedog" repo_host="http://prairiedog.googlecode.com/svn">
  <description brief="intercom_cu">

     provides inter-robot communication.

  </description>
  <author>common</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://correll.cs.colorado.edu/pmwiki/index.php/Main/RobotBase</url>
  <depend package="roscpp"/>
  <depend package="nav_msgs"/>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="tf"/>
  <depend package="message_filters"/>
  <depend package="move_base_msgs"/>
  <depend package="hokuyo_listener_cu"/>
  <depend package="tinyxml"/>

  <export>
    <cpp cflags="-I${prefix}/msg/cpp"/>
  </export>
</package><package name="summit_description" path="/trunk/trunk/summit_sim/summit_description" repo="summit-ros-pkg" repo_host="http://summit-ros-stack.googlecode.com/svn">
  <description brief="summit_description">

     summit_description

  </description>
  <author>Roberto Guzman</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <!--url>http://ros.org/wiki/summit_description</url-->
  <url>http://www.robotnik.eu</url>
  <depend package="roscpp"/>
  <depend package="std_srvs"/>
  <depend package="std_msgs"/>
  <depend package="tf"/>
  <export>
    <cpp cflags="-I${prefix}/srv/cpp"/>
  </export>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>

</package><package name="automow_pcb" path="" repo="au_automow_drivers" repo_host="https://github.com/Auburn-Automow/au_automow_drivers">
  <description brief="automow_pcb">

     automow_pcb

  </description>
  <author>Michael Carroll</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/automow_pcb</url>

  <depend package="rosserial_arduino"/>
  <depend package="automow_node"/>

</package><package name="splines" path="" repo="usc-clmc-ros-pkg" repo_host="https://github.com/usc-clmc/usc-clmc-ros-pkg">
  <description brief="splines">

     splines

  </description>
  <author>Mrinal Kalakrishnan</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/splines</url>

  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>

</package><package name="sphero_msgs" path="/trunk/sandbox/sphero/sphero_msgs" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="sphero_msgs">

     sphero_msgs

  </description>
  <author>Ross Mead</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sphero_msgs</url>
  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>
  <depend package="roslib"/>
  <rosbuild2>
    <depend package="roslib"/>

    <export>
      <include_dir>${sphero_msgs_SOURCE_DIR}/include</include_dir>
    </export>

    <msgs>
      msg/Color.msg
    </msgs>
  </rosbuild2>

</package><package name="ubc_vrs_utilities" path="/trunk/ubc_vrs/ubc_vrs_utilities" repo="ubc-ros-pkg" repo_host="https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg">
  <description brief="ubc_vrs_utilities">

    ubc_vrs_utilities - Support functions that have been used to create the dataset and helper functions to access the data and geometry.

  </description>
  <author>David Meger</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ubc_vrs_utilities</url>
  <depend package="rospy"/>
  <depend package="opencv2"/>
  <depend package="sensor_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="tf"/>
  <depend package="pcl"/>
  
</package><package name="image_server" path="/trunk/cturtle/image_server" repo="seabee3-ros-pkg" repo_host="http://seabee3-ros-pkg.googlecode.com/svn">
  <description brief="image_server">

     image_server

  </description>
  <author>Edward T. Kaszubski, Rand Voorhies</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/image_server</url>
  <depend package="base_libs"/>
  <depend package="nodelet"/>
  <depend package="pluginlib"/>
  
  <export>
    <nodelet plugin="${prefix}/nodelet_plugins.xml"/>
    <cpp cflags="-std=c++0x -I${prefix}/include -I${prefix}/msg/cpp -I${prefix}/srv/cpp" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -limage_server"/>
  </export>
</package><package name="kobuki_testsuite" path="" repo="kobuki" repo_host="https://github.com/yujinrobot/kobuki">
  <description brief="kobuki_testsuite">

     Kobuki test suite package provides scripts to thoroughly test kobuki hardware

  </description>
  <author>Jorge Santos</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/kobuki_testsuite</url>
  <depend package="kobuki_node"/>
  <depend package="kobuki_driver"/>
  <depend package="turtlebot_bringup"/>

</package><package name="pacman_controller" path="" repo="multi_robot_collision_avoidance" repo_host="https://kforge.ros.org/collvoid/collvoid">
  <description brief="pacman_controller">

     pacman_controller

  </description>
  <author>Daniel Claes</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pacman_controller</url>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="std_srvs"/>
  <depend package="visualization_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="collvoid_msgs"/>
  <depend package="collvoid_local_planner"/>
  <depend package="tf"/>
  <depend package="actionlib"/>
  <depend package="move_base_msgs"/>


</package><package name="geometric_semantics_tf_msgs" path="" repo="geometric_relations_semantics" repo_host="http://git.mech.kuleuven.be/robotics/geometric_relations_semantics.git">
  <description brief="geometric_semantics_tf_msgs">

     <a href="http://www.ros.org/wiki/geometric_semantics_tf_msgs">geometric_semantics_tf_msgs</a> provides ROS messages matching the C++ types defined on the <a href="http://www.ros.org/wiki/geometric_semantics_tf">geometric_semantics_tf</a> package, in order to support semantic support for <a href="http://www.ros.org/wiki/tf">tf</a>types during message based communication.

  </description>
  <author>Tinne De Laet</author>
  <license>LGPLv2.1 / BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.orocos.org/wiki/geometric-relations-semantics-wiki</url> 

  <depend package="geometric_semantics_msgs"/>
  <depend package="geometry_msgs"/>
  <export>
        <rosdoc config="rosdoc.yaml"/>
   </export>

</package><package name="node_manager_fkie" path="" repo="fkie-ros-pkg" repo_host="git://github.com/fkie/fkie-ros-pkg">
  <description brief="node_manager_fkie">

     Graphical interface, written in PySide, to manage the running and 
     configured ROS nodes on different hosts. For discovering 
     the running ROS master master_discovery node will be used.

  </description>
  <author>Alexander Tiderko, Timo Röhling</author>
  <license>BSD, some icons are licensed under the GNU Lesser General Public License (LGPL) or Creative Commons Attribution-Noncommercial 3.0 License</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/node_manager_fkie</url>

  <depend package="rospy"/>
  <depend package="roslib"/>
  <depend package="rosgraph"/>
  <depend package="roslaunch"/>
  <depend package="rosservice"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="master_discovery_fkie"/>
  <depend package="default_cfg_fkie"/>
  <rosdep name="python-pyside"/>
  <rosdep name="python-paramiko"/>
  <rosdep name="python-psutil"/>
  <rosdep name="pyside-tools"/>
  <rosdep name="python-docutils"/>
  <rosdep name="python-pyside.qtuitools"/>
  <rosdep name="screen"/>
  <rosdep name="xterm"/>
  
  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>

</package><package name="kurt_navigation_config" path="" repo="kurt_apps" repo_host="http://kos.informatik.uni-osnabrueck.de/kurt_apps.git">
  <description brief="Kurt-specific move_base configuration">
    This package holds common configuration files for running the <a href="http://www.ros.org/wiki/move_base">move_base</a> node on the Kurt
    robot. It is modeled after pr2_navigation_config.
  </description>
  <author>Jochen Sprickerhof</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/kurt_navigation_config</url>
</package><package name="romeo_description" path="" repo="stacks/romeo" repo_host="git://github.com/laas/romeo">
  <description brief="Aldebaran Robotics Romeo robot model">
    This package provides URDF, SRDF and RCPDF models for Aldebaran
    Robotics Romeo robot.

    Model copyright hold by Aldebaran Robotics.
  </description>
  <author>François Keith, Thomas Moulard/thomas.moulard@gmail.com</author>
  <license>BSD (model copyright hold by Aldebaran Robotics)</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/romeo_description</url>

  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>
</package><package name="camera_turnpike" path="/trunk/albany_vision/camera_turnpike" repo="albany-ros-pkg" repo_host="http://albany-ros-pkg.googlecode.com/svn">
  <description brief="Allows a metered copying of Kinect output to an alternate topic."/>
  <author>Michael Ferguson</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/camera_turnpike</url>
  <depend package="roscpp"/>
  <depend package="pcl_ros"/>
  <depend package="sensor_msgs"/>
  <depend package="std_srvs"/>
</package><package name="lejos_navigation" path="/trunk/ros/nxt_lejos_ros/lejos_navigation" repo="lejos-ros-pkg" repo_host="https://lejos.svn.sourceforge.net/svnroot/lejos">
  <description brief="lejos_navigation">

     lejos_navigation

  </description>
  <author>lawrie</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/lejos_navigation</url>

</package><package name="cob_script_server" path="" repo="cob_command_tools" repo_host="git://github.com/ipa320/cob_command_tools">
  <description brief="cob_script_server">

     The cob_script_server package provides a simple interface to operate Care-O-bot. It can be used via the python API or the actionlib interface.

  </description>
  <author>Florian Weisshardt</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_script_server</url>
  
  <depend package="rospy"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="tf"/>
  <depend package="std_msgs"/>
  <depend package="cob_srvs"/>
  <depend package="trajectory_msgs"/>
  <depend package="kinematics_msgs"/>
  <depend package="geometry_msgs"/>
   <depend package="control_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="move_base_msgs"/>
  <depend package="arm_navigation_msgs"/>
  <depend package="cob_sound"/>

  <depend package="rostest"/>
  
  <rosdep name="python-pygraphviz"/>
 
  <export>
    <cpp cflags="-I${prefix}/msg/cpp"/>
  </export>
 
</package><package name="image_rotate" path="/stacks/image_pipeline/branches/image_pipeline-1.8/image_rotate" repo="image_pipeline" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Node to rotate an image stream.">
    <p>
      Contains a node that rotates an image stream in a way that minimizes
      the angle between a vector in some arbitrary frame and a vector in the
      camera frame. The frame of the outgoing image is published by the node.
    </p>
    <p>
      This node is intended to allow camera images to be visualized in an
      orientation that is more intuitive than the hardware-constrained
      orientation of the physical camera. This is particularly helpful, for
      example, to show images from the PR2's forearm cameras with a
      consistent up direction, despite the fact that the forearms need to
      rotate in arbitrary ways during manipulation.
    </p>
    <p>
      It is not recommended to use the output from this node for further
      computation, as it interpolates the source image, introduces black
      borders, and does not output a camera_info.
    </p>
  </description>
  <author>Blaise Gassend</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/image_rotate</url>

  <rosdep name="opencv2"/>
  <depend package="tf"/>
  <depend package="roscpp"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="geometry_msgs"/>
  <depend package="image_transport"/>
  <depend package="cv_bridge"/>
  <depend package="sensor_msgs"/>
  <depend package="std_msgs"/>
</package><package name="visual_pose_estimation" path="" repo="pr2_plugs" repo_host="https://kforge.ros.org/plugs/hg">
  <description brief="visual_pose_estimation">

     visual_pose_estimation

  </description>
  <author>Patrick Mihelich</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/visual_pose_estimation</url>

  <depend package="roscpp"/>
  <depend package="opencv2"/>
  <depend package="image_geometry"/>
  <depend package="tf"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lvisual_pose_estimation"/>
  </export>

</package><package name="sr_friction_compensation" path="" repo="sr_contrib" repo_host="lp:sr-contrib">
  <description brief="sr_friction_compensation">

     sr_friction_compensation computes the friction compensation map by slowly moving a joint
     through its range and measuring the necessary force. It is still highly experimental and
     can not be used as is.

  </description>
  <author>Ugo Cupcic</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sr_friction_compensation</url>
  <depend package="rospy"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="sr_robot_lib"/>

  <export>
	<python path="${prefix}/src/"/>
  </export>

</package><package name="potential_fields" path="" repo="uuisrc-ros-pkg" repo_host="https://github.com/cburbridge/uuisrc-ros-pkg">
  <description brief="potential_fields">

     potential_fields

  </description>
  <author>Lorenzo Riano</author>
  <license>GNU</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/potential_fields</url>
  <depend package="rospy"/>
  <depend package="std_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="tf"/>

</package><package name="hrl_hfa_2011" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="hrl_pr2_experiments">

     Human Factors and Aging / Healthcare Robotics Lab joint venture.

  </description>
  <author>Kelsey Hawkins</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hrl_pr2_experiments</url>
  <depend package="rospy"/>
  <!--<depend package="rfid_demos"/>-->
  <depend package="smach"/>
  <depend package="smach_ros"/>
  <depend package="hrl_trajectory_playback"/>
  <depend package="pr2_grasp_behaviors"/>
  <depend package="hai_sandbox"/>


</package><package name="zeroconf_comms" path="" repo="zeroconf_implementations" repo_host="https://github.com/stonier/zeroconf_implementations">
  <description brief="Message types for zeroconf publication and discovery">

     Since we have different zeroconf implementations, the zeroconf message types are
     gathered here.

  </description>
  <author>Daniel Stonier</author>
  <license>BSD</license>
  <review notes="" status="api cleared"/>
  <url>http://ros.org/wiki/zeroconf_comms</url>
  <depend package="std_msgs"/>

</package><package name="qp_spline_smoother" path="" repo="usc-clmc-ros-pkg" repo_host="https://github.com/usc-clmc/usc-clmc-ros-pkg">
  <description brief="qp_spline_smoother">

This trajectory filter fills in velocity and accelerations at intermediate
points by optimizing the total squared jerk, acceleration or velocity of the
entire trajectory using a quadratic programming technique. Suitable for
execution of trajectories generated by CHOMP/STOMP. (In fact, it may do weird
things if the points to be optimized are really far apart / not reasonably
optimized already).

  </description>
  <author>Mrinal Kalakrishnan</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/qp_spline_smoother</url>

  <depend package="quadprog"/>
  <depend package="spline_smoother"/>
  <depend package="filters"/>
  <depend package="arm_navigation_msgs"/>
  <depend package="rosbag"/>

  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lqp_spline_smoother"/>
    <filters plugin="${prefix}/default_plugins.xml"/>
  </export>

</package><package name="pr2_manipulation_controllers" path="/stacks/pr2_object_manipulation/branches/0.6-branch/manipulation/pr2_manipulation_controllers" repo="pr2_object_manipulation" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_manipulation_controllers">

     pr2_manipulation_controllers

  </description>
  <author>Kaijen Hsiao, Stu Glaser, Adam Leeper</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_manipulation_controllers</url>

  <depend package="pluginlib"/>
  <depend package="kdl"/>
  <depend package="tf"/>
  <depend package="geometry_msgs"/>
  <depend package="robot_mechanism_controllers"/>
  <depend package="std_srvs"/>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="rosrt"/>
  <depend package="angles"/>
  <depend package="tf_conversions"/>
  <depend package="std_msgs"/>
  <depend package="diagnostic_msgs"/>
  <depend package="object_manipulation_msgs"/>
  <depend package="pr2_controller_interface"/>
  <depend package="pr2_controller_manager"/>
  <depend package="kdl_parser"/>
  <depend package="pr2_mechanism_model"/>
  <depend package="control_toolbox"/>
  <depend package="realtime_tools"/>
  <depend package="eigen_conversions"/>
  <depend package="rosatomic"/> <!-- rosrt -->
  <depend package="allocators"/> <!-- rosrt -->
  <depend package="lockfree"/> <!-- rosrt -->
  <depend package="pr2_wrappers"/>
  <depend package="pr2_mechanism_controllers"/>

  <depend package="common_rosdeps"/>

  <export>
    <cpp cflags="`pkg-config --cflags eigen3` -I${prefix}/include -I${prefix}/srv/cpp -I${prefix}/msg/cpp" lflags="-Wl,-rpath,${prefix}/lib/ -L${prefix}/lib -lpr2_manipulation_controllers"/>
    <pr2_controller_interface plugin="${prefix}/controller_plugins.xml"/>
  </export>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
  <platform os="ubuntu" version="12.04"/>
</package><package name="bumblebee2" path="/trunk/bumblebee2" repo="cu-ros-pkg" repo_host="http://cu-ros-pkg.googlecode.com/svn">
  <description brief="bumblebee2">
     bumblebee2 package is based on camera1394 package.
     When bumblebee2.launch is run, left and right mono image which is formatted by sensor_msgs/image will be published. 
  </description>
  <author>Soonhac Hong</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://code.google.com/p/cu-ros-pkg/</url>
  <depend package="image_transport"/>
  <depend package="tf"/>
  <depend package="camera_info_manager"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="libdc1394v2"/>
</package><package name="openloop_object_manipulation" path="/trunk/stacks/aaai_lfd_demo/openloop_object_manipulation" repo="bosch-ros-pkg-e" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg-e/code">
  <description brief="openloop_object_manipulation">

     Open Loop Object Manipulation for Breakfast Objects

  </description>
  <author>Sarah Osentoski, Benjamin Pitzer (Maintained by Sarah Osentoski)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/openloop_object_manipulation</url>

  <depend package="rospy"/>
  <depend package="roscpp"/>

  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="kinematics_msgs"/>
  <depend package="motion_planning_msgs"/>
  <depend package="tf"/>
  
  <depend package="simple_robot_control"/>
  <depend package="rl_2dnav"/> 
</package><package name="pr2_navigation_controllers" path="/stacks/pr2_object_manipulation/branches/0.6-branch/navigation/pr2_navigation_controllers" repo="pr2_object_manipulation" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_navigation_controllers">

     pr2_navigation_controllers: Some base controllers pulled in from navigation_experimental so that we can use them for manipulation.

  </description>
  <author>Ported by Adam Leeper, originally by Eitan Marder-Eppstein</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_navigation_controllers</url>
  <depend package="roscpp"/>
  <depend package="pluginlib"/>
  <depend package="nav_core"/>
  <depend package="base_local_planner"/>
  <depend package="costmap_2d"/>
  <depend package="tf"/>
  <depend package="nav_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lgoal_passer -lpose_follower"/>
    <nav_core plugin="${prefix}/planner_plugins.xml"/>
  </export>

</package><package name="parallax_eddie_robot" path="" repo="haikalpribadi-ros-pkg" repo_host="https://github.com/haikalpribadi/haikalpribadi-ros-pkg">
  <description brief="Driver for Parallax Eddie Robot">

     ROS bindings for Parallax Eddie robot.
     
     This is a generic driver for Parallax Eddie Robot 
     ( http://www.parallax.com/eddie ). The package publishes sensor data on 
     several topics, as well as providing services to call functions to the 
     serial board. The package also includes a controller to navigate the robot
     with linear/angular velocity. At the moment, this package is considered a 
     beta release. Development is still in progress.

  </description>
  <author>Haikal Pribadi (haikal.pribadi@gmail.com)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/parallax_eddie_robot</url>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
</package><package name="hector_pose_estimation" path="/trunk/hector_localization/hector_pose_estimation" repo="hector_localization" repo_host="https://tu-darmstadt-ros-pkg.googlecode.com/svn">
  <description brief="hector_pose_estimation">

     hector_pose_estimation provides the hector_pose_estimation node and the hector_pose_estimation nodelet.

  </description>
  <author>Johannes Meyer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hector_pose_estimation</url>

  <depend package="hector_pose_estimation_core"/>
  <depend package="nodelet"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>
  <!-- depend package="mav_msgs" /-->
  <depend package="tf"/>

  <depend package="message_filters"/>

  <export>
    <nodelet plugin="${prefix}/hector_pose_estimation_plugins.xml"/>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib"/>
  </export>
</package><package name="rtmbuild" path="/trunk/rtmros_common/rtmbuild" repo="rtm-ros-robotics/rtmros_common" repo_host="https://rtm-ros-robotics.googlecode.com/svn">
  <description brief="rtmbuild">

     rtmbuild

  </description>
  <author>Build scripts for OpenRTM and OpenHRP, Kei Okada</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rtmbuild</url>

  <depend package="std_msgs"/>

  <rosdep name="omniorb"/>

</package><package name="octreelib" path="/trunk/stacks/ais_bonn_pcl_addons/octreelib" repo="ais-bonn-ros-pkg" repo_host="http://ais-bonn-ros-pkg.googlecode.com/svn">
  <description brief="octreelib">

     The octreelib contains an octree implementation that is templated for coordinate and value type. 
     It features fast sampling and value aggregation on many resolutions in parallel.
     The implementation is specifically suited for fast volume queries of integral or extremum values.

  </description>
  <author>Joerg Stueckler</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/octreelib</url>
  <depend package="roscpp"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="sensor_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="eigen"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="nodelet"/>
  <depend package="terminal_tools"/>
  
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/src -I${prefix}/cfg/cpp" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib"/>
    <nodelet plugin="${prefix}/nodelet_plugins.xml"/>
  </export>
  
</package><package name="qt_gui_app" path="" repo="qt_gui_core" repo_host="https://kforge.ros.org/visualization/qt_gui_core">
  <description brief="Integrated graphical user interface">
    qt_gui_app provides the main to start an instance of the integrated graphical user interface provided by qt_gui.
  </description>
  <author>Dirk Thomas</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/qt_gui_app</url>

  <depend package="qt_gui"/>
</package><package name="interactivespaces-workbench" path="" repo="interactive-spaces" repo_host="https://code.google.com/p/interactive-spaces">
  <description brief=".workbench">
The workbench for developing Interactive Spaces applications.
  </description>
  <author>
  Keith Hughes/khughes@google.com
  </author>
  <license>Apache 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://rosjava.googlecode.com/</url>

  <rosdep name="java"/>
</package><package name="cob_sick_s300" path="" repo="cob_driver" repo_host="git://github.com/ipa320/cob_driver">
  <description brief="cob_sick_s300">

     This package published a laser scan message out of a Sick S300 laser scanner.

  </description>
  <author>Florian Weisshardt</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_sick_s300</url>
  
  <depend package="roscpp"/>
  <depend package="rostest"/>
  <depend package="sensor_msgs"/>
  <depend package="message_filters"/>
  <depend package="diagnostic_msgs"/>
  <depend package="tf"/>
  <depend package="laser_geometry"/>

</package><package name="eros_gdbserver" path="/trunk/packages/utilities/eros_gdbserver" repo="eros" repo_host="https://code.ros.org/svn/eros">
  <description brief="Build recipe for cross-compiling gdb/gdbserver">

	This provides a source package for cross-compiling a gdb/gdbserver combo.
	
	This pair of tools allows you to do remote debugging without having
	to run the debugger itself (nor libs with debugging symbols) on the
	target. Very useful for embedded boards with limited memory or oomph.

  </description>
  <author>Daniel Stonier (d.stonier@gmail.com)</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/eros_gdbserver</url>
  <depend package="eros_license"/>
  <depend package="eros_build"/>
</package><package name="cart_pushing_executive" path="/stacks/cart_pushing/trunk/cart_pushing_executive" repo="cart_pushing" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="cart_planner_executive">

     cart_planner_executive

  </description>
  <author>Jonathan Scholz</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cart_planner_executive</url>
  <depend package="move_base"/>
  <depend package="map_server"/>
  <depend package="topic_tools"/>
  <depend package="sbpl_cart_planner"/>
  <depend package="cart_local_planner"/>
  <depend package="tf"/>
  <depend package="cart_pushing_msgs"/>
  <depend package="cart_state_estimator"/>
  <depend package="articulate_cart"/>
  <depend package="amcl"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="actionlib"/>
  <depend package="move_base_msgs"/>
  <depend package="pr2_gripper_action"/>
  <depend package="pr2_machine"/>
  <depend package="pr2_navigation_global"/>
  <depend package="pr2_navigation_perception"/>
  <depend package="pr2_pose_saver"/>
  <depend package="laser_filters"/>
  <depend package="twist_recovery"/>
  <depend package="isolated_point_filter"/>

</package><package name="gbbopen" path="/trunk/arrg/ua_cognition/gbbopen" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="The GBBopen Blackboard System">

     gbbopen

    </description>
    <author>Daniel Hewlett</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/gbbopen</url>

    <depend package="roslisp"/>
    <depend package="roslisp_runtime"/>
</package><package name="jsk_semantic_maps" path="/trunk/jsk_semantic_maps" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="jsk_semantic_maps">

    Semantic maps of different rooms at the JSK lab at the University of Tokyo.

  </description>
  <author>Lars Kunze</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/jsk_semantic_maps</url>
  <depend package="ias_knowledge_base"/>
  <depend package="comp_spatial"/>
  <depend package="comp_temporal"/>
  <depend package="mod_vis"/>
  <depend package="comp_semantic_map"/>
  <depend package="knowrob_omics"/>
  <depend package="json_prolog"/>

</package><package name="PressureSensor_msgs" path="/darpa_arm_msgs/PressureSensor_msgs" repo="darpa_arm_msgs" repo_host="http://svn.thearmrobot.com">
  <description brief="PressureSensor_msgs">

     PressureSensor_msgs

  </description>
  <author>DARPA ARM GFE Team</author>
  <license>GPL</license>

  <depend package="roscpp"/>

  <export>
    <cpp cflags="-I${prefix}/msg/cpp"/>
  </export>


</package><package name="pr2_bringup_gazebo_demo" path="/stacks/wg_robots_gazebo/trunk/pr2_bringup_gazebo_demo" repo="wg_robots_gazebo" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_bringup_gazebo_demo">
    This package contains a simulator-based demo of the PR2 robot executing its calibration sequence. During this sequence, all the joints move in order to trigger the optical flags that define the reference position of the joint.
  </description>
  <author>Wim Meeussen</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_bringup_gazebo_demo</url>

  <depend package="pr2_gazebo"/>  
  <depend package="pr2_bringup"/>
  <depend package="pr2_mechanism_model"/>
  <depend package="std_msgs"/>
  <depend package="xacro"/>
  <depend package="pr2_description"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -lpr2_bringup_gazebo_demo -Wl,-rpath,${prefix}/lib"/>
    <pr2_mechanism_model plugin="${prefix}/transmission_plugins.xml"/>
  </export>

</package><package name="camera_calibration" path="/stacks/image_pipeline/branches/image_pipeline-1.8/camera_calibration" repo="image_pipeline" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="camera_calibration">

     camera_calibration allows easy calibration of monocular or stereo
     cameras using a checkerboard calibration target.

  </description>
  <author>James Bowman, Patrick Mihelich</author>
  <license>BSD</license>
  <review notes="Jan 18, 2010" status="Doc reviewed"/>
  <url>http://www.ros.org/wiki/camera_calibration</url>
  <rosdep name="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="image_geometry"/>
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  <depend package="std_srvs"/>
  <depend package="sensor_msgs"/>
  <depend package="message_filters"/>
  <depend package="camera_calibration_parsers"/>
  <depend package="rospy"/>

  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="pose_graph" path="/stacks/graph_mapping/branches/unstable-branch/pose_graph" repo="graph_mapping" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="pose_graph">
The pose_graph and associated data structures.
  </description>
  <author>Bhaskara Marthi</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pose_graph</url>
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="tf"/>
  <depend package="eigen3"/>
  <depend package="visualization_msgs"/>
  <depend package="sba"/>
  <depend package="laser_geometry"/>
  <depend package="occupancy_grid_utils"/>
  <depend package="rosbag"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lpose_graph"/>
  </export>

</package><package name="move_arm" path="" repo="arm_navigation" repo_host="https://kforge.ros.org/armnavigation/armnavigation">
  <description brief="A general arm planning and control interface">

The move_arm package provides an implementation of a action (see the <a href="http://www.ros.org/wiki/actionlib">actionlib</a> package) that, given a goal in the world, will attempt to reach it with a robot arm. The move_arm node links together a planner, trajectory monitor and trajectory controller to acheive its goal. It supports any planner that provides a GetMotionPlan interface and any controller that provides services for setting, querying and canceling trajectories. The node is designed to be modular and so uses ROS services for planning, control and IK and does minimal computation within the node itself. 

  </description>
  <author>Ioan Sucan, Sachin Chitta(sachinc@willowgarage.com)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/move_arm</url>

  <depend package="roscpp"/>
  <depend package="rosconsole"/>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="geometric_shapes"/>
  <depend package="planning_models"/>
  <depend package="planning_environment"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="tf_conversions"/>
  <depend package="control_msgs"/>
  <depend package="trajectory_msgs"/>
  <depend package="kinematics_msgs"/>
  <depend package="arm_navigation_msgs"/>
  <depend package="interactive_markers"/>

  <export>
    <cpp cflags="-I${prefix}/msg/cpp -I${prefix}/include"/>
  </export>  
  
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="collvoid_local_planner" path="" repo="multi_robot_collision_avoidance" repo_host="https://kforge.ros.org/collvoid/collvoid">
  <description brief="collvoid_local_planner">



  </description>
  <author>Daniel Claes</author>
  <license>BSD, proprietary license (RVO2)</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/collvoid_local_planner</url>
  <depend package="roscpp"/>
  <depend package="collvoid_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="laser_geometry"/>
  <depend package="tf"/>
  <depend package="angles"/>
  <depend package="base_local_planner"/>
  <depend package="pluginlib"/>
  <depend package="nav_core"/>
  <depend package="actionlib"/>
  <depend package="move_base_msgs"/>
  <depend package="std_srvs"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="amcl"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lcollvoid_local_planner"/>
    <nav_core plugin="${prefix}/blp_plugin.xml"/>
  </export>


</package><package name="comp_objclusters" path="/knowledge/comp_objclusters" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="comp_objclusters">

     comp_objclusters

     Methods for inferring the most likely object class a point cluster
     belongs to.

     Input:  a list of lo IDs and the identifier of the desired object class
     Output: the list of lo IDs, ordered by the probability that the resp. cluster
             belongs to the desired object class

  </description>
  <author>Moritz Tenorth</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ias.in.tum.de/kb/wiki/index.php/comp_objclusters</url>

  <depend package="comp_ros"/>
  <depend package="comp_spatial"/>
</package><package name="tabletop_actions" path="" repo="uuisrc-pr2-pkgs" repo_host="https://github.com/uu-isrc-robotics/uu-isrc-robotics-pr2-pkgs">
  <description brief="tabletop_actions">

     A set of actions to push, topple or otherwise interact with objects detected using the tabletop nodes.

  </description>
  <author>Lorenzo Riano</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/tabletop_actions</url>
  <depend package="actionlib"/>
  <depend package="object_manipulation_msgs"/>
  <depend package="tabletop_object_detector"/>
  <depend package="tabletop_collision_map_processing"/>
  <depend package="rospy"/>
  <depend package="roslib"/>
  <depend package="visualization_msgs"/>
  <depend package="pr2_control_utilities"/>
  <depend package="arm_navigation_msgs"/>

</package><package name="youbot_teleop" path="" repo="euRobotics_orocos_ws" repo_host="https://github.com/bellenss/euRobotics_orocos_ws">
  <description brief="youbot_teleop">

     youbot_teleop

  </description>
  <author>Peter Soetens</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/youbot_teleop</url>
  <depend package="joy"/>
  <depend package="geometry_msgs"/>
</package><package name="mantis_config" path="/trunk/mantis/mantis_config" repo="swri-ros-pkg" repo_host="http://swri-ros-pkg.googlecode.com/svn">
  <description brief="mantis_config">

     mantis_config

  </description>
  <author>Jnicho</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/mantis_config</url>
  <depend package="sensor_msgs"/>
  <depend package="pcl"/>
  <depend package="tf"/>
  <depend package="urdf"/>

</package><package name="wbc_pr2_ctrl" path="" repo="whole_body_control" repo_host="https://github.com/poftwaresatent/whole_body_control">
  <description brief="PR2 controller plugin for Stanford_WBC.">
    This package contains an adaptation of the Stanford Whole-Body
    Control Framework (WBC) for PR2. It relies mainly on the
    joint-space dynamic model which is part of WBC. There is a &quot;pump&quot;
    controller plugin which sends robot state from real-time to
    user-space and the torque commands back from user-space into the
    real-time controller. For simpler WBC operations, it would
    (probably) be possible to run the entire WBC servo within the
    plugin, but tests in late 2009 (which were based on a very
    complete set of WBC functionality) failed in this respect because
    they were too slow to fit within the 1kHz RT control loop on PR2.
  </description>
  <author>Roland Philippsen</author>
  <license>LGPLv3</license>
  <review notes="" status="unreviewed"/>
  <url>http://stanford-wbc.sourceforge.net/</url>
  <depend package="wbc_core"/>
  <depend package="wbc_urdf"/>
  <depend package="wbc_msgs"/>
  <depend package="wbc_uta_opspace"/>
  <depend package="rosconsole"/>
  <depend package="pr2_controller_interface"/>
  <depend package="pluginlib"/>
  <depend package="sensor_msgs"/>
  <export>
    <pr2_controller_interface plugin="${prefix}/config/controller_plugins.xml"/>
    <!--
       lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lwbc_pr2_ctrl"
      -->
    <cpp cflags="-I${prefix}/include"/>
  </export>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="flyer_common" path="" repo="starmac-ros-pkg" repo_host="https://bitbucket.org/bouffard/starmac-ros-pkg">
  <description brief="flyer_common">

     Libraries and scripts specific to starmac_flyer. Launch files.

  </description>
  <author>Patrick Bouffard</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/flyer_common</url>
  <depend package="tf"/>
  <depend package="rospy"/>
  <depend package="visualization_msgs"/>
  <!--depend package="starmac_roshlib"/-->
  <!-- depend package="rosh"/ -->

</package><package name="webots_joystick" path="/webots/webots_joystick" repo="webots-ros-pkg" repo_host="http://webots-ros-pkg.svn.sourceforge.net/svnroot/webots-ros-pkg">
  <description brief="Webots ROS joystick interface">
    This sample ROS node is actually a Webots robot controller that launches the
    ROS joy node and subscribes to its 'joy' topic to read the input from a
    joystick. This input is used to drive a simulated robot in Webots.

    It is a good starting point to implement an interface between Webots and ROS
    for controlling simulated robots in Webots from ROS nodes.
  </description>
  <author>Andreas Breitenmoser</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/webots_joystick</url>
  <rosdep name="webots"/>
  <depend package="roscpp"/>
  <depend package="joy"/>
</package><package name="kdl_lua" path="" repo="rtt_geometry" repo_host="http://git.mech.kuleuven.be/robotics/rtt_geometry.git">
  <description brief="kdl_lua">

     kdl_lua, contains the kdl pretty printing lua module kdlpp.lua

  </description>
  <author>Nick Vanthienen, Markus Klotzbucher, first.last@mech.kuleuven.be</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.orocos.org/wiki/orocos/toolchain/orocostoolchainluacookbook#toc52</url>
  
  <depend package="ocl"/>
  <depend package="kdl_typekit"/>
  <depend package="kdl_conversions"/>

</package><package name="openhrp_msgs" path="" repo="stacks/simulator_openhrp" repo_host="git://github.com/laas/simulator_openhrp">
  <description brief="openhrp_msgs">

     openhrp_msgs

  </description>
  <author>Thomas Moulard</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/openhrp_msgs</url>

  <depend package="geometry_msgs"/>
</package><package name="hogman_minimal" path="/trunk/freiburg_tools/hogman_minimal" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="hogman">
	Wrapper package for HOGMAN (hierarchical graph optimization), only minimal set of files
  </description>
  <author>Maintained by Juergen Sturm</author>
  <license>BSD (hogman wrapper), GPL (hogman itself)</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hogman_minimal</url>
  <depend package="roscpp"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -lhogman_csparse.so -lhogman_graph_optimizer_hogman.so -lhogman_graph_optimizer.so -lhogman_graph.so -lhogman_stuff.so -Wl,-rpath,${prefix}/lib"/>
  </export>


</package><package name="bosch_semantic_map" path="/tags/latest/bosch_semantic_map" repo="knowrob" repo_host="http://code.in.tum.de/pubsvn/knowrob">
  <description brief="ias_semantic_map">

    Semantic maps of different kitchens at Bosch RTC Palo Alto, created from 3D laser scans,
    represented as OWL file, plus additional predicates for manipulating the map and reasoning on it.

  </description>
  <author>Lars Kunze, Lorenz Moesenlechner, Moritz Tenorth, Dejan Pangercic</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.ros.org/wiki/bosch_semantic_map</url>
  <depend package="comp_spatial"/>
  <depend package="json_prolog"/>
  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>
</package><package name="rosmatlab" path="" repo="rosmatlab" repo_host="https://github.com/tu-darmstadt-ros-pkg/rosmatlab">
  <description brief="rosmatlab">

     rosmatlab

  </description>
  <author>Johannes Meyer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosmatlab</url>

  <!-- depend package="roslang"/ -->
  <depend package="roscpp"/>
  <depend package="cpp_introspection"/>
  <depend package="rosbuild"/>

  <export>
    <cpp cflags="-I${prefix}/include"/>
    <roslang cmake="${prefix}/build/cmake/rosmatlab/rosmatlab.cmake"/>
    <rosmatlab path="${prefix}/matlab"/>
    <rosbuild cmake_directory="${prefix}/cmake"/>
  </export>

</package><package name="visualization_marker_tutorials" path="/stacks/visualization_tutorials/branches/visualization_tutorials-0.6/visualization_marker_tutorials" repo="visualization_tutorials" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="marker_tutorials">

     marker_tutorials

  </description>
  <author>Josh Faust</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/marker_tutorials</url>
  <depend package="roscpp"/>
  <depend package="visualization_msgs"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="stanford_parser_ros" path="" repo="roboframenet" repo_host="https://kforge.ros.org/appmanandroid/roboframenet">
  <description brief="stanford_parser_ros">
    stanford_parser_ros wraps the parse tree and dependency functionality of the Stanford Parser and Stanford Dependencies Parser (with parse tree and dependencies outputs) for ROS.  It receives a string (a command sentence) and returns a Parse, which consists of a flattened parse tree and a list of dependencies (such as direct object, indirect object, etc.).
  </description>
  <author>Brian Thomas</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/stanford_parser_ros</url>
  <depend package="stanford_parser"/>
  <depend package="stanford_parser_msgs"/>
  <depend package="apache_commons_util"/>
  <depend package="apache_xmlrpc"/>
  <depend package="rosjava"/>
  <export>
    <rosjava-src location="src"/>
    <rosjava-pathelement location="dist/stanford-parser-ros.jar"/>
  </export>

</package><package name="pluginlib_tutorials" path="/stacks/common_tutorials/trunk/pluginlib_tutorials" repo="common_tutorials" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="pluginlib_tutorials">

     pluginlib_tutorials

  </description>
  <author>Eitan Marder-Eppstein</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pluginlib_tutorials</url>
  <depend package="pluginlib"/>
  <depend package="roscpp"/>

  <export>
    <pluginlib_tutorials plugin="${prefix}/polygon_plugins.xml"/>
  </export>

</package><package name="sbpl" path="/stacks/motion_planners/trunk/sbpl" repo="motion_planners" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="Search-based Planning Library (SBPL)">
    A library of search-based planning algorithms

  </description>
  <author>Maxim Likhachev/maximl@seas.upenn.edu</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sbpl</url>
  <depend package="roscpp"/>

  <export>
    <cpp cflags="-I${prefix}/src -O3 -DROS" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lsbpl"/>
  </export>
  
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="wam_srvs" path="/trunk/wam_common/wam_srvs" repo="barrett-ros-pkg" repo_host="http://web.barrett.com/svn/barrett-ros-pkg">
  <description brief="wam_srvs">

     This Package contains WAM / BarrettHand specific service definitions.

  </description>
  <author>Barrett Technology Inc., Kyle Maroney</author>
  <license>BSD</license>
  <url>http://ros.org/wiki/wam_srvs</url>
  <depend package="geometry_msgs"/>
</package><package name="tuck_arms_server" path="/trunk/pr2_elevator/tuck_arms_server" repo="ubc-ros-pkg" repo_host="https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg">
  <description brief="tuck_arms_server">

     tuck_arms_server

  </description>
  <author>ankur</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/tuck_arms_server</url>
  <depend package="pr2_tuck_arms_action"/>
  <depend package="rospy"/> 
  <depend package="pr2_common_action_msgs"/>
</package><package name="ias_drawer_executive" path="/highlevel/ias_drawer_executive" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="ias_drawer_executive">

     ias_drawer_executive
     opens drawers in the ias kitchen.
     the robot is driven to a hardcoded location that is know for each drawer.
     the right hand goes to a hardcoded joint state so that we see the ar toolkit marker on the drawer handle in the forearm camera.
     ik is then used to grasp at the marker, and the drawer is opened with some trajectory exploration, following the line of least resistance so to say.

  </description>
  <author>Thomas Ruehr</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ias_drawer_executive</url>
  <depend package="articulation_pr2"/>
  <!--depend package="articulation_pr2_msgs"/-->
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <!--depend package="ar_pose"/-->
  <depend package="kinematics_msgs"/>
  <depend package="pr2_arm_move_ik"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="tf"/>
  <depend package="pr2_msgs"/>
  <depend package="move_base_msgs"/>
  <depend package="joint_trajectory_action"/>
  <depend package="geometry_msgs"/>
  <depend package="kinematics_msgs"/>
  <depend package="std_srvs"/>
  <depend package="pr2_gripper_sensor_msgs"/>
<depend package="visualization_msgs"/>

  <!-- for listening to clouds from handle detector -->
  <depend package="pcl"/>
  <!-- for projecting laser and not driving into obstacles-->
  <depend package="laser_geometry"/>

  <depend package="object_manipulation_msgs"/>

  <!-- <depend package="pcl_cloud_tools"/> -->
  <depend package="pr2_gripper_sensor_msgs"/>

  <!-- for SnapMapICP

  <depend package="nav_msgs"/>

  <depend package="point_cloud_converter"/>

   -->

  <!-- for cop plate detection -->
  <depend package="cop_client_cpp"/>

  <depend package="ias_table_msgs"/>

  <!-- needed for localization (make will produce pgm's from png's) -->
  <depend package="ias_maps"/>

  <depend package="find_base_pose"/>

  <depend package="pcl_ros"/>

  <export>
    <cpp cflags="-I${prefix}/include/" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lias_drawer_executive_library"/>
  </export>

</package><package name="rtcus_stamp" path="/trunk/rtcus_mobile_robots/rtcus_stamp" repo="rtc-us-ros-pkg-trunk" repo_host="https://rtc-us-ros-pkg.svn.sourceforge.net/svnroot/rtc-us-ros-pkg">
  <description brief="rtcus_stamp">

     rtcus_stamp

  </description>
  <author>Pablo Iñigo Blasco</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rtcus_stamp</url>
  <depend package="roscpp"/>
  
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/cfg/cpp" lflags="-L${prefix}/lib"/>
  </export>

</package><package name="polonius_msgs" path="/branches/stable/polonius/polonius_msgs" repo="wu-ros-pkg" repo_host="https://wu-robotics.googlecode.com/svn">
  <description brief="Polonius Message Definitions">
    Messages for the Polonius Interface
  </description>
  <author>David V. Lu!!</author>
  <license>BSD</license>
  <url>http://ros.org/wiki/polonius_msgs</url>
</package><package name="testExportPython" path="/branches/testExportPython" repo="rtc-us-ros-pkg-branches" repo_host="https://rtc-us-ros-pkg.svn.sourceforge.net/svnroot/rtc-us-ros-pkg">
  <description brief="testExportPython">

     testExportPython

  </description>
  <depends package="rospy"/>
  <export>
  	<python path="${prefix}/scripts/"/>
  	<python path="${prefix}/src/"/>
  </export>
  <author>Pablo Iñigo Blasco</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/testExportPython</url>

</package><package name="rosh_visualization" path="/stacks/rosh_desktop_plugins/trunk/rosh_visualization" repo="rosh_desktop_plugins" repo_host="https://code.ros.org/svn/ros">
  <description brief="rosh visualization stack plugin">

     ROSH plugin for the visualization stack.

  </description>
  <author>Ken Conley</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosh_visualization</url>

  <depend package="roslib"/>
  <depend package="rosh"/>
  <depend package="rviz"/>

</package><package name="conversions" path="" repo="usc-clmc-ros-pkg" repo_host="https://github.com/usc-clmc/usc-clmc-ros-pkg">
  <description brief="conversions">

     conversions

  </description>
  <author>Mrinal Kalakrishnan</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/conversions</url>

  <depend package="kdl"/>
  <depend package="geometry_msgs"/>
  <depend package="tf"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib"/>
  </export>

</package><package name="triangle_mesh_msgs" path="" repo="ias_common" repo_host="http://code.in.tum.de/git/ias-common.git">
  <description brief="triangle_mesh_msgs">
     Messages for Triangle Meshes
  </description>
  <author name="Nico Blodow"/>
  <license>BSD</license>

  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>

</package><package name="sr_smach_example" path="" repo="sr_demo" repo_host="lp:sr-demo">
  <description brief="sr_smach_example">

     sr_smach_example is a package using SMACH: http://www.ros.org/wiki/smach to control the Shadow
     Robot Hand and Arm for a demo.

  </description>
  <author>Ugo Cupcic</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sr_smach_example</url>
  <depend package="sr_robot_msgs"/>
  <depend package="rospy"/>
  <depend package="smach"/>
  <depend package="smach_ros"/>

</package><package name="estimate_grasp_positions" path="/trunk/student_projects/chair_grasping/estimate_grasp_positions" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="grasp_Positions">

     Estimation of the grasp_Positions for the PR2
     by reducing the pointcloud with the PassThrough filter.

  </description>
  <author>Jan Metzger</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/estimate_grasp_positions</url>
  <depend package="std_msgs"/>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="visualization_msgs"/>
</package><package name="walk_interfaces" path="" repo="stacks/humanoid_walk" repo_host="git://github.com/laas/humanoid_walk">
  <description brief="Humanoids Walking C++ Interface">

    C++ Interfaces used to generated humanoid robots walking
    movements.

    Provides the definition of the following structures:
    <ul>
      <li>footprints (2d, 3d),</li>
      <li>trajectories (2d, 3d),</li>
      <li>2d points, 3d points, 2d frames, 3d frames as homogeneous
	matrices,</li>
      <li>pattern generator (2d, 3d): an algorithm which produces
      feet, ZMP and center of mass trajectories from a stack of time
      parametrized footprints.</li>
    </ul>

    It also defines how of to store walking trajectories using the
    YAML format.

  </description>
  <author>Thomas Moulard/thomas.moulard@gmail.com, Antonio El Khoury</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/walk_interfaces</url>

  <export>
    <cpp cflags="`pkg-config --cflags eigen3` `rosboost-cfg --cflags` -DBOOST_FILESYSTEM_VERSION=2 -I${prefix}/include" lflags="`rosboost-cfg --lflags filesystem` `rosboost-cfg --lflags date_time` -lyaml-cpp"/>
  </export>

  <depend package="common_rosdeps"/>
  <rosdep name="boost"/>
  <rosdep name="eigen"/>
  <rosdep name="yaml-cpp"/>

</package><package name="string_transport" path="" repo="ethzasl_message_transport" repo_host="https://github.com/ethz-asl/ros-message-transport">
  <description brief="string_transport">

     string_transport

  </description>
  <author>Cedric Pradalier</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/string_transport</url>
  <depend package="pluginlib"/>
  <depend package="message_transport_common"/>
  <depend package="templated_transports"/>
  <depend package="std_msgs"/>


  <export>
      <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lstring_transport"/>
      <string_transport plugin="${prefix}/default_plugins.xml"/>
  </export>



</package><package name="rosie_arm_kinematics" path="/arm_navigation/rosie_arm_navigation/rosie_arm_kinematics" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="rosie_arm_kinematics">

     rosie_arm_kinematics

  </description>
  <author>Alexis Maldonado</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosie_arm_kinematics</url>
  <depend package="ias_arm_kinematics"/>
</package><package name="simon_says" path="/trunk/turn_taking/simon_says" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="simon_says">

     simon_says

  </description>
  <author>David Feil-Seifer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/simon_says</url>
  <depend package="pose_action"/>
  <depend package="pose_model"/>
	<depend package="wait_for_response_action"/>
	<depend package="smach_ros"/>

  <export>
    <cpp cflags="-I${prefix}/srv/cpp -I${prefix}/msg/cpp"/>
  </export>

  <rosdep name="python-yaml"/>

</package><package name="visp_tracker" path="" repo="stacks/vision_visp" repo_host="git://github.com/laas/vision_visp">
  <description brief="Online object tracker relying on visual servoing.">

    visp_tracker wraps the ViSP moving edge tracker provided by the
    ViSP visual servoing library into a ROS package.

    This computer vision algorithm computes the pose (i.e. position and
    orientation) of an object in an image. It is fast enough to allow
    object online tracking using a camera.

  </description>
  <author>Thomas Moulard/thomas.moulard@gmail.com</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/visp_tracker</url>

  <versioncontrol type="git" url="git://github.com/laas/visp_tracker.git"/>

  <export>
    <rosdoc config="rosdoc.yaml"/>
    <nodelet plugin="${prefix}/nodelet_plugins.xml"/>
  </export>

  <rosdep name="boost"/>

  <depend package="std_msgs"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="sensor_msgs"/>
  <depend package="image_proc"/>
  <depend package="image_transport"/>
  <depend package="geometry_msgs"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="tf"/>
  <depend package="opencv2"/>
  <depend package="bullet"/>
  <depend package="visp"/>
  <depend package="resource_retriever"/>
  <depend package="nodelet"/>

  <depend package="rosbag"/> <!-- For tutorial/testing -->
</package><package name="sixDof_pff" path="" repo="itasc_tasks" repo_host="http://git.mech.kuleuven.be/robotics/itasc_tasks.git">
    <description brief="iTaSC sixDof_pff Component package">
        This package contains the sixDof_pff task
        Part of the iTaSC-Skill framework, itasc_tasks
    </description>
    <license>LGPL/BSD</license>
    <author>Dominick Vanthienen</author>
    <url>http://www.orocos.org/itasc</url>
    <depend package="rtt"/>
    <rosdep name="eigen"/>
    <depend package="ocl"/>  
    <depend package="orocos_kdl"/>  
    <depend package="kdl_typekit"/>
    <depend package="itasc_core"/>
</package><package name="rind" path="" repo="iheart-ros-pkg" repo_host="git://github.com/IHeartRobotics/iheart-ros-pkg">
	<description brief="rind">Robot/ROS Status Indicator</description>
  <author>I Heart Robotics</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rind</url>
  <depend package="roslib"/>
  <depend package="rosgraph"/>
  <depend package="rosmsg"/>
  <depend package="rospy"/>
  <depend package="rosrecord"/>
</package><package name="rve_msgs" path="" repo="visualization_engine" repo_host="https://kforge.ros.org/visengine/hg">
  <description brief="rve_msgs">

     rve_msgs

  </description>
  <author>Josh Faust</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rve_msgs</url>
  <depend package="geometry_msgs"/>
  <depend package="std_msgs"/>
  <depend package="roscpp"/>

  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>
</package><package name="wubble_navigation_global" path="/trunk/arrg/wubble_navigation/wubble_navigation_global" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="XML files for running global navigation assuming a static map on a Wubble robot.">
        This package holds XML files for running the <a href="http://www.ros.org/wiki/move_base">move_base</a> node on a Wubble robot. The <a href="http://www.ros.org/wiki/move_base">move_base</a> node is configured to run over a pre-specified static map.
    </description>
    <author>Antons Rebguns</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/wubble_navigation_global</url>
    
    <depend package="move_base"/>
    <depend package="amcl"/>
    <depend package="wubble_navigation_config"/>
</package><package name="roswiki_node" path="/branches/stable/wu_ros_tools/roswiki_node" repo="wu-ros-pkg" repo_host="https://wu-robotics.googlecode.com/svn">
  <description brief="Tool for generating ROS Wiki documentation">
    Creates CS/NodeAPI clearsilver documentation from source code files. Typical usage: rosrun roswiki_node roswiki src/*
  </description>
  <author>David V. Lu!!</author>
  <license>BSD</license>
  <url>http://ros.org/wiki/roswiki_node</url>
  <depend package="rospy"/>

</package><package name="depth_viewer" path="/trunk/rgbd_tools/depth_viewer" repo="vanadium-ros-pkg" repo_host="http://vanadium-ros-pkg.googlecode.com/svn">
  <description brief="A simple viewer for depth images generated by OpenNI devices."/>
  <author>Michael Ferguson</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/depth_viewer</url>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="cv_bridge"/>
</package><package name="rtcus_skeleton_running_interpreter" path="/branches/rtcus_skeleton_running_interpreter" repo="rtc-us-ros-pkg-branches" repo_host="https://rtc-us-ros-pkg.svn.sourceforge.net/svnroot/rtc-us-ros-pkg">
  <description brief="rtcus_skeleton_running_interpreter">

     rtcus_skeleton_running_interpreter

  </description>
  <author>Pablo Iñigo Blasco</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rtcus_skeleton_running_interpreter</url>
  <depend package="kdl"/>
  <depend package="rospy"/>
  <depend package="rtcus_kinect_skeleton_tracker"/>

</package><package name="pmad" path="/trunk/pmad" repo="ajh-ros-pkg" repo_host="https://ajh-ros-pkg.svn.sourceforge.net/svnroot/ajh-ros-pkg">
  <description brief="Access analog inputs and digital outputs on the Arduino.">

     The PMAD (power management and distribution) node provides access
     to digital outputs and analog inputs on an Arduino.

  </description>
  <author>Andrew Harris</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pmad</url>
  <depend package="std_msgs"/>
  <depend package="rospy"/>
  <depend package="roscpp"/>

</package><package name="pr2_base_recovery" path="" repo="continuous_ops" repo_host="https://kforge.ros.org/contops/hg">
  <description brief="pr2_base_recovery">

     pr2_base_recovery

  </description>
  <author/>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_base_recovery</url>

  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="rospy"/>
  <depend package="kdl"/>
  <depend package="pr2_mechanism_controllers"/>

</package><package name="oro_ros" path="/knowledge/oro/oro_ros" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description>ROS connector for ORO server</description>
  <author>Séverin Lemaignan</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/oro_ros</url>
  <depend package="oro_server"/>
  <depend package="oro_ontology"/>
  <depend package="rospy"/>
  <depend package="std_msgs"/>

</package><package name="eros_zlib" path="/trunk/packages/other/eros_zlib" repo="eros" repo_host="https://code.ros.org/svn/eros">
  <description brief="Build recipe for cross-compiling zlib">

	This provides a source package for compiling zlib (needed by boost).
	
	Ordinarily this is not useful as you would install via your system's
	installation method (e.g. apt-get for ubuntu), but for cross-compiling 
    it provides the recipe needed to make a toolchain ros-ready.

  </description>
  <author>Daniel Stonier (d.stonier@gmail.com)</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/eros_zlib</url>
  <depend package="eros_license"/>
  <depend package="eros_build"/>
</package><package name="ur5_description" path="" repo="universal_robot" repo_host="https://kforge.ros.org/ros_industrial/universal_robot">
  <description brief="ur5_description">

     Universal robot UR5 description

  </description>
  <author>wim</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ur5_description</url>
  <depend package="urdf"/>

</package><package name="uos_maps" path="" repo="kurt_apps" repo_host="http://kos.informatik.uni-osnabrueck.de/kurt_apps.git">
  <description brief="Navigation maps for the AVZ building of the University of Osnabrück.">

     Navigation maps for the AVZ building of the University of Osnabrück.

  </description>
  <author>Martin Günther</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/uos_maps</url>

</package><package name="surface_modelling_common" path="/trunk/stacks/bosch_surface_reconstruction/surface_modelling_common" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <author>Benjamin Pitzer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="pcl"/>
  <export>
    <cpp cflags="-I${prefix}/msg/cpp -I${prefix}/srv/cpp -I${prefix}/include"/>
  </export>
</package><package name="test_client" path="/utils/test_client" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
<description>test_client</description>
<author>Ulrich F Klank</author>
<license>Unknown</license>
<depend package="roscpp"/>
<depend package="vision_srvs"/>
</package><package name="roscs" path="" repo="cn-roscs-ros-pkg" repo_host="https://code.google.com/p/cn-roscs-ros-pkg">
  <description brief="roscs">

     roscs - Build CSharp

  </description>
  <author>hendrik</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/roscs</url>
  <depend package="rosbuild"/>
  <depend package="roscpp"/>
  <rosdep name="mono"/>

  <export>
   <rosbuild cmake_directory="${prefix}/cmake"/>
    <cpp cflags="-I${prefix}/include"/>
   <cs bpath="${prefix}/bin"/>
  </export>
</package><package name="live_torso" path="/trunk/sandbox/live_torso" repo="vanadium-ros-pkg" repo_host="http://vanadium-ros-pkg.googlecode.com/svn">
  <description brief="Experiments with a live torso."/>
  <author>Michael Ferguson</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/live_torso</url>
  <depend package="maxwell_defs"/>
</package><package name="navigation_stage" path="" repo="navigation_tutorials" repo_host="https://kforge.ros.org/navigation/tutorials">
  <description brief="Example launch files for navigation in stage.">
  This package holds example launch files for running the ROS navigation stack in stage.
  </description>
 <author>Eitan Marder-Eppstein</author>
 <license>BSD</license>
 <review notes="" status="unreviewed"/>
 <url>http://www.ros.org/wiki/navigation_stage</url>

 <depend package="move_base"/>
 <depend package="stage"/>
 <depend package="amcl"/>
 <depend package="map_server"/>
 <depend package="fake_localization"/>
 <depend package="gmapping"/>
 <platform os="ubuntu" version="9.04"/>
 <platform os="ubuntu" version="9.10"/>
 <platform os="ubuntu" version="10.04"/>
</package><package name="avr_bridge" path="" repo="rutgers-ros-pkg" repo_host="https://github.com/rutgers/rutgers-ros-pkg">
  <description brief="Allows avr processor to directly publish or subscribe to ros topics">

avr_bridge allows the AVR processors to directly publish or subscribe to 
ROS  topics.  This allows everything from Arduinos to custom robot 
boards to be first class ROS components.

  </description>
  <author>Adam Stambler, Phillip Quiza, Cody Shafer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/avr_bridge</url>
  <depend package="rospy"/>
  <depend package="std_msgs"/>
  
  <rosdep name="pyserial"/>
  
</package><package name="meshset_texture_generator" path="/trunk/stacks/bosch_texture_reconstruction/meshset_texture_generator" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="meshset_texture_reconstruction">

     meshset_texture_reconstruction

  </description>
  <author>Dejan Pangercic</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/meshset_texture_reconstruction</url>
  <depend package="roscpp"/>
  <depend package="mesh_parameterization"/>
  <depend package="mesh_segmentation"/>
  <depend package="image_geometry"/>
</package><package name="rocon_gateway_sync" path="" repo="rocon_multimaster" repo_host="https://github.com/robotics-in-concert/rocon_multimaster">
  <description brief="rocon_gateway_sync">

     rocon_gateway_sync

  </description>
  <author>Daniel Stonier</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rocon_gateway_sync</url>
  <depend package="roslib"/>
  <depend package="rospy"/>

  <rosdep name="python-redis"/>
  
</package><package name="slam_backend" path="" repo="cyphy_vis_slam" repo_host="https://cyphy-vis-slam.googlecode.com/hg/cyphy_vis_slam">
  <description brief="cyphy_vslam">

     cyphy_vslam

  </description>
  <author>liz</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cyphy_vslam</url>
  <depend package="g2o"/>
  <depend package="roscpp"/>
  <depend package="nav_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="geometry_msgs"/>
</package><package name="feature_tracker" path="" repo="turbo-ros-pkg" repo_host="https://github.com/tu-rbo/turbo-ros-pkg">
  <description brief="feature_tracker">

     The feature_tracker finds and tracks several point features over a video stream.

  </description>
  <author>Roberto/roberto.martinmartin@tu-berlin.de</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/feature_tracker</url>

  <depend package="iap_common"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="openni_camera"/>
  <depend package="sensor_msgs"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="image_transport"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -lros"/>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,-L${prefix}lib -lrosthread -framework CoreServices" os="osx"/>
  </export>
</package><package name="gazebo_tools" path="/stacks/simulator_gazebo/trunk/gazebo_tools" repo="simulator_gazebo" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Gazebo Tools for Personal Robots">
    Gazebo tools for working with 3D simulator in the ROS environment:
    urdf2gazebo parser, spawn/remove robots in simulation, 
  </description>
  <author>John Hsu</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://pr.willowgarage.com/wiki/gazebo_tools</url>
  <depend package="gazebo"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>  
  <depend package="std_msgs"/>
  <depend package="angles"/>
  <depend package="bullet"/>
  <depend package="urdf"/>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lurdf2gazebo"/>
  </export>
  <rosdep name="python-numpy"/>
  <rosdep name="tinyxml"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="inverse_kinematics" path="" repo="usc-clmc-ros-pkg" repo_host="https://github.com/usc-clmc/usc-clmc-ros-pkg">
  <description brief="inverse_kinematics">

     inverse_kinematics

  </description>
  <author>Mrinal Kalakrishnan</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/inverse_kinematics</url>

  <depend package="robot_info"/>
  <depend package="kinematics_msgs"/>
  <depend package="visualization_utilities"/>
  <depend package="tf_conversions"/>
  
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -linverse_kinematics"/>
  </export>


</package><package name="qt_dotgraph" path="" repo="qt_gui_core" repo_host="https://kforge.ros.org/visualization/qt_gui_core">
  <description brief="qt_dotgraph">
    qt_dotgraph provides helpers to work with dot graphs.
  </description>
  <author>Thibault Kruse</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/qt_dotgraph</url>

  <depend package="qt_gui"/>
  <rosdep name="python-pydot"/>
</package><package name="player_interface" path="" repo="uuisrc-ros-pkg" repo_host="https://github.com/cburbridge/uuisrc-ros-pkg">
  <description brief="player_interface">
	Player proxies into ROS
	
  </description>
  <author>Chris Burbridge</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="tf"/>
  <depend package="geometry_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="image_transport"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>  


  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="rosjava_osgi_node" path="" repo="interactive-spaces" repo_host="https://code.google.com/p/interactive-spaces">
  <description brief="osgi_master">
    OSGi Node node for rosjava.
  </description>
  <author>Keith Hughes/khughes@google.com</author>
  <license>Apache License 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://code.google.com/p/interactive-spaces/</url>
  
  <depend package="rosjava"/>
  <depend package="osgi"/>
  <depend package="osgi_msgs"/>

  <rosdep name="java"/>
</package><package name="joint_state_publisher_experimental" path="/branches/stable/urdf_tools/joint_state_publisher_experimental" repo="wu-ros-pkg" repo_host="https://wu-robotics.googlecode.com/svn">
  <description brief="A node for publishing joint angles">
	A node for publishing joint angles, either through a gui, or with
    default values. 
  </description>
  <author>David V. Lu!!</author>
  <license>BSD</license>
  <url>http://ros.org/wiki/joint_state_publisher_experimental</url>
  <depend package="rospy"/>
  <depend package="urdf_python"/>
  <depend package="sensor_msgs"/>
  <rosdep name="wxpython"/>
</package><package name="hokuyo_node" path="/stacks/laser_drivers/trunk/hokuyo_node" repo="laser_drivers" repo_host="https://code.ros.org/svn/ros-pkg">                                                                         
  <description brief="Hokuyo laser rangefinder drivers">A ROS node to provide access to SCIP 2.0-compliant Hokuyo laser range finders (including 04LX).</description>
  <author>Brian P. Gerkey, Jeremy Leibs, Blaise Gassend</author>
  <license>LGPL</license>
  <review notes="Dec 2009" status="API cleared"/>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="driver_base"/>
  <depend package="self_test"/>
  <depend package="diagnostic_updater"/>
  <depend package="dynamic_reconfigure"/>
  <url>http://www.ros.org/wiki/hokuyo_node</url>
  <export>
        <cpp cflags="-I${prefix}/msg/cpp -I${prefix}/srv/cpp -I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -llibhokuyo"/>
  </export>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="nxt_lejos_lcp_proxy" path="/trunk/ros/nxt_lejos/nxt_lejos_lcp_proxy" repo="lejos-ros-pkg" repo_host="https://lejos.svn.sourceforge.net/svnroot/lejos">
  <description brief="nxt_lejos_lcp_proxy">
     The nxt_lejos_lcp_proxy package acts as a controller for leJOS NXT robots.
     It uses a YAML file to describe the robot configuration. It publishes
     tf, odometry and pose data, and sensor data for all sensors in the
     robot configuration. It supports several ways of driving the robot, 
     and its individual motors. It supports everything required by the ROS
     navigation stack.
  </description>
  <author>leJOS development</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/nxt_lejos_lcp_proxy</url>
  <depend package="rosjava"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="nxt_msgs"/>
  <depend package="nxt_lejos_msgs"/>
  <depend package="turtlesim"/>
  <depend package="tf"/>
</package><package name="tuckarms_application" path="/stacks/pr2_web_apps/trunk/tuckarms_application" repo="pr2_web_apps" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="tuckarms_application">

     Web application for tucking the arms of the PR2 robot via the web interface.

  </description>
  <author>Scott Hassan</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/tuckarms_application</url>
  <depend package="roslib"/>
  <depend package="rospy"/>
  <depend package="webui"/>
  <depend package="rosweb"/>
  <depend package="std_msgs"/>
  <depend package="pr2_tuckarm"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="pr2_marker_control" path="/stacks/pr2_object_manipulation/branches/0.6-branch/manipulation/pr2_marker_control" repo="pr2_object_manipulation" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_marker_control">

    A PR2 application that uses Interactive Markers to provide
    a point-and-click inteface for controlling the PR2 in Rviz.

  </description>
  <author>Adam Leeper</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_marker_control</url>

  <depend package="roscpp"/>
  <depend package="interactive_markers"/>
  <depend package="sensor_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="tf"/>
  <depend package="point_cloud_server"/>
  <depend package="pr2_object_manipulation_msgs"/>
  <depend package="pr2_navigation_controllers"/>

  <!-- Robot interface -->
  <depend package="object_manipulator"/>
  
  <!-- For joint states stuff -->
  <depend package="planning_environment"/>

  <depend package="pr2_wrappers"/>
  <depend package="interactive_marker_helpers"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lpr2_marker_control_lib"/>
  </export>
</package><package name="triclops" path="/trunk/resources/triclops" repo="ubc-ros-pkg" repo_host="https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg">
    <description brief="triclops">
        PtGrey triclops library
    </description>

    <author/>
    <license/>
    <review notes="" status="3rdparty"/>
    <url/>
    <export>
        <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lpnmutils -ltriclops"/>
    </export>

</package><package name="pybonjour" path="" repo="multimaster-ros-pkg" repo_host="http://github.com/jonfink/multimaster-ros-pkg">
  <description brief="pybonjour">

     pybonjour

  </description>
  <author>Jon Fink</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pybonjour</url>

  <export>
    <python path="${prefix}/pybonjour-1.1.1"/>
  </export>

</package><package name="eros_platforms" path="/trunk/tools/eros_platforms" repo="eros" repo_host="https://code.ros.org/svn/eros">
  <description brief="cmake modules for popular platform configurations">

  eros_platforms is a library of preconfigured cmake modules
  for popular platform/cpu configurations.

  </description>
  <author>Daniel Stonier (d.stonier@gmail.com)</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/eros_platforms</url>
  <depend package="eros_license"/>
  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>

</package><package name="dynamic_movement_primitive" path="" repo="usc-clmc-ros-pkg" repo_host="https://github.com/usc-clmc/usc-clmc-ros-pkg">
  <description brief="dynamic_movement_primitives">

     dynamic_movement_primitives

  </description>
  <author>Peter Pastor, Mrinal Kalakrishnan</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/dynamic_movement_primitives</url>

  <depend package="roscpp"/>

  <depend package="usc_utilities"/>
  <depend package="locally_weighted_regression"/>
  
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/dmpLib/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -ldynamic_movement_primitive -ldmp++"/>
  </export>
  
</package><package name="pr2_read_text" path="/literate_pr2/trunk/pr2_read_text" repo="literate_pr2" repo_host="https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs">
  <description brief="pr2_read_text">

     (PR2 only) package for PR2 reading text as shown in the video.

  </description>
  <author>Menglong Zhu: menglong(at)seas.upenn.edu</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_read_text</url>
  <depend package="read_text"/>
  <depend package="opencv2"/>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <!--depend package="geometry_msgs"/-->
  <depend package="pr2_controllers_msgs"/>
  <depend package="pr2_mechanism_controllers"/>
  <depend package="cv_bridge"/>
  <depend package="std_msgs"/>
  <depend package="image_transport"/>
  <depend package="tesseract"/>

</package><package name="openni_launch" path="" repo="openni_launch" repo_host="https://kforge.ros.org/openni/openni_launch">
  <description brief="Entry point for using OpenNI cameras in ROS">

     Launch files to open an OpenNI device and load all nodelets to
     convert raw depth/RGB/IR streams to depth images, disparity
     images, and (registered) point clouds.

  </description>
  <author>Patrick Mihelich</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/openni_launch</url>

  <depend package="depth_image_proc"/>
  <depend package="image_proc"/>
  <depend package="nodelet"/>
  <depend package="openni_camera"/>
  <depend package="tf"/>

</package><package name="re_ontology" path="/public/tags/latest/re_ontology" repo="roboearth" repo_host="https://ipvs.informatik.uni-stuttgart.de/roboearth/repos">
  <description brief="re_ontology">

     Package containing the base RoboEarth ontology.

     The OWL ontology extends KnowRob with detailed descriptions of actions and objects as required for RoboEarth.

     <p>
     This package is part of RoboEarth (EU FP7, grant 248942).
     </p>
  </description>
  <author>Moritz Tenorth</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/re_ontology</url>

  <depend package="ias_knowledge_base"/>
  <depend package="mod_srdl"/>
  <depend package="re_msgs"/>
  <depend package="comp_cop"/>
  <depend package="comp_spatial"/>
  <depend package="jpl"/>
  <depend package="knowrob_objects"/>
  <depend package="knowrob_actions"/>

  <export>
    <java classpath="${prefix}/bin"/>
  </export>

</package><package name="oculesics_controllers" path="/trunk/sbl_experimental/oculesics/oculesics_controllers" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="oculesics_controllers">

     oculesics_controllers

  </description>
  <author>Edward T. Kaszubski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/oculesics_controllers</url>
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  <depend package="tf"/>
  <depend package="cpp11"/>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -loculesics_controllers"/>
  </export>

</package><package name="BHand_msgs" path="/darpa_arm_msgs/BHand_msgs" repo="darpa_arm_msgs" repo_host="http://svn.thearmrobot.com">
  <description brief="BHand_msgs">

     BHand_msgs

  </description>
  <author>DARPA ARM GFE Team</author>
  <license>GPL</license>

  <depend package="roscpp"/>
  
  <export>
    <cpp cflags="-I${prefix}/msg/cpp -I${prefix}/include"/>
  </export>

</package><package name="pr2_tuck_arms_app" path="" repo="pr2_tuck_arms_app" repo_host="https://kforge.ros.org/pr2apps/pr2_tuck_arms_ap">
  <description brief="PR2 Tuck Arms App">
     Tucks the arms of the PR2 robot into a safe position for moving the base of the robot.
     This also moves the arms out of the view of the tilting laser scanner, as much as possible.
  </description>
  <author>Wim Meeussen</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/tuckarm</url>

  <depend package="rospy"/>
  <depend package="trajectory_msgs"/>
  <depend package="pr2_mechanism_msgs"/>
  <depend package="pr2_tuck_arms_action"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="message_transport_common" path="" repo="ethzasl_message_transport" repo_host="https://github.com/ethz-asl/ros-message-transport">
  <description brief="message_transport_common">

	  message_transport is a generic architecture for writing object transport,
	  similar to the message_transport architecture. 
  </description>
  <author>Cedric Pradalier</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/message_transport_common</url>
  <depend package="pluginlib"/>
  <depend package="message_filters"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lmessage_transport_common"/>
  </export>

</package><package name="navigation_goals" path="/trunk/navigation/navigation_goals" repo="ubc-ros-pkg" repo_host="https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg">
  <description brief="navigation_goals">
      This package contains several nodes that generate the goals that the robot should explore inside an environment.
  </description>
  <author>Marius Muja</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/highlevel</url>

  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="navigation_srvs"/>
  <depend package="point_cloud_mapping"/>

</package><package name="netft_rdt_driver" path="/stacks/netft/trunk/netft_rdt_driver" repo="netft" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="netft_rdt_driver">

     Driver for NetFT sensor that uses Raw Data Transfer (RDT) protocol.

  </description>
  <author>Derek King</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/netft_rdt_driver</url>
  <depend package="roscpp"/>
  <depend package="diagnostic_updater"/>
  <depend package="diagnostic_msgs"/>
  <depend package="geometry_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -lnetft_rdt_driver -Wl,-rpath,${prefix}/lib"/>
  </export>

</package><package name="pr2_arm_navigation_planning" path="/stacks/pr2_arm_navigation/trunk/pr2_arm_navigation_planning" repo="pr2_arm_navigation" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_arm_navigation_planning">

     pr2_arm_navigation_planning

  </description>
  <author>Sachin Chitta</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_arm_navigation_planning</url>

  <depend package="pr2_machine"/>
  <depend package="chomp_motion_planner"/>
  <depend package="ompl_ros_interface"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="pcl_cloud_tools" path="" repo="mapping" repo_host="http://code.in.tum.de/git/mapping.git">
  <description>
    A collection of point cloud related tools.
  </description>

  <author>Nico Blodow, Zoltan-Csaba Marton, Dejan Pangercic</author>
  <license>BSD</license>
  <review notes="beta" status="experimental"/>

  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="mapping_msgs"/>
  <depend package="yaml_cpp"/>
  <!--See http://octomap.sourceforge.net/ -->
  <depend package="octomap"/>
  <depend package="octomap_server"/>
  <depend package="visualization_msgs"/>
  <depend package="ias_table_msgs"/>
  <!-- <depend package="pcl_visualization" /> -->
  <!-- <depend package="pcl_vtk_tools" /> -->
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="eigen"/>	
  <export>
    <cpp cflags="-I${prefix}/include/"/>
  </export>
</package><package name="ann" path="" repo="ias_perception" repo_host="http://code.in.tum.de/git/ias-perception.git">
  <description brief="ANN">

    ANN is a library written in C++, which supports data structures and
    algorithms for both exact and approximate nearest neighbor searching in
    arbitrarily high dimensions.

    In the nearest neighbor problem a set of data points in d-dimensional
    space is given. These points are preprocessed into a data structure, so
    that given any query point q, the nearest or generally k nearest points of
    P to q can be reported efficiently. The distance between two points can be
    defined in many ways. ANN assumes that distances are measured using any
    class of distance functions called Minkowski metrics. These include the
    well known Euclidean distance, Manhattan distance, and max distance.

    Based on our own experience, ANN performs quite efficiently for point sets
    ranging in size from thousands to hundreds of thousands, and in dimensions
    as high as 20. (For applications in significantly higher dimensions, the
    results are rather spotty, but you might try it anyway.)

    The library implements a number of different data structures, based on
    kd-trees and box-decomposition trees, and employs a couple of different
    search strategies.

    The library also comes with test programs for measuring the quality of
    performance of ANN on any particular data sets, as well as programs for
    visualizing the structure of the geometric data structures. 

  </description>

  <author>Sunil Arya and David Mount</author>
  <license>LGPL</license>
  <review notes="" status="3rdparty"/>
  <url>http://www.cs.umd.edu/~mount/ANN/</url>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lANN"/>
    <doxymaker external="http://www.cs.umd.edu/~mount/ANN/Files/1.1.2/ANNmanual_1.1.pdf"/>
  </export>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
  <platform os="ubuntu" version="10.10"/>
</package><package name="contact_point_estimation" path="/trunk/stacks/bosch_interactive_segmentation/contact_point_estimation" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="contact_point_estimation">

     contact_point_estimation

  </description>
  <author>Andrei Haidu</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/contact_point_estimation</url>
  <depend package="roscpp"/>
  <depend package="xacro"/>
  <depend package="ivcon"/>
  <depend package="gazebo"/>
  <depend package="gazebo_tools"/>
  <depend package="gazebo_plugins"/>
  <depend package="control_toolbox"/>

  <export>
    <gazebo gazebo_media_path="${prefix}"/>
    <gazebo plugin_path="${prefix}/lib"/>
  </export>

</package><package name="pi_head_tracking_tutorial" path="/trunk/pi_tutorials/pi_head_tracking_tutorial" repo="pi-robot-ros-pkg" repo_host="http://pi-robot-ros-pkg.googlecode.com/svn">
  <description brief="pi_head_tracking_tutorial">
     Head Tracking Tutorial for the Pi Robot Project
  </description>
  <author>Patrick Goebel</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.pirobot.org/blog/0016</url>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="std_msgs"/>
  <depend package="rviz"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="uvc_cam"/>
  <depend package="arbotix_python"/>
  <depend package="robotis"/>
  <depend package="openni_camera"/>
</package><package name="cob_command_gui_rviz" path="" repo="cob_command_tools" repo_host="git://github.com/ipa320/cob_command_tools">
  <description brief="cob_command_gui_rviz">

     cob_command_gui_rviz

  </description>
  <author>Jonathan Schwarz</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_command_gui_rviz</url>

  <depend package="roscpp"/>
  <depend package="actionlib"/>
  <depend package="rviz"/>
  <depend package="cob_script_server"/>
  
  <export>
  	  <rviz plugin="${prefix}/lib/plugin.yaml"/>
  </export>

</package><package name="constraint_aware_spline_smoother" path="" repo="arm_navigation" repo_host="https://kforge.ros.org/armnavigation/armnavigation">
  <description brief="constraint_aware_spline_smoother">
    This package contains filters for joint trajectories. The filters can take into account constraints. However, the current set of filters only take collision constraints into account, i.e. they will apply only the smoothing that does not violate collision constraints.
  </description>
  <author>Sachin Chitta</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/constraint_aware_spline_smoother</url>
  <depend package="planning_environment"/>
  <depend package="spline_smoother"/>
  <depend package="tf"/>
  <depend package="filters"/>
  <depend package="trajectory_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lconstraint_aware_spline_smoother"/>
    <filters plugin="${prefix}/default_plugins.xml"/>
  </export>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="nxt_lejos_bumper_car" path="/trunk/ros/nxt_lejos_apps/nxt_lejos_bumper_car" repo="lejos-ros-pkg" repo_host="https://lejos.svn.sourceforge.net/svnroot/lejos">
  <description brief="nxt_lejos_bumper_car">
     An implementation of a simple bumper car using the nxt_lejos_proxy API. The robot
     car should include an ultrasonic sensor and use differential steering. The nxt_lejos_proxy
     node should be running. The car will drive around a room avoiding obstacles.
  </description>
  <author>Lawrie Griffiths</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/nxt_lejos_bumper_car</url>
  <depend package="rosjava"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="nxt_msgs"/>
  <depend package="nxt_lejos_msgs"/>
</package><package name="uuid_msgs" path="" repo="unique_identifier" repo_host="https://kforge.ros.org/geographicinfo/id_msgs">
  <description brief="uuid_msgs">

     ROS messages for universally unique identifiers.

  </description>
  <author>Jack O'Quin</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/uuid_msgs</url>

</package><package name="scan_to_cloud_converter" path="" repo="scan_tools" repo_host="https://github.com/ccny-ros-pkg/scan_tools">
  <description brief="scan_to_cloud_converter">

     Converts LaserScan to PointCloud messages.

  </description>
  <author>Ivan Dryanovski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/scan_to_cloud_converter</url>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>

</package><package name="rosjava_jni" path="" repo="client_rosjava_jni" repo_host="http://code.in.tum.de/git/client-rosjava.git">
  <description brief="A Java ROS client library">
    <p> 
        rosjava is a partial implementation of the ROS NodeHandle API for Java. The current implementation works by calling roscpp behind the scenes using JNI, although the intention is to eventually rewrite it in pure Java. The interfaces in the &quot;ros&quot; package are intended to be independent of the implementation, so that this change can be made transparently when the pure Java implementation has been written.
    </p>
    <p>
        rosjava is currently in an early alpha state; the core functionality it provides has been fairly well tested, but many more advanced features are missing. Its API has not yet been reviewed, and is likely to change in the future. 
    </p>
	<p>
		rosjava is currently maintained by Nicholas Butko. Contact nbutko at ucsd dot edu with issues and fixes. 
	</p>
  </description>

  <author>Jason Wolfe (jawolfe@willowgarage.com), Nicholas Butko (nbutko@cogsci.ucsd.edu), Lorenz Moesenlechner (moesenle@in.tum.de)</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <depend package="roslib"/>
  <depend package="roscpp"/>
  <depend package="roslang"/>
  <depend package="rospack"/>
  <depend package="std_msgs"/>
  <rosdep name="java"/>
  <export>
    <roslang cmake="${prefix}/cmake/rosjava.cmake"/>
    <java classpath="${prefix}/bin" ld_lib_path="${prefix}/bin"/>
  </export>
  <url>http://ros.org/wiki/rosjava</url>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="get_button_xyz" path="/trunk/pr2_elevator/get_button_xyz" repo="ubc-ros-pkg" repo_host="https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg">
  <description brief="temp_detection">

     temp_detection

  </description>
  <author>ergunvancouver</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/temp_detection</url>
  <depend package="sensor_msgs"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="rospy"/>
  <depend package="std_msgs"/>
  <depend package="image_transport"/>
  <depend package="geometry_msgs"/>
  <depend package="wall_detection_service"/>
  <depend package="image_geometry"/>
  <depend package="camera_info_manager"/>
  <depend package="tf"/>
  <depend package="geometry_msgs"/>
  <depend package="visualization_msgs"/>

</package><package name="neo_description_mpo_700" path="" repo="neo_common" repo_host="https://github.com/neobotix/neo_common">
  <description brief="neo_description_mpo_700">

     neo_description_mpo_700

  </description>
  <author>neobotix</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/neo_description_mpo_700</url>
  <depend package="cob_description"/>

</package><package name="collision_proximity_planner" path="" repo="arm_navigation_experimental" repo_host="https://kforge.ros.org/armnavigation/experimental">
  <description brief="collision_proximity_planner">

     collision_proximity_planner

  </description>
  <author>Sachin Chitta</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/collision_proximity_planner</url>

  <depend package="planning_environment"/>
  <depend package="spline_smoother"/>
  <depend package="collision_proximity"/>

  <depend package="visualization_msgs"/>
  <depend package="arm_navigation_msgs"/>
  <depend package="sensor_msgs"/>

  <depend package="kdl"/>
  <depend package="kdl_parser"/>
  <depend package="angles"/>
  <depend package="pluginlib"/>

 <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lcollision_proximity_planner_lib"/>
    <motion_planning_state_refinement plugin="${prefix}/state_refinement_plugins.xml"/>
  </export>

</package><package name="phidgets_c_api" path="" repo="phidgets_drivers" repo_host="https://github.com/ccny-ros-pkg/phidgets_drivers">
  <description brief="Metapackage to download and install the Phidgets C API">

  This package contains the Official Phidgets C API.

  </description>

  <author>Phidgets, Inc.</author>
  <license>LGPL</license>
  <url>http://www.phidgets.com/downloads.php?example_id=30</url>

  <export>
    <cpp cflags="-I${prefix}/include " lflags="-L${prefix}/lib -lphidget21"/>
    <doxymaker external="http://www.phidgets.com/downloads.php?example_id=30"/>
  </export>

</package><package name="bumper_gazebo_plugin" path="" repo="reem_plugins" repo_host="https://github.com/pal-robotics/reem_plugins">
  <description brief="bumper_gazebo_plugin">bumper_gazebo_plugin</description>

  <author>Jose Rafael Capriles</author>
  <license>Modified BSD</license>
  <review notes="" status="unreviewed"/>
  <depend package="gazebo"/>
  <depend package="gazebo_tools"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>  
  <depend package="angles"/>
  <depend package="std_srvs"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="tinyxml"/>
  <depend package="bullet"/>
  <depend package="urdf"/>
  <depend package="tf"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="driver_base"/>
  <depend package="reem_msgs"/>
 <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp -I${prefix}/srv/cpp" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib"/>
    <gazebo plugin_path="${prefix}/lib"/>
  </export>
  <rosdep name="python-numpy"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>

</package><package name="pr2_doors_common" path="" repo="pr2_doors" repo_host="https://kforge.ros.org/doors/hg">
  <description>
   Door functions package
  </description>

  <author>Wim Meeussen</author>
  <license>BSD</license>
  <url>http://pr.willowgarage.com</url>
  <review notes="beta" status="experimental"/>

  <depend package="roscpp"/>
  <depend package="door_msgs"/>
  <depend package="kdl"/>
  <depend package="tf"/>


 <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -ldoor_functions"/>
 </export>


  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="veltrobot_nao" path="/trunk/veltrop-ros-pkg/veltrobot/veltrobot_nao" repo="veltrop-ros-pkg" repo_host="https://veltrop-ros-pkg.svn.sourceforge.net/svnroot/veltrop-ros-pkg">
  <description brief="">


  </description>
  <author>Taylor Veltrop</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/veltrobot_nao</url>

  <depend package="veltrobot_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="rospy"/>
	<depend package="nao_driver"/>

</package><package name="schunk_description" path="" repo="schunk_modular_robotics" repo_host="git://github.com/ipa320/schunk_modular_robotics">
  <description brief="schunk_description">

  This package contains the description (mechanical, kinematic, visual,
  etc.) of different schunk components. The files in this package are parsed and used by
  a variety of other components. Most users will not interact directly
  with this package.

  </description>
  <author>Florian Weisshardt</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/schunk_description</url>

  <depend package="convex_decomposition"/>
  <depend package="ivcon"/>
  <depend package="urdf"/>

</package><package name="table_objects" path="/demos/ros_fall_school_2010/table_objects" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="table_objects">
  </description>
  <author>Zoltan-Csaba Marton</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/table_objects</url>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="mapping_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="terminal_tools"/>
  <depend package="flann"/>
  <depend package="laser_assembler"/>
  <depend package="point_cloud_converter"/>
  <depend package="pr2_arm_navigation_perception"/>
</package><package name="checkerboard" path="/trunk/OIT/checkerboard" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="checkerboard_detector">

     checkerboard_detector node that finds a NxM checkerboard in an image, and uses a corresponding camera_info message to return a transform to that checkerboard from the camera frame

  </description>
  <author>David Feil-Seifer (dfseifer@usc.edu)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/checkerboard_detector</url>

  <depend package="image_transport"/>
  <depend package="image_geometry"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="tf"/>
</package><package name="srs_assisted_grasping_msgs" path="" repo="srs_public" repo_host="git://github.com/ipa320/srs_public">
  <description brief="srs_assisted_grasping_msgs">

     srs_assisted_grasping_msgs

  </description>
  <author>Zdenek Materna</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/srs_assisted_grasping_msgs</url>
  <depend package="control_msgs"/>
  <depend package="brics_actuator"/>
  <depend package="actionlib_msgs"/>

</package><package name="ego" path="" repo="ego" repo_host="https://github.com/fairlight1337/ego">
  <description brief="ego">

     ego

  </description>
  <author>Jan Winkler</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ego</url>

  <rosdep name="libglfw-dev"/>
  <rosdep name="libglfw2"/>
  <rosdep name="opencv2"/>

  <depend package="roscpp"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="move_base_msgs"/>
  <depend package="image_transport"/>
  <depend package="sensor_msgs"/>
  <depend package="cv_bridge"/>
  <depend package="nav_msgs"/>
  <depend package="tf"/>

</package><package name="pr2_nav_pcontroller" path="/stacks/ias_nav/pr2_nav_pcontroller" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="pr2_nav_pcontroller">

     pr2_nav_pcontroller

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_nav_pcontroller</url>
  <depend package="nav_pcontroller"/>

</package><package name="seabee3_dashboard" path="/trunk/cturtle/seabee3_dashboard" repo="seabee3-ros-pkg" repo_host="http://seabee3-ros-pkg.googlecode.com/svn">
  <description brief="seabee3_dashboard">

     seabee3_dashboard

  </description>
  <author>Michael Montalbo</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/seabee3_dashboard</url>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="sensor_msgs"/>
  <depend package="stereo_msgs"/>
  <depend package="roscpp"/>
  <depend package="image_transport"/>

  <depend package="seabee3_driver_base"/>
</package><package name="fmk_ros_bridge" path="/trunk/rtmros_common/fmk_ros_bridge" repo="rtm-ros-robotics/rtmros_common" repo_host="https://rtm-ros-robotics.googlecode.com/svn">
  <description brief="fmk">

     FMK, the Yasukawa Mobile Robot

  </description>
  <author>Manabu Saito, Haseru Azuma</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/fmk</url>

  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>

  <depend package="tf"/>
  <depend package="std_srvs"/>
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="openrtm"/>

  <depend package="jsk_tools"/>
</package><package name="surf" path="" repo="uuisrc-ros-pkg" repo_host="https://github.com/cburbridge/uuisrc-ros-pkg">
  <description brief="surf">

     surf

  </description>
  <author>Yianni</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/surf</url>
  <depend package="sensor_msgs"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="image_transport"/>

</package><package name="object_support_segmentation" path="/trunk/simple_grasping/object_support_segmentation" repo="vanadium-ros-pkg" repo_host="http://vanadium-ros-pkg.googlecode.com/svn">
  <description brief="A node for segmenting objects from their support surfaces.">
    A node for segmenting objects from their support surfaces.
  </description>
  <author>Michael Ferguson</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/object_support_segmentation</url>
  <depend package="roscpp"/>
  <depend package="pcl_ros"/>
  <depend package="object_manipulation_msgs"/>

</package><package name="rqt_shell" path="" repo="rqt" repo_host="https://kforge.ros.org/visualization/rqt">
  <description brief="rqt_shell">
      rqt_shell is a Python GUI plugin providing an interactive shell.
  </description>
  <author>Dorian Scholz</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rqt_shell</url>
  <depend package="qt_gui"/>
  <depend package="qt_gui_py_common"/>
  <export>
      <rqt_gui plugin="${prefix}/plugin.xml"/>
  </export>

</package><package name="fr_tools" path="/trunk/freiburg_tools/fr_tools" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="fr_tools">

     fr_tools - small collection of various helpful tools

  </description>
  <author>Armin Hornung, Daniel Maier</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/fr_tools</url>

  <depend package="rospy"/>
  <depend package="sensor_msgs"/>
  <depend package="cv_bridge"/>
  <depend package="message_filters"/>
  <!--
  <rosdep name="opencv2" />
  -->

</package><package name="fake_tracking" path="/sbpl_dynamic_env/trunk/fake_tracking" repo="sbpl_dynamic_env" repo_host="https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs">
  <description brief="fake_tracking">

A fake tracker which polls the simulator for the locations of other robots (dynamic obstacles)

  </description>
  <author>Michael Phillips</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/fake_tracking</url>
  <depend package="roscpp"/>
  <depend package="rosconsole"/>
  <depend package="nav_msgs"/>
  <depend package="dynamic_obs_msgs"/>

</package><package name="cob_bringup" path="" repo="cob_robots" repo_host="git://github.com/ipa320/cob_robots">
  <description brief="cob_bringup">

     This package provides launch files for operating Care-O-bot.

  </description>
  <author>Florian Weisshardt</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_bringup</url>

  <!-- components: actuators -->
  <depend package="cob_undercarriage_ctrl"/>
  <depend package="cob_base_drive_chain"/>
  <depend package="cob_trajectory_controller"/>
  <depend package="cob_lbr"/>
  <depend package="cob_head_axis"/>
  <depend package="cob_sound"/>
  <depend package="cob_light"/>

  <depend package="schunk_sdh"/>
  <depend package="schunk_powercube_chain"/>

  <depend package="robot_state_publisher"/>
  <depend package="ur5_driver"/>

  <!-- components: sensors -->
  <depend package="cob_relayboard"/>
  <depend package="cob_sick_s300"/>
  <depend package="cob_hokuyo"/>
  <depend package="cob_camera_sensors"/>

  <depend package="openni_camera"/>
  <depend package="openni_launch"/>
  <depend package="image_proc"/>
  <depend package="hokuyo_node"/>
  <depend package="prosilica_camera"/>

  <!-- tools -->
  <depend package="cob_command_gui"/>
  <depend package="cob_dashboard"/>
  <depend package="cob_teleop"/>
  <depend package="cob_collision_velocity_filter"/>
  <depend package="cob_footprint_observer"/>
  <depend package="cob_base_velocity_smoother"/>
  
  <depend package="joy"/>
  <depend package="rviz"/>
  <depend package="diagnostic_aggregator"/>
  <depend package="pr2_dashboard_aggregator"/>
  <depend package="pr2_computer_monitor"/>
  <depend package="wifi_ddwrt"/>
  <depend package="costmap_2d"/>

  <!-- configuration -->
  <depend package="cob_hardware_config"/>
  <depend package="cob_default_robot_config"/>
  <depend package="cob_default_env_config"/>

</package><package name="libsvm" path="/3rdparty/libsvm" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description>
    LIBSVM is a Support Vector Machine implementation (http://www.csie.ntu.edu.tw/~cjlin/libsvm/)
  </description>
  <author>
    Chih-Chung Chang, Chih-Jen Lin
  </author>
  <license/>

  <export>
    <cpp cflags="-I${prefix}/include/" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lsvm"/>
  </export>
            
</package><package name="pr2_plugs_gazebo_demo" path="/stacks/wg_robots_gazebo/trunk/pr2_plugs_gazebo_demo" repo="wg_robots_gazebo" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description>Launch files for pluggin in in Gazebo.</description>
  <author>John Hsu</author>
  <license>BSD</license>
  <review notes="" status="na"/>
  <url>http://pr.willowgarage.com/wiki/FIXME</url>

  <depend package="pr2_gazebo"/>
  <depend package="gazebo_tools"/>
  <!-- for ik arm control -->
  <depend package="geometry_msgs"/>
  <depend package="roscpp"/>

  <!-- for getting Odometry message from gazebo p3d plugin -->
  <depend package="nav_msgs"/>
  <!-- for btTransform in goto_plug test script -->
  <depend package="bullet"/>
  <!-- latest developments -->
  <depend package="pr2_plugs_actions"/>
  <depend package="pr2_2dnav"/>
  <depend package="pr2_arm_move_ik"/>
  <depend package="joint_trajectory_generator"/>
  <depend package="pr2_tuck_arms_action"/>

  <!-- latest developments -->
  <depend package="gazebo"/>

  <export>
    <gazebo gazebo_media_path="${prefix}"/>
  </export>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="reem_controller_configuration_gazebo" path="" repo="reem_simulation" repo_host="https://github.com/pal-robotics/reem_simulation">
  <description brief="Controller gains for the simulated REEM robot."/>
  <author>Adolfo Rodriguez Tsouroukdissian</author>
  <license>Modified BSD</license>
  <review notes="" status="unreviewed"/>
  <url/>

</package><package name="knem" path="/stacks/mpi/trunk/knem" repo="mpi" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="knem">

    KNEM is a Linux kernel module enabling high-performance intra-node MPI
    communication for large messages. KNEM works on all Linux kernel since 2.6.15
    and offers support for asynchronous and vectorial data transfers as well as
    offloading memory copies on to Intel I/OAT hardware.
  </description>

  <author>INRIA Runtime Team-Project</author>
  <license>BSD</license>
  <review notes="" status="3rdparty"/>
  <url>http://runtime.bordeaux.inria.fr/knem/</url>
  
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib"/>
  </export>

  <rosdep name="linux-headers"/>
  <rosdep name="linux-libc"/>
  <rosdep name="awk"/>
  <rosdep name="dpkg"/>
  <rosdep name="grep"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="smach_recovery_ros" path="/trunk/stacks/recovery_shared_autonomy/smach_recovery_ros" repo="bosch-ros-pkg-e" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg-e/code">
  <description brief="smach_recovery_ros">
    The smach_recovery_ros package contains extensions for the smach_recovery library to
    integrate it tightly with ROS.  For example, smach_recovery-ROS can call
    ROS services, listen to ROS topics, and integrate
    with <a href="http://www.ros.org/wiki/actionlib">actionlib</a>
    both as a client, and a provider of action servers.  smach_recovery is a
    new library that takes advantage of very old concepts in order to
    quickly create robust robot behavior with maintainable and modular
    code.
  </description>
  <author>Bharath Sankaran and Jonathan Bohren</author>
  <license>BSD</license>
  <review notes="" status="Doc reviewed"/>
  <url>http://ros.org/wiki/smach_recovery_ros</url>

  <depend package="smach_recovery"/>

  <depend package="rospy"/>
  <depend package="rostest"/>
  <depend package="rostopic"/>

  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>

  <depend package="smach_recovery_msgs"/>
  <depend package="std_msgs"/>

  <export>
    <rosdoc config="rosdoc.yaml"/>    
  </export>

</package><package name="fcl" path="/trunk/fcl" repo="fcl_ros" repo_host="https://kforge.ros.org/fcl/fcl_ros">
  <description brief="fcl">

     fcl

  </description>
  <author>Jia Pan</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/fcl</url>

  <depend package="common_rosdeps"/>
  <rosdep name="libccd"/>
  <rosdep name="octomap"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/build/lib -L${prefix}/build/lib -lfcl"/>
  </export>

</package><package name="parsec_perception" path="" repo="parsec" repo_host="https://code.google.com/p/parsec">
  <description brief="parsec_parception">

     parsec_perception

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>Apache 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/floor_filter</url>

  <depend package="roscpp"/>
  <depend package="laser_geometry"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="nodelet"/>
  <depend package="ros_check"/>
  <depend package="tf"/>

  <export>
    <nodelet plugin="${prefix}/nodelets.xml"/>
  </export>

</package><package name="neato_driver" path="/trunk/neato_robot/neato_driver" repo="albany-ros-pkg" repo_host="http://albany-ros-pkg.googlecode.com/svn">
  <description brief="Driver for the Neato XV-11">

    This is a generic drivers for the Neato XV-11 Robotic Vacuum.

    ROS Bindings can be found in the neato_node package.

  </description>
  <author>Michael Ferguson</author>
  <email>ferguson@cs.albany.edu</email>
  <license>BSD</license>

  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/neato_driver</url>

  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export> 
 
</package><package name="pr2_skill_crane" path="/stacks/pr2_tabletop_manipulation_apps/branches/0.4-branch/pr2_skill_crane" repo="pr2_tabletop_manipulation_apps" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_skill_crane">

     pr2_skill_crane

  </description>
  <author>Matei Ciocarlie</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_skill_crane</url>
  <depend package="pr2_interactive_manipulation"/>

  <depend package="rviz"/>

  <export>
    <rviz plugin="${prefix}/lib/rviz_plugin.yaml"/>
  </export>

</package><package name="articulation_structure" path="/trunk/articulation/articulation_structure" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="articulation_structure">

     articulation_structure

  </description>
  <author>sturm</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/articulation_closedchain</url>
  <!-- does not work in fuerte
  <depend package="articulation_rviz_plugin"/>
  -->
  <depend package="geometry_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="tf"/>
  <rosdep name="eigen"/>
  <depend package="hogman_minimal"/>
  <depend package="articulation_msgs"/>
  <depend package="articulation_models"/>
</package><package name="android_gingerbread_mr1" path="" repo="android_core" repo_host="https://code.google.com/p/rosjava.android/">
  <description brief="android_gingerbread">
    android_gingerbread
  </description>
  <author>Damon Kohler (damonkohler@google.com)</author>
  <license>Apache 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/android_gingerbread</url>
</package><package name="hrl_opencv" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="hrl_opencv">
     Helper functions for use with OpenCV.
  </description>
  <author>Hai Nguyen, Advait Jain (Healthcare Robotics Lab, Georgia Tech)</author>
  <license>New BSD</license>
  <depend package="std_msgs"/>  
  <depend package="sensor_msgs"/>  
  <depend package="rospy"/>  
  <depend package="opencv2"/>  
</package><package name="my3dscan" path="/trunk/Scan3D/my3dscan" repo="roblab-whge-ros-pkg" repo_host="http://roblab-whge-ros-pkg.googlecode.com/svn">
  <description brief="my3dscan">

     Creates a 3D scan.

  </description>
  <author>B. Möller</author>
  <license>CreativeCommons BY-NC-SA License</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/my3dscan</url>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="rcf_com_roomba_base"/>
  <depend package="tf"/>
  <depend package="joy_controller"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="lms100"/>
  <depend package="laser_geometry"/>
  <depend package="dynamixel"/>
  <depend package="pcl_visualization"/>
  <depend package="visualization_msgs"/>
</package><package name="seabee3_driver" path="/trunk/cturtle/seabee3_driver" repo="seabee3-ros-pkg" repo_host="http://seabee3-ros-pkg.googlecode.com/svn">
  <description brief="seabee3_driver">

     seabee3_driver

  </description>
  <author>Edward T. Kaszubski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/seabee3_driver</url>
  <depend package="roscpp"/>
  <depend package="seabee3_driver_base"/> <!-- for Depth.msg, KillSwitch.msg, MotorCntl.msg, Pressure.msg -->
  <depend package="geometry_msgs"/> <!-- for Twist.msg, Vector3.msg -->
  <depend package="std_msgs"/> <!-- for Empty.msg -->
  <depend package="base_libs"/>
  <depend package="std_srvs"/>
  <depend package="seabee3_common"/>
  <depend package="seabee3_physics"/>
  <depend package="seabee3_stabilizer"/>
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp -I${prefix}/srv/cpp" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib"/>
  </export>

</package><package name="flyer_controller" path="" repo="starmac-ros-pkg" repo_host="https://bitbucket.org/bouffard/starmac-ros-pkg">
  <description brief="flyer_controller">

    Control and teleoperation. High-level control manager and individual control modes.

  </description>
  <author>Patrick Bouffard</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/flyer_controller</url>
  <depend package="dynamic_reconfigure"/>
  <depend package="driver_base"/> <!-- needed for SensorLevels message in controller.cfg -->
  <depend package="flyer_common"/>
  <depend package="topic_tools"/>
  <!-- depend package="control_toolbox"/-->
  <depend package="nav_msgs"/>
  <depend package="nodelet"/>
  <depend package="pluginlib"/>
  <!-- depend package="visualization_msgs"/> -->
  <!-- depend package="joy"/-->
  <depend package="sensor_msgs"/>
  <depend package="rospy"/>
  <depend package="starmac_msgs"/>

  <export>
    <!--  cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lros"/-->
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib"/>
    <nodelet plugin="${prefix}/flyer_controller_nodelets.xml"/>
  </export>

</package><package name="rtt_ros_integration" path="" repo="orocos_toolchain_ros" repo_host="http://git.mech.kuleuven.be/robotics/orocos_toolchain_ros.git">
  <description brief="rtt_ros_integration">

     rtt_ros_integration provides an RTT plugin to add a ROS node to the RTT process, and the necessary template files and cmake macros for automatic rtt typekit and transport generation from ROS msg files

  </description>
  <author>Ruben Smits, ruben.smits@mech.kuleuven.be</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rtt_ros_integration</url>
  <depend package="roscpp"/>
  <depend package="rtt"/>
  <depend package="ocl"/>
  <depend package="rosbuild"/>

  <export>
    <rosbuild cmake_directory="${prefix}/cmake"/>
    <cpp cflags="-I${prefix}/src -I${prefix}/include"/>
  </export>
</package><package name="cyton_demo" path="/branches/cyton_demo" repo="rtc-us-ros-pkg-branches" repo_host="https://rtc-us-ros-pkg.svn.sourceforge.net/svnroot/rtc-us-ros-pkg">
  <description brief="cyton_demo">

     cyton_demo

  </description>
  <author>Minolo</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cyton_demo</url>
  <depend package="roscpp"/>
  <depend package="SSC32_core"/>

</package><package name="freetail_arm_navigation" path="/trunk/freetail/freetail_arm_navigation" repo="swri-ros-pkg" repo_host="http://swri-ros-pkg.googlecode.com/svn">
  <description brief="freetail_arm_navigation">

     freetail_arm_navigation

  </description>
  <author>Jnicho</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/freetail_arm_navigation</url>
  <depend package="planning_environment"/>
  <depend package="kinematics_base"/>
  <depend package="arm_kinematics_constraint_aware"/>
  <depend package="ompl_ros_interface"/>
  <depend package="trajectory_filter_server"/>
  <depend package="constraint_aware_spline_smoother"/>
  <depend package="move_arm"/>

</package><package name="cram_projection" path="" repo="cram_core" repo_host="https://github.com/moesenle/cram_core">
  <description brief="cram_projection">

     cram_projection

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cram_projection</url>
  <depend package="alexandria"/>
  <depend package="cram_language"/>
  <depend package="cram_process_modules"/>
  <depend package="roslisp_runtime"/>
  <depend package="cram_utilities"/>
  <depend package="lisp_unit"/>

</package><package name="foreign_relay" path="" repo="multimaster_experimental" repo_host="https://kforge.ros.org/appmanandroid/multimaster_experimental">
  <description brief="Nodes for relaying to a foreign master.">
    The foreign_relay node is designed for use with multiple robots running
    separate masters. It is like a relay, except that it additionally
    registers its topic on a foreign master. The unreliable_relay node is like 
    relay in topic_tools except that it requests an unreliable transport.
  </description>
  <author>Blaise Gassend</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/foreign_relay</url>
  <depend package="roscpp"/>
  <depend package="xmlrpcpp"/>
  <depend package="topic_tools"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="robotino_msgs" path="/robotino-ros-pkg/trunk/robotino/robotino_msgs" repo="robotino-ros-pkg" repo_host="http://svn.openrobotino.org">
  <description brief="robotino_msgs">
This package defines certain custom messages for Robotino.
  </description>
  <author>indorewala@servicerobotics.eu</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/robotino_msgs</url>
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>

</package><package name="elas" path="" repo="cyphy_elas_ros" repo_host="https://code.google.com/p/cyphy-elas-ros/">
  <description brief="ROS-Package for libelas, library for Efficient LArge Scale stereo matching">
    <p>This is a ROS-Package for libelas, a library for visual odometry created by Andeas Geiger from the Institute of Measurement and Control Systems at Karlsruhe Institute of Technology.</p>
    <p>Please note that this code is licensed under GPL. For a commercial usage of libelas, please contact Andreas Geiger directly (see <a href="http://www.cvlibs.net/software/libelas.html">http://www.cvlibs.net/software/libelas.html</a>).</p>
  </description>
  <author>Andreas Geiger/geiger@kit.edu, maintained by: Patrick Ross/patrick.ross@connect.qut.edu.au</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/elas</url>

  <export>
    <cpp cflags="-msse3 -I${prefix}/libelas/src/" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lelas"/>
  </export>

</package><package name="nodelet_topic_tools" path="" repo="nodelet_core" repo_host="https://kforge.ros.org/common/nodeletcore">
  <description brief="nodelet_topic_tools">
    This package contains common nodelet tools such as a mux, demux and throttle.
  </description>
  <author>Radu Bogdan Rusu, Tully Foote</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/nodelet_topic_tools</url>
  <depend package="nodelet"/>
  <depend package="roscpp"/>
  <depend package="message_filters"/>
  <depend package="dynamic_reconfigure"/>

  <!-- Testing -->
  <depend package="rospy"/>
  <depend package="std_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/include"/>
    <nodelet plugin="${prefix}/test/test_nodelets.xml"/>
  </export>
  
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="libsvm3" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="libsvm3">
     libsvm3
  </description>
  <author>various</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <export>
      <cpp cflags="-I${prefix}" lflags="-L${prefix} -Wl,-rpath,-L${prefix} -lsvm"/>
  </export>
</package><package name="ecl_exceptions" path="/trunk/ecl_core/ecl_exceptions" repo="ecl_core" repo_host="https://embedded-control-library.googlecode.com/svn">
  <description brief="Simple templated exceptions.">

     Template based exceptions - these are simple and practical
     and avoid the proliferation of exception types. Although not
     syntatactically ideal, it is convenient and eminently practical.

  </description>
  <author>Daniel Stonier (d.stonier@gmail.com)</author>
  <license>BSD</license>
  <review notes="" status="doc reviewed"/>
  <url>http://snorriheim.dnsdojo.com/redmine/wiki/ecl</url>

  <depend package="ecl_license"/>
  <depend package="ecl_build"/>
  <depend package="ecl_config"/>
  <depend package="ecl_errors"/>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lecl_exceptions"/>
  </export>
  <rosbuild2>
    <export>
      <include_dir>${ecl_exceptions_SOURCE_DIR}/include</include_dir>
    </export>
    <depend package="ecl_license"/>
    <depend package="ecl_build"/>
    <depend package="ecl_config"/>
    <depend package="ecl_errors"/>
  </rosbuild2>
</package><package name="cram_execution_trace" path="" repo="cram_core" repo_host="https://github.com/moesenle/cram_core">
  <description brief="Execution trace for CRAM.">
    The execution trace provides facilities for tracing and all state changes
    during plan execution, serializing this episode information and accessing
    it in various ways.
  </description>
  <author>Nikolaus Demmel</author>
  <license>BSD</license>
  <url>http://ros.org/wiki/cram_execution_trace</url>
  <review notes="" status="unreviewed"/>
  <depend package="sbcl"/>
  <depend package="cl_store"/>
  <depend package="cram_utilities"/>
  <depend package="cram_test_utilities"/>  
  <depend package="cram_language"/>
</package><package name="split_sequence" path="" repo="cram_core" repo_host="https://github.com/moesenle/cram_core">
  <description brief="split-sequence">
    http://www.cliki.net/SPLIT-SEQUENCE
  </description>
  <author>James Bielman</author>
  <license/>
  <review notes="" status="unreviewed"/>

</package><package name="meshset_texture_blender" path="/trunk/stacks/bosch_texture_reconstruction/meshset_texture_blender" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="meshset_texture_blender">

     meshset_texture_blender

  </description>
  <author>Benjamin Pitzer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/meshset_texture_blender</url>
  <depend package="roscpp"/>
  <depend package="rtc"/>
  <rosdep name="libsuperlu-dev"/>
</package><package name="ur5_bringup" path="" repo="universal_robot" repo_host="https://kforge.ros.org/ros_industrial/universal_robot">
  <description brief="ur5_bringup">

     ur5_bringup

  </description>
  <author>Wim Meeussen</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ur5_bringup</url>

  <depend package="tf2_ros"/>
  <depend package="ur5_driver"/>
  <depend package="ur5_description"/>

</package><package name="stereo_anaglyph" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="stereo-anaglyph">
     Display images from stereo pairs in red-cyan anaglyph mode.
  </description>
  <author>Hai Nguyen, Advisor: Prof. Charlie Kemp, Lab: Healthcare Robotics Lab at Georgia Tech</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/stereo-anaglyph</url>
  <depend package="opencv2"/>
  <depend package="sensor_msgs"/>
  <depend package="rospy"/>
  <depend package="hrl_camera"/>

</package><package name="libLMS1xx" path="" repo="RCPRG_laser_drivers" repo_host="https://github.com/RCPRG-ros-pkg/RCPRG_laser_drivers">
  <description brief="libLMS1xx">

     Library for communicating with SICK LMS1xx.

  </description>
  <author>Konrad Banachowicz</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://github.com/konradb3/RCPRG-ros-pkg/wiki/libLMS1xx</url>
	<export>
  	<cpp cflags="-I${prefix}/libLMS1xx/include" lflags="-Wl,-rpath,${prefix}/libLMS1xx/lib -L${prefix}/libLMS1xx/lib -lLMS1xx"/>
  </export>

</package><package name="location_memorizer" path="" repo="roboframenet" repo_host="https://kforge.ros.org/appmanandroid/roboframenet">
  <description brief="location_memorizer">

    location_memorizer is an RFNServer which remembers locations and their corresponding names when instructed.

  </description>
  <author>Brian Thomas</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/location_memorizer</url>
  <depend package="rospy"/>
  <depend package="rfnserver"/>
  <depend package="geometry_msgs"/>

</package><package name="leptonica" path="/trunk/stacks/ocr/leptonica" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="ROS wrapper for leptonica.">

     ROS wrapper for leptonica.

  </description>
  <author>Benjamin Pitzer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/leptonica</url>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -llept"/>
  </export>

</package><package name="nxt_lejos_navigation" path="/trunk/ros/nxt_lejos/nxt_lejos_navigation" repo="lejos-ros-pkg" repo_host="https://lejos.svn.sourceforge.net/svnroot/lejos">
  <description brief="nxt_lejos_navigation">
     The nxt_lejos_navigation package contains launch files and parameter
     files to start the move_base node in the ROS navigation stack in order to navigate
     a leJOS NXT robot. The nxt_lejos_lcp_proxy node acts as the robot
     controller and supplies sensor data and odometry data. It is not
     started by the launch file.
  </description>
  <author>Lawrie Griffiths</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/nxt_lejos_navigation</url>
</package><package name="laser_avoid" path="" repo="elektron_kinectbot" repo_host="https://github.com/RCPRG-ros-pkg/elektron_kinectbot">
  <description brief="laser_avoid">

     laser_avoid

  </description>
  <author>Maciej Stefanczyk</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/laser_avoid</url>

  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  
</package><package name="sharedmem_transport" path="" repo="ethzasl_message_transport" repo_host="https://github.com/ethz-asl/ros-message-transport">
  <description brief="sharedmem_transport">

     sharedmem_transport

  </description>
  <author>Cedric Pradalier</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://pr.willowgarage.com/wiki/sharedmem_transport</url>
  <depend package="message_transport_common"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lsharedmem_transport"/>
  </export>

</package><package name="cop_sr4_plugins" path="" repo="ias_perception" repo_host="http://code.in.tum.de/git/ias-perception.git">
  <description brief="a package that provide a cop Sensor plugin">
     a package to provide a Sensor plugin for cop
  </description>
  <author>U. Klank</author>
  <license>GPL</license>
  <depend package="pluginlib"/>
  <depend package="cognitive_perception"/>
  <depend package="sensor_msgs"/>
  <depend package="robot_self_filter"/>
  <!--depend package="eigen" /-->
  <export>
    <cpp cflags="-I${prefix}/include/" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib     -lSwissrangerRemoteSensor"/>
    <!--
    <pluginlib_tutorial_interfaces polygon="${prefix}/polygon_plugins.xml" shape="${prefix}/shape_plugins.xml"/>
    -->
    <cognitive_perception plugin="${prefix}/plugins.xml"/>
  </export>

</package><package name="zeroconf_android_master_browser" path="" repo="zeroconf_android" repo_host="https://github.com/stonier/zeroconf_android">
  <description brief="master browser app for android">

     Uses jmdns to do zeroconf discovery of various ros
     style services (ros, concert, app managers).

  </description>
  <author>Daniel Stonier</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/zeroconf_android_master_browser</url>
  
  <depend package="rosjava_bootstrap"/>
  <depend package="zeroconf_android_jmdns"/>
  
  <export>
    <rosjava-android-app target="android-10"/>
    <rosjava-src location="src"/>
    <rosjava-src location="gen"/>
    <rosjava-src location="res"/>
  </export>
</package><package name="rve_common_transformers" path="" repo="visualization_engine" repo_host="https://kforge.ros.org/visengine/hg">
  <description brief="rve_common_transformers">

     rve_common_transformers

  </description>
  <author>Josh Faust</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rve_common_transformers</url>
  <depend package="roscpp"/>
  <depend package="rve_properties"/>
  <depend package="rve_render_client"/>
  <depend package="rve_transformer"/>
  <depend package="rve_common"/>
  <depend package="rve_pluginloader"/>
  <depend package="tf2"/>
  <depend package="nav_msgs"/>
  <depend package="sensor_msgs"/>
  
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lrve_common_transformers"/>
  </export>

</package><package name="openinvent" path="/trunk/rtmros_common/openinvent" repo="rtm-ros-robotics/rtmros_common" repo_host="https://rtm-ros-robotics.googlecode.com/svn">
  <description brief="openinvent">

     openinvent

  </description>
  <author>AIST</author>
  <license>EPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.openrtp.jp/INVENT/</url>
  <depend package="openhrp3"/>

</package><package name="busbot_node" path="/trunk/stacks/drink_serving/busbot_node" repo="bosch-ros-pkg-e" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg-e/code">
  <description brief="iRobot Turtlebot ROS driver node">

     ROS bindings for the Turtlebot/Roomba driver.

     This is based on otl_roomba driver by OTL, ported to use
     turtlebot_driver instead.  This also contains a 'bonus' feature from
     the turtlebot driver by Xuwen Cao and Morgan Quigley.
     
  </description>
  <author>Ken Conley, Melonee Wise, Ben Pitzer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/turtlebot_node</url>
  <depend package="turtlebot_driver"/>
  <depend package="rospy"/>
  <depend package="tf"/>
  <depend package="nav_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="diagnostic_msgs"/>
  <depend package="kdl"/>
  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>

</package><package name="phspline_goal_passer" path="" repo="pkganeshpk" repo_host="https://bitbucket.org/pkganeshpk/phspline_planner">
  <description brief="phspline_goal_passer">

     goal_passer

  </description>
  <author>Eitan Marder-Eppstein</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/goal_passer</url>
  <depend package="phspline_generator"/>
  <depend package="roscpp"/>
  <depend package="costmap_2d"/>
  <depend package="pluginlib"/>
  <depend package="nav_core"/>

  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lgoal_passer"/>
    <nav_core plugin="${prefix}/bgp_plugin.xml"/>
  </export>

</package><package name="rtt_diagnostic_msgs" path="" repo="rtt_common_msgs" repo_host="http://git.mech.kuleuven.be/robotics/rtt_common_msgs.git">
  <description brief="rtt_diagnostic_msgs">

    Provides an rtt typekit for ROS diagnostic_msgs messages.

    It allows you to use ROS messages transparently in
    RTT components and applications.

    This package was automatically generated by the
    create_rtt_msgs generator and should not be manually
    modified.

    See the http://ros.org/wiki/diagnostic_msgs documentation
    for the documentation of the ROS messages in this
    typekit.

  </description>
  <author>create_rtt_msgs Generator</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rtt_rosnode</url>
  <depend package="rtt_rosnode"/>
  <depend package="diagnostic_msgs"/>
  <depend package="rtt_std_msgs"/>
  <depend package="rtt_rosgraph_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>


</package><package name="keyboard_smooth_safe" path="/trunk/stacks/drink_serving/keyboard_smooth_safe" repo="bosch-ros-pkg-e" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg-e/code">
  <description brief="keyboard_smooth_safe">

     keyboard_smooth_safe

  </description>
  <author>Adrian Funk</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/keyboard_smooth_safe</url>
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  <depend package="joy"/>
  <depend package="skin_driver"/>
  <depend package="skin_common"/>
  <depend package="actionlib"/>
  <depend package="std_msgs"/>
  <depend package="move_base_msgs"/>
</package><package name="two_lwr_machine" path="" repo="two_lwr_robot" repo_host="https://github.com/RCPRG-ros-pkg/two_lwr_robot">
  <description brief="two_lwr_machine">

     two_lwr_machine

  </description>
  <author>Konrad Banachowicz</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/two_law_machine</url>

</package><package name="ecl_license" path="/trunk/ecl_tools/ecl_license" repo="ecl_tools" repo_host="https://embedded-control-library.googlecode.com/svn">
  <description brief="Licensing details for the embedded control libraries">

     Maintains the ecl licenses and also provides an install
     target for deploying licenses with the ecl libraries.

  </description>
  <author>Daniel Stonier (d.stonier@gmail.com)</author>
  <license>BSD</license>
  <review notes="" status="doc reviewed"/>
  <url>http://snorriheim.dnsdojo.com/redmine/wiki/ecl</url>
  <rosbuild2>
  </rosbuild2>
</package><package name="raw_description" path="" repo="cob_common" repo_host="git://github.com/ipa320/cob_common">
  <description brief="cob_description">

  This package contains the description (mechanical, kinematic, visual,
  etc.) of the Care-O-bot robot. The files in this package are parsed and used by
  a variety of other components. Most users will not interact directly
  with this package.

  </description>
  <author>Florian Weisshardt</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_description</url>

  <depend package="convex_decomposition"/>
  <depend package="ivcon"/>
  <depend package="urdf"/>
  <depend package="cob_description"/>

</package><package name="wbc_msgs" path="" repo="whole_body_control" repo_host="https://github.com/poftwaresatent/whole_body_control">
  <description brief="Messages and services for the Stanford Whole-Body Controller.">
  </description>
  <author>Roland Philippsen</author>
  <license>LGPLv3</license>
  <review notes="" status="unreviewed"/>
  <url>http://stanford-wbc.sourceforge.net/</url>
  <export>
    <cpp cflags="-I${prefix}/msg/cpp"/>
  </export>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="motor_resetter" path="" repo="continuous_ops" repo_host="https://kforge.ros.org/contops/hg">
  <description brief="motor_resetter">

     motor_resetter

  </description>
  <author/>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/motor_resetter</url>
  <depend package="rospy"/>
  <depend package="std_msgs"/>
  <depend package="std_srvs"/>
  <depend package="rosbag"/>
  <depend package="diagnostic_msgs"/>
  
</package><package name="bosch_drivers_basic_nodes" path="/trunk/stacks/bosch_drivers/bosch_drivers_basic_nodes" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="bosch_drivers_basic_nodes">

     This package contains basic nodes for running Bosch MEMS sensors. The nodes
     also serve as examples. Further examples can be found in bosch_drivers_examples.

  </description>
  <author>Joshua Vasquez, Philip Roan. Maintained by Philip Roan</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/bosch_drivers_basic_nodes</url>
  <depend package="bosch_drivers_common"/>
  <depend package="arduino_interface"/>
  <depend package="sub20_interface"/>
  <depend package="bmc050_driver"/>
  <depend package="bmp085_driver"/>
  <depend package="bma180_driver"/> 
</package><package name="interactive_segmentation_textureless" path="/trunk/stacks/bosch_interactive_segmentation/interactive_segmentation_textureless" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="interactive_segmentation_textureless">

     interactive_segmentation_textureless

  </description>
  <author>Karol</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/interactive_segmentation_textureless</url>
  <depend package="std_msgs"/>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="cv_bridge"/>
  <depend package="eigen_conversions"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="image_geometry"/>
  <depend package="eigen"/>
  <depend package="geometry_msgs"/>
  <depend package="camera_self_filter"/>
  <depend package="opencv2"/>
  <depend package="object_part_decomposition"/>
  <depend package="tf"/>
  <depend package="tf_conversions"/>

</package><package name="busbot_bringup" path="/trunk/stacks/drink_serving/busbot_bringup" repo="bosch-ros-pkg-e" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg-e/code">
  <description brief="busbot_bringup">

     busbot_bringup provides roslaunch scripts for starting the BusBot base functionality. 

  </description>
  <author>Tully Foote, Ben Pitzer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/busbot_bringup</url>
  <depend package="app_manager"/>
  <depend package="turtlebot_driver"/>
  <depend package="turtlebot_node"/>
  <depend package="busbot_description"/>
  <depend package="joy"/>
  <depend package="robot_state_publisher"/>
  <depend package="pointcloud_to_laserscan"/>
  <depend package="openni_camera"/>
  <depend package="hokuyo_node"/>

  <!-- for video teleoperation -->
  <depend package="compressed_image_transport"/>
  
</package><package name="dynamixel" path="/trunk/Scan3D/dynamixel" repo="roblab-whge-ros-pkg" repo_host="http://roblab-whge-ros-pkg.googlecode.com/svn">
  <description brief="dynamixel">

     Provides a package to control dynamixels.

  </description>
  <author>B.Möller</author>
  <license>CreativeCommons BY-NC-SA License</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/dynamixel</url>
  <depend package="roscpp"/>
  <depend package="tf"/>

</package><package name="wubble2_robot" path="/trunk/arrg/ua_apps/wubble2_robot" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="Wubble2 robot hardware">

        wubble_robot

    </description>
    <author>Antons Rebguns</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/wubble2_robot</url>
    
    <depend package="roscpp"/>
    <depend package="rospy"/>
    
    <depend package="wubble_description"/>
    <depend package="erratic_player"/>
    <depend package="hokuyo_node"/>
    
    <depend package="wubble_teleop"/>
    <depend package="wubble_mapping"/>
    <depend package="wubble_actions"/>
    <depend package="wubble_2dnav"/>
    <depend package="phidgets_ros"/>

    <depend package="actionlib"/>
    <depend package="actionlib_msgs"/>
    <depend package="arm_navigation_msgs"/>
    <depend package="move_base_msgs"/>
    <depend package="object_manipulation_msgs"/>
    <depend package="geometry_msgs"/>
    <depend package="ua_audio_msgs"/>

    <depend package="dynamixel_driver"/>
    <depend package="dynamixel_controllers"/>
    <depend package="dynamixel_msgs"/>
    <depend package="dynamixel_hardware_interface"/>

    <depend package="wubble2_gripper_controller"/>
    <depend package="wubble_navigation_self_filter"/>
    <depend package="interpolated_ik_motion_planner"/>

</package><package name="object_tracking" path="/trunk/arrg/ua_vision/object_tracking" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="object_tracking">

        object_tracking

    </description>
    <author>Arizona Robotics Research Group</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/object_tracking</url>

    <depend package="roscpp"/>
    <depend package="opencv2"/>
    <depend package="cv_bridge"/>
    <depend package="image_transport"/>
    <depend package="message_filters"/>
    <depend package="std_msgs"/>
    <depend package="sensor_msgs"/>
    <depend package="geometry_msgs"/>
    <depend package="std_srvs"/>
    <depend package="background_filters"/>
    <depend package="visualization_msgs"/>
    <depend package="image_geometry"/>
    <depend package="tf"/>

</package><package name="log4cpp" path="" repo="orocos_toolchain" repo_host="https://git.gitorious.org/orocos-toolchain/log4cpp.git">
    <description brief="Log4cpp maintained by Orocos developers">
			This version of log4cpp deviates from the official release
			by adding custom category factories. Orocos requires this for
			setting up real-time logging.
    </description>
    <author>Stephen Roderick</author>
    <copyright>Stephen Roderick, Bastiaan Bakker, Cedric Le Goater, Steve Ostlind, Marcel 
		Harkema, Walter Stroebel, Glenn Scott and Tony Cheung.
    </copyright>
    <license>LGPL v2.1 or later</license>
    <url>http://log4cpp.sourceforge.net/</url>
		<export>
			<cpp cflags="-I${prefix}/../install/include" lflags="-L${prefix}/../install/lib -Wl,-rpath,${prefix}/../install/lib"/>
		</export>

</package><package name="arm_navigation_msgs" path="" repo="arm_navigation" repo_host="https://kforge.ros.org/armnavigation/armnavigation">
  <description brief="arm_navigation_msgs">

     arm_navigation_msgs

  </description>
  <author>Gil Jones</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/arm_navigation_msgs</url>
  <depend package="std_msgs"/>
  <depend package="actionlib_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="trajectory_msgs"/>
  <depend package="tf"/>

  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>

</package><package name="teleop_framework" path="" repo="generic_teleop" repo_host="https://github.com/skynetish/generic_teleop">

  <!-- Package summary -->
  <description brief="Generic tele-operation framework.">

    This package provides header files and a library which implement a
    framework for managing generic tele-operation source (e.g. keyboard,
    joystick, etc.) and sink (e.g. mobile robot base, pan-tilt unit, etc.)
    devices.

    Structures are provided which describe the state of tele-operation source
    devices.  Using these structures, a simple interface class is provided
    which defines low-level interactions with source devices.  Each type of
    tele-operation source device must implement this interface in order to
    be accessible to the framework.  This interface can also be used to
    interact with tele-operation source devices.  An adapter class is also
    provided which allows high-level interaction with tele-operation source
    devices.

  </description>
  <author>Kevin LeBlanc (kevin.canadian@gmail.com)</author>
  <license>BSD</license>
  <url>https://github.com/skynetish/generic_teleop/wiki</url>

  <!-- External dependencies -->
  <rosdep name="boost"/>

  <!-- Exports -->
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lteleop_framework"/>
  </export>

</package><package name="pose_model" path="/trunk/turn_taking/pose_model" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="pose_model">

     pose_model

  </description>
  <author>David Feil-Seifer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pose_model</url>
  <depend package="sensor_msgs"/>
  <depend package="opencv2"/>
  <depend package="yaml_cpp"/>
	<depend package="sound_play"/>
	<depend package="wait_for_response_action"/>
  <export>
	  <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lpose_model"/>
	</export>


</package><package name="openni_pointer" path="/trunk/jsk_openni_kinect/openni_pointer" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="openni_pointer">

openni_pointer broadcasts the OpenNI hand position using tf.

  </description>
  <author/>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/openni_pointer</url>

  <depend package="roscpp"/>
  <depend package="roslib"/>
  <depend package="geometry_msgs"/>
  <depend package="openni"/>
  <depend package="nite"/>
  <depend package="tf"/>

</package><package name="turtlebot_actions" path="" repo="turtlebot_apps" repo_host="https://kforge.ros.org/turtlebot/turtlebot_apps">
  <description brief="turtlebot_actions">

     turtlebot_actions provides several basic actionlib actions for the TurtleBot.

  </description>
  <author>Helen Oleynikova, Melonee Wise</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/turtlebot_actions</url>

  <depend package="roscpp"/>
  <depend package="actionlib"/>
  <depend package="tf"/>
  <rosdep name="opencv2"/>
  <depend package="image_transport"/>
  <depend package="common_rosdeps"/>
  <rosdep name="eigen"/>
  <depend package="cv_bridge"/>
  <depend package="image_geometry"/>
</package><package name="rcf_com_iowarrior" path="/trunk/RCF4ROS/com/rcf_com_iowarrior" repo="roblab-whge-ros-pkg" repo_host="http://roblab-whge-ros-pkg.googlecode.com/svn">
  <description brief="rcf_com_iowarrior">

     This package provides functions to communicate with a relay-card.

  </description>
  <author>B. König</author>
  <license>CreativeCommons BY-NC-SA License</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rcf_com_iowarrior</url>
  <depend package="roscpp"/>
  <depend package="rcf_control_protocol"/>
  <depend package="iowarrior"/>

</package><package name="hector_turtlebot_description" path="/trunk/hector_turtlebot/hector_turtlebot_description" repo="hector_turtlebot" repo_host="https://tu-darmstadt-ros-pkg.googlecode.com/svn">
  <description brief="hector_turtlebot_description provides a modified turtlebot model with a Hokuyo UTM-30LX LIDAR mounted below the Kinect">

     hector_turtlebot_description provides a modified turtlebot model with a Hokuyo UTM-30LX LIDAR mounted below the Kinect

  </description>
  <author>Stefan Kohlbrecher</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hector_turtlebot_description</url>
  <depend package="turtlebot_description"/>
  <depend package="hector_sensors_description"/>

</package><package name="mini_max_tutorials" path="/trunk/mini_max/mini_max_tutorials" repo="vanadium-ros-pkg" repo_host="http://vanadium-ros-pkg.googlecode.com/svn">
  <description brief="Tutorial code for Mini Maxwell Platform"/>
  <author>Michael Ferguson</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/mini_max_tutorials</url>
  <depend package="mini_max_defs"/>
  <depend package="rospy"/>
</package><package name="ias_pr2_2dnav" path="/stacks/ias_nav/ias_pr2_2dnav" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="ias_pr2_2dnav">

     ias_pr2_2dnav

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ias_pr2_2dnav</url>
  <depend package="ias_maps"/>
  <depend package="map_server"/>
  <depend package="pr2_navigation_global"/>
  <depend package="pr2_navigation_perception"/>
  <depend package="pr2_navigation_teleop"/>
  <depend package="pr2_machine"/>
  <depend package="pr2_nav_pcontroller"/>

</package><package name="robotino_local_planner" path="/robotino-ros-pkg/trunk/robotino/robotino_local_planner" repo="robotino-ros-pkg" repo_host="http://svn.openrobotino.org">
  <description brief="robotino_local_planner">
  </description>
  <author>indorewala@servicerobotics.eu</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/robotino_local_planner</url>
  <depend package="nav_core"/>
  <depend package="nav_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="costmap_2d"/>
  <depend package="tf"/>
  <depend package="pluginlib"/>

  <export>
    <nav_core plugin="${prefix}/blp_plugin.xml"/>
  </export>
</package><package name="display_parsec_time_offsets" path="" repo="parsec" repo_host="https://code.google.com/p/parsec">
  <description brief="display_parsec_time_offsets">

     display_parsec_time_offsets

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/display_parsec_time_offsets</url>
  <depend package="rospy"/>
  <depend package="nav_msgs"/>
  <depend package="sensor_msgs"/>

</package><package name="ANN_doors" path="" repo="pr2_doors" repo_host="https://kforge.ros.org/doors/hg">
  <description brief="ANN">

    ANN is a library written in C++, which supports data structures and
    algorithms for both exact and approximate nearest neighbor searching in
    arbitrarily high dimensions.

    In the nearest neighbor problem a set of data points in d-dimensional
    space is given. These points are preprocessed into a data structure, so
    that given any query point q, the nearest or generally k nearest points of
    P to q can be reported efficiently. The distance between two points can be
    defined in many ways. ANN assumes that distances are measured using any
    class of distance functions called Minkowski metrics. These include the
    well known Euclidean distance, Manhattan distance, and max distance.

    Based on our own experience, ANN performs quite efficiently for point sets
    ranging in size from thousands to hundreds of thousands, and in dimensions
    as high as 20. (For applications in significantly higher dimensions, the
    results are rather spotty, but you might try it anyway.)

    The library implements a number of different data structures, based on
    kd-trees and box-decomposition trees, and employs a couple of different
    search strategies.

    The library also comes with test programs for measuring the quality of
    performance of ANN on any particular data sets, as well as programs for
    visualizing the structure of the geometric data structures. 

  </description>

  <author>Sunil Arya and David Mount</author>
  <license>LGPL</license>
  <review notes="" status="3rdparty"/>
  <url>http://www.cs.umd.edu/~mount/ANN/</url>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lANN"/>
    <doxymaker external="http://www.cs.umd.edu/~mount/ANN/Files/1.1.1/ANNmanual_1.1.1.pdf"/>
  </export>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="katana_openrave_grasp_planner" path="" repo="katana_manipulation" repo_host="http://kos.informatik.uni-osnabrueck.de/katana_manipulation.git">
  <description brief="A grasp planner based on OpenRAVE for the Katana arm.">

     A grasp planner based on OpenRAVE for the Katana arm.

  </description>
  <author>Henning Deeken</author>
  <license>Apache</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/katana_openrave_grasp_planner</url>
  <export>
    <openrave pluginpath="${prefix}/lib"/>
  </export>
  <depend package="roscpp"/>
  <depend package="openrave"/>
  <depend package="posedetection_msgs"/>
  <depend package="tf"/>
  <depend package="mapping_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="motion_planning_msgs"/>
  <depend package="object_manipulation_msgs"/>
  <depend package="trajectory_msgs"/>
  <depend package="kinematics_msgs"/>
  <depend package="actionlib"/>
  <depend package="move_base_msgs"/>
  <depend package="std_msgs"/>
  <depend package="orrosplanning"/>

</package><package name="cr_capture" path="/trunk/cr_capture" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="cr_capture">

     cr_capture

  </description>
  <author>youhei kakiuchi, JSK</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cr_capture</url>
  <depend package="roscpp"/>
  <depend package="message_filters"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="image_transport"/>
  <depend package="tf"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="driver_base"/>
</package><package name="checkerboard_detector2" path="/trunk/freiburg_tools/checkerboard_detector2" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="Finds checkerboards and returns their 6D poses">
    Uses opencv to find checkboards and compute their 6D poses with respect to the image. Requires the image to be calibrated.
    Parameters:
    display - show the checkerboard detection
    rect%d_size_x - size of checker in x direction
    rect%d_size_y - size of checker in y direction
    grid%d_size_x - number of checkers in x direction
    grid%d_size_y - number of checkers in y direction
    
    There can be more than one grid%d declared, the numbers should grow consecutively starting at 0.
  </description>
  <author>Rosen Diankov, Felix Endres</author>
  <license>BSD</license>

  <depend package="roscpp"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="sensor_msgs"/>
  <depend package="image_transport"/>
  <depend package="geometry_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="tf"/>
</package><package name="eros_opencv" path="/trunk/packages/other/eros_opencv" repo="eros" repo_host="https://code.ros.org/svn/eros">
  <description brief="Embedded version of ros' opencv package">

    This is the trimmed down version of ros' opencv we use for embedded boards.

    Warning: this conflicts with ros' opencv2 package which builds the kitchen sink.

  </description>
  <author>Daniel Stonier (d.stonier@gmail.com)</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/eros_opencv</url>
  <depend package="eros_license"/>
  <depend package="eros_build"/>
  <versioncontrol type="svn" url="https://opencvlibrary.svn.sourceforge.net/svnroot/opencvlibrary/tags/latest_tested_snapshot/opencv"/>
  <export>
    <cpp cflags="-I${prefix}/build/fakeroot/include -I${prefix}/build/fakeroot/include/opencv" lflags="-Wl,-rpath,${prefix}/build/fakeroot/lib -L${prefix}/build/fakeroot/lib -lcvaux -lcv -lcxcore -lhighgui -lml"/>
  </export>

</package><package name="floating_faces" path="/trunk/floating_faces" repo="hacdc-ros-pkg" repo_host="http://hacdc-ros-pkg.googlecode.com/svn">
    <description brief="URDF for floating texture faces">
       What more can I say?
    </description>
    <author>Andrew Harris</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/floating_faces</url>

    <depend package="urdf"/>
    <depend package="xacro"/>
    <depend package="gazebo"/>
    <depend package="gazebo_tools"/>

    <export>
        <gazebo gazebo_media_path="${prefix}"/>
    </export>

</package><package name="thymio_navigation_driver" path="" repo="ethzasl_aseba" repo_host="https://github.com/ethz-asl/ros-aseba">
  <description brief="Navigation driver for Thymio II robot">

     This driver listens to cmd_vel and provides odometry for the Thymio II
     robot through asebaros.

  </description>
  <author>Stéphane Magnenat and Alexey Gribovskiy</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/thymio_navigation_driver</url>
  <depend package="asebaros"/>
  <depend package="rospy"/>
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="tf"/>

</package><package name="bilibot_node" path="/trunk/bilibot/bilibot_node" repo="bilibot-ros-pkg" repo_host="http://bilibot-ros-pkg.googlecode.com/svn">
  <description brief="bilibot_node">

     bilibot_node

  </description>
  <author>Jeff Rousseau</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/bilibot_node</url>

  <!-- sys deps -->
  <rosdep name="boost"/>
  <!-- ros deps -->
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="std_srvs"/>
  <depend package="sensor_msgs"/>
  <depend package="nav_msgs"/>
</package><package name="task_fsm" path="/trunk/cturtle/task_fsm" repo="seabee3-ros-pkg" repo_host="http://seabee3-ros-pkg.googlecode.com/svn">
  <description brief="task_fsm">

     task_fsm

  </description>
  <author>Edward</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/task_fsm</url>
  <depend package="common_utils"/>
  <export>
    <cpp cflags="-std=c++0x -I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -ltask_fsm"/>
  </export>

</package><package name="kinect_teleop" path="/trunk/pr2_teleop_imitation/kinect_teleop" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="kinect_teleop">

     kinect_teleop

  </description>
  <author>Jan Wülfing</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/kinect_teleop</url>
  <depend package="eigen"/>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="pr2_mechanism_msgs"/>
  <depend package="pr2_controller_manager"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="actionlib"/>
  <depend package="roslib"/>
  <depend package="nav_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="message_filters"/>
  <depend package="robot_state_publisher"/>
  <depend package="openni"/>
  <depend package="kdl"/>
  <depend package="tf"/>
  
  <rosdep name="ps-engine"/>

</package><package name="re_object_recorder" path="/public/tags/latest/object_scanning/re_object_recorder" repo="roboearth" repo_host="https://ipvs.informatik.uni-stuttgart.de/roboearth/repos">
  <description brief="Kinect Object Recorder User Interface">
     <p>
     This package provides a Qt4 user interface for creating, storing and
     uploading Object Models using a Kinect camera and multiple markers.
     </p>

     <p>
     This package is part of RoboEarth (EU FP7, grant 248942).
     </p>
  </description>

  <author>Andreas Koch</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/re_object_recorder</url>
    
  <rosdep name="libqt4-dev"/>
  <rosdep name="opencv2"/>

  <depend package="roscpp"/>
  <depend package="pcl"/>
  <depend package="sensor_msgs"/>
  <depend package="re_srvs"/>
  <depend package="re_vision"/>
  <depend package="tf"/>

  <export>
       <cpp cflags="-I${prefix}/include/" lflags="-L${prefix}/lib -Wl,-rpath,-L${prefix}/lib -lqminizip"/>
  </export>

</package><package name="ds_turtle_2dnav" path="/trunk/stacks/drink_serving/ds_turtle_2dnav" repo="bosch-ros-pkg-e" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg-e/code">
  <description brief="ds_turtle_2dnav">

     ds_turtle_2dnav

  </description>
  <author>Sarah Osentoski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ds_turtle_2dnav</url>
  <depend package="map_server"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="actionlib"/>
  <depend package="move_base_msgs"/>
  <depend package="yaml_cpp"/>
  <depend package="tf"/>
  <depend package="busbot_navigation"/>

</package><package name="win_pyyaml" path="" repo="win_ros" repo_host="https://github.com/stonier/win_ros">
  <description brief="python yaml module for windows">

Build script for python yaml parser.

  </description>
  <author>Daniel Stonier</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/rosinstall</url>
  <!-- Indirectly exporting this straight from svn, so don't need it as a ros dependency. -->
  <!-- <depend package="vcstools"/> -->

</package><package name="single_joint_position_action" path="/stacks/pr2_controllers/trunk/single_joint_position_action" repo="pr2_controllers" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="single_joint_position_action">

  The single joint position action is a node that provides an action
  interface for commanding a trajectory to move a joint to a particular
  position. The action reports success when the joint reaches the desired
  position.

  </description>
  <author>Stuart Glaser</author>
  <license>BSD</license>
  <review notes="http://www.ros.org/wiki/single_joint_position_action/Reviews/2010-01-13_Doc_Review" status="Doc reviewed"/>
  <url>http://ros.org/wiki/single_joint_position_action</url>
  
  <depend package="roscpp"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="actionlib"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="clear_costmap_recovery" path="" repo="navigation" repo_host="https://kforge.ros.org/navigation/navigation">
  <description brief="clear_costmap_recovery">

     This package provides a recovery behavior for the navigation stack that attempts to clear space by reverting the costmaps used by the navigation stack to the static map outside of a given area.

  </description>
  <author>Eitan Marder-Eppstein</author>
  <license>BSD</license>
  <review notes="" status="Doc reviewed"/>
  <url>http://ros.org/wiki/clear_costmap_recovery</url>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="costmap_2d"/>
  <depend package="nav_core"/>
  <depend package="pluginlib"/>
  <depend package="common_rosdeps"/>
  <rosdep name="eigen"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lclear_costmap_recovery"/>
    <nav_core plugin="${prefix}/ccr_plugin.xml"/>
  </export>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="lse_miniq_driver" path="/stacks/lse_miniq_robot/trunk/lse_miniq_driver" repo="lse_miniq_robot" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="lse_miniq_driver">

     Hardware driver for the LSE miniQ robot.

  </description>
  <author>Gonçalo Cabrita</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/lse_miniq_driver</url>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="tf"/>
  <depend package="nav_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="cereal_port"/>
  <depend package="lse_sensor_msgs"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="lse_miniq_msgs"/>

</package><package name="cob_scenario_example" path="" repo="cob_tutorials" repo_host="git://github.com/ipa320/cob_tutorials">
  <description brief="cob_scenario_example">

     This package is an example scenario package. You can use this as a copy and paste boilerplate for setting u your own scenario.

  </description>
  <author>Florian Weisshardt</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_scenario_example</url>

  <depend package="cob_bringup"/>
  <depend package="cob_navigation_global"/>
  <depend package="cob_generic_states"/>

</package><package name="orrosplanning" path="/trunk/openrave_planning/orrosplanning" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="OpenRAVE Plugin for ROS Planning">
    Contains robot ik solvers, planners, and commonly used functions that integrate with the ROS framework.
  </description>
  <author>Rosen Diankov (rosen.diankov@gmail.com)</author>
  <license>BSD</license>
  <export>
    <openrave pluginpath="${prefix}/lib"/>
  </export>
  <depend package="roscpp"/>
  <depend package="openrave"/>
  <depend package="openraveros"/>
  <depend package="posedetection_msgs"/>
  <depend package="tf"/>
  <depend package="arm_navigation_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
<!--   <depend package="object_manipulation_msgs"/> -->
  <depend package="trajectory_msgs"/>
  <depend package="kinematics_msgs"/>
  <depend package="actionlib"/>
  <depend package="std_msgs"/>
</package><package name="esc_approx" path="/trunk/extremum_seeking/esc_approx" repo="dri-ros-pkg" repo_host="https://svn.3me.tudelft.nl/dri-ros-pkg">
  <description brief="esc_approx">

     Approximation-based extremum seeking control

  </description>
  <author>Berk Calli</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/esc_approx</url>
  <depend package="roscpp"/>
  <depend package="esc_common"/>
  <depend package="esc_ros"/>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lesc_approx"/>
  </export>
  
  <rosdep name="eigen"/>
</package><package name="GMM_classify" path="/trunk/OIT_experimental/GMM_classify" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="GMM_classify">

     GMM_classify

  </description>
  <author>David Feil-Seifer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/GMM_classify</url>
  <depend package="feature_extractor"/>
  <depend package="opencv2"/>

</package><package name="videre_stereo_cam" path="/trunk/arrg/ua_drivers/videre_stereo_cam" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="Driver for Videre Stereo cameras">
        This driver supports both regular and STOC Videre Stereo cameras. It exposes standard ROS interface for
        cameras and publishes camera_info and image_raw topics pair for both left and right imager of the stereo
        camera. This set of topics can change depending on the selected processing mode (STOC devices only). Most
        of the configuration can be done while driver is running via dynamic_reconfigure GUI.
    </description>

    <author>Antons Rebguns</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/videre_stereo_cam</url>

    <depend package="roscpp"/>
    <depend package="stereo_image_proc"/>
    <depend package="image_transport"/>
    <depend package="diagnostic_updater"/>
    <depend package="sensor_msgs"/>
    <depend package="stereo_msgs"/>
    <depend package="dynamic_reconfigure"/>
    <depend package="driver_base"/>
    <depend package="tf"/>

    <export>
        <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -ldcam1394"/>
    </export>

    <rosdep name="libdc1394-dev"/>
</package><package name="meka_bringup" path="/trunk/meka_robot/meka_bringup" repo="meka-ros" repo_host="http://mekabot.com/meka-ros">
  <description brief="meka_bringup">
     

  </description>
  <author/>
  <license>Modified BSD</license>
  <review notes="" status="unreviewed"/>
  <url/>

  <depend package="meka_description"/>  
  <depend package="robot_state_publisher"/>

</package><package name="art_teleop" path="/trunk/stacks/art_vehicle/art_teleop" repo="utexas-art-ros-pkg" repo_host="http://utexas-art-ros-pkg.googlecode.com/svn">
  <description brief="ART vehicle tele-operation">

     Tele-operation scripts for driving the ART autonomous vehicle
     under human control.

  </description>
  <author>Austin Robot Technology, Jack O'Quin</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://www.ros.org/wiki/art_teleop</url>

  <depend package="art_common"/>
  <depend package="art_msgs"/>
  <depend package="driver_base"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="rospy"/>
  <depend package="std_msgs"/>

  <!-- declare run-time dependency on Qt4 python package -->
  <rosdep name="python-qt-bindings"/>

</package><package name="multi_robot_visualization" path="/utils/multi_robot_visualization" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="multi_robot_visualization">

     multi_robot_visualization

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/multi_robot_visualization</url>
  <depend package="tf_relay"/>
  <depend package="foreign_relay"/>
  <depend package="rosie_description"/>
  <depend package="pr2_description"/>
  <depend package="map_server"/>
  <depend package="ias_maps"/>

</package><package name="accompany_example_service" path="" repo="accompany" repo_host="git://github.com/ipa320/accompany">
  <description brief="accompany_example_service">

     accompany_example_service is an example package that implements a service providing component, i.e. a component that may be called to deliver some requested response, and a service calling component which initiates the service at the server side.

  </description>
  <author>Richard Bormann</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/accompany_example_service</url>

  <depend package="roscpp"/>

</package><package name="task_recorder2" path="" repo="usc-clmc-ros-pkg" repo_host="https://github.com/usc-clmc/usc-clmc-ros-pkg">
  <description brief="task_recorder2">

     task_recorder2

  </description>
  <author>Peter Pastor</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/task_recorder2</url>

  <depend package="roscpp"/>
  <depend package="rosbag"/>

  <depend package="tf"/>
  <depend package="kdl"/>

  <depend package="filters"/>
  <depend package="message_filters"/>

  <depend package="sensor_msgs"/>
  <depend package="angles"/>
  <depend package="usc_utilities"/>

  <depend package="alsa_audio"/>

  <depend package="task_recorder2_msgs"/>
  <depend package="task_recorder2_utilities"/>
  
  <depend package="dynamic_movement_primitive"/>

  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/srv_gen/cpp/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -ltask_recorder2 -ltask_recorder2_manager -ltask_recorder2_manager_client"/>
  </export>

</package><package name="erratic_navigation" path="" repo="pkganeshpk" repo_host="https://bitbucket.org/pkganeshpk/phspline_planner">
    <description brief="Navigation stack configuration for Erratic robot">
        This package contains configuration and launch files necessary to run
        ROS navigation stack on the Erratic robot.
    </description>

    <author>Antons Rebguns</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/erratic_navigation</url>

    <depend package="move_base"/>
    <depend package="amcl"/>
    <depend package="gmapping"/>
    <depend package="topic_tools"/>
</package><package name="pddl_planner" path="/trunk/pddl/pddl_planner" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="pddl planner">
    pddl planner
  </description>
  <author>Ryohei Ueda (ueda@jsk.t.u-tokyo.ac.jp)</author>
  <license>Apache License 2.0</license>
  <depend package="pddl_msgs"/>
  <depend package="ff"/>
  <depend package="ffha"/>
  <depend package="rospy"/>
  <depend package="actionlib"/>
</package><package name="face_detection" path="/trunk/face_detection" repo="hacdc-ros-pkg" repo_host="http://hacdc-ros-pkg.googlecode.com/svn">
  <description brief="face_detection">

     Basic python based face detector package.

  </description>
  <author>Andrew J. Harris</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/face_detection</url>
  <depend package="std_msgs"/>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="opencv2"/>
  <depend package="image_geometry"/>
  <depend package="cv_bridge"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="tf"/>
  <depend package="image_transport"/>

</package><package name="probabilistic_grasp_planner" path="/stacks/object_manipulation/branches/0.6-branch/probabilistic_grasp_planner" repo="object_manipulation" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="probabilistic_grasp_planner">
    Takes potentially found models and clusters in a scene, and plans
    grasps which are robust to positioning and model uncertainty.
  </description>
  <author>Peter Brook</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/probabilistic_grasp_planner</url>

  <depend package="std_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="household_objects_database"/>
  <depend package="household_objects_database_msgs"/>
  <depend package="object_manipulator"/>
  <depend package="object_manipulation_msgs"/>
  <depend package="common_rosdeps"/> 
  <!--depend package="profiling"/-->
</package><package name="libvml" path="/trunk/cturtle/libvml" repo="seabee3-ros-pkg" repo_host="http://seabee3-ros-pkg.googlecode.com/svn">
  <description brief="libvml">

     libvml

  </description>
  <author>Edward T. Kaszubski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/libvml</url>
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp -I${prefix}/srv/cpp" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -llibvml"/>
  </export>

</package><package name="pi_teleop" path="/trunk/experimental/pi_teleop" repo="pi-robot-ros-pkg" repo_host="http://pi-robot-ros-pkg.googlecode.com/svn">
  <description brief="pi_teleop">

     HTML5/Rosbridge teleop control for both tablet and desktop browsers

  </description>
  <author>Patrick Goebel</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pi_teleop</url>
  <depend package="rospy"/>
  <depend package="rosbridge"/>
  <depend package="mjpeg_server"/>
  <depend package="dynamixel_controllers"/>
  <depend package="dynamixel_driver"/>
  <depend package="dynamixel_msgs"/>
  <rosdep name="apcalc"/> 
 
</package><package name="rms_youbot_environment" path="/trunk/distribution/wpi-rail-ros-pkg/rms/rms_youbot_environment" repo="wpi-rail-ros-pkg" repo_host="http://wpi-rail.googlecode.com/svn">
	<description brief="Launch files used to start a YouBot RMS environment server.">Launch files used to start a YouBot Gazebo RMS environment server. Note that these launch files do not launch any nodes on the YouBot itself.</description>

	<author>Russell Toris</author>
	<license>BSD</license>
	<review notes="" status="unreviewed"/>
	<url>http://ros.org/wiki/rms_youbot_environment</url>

	<depend package="usb_cam"/>
	<depend package="rms_common"/>
	<depend package="youbot_overhead_localization"/>
</package><package name="nxt_assisted_teleop" path="" repo="foote-nxt" repo_host="https://nxt.foote-ros-pkg.googlecode.com/hg/">
  <description brief="nxt_assisted_teleop">

     nxt_assisted_teleop

  </description>
  <author>Wim Meeussen</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/nxt_assisted_teleop</url>
  <depend package="nxt_ros"/>
  <depend package="nxt_robot_sensor_car"/>
  <depend package="nxt_robot_gyro_car"/>
  <depend package="costmap_2d"/>
  <depend package="base_local_planner"/>

</package><package name="auv_nav_sim" path="/trunk/hwu_osl_software/auv_nav_sim" repo="hwu-osl-ros-pkg" repo_host="http://hwu-osl-ros-pkg.googlecode.com/svn">
  <description brief="A very basic navigator simulator node for AUVs.">

	This node produces very rough simulated navigation status of an AUV based on the vehicle force requests it receives. It simulates neither the hydrodynamics nor acceleration of the vehicle, but may serve as a good enough approximation for testing most pilot functionality and higher level nodes. It should not be used for tuning vehicle PID controllers.

  </description>
  <author>Joel Cartwright</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>TODO</url>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="tf"/>
  <depend package="osl_core"/>
  <depend package="auv_msgs"/>

</package><package name="turtlebot_navigation" path="" repo="turtlebot_apps" repo_host="https://kforge.ros.org/turtlebot/turtlebot_apps">
  <description brief="turtlebot_navigation">

     turtlebot_navigation

  </description>
  <author>Tully Foote</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/turtlebot_navigation</url>
  <depend package="move_base"/>
  <depend package="gmapping"/>
</package><package name="rl_common" path="/trunk/stacks/reinforcement_learning/rl_common" repo="rl-texplore-ros-pkg" repo_host="http://rl-texplore-ros-pkg.googlecode.com/svn">
  <description brief="rl_common">

     Common files required for RL agents and environments. Including the interface defining agents and environments. Developed by <a href="http://www.cs.utexas.edu/~todd/">Todd Hester</a> and <a href="http://www.cs.utexas.edu/~pstone/">Peter Stone</a> at the University of Texas at Austin.

  </description>
  <author>Todd Hester</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rl_common</url>

  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>

</package><package name="topic_testbench" path="" repo="iheart-ros-pkg" repo_host="git://github.com/IHeartRobotics/iheart-ros-pkg">
  <description brief="topic_testbench">
Test a topic update frequency.
  </description>
  <author>I Heart Engineering</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/topic_testbench</url>
  <depend package="roscpp"/>
  <depend package="pluginlib"/>
  <depend package="testbench"/>
  <export>
    <testbench plugin="${prefix}/topic_testbench.xml"/>
  </export>
</package><package name="corobot_teleop" path="/trunk/Diamondback/Corobot/corobot_teleop" repo="roscorobot" repo_host="http://svn.code.sf.net/p/roscorobot/code">
  <description brief="corobot_teleop">

     Teleoperation package that permits to control the Corobot. It also permits to connect to a distant Corobot.
     Data such as Camera, sensor (IR, encoder, batterie life) values can be read.

  </description>
  <author>Morgan Cormier/Gang Li/mcormier@coroware.com</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/corobot_teleop</url>

  <depend package="eros_build"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="PhidgetMotor"/>
  <depend package="sensor_msgs"/>
  <depend package="PhidgetServo"/>
  <depend package="corobot_arm"/>
  <depend package="corobot_phidgetIK"/>
  <depend package="corobot_srvs"/>
  <depend package="corobot_msgs"/>
  <depend package="corobot_camera"/>
  <depend package="corobot_hokuyo"/>
  <depend package="corobot_state_tf"/>
  <depend package="roslaunch"/>
  <depend package="corobot_ssc32"/>
  <depend package="corobot_pantilt"/>
  <depend package="corobot_gps"/>
  <depend package="joy"/>
  <depend package="corobot_joystick"/>
  <depend package="openni_camera"/>
  <depend package="nav_msgs"/>
  <rosdep name="qt4"/>
  
</package><package name="ar_pose_demo" path="" repo="camera_pose_estimation" repo_host="http://git.mech.kuleuven.be/robotics/camera_pose_estimation.git">
  <description brief="ar_pose_demo">

     ar_pose_demo: This package demonstrates the tracking of a AR marker with multiple cameras 
                    it uses a BFL EKF estimator to merge based on the covariances (the pose_ekf package)
                    The patch is used to extend ar_pose.
                    The nodes are distributed over different machines, this is defined in the machines package.
  </description>
  <author>Koen Buys</author>
  <license>BSD, GPL, LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ar_pose_demo</url>
  <depend package="prosilica_camera"/>
  <depend package="tf"/>
  <depend package="ar_pose"/>
  <depend package="ar_pose_world_convertor"/>
  <depend package="image_view"/>
  <depend package="ar_pose_ekf"/>
</package><package name="actionlib_tutorials" path="/stacks/common_tutorials/trunk/actionlib_tutorials" repo="common_tutorials" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="actionlib_tutorials">
    This package provides detailed tutorials for using actions.


  </description>
  <author>Melonee Wise</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://pr.willowgarage.com/wiki/actionlib_tutorials</url>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="roslib"/>
  <depend package="std_msgs"/>
  <depend package="rosconsole"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>

  
  <export>
    <cpp cflags="-I${prefix}/msg/cpp"/>
  </export> 

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="task_recorder" path="" repo="usc-clmc-ros-pkg" repo_host="https://github.com/usc-clmc/usc-clmc-ros-pkg">
  <description brief="task_recorder">

     task_recorder

  </description>
  <author>Peter Pastor</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/task_recorder</url>

  <depend package="roscpp"/>
  <depend package="rosbag"/>
  <depend package="tf"/>

  <depend package="kdl"/>

  <depend package="filters"/>
  <depend package="message_filters"/>
  <depend package="sensor_msgs"/>

  <depend package="angles"/>
  <depend package="usc_utilities"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -ltask_recorder"/>
  </export>

</package><package name="turtlebot_node" path="" repo="turtlebot" repo_host="https://kforge.ros.org/turtlebot/turtlebot">
  <description brief="iRobot Turtlebot ROS driver node">

     ROS bindings for the Turtlebot/Roomba driver.

     This is based on otl_roomba driver by OTL, ported to use
     turtlebot_driver instead.  This also contains a 'bonus' feature from
     the turtlebot driver by Xuwen Cao and Morgan Quigley.
     
  </description>
  <author>Ken Conley, Melonee Wise</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/turtlebot_node</url>
  <depend package="turtlebot_driver"/>
  <depend package="rospy"/>
  <depend package="tf"/>
  <depend package="nav_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="diagnostic_msgs"/>
  <depend package="kdl"/>
  <depend package="dynamic_reconfigure"/>
  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>
  <rosdep name="daemontools"/>

</package><package name="fanuc_config" path="/trunk/fanuc/fanuc_config" repo="swri-ros-pkg" repo_host="http://swri-ros-pkg.googlecode.com/svn">
  <description brief="fanuc_config">

     fanuc_config

  </description>
  <author>Christina Gomez</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/fanuc_config</url>

</package><package name="body_msgs" path="/trunk/kinect_utils/body_msgs" repo="mit-ros-pkg-trunk" repo_host="https://svn.csail.mit.edu/mit-ros-pkg">
  <description brief="Messages for body primitives">
  
    body_msgs provides messages for common body primitives
    such as hands, skeletons and joints. These primitives are designed
    to provide a common data type and facilitate interoperability
    throughout the system. 

     

  </description>
  <author>Garratt</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/body_msgs</url>
  <depend package="mapping_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>

</package><package name="turtle_actionlib" path="/stacks/common_tutorials/trunk/turtle_actionlib" repo="common_tutorials" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="turtle_actionlib">

     turtle_actionlib demonstrates how to write an action server and client with the turtlesim. The shape_server provides and action interface for drawing regular polygons with the turtlesim. 

  </description>
  <author>Melonee Wise</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/turtle_actionlib</url>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="rosconsole"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="turtlesim"/>
  <depend package="angles"/>

  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/srv/cpp -I${prefix}/msg/cpp" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib"/>
  </export>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="dynamic_movement_primitive_utilities" path="" repo="usc-clmc-ros-pkg" repo_host="https://github.com/usc-clmc/usc-clmc-ros-pkg">
  <description brief="dynamic_movement_primitive_utilities">

     dynamic_movement_primitive_utilities

  </description>
  <author>Peter Pastor, Mrinal Kalakrishnan</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/dynamic_movement_primitive_utilities</url>

  <depend package="roscpp"/>
  <depend package="rosbag"/>
  <depend package="tf"/>

  <depend package="geometry_msgs"/>
  <depend package="arm_controller_msgs"/>
  <depend package="sensor_msgs"/>

  <depend package="usc_utilities"/>
  <depend package="visualization_utilities"/>

  <depend package="inverse_kinematics"/>
  <depend package="robot_info"/>

  <depend package="filters"/>
  <depend package="dynamic_movement_primitive"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -ldynamic_movement_primitive_utilities"/>
  </export>

</package><package name="pr2_manipulation_process_module" path="" repo="cram_pr2" repo_host="https://github.com/moesenle/cram_pr2">
  <description brief="pr2_manipulation_process_module">

     pr2_manipulation_process_module

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_manipulation_process_module</url>
  <depend package="cram_process_modules"/>
  <depend package="designators_ros"/>
  <depend package="actionlib_lisp"/>
  <depend package="cram_roslisp_common"/>
  <depend package="cram_reasoning"/>
  <depend package="cram_plan_failures"/>
  <depend package="cram_plan_knowledge"/>
  <depend package="cram_projection"/>
  <depend package="cram_pr2_knowledge"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="kinematics_msgs"/>
  <depend package="arm_navigation_msgs"/>
  <depend package="vision_srvs"/>
  <depend package="trivial_garbage"/>
  <depend package="std_srvs"/>
  <depend package="alexandria"/>
  <depend package="semantic_map_collision_environment"/>
  <depend package="object_manipulation_msgs"/>
  <depend package="pr2_gripper_sensor_msgs"/>
  <depend package="arm_navigation_msgs"/>
  <depend package="pr2_mechanism_msgs"/>
  <depend package="pr2_manipulation_knowledge"/>

</package><package name="grasp_template_planning" path="" repo="usc-clmc-ros-pkg" repo_host="https://github.com/usc-clmc/usc-clmc-ros-pkg">
  <description brief="This package provides tools to generate a grasp library and plan grasps on point-clouds from unknown objects.">

     grasp_template_planning

  </description>
  <author>Alexander Herzog (USC)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/template_based_grasp_planning</url>

  <depend package="eigen"/>
  <depend package="pcl"/>
  
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  <depend package="tabletop_object_detector"/>
  
  <depend package="grasp_template"/>
  
    <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lgrasp_template_planning"/>
  </export>
  
</package><package name="lejosKinect" path="/trunk/ros/nxt_lejos_ros/lejosKinect" repo="lejos-ros-pkg" repo_host="https://lejos.svn.sourceforge.net/svnroot/lejos">
	<description brief="NXTLoader">
		NXTLoader
	</description>
	<author>Juan Antonio Brenha Moral</author>
	<license>BSD</license>
	<review notes="" status="unreviewed"/>
	<url>http://ros.org/wiki/nxt_lejos_ros</url>

	<depend package="rosjava"/>
	<depend package="std_msgs"/>
	<depend package="sensor_msgs"/>

	<export>
	    	<rosjava-src location="src"/> 
	    	<rosjava-pathelement artifactId="org.lejos.ros.nodes.lejosKinect" built="true" groupId="org.lejos.ros" location="target/" version="0.0.1"/>

			<!-- EXTERNAL LIBRARIES -->
			<!-- 
			README:
			It is necessary to define the absolute path where 
			you have installed the following libraries:
			
			+ javacv
			+ javacpp
			+ javacv-linux-x86
			
			<rosjava-pathelement location="<ABSOLUTE PATH>/javacv.jar" />
	    	<rosjava-pathelement location="<ABSOLUTE PATH>/javacpp.jar" />
	    	<rosjava-pathelement location="<ABSOLUTE PATH>/javacv-linux-x86.jar" />
			
			 -->
			<rosjava-pathelement location="/home/jabrena/ros3/workspace/nxt_lejos_ros/lejosKinect/lib/javacv.jar"/>
	    	<rosjava-pathelement location="/home/jabrena/ros3/workspace/nxt_lejos_ros/lejosKinect/lib/javacpp.jar"/>
	    	<rosjava-pathelement location="/home/jabrena/ros3/workspace/nxt_lejos_ros/lejosKinect/lib/javacv-linux-x86.jar"/>	
	    </export>

</package><package name="re2darmSimExampleIK" path="/darpa_arm_sim_servers/re2darmSimExampleIK" repo="darpa_arm_sim_servers" repo_host="http://svn.thearmrobot.com">
  <description brief="Example application to get inverse kinematics of the WAM">

     darm_example_ik

  </description>
  <author>RE2</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/darm_example_ik</url>

  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="kinematics_msgs"/>
  <depend package="pr2_controller_interface"/>
  <depend package="pr2_mechanism_model"/>
  <depend package="kdl_parser"/>

  <depend package="WAM_msgs"/>
  <depend package="BHand_msgs"/>
  <depend package="DPPanTilt_msgs"/>
  <depend package="TestExecution_msgs"/>

  <depend package="gazebo"/>
  <depend package="tf"/>
  <depend package="tf_conversions"/>

  <depend package="simple_sphere_detector"/>
  <!--  point_cloud_converter needed for running but not building  -->
  <depend package="point_cloud_converter"/>

</package><package name="dynamixel_tutorials" path="/stacks/dynamixel_motor/trunk/dynamixel_tutorials" repo="dynamixel_motor" repo_host="https://ua-ros-pkg.googlecode.com/svn">
    <description brief="Example configuration and launch file for dynamixel_motor stack">
        Example configuration and launch file for dynamixel_motor stack.
    </description>
    
    <author>Antons Rebguns</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/dynamixel_tutorials</url>
    
    <depend package="dynamixel_controllers"/>
</package><package name="tilting_servo" path="/trunk/tilting_servo" repo="astar-ros-pkg" repo_host="http://astar-ros-pkg.googlecode.com/svn">
  <description brief="tilting_servo">

     A Dynamixel servo driver for tilting servo using in tilting laser scanners or any other continuous tilting mechanism.

  </description>
  <author>Soh De Loong</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/tilting_servo</url>
    <depend package="tf"/>
  <depend package="std_msgs"/>
  <depend package="roscpp"/>
  <depend package="actionlib_msgs"/>
  <depend package="actionlib"/>
</package><package name="bondpy" path="" repo="bond_core" repo_host="https://kforge.ros.org/common/bondcore">
  <description brief="bondpy">

     Python implementation of bond, a mechanism for checking when
     another process has terminated.

  </description>
  <author>Stuart Glaser</author>
  <license>BSD</license>
  <review notes="http://www.ros.org/wiki/bond/Reviews/2010-07-28_API_Review" status="API cleared"/>
  <url>http://ros.org/wiki/bondpy</url>
  <depend package="bond"/>
  <depend package="rospy"/>
  <depend package="smclib"/>

</package><package name="distance_field" path="" repo="arm_navigation_experimental" repo_host="https://kforge.ros.org/armnavigation/experimental">
  <description brief="Computes euclidean distance transforms (EDT) of a 3-D voxel grid">

This package contains algorithms that can compute the
Euclidean Distance Transform (EDT) of a 3-D voxel grid. The input to these algorithms is
an array of points (which could represent the positions of obstacles in the world). 
The EDT provides a voxel grid in which in which each cell contains the distance to the
closest obstacle. The VoxelGrid class can also be used as a generic, templatized container for a discretized 3-D voxel grid.

  </description>
  <author>Mrinal Kalakrishnan / mail@mrinal.net</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/distance_field</url>

  <depend package="roscpp"/>
  <depend package="visualization_msgs"/>
  <depend package="arm_navigation_msgs"/>
  <depend package="bullet"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -ldistance_field"/>
  </export>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="ecl_converters" path="/trunk/ecl_core/ecl_converters" repo="ecl_core" repo_host="https://embedded-control-library.googlecode.com/svn">
  <description brief="Fast and convenient type converters">

     Some fast/convenient type converters, mostly for char strings or strings.
     These are not really fully fleshed out, alot of them could use the addition for
     the whole range of fundamental types (e.g. all integers, not just int, unsigned int).
     
     They will come as the need arises.

  </description>
  <author>Daniel Stonier (d.stonier@gmail.com)</author>
  <license>BSD</license>
  <review notes="" status="doc reviewed"/>
  <url>http://snorriheim.dnsdojo.com/redmine/wiki/ecl</url>
  
  <depend package="ecl_license"/>
  <depend package="ecl_build"/>
  <depend package="ecl_config"/>
  <depend package="ecl_errors"/>
  <depend package="ecl_exceptions"/>
  <depend package="ecl_mpl"/>
  <depend package="ecl_concepts"/>
  <depend package="ecl_type_traits"/>
  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>
  <rosbuild2>
    <export>
      <include_dir>${ecl_converters_SOURCE_DIR}/include</include_dir>
    </export>
      <depend package="ecl_license"/>
      <depend package="ecl_build"/>
      <depend package="ecl_config"/>
      <depend package="ecl_errors"/>
      <depend package="ecl_exceptions"/>
      <depend package="ecl_mpl"/>
      <depend package="ecl_concepts"/>
      <depend package="ecl_type_traits"/>
  </rosbuild2>
</package><package name="wouse" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="wouse">

    The wouse package is software for the &quot;Wince-mouse&quot;: optical mouse components mounted to a pair of glasses such that the mouse reports the movement of the skin near the temples.  This device was developed under the Robots for Humanity project to act as a reliable, wearable run-stop for persons with severe physical disabilities.

  </description>
  <author>Phillip M. Grice, Advisor: Prof. Charlie Kemp, Lab: The Healthcare Robotoics Lab at Georgia Tech.</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/wouse</url>
  <depend package="rospy"/>
  <depend package="std_msgs"/>
  <depend package="std_srvs"/>
  <depend package="pr2_power_board"/>
  <depend package="sound_play"/>

  <rosdep name="python-pygame"/>

</package><package name="robotino_arm_navigation" path="/robotino-ros-pkg/trunk/robotino_grappler/robotino_arm_navigation" repo="robotino-ros-pkg" repo_host="http://svn.openrobotino.org">
  <description brief="robotino_arm_navigation">

     robotino_arm_navigation

  </description>
  <author>robotino</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/robotino_arm_navigation</url>
  <depend package="planning_environment"/>
  <depend package="arm_kinematics_constraint_aware"/>
  <depend package="ompl_ros_interface"/>
  <depend package="trajectory_filter_server"/>
  <depend package="constraint_aware_spline_smoother"/>
  <depend package="move_arm"/>

</package><package name="hand_interaction" path="/trunk/kinect_utils/hand_interaction" repo="mit-ros-pkg-trunk" repo_host="https://svn.csail.mit.edu/mit-ros-pkg">
  <description brief="hand_interaction">

     hand_interaction

  </description>
  <author>Garratt</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hand_interaction</url>
  <depend package="eigen"/>
  <depend package="tf"/>
  <depend package="roscpp"/>
  <depend package="nnn"/>
  <depend package="nite"/>
  <depend package="skeletal_tracker"/>
  <depend package="parallel_tools"/>
  <depend package="pcl_tools"/>
  <depend package="body_msgs"/>

</package><package name="bpcg" path="/stacks/vslam/trunk/bpcg" repo="vslam" repo_host="https://code.ros.org/svn/ros-pkg">
  <description>
    Block PCG, using block Jacobi preconditioner
  </description>
  <author>Kurt Konolige</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <rosdep name="eigen"/>
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp"/>
  </export>
</package><package name="cyphy_launch" path="" repo="cyphy_vis_slam" repo_host="https://cyphy-vis-slam.googlecode.com/hg/cyphy_vis_slam">
  <description brief="cyphy_launch">

     cyphy_launch

  </description>
  <author>tim</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cyphy_launch</url>

</package><package name="interactive_markers" path="/stacks/visualization/branches/visualization-1.8/interactive_markers" repo="visualization" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="interactive_markers">

     Interactive markers allow you to add a 3D user interface
     to your application, which can be accessed from tools like RViz.

  </description>
  <author>David Gossow (C++), Michael Ferguson (Python)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/interactive_markers</url>
  <depend package="roscpp"/>
  <depend package="visualization_msgs"/>
  <depend package="tf"/>

  <export> 
      <cpp cflags="-I${prefix}/include/" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -linteractive_markers"/>
  </export>

</package><package name="ptam" path="" repo="ethzasl_ptam" repo_host="https://github.com/ethz-asl/ethzasl_ptam">
  <description brief="ptam">

     Modified version of the monocular SLAM framework PTAM

  </description>
  <author>Stephan Weiss, Markus Achtelik, Simon Lynen</author>
  <license>see http://www.robots.ox.ac.uk/~gk/PTAM/download.html </license>
  <review notes="under active development" status="unreviewed"/>
  <url>http://ros.org/wiki/ethzasl_ptam/ptam</url>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="ptam_com"/>
  <depend package="cv_bridge"/>
  <depend package="sensor_msgs"/>
  <depend package="image_transport"/>
  <depend package="opencv2"/>
  <depend package="tf"/>
  <depend package="visualization_msgs"/>
  <depend package="dynamic_reconfigure"/>
  <rosdep name="atlas"/>	
  <rosdep name="glut"/>	
</package><package name="marker_detector_tbot" path="/trunk/stacks/drink_serving/marker_detector_tbot" repo="bosch-ros-pkg-e" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg-e/code">
  <description brief="marker_detector_tbot">

     marker_detector_tbot

  </description>
  <author>Christian Bersch</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/marker_detector_tbot</url>
  <depend package="roscpp"/>
    <depend package="artoolkitplus"/>
  <depend package="opencv2"/>
  <depend package="polled_camera"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="cv_bridge"/>
  <depend package="std_msgs"/>
  <depend package="image_transport"/>
  <depend package="image_geometry"/>
  <depend package="tf"/>
  <!-- <depend package="eigen"/> -->
  <depend package="tf_conversions"/>
 
  
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
</package><package name="rfid_pf" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="rfid_pf">

     rfid_pf

  </description>
  <author>Travis Deyle</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rfid_pf</url>
  <depend package="rfid_demos"/>
  <depend package="tf"/>

</package><package name="arm_file_control" path="/trunk/stacks/aaai_lfd_demo/arm_file_control" repo="bosch-ros-pkg-e" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg-e/code">
  <description brief="arm_file_control">
     Scripts to read tfs to file and to read in cartesian coodrinates from a file and replay them 


  </description>
  <author>Sarah Osentoski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/arm_file_control</url>

  <depend package="rospy"/>
  <depend package="actionlib"/>
  <depend package="geometry_msgs"/>
  <depend package="simple_robot_control"/> 
  <depend package="tf"/>
  <depend package="std_srvs"/>  
</package><package name="demo_tools" path="/branches/pr2_demos/iros_demos/demo_tools" repo="mit-ros-pkg-pr2-demos" repo_host="https://svn.csail.mit.edu/mit-ros-pkg">
  <description brief="demo_tools">

     demo_tools

  </description>
  <author>Jenny Barry</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/demo_tools</url>
  <depend package="rospy"/>

</package><package name="laser_joint_projector" path="" repo="pr2_calibration" repo_host="https://kforge.ros.org/calibration/pr2_calibration">
  <description brief="Projects laser readings into a point cloud, based on a set of recorded joint angles">
     Projects laser readings into a point cloud, based on a set of recorded joint angles
     This package is experimental and unstable.
     Expect its APIs to change.
  </description>
  <author>Vijay Pradeep</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.ros.org/wiki/laser_joint_projector</url>
  <depend package="calibration_msgs"/>
  <depend package="kdl"/>
  <depend package="kdl_parser"/>
  <depend package="geometry_msgs"/>
</package><package name="event_based_haptics" path="/penn_lightweight_teleop/trunk/event_based_haptics" repo="penn_lightweight_teleop" repo_host="https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs">
  <description brief="event_based_haptics">

     event_based_haptics

  </description>
  <author>Will McMahan</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/event_based_haptics</url>
  <depend package="roscpp"/>
  <depend package="actionlib"/>
  <depend package="pr2_gripper_sensor_action"/>
  <depend package="std_msgs"/>

</package><package name="ml_lib" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="ml_lib">

     ml_lib

  </description>
  <author>haidai</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ml_lib</url>
  <depend package="hrl_lib"/>

</package><package name="tour_guide_vision" path="" repo="cwru-ros-pkg" repo_host="http://github.com/cwru-robotics/cwru-ros-pkg">
  <description brief="tour_guide_vision">

     tour_guide_vision

  </description>
  <author>Jesse Fish</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/tour_guide_vision</url>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="opencv2"/>
  <depend package="image_transport"/>
  <depend package="cv_bridge"/>
  <depend package="tf"/>
  <depend package="camera_info_manager"/>
  <depend package="image_geometry"/>
  <depend package="geometry_msgs"/>

</package><package name="collider" path="" repo="arm_navigation_experimental" repo_host="https://kforge.ros.org/armnavigation/experimental">
  <description brief="collider - collision avoidance for tabletop manipulation using octomap">

    collider - collision avoidance for tabletop manipulation using octomap

  </description>
  <author>Adam Harmat, Gil E. Jones, Kai M. Wurm, Armin Hornung. Maintained by Gil E. Jones</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  
  <depend package="roscpp"/>
  <depend package="octomap"/>
  <depend package="octomap_ros"/>  
  <depend package="octomap_msgs"/>  
  <depend package="tf"/>
  <depend package="visualization_msgs"/>
  <depend package="arm_navigation_msgs"/>
  <depend package="std_msgs"/>
  <depend package="std_srvs"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="image_transport"/>
  <depend package="image_geometry"/>
  <depend package="robot_self_filter"/>
  <depend package="planning_environment"/>
  <depend package="common_rosdeps"/>

  <rosdep name="eigen"/>
  <rosdep name="opencv2"/>

</package><package name="pr2_controller_interface" path="" repo="pr2_mechanism" repo_host="https://kforge.ros.org/pr2mechanism/hg">
  <description brief="C++ interface class for controllers">
   This package specifies the interface to a realtime controller. A
   controller that implements this interface can be executed by the
    <a href="http://www.ros.org/wiki/pr2_controller_manager">controller
  manager</a> in the real time control loop. The package basically
  contains the C++ controller base class that all controllers need to
  inherit from.
  </description>
  <author>Wim Meeussen</author>
  <license>BSD</license>
  <review notes="" status="doc reviewed"/>
  <url>http://ros.org/wiki/pr2_controller_interface</url>

  <depend package="roscpp"/>
  <depend package="pr2_mechanism_model"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib"/>
  </export>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="esc_nn" path="/trunk/extremum_seeking/esc_nn" repo="dri-ros-pkg" repo_host="https://svn.3me.tudelft.nl/dri-ros-pkg">
  <description brief="esc_nn">

     Neural network based extremum seeking control

  </description>
  <author>Berk Calli</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/esc_nn</url>
  <depend package="roscpp"/>
  <depend package="esc_common"/>
  <depend package="esc_ros"/>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lesc_nn"/>
  </export>

</package><package name="phidget_text" path="" repo="foote-phidget" repo_host="https://phidget.foote-ros-pkg.googlecode.com/hg/">
  <description brief="A simple package to display text on a phidget LCD">

    This package provides a way to display text to the text LCD phidget.  

  </description>
  <author>Tully Foote</author>
  <license>BSD</license>
  <url>http://code.google.com/p/phidgetspp-ros-pkg/</url>
  <export>
    <!--cpp lflags="-L${prefix}/lib -lphidgets21 " cflags="-I${prefix}/include "/-->
  </export>
  <depend package="phidgetspp"/>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
</package><package name="remote_counter" path="" repo="pandora-auth-ros-pkg" repo_host="https://github.com/pandora-auth-ros-pkg/pandora-auth-ros-pkg">
  <description brief="remote_counter">
		A simple implementation of remote counters.

  </description>
  <author>Marina Stamadiadou, Miltiadis Allamanis</author>
  <license>MIT</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/remote_counter</url>
  <depend package="roscpp"/>
  <depend package="diagnostic_updater"/>

</package><package name="hector_interactive_marker_pose_server" path="/trunk/hector_sandbox/hector_interactive_marker_pose_server" repo="hector_sandbox" repo_host="https://tu-darmstadt-ros-pkg.googlecode.com/svn">
  <description brief="hector_interactive_marker_pose_server">

     hector_interactive_marker_pose_server

  </description>
  <author>stefan</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hector_interactive_marker_pose_server</url>
  
  <depend package="roscpp"/>
  <depend package="visualization_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="interactive_markers"/>

</package><package name="wubble_navigation_config" path="/trunk/arrg/wubble_navigation/wubble_navigation_config" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="Wubble-specific move_base configuration">
        This package holds common configuration files for running the
        <a href="http://www.ros.org/wiki/move_base">move_base</a> node
        on the Wubble robot.
    </description>
    <author>Antons Rebguns</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/wubble_navigation_config</url>
    
    <depend package="move_base"/>
</package><package name="openrave" path="/trunk/openrave_planning/openrave" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="Open Robotics Automation Virtual Environment">
In order to use, please add the following line in your bashrc:<br/>

<b>source `rospack find openrave`/openrave.bash</b>

  </description>
  <author>Rosen Diankov (rosen.diankov@gmail.com)</author>
  <license>Lesser GPL and Apache License, Version 2.0</license>
  <review notes="" status="3rdparty"/>
  <export>
    <cpp cflags="`${prefix}/bin/openrave0.8-config --cflags`" lflags="-Wl,-rpath,${prefix}/lib `${prefix}/bin/openrave0.8-config --libs` `${prefix}/bin/openrave0.8-config --libs-core`"/>
    <python path="${prefix}/src"/>
  </export>
  <depend package="opende"/>
  <depend package="bullet"/>
  <depend package="std_msgs"/>
  <depend package="collada_robots"/>
  <versioncontrol type="svn" url="https://openrave.svn.sourceforge.net/svnroot/openrave/trunk"/>
  <url>http://openrave.org</url>
  <rosdep name="libxml2"/>
  <rosdep name="python-sympy"/>
<!-- assimp-dev conflict with v3 and v2 -->
<!--  <rosdep name="assimp-dev"/> -->
  <rosdep name="collada-dom"/>
  <rosdep name="qt4-dev-tools"/>
  <rosdep name="libqt4-dev"/>
  <rosdep name="libqt4-opengl-dev"/>
  <rosdep name="libcoin60-dev"/>
  <rosdep name="libsoqt4-dev"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
  <platform os="ubuntu" version="10.10"/>
</package><package name="bilibot_dashboard" path="/trunk/bilibot/bilibot_dashboard" repo="bilibot-ros-pkg" repo_host="http://bilibot-ros-pkg.googlecode.com/svn">
  <description brief="bilibot_dashboard">

     bilibot_dashboard

  </description>
  <author>Melonee Wise</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/bilibot_dashboard</url>
  <depend package="rxtools"/>
  <depend package="robot_monitor"/>
  <depend package="std_msgs"/>
  <depend package="std_srvs"/>
  <depend package="rospy"/>
  <depend package="roslib"/>
  <depend package="bilibot_node"/>

</package><package name="art_observers" path="/trunk/stacks/art_vehicle/art_observers" repo="utexas-art-ros-pkg" repo_host="http://utexas-art-ros-pkg.googlecode.com/svn">
  <description brief="ART vehicle observers">

    Road obstacle observers for the ART autonomous vehicle.

  </description>
  <author>Michael Quinlan, Jack O'Quin, Corbyn Salisbury</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/art_observers</url>

  <depend package="art_map"/>
  <depend package="art_msgs"/>
  <depend package="filters"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="tf"/>
  <depend package="visualization_msgs"/>

</package><package name="point_cloud_filters" path="/trunk/arrg/ua_experimental/point_cloud_filters" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="point_cloud_filters">

        point_cloud_filters

    </description>
    <author>Antons Rebguns</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/point_cloud_filters</url>
    
    <depend package="sensor_msgs"/>
    <depend package="roscpp"/>
    <depend package="tf"/>
    <depend package="filters"/>
    <depend package="message_filters"/>
    <depend package="pluginlib"/>
    
    <export>
        <cpp cflags="-I${prefix}/include `rosboost-cfg --cflags`" lflags=""/>
        <filters plugin="${prefix}/point_cloud_filters_plugins.xml"/>
    </export>

</package><package name="irobot_create_rustic" path="/trunk/irobot_create_rustic" repo="prairiedog" repo_host="http://prairiedog.googlecode.com/svn">
  <description brief="irobot_create_rustic">
     Brown University V 104 of irobot create, 2009.
     By Gheric Speiginer and Keenan Black
    
     Modified by Michael Otte at University of Colorado 2010 to work with ROS V 1.0 under the name irobot_create_rustic
     
  </description>
  <author>Gheric Speiginer and Keenan Black, modified by Michael Otte</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://pr.willowgarage.com/wiki/irobot_create</url>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="std_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp" lflags="-L${prefix}/lib -lirobot_create_controller -lcreate_comms -lirobot_create_gui"/>
  </export>

</package><package name="pr2_gripper_and_wrist_roll_sensor_controller" path="/penn_lightweight_teleop/trunk/pr2_gripper_and_wrist_roll_sensor_controller" repo="penn_lightweight_teleop" repo_host="https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs">
  <description brief="pr2_gripper and_wrist_roll_sensor_controller">

     The pr2_gripper_sensor_controller package is a real-time controller that integrates signals from the PR2 hand-mounted accelerometer and finger-mounted pressure sensors with motor control of the gripper joint to do highly responsive sensing and low-latency closed-loop control.

  </description>
  <author>William McMahan, Joseph Romano</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_gripper_sensor_controller</url>
  <depend package="pr2_controller_interface"/>
  <depend package="pr2_mechanism_model"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="realtime_tools"/>
  <depend package="pluginlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="roscpp"/>
  <depend package="rosrt"/>
  <depend package="roslib"/>
  <depend package="std_msgs"/>
  <depend package="std_srvs"/>
  <!--depend package="pr2_msgs"/-->
  <!--depend package="pr2_gripper_sensor_msgs"/-->
  <depend package="robot_mechanism_controllers"/>

  <export>
      <cpp cflags="-I${prefix}/msg/cpp"/>
      <pr2_controller_interface plugin="${prefix}/controller_plugins.xml"/>
  </export>  

</package><package name="imu_recalibration" path="" repo="kurt_driver" repo_host="http://kos.informatik.uni-osnabrueck.de/kurt_driver.git">
  <description brief="imu_recalibration">

     imu_recalibration

  </description>
  <author>Jochen Sprickerhof, Martin Günther</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/imu_recalibration</url>
  <depend package="rospy"/>
  <depend package="tf"/>
  <depend package="sensor_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="geometry_msgs"/>
</package><package name="skeletal_tracker" path="/trunk/kinect_utils/skeletal_tracker" repo="mit-ros-pkg-trunk" repo_host="https://svn.csail.mit.edu/mit-ros-pkg">
  <description brief="A ROS driver wrapper for user tracking">
   

  </description>

  <author>Garratt Gallagher</author>

  <license>BSD</license>

  <url>http://ros.org/wiki/skeletal_tracker</url>

  <review notes="beta" status="experimental"/>

 <depend package="mapping_msgs"/> 
 <!--  <depend package="ps_engine" />-->
  <depend package="openni"/>
  <depend package="body_msgs"/>




  <platform os="ubuntu" version="10.04"/>
  <platform os="ubuntu" version="10.10"/>
</package><package name="megatree_web" path="" repo="megatree" repo_host="http://kforge.ros.org/megatree/megatree">
  <description brief="megatree_server">

     megatree_server

  </description>
  <author>Stuart Glaser</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/megatree_server</url>

  <depend package="megatree_cpp"/>
</package><package name="can_msgs" path="/stacks/can_communication/trunk/can_msgs" repo="can_communication" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="can_msgs">

     This package defines messages for commonly used CAN frames.

  </description>
  <author>Gonçalo Cabrita</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/can_msgs</url>
  <depend package="roscpp"/>

</package><package name="move_arm_warehouse" path="" repo="arm_navigation_experimental" repo_host="https://kforge.ros.org/armnavigation/experimental">
  <description brief="A general arm planning and control interface">

The move_arm package provides an implementation of a action (see the <a href="http://www.ros.org/wiki/actionlib">actionlib</a> package) that, given a goal in the world, will attempt to reach it with a robot arm. The move_arm node links together a planner, trajectory monitor and trajectory controller to acheive its goal. It supports any planner that provides a GetMotionPlan interface and any controller that provides services for setting, querying and canceling trajectories. The node is designed to be modular and so uses ROS services for planning, control and IK and does minimal computation within the node itself. 

  </description>
  <author>Ioan Sucan, Sachin Chitta(sachinc@willowgarage.com)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/move_arm</url>

  <depend package="roscpp"/>
  <depend package="rosconsole"/>
  <depend package="std_msgs"/>
  <depend package="arm_navigation_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="arm_navigation_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="geometric_shapes"/>
  <depend package="planning_models"/>
  <depend package="planning_environment"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="tf_conversions"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="kinematics_msgs"/>
  <depend package="mongo_ros"/>
  <depend package="move_arm_head_monitor"/>
  <depend package="geometry_msgs"/>
  <depend package="interactive_markers"/>
  <!--<depend package="gazebo_msgs"/>-->
  <depend package="pr2_mechanism_msgs"/>
  <depend package="interpolated_ik_motion_planner"/>
  <depend package="ompl_ros_interface"/>
  <depend package="interpolated_ik_motion_planner"/>
  <depend package="constraint_aware_spline_smoother"/>


  <export>
    <cpp cflags="-I${prefix}/msg/cpp"/>
  </export>  
  
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="position_string_rviz_plugin" path="/stacks/ias_visualization/position_string_rviz_plugin" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="position_string_rviz_plugin_no_msgs">
     rviz plugin for visualizing strings at given positions..
  </description>
  <author>Nico Blodow</author>
  <license>BSD</license>

  <depend package="position_string_msgs"/>
  <depend package="rviz"/>
  <depend package="roscpp"/>
  <depend package="tf"/>
  
  <export>
    <rviz plugin="${prefix}/lib/rviz_plugin.yaml"/>
    <cpp cflags="-I${prefix}/msg/cpp"/>
  </export>
</package><package name="reem_ogre" path="" repo="reem_simulation" repo_host="https://github.com/pal-robotics/reem_simulation">
  <description brief="REEM Ogre Mesh Files"/>
  <author>Maintained by Adolfo Rodriguez Tsouroukdissian</author>
  <license>Modified BSD</license>
  <review notes="" status="unreviewed"/>
  <url/>

  <depend package="convex_decomposition"/>
  <depend package="ivcon"/>
  <depend package="ogre_tools"/>
  <depend package="reem_description"/>
</package><package name="schunk_powercube_controllers" path="/trunk/schunk_powercube_controllers" repo="cmu-ros-pkg" repo_host="https://cmu-ros-pkg.svn.sourceforge.net/svnroot/cmu-ros-pkg">
  <description brief="Schunk Powercube Controller Server">
    Implements the Schunk Powercube communication protocol as described at http://www.schunk.com.
    The protocol can function on RS232 serial, CAN, and Profibus. This package implements the CAN communications.
  </description>
  <author>Garratt Gallagher(garratt@ieee.org)</author>
  <license>The Apache License 2.0</license>
  <depend package="openrave_robot_control"/>
</package><package name="modular_cloud_matcher" path="" repo="ethzasl_mapping" repo_host="https://github.com/ethz-asl/ros-mapping">
  <description brief="modular_cloud_matcher">

     3D point cloud matcher based on libpointmatcher (http://github.com/ethz-asl/libpointmatcher)

  </description>
  <author>François Pomerleau and Stéphane Magnenat</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/modular_cloud_matcher</url>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="rosbag"/>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="tf"/>
  <depend package="tf2"/>
  <depend package="tf_conversions"/>
  <depend package="mapping_msgs"/>
  <depend package="libnabo"/>
  <depend package="libpointmatcher"/>
  <depend package="libpointmatcher_ros"/>
  <rosdep name="libargtable2-dev"/>
  <rosdep name="yaml-cpp"/>
  <rosdep name="eigen"/>

</package><package name="rtcus_navigation" path="/trunk/rtcus_mobile_robots/rtcus_navigation" repo="rtc-us-ros-pkg-trunk" repo_host="https://rtc-us-ros-pkg.svn.sourceforge.net/svnroot/rtc-us-ros-pkg">
	<description brief="rtcus_navigation">
		This package proposes a reusable,
		generic and modular navigation software
		architecture.
		It is built as a
		framework library for c++ and it is based on generic
		programming
		through c++ templates.

	</description>
	<author>Pablo Iñigo Blasco</author>
	<license>BSD</license>
	<review notes="" status="unreviewed"/>
	<url>http://ros.org/wiki/rtcus_navigation</url>

	<export>
		<cpp cflags="-I${prefix}/include -I${prefix}/cfg/cpp -I${prefix}/msg_gen/cpp/include" lflags="-L${prefix}/lib"/>
		<rtcus_navigation plugin="${prefix}/plugins.xml"/>
	</export>

	<depend package="roscpp"/>
	<depend package="pluginlib"/>
	<depend package="rtcus_assert"/>
	<depend package="rtcus_conversions"/>
	<depend package="rtcus_compositions"/>

	<depend package="rtcus_stamp"/>
	<depend package="rtcus_motion_models"/>
	<depend package="rtcus_nav_msgs"/>
	<depend package="nav_msgs"/>
	<depend package="std_srvs"/>
	<depend package="laser_geometry"/>
	<depend package="tf"/>
	<depend package="bullet"/>
	<depend package="sensor_msgs"/>
	<depend package="geometry_msgs"/>

	<depend package="pcl_ros"/>
	<depend package="pcl"/>

	<depend package="mrpt_libs"/>
	<depend package="mrpt_bridge"/>
</package><package name="rosrt" path="/stacks/ros_realtime/trunk/rosrt" repo="ros_realtime" repo_host="https://code.ros.org/svn/ros">
  <description brief="A set of tools for using ROS from within realtime systems">

    rosrt provides classes for interfacing with ROS from within realtime systems, such as realtime-safe Publisher and Subscriber classes.

  </description>
  <author>Josh Faust</author>
  <license>BSD</license>
  <review notes="" status="API reviewed"/>
  <url>http://ros.org/wiki/rosrt</url>
  <depend package="roscpp"/>
  <depend package="roslib"/>
  <depend package="rosunit"/>
  <depend package="rosatomic"/>
  <depend package="allocators"/>
  <depend package="lockfree"/>
  <depend package="std_msgs"/>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -lrosrt -Wl,-rpath,${prefix}/lib"/>
  </export>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="astromech_reason" path="/astromech_reason" repo="astromech-ros" repo_host="https://astromech-ros.svn.sourceforge.net/svnroot/astromech-ros">
  <description brief="astromech_reason">

     astromech_reason

  </description>
  <author/>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/astromech_reason</url>

  <depend package="astromech_msgs"/>
  <depend package="sound_play"/>
  <depend package="std_msgs"/>

</package><package name="pr2_oculesics_adapters" path="/trunk/pr2_sbl_experimental/oculesics/pr2_oculesics_adapters" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="pr2_oculesics_adapters">

     pr2_oculesics_adapters

  </description>
  <author>Edward</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_oculesics_adapters</url>
  <depend package="roscpp"/>
  <depend package="actionlib"/>
  <depend package="pr2_controllers_msgs"/>
  <!--depend package="oculesics"/-->

</package><package name="geometry_util" path="/stacks/wu_utils/trunk/geometry_util" repo="wu-ros-pkg" repo_host="https://wu-ros-pkg.svn.sourceforge.net/svnroot/wu-ros-pkg">
  <description brief="geometry utility library">
     Conversions and common functions of geometric data
  </description>
  <author>Erik Karulf (erik@cse.wustl.edu)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/geometry_util</url>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lgeometry_util"/>
    <python path="${prefix}/src/python"/>
  </export>
  <depend package="tf"/>
  <depend package="geometry_msgs"/>
  <depend package="bullet"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>
</package><package name="cob_robot_calibration" path="" repo="cob_calibration" repo_host="git://github.com/ipa320/cob_calibration">
  <description brief="cob_robot_calibration">

     The cob_robot_calibration package contains necessary configuration files, scripts 
     and launch files to perform  automatic kinematic calibration of Care-O-bot.
     The cob_robot_calibration_est package is used to perform the estimation steps.

  </description>
  <author>Sebastian Haug</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_robot_calibration</url>

  <depend package="rospy"/>
  <depend package="rostest"/>
  <depend package="rosbag"/>
  <depend package="nodelet"/>
  <depend package="tf"/>
  <depend package="cv_bridge"/>
  <depend package="sensor_msgs"/>

  <depend package="cob_script_server"/>
  <depend package="cob_calibration_data"/>

  <depend package="cob_calibration_srvs"/>
  <depend package="cob_calibration_msgs"/>
  <depend package="cob_camera_calibration"/>
  <depend package="cob_robot_calibration_est"/>

</package><package name="igh_eml" path="/3rdparty/igh_eml" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="The IgH EtherCAT master library">
This package compiles the user space library only, so no need to worry about
kernel headers.
  </description>
  <author>Ingo Kresse</author>
  <license>GPL,LGPL</license>
  <review notes="" status="unreviewed"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib  -L${prefix}/lib -lethercat"/>
  </export>
</package><package name="ros_apache2" path="/stacks/web_interface/trunk/ros_apache2" repo="web_interface" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="ros_apache2">

     ros_apache2

  </description>
  <author/>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ros_apache2</url>

  <depend package="webui"/>

</package><package name="stage_action_server" path="" repo="flyatar" repo_host="http://github.com/peterpolidoro/Flyatar">
  <description brief="stage_action_server">

     stage_action_server

  </description>
  <author>Peter Polidoro</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/stage_action_server</url>
  <depend package="rospy"/>
  <depend package="roslib"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="tf"/>
  <depend package="stage"/>
  <depend package="plate_tf"/>

</package><package name="pa10controller" path="/trunk/pa10controller" repo="cmu-ros-pkg" repo_host="https://cmu-ros-pkg.svn.sourceforge.net/svnroot/cmu-ros-pkg">
  <description brief="Mitsubishi PA10 Drivers and Controllers">
    Contains a server to communicate with the ROS network and move the PA10.
    The server uses openrave-core to extract the PA-10 kinematics and tool information.

    First the PA10 driver and libraries must be installed. Unfortunately the libraries are proprietary, so cannot be distributed with this controller.
  </description>
  <author>Rosen Diankov (rdiankov@cs.cmu.edu), Garth Zeglin</author>
  <license>The Apache License 2.0</license>
  <depend package="openrave_robot_control"/>
</package><package name="rve_render_client" path="" repo="visualization_engine" repo_host="https://kforge.ros.org/visengine/hg">
  <description brief="rve_render_client">

     rve_render_client

  </description>
  <author>Josh Faust</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rve_render_client</url>
  <depend package="rve_interfaces"/>
  <depend package="rve_common"/>
  <depend package="rve_mesh_loader"/>
  <depend package="rve_properties"/>
  <depend package="urdf"/>

  <export>
  	<cpp cflags="-I${prefix}/include" lflags="-lrve_render_client -L${prefix}/lib -Wl,-rpath,${prefix}/lib"/>
  </export>

</package><package name="cytonRobotDescription" path="/trunk/rtcus_applications/cytonRobotDescription" repo="rtc-us-ros-pkg-trunk" repo_host="https://rtc-us-ros-pkg.svn.sourceforge.net/svnroot/rtc-us-ros-pkg">
  <description brief="cythonRobotDescription">

     cythonRobotDescription

  </description>
  <author>GeuS</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cythonRobotDescription</url>
  <depend package="urdf"/>

</package><package name="reconfigure_gui" path="" repo="reconfigure_gui" repo_host="https://kforge.ros.org/dynamicreconfig/reconfigure_gui">
  <description brief="reconfigure_gui">

     reconfigure_gui

  </description>
  <author>Ze'ev Klapow</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/reconfigure_gui</url>
  <depend package="rospy"/>
  <depend package="rqt_gui"/>
  <depend package="rqt_gui_py"/>
  <depend package="dynamic_reconfigure"/>

  <export>
    <rqt_gui plugin="${prefix}/plugin.xml"/>
  </export>

</package><package name="joint_group_position_controller" path="" repo="reem_controllers" repo_host="https://github.com/pal-robotics/reem_controllers">
  <description brief="joint_group_position_controller">

     joint_group_position_controller

  </description>
  <author>Adolfo Rodriguez Tsouroukdissian</author>
  <license>Modified BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/joint_group_position_controller</url>
  <depend package="angles"/>
  <depend package="control_toolbox"/>
  <depend package="pluginlib"/>
  <depend package="pr2_controller_interface"/>
  <depend package="roscpp"/>

  <depend package="trajectory_msgs"/>
  
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -ljoint_group_position_controller -Wl,-rpath,${prefix}"/>
    <pr2_controller_interface plugin="${prefix}/joint_group_position_controller_plugins.xml"/>
  </export>
</package><package name="openhrp3" path="/trunk/rtmros_common/openhrp3" repo="rtm-ros-robotics/rtmros_common" repo_host="https://rtm-ros-robotics.googlecode.com/svn">
  <description brief="openhrp3">

   OpenHRP3 : Robot software platform

http://www.openrtp.jp/openhrp3/en/index.html

http://code.google.com/p/openhrp-aist-grx/

  </description>
  <author>Developed by AIST, GRX, ROS Package is maintained by Kei Okada</author>
  <license>EPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/openhrp3</url>

  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>

  <depend package="rosunit"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="tf"/>

  <!-- openhrp3 -->
  <depend package="tvmet"/>
  <depend package="openrtm"/>
  <depend package="common_rosdeps"/>

  <!-- collada -->
  <rosdep name="collada-dom"/>

  <!-- java -->
  <rosdep name="java"/>
  <rosdep name="jython"/>
  <rosdep name="libreadline-java"/>

  <rosdep name="ttf-sazanami-gothic"/>
  <rosdep name="ttf-sazanami-mincho"/>
  <rosdep name="ttf-kochi-gothic"/>
  <rosdep name="ttf-kochi-mincho"/>

  <!-- omniORB -->
  <rosdep name="omniorb"/>
  <rosdep name="python-omniorb"/>
  <rosdep name="python-tk"/>

  <!-- math -->
  <rosdep name="atlas"/>
  <rosdep name="f2c"/>
  <rosdep name="libgfortran3"/>

  <!-- eclipse3.4.2 -->
  <rosdep name="eclipse"/>
  <rosdep name="xulrunner-1.9.2"/>

  <!-- etc -->
  <rosdep name="zlib"/>
  <rosdep name="libjpeg"/>
  <rosdep name="libpng12-dev"/>
  <rosdep name="uuid"/>


  <rosdep name="libxml2"/>
  <rosdep name="libxtst-dev"/> <!-- xdotool require /usr/include/X11/extentions -->
  <rosdep name="xdotool"/>

  <!-- for rostest -->
  <depend package="jsk_tools"/>
  <rosdep name="python-psutil"/>
  <rosdep name="python-svn"/>

</package><package name="auv_sim" path="/trunk/hwu_osl_software/auv_sim" repo="hwu-osl-ros-pkg" repo_host="http://hwu-osl-ros-pkg.googlecode.com/svn">
  <description brief="auv_sim">

     auv_sim

  </description>
  <author>Joel Cartwright</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/auv_sim</url>
  <depend package="rviz"/>
  <depend package="sim_clock"/>
  <depend package="auv_nav_sim"/>
  <depend package="auv_pilot"/>
  <depend package="auv_joy"/>

</package><package name="imperative_to_declarative" path="" repo="roboframenet" repo_host="https://kforge.ros.org/appmanandroid/roboframenet">
  <description brief="imperative_to_declarative">

     imperative_to_declarative takes imperative sentences and adds the implicit &quot;you&quot; to the front of them, making them declarative.  This can help, for instance, with parsing for parsers trained on declarative sentences rather than imperative ones.

  </description>
  <author>Brian Thomas</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/imperative_to_declarative</url>
  <depend package="rospy"/>
  <depend package="std_msgs"/>

</package><package name="flyatar_avatar" path="" repo="flyatar" repo_host="http://github.com/peterpolidoro/Flyatar">
  <description brief="flyatar_avatar">

     flyatar_avatar

  </description>
  <author>Peter Polidoro</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/avatar</url>
  <depend package="rospy"/>
  <depend package="tf"/>
  <depend package="joystick_commands"/>
  <depend package="image_gui"/>
  <depend package="stage_message_interface"/>
  <depend package="pythonmodules"/>

</package><package name="cob_3d_mapping_semantics" path="" repo="cob_environment_perception" repo_host="git://github.com/ipa320/cob_environment_perception">
  <description brief="cob_3d_mapping_semantics">

     Extraction of semantic data (e.g. table extraction) from 3-D environment maps.

  </description>
  <author>Georg Arbeiter</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_3d_mapping_semantics</url>

	<depend package="roscpp"/>
	<depend package="pcl"/>
	<depend package="pcl_ros"/>
	<depend package="visualization_msgs"/>
	<depend package="cob_3d_mapping_msgs"/>
	<depend package="cob_3d_mapping_common"/>
	<depend package="tabletop_object_detector"/>

	
</package><package name="eband_local_planner" path="" repo="navigation_experimental" repo_host="https://kforge.ros.org/navigation/experimental">
  <description brief="eband_local_planner">

     The eband_local_planner package implements a plugin to the base_local_planner. It implements the Elastic Band method on the SE2 manifold.

  </description>
  <author>Christian Connette, Bhaskara Marthi</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/eband_local_planner</url>

  <!-- ros cturtle dependencies -->
  <depend package="roscpp"/>
  <depend package="pluginlib"/>

  <depend package="nav_core"/>
  <depend package="costmap_2d"/>
  <depend package="base_local_planner"/>

  <depend package="nav_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="visualization_msgs"/>

  <depend package="tf"/>
  <depend package="tf_conversions"/>
  <depend package="angles"/>

  <depend package="control_toolbox"/>

  <depend package="actionlib"/>

  <rosdep name="eigen"/>
  <rosdep name="tinyxml"/>

  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -leband_local_planner"/>
    <nav_core plugin="${prefix}/bgp_plugin.xml"/>
  </export>

</package><package name="handle_detection" path="" repo="mapping" repo_host="http://code.in.tum.de/git/mapping.git">
  <description brief="handle_detection">

     handle_detection

  </description>
  <author>Nico Blodow</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/handle_detection</url>
  <depend package="point_cloud_converter"/> <!-- pcl, pcl_ros -->
  <depend package="nodelet"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="visualization_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="actionlib"/>
</package><package name="create_node" path="/trunk/bilibot/create_node" repo="bilibot-ros-pkg" repo_host="http://bilibot-ros-pkg.googlecode.com/svn">
  <description brief="iRobot Create ROS driver node">

     ROS bindings for the Create/Roomba driver.

     This is based on otl_roomba driver by OTL, ported to use
     create_driver instead.  This also contains a 'bonus' feature from
     the turtlebot driver by Xuwen Cao and Morgan Quigley.

     Forked from turtlebot project to make generic Create driver
     
  </description>
  <author>Ken Conley, Melonee Wise, Jeff Rousseau</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/create_node</url>
  <depend package="create_driver"/>
  <depend package="rospy"/>
  <depend package="tf"/>
  <depend package="nav_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="diagnostic_msgs"/>
  <depend package="kdl"/>
  <depend package="dynamic_reconfigure"/>
  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>

</package><package name="posedetection_msgs" path="/trunk/jsk_common/posedetection_msgs" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="Messages for passing pose/object detection results">

    posedetection_msgs provides messages and services to facilitate passing pose detection results and features.

  </description>
  <author>Rosen Diankov</author>
  <license>BSD</license>
  <review status="unreviewed"/>
  <url>http://ros.org/wiki/posedetection_msgs</url>
  <export>
    <cpp cflags="-I${prefix}/msg/cpp -I${prefix}/srv/cpp"/>
  </export>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="cv_bridge"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>

  <rosdep name="opencv2"/>
</package><package name="cob_touch" path="" repo="cob_driver" repo_host="git://github.com/ipa320/cob_driver">
  <description brief="cob_touch">

     cob_touch

  </description>
  <author>Ulrich Reiser</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_touch</url>

</package><package name="nao_teleop" path="/trunk/humanoid_stacks/nao_common/nao_teleop" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="Teleoperation (gamepad or joystick) for the Nao humanoid">

     Teleoperation (gamepad or joystick) for the Nao humanoid

  </description>
  <author>Armin Hornung</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/nao_teleop</url>
  
  <depend package="joy"/>
  <depend package="actionlib"/>
  <depend package="nav_msgs"/>
  <depend package="nao_msgs"/>
  <depend package="std_srvs"/>
  <depend package="nao_remote"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,-L${prefix}lib -lnao_teleop"/>
  </export>


</package><package name="phidget_rfid" path="" repo="foote-phidget" repo_host="https://phidget.foote-ros-pkg.googlecode.com/hg/">
<description brief="A simple package for rfid phidget">

This package provides a way to display text to the rfid phidget.  

</description>
<author>Tully Foote</author>
<license>BSD</license>
<export>
  <!--cpp lflags="-L${prefix}/lib -lphidgets21 " cflags="-I${prefix}/include "/-->
</export>
<depend package="phidgetspp"/>
</package><package name="openmpi_devel" path="/stacks/mpi/trunk/openmpi_devel" repo="mpi" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="openmpi_devel">

    The Open MPI Project is an open source MPI-2 implementation that is developed
    and maintained by a consortium of academic, research, and industry partners.
    Open MPI is therefore able to combine the expertise, technologies, and
    resources from all across the High Performance Computing community in order to
    build the best MPI library available. Open MPI offers advantages for system and
    software vendors, application developers and computer science researchers.

  </description>

  <author>The Open MPI project</author>
  <license>BSD (new)</license>
  <review notes="" status="3rdparty"/>
  <url>http://www.open-mpi.org/</url>
  
  <depend package="knem"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib"/>
  </export>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="win_rospkg" path="" repo="win_ros" repo_host="https://github.com/stonier/win_ros">
  <description brief="rosinstall for windows">

Rosinstall is a tool to check out source code. This is a slightly modified version so that it works on windows. Alot of the patches to rosinstall are already being merged upstream to the actual rosinstall package, whilst others will remain here until its decided they are stable (at which point we'll try to merge them upstream). 

  </description>
  <author>Daniel Stonier</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/rosinstall</url>
  <!-- Indirectly exporting this straight from svn, so don't need it as a ros dependency. -->
  <!-- <depend package="vcstools"/> -->

</package><package name="openrave_actionlib" path="/trunk/openrave_planning/openrave_actionlib" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="openrave_actionlib">
    Bindings between openrave's controller interface and ROS's action lib interface for controlling robots.
  </description>
  <author>rdiankov</author>
  <license>Apache License, Version 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/openrave_actionlib</url>
  <export>
    <openrave datapath="${prefix}" pluginpath="${prefix}/lib"/>
  </export>
  <depend package="actionlib"/>
  <depend package="sensor_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="openrave"/>
  <depend package="rosparam"/>
  <depend package="rospy"/>
</package><package name="kingfisher_node" path="" repo="kingfisher" repo_host="https://github.com/clearpathrobotics/kingfisher">
  <description brief="kingfisher_node">

     kingfisher_node

  </description>
  <author>Mike Purvis</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/kingfisher_node</url>
  <depend package="rospy"/>
  <depend package="rosserial_python"/>
  <depend package="kingfisher_msgs"/>
  <depend package="std_msgs"/>

</package><package name="octomap_server" path="/trunk/octomap_stacks/octomap_mapping/octomap_server" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="octomap_server - map server for the OctoMap 3D maps">

     octomap_server loads a 3D map (as Octree-based OctoMap) and distributes it to other nodes in a compact binary format. 
	 See octomap_saver on how to request or save a map file. A visualization of the occupied cells is sent as MarkerArray.

  </description>
  <author>Armin Hornung</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.ros.org/wiki/octomap_server</url>
  
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/cfg/cpp" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -loctomap_server"/>
  </export>
  
  <depend package="visualization_msgs"/> 
<!--  <depend package="octomap_msgs"/> -->
  <depend package="octomap_ros"/>
  <depend package="sensor_msgs"/>
  <depend package="pcl_ros"/>
  <depend package="nav_msgs"/>
  <depend package="arm_navigation_msgs"/>
  <depend package="std_msgs"/>
  <depend package="std_srvs"/>
  
  <rosdep name="octomap"/>
  <depend package="dynamic_reconfigure"/>
  
</package><package name="move_base_stage_tutorial" path="/trunk/agentsystem_ros_tutorials/move_base_stage_tutorial" repo="rtm-ros-robotics/agentsystem_ros_tutorials" repo_host="https://rtm-ros-robotics.googlecode.com/svn">
  <description brief="move_base_stage_tutorial">

     move_base_stage_tutorial

  </description>
  <author>Kei Okada</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/move_base_stage_tutorial</url>
  <depend package="rviz"/>
  <depend package="stage"/>
  <depend package="amcl"/>
  <depend package="move_base"/>

</package><package name="push_button_ik_action" path="/trunk/pr2_elevator/push_button_ik_action" repo="ubc-ros-pkg" repo_host="https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg">
  <description brief="push_button_ik_action">

     push_button_ik_action

  </description>
  <author>ankur</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/push_button_ik_action</url>
  <depend package="roscpp"/>
  <depend package="actionlib"/> 
  <depend package="push_button_action"/>
  <depend package="kinematics_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="trajectory_msgs"/>
</package><package name="rfid_hardware" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="rfid_hardware">

     rfid_hardware

  </description>
  <author>Travis Deyle</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rfid_hardware</url>
  <depend package="hrl_rfid"/>
  <depend package="robotis"/>
  <depend package="tf"/>
  <depend package="rospy"/>

</package><package name="kuka_fri" path="/drivers/kuka_fri" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="kuka_fri">
    control node for the KUKA lightweight arm, using the
    Fast Research Interface (FRI) over UDP.
  </description>
  <author>Ingo Kresse, Alexis Maldonado</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <depend package="roscpp"/>
  <depend package="yarp2"/>
  <depend package="sensor_msgs"/>
  <depend package="diagnostic_updater"/>
  <depend package="kuka_fri_header"/>
</package><package name="geometric_tools" path="" repo="stacks/geometric_tools" repo_host="git://github.com/laas/geometric_tools">
  <description brief="Geometric Tools">

    Geometric Tools is a library gathering algorithms for real-time
    computer graphics and physics, mathematics, geometry, numerical
    analysis, and image analysis.

  </description>
  <author>Geometric Tools, LLC, packaging by Thomas Moulard</author>
  <license>Boost</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/geometric_tools</url>

  <export>
    <cpp cflags="-I${prefix}/build/GeometricTools/WildMagic5/SDK/Include/" lflags="-L${prefix}/build/GeometricTools/WildMagic5/SDK/Library/ReleaseDynamic/ -Wl,-rpath,${prefix}/build/GeometricTools/WildMagic5/SDK/Library/ReleaseDynamic/ -lWm5Core -lWm5Imagics -lWm5Mathematics -lWm5Physics"/>
    <rosdoc config="rosdoc.yaml"/>
  </export>
</package><package name="cpp11" path="/trunk/quickdev/cpp11" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="cpp11">

     cpp11

  </description>
  <author>Edward T. Kaszubski ( ekaszubski@gmail.com )</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cpp11</url>
  <depend package="cpp0x"/>
  <!-- waiting for the c++11 std flag; for now, we use the flags given by cpp0x
  <export>
	<cpp cflags="-std=c++11"/>
  </export-->
</package><package name="vision_communications" path="" repo="pandora-auth-ros-pkg" repo_host="https://github.com/pandora-auth-ros-pkg/pandora-auth-ros-pkg">
  <description brief="vision_communications">

     The vision_communications package provides messages and services for Vision

  </description>
  <author>Stamadiadou Marina, Sykoudi Pelagia, Allamanis Miltiadis</author>
  <license>MIT</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/vision_communications</url>

</package><package name="rve_transformer" path="" repo="visualization_engine" repo_host="https://kforge.ros.org/visengine/hg">
  <description brief="rve_transformer">

     rve_transformer

  </description>
  <author>Josh Faust</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rve_transformer</url>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="tf2"/>
  <depend package="tf2_ros"/>
  <depend package="message_filters"/>
  <depend package="rve_render_client"/>
  <depend package="rve_interface_gen"/>
  <depend package="rve_interfaces"/>
  <depend package="rve_msgs"/>
  <depend package="rve_common"/>
  <depend package="rve_pluginloader"/>
  <depend package="rve_properties"/>
  
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lrve_transformer"/>
  </export>

</package><package name="cop_rviz_plugin" path="/stacks/ias_visualization/cop_rviz_plugin" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="rviz_shows_cop">
     rviz_shows_cop
  </description>
  <author>U. Klank, Josh Faust</author>
  <license>BSD</license>
  <depend package="rviz"/>
  <depend package="roscpp"/>
  <depend package="simple_grasp_planner"/>
  <depend package="vision_msgs"/>
  <depend package="vision_srvs"/>
  <depend package="std_msgs"/>
  <export>
    <rviz plugin="${prefix}/lib/rviz_plugin.yaml"/>
  </export>

</package><package name="pr2_dynamic_movement_primitive_gui" path="" repo="usc-clmc-ros-pkg" repo_host="https://github.com/usc-clmc/usc-clmc-ros-pkg">
  <description brief="pr2_dynamic_movement_primitive_gui">

     pr2_dynamic_movement_primitive_gui

  </description>
  <author>Peter Pastor</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_dynamic_movement_primitive_gui</url>

  <depend package="roscpp"/>

  <depend package="usc_utilities"/>

  <depend package="dynamic_movement_primitive_gui"/>
  <depend package="dynamic_movement_primitive_utilities"/>
  <depend package="dynamic_movement_primitive"/>
  
  <depend package="pr2_mechanism_msgs"/>
  <depend package="pr2_task_recorder2"/>

  <rosdep name="libqt4-dev"/>

</package><package name="cljlo_utils" path="" repo="cram_highlevel" repo_host="https://github.com/moesenle/cram_highlevel">
  <description brief="cljlo_utils">

     cljlo_utils

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cljlo_utils</url>
  <depend package="cljlo"/>
  <depend package="cl_tf"/>

</package><package name="itasc_pr2" path="" repo="itasc_robots_objects" repo_host="http://git.mech.kuleuven.be/robotics/itasc_robots_objects.git">
	<description brief="iTaSC_pr2">
	    This package contains the itasc robot component for a PR2
        This is part of the iTaSC-Skill framework, itasc_robots_objects	
	</description>
	
	<author>Dominick Vanthienen, Gunther Struyf</author>
	<license>BSD,LGPL</license>
	<review notes="" status="unreviewed"/>
	<url>http://www.orocos.org/itasc</url>
	<depend package="rtt"/>
	<depend package="orocos_kdl"/>
	<depend package="kdl_typekit"/>
	<depend package="kdl_parser"/>
	<rosdep name="eigen"/>
	<depend package="itasc_core"/>
	<depend package="rtt_rosnode"/>
	<depend package="rtt_std_msgs"/>
	<depend package="rtt_sensor_msgs"/>
	<depend package="rtt_pr2_controllers_msgs"/>
	<depend package="geometry_msgs"/>
	<depend package="tf"/>
	<depend package="tf_conversions"/>
<rosdep name="xacro"/>  
</package><package name="kurtana_gazebo" path="" repo="kurtana_robot" repo_host="http://kos.informatik.uni-osnabrueck.de/kurtana_robot.git">
  <description brief="kurtana_gazebo">

     kurtana_gazebo

  </description>
  <author>Martin Günther</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/kurtana_gazebo</url>
  
  <depend package="katana_arm_gazebo"/>

</package><package name="irb_2400_arm_navigation" path="/trunk/abb/irb_2400_arm_navigation" repo="swri-ros-pkg" repo_host="http://swri-ros-pkg.googlecode.com/svn">
  <description brief="irb_2400_arm_navigation">

     irb_2400_arm_navigation

  </description>
  <author>Christina Gomez</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/irb_2400_arm_navigation</url>
  <depend package="planning_environment"/>
  <depend package="kinematics_base"/>
  <depend package="arm_kinematics_constraint_aware"/>
  <depend package="ompl_ros_interface"/>
  <depend package="trajectory_filter_server"/>
  <depend package="constraint_aware_spline_smoother"/>
  <depend package="move_arm"/>

</package><package name="sr_mechanism_model" path="" repo="shadow_robot" repo_host="lp:sr-ros-interface">
  <description brief="sr_mechanism_model">

    sr_mechanism_model contains the transmissions used in the robot model. We needed specific
    transmission as we're using our own actuator. We also needed to take care of the joint 0s
    which combine the distal and middle phalanges.

  </description>
  <author>Ugo Cupcic / ugo@shadowrobot.com , contact@shadowrobot.com</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sr_mechanism_model</url>
  <depend package="roscpp"/>
  <depend package="sr_hardware_interface"/>
  <depend package="pr2_mechanism_model"/>
  <rosdep name="tinyxml"/>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -lsr_mechanism_model -Wl,-rpath,${prefix}/lib"/>
    <pr2_mechanism_model plugin="${prefix}/transmission_plugin.xml"/>
  </export>
</package><package name="rve_rpc" path="" repo="visualization_engine" repo_host="https://kforge.ros.org/visengine/hg">
  <description brief="A topic-based rpc mechanism">

     rve_rpc provides a rpc (remote procedure call) mechanism similar to services, but using topics for communication.

  </description>
  <author>Josh Faust</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rve_rpc</url>
  <depend package="roscpp"/>
  <depend package="roslib"/>
  <depend package="rve_common"/>
  <depend package="rve_msgs"/>
  <depend package="std_msgs"/>
  
  <export>
  	<cpp cflags="-I${prefix}/include" lflags="-lrve_rpc -L${prefix}/lib -Wl,-rpath,${prefix}/lib"/>
  </export>
</package><package name="fmod_audio" path="" repo="usc-clmc-ros-pkg" repo_host="https://github.com/usc-clmc/usc-clmc-ros-pkg">
  <description brief="fmod_audio">

     fmod_audio

  </description>
  <author>Peter Pastor</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/fmod_audio</url>

  <depend package="roscpp"/>
  <depend package="eigen"/>
  <depend package="usc_utilities"/>
  <depend package="diagnostic_updater"/>

  <depend package="visualization_msgs"/>
  <depend package="geometry_msgs"/>
  
</package><package name="typelib" path="" repo="orocos_toolchain" repo_host="https://git.gitorious.org/orocos-toolchain/typelib.git">
  <description brief="type introspection library for C++">
      This library offers an introspection mechanism for C/C++ value-types. I.e.
      it offers a way to represent types, and to manipulate in-memory values
      that are instances of those types.

      A Ruby binding is included, which gives a fast and transparent
      modification of C/C++ in-memory types from Ruby, and an associated
      interface to call C functions from shared libraries.
  </description>
  <author>Sylvain Joyeux/sylvain.joyeux@m4x.org</author>
  <copyright>
      LAAS-CNRS/openrobots@laas.fr
      DFKI/robotik@dfki.de
      Sylvain Joyeux/sylvain.joyeux@m4x.org
  </copyright>
  <license>CeCILL-B (BSD-like)</license>

  <depend package="utilmm"/>
  <depend package="utilrb"/>
  <rosdep name="gccxml"/>
  <rosdep name="boost"/>
  <rosdep name="libxml2"/>
  <rosdep name="facets"/>
  <rosdep name="nokogiri"/>
  <rosdep name="libxslt"/>
  <!-- <depend_optional name="doxygen" type="doc" /> -->
  <!-- <depend_optional name="rdoc" type="doc" /> -->

  <tags>stable</tags>

  <export>
    <cpp cflags="-I${prefix}/install/include" lflags="-L${prefix}/install/lib -ltypeLib -Wl,-rpath,-L${prefix}/lib"/>
  </export>
</package><package name="RoboticArm_communications" path="" repo="pandora-auth-ros-pkg" repo_host="https://github.com/pandora-auth-ros-pkg/pandora-auth-ros-pkg">
  <description brief="RoboticArm_communications">

     The RoboticArm_communications defines messages and actions for the Robotic Arm

  </description>
  <author>Stamadiadou Marina, Allamanis Miltiadis, Sykoudi Pelagia</author>
  <license>MIT</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/RoboticArm_communications</url>
  <depend package="actionlib_msgs"/>

</package><package name="microscribe" path="/stacks/pr2_cockpit/trunk/microscribe" repo="pr2_cockpit" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="microscribe">

     microscribe

  </description>
  <author>Stuart Glaser</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/microscribe</url>
  <depend package="rospy"/>
  <depend package="sensor_msgs"/>
  <depend package="joy"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="robot_setup_tf_tutorial" path="" repo="navigation_tutorials" repo_host="https://kforge.ros.org/navigation/tutorials">
  <description brief="robot_setup_tf">

     robot_setup_tf

  </description>
  <author>Eitan Marder-Eppstein</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://pr.willowgarage.com/wiki/robot_tf_publisher</url>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="geometry_msgs"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="icreate_navigation" path="" repo="cmr-ros-pkg" repo_host="lp:cmr">
  <description brief="icreate_navigation">
  Launch files and configuration to launch the navigation stack on the irobot_create.
  </description>
  <author>Steve</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/icreate_navigation</url>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="hokuyo_node"/>
  <depend package="irobot_create_2_1"/>
  <depend package="gmapping"/>
  <depend package="amcl"/>
</package><package name="rve_dynlib" path="" repo="visualization_engine" repo_host="https://kforge.ros.org/visengine/hg">
  <description brief="rve_dynlib">

     rve_dynlib

  </description>
  <author>Josh Faust</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rve_dynlib</url>
  <depend package="rosconsole"/>
  <depend package="roslib"/>
  
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lrve_dynlib"/>
  </export>

</package><package name="rosworldwind" path="/trunk" repo="rosworldwind" repo_host="http://rosworldwind.googlecode.com/svn">
	<description brief="rosworldwind">
		<p>
	The rosworldwind adapter provides an interface to be able to
	use the NASA World Wind technology and ROS.
		</p>
	</description>
	<author>Michael Angermann, Martin Frassl, Michael Lichtenstern</author>
	<license>BSD</license>
	<review notes="" status="unreviewed"/>
	<url>https://rosworldwind.googlecode.com/svn/trunk/</url>
	<depend package="rosjava"/>
	<depend package="std_msgs"/>
	<depend package="visualization_msgs"/>
	<depend package="tf"/>
	<depend package="turtlesim"/>

	<export>
		<rosjava-src location="src"/>
		<rosjava-pathelement location="libs/miglayout_4.0/miglayout-4.0-swing.jar"/>
		<rosjava-pathelement location="libs/WorldWind_1.2/worldwind.jar"/>
		<rosjava-pathelement location="libs/jogl_1.1.2/jogl.jar"/>
		<rosjava-pathelement location="libs/gluegen/gluegen-rt.jar"/>
		<rosjava-pathelement location="libs/gdal/gdal.jar"/>
	</export>

</package><package name="p2os_with_arm_driver" path="" repo="gt-ros-pkg.humans" repo_host="https://code.google.com/p/gt-ros-pkg.humans">
  <description brief="Patch for p2os_driver to control the 5-dof Pioneer Arm">
    <p>	
	This package contains a patch file for the <a href="http://www.ros.org/wiki/p2os_driver">p2os_driver</a> from USC that
	enables control of the 5-dof Pioneer Arm. The build script automatically downloads the p2os_driver package internally, 
	patches it, and builds a new driver called p2os_with_arm. This package does not rebuild the custom p2os_driver messages, 
	and thus requires the original p2os_driver package to be installed and operational first.
    </p>
    <p>
    This patch will be sent upstream to the maintainer of the p2os_driver package for possible inclusion in a future release.
    </p>
  </description>
  
  <author>Stephen Williams</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/p2os_with_arm_driver</url>
  
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="std_srvs"/>
  <depend package="tf"/>
  <depend package="diagnostic_updater"/>
  <depend package="angles"/>
  <depend package="p2os_driver"/>
  <depend package="urdf"/>
  
</package><package name="aaai_object_detection" path="/trunk/stacks/aaai_lfd_demo/aaai_object_detection" repo="bosch-ros-pkg-e" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg-e/code">
  <description brief="aaai_object_detection">

     aaai_object_detection

  </description>
  <author>Sarah Osentoski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/aaai_object_detection</url>

</package><package name="pr2_map_navigation_app" path="" repo="pr2_map_navigation_app" repo_host="https://kforge.ros.org/pr2apps/pr2_map_navhg">
  <description brief="PR2 Map Nav">
    Map nav for the PR2.
  </description>
  <author>Tony Pratkanis</author>
  <license>BSD</license>
  <url>http://ros.org/wiki/map_nav</url>
  <review notes="" status="na"/>
  <depend package="pr2_position_scripts"/>
  <depend package="pr2_navigation_teleop"/>
  <depend package="pr2_navigation_perception"/>
  <depend package="amcl"/>
  <depend package="pr2_machine"/>
  <depend package="pr2_navigation_global"/>
  <depend package="pr2_navigation_config"/>
  <depend package="tf"/>
  <depend package="mongodb"/> 
  <depend package="topic_tools"/>
  <depend package="map_store"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="priority_mux_msgs" path="" repo="parsec" repo_host="https://code.google.com/p/parsec">
  <description brief="priority_mux_msgs">

     priority_mux_msgs

  </description>
  <author>Damon Kohler</author>
  <license>Apache 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/priority_mux_msgs</url>

</package><package name="nao_description" path="/trunk/humanoid_stacks/nao_common/nao_description" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="URDF robot model of the Nao humanoid, to be used with robot_state_publisher">

     nao_description - Description of the Nao robot model that can be used with robot_state_publisher
	 to display the robot's state of joint angles.

  </description>
  <author>Armin Hornung, Stefan Osswald</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/nao_description</url>
  <depend package="urdf"/>
  <depend package="robot_state_publisher"/>
</package><package name="mapper_cu" path="/trunk/mapper_cu" repo="prairiedog" repo_host="http://prairiedog.googlecode.com/svn">
  <description>A Mapper for a 2D environment</description>
  <author>Michael Otte</author>
  <license>GNU GPL V3</license>
  <review notes="" status="unreviewed"/>
  <url>http://correll.cs.colorado.edu/pmwiki/index.php/Main/MappingSystem</url>
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="hokuyo_listener_cu"/>
  <depend package="tf"/>
</package><package name="interactive_marker_helpers" path="/stacks/object_manipulation/branches/0.6-branch/interactive_marker_helpers" repo="object_manipulation" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="interactive_marker_helpers">

    A library that provides useful interactive marker functions.

  </description>
  <author>Adam Leeper</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/interactive_marker_helpers</url>
  <depend package="roscpp"/>
  <depend package="interactive_markers"/>
  <depend package="sensor_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="tf"/>

  <!-- Only for message helpers... -->
  <depend package="object_manipulator"/>


  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -linteractive_marker_helpers"/>
  </export>
  
</package><package name="ua_woz_experiment" path="/trunk/arrg/ua_apps/ua_woz_experiment" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
  <description brief="UA Wizard of Oz experiments with Charlie robot">

     ua_woz_experiment

  </description>
  <author>robotlab</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ua_woz_experiment</url>
  <depend package="rospy"/>
  <depend package="charlie_controllers"/>
  <depend package="phidgets_ros"/>
  <depend package="std_msgs"/>

</package><package name="sr_movements" path="" repo="shadow_robot" repo_host="lp:sr-ros-interface">
  <description brief="sr_movements">

    Contains a node which can be used to take the hand through a series of movements (perfect for tuning
    controllers for example).

  </description>
  <author>Ugo Cupcic / ugo@shadowrobot.com</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sr_movements</url>
  <depend package="pr2_controllers_msgs"/>
  <depend package="sr_robot_msgs"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="sr_utilities"/>
  <depend package="roscpp"/>

  <rosdep name="libmagick"/>

  <export>
    <cpp cflags="-I${prefix}/include/" lflags="-L${prefix}/lib"/>
  </export>

</package><package name="art_servo" path="/trunk/stacks/art_vehicle/art_servo" repo="utexas-art-ros-pkg" repo_host="http://utexas-art-ros-pkg.googlecode.com/svn">
  <description brief="ART vehicle servo device drivers">

     ROS nodes for the ART autonomous vehicle servo devices.

  </description>
  <author>Austin Robot Technology, Jack O'Quin</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://www.ros.org/wiki/art_servo</url>

  <depend package="angles"/>
  <depend package="art_common"/>
  <depend package="art_msgs"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="std_msgs"/>

</package><package name="tritech_micron" path="/trunk/cturtle/tritech_micron" repo="seabee3-ros-pkg" repo_host="http://seabee3-ros-pkg.googlecode.com/svn">
  <description brief="tritech_micron">

     tritech_micron

  </description>
  <author>Edward</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/tritech_micron</url>
  <depend package="base_libs"/>
  <depend package="common_utils"/>
  
  <export>
    <!--  <nodelet plugin="${prefix}/nodelet_plugins.xml" /> -->
    <cpp cflags="-std=c++0x -I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -ltritech_micron"/>
  </export>

</package><package name="itasc_ardrone" path="" repo="itasc_robots_objects" repo_host="http://git.mech.kuleuven.be/robotics/itasc_robots_objects.git">
	<description brief="itasc_ardrone">
	</description>
	
	<author>Dominick Vanthienen</author>
	<license>BSD,LGPL</license>
	<review notes="" status="unreviewed"/>
	<url>http://www.orocos.org/itasc</url>
	<depend package="rtt"/>
	<depend package="orocos_kdl"/>
	<depend package="kdl_typekit"/>
	<depend package="kdl_parser"/>
	<depend package="eigen"/>
	<depend package="itasc_core"/>
	<depend package="rtt_rosnode"/>
	<depend package="rtt_std_msgs"/>
    <depend package="ardrone_brown"/>
    <depend package="rtt_ardrone_brown"/>
</package><package name="dynamic_movement_primitive_gui" path="" repo="usc-clmc-ros-pkg" repo_host="https://github.com/usc-clmc/usc-clmc-ros-pkg">
  <description brief="dynamic_movement_primitive_gui">

     dynamic_movement_primitive_gui

  </description>
  <author>Peter Pastor</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/dynamic_movement_primitive_gui</url>

  <depend package="roscpp"/>
  <depend package="actionlib"/>

  <depend package="usc_utilities"/>
  <depend package="gui_utilities"/>

  <depend package="task_recorder2"/>
  <depend package="task_recorder2_msgs"/>
  <depend package="task_recorder2_utilities"/>

  <depend package="robot_info"/>
  <depend package="dmp_behavior_actions"/>
  <depend package="dmp_behaviors"/>

  <depend package="dynamic_movement_primitive"/>
  <depend package="dynamic_movement_primitive_utilities"/>

  <rosdep name="libqt4-dev"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -ldynamic_movement_primitive_gui"/>
  </export>

</package><package name="household_objects_database_msgs" path="/stacks/object_manipulation/branches/0.6-branch/household_objects_database_msgs" repo="object_manipulation" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="household_objects_database_msgs">

    ROS message wrappers for some of the data retrieval functions of
    the household_objects_database.

  </description>
  <author>Matei Ciocarlie</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/household_objects_database_msgs</url>

  <depend package="arm_navigation_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>

</package><package name="quadprog" path="" repo="usc-clmc-ros-pkg" repo_host="https://github.com/usc-clmc/usc-clmc-ros-pkg">
  <description brief="quadprog">

     quadprog

  </description>
  <author>Luca Di Gaspero, Eric Moyer (ROS package maintained by Mrinal Kalakrishnan)</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/quadprog</url>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lquadprog"/>
  </export>


</package><package name="veltrobot_teleop" path="/trunk/veltrop-ros-pkg/veltrobot/veltrobot_teleop" repo="veltrop-ros-pkg" repo_host="https://veltrop-ros-pkg.svn.sourceforge.net/svnroot/veltrop-ros-pkg">
  <description brief="veltrobot_teleop">

     Control robots with the keyboard, Sony PS3 six axis controller, or 
     Microsoft XBox Kinect.

  </description>
  <author>Taylor Veltrop</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://taylor.veltrop.com/robotics/khrhumanoidv2.php?topic=veltrop-ros-pkg</url>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="joy"/>
  <depend package="openni"/>
  <depend package="nite"/>
  <depend package="tf"/> 
  <depend package="kdl"/>
  <depend package="veltrobot_msgs"/>
  <depend package="wiimote"/>

</package><package name="rcpdf_interface" path="" repo="stacks/robot_contact_point" repo_host="git://github.com/laas/robot_contact_point">
  <description brief="Robot Contact Point Description Format interfaces">

    Robot Contact Point Description Format interfaces definition.

    Define the model structure (contacts and model) as C++ classes.

  </description>
  <author>Thomas Moulard/thomas.moulard@gmail.com</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rcpdf_interface</url>

  <export>
    <rosdoc config="rosdoc.yaml"/>
    <cpp cflags="-I${prefix}/include `rosboost-cfg --cflags`"/>
  </export>

  <depend package="roscpp"/>
  <depend package="urdf_interface"/>
  <rosdep name="boost"/>
</package><package name="image_view" path="/stacks/image_pipeline/branches/image_pipeline-1.8/image_view" repo="image_pipeline" repo_host="https://code.ros.org/svn/ros-pkg">
  <description>
  A simple viewer for ROS image topics. Includes a specialized viewer
  for stereo + disparity images.
  </description>
  <author>Patrick Mihelich</author>
  <license>BSD</license>
  <review notes="Dec 17, 2009" status="Doc reviewed"/>
  <url>http://www.ros.org/wiki/image_view</url>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -limage_view"/>
    <nodelet plugin="${prefix}/nodelet_plugins.xml"/>
  </export>

  <rosdep name="opencv2"/>
  <depend package="camera_calibration_parsers"/>
  <depend package="cv_bridge"/>
  <depend package="image_transport"/>
  <depend package="nodelet"/>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="stereo_msgs"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="tf_to_pose" path="/trunk/turn_taking/tf_to_pose" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="tf_to_pose">

     tf_to_pose

  </description>
  <author>David Feil-Seifer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/tf_to_pose</url>
  <depend package="tf"/>
  <depend package="kdl"/>
  <depend package="geometry_msgs"/>

</package><package name="youbot_controller" path="" repo="euRobotics_orocos_ws" repo_host="https://github.com/bellenss/euRobotics_orocos_ws">
    <description brief="Orocos youbot_controller Component package">

        This package contains the components of the youbot_controller package

    </description>
    <license>LGPLv2.1 / BSD</license>
    <author>Steven Bellens - steven.bellens@mech.kuleuven.be</author>
    <depend package="rtt"/>
    <depend package="orocos_bfl"/>
    <depend package="bfl_typekit"/>
    <depend package="orocos_kdl"/>
    <depend package="rtt_ros_param"/>
    <depend package="rtt_ros_integration"/>
    <depend package="geometry_msgs"/>
    <depend package="rtt_ros_integration_geometry_msgs"/>
</package><package name="veltrobot_data" path="/trunk/veltrop-ros-pkg/veltrobot/veltrobot_data" repo="veltrop-ros-pkg" repo_host="https://veltrop-ros-pkg.svn.sourceforge.net/svnroot/veltrop-ros-pkg">
  <description brief="veltrobot_data">

     This package has no code.  It contains launchers, config data, 
     and pose/motion data for the packages in the veltrop-ros-pkg
     repository.  Also contains code to import poses from Kondo's
     Heart2Heart software.

  </description>
  <author>space</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://taylor.veltrop.com/robotics/khrhumanoidv2.php?topic=veltrop-ros-pkg</url>

  <depend package="robot_state_publisher"/>
  <depend package="veltrobot_teleop"/>
  <depend package="veltrobot_movement"/>
  <depend package="veltrobot_sensors"/>
  <depend package="roboard_servos"/>
  <depend package="roboard_sensors"/>
   
</package><package name="cob_hackathon_326" path="" repo="cob_scenarios" repo_host="git://github.com/ipa320/cob_scenarios">
  <description brief="cob_hackathon_326">

     cob_hackathon_326

  </description>
  <author>fmw</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_hackathon_326</url>
  <depend package="cob_generic_states_experimental"/>

</package><package name="cob_3d_mapping_common" path="" repo="cob_environment_perception" repo_host="git://github.com/ipa320/cob_environment_perception">
  <description brief="cob_3d_mapping_common">

     Common classes and nodes for 3D environment perception.

  </description>
  <author>Georg Arbeiter</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_3d_mapping_common</url>

  <depend package="roscpp"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="tf"/>
  <depend package="tf_conversions"/>
  <depend package="visualization_msgs"/>
  <depend package="nodelet"/>
  <depend package="cob_srvs"/>
  <depend package="cob_3d_mapping_msgs"/>
  <depend package="interactive_markers"/>
  
  <export>
  <cpp cflags="-I${prefix}/common/include -I${prefix}/ros/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lcob_3d_mapping_common"/>
  </export>

</package><package name="local_app_manager" path="/trunk/jsk_android_apps_api9/local_app_manager" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="local_app_manager">

     local_app_manager

  </description>
  <author>leus</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/local_app_manager</url>

  <depend package="app_manager"/>

  <!-- for battery information -->
  <depend package="turtlebot_node"/>
  <depend package="diagnostic_aggregator"/>

</package><package name="navp_action" path="" repo="ias_common" repo_host="http://code.in.tum.de/git/ias-common.git">
  <description brief="nav_pcontroller">

     simple P-Controller for a holonomic robot base.

  </description>
  <author>Ingo Kresse</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
</package><package name="pointcloud_to_laserscan" path="" repo="turtlebot" repo_host="https://kforge.ros.org/turtlebot/turtlebot">
  <description brief="pointcloud to laserscan">

     Converts a 3D Point Cloud into a 2D laser scan.  This is useful for making devices like the Kinect appear like a laser scanner for 2D-based algorithms (e.g. laser-based SLAM).

  </description>
  <author>Tully Foote</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pointcloud_to_laserscan</url>
  <depend package="nodelet"/>
  <depend package="sensor_msgs"/>
  <depend package="pcl_ros"/>
  <depend package="dynamic_reconfigure"/>
  <export>
    <nodelet plugin="${prefix}/nodelets.xml"/>
  </export>
</package><package name="katana_tutorials" path="" repo="katana_driver" repo_host="http://kos.informatik.uni-osnabrueck.de/katana_driver.git">
  <description brief="Some test and demo programs for the katana_driver stack.">

     This package contains test and demo programs for the katana_driver stack.

  </description>
  <author>Martin Günther</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/katana_tutorials</url>

  <depend package="roscpp"/>
  <depend package="actionlib"/>

  <!-- JointTrajectory message -->
  <depend package="trajectory_msgs"/>

  <!-- FollowJointTrajectory action -->
  <depend package="control_msgs"/>

  <!-- PR2's JointTrajectory action -->
  <depend package="pr2_controllers_msgs"/>

  <!-- JointState message -->
  <depend package="sensor_msgs"/>

  <!-- trajectory filtering-->
  <depend package="trajectory_filter_server"/>
  <depend package="katana_trajectory_filter"/>
  <depend package="arm_navigation_msgs"/>
</package><package name="astromech_sense" path="/astromech_sense" repo="astromech-ros" repo_host="https://astromech-ros.svn.sourceforge.net/svnroot/astromech-ros">
  <description brief="astromech_cam">

     astromech_cam: Nodes to access and display cameras. Camera access
     is handled by OpenCV.

  </description>
  <author>Björn Giesler</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/astromech_cam</url>

  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="astromech_msgs"/>
  <depend package="cv_bridge"/>
  <depend package="std_msgs"/>
  <depend package="image_transport"/>
  <depend package="camera_info_manager"/>
  <depend package="pcl_ros"/>

</package><package name="husky_navigation" path="" repo="clearpath_husky" repo_host="https://github.com/clearpathrobotics/clearpath_husky">
  <description brief="husky_navigation">

     The husky_navigation package contains launchers for gmapping and amcl, similar to those used by the TurtleBot.

  </description>
  <author>Ryan Gariepy</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/husky_navigation</url>
  <depend package="move_base"/>
  <depend package="gmapping"/>
</package><package name="navfn" path="" repo="navigation" repo_host="https://kforge.ros.org/navigation/navigation">
 <description brief="A fast interpolated navigation function">

navfn provides a fast interpolated navigation function that can be used to create plans for a mobile base. The planner assumes a circular robot and operates on a costmap to find a minimum cost plan from a start point to an end point in a grid. The navigation function is computed with Dijkstra's algorithm, but support for an A* heuristic may also be added in the near future. navfn also provides a ROS wrapper for the navfn planner that adheres to the nav_core::BaseGlobalPlanner interface specified in <a href="http://ros.org/wiki/nav_core">nav_core</a>.

 </description>
 <author>Kurt Konolige, Eitan Marder-Eppstein</author>
 <license>BSD</license>
 <review notes="" status="Doc reviewed"/>
 <url>http://ros.org/wiki/navfn</url>
 <depend package="rosconsole"/>
 <depend package="roscpp"/>
 <depend package="geometry_msgs"/>
 <depend package="costmap_2d"/>
 <depend package="nav_core"/>
 <depend package="pluginlib"/>
 <depend package="nav_msgs"/>
 <depend package="tf"/>
 <depend package="visualization_msgs"/>
 <depend package="pcl_ros"/>
 <depend package="common_rosdeps"/>
 <rosdep name="eigen"/>

 <rosdep name="fltk"/>
 <rosdep name="netpbm"/>
 <export>
  <cpp cflags="-I${prefix}/include -I${prefix}/cfg/cpp" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lnavfn"/>
  <nav_core plugin="${prefix}/bgp_plugin.xml"/>
 </export>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="two_lwr_defs" path="" repo="two_lwr_robot" repo_host="https://github.com/RCPRG-ros-pkg/two_lwr_robot">
  <description brief="two_lwr_defs">

     two_lwr_defs

  </description>
  <author>Konrad Banachowicz</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/two_lwr_defs</url>

</package><package name="stanford_parser" path="" repo="roboframenet" repo_host="https://kforge.ros.org/appmanandroid/roboframenet">
  <description brief="stanford_parser">
    stanford_parser contains parts of the Stanford Parser necessary for stanford_parser_ros.  For the full Stanford Parser source, please see: http://nlp.stanford.edu/software/lex-parser.shtml
  </description>
  <author>Brian Thomas</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/stanford_parser</url>

  <export>
    <rosjava-src location="src"/>
    <rosjava-pathelement built="true" location="stanford-parser.jar"/>
  </export>


</package><package name="dwa_local_planner" path="" repo="navigation" repo_host="https://kforge.ros.org/navigation/navigation">
  <description brief="A local planner for a mobile base that uses the Dynamic Window Approach to local control.">

    This package provides an implementation of the Dynamic Window Approach to
    local robot navigation on a plane. Given a global plan to follow and a
    costmap, the local planner produces velocity commands to send to a mobile
    base. This package supports any robot who's footprint can be represented as
    a convex polygon or cicrle, and exposes its configuration as ROS parameters
    that can be set in a launch file. The parameters for this planner are also
    dynamically reconfigurable. This package's ROS wrapper adheres to the
    BaseLocalPlanner interface specified in the <a href="http://ros.org/wiki/nav_core">nav_core</a> package.

  </description>
  <author>Eitan Marder-Eppstein</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/dwa_local_planner</url>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="costmap_2d"/>
  <depend package="roslib"/>
  <depend package="nav_core"/>
  <depend package="nav_msgs"/>
  <depend package="base_local_planner"/>
  <depend package="angles"/>
  <depend package="dynamic_reconfigure"/>
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/cfg/cpp" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -ldwa_local_planner"/>
    <nav_core plugin="${prefix}/blp_plugin.xml"/>
  </export>
  <depend package="common_rosdeps"/>
  <rosdep name="eigen"/>
</package><package name="tabletop_object_detector" path="/stacks/tabletop_object_perception/branches/0.4-branch/tabletop_object_detector" repo="tabletop_object_perception" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="tabletop_object_detector">
    Performs object segmentation and simple object recognition for
    constrained scenes.
  </description>

  <author>Marius Muja and Matei Ciocarlie</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/object_detector</url>

  <depend package="roscpp"/>
  <depend package="tf"/>

  <depend package="visualization_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>

  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="distance_field"/>
  <depend package="household_objects_database_msgs"/>

 <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg_gen/cpp -I${prefix}/srv_gen/cpp" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -ltabletop_model_fitter -lmarker_generator"/>
 </export>

</package><package name="cpp_introspection" path="" repo="cpp_introspection" repo_host="https://github.com/tu-darmstadt-ros-pkg/cpp_introspection">
  <description brief="cpp_introspection">

     cpp_introspection enables introspection of ROS message types in roscpp.
     Introspection is useful when message data is going to be exported to or imported from
     other data formats or applications.

  </description>
  <author>Johannes Meyer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cpp_introspection</url>

  <depend package="rosconsole"/>
  <depend package="rostime"/>
  <depend package="roscpp_traits"/>
  <depend package="roscpp_serialization"/>
  <depend package="rosbuild"/>

  <export>
    <rosbuild cmake_directory="${prefix}/share/cpp_introspection/cmake"/>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lcpp_introspection"/>
  </export>

</package><package name="lisp_unit" path="" repo="cram_core" repo_host="https://github.com/moesenle/cram_core">
  <description brief="lisp-unit">
      A unit testing framework for common lisp.
  </description>
  <author/>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
</package><package name="sr_gui_manipulation" path="" repo="sr_object_manipulation" repo_host="lp:sr-manipulation">
  <description brief="sr_gui_manipulation">

     sr_gui_manipulation - Shadow Robot GUI plugin for manipulation, detecting objects and starting grabs.

  </description>
  <author>Mark Pitchless</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sr_gui_manipulation</url>
  <depend package="rospy"/>
  <depend package="rosgui"/>
  <depend package="rosgui_rospy"/>
  <depend package="rosgui_roscpp"/>
  <depend package="rostopic"/>
  <depend package="std_msgs"/>
  <depend package="std_srvs"/>
  <depend package="tabletop_collision_map_processing"/>
  <depend package="object_manipulator"/>
  <depend package="sr_robot_lib"/>
  <depend package="sr_hand"/>
  <depend package="actionlib"/>
  <depend package="control_msgs"/>

  <export>
    <rosgui plugin="${prefix}/sr_gui_manipulation.xml"/>
  </export>

</package><package name="pr2_navigation_local" path="" repo="pr2_navigation" repo_host="https://kforge.ros.org/pr2navigation/hg">
  <description brief="XML files for running the move_base node on a PR2 in an odometric frame.">
    This package holds xml files for running the <a href="http://www.ros.org/wiki/move_base">move_base</a> node on a PR2 robot in an odometric frame. No static map is needed for the <a href="http://www.ros.org/wiki/move_base">move_base</a> node in this configuration.
  </description>
  <author>Eitan Marder-Eppstein</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_navigation_local</url>
  <depend package="move_base"/>
  <depend package="pr2_machine"/>
  <depend package="pr2_navigation_config"/>
  <depend package="pr2_move_base"/>
  <depend package="topic_tools"/>
</package><package name="augmented_object_selection" path="/trunk/stacks/bosch_shared_autonomy/augmented_object_selection" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="augmented_object_selection">

     augmented_object_detector

  </description>
  <author>Benjamin Pitzer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/augmented_object_selection</url>
  <depend package="actionlib"/>
  <depend package="object_manipulation_msgs"/>
	<depend package="tabletop_object_detector"/>
	<depend package="tabletop_collision_map_processing"/>
	<depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="tf"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="opencv2"/>
  <depend package="image_proc"/>
  <depend package="cv_bridge"/>
  <depend package="image_transport"/>
  <depend package="grabcut_3d"/>	
  <depend package="tabletop_collision_map_processing"/>	
  
</package><package name="fawkes_lua" path="" repo="behavior_engine" repo_host="https://github.com/timn/ros-behavior_engine">
  <description brief="fawkes_lua">
    Lua modules imported and synced with Fawkes (http://www.fawkesrobotics.org)
  </description>
  <author>Tim Niemueller</author>
  <license>GPLv2+</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/fawkes_lua</url>
  <depend package="roslua"/>
</package><package name="pr2_bringup_tests" path="/stacks/pr2_self_test/trunk/pr2_bringup_tests" repo="pr2_self_test" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="Tests for verifying functionality of complete PR2">
Complete functionality tests for PR2. Contains utilities designed to test and verify devices, mechanicals and sensors.
  </description>
  <author>Kevin Watts</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_bringup_tests</url>
  <depend package="pr2_bringup"/>
  <depend package="pr2_controller_manager"/>
  <depend package="ethercat_trigger_controllers"/>
  <depend package="pr2_mannequin_mode"/>
  <depend package="image_view"/>
  <depend package="camera_calibration"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="katana_object_manipulation_launch" path="" repo="katana_manipulation" repo_host="http://kos.informatik.uni-osnabrueck.de/katana_manipulation.git">
  <description brief="Config package for Katana object_manipulator">

     Config package for Katana object_manipulator

  </description>
  <author>Henning Deeken</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/katana_object_manipulation_launch</url>
  <depend package="object_manipulator"/>
  <depend package="orrosplanning"/>

</package><package name="face_contour_detector" path="/trunk/portrait_bot/face_contour_detector" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="face_contour_detector">
  	Takes an image of a face (and a mask image) and extracts characteristic lines and returns an image of those.
  </description>
  <author>Fabian Wenzelmann and Julian Schmid</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/face_contour_detector</url>
  <export>
  	<cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lcontour_detector"/>
  	<rosdoc config="rosdoc.yaml"/>
  </export>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="sensor_msgs"/>
  <depend package="image_transport"/>
  <depend package="portrait_robot_msgs"/>
  <depend package="tinyxml"/>
  <rosdep name="python-imaging-tk"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>

</package><package name="SimGazeboTransmissions" path="/darpa_arm_sim_servers/SimGazeboTransmissions" repo="darpa_arm_sim_servers" repo_host="http://svn.thearmrobot.com">
  <description brief="Transmissions used in the DARPA ARM Robot Simulator">Transmissions used in the DARPA ARM Robot Simulator</description>
  <author>John Hsu, Stuart Glaser, and Rorry Brenner</author>
  <license>BSD</license>
  <depend package="pr2_gazebo_plugins"/>
  <depend package="gazebo_plugins"/>
  <depend package="gazebo_tools"/>
  <depend package="pr2_mechanism_model"/>
  <depend package="control_toolbox"/>
  <depend package="RobotModel"/>


    <depend package="urdf"/>
    <depend package="gazebo"/>

  
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -lpr2_bringup_gazebo_demo -Wl,-rpath,${prefix}/lib"/>
    <pr2_mechanism_model plugin="${prefix}/transmission_plugins.xml"/>
  </export>

</package><package name="joy_controller" path="/trunk/Scan3D/joy_controller" repo="roblab-whge-ros-pkg" repo_host="http://roblab-whge-ros-pkg.googlecode.com/svn">
  <description brief="joy_controller">

     Joystick driver to control the roomba and to start a 3D scan.

  </description>
  <author>B. Möller</author>
  <license>CreativeCommons BY-NC-SA License</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/joy_controller</url>
  <depend package="roscpp"/>
  <depend package="joy"/>
  <depend package="rcf_com_roomba_base"/>

</package><package name="phidgets_ros" path="/trunk/arrg/ua_drivers/phidgets_ros" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="ROS wrapper for Phidgets sensors">
        ROSification of Phidgets sensors. Publishes sensor data to ROS topics.
    </description>

    <author>UA Robotics Research Group</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/phidgets_ros</url>

    <depend package="rospy"/>
    <depend package="std_msgs"/>
    <depend package="phidgets_py_api"/>
</package><package name="rod4_node" path="/trunk/dfki_sks_laser_drivers/rod4_node" repo="dfki-sks-ros-pkg" repo_host="https://svn-agbkb.informatik.uni-bremen.de/dfki-sks-ros-pkg">
  <description brief="rod4_node">

     Leuze rotoScan ROD-4 laser rangefinder driver.  The driver
     currently supports ROD-4 models connected via Ethernet only but
     could be extended to interface with RS422 models.

  </description>
  <author>Rene Wagner</author>
  <license>BSD</license>
  <review notes="Use rotoscan_node" status="deprecated"/>
  <url>http://ros.org/wiki/rod4_node</url>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="timeutils"/>
  <rosdep name="boost"/>

</package><package name="schunk_motion_controllers" path="/trunk/schunk_motion_controllers" repo="cmu-ros-pkg" repo_host="https://cmu-ros-pkg.svn.sourceforge.net/svnroot/cmu-ros-pkg">
  <description brief="Schunk Motion Controller Server">
    Implements the Schunk Motion communication protocol as described at http://www.schunk.com.
    The protocol can function on RS232 serial, CAN, and Profibus. This package implements the serial communications.
  </description>
  <author>Rosen Diankov (rdiankov@cs.cmu.edu)</author>
  <license>The Apache License 2.0</license>
  <depend package="openrave_robot_control"/>
</package><package name="stomp_motion_planner" path="" repo="usc-clmc-ros-pkg" repo_host="https://github.com/usc-clmc/usc-clmc-ros-pkg">
  <description brief="Stochastic Trajectory Optimization for Motion Planning">

  </description>
  <author>Mrinal Kalakrishnan / mail@mrinal.net</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/stomp_motion_planner</url>

  <depend package="roscpp"/>
  <depend package="rosbag"/>
  <depend package="planning_models"/>
  <depend package="planning_environment"/>
  <depend package="arm_navigation_msgs"/>
  <depend package="kdl"/>
  <depend package="kdl_parser"/>
  <depend package="angles"/>
  <depend package="visualization_msgs"/>
  <depend package="tf"/>
  <depend package="distance_field"/>
  <depend package="sensor_msgs"/>
  <depend package="trajectory_msgs"/>
  <depend package="filters"/>
  <depend package="spline_smoother"/>
  <depend package="kinematics_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="usc_utilities"/>
 <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/srv/cpp  -I${prefix}/msg/cpp"/>
  </export>


  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="wbc_core" path="" repo="whole_body_control" repo_host="https://github.com/poftwaresatent/whole_body_control">
  <description brief="A ROS wrapper for stanford-wbc.sourceforge.net">
    This is a ROS wrapper for the Stanford Whole-Body Control
    framework from http://stanford-wbc.sourceforge.net/.
  </description>
  <author>Roland Philippsen</author>
  <license>LGPLv3</license>
  <review notes="" status="3rdparty"/>
  <url>http://stanford-wbc.sourceforge.net/</url>
  <depend package="roscpp"/>
  <depend package="eigen"/>
  <depend package="yaml_cpp"/>
  <depend package="wbc_msgs"/>
  <export>
    <!-- See comments in CMakeLists.txt for further comments on
	 wbc_tinyxml weirdness -->
    <cpp cflags="-I${prefix}/include    -I${prefix}/stanford_wbc/jspace    -I${prefix}/stanford_wbc/tao    -I${prefix}/stanford_wbc/opspace/include    -I${prefix}/stanford_wbc/3rdparty/reflexxes_otg/include    -DTIXML_USE_STL -I${prefix}/stanford_wbc/3rdparty/wbc_tinyxml" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lwbc_core"/>
  </export>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="esc_common" path="/trunk/extremum_seeking/esc_common" repo="dri-ros-pkg" repo_host="https://svn.3me.tudelft.nl/dri-ros-pkg">
  <description brief="esc_common">

     Common components for extremum seeking control

  </description>
  <author>Berk Calli and Wouter Caarls</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/esc_common</url>
  
  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>
  
</package><package name="opencv2" path="/stacks/vision_opencv/trunk/opencv2" repo="vision_opencv" repo_host="https://code.ros.org/svn/ros-pkg">
<description brief="The Open Source Computer Vision Library 2.0">

Deprecated. This package now forwards opencv pkgconfig flags through the manifest,
do not depend on this feature.  Transistion you build files to use cmake's
find_package infrastructure for opencv.

This package contains the latest code from the Open Source Computer Vision
Library (opencv).  This ROS package does not modify OpenCV in any way;
it simply provides a convenient way to download and compile the library
in a way that can be managed by the ROS dependency system.

Note: The cv_bridge package in the vision_opencv stack eases conversion between ROS
Image messages and OpenCV images.


</description>
<author>Gary Bradski and many others. See web page for a full contributor list. ROS package maintained by James Bowman.</author>
<license>BSD</license>
<review notes="" status="3rdparty"/>
<url>http://opencv.willowgarage.com</url>
<export>
  <cpp cflags="`pkg-config opencv --cflags`" lflags="`pkg-config opencv --libs`"/>
  <!-- On OS X there is a cmake Findopencv.cmake so pkg-config isn't necessary -->
  <cpp cflags="`pkg-config opencv --cflags`" lflags="`pkg-config opencv --libs`" os="osx"/>
</export>
<versioncontrol type="svn" url="https://code.ros.org/svn/opencv"/>

<platform os="ubuntu" version="9.04"/>
<platform os="ubuntu" version="9.10"/>
<platform os="ubuntu" version="10.04"/>
  
<rosdep name="opencv2"/>

</package><package name="r2_teleop" path="" repo="nasa_r2_common" repo_host="https://bitbucket.org/nasa_ros_pkg/nasa_r2_common">
  <description brief="r2_teleop">

     r2_teleop

  </description>
  <author>Paul Dinh</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/r2_teleop</url>

  <depend package="interactive_markers"/>  
<!--  <depend package="pr2_interactive_manipulation"/> -->
  <depend package="tf"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="r2_msgs"/>
  <depend package="kdl"/>

</package><package name="moo" path="" repo="roboframenet" repo_host="https://kforge.ros.org/appmanandroid/roboframenet">
  <description brief="moo">

    moo makes your device moo.  Implemented as an RFNServer.  Credit goes to those who made chirp for the turtlebot; I used most of their code writing this.

  </description>
  <author>Brian Thomas</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/moo</url>
  <depend package="rospy"/>
  <depend package="rfnserver"/>
  <rosdep name="alsa-utils"/>

</package><package name="pr2_execution_trace_visualization" path="/stacks/cram_demo_apps/pr2_execution_trace_visualization" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="pr2_execution_trace_visualization">

     pr2_execution_trace_visualization

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_execution_trace_visualization</url>
  <depend package="cram_pr2_executive"/>
  <depend package="cram_reasoning"/>
  <depend package="cram_plan_knowledge"/>
  <depend package="cram_execution_trace"/>
  <depend package="cram_plan_library"/>
  <depend package="cram_roslisp_common"/>
  <depend package="cram_utilities"/>
  <depend package="designators"/>
  <depend package="designators_ros"/>  
  <depend package="cl_json_pl_server"/>
  <depend package="visualization_msgs"/>
  <depend package="tf_trajectory_visualization"/>
  <depend package="geometry_msgs"/>
  <depend package="ias_kitchen_defs"/>
  <depend package="table_costmap"/>

</package><package name="velocity_safety" path="" repo="uuisrc-ros-pkg" repo_host="https://github.com/cburbridge/uuisrc-ros-pkg">
  <description brief="velocity_safety">

	A node to filter join velocity messages

  </description>
  <author>Chris Burbridge</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/spline_controller</url>
  <depend package="rospy"/>
  <depend package="schunk_kinematics"/>
  <depend package="sensor_msgs"/>

</package><package name="fixed_object" path="" repo="itasc_robots_objects" repo_host="http://git.mech.kuleuven.be/robotics/itasc_robots_objects.git">
    <description brief="Fixed Object">
        This package contains a Fixed Object, which is an itasc object
	    Part of the iTaSC-Skill framework, itasc_robots_objects.
    </description>
    <license>BSD,LGPL</license>
    <author>Dominick Vanthienen</author>
    <url>http://www.orocos.org/itasc</url>
    <depend package="rtt"/>
    <rosdep name="eigen"/>
    <depend package="orocos_kdl"/>
    <depend package="ocl"/>
    <depend package="itasc_core"/>
</package><package name="collvoid_turtlebot" path="" repo="multi_robot_collision_avoidance" repo_host="https://kforge.ros.org/collvoid/collvoid">
  <description brief="collvoid_turtlebot">

     collvoid_turtlebot

  </description>
  <author>Daniel Claes</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/collvoid_turtlebot</url>

</package><package name="rosbridge_server" path="" repo="rosbridge_suite" repo_host="http://kforge.ros.org/rosbridge/git">
  <description brief="rosbridge_server">

     rosbridge_server

  </description>
  <author>Jonathan Mace</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosbridge_server</url>
  <depend package="rospy"/>
  <depend package="rosbridge_library"/>

</package><package name="powercube_ptu_process_module" path="" repo="cram_rosie" repo_host="http://code.in.tum.de/git/cram-rosie.git">
  <description brief="powercube_ptu_process_module">

     powercube_ptu_process_module

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/powercube_ptu_process_module</url>
  <depend package="cram_process_modules"/>
  <depend package="cram_designators"/>
  <depend package="cram_reasoning"/>
  <depend package="cram_roslisp_common"/>
  <depend package="cogman_msgs"/>
  <depend package="cljlo"/>
  <depend package="cljlo_utils"/>
  <depend package="actionlib_lisp"/>

</package><package name="move_base" path="" repo="navigation" repo_host="https://kforge.ros.org/navigation/navigation">
  <description brief="A general navigation stack">

The move_base package provides an implementation of an action (see the <a href="http://www.ros.org/wiki/actionlib">actionlib</a> package) that, given a goal in the world, will attempt to reach it with a mobile base. The move_base node links together a global and local planner to accomplish its global navigation task. It supports any global planner adhering to the nav_core::BaseGlobalPlanner interface specified in the <a href="http://www.ros.org/wiki/nav_core">nav_core</a> package and any local planner adhering to the nav_core::BaseLocalPlanner interface specified in the <a href="http://www.ros.org/wiki/nav_core">nav_core</a> package. The move_base node also maintains two costmaps, one for the global planner, and one for a local planner (see the <a href="http://www.ros.org/wiki/costmap_2d">costmap_2d</a> package) that are used to accomplish navigation tasks.

  </description>
 <author>Eitan Marder-Eppstein</author>
 <license>BSD</license>
 <review notes="" status="Doc reviewed"/>
 <url>http://ros.org/wiki/move_base</url>

 <depend package="roscpp"/>
 <depend package="rosconsole"/>
 <depend package="std_msgs"/>
 <depend package="move_base_msgs"/>
 <depend package="geometry_msgs"/>
 <depend package="visualization_msgs"/>
 <depend package="actionlib"/>
 <depend package="nav_core"/>
 <depend package="pluginlib"/>
 <depend package="costmap_2d"/>
 <depend package="tf"/>
 <depend package="nav_msgs"/>
 <depend package="roslib"/>
 <depend package="rospy"/>
 <depend package="rosmsg"/>
 <depend package="rostopic"/>
 <depend package="std_srvs"/>
 <depend package="dynamic_reconfigure"/>
 <depend package="common_rosdeps"/>
 <rosdep name="eigen"/>

 <!--These deps aren't strictly needed, but given the default parameters require them to work, we'll enforce that they build -->
 <depend package="base_local_planner"/>
 <depend package="navfn"/>
 <depend package="clear_costmap_recovery"/>
 <depend package="rotate_recovery"/>


 <export>
 <cpp cflags="-I${prefix}/include `rosboost-cfg --cflags`" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib `rosboost-cfg --lflags thread`"/>
 </export>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="wubble_navigation_local" path="/trunk/arrg/wubble_navigation/wubble_navigation_local" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="XML files for running the move_base node on a Wubble in an odometric frame.">
        This package holds xml files for running the <a href="http://www.ros.org/wiki/move_base">move_base</a> node on a Wubble robot in an odometric frame. No static map is needed for the <a href="http://www.ros.org/wiki/move_base">move_base</a> node in this configuration.
    </description>
    <author>Antons Rebguns</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/wubble_navigation_local</url>
    
    <depend package="move_base"/>
    <depend package="wubble_navigation_config"/>
</package><package name="pr2_arm_navigation_actions" path="/stacks/pr2_arm_navigation/trunk/pr2_arm_navigation_actions" repo="pr2_arm_navigation" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_arm_navigation_actions">

     pr2_arm_navigation_actions

  </description>
  <author>Sachin Chitta</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_arm_navigation_actions</url>
  <depend package="pr2_arm_navigation_config"/>
  <depend package="planning_environment"/>
  <depend package="trajectory_filter_server"/>
  <depend package="move_arm"/>
  <depend package="move_arm_warehouse"/>
  <depend package="pr2_controller_manager"/>
  <depend package="joint_trajectory_action"/>
  <depend package="pr2_msgs"/>
  <depend package="arm_navigation_msgs"/>
  <depend package="move_arm_head_monitor"/>
  <depend package="pr2_machine"/>
  <depend package="dynamic_reconfigure"/>
  
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="checkerboard_pose_estimation" path="" repo="pr2_plugs" repo_host="https://kforge.ros.org/plugs/hg">
  <description brief="checkerboard_pose_estimation">

     checkerboard_pose_estimation

  </description>
  <author>Patrick Mihelich</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/checkerboard_pose_estimation</url>

  <depend package="roscpp"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="image_transport"/>
  <depend package="visual_pose_estimation"/>
  <!-- Lowres detector uses some code from outlet detection. -->
  <depend package="outlet_pose_estimation"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lcheckerboard_pose_estimation"/>
  </export>

</package><package name="sparse_stereo" path="/trunk/cturtle/sparse_stereo" repo="seabee3-ros-pkg" repo_host="http://seabee3-ros-pkg.googlecode.com/svn">
  <description brief="sparse_stereo">

     sparse_stereo

  </description>
  <author>Edward T. Kaszubski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sparse_stereo</url>
  <depend package="roscpp"/>
  <depend package="opencv2"/>
  <depend package="sensor_msgs"/>
  <depend package="image_transport"/>
  <depend package="cv_bridge"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="driver_base"/>
  <depend package="image_geometry"/>
  <depend package="base_libs"/>
  <depend package="visualization_msgs"/>
  <depend package="eigen"/>
  <depend package="pcl"/>
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp -I${prefix}/srv/cpp" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lsparse_stereo"/>
  </export>
</package><package name="starmac_tools" path="" repo="starmac-ros-pkg" repo_host="https://bitbucket.org/bouffard/starmac-ros-pkg">
  <description brief="starmac_tools">

    Various tools, e.g. for loading bagfile data into Python or converting to MATLAB.

  </description>
  <author>bouffard</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/starmac_tools</url>
  <depend package="rosbag"/>
  <depend package="tf"/>
  <depend package="starmac_msgs"/>
  <depend package="starmac_roslib"/>
  <depend package="nav_msgs"/>
  <depend package="topic_tools"/>
  <depend package="nodelet"/>
  <depend package="pluginlib"/>



  <rosdep name="python-numpy"/>
  <rosdep name="python-scipy"/>


  <export>
    <nodelet plugin="${prefix}/nodelets.xml"/>
  </export>

</package><package name="bspline" path="" repo="usc-clmc-ros-pkg" repo_host="https://github.com/usc-clmc/usc-clmc-ros-pkg">
  <description brief="bspline">

    This software is written by Gary Granger of the National Center for
    Atmospheric Research (NCAR), sponsored by the National Science Foundation
    (NSF). The algorithm is based on the cubic spline described by Katsuyuki
    Ooyama in Montly Weather Review, Vol 115, October 1987.  This
    implementation has benefited from comparisons with a previous FORTRAN
    implementation by James L. Franklin, NOAA/Hurricane Research Division.

    This package does not modify the BSpline library in any way; it simply
    provides a convenient way to download and compile the headers and library
    in a way that can be managed by the ROS dependency system.

  </description>
  <author>Gary Granger (http://www.eol.ucar.edu/homes/granger). ROS package maintained by Peter Pastor</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.eol.ucar.edu/homes/granger/bspline/doc/</url>
  <depend package="std_msgs"/>
  <depend package="roscpp"/>	

	<export>
		<cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/include -L${prefix}/lib -lbspline"/>
	</export>

  <rosdep name="scons"/>	
	
</package><package name="rosserial_python" path="" repo="rosserial" repo_host="https://kforge.ros.org/rosserial/hg">
  <description brief="A Python-based implementation of the ROS serial protocol.">
    A Python-based implementation of the ROS serial protocol. 
  </description>
  <author>Michael Ferguson</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosseral_python</url>
  <depend package="rospy"/>
  <depend package="rosserial_msgs"/>
</package><package name="summit_tf" path="/trunk/trunk/summit_sim/summit_tf" repo="summit-ros-pkg" repo_host="http://summit-ros-stack.googlecode.com/svn">
  <description brief="summit_tf">

     summit_tf

  </description>
  <author>Roberto</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/summit_tf</url>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>

</package><package name="robotnik_worlds" path="/trunk/trunk/summit_xl_sim_fuerte/robotnik_worlds" repo="summit-xl-ros-stack" repo_host="http://summit-xl-ros-stack.googlecode.com/svn">
  <description brief="robotnik_worlds">

     robotnik_worlds
	Stage worlds of the robotnik office

  </description>
  <author>Roberto</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/robotnik_worlds</url>

</package><package name="qt_create" path="" repo="qt_ros" repo_host="https://github.com/stonier/qt_ros">
  <description brief="Templates to create qt-ros packages">

     Provides templates and scripts for creating qt-ros packages
     (similar to roscreate-pkg).

  </description>
  <author>Daniel Stonier</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/qt_create</url>

</package><package name="wam_node" path="/trunk/wam_robot/wam_node" repo="barrett-ros-pkg" repo_host="http://web.barrett.com/svn/barrett-ros-pkg">
  <description brief="wam_node">

     Barrett Technology ROS node for 4-DOF and 7-DOF WAM to be run on WAM robot PC or external PC via CAN.

  </description>
  <author>Barrett Technology Inc., Kyle Maroney</author>
  <license>GPL</license>
  <url>http://ros.org/wiki/wam_node</url>
  <depend package="std_msgs"/>
  <depend package="std_srvs"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="roscpp"/>
  <depend package="bullet"/>
  <depend package="tf"/>
  <depend package="wam_msgs"/>
  <depend package="wam_srvs"/>
</package><package name="clean_door_planner" path="/sbpl_door_planning/trunk/clean_door_planner" repo="sbpl_door_planning" repo_host="https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs">
  <description brief="sbpl_door_planner_plugin"> sbpl_door_planner_plugin </description>
  <author>Steven Gray</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>Coming soon...</url>
  <depend package="roscpp"/>
  <depend package="sbpl"/>
  <depend package="sbpl_door_planner"/>
  <depend package="costmap_2d"/>
  <depend package="nav_core"/>
  <depend package="pluginlib"/>
  <depend package="door_msgs"/>
  <depend package="pr2_doors_actions"/>
  <depend package="door_handle_detector"/>
  <depend package="pr2_navigation_teleop"/>
  <depend package="pr2_navigation_perception"/>
  <depend package="pr2_navigation_local"/>
  <depend package="pr2_controller_manager"/>
  <depend package="pr2_mechanism_model"/>
  <depend package="move_base"/>
  <depend package="manipulation_msgs"/>
  <depend package="trajectory"/>
  <depend package="pose_base_controller"/>
  <depend package="kdl"/>
  <depend package="eigen"/>


  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lsbpl_door_planner_plugin"/>
    <nav_core plugin="${prefix}/door_planner_plugin.xml"/>
  </export>

</package><package name="cyphy_mk_falcon" path="" repo="cyphy_legacy" repo_host="http://launchpad.net/cyphy">
  <description brief="cyphy_mk_falcon">
cyphy Falcon control with Mikrokopter. This package allows to control a MikroKopter using Falcon joystick.
  </description>
  <author>Inkyu Sa</author>
  <license url="http://www.gnu.org/licenses/lgpl-3.0.txt">LGPLv3</license>
  <review notes="This is unstable and under active development." status="experimental"/>
<url>http://ros.org/wiki/cyphy_mk_falcon</url>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="control_toolbox"/>
  <depend package="geometry_msgs"/>
  <depend package="joy"/>
</package><package name="nao_remote" path="/trunk/humanoid_stacks/nao_common/nao_remote" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="Remote control package for the Nao humanoid robot.">
	<p>
     Remote control package for the Nao robot. 
     Provides a node for Nao joystick teleoperation and odometry remapping into ROS format.
     The motion commands should be sent to a <a href="http://www.ros.org/wiki/nao_driver">
     nao_driver</a> node, which in turn sends back robot state and odometry.     
    </p>

  </description>
  <author>Armin Hornung</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/nao_remote</url>
    
  <depend package="std_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="std_srvs"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="nao_msgs"/>
  <depend package="nao_description"/>
  <depend package="nao_driver"/>  
  <depend package="message_filters"/>
  <depend package="robot_state_publisher"/>
  <depend package="move_base_msgs"/>
  <depend package="actionlib"/>
  <depend package="angles"/>

</package><package name="smart_arm_controller" path="/trunk/arrg/crustcrawler_smart_arm/smart_arm_controller" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="Crust Crawler AX-12+ Smart Arm controller">
        Crust Crawler AX-12+ Smart Arm controller that uses dynamixel_controllers for motor control.
    </description>
    
    <author>Antons Rebguns</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/smart_arm_controller</url>
    
    <depend package="rospy"/>
    <depend package="dynamixel_controllers"/>
    <depend package="std_msgs"/>
</package><package name="corobot_pantilt" path="/trunk/Diamondback/Corobot/corobot_pantilt" repo="roscorobot" repo_host="http://svn.code.sf.net/p/roscorobot/code">
  <description brief="corobot_pantilt">

     corobot_pantilt is actually the package logitech_pantilt from Dallas Geocker that was just renamed and integrated in corobot stack for an easy installation of the Corobot stack.
     The script executing mjpg-streamer necessary for the logitech_pantilt package has been integrated in this corobot_pantilt package. Now you won't have to download mjpg-streamer and execute the script yourself, only a make in the corobot_pantilt/src/mjpg-streamer/ folder is necessary.

  </description>
  <author>Morgan Cormier/mcormier@coroware.com</author>
  <license>GPL v2</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.ros.org/wiki/corobot_pantilt</url>
  <depend package="roscpp"/>
  <depend package="joy"/>
  <depend package="corobot_msgs"/>

</package><package name="summit_xl_odometry" path="/trunk/trunk/summit_xl_sim_fuerte/summit_xl_odometry" repo="summit-xl-ros-stack" repo_host="http://summit-xl-ros-stack.googlecode.com/svn">
  <description brief="summit_xl_odometry">

     summit_xl_odometry

  </description>
  <author>Robert</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/summit_odometry</url>
  <depend package="roscpp"/>
  <depend package="summit_xl_ctrl"/>
  <depend package="nav_msgs"/>
  <depend package="tf"/>
  <depend package="pr2_mechanism_model"/>
  <depend package="pr2_controller_interface"/>
  <depend package="sensor_msgs"/>

</package><package name="overhead_planner" path="/trunk/OIT/overhead_planner" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="overhead_planner">

     overhead_planner

  </description>
  <author>David Feil-Seifer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/overhead_planner</url>
  <depend package="navfn"/>
  <depend package="costmap_2d"/>
  <depend package="sensor_msgs"/>
	<depend package="geometry_msgs"/>
</package><package name="cl_port" path="" repo="roll" repo_host="http://code.in.tum.de/git/roll.git">
  <description brief="cl_port">

     cl_port

  </description>
  <author>Henrik Motakef</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://clocc.sourceforge.net/</url>

</package><package name="point_cloud_vtk_tools" path="" repo="ethzasl_mapping" repo_host="https://github.com/ethz-asl/ros-mapping">
  <description brief="point_cloud_vtk_tools">

     Tools to save point clouds to VTK files and to republish them

  </description>
  <author>François Pomerleau and Stéphane Magnenat</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/point_cloud_vtk_tools</url>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="rosbag"/>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="tf"/>
  <depend package="tf2"/>
  <depend package="tf_conversions"/>
  <depend package="libnabo"/>
  <depend package="libpointmatcher"/>
  <depend package="libpointmatcher_ros"/>
  <rosdep name="libargtable2-dev"/>
  <rosdep name="yaml-cpp"/>
  <rosdep name="eigen"/>

</package><package name="joint_state_gui" path="/utils/joint_state_gui" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="joint_state_gui">
    small gui to publish joint_states (for debugging robot descriptions)
  </description>
  <author>Ingo Kresse</author>
  <email>kresse@in.tum.de</email>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <depend package="sensor_msgs"/>
  <rosdep name="wxwidgets"/>
  <rosdep name="wxpython"/>
</package><package name="task_label_gui" path="" repo="usc-clmc-ros-pkg" repo_host="https://github.com/usc-clmc/usc-clmc-ros-pkg">
  <description brief="task_label_gui">

     task_label_gui

  </description>
  <author>Peter Pastor</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/task_label_gui</url>

  <depend package="roscpp"/>

  <depend package="usc_utilities"/>
  <depend package="gui_utilities"/>

  <depend package="task_recorder2"/>
  <depend package="task_recorder2_msgs"/>
  <depend package="task_recorder2_utilities"/>

  <depend package="SafetyLight_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg_gen/cpp" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -ltask_label_gui -ltask_label_gui_client"/>
  </export>

</package><package name="ee_cart_imped_action" path="/trunk/ee_cart_imped/ee_cart_imped_action" repo="mit-ros-pkg-trunk" repo_host="https://svn.csail.mit.edu/mit-ros-pkg">
  <description brief="">

     An action server and interface for the ee_cart_imped_control package.  The EECartImped Controller should always be accessed through this action.

  </description>
  <author>Jenny Barry, Mario Bollini, and Huan Liu</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ee_cart_imped_action</url>
  <depend package="actionlib"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="roslib"/>
  <depend package="std_msgs"/>
  <depend package="actionlib_msgs"/>
  <depend package="ee_cart_imped_msgs"/>
  <depend package="tf"/>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -lee_cart_action_lib"/>
    <rosdoc config="rosdoc.yaml"/>
  </export>

</package><package name="starmac_robots_asctec" path="" repo="starmac-ros-pkg" repo_host="https://bitbucket.org/bouffard/starmac-ros-pkg">
  <description brief="starmac_asctec_adapter">

    Bridge between starmac_flyer vehicle-agnostic code and the asctec_autopilot driver package

  </description>
  <author>Patrick Bouffard</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/asctec_adapter</url>
  <depend package="std_srvs"/>
  <!--  depend package="control_toolbox"/-->
  <depend package="angles"/>
  <depend package="sensor_msgs"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="driver_base"/>
  <depend package="nodelet"/>
  <depend package="pluginlib"/>
  
  <!-- depend package="asctec_msgs"/ -->
  <depend package="asctec_hl_comm"/>

  <depend package="flyer_common"/>
  <depend package="flyer_controller"/>

  <export>
    <nodelet plugin="${prefix}/nodelets.xml"/>
  </export>

</package><package name="utilmm" path="" repo="orocos_toolchain" repo_host="https://git.gitorious.org/orocos-toolchain/utilmm.git">
  <description brief="C++ toolkit">
    This library is a collection of useful C++ classes
  </description>
  <author>Sylvain Joyeux/sylvain.joyeux@m4x.org</author>
  <copyright>
      LAAS-CNRS/openrobots@laas.fr
      Sylvain Joyeux/sylvain.joyeux@m4x.org
  </copyright>
  <license>CeCILL-B (BSD-like)</license>

  <rosdep name="boost"/>
  <export>
    <cpp cflags="-I${prefix}/install/include" lflags="-L${prefix}/install/lib -lutilmm -Wl,-rpath,-L${prefix}/lib"/>
  </export>
</package><package name="camera_pose_calibration" path="" repo="camera_pose" repo_host="https://kforge.ros.org/calibration/camera_pose">
  <description brief="camera_pose_calibration">
    This package provides the pipeline to calibrate the relative 6D
    poses between multiple camera's. The calibration can be preformed
    online, and the results are published to tf in realtime.
  </description>
  <author>Vijay Pradeep, Wim Meeussen</author>
  <license>BSD</license>
  <review notes="" status="Doc reviewed"/>
  <url>http://ros.org/wiki/camera_pose_calibration</url>

  <depend package="geometry_msgs"/>
  <depend package="calibration_msgs"/>
  <depend package="sensor_msgs"/>

  <depend package="image_cb_detector"/>
  <depend package="monocam_settler"/>
  <depend package="interval_intersection"/>
  <depend package="joint_states_settler"/>

  <depend package="kdl"/>
  <depend package="tf_conversions"/>
  <depend package="tf2_ros"/>
  <depend package="tf2_kdl"/>
  <depend package="message_filters"/>
  <depend package="opencv2"/>

</package><package name="continual_planning_executive" path="/trunk/symbolic_planning/continual_planning_executive" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="continual_planning_executive">
     An executive for continual planning, i.e. an execution, planning, monitoring cycle.
  </description>
  <author>Christian Dornhege</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/continual_planning_executive</url>

  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="pluginlib"/>
  <depend package="actionlib"/>

  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>

</package><package name="uncertain_tf" path="" repo="uncertain_tf" repo_host="https://github.com/ruehr/uncertain_tf">
  <description brief="tf_uncertainty">

     tf_uncertainty

  </description>
  <author>Thomas Ruehr</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/tf_uncertainty</url>
  <depend package="tf"/>
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  <export>
    <cpp cflags="`pkg-config --cflags eigen3` -I${prefix}/include `rosboost-cfg --cflags`" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -luncertain_tf"/>
  </export>


  <!--depend package="eigen"/-->
</package><package name="cob_canopen_motor" path="" repo="cob_driver" repo_host="git://github.com/ipa320/cob_driver">
  <description brief="cob_canopen_motor">

     The package cob_canopen_motor implements a controller-drive component which is connected to a can-bus and works with a canopen-interface. &quot;CanDriveItf&quot; provides a - more or less - generic interface to the controller-drive components. &quot;CanDrvie...&quot; then implements a specific setup, e.g. an ELMO Harmonica Controller in case of the &quot;CanDriveHarmonica&quot;.

  </description>
  <author>Christian Connette</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_canopen_motor</url>

  <!-- Dependencies from other packages or external libs-->
  <depend package="roscpp"/>
  <depend package="cob_generic_can"/>
  <depend package="cob_utilities"/>

  <!-- As we deviate from the standard ROS Repository-Structure we have to tell ROS where to find header and lib -->
  <export>
    <cpp cflags="-I${prefix}/common/include" lflags="-Wl,-rpath,${prefix}/common/lib -L${prefix}/common/lib -lcob_canopen_motor_harmonica"/>
  </export>

</package><package name="srs_ui_but" path="" repo="srs_public" repo_host="git://github.com/ipa320/srs_public">
  <description brief="srs_ui_but">

ROS visualization tools provided by dcgm-robotics@FIT group.

  </description>
  <author>Vit Stancl (stancl@fit.vutbr.cz), Michal Spanel (spanel@fit.vutbr.cz), Tomas Lokaj</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/srs_ui_but</url>

  <depend package="roscpp"/>
  <depend package="visualization_msgs"/>
  <depend package="interactive_markers"/>
  <depend package="std_msgs"/>
  <depend package="rviz"/>
  <depend package="ogre"/>
  <depend package="srs_env_model"/>
  <!--<depend package="srs_msgs"/>-->
  <depend package="ogre_tools"/>
  <depend package="tf"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="message_filters"/>
  <!-- depend package="cob_script_server"/-->
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="srs_interaction_primitives"/>
  <depend package="cv_bridge"/>
  <depend package="srs_object_database_msgs"/>
  
  <!-- depend package="cob_arm_navigation_but"/>-->

  <export>
    <rviz plugin="${prefix}/lib/but_gui.yaml"/> 
    <rosdoc config="rosdoc.yaml"/>
  </export>
</package><package name="laser_geometry" path="/stacks/laser_pipeline/trunk/laser_geometry" repo="laser_pipeline" repo_host="https://code.ros.org/svn/ros-pkg">
<description brief="Utilities for converting laser scans to pointclouds">

This package contains a class for converting from a 2D laser scan as defined by
sensor_msgs/LaserScan into a point cloud as defined by sensor_msgs/PointCloud
or sensor_msgs/PointCloud2. In particular, it contains functionality to account
for the skew resulting from moving robots or tilting laser scanners.

</description>
<author>Tully Foote, Radu Bogdan Rusu</author>
<license>BSD</license>
<review notes="09/29/2009" status="Doc reviewed"/>
<url>http://ros.org/wiki/laser_geometry</url>
<depend package="sensor_msgs"/>
<depend package="roscpp"/>
<depend package="tf"/>
<depend package="angles"/>
<depend package="common_rosdeps"/>
<rosdep name="eigen"/>
<export>
<cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -llaser_geometry"/>
</export>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
  <platform os="ubuntu" version="10.10"/>
  <platform os="ubuntu" version="11.04"/>
  <platform os="ubuntu" version="11.10"/>
  <platform os="ubuntu" version="12.04"/>
</package><package name="summit_xl_joystick" path="/trunk/trunk/summit_xl_sim_fuerte/summit_xl_joystick" repo="summit-xl-ros-stack" repo_host="http://summit-xl-ros-stack.googlecode.com/svn">
  <description brief="summit_joystick_teleop">

     summit_joystick_teleop

  </description>
  <author>Robert</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/summit_joystick_teleop</url>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>

</package><package name="rqt_bag" path="" repo="rqt" repo_host="https://kforge.ros.org/visualization/rqt">
  <description brief="rqt_bag">

     rqt_bag provides a GUI plugin for displaying and replaying ROS bag files.

  </description>
  <author>Aaron Blasdel</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rqt_bag</url>
  <depend package="rospy"/>
  <depend package="rqt_gui"/>
  <depend package="rqt_gui_py"/>
  <depend package="roslib"/>
  <export>
    <rqt_gui plugin="${prefix}/plugin.xml"/>
  </export>
</package><package name="megatree_storage" path="" repo="megatree" repo_host="http://kforge.ros.org/megatree/megatree">
  <description brief="megatree_storage">

     megatree_storage

  </description>
  <author>Wim Meeussen</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/megatree_storage</url>

  <depend package="megatree_core"/>

  <export>
    <cpp cflags="-I${prefix}/include `rosboost-cfg --cflags`" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib `rosboost-cfg --lflags thread` -lmegatree_storage"/>
  </export>

</package><package name="parsec_dashboard" path="" repo="parsec" repo_host="https://code.google.com/p/parsec">
  <description brief="parsec_dashboard">
    A simple dashboard for monitoring Parsec. Includes topic_monitor, a tool for monitoring the frequency and delays of arbitrary topics.
  </description>
  <author>Charles DuHadway</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/parsec_dashboard</url>
  <depend package="diagnostic_updater"/>
  <depend package="rxtools"/>
  <depend package="robot_monitor"/>
  <depend package="std_msgs"/>
  <depend package="std_srvs"/>
  <depend package="ros_check"/>
  <depend package="rospy"/>
  <depend package="roslib"/>
  <depend package="topic_tools"/>

</package><package name="oro_action_server" path="" repo="orocos_tools" repo_host="https://github.com/RCPRG-ros-pkg/orocos_tools">
  <description brief="oro_action_server">
  Implementation of Action Server for orocos components.
  </description>
  <author>Konrad Banachowicz</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/oro_action_server</url>
  <depend package="actionlib"/>
  <depend package="rtt"/>

  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>

</package><package name="camera_calibration_parsers" path="/stacks/image_common/trunk/camera_calibration_parsers" repo="image_common" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="camera_calibration_parsers">

     camera_calibration_parsers contains routines for reading and writing camera calibration parameters.

  </description>
  <author>Patrick Mihelich</author>
  <license>BSD</license>
  <review notes="" status="doc reviewed"/>
  <url>http://ros.org/wiki/camera_calibration_parsers</url>

  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>

  <rosdep name="yaml-cpp"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lcamera_calibration_parsers"/>
  </export>
</package><package name="rosbaglive" path="/branches/stable/wu_ros_tools/rosbaglive" repo="wu-ros-pkg" repo_host="https://wu-robotics.googlecode.com/svn">
  <description brief="Modification of rosbag play">
    Tool for playing rosbags as though they were happening NOW.
  </description>
  <author>David V. Lu!!</author>
  <license>BSD</license>
  <url>http://ros.org/wiki/rosbaglive</url>
  <depend package="rospy"/>
  <depend package="rosbag"/>

</package><package name="eros_boost" path="/trunk/packages/rosdeps/core/eros_boost" repo="eros" repo_host="https://code.ros.org/svn/eros">
  <description brief="Build recipe for cross-compiling a minimal boost for embedded systems">

	This provides a source package for compiling a minimal boost ideally
	targetting embedded systems.
	
	Ordinarily this is not useful as you would install via your system's
	installation method (e.g. apt-get for ubuntu), but for cross-compiling 
    it provides the recipe needed to make a toolchain ros-ready.

  </description>
  <author>Daniel Stonier (d.stonier@gmail.com)</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/eros_boost</url>
  <depend package="eros_license"/>
  <depend package="eros_build"/>
  <export>
    <cpp cflags="-I${prefix}/build/fakeroot/include" lflags="-Wl,-rpath,${prefix}/build/fakeroot/lib -L${prefix}/build/fakeroot/lib -lboost_thread -lboost_date_time -lboost_iostreams -lboost_program_options -lboost_filesystem -lboost_signals -lboost_system"/>
  </export>

</package><package name="srs_decision_making" path="" repo="srs_public" repo_host="git://github.com/ipa320/srs_public">
  <description brief="srs_decision_making">

     srs_decision_making

  </description>
  <author>Renxi Qiu</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/srs_decision_making</url>
  <depend package="srs_decision_making_interface"/>
  <depend package="actionlib"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="roslib"/>
  <depend package="std_msgs"/>
  <depend package="actionlib_msgs"/>
  <depend package="smach"/>
  <depend package="smach_ros"/>
  <depend package="tf"/>
  <depend package="geometry_msgs"/>
  <depend package="srs_msgs"/>
  <depend package="srs_knowledge"/>
  <depend package="srs_states"/>
  <depend package="srs_object_verification"/>
</package><package name="cob_3d_mapping_rviz_plugins" path="" repo="cob_environment_perception" repo_host="git://github.com/ipa320/cob_environment_perception">
  <description brief="cob_3d_mapping_rviz_plugins">

     cob_3d_mapping_rviz_plugins

  </description>
  <author>Georg Arbeiter</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_3d_mapping_rviz_plugins</url>

  <depend package="rviz"/>
  <depend package="pcl"/>
  <depend package="cob_3d_mapping_msgs"/>

  <export>
    <rviz plugin="${prefix}/lib/plugin.yaml"/>
  </export>


</package><package name="esc_sm" path="/trunk/extremum_seeking/esc_sm" repo="dri-ros-pkg" repo_host="https://svn.3me.tudelft.nl/dri-ros-pkg">
  <description brief="sm_esc_1d">

     Sliding mode extremum seeking control

  </description>
  <author>Berk Calli</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sm_esc_1d</url>
  <depend package="roscpp"/>
  <depend package="esc_common"/>
  <depend package="esc_ros"/>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lesc_sm"/>
  </export>
</package><package name="launchman" path="/stacks/web_interface/trunk/launchman" repo="web_interface" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description>Launch Manager</description>
  <author>Scott Hassan</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/launchman</url>

  <depend package="rospy"/>
  <depend package="roslaunch"/>
  <depend package="std_msgs"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="ctx2140" path="" repo="power_supplies" repo_host="http://ram.umd.edu/git/ros/power_supplies.git">
  <description brief="ctx2140">

     ctx2140 provides power measurement and configuration setting facilities for
     the Carnetix CNX-P2140 DC-DC power supply. It uses the ctxapi library, available
     from http://ram.umd.edu/wiki/Public/Software/ctxapi

  </description>
  <author/>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ctx2140</url>
  <depend package="roscpp"/>
  <depend package="power_msgs"/>
  <depend package="power_srvs"/>
  <rosdep name="libusb0"/>

</package><package name="canopen" path="/stacks/can_communication/trunk/canopen" repo="can_communication" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="canopen">

     This package holds a can open library for ROS.

  </description>
  <author>Gonçalo Cabrita</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/canopen</url>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lcanopen"/>
  </export>
  <depend package="roscpp"/>
  <depend package="can_msgs"/>

</package><package name="soem_master" path="" repo="soem" repo_host="http://git.mech.kuleuven.be/robotics/soem.git">
  <description brief="soem_master">

     soem_master contains a C++ wrapper around soem_core, a factory object to register and create drivers and a RTT component that will automatically create the drivers and their services for all the slave for which a driver is known.

  </description>
  <author>Ruben Smits</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/soem_master</url>
  <depend package="soem_core"/>
  <depend package="rtt"/>

</package><package name="re2darmGazeboReplay" path="/darpa_arm_sim_servers/re2darmGazeboReplay" repo="darpa_arm_sim_servers" repo_host="http://svn.thearmrobot.com">
  <description brief="re2darmGazeboReplay">

     re2darmGazeboRepaly

  </description>
  <author>RE2: asomerville</author>
  <license>GPL</license>
  <depend package="gazebo"/>
</package><package name="narf_recognition" path="/trunk/tidyup_robot/narf_recognition" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="narf_recognition">

     narf_recognition

  </description>
  <author>Juergen Hess</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/narf_recognition</url>
 <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="std_msgs"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="tidyup_msgs"/>	
  <depend package="tf"/>
  <depend package="common_rosdeps"/>
  <rosdep name="eigen"/>
  	<depend package="visualization_msgs"/>
</package><package name="kobuki_node" path="" repo="kobuki" repo_host="https://github.com/yujinrobot/kobuki">
  <description brief="ROS node for Kobuki">
    <p>
      ROS wrapper for the Kobuki driver
    </p>
  </description>
  <author>Daniel Stonier, Jorge Santos Simon, 주영훈</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.ros.org/wiki/kobuki_node</url>
  
  <!-- Ros -->
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="std_msgs"/>
  <depend package="tf"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="diagnostic_updater"/>
  <depend package="diagnostic_msgs"/>

  <!-- Turtlebot --> 
  <depend package="turtlebot_node"/> <!-- LaptopChargeStatus.msg -->

  <!--  Kobuki -->
  <depend package="kobuki_comms"/>
  <depend package="kobuki_driver"/>
  <depend package="kobuki_keyop"/>
  
  <!-- Ecl -->
  <depend package="ecl_exceptions"/>
  <depend package="ecl_sigslots"/>
  <depend package="ecl_streams"/>
  
   <!--  For Tests -->
  <depend package="rospy"/>  
</package><package name="cob_navigation_local" path="" repo="cob_navigation" repo_host="git://github.com/ipa320/cob_navigation">
  <description brief="cob_navigation_local">

    This package holds config and launch files for running the  <a href="http://ros.org/wiki/move_base">move_base</a> node on the <a href="http://ros.org/wiki/care-o-bot">Care-O-bot</a> in an odometric frame.
    No static map is needed for the move_base node in this configuration.

  </description>
  <author>Matthias Gruhler</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_navigation_local</url>

  <depend package="move_base"/>
  <depend package="cob_navigation_config"/>
  <depend package="cob_base_velocity_smoother"/>

</package><package name="sbpl_cart_planner" path="/stacks/cart_pushing/trunk/sbpl_cart_planner" repo="cart_pushing" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="sbpl_cart_planner">

     sbpl_cart_planner

  </description>
  <author>Sachin Chitta</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sbpl_cart_planner</url>
  <depend package="sbpl"/>
  <depend package="roscpp"/>
  <depend package="rosconsole"/>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="angles"/>
  <depend package="tf"/>

  <depend package="costmap_2d"/>
  <depend package="nav_core"/>
  <depend package="pluginlib"/>
  <depend package="visualization_msgs"/>
  <depend package="cart_pushing_msgs"/>


  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lsbpl_cart_planner"/>
    <nav_core plugin="${prefix}/sbpl_cart_plugin.xml"/>
  </export>

</package><package name="openrave_msgs" path="/trunk/openrave_planning/openrave_msgs" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="Messages and Services for OpenRAVE Bindings">
    Contains ROS messages and services that are commonly used in the openrave_planning stack.

  </description>
  <author>Rosen Diankov (rosen.diankov@gmail.com)</author>
  <license>Apache License, Version 2.0</license>
  <url>http://www.ros.org/wiki/openrave_msgs</url>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="actionlib_msgs"/>
  <depend package="trajectory_msgs"/>
</package><package name="color_based_tracking" path="/trunk/arrg/ua_vision/color_based_tracking" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
  <description brief="wubble_vision">

     wubble_vision

  </description>
  <author>Jeremy Wright</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="sensor_msgs"/>
  <depend package="image_transport"/>
  <depend package="geometry_msgs"/>

</package><package name="elektron_dashboard" path="" repo="elektron_gui" repo_host="https://github.com/RCPRG-ros-pkg/elektron_gui">
  <description brief="elektron_dashboard">

     Dashboard for monitoring Elektron robot, both it's computer and internals.

  </description>
  <author>Maciej Stefańczyk</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url/>
  
  <depend package="rxtools"/>
  <depend package="robot_monitor"/>
  <depend package="std_msgs"/>
  <depend package="std_srvs"/>
  <depend package="rospy"/>
  <depend package="roslib"/>
  <depend package="elektron_base"/>

</package><package name="zeroconf_android_jmdns" path="" repo="zeroconf_android" repo_host="https://github.com/stonier/zeroconf_android">
  <description brief="android library package for jmdns">

     Ros-wraps jmdns as an android library.

  </description>
  <author>Daniel Stonier</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/zeroconf_android_jmdns</url>

  <rosdep name="ant"/>
  <rosdep name="java"/>

  <depend package="rosjava_bootstrap"/>
  <depend package="zeroconf_jmdns"/>

  <export>
    <rosjava-android-lib target="android-10"/>
    <rosjava-src location="src"/>
  </export>
</package><package name="roar" path="/roar_stack/trunk/roar" repo="roar_stack" repo_host="https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs">
  <description brief="roar">

   The ROS Opensource Audio Recognizer (ROAR). This package allows you to use any linux-compatible (ALSA) microphone (including both analog and USB microphones) to create/train models of discrete audio sounds. Then, in real-time, ROAR can be used to detect these same sounds as they occur in the environment.

  </description>
  <author>Joe Romano</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/roar</url>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="rospy"/>
  <depend package="std_srvs"/>
  <depend package="std_msgs"/>
  <depend package="roar_msgs"/>

  <!-- external dependencies -->
  <rosdep name="python-numpy"/>
  <rosdep name="octave3.2"/>
  <rosdep name="shogun"/>
  <rosdep name="python-alsaaudio"/>
  <rosdep name="pytave"/>

</package><package name="navigation_waypoints_server" path="" repo="parsec" repo_host="https://code.google.com/p/parsec">
  <description brief="navigation_waypoints_server">

     navigation_waypoints_server

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>Apache 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/navigation_waypoints_server</url>
  <depend package="rospy"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="move_base_msgs"/>

</package><package name="mapping_rviz_plugin" path="" repo="arm_navigation" repo_host="https://kforge.ros.org/armnavigation/armnavigation">
  <description brief="mapping_rviz_plugin">

     mapping_rviz_plugin

  </description>
  <author>Josh Faust</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/mapping_rviz_plugin</url>
  <depend package="rviz"/>
  <depend package="roscpp"/>
  <depend package="arm_navigation_msgs"/>
  <depend package="tf"/>
  
  <export>
    <rviz plugin="${prefix}/plugin_description.xml"/>
  </export>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="visp_hand2eye_calibration" path="" repo="stacks/vision_visp" repo_host="git://github.com/laas/vision_visp">
  <description brief="calibration of camera position with respect to the effector">

     visp_hand2eye_calibration estimates the camera position with respect to its effector using the ViSP library

  </description>
  <author>Filip Novotny</author>
  <license>GPLv2</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/visp_hand2eye_calibration</url>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="geometry_msgs"/>
  <depend package="std_msgs"/>
  <depend package="visp"/>
  <depend package="visp_bridge"/>
  <depend package="image_proc"/>

</package><package name="safe_teleop_pr2" path="/trunk/stacks/bosch_shared_autonomy/safe_teleop_pr2" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="safe_teleop_pr2">
     Launch files for running safe_teleop_base on pr2
  </description>
  <author>Charles DuHadway (maintained by Benjamin Pitzer)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/safe_teleop_pr2</url>

  <depend package="safe_teleop_base"/>
  <depend package="pr2_teleop"/>
  <depend package="joy"/>

</package><package name="cuda" path="" repo="gpgpu" repo_host="http://ram.umd.edu/git/ros/gpgpu.git">
  <description brief="cuda">

     This package pulls in NVIDIA's CUDA toolkit, drivers and SDK.

  </description>
  <author>Ken Tossell/ktossell@umd.edu</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cuda</url>
  <depend package="rosbuild"/>
  <export>
    <rosbuild cmake_directory="${prefix}/cmake"/>
  </export>
  <rosdep name="cuda-drivers"/>
</package><package name="comp_ehow" path="/knowledge/comp_ehow" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="comp_ehow">

     Prolog routines for interfacing the ehow.com import functions developed at TUM.
     Code for the paper &quot;Understanding and Executing Instructions for Everyday
     Manipulation Tasks from the World Wide Web&quot;, written by Moritz Tenorth
     and Daniel Nyga (ICRA 2010)

  </description>
  <author>Moritz Tenorth, Daniel Nyga</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/comp_ehow</url>

  <depend package="ias_knowledge_base"/>
  <depend package="opencyc"/>
  <depend package="mod_vis"/>
  <depend package="rosjava_jni"/>
  <depend package="comp_cop"/> <!-- TODO MT: depend only because of httpclient, refactor this! -->

  <export>
    <java classpath="${prefix}/bin:${prefix}/lib/antlr-2.7.5.jar:${prefix}/lib/arq-extra.jar${prefix}/lib/arq.jar:${prefix}/lib/axis.jar:${prefix}/lib/commons-collections.jar:${prefix}/lib/commonsdiscovery.jar:${prefix}/lib/commons-lang-2.0.jar:${prefix}/lib/commons-logging-1.1.1.jar:${prefix}/lib/concurrent.jar:${prefix}/lib/edtftpj-1.5.2.jar:${prefix}/lib/edu.mit.jwi_2.1.3.jar:${prefix}/lib/ekitspell.jar:${prefix}/lib/icu4j_3_4.jar:${prefix}/lib/instruction_factory.jar:${prefix}/lib/iri.jar:${prefix}/lib/jakarta-oro-2.0.4.jar:${prefix}/lib/jaxrpc.jar:${prefix}/lib/jcalendar.jar:${prefix}/lib/jdom.jar:${prefix}/lib/jena.jar:${prefix}/lib/jep-2.4.0.jar:${prefix}/lib/jpl.jar:${prefix}/lib/json.jar:${prefix}/lib/junit.jar:${prefix}/lib/kazuki.jar:${prefix}/lib/lax.jar:${prefix}/lib/log4j-1.2.12.jar:${prefix}/lib/looks-2.1.3.jar:${prefix}/lib/lucene-core-2.3.1.jar:${prefix}/lib/orphanNodesAlg.jar:${prefix}/lib/owlapi-bin.jar:${prefix}/lib/owlsyntax.jar:${prefix}/lib/protege-owl.jar:${prefix}/lib/protege.jar:${prefix}/lib/stanford-parser-2007-08-19.jar:${prefix}/lib/stax-api-1.0.jar:${prefix}/lib/swrl-jess-bridge.jar:${prefix}/lib/unicode_panel.jar:${prefix}/lib/vowlidator.jar:${prefix}/lib/wstx-asl-3.0.0.jar:${prefix}/lib/xercesImpl-2.7.1.jar:${prefix}/lib/xml-apis-2.7.1.jar:${prefix}/lib/xml-datatype-validator-20011001.jar:${prefix}/lib/xmlparserv2.jar:${prefix}/lib/xschema.jar"/>
    <rosdoc config="rosdoc.yaml"/>
  </export>

</package><package name="kdl_typekit" path="" repo="rtt_geometry" repo_host="http://git.mech.kuleuven.be/robotics/rtt_geometry.git">
    <description brief="OROCOS KDL RTT plugin">
        
        This package contains the KDL RTT bindings

    </description>
    <author>Steven Bellens, Ruben Smits</author>
    <license>LGPL / BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/orocos_kdl</url>
    <depend package="rtt"/>
    <depend package="ocl"/>
    <depend package="orocos_kdl"/>
</package><package name="sr_description" path="" repo="shadow_robot" repo_host="lp:sr-ros-interface">
  <description brief="sr_description">

     sr_description contains the description for Shadow Robot's Hand and Arm, as well as some additional models used in our robot (kinect, etc...).

  </description>
  <author>Ugo Cupcic</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sr_description</url>
  <depend package="urdf"/>
  <depend package="xacro"/>

</package><package name="busbot_launch" path="/trunk/stacks/drink_serving/busbot_launch" repo="bosch-ros-pkg-e" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg-e/code">
  <description brief="busbot_launch">

     busbot_launch

  </description>
  <author/>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/busbot_launch</url>

</package><package name="ar_pose_world_convertor" path="" repo="camera_pose_estimation" repo_host="http://git.mech.kuleuven.be/robotics/camera_pose_estimation.git">
  <description brief="ar_pose_world_convertor">

     ar_pose_world_convertor: This message takes the ar pose message and ask TF for the translation to 
	the world frame and publishes this as a message with the original covariance. 
    A demonstration of its use can be found in ar_pose_demo package.
	REMARK: The covariance of the camera to the world should also be taken into account, but for the
	moment beeing this doesn't happen.

  </description>
  <author>Koen Buys</author>
  <license>BSD, GPL, LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ar_pose_world_convertor</url>
  <depend package="ar_pose"/>
  <depend package="tf"/>

</package><package name="rosie_pr2_gripper_action" path="/arm_navigation/rosie_arm_navigation/rosie_pr2_gripper_action" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="rosie_pr2_gripper_action">

     rosie_pr2_gripper_action

  </description>
  <author>Alexis Maldonado</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosie_pr2_gripper_action</url>

  <depend package="pr2_controllers_msgs"/>
  <depend package="cogman_msgs"/>
  <depend package="actionlib"/>
</package><package name="erratic_navigation_apps" path="" repo="pkganeshpk" repo_host="https://bitbucket.org/pkganeshpk/phspline_planner">
    <description brief="erratic_navigation_apps">
        erratic_navigation_apps
    </description>

    <author>Antons Rebguns</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/erratic_navigation_apps</url>

    <depend package="map_server"/>
    <depend package="costmap_2d"/>
    <depend package="erratic_navigation"/>
    <depend package="erratic_description"/>
</package><package name="kuka_arm_hand_process_module" path="" repo="cram_rosie" repo_host="http://code.in.tum.de/git/cram-rosie.git">
  <description brief="kuka_arm_hand_process_module">

     kuka_arm_hand_process_module

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/kuka_arm_hand_process_module</url>
  <depend package="cogman_msgs"/>
  <depend package="cram_process_modules"/>
  <depend package="designators_ros"/>
  <depend package="actionlib_lisp"/>
  <depend package="cljlo_utils"/>
  <depend package="cljlo"/>
  <depend package="cram_roslisp_common"/>
  <depend package="cram_reasoning"/>
  <depend package="cram_plan_failures"/>
  <depend package="cram_plan_knowledge"/>
  <depend package="perception_process_module"/>

</package><package name="pointcloud_compress" path="" repo="uuisrc-ros-pkg" repo_host="https://github.com/cburbridge/uuisrc-ros-pkg">
  <description brief="pointcloud_compress">

     pointcloud_compress

  </description>
  <author>Chris Burbridge</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pointcloud_compress</url>
  <depend package="rospy"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>

</package><package name="move_base_msgs" path="" repo="navigation" repo_host="https://kforge.ros.org/navigation/navigation">
  <description brief="Holds the action description and relevant messages for the move_base package">

     Holds the action description and relevant messages for the move_base package

  </description>
  <author>Eitan Marder-Eppstein</author>
  <license>BSD</license>
  <review notes="" status="Doc reviewed"/>
  <url>http://pr.willowgarage.com/wiki/move_base_msgs</url>
  <depend package="roslib"/>
  <depend package="std_msgs"/>
  <depend package="actionlib_msgs"/>
  <depend package="geometry_msgs"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="summit_xl_tf" path="/trunk/trunk/summit_xl_sim_fuerte/summit_xl_tf" repo="summit-xl-ros-stack" repo_host="http://summit-xl-ros-stack.googlecode.com/svn">
  <description brief="summit_tf">

     summit_tf

  </description>
  <author>Roberto</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/summit_tf</url>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>

</package><package name="auv_pilot" path="/trunk/hwu_osl_software/auv_pilot" repo="hwu-osl-ros-pkg" repo_host="http://hwu-osl-ros-pkg.googlecode.com/svn">
  <description brief="Waypoint based pilot node for an AUV.">

     The AUV pilot subscribes to navigation status messages and waypoint and manual force request messages. Waypoint requests engage cascaded PID controllers to move the vehicle to the required point. Manual requests override the 'autopilot', and are passed straight on.

  </description>
  <author>Joel Cartwright</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>TODO</url>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  <depend package="osl_core"/>
  <depend package="auv_msgs"/>

</package><package name="surf_object_recognition" path="/trunk/surf_object_recognition" repo="ucsb-ros-pkg" repo_host="https://ucsb-ros-pkg.googlecode.com/svn">
  <description brief="surf_object_recognition">

     surf_test

  </description>
  <author>Paul Filitchkin</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/</url>
  <depend package="image_transport"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>

</package><package name="pi_head_tracking_3d_part1" path="/trunk/pi_tutorials/pi_head_tracking_3d_part1" repo="pi-robot-ros-pkg" repo_host="http://pi-robot-ros-pkg.googlecode.com/svn">
  <description brief="pi_head_tracking_3d_part1">
     Head Tracking in 3D Part 1
  </description>
  <author>Patrick Goebel</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.pirobot.org/blog/0018</url>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="tf"/>
  <depend package="rviz"/>
  <depend package="robot_state_publisher"/>
  <depend package="joint_state_publisher"/>
  <depend package="dynamixel_driver"/>
  <depend package="dynamixel_controllers"/>
  <depend package="dynamixel_msgs"/>
  <rosdep name="wxpython"/>
</package><package name="flyer_est" path="" repo="starmac-ros-pkg" repo_host="https://bitbucket.org/bouffard/starmac-ros-pkg">
  <description brief="flyer_est">

    State estimation.

  </description>
  <author>Patrick Bouffard</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/flyer_est</url>
  <depend package="tf"/>
  <depend package="geometry_msgs"/>
  <depend package="diagnostic_updater"/>
  <depend package="nav_msgs"/>
  <depend package="nodelet"/>
  <depend package="pluginlib"/>
  <!--depend package="eigen"/--> <!-- not needed as of Fuerte (Electric?)-->

  <!-- depend package="common_rosdeps"/ --> <!-- not needed as of Fuerte (?)-->
  <rosdep name="eigen"/>

  <export>
    <nodelet plugin="${prefix}/flyer_est_nodelets.xml"/>
  </export>

</package><package name="worldmodel_geotiff_plugins" path="/trunk/hector_worldmodel/worldmodel_geotiff_plugins" repo="hector_worldmodel" repo_host="https://tu-darmstadt-ros-pkg.googlecode.com/svn">
  <description brief="worldmodel_geotiff_plugins">

     worldmodel_geotiff_plugins

  </description>
  <author>Johannes Meyer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/worldmodel_geotiff_plugins</url>

  <depend package="hector_geotiff"/>
  <depend package="worldmodel_msgs"/>

  <export>
    <hector_geotiff plugin="${prefix}/hector_geotiff_plugins.xml"/>
  </export>

</package><package name="msvc_hudson" path="" repo="win_ros" repo_host="https://github.com/stonier/win_ros">
  <description brief="resources to enable hudson build farm execution for ros on windows">

  This stack is now being used to execute a hudson build farm job to test/build ros on 
  a windows platform. This package provides resources relevant to that.

  </description>
  <author>Daniel Stonier</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/win_patches</url>

</package><package name="turtlebot_gazebo" path="" repo="turtlebot_simulator" repo_host="https://kforge.ros.org/turtlebot/simulator">
  <description brief="turtlebot_gazebo">

     turtlebot_gazebo

  </description>
  <author>Nate Koenig</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/turtlebot_gazebo</url>

</package><package name="teleop_microscribe" path="/stacks/pr2_cockpit/trunk/teleop_microscribe" repo="pr2_cockpit" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="teleop_microscribe">

     teleop_microscribe

  </description>
  <author>Stuart Glaser</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/teleop_microscribe</url>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="geometry_msgs"/>
  <depend package="std_srvs"/>
  <depend package="microscribe"/>
  <depend package="tf"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="pr2_cockpit_msgs"/>
  <depend package="actionlib"/>
  <depend package="image_rotate"/>
  <depend package="infinity_pedals"/>

  <!--<depend package="audio_play" />-->
  
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="skiller" path="" repo="skiller" repo_host="https://github.com/timn/ros-skiller">
  <description brief="skiller">
     Skill Execution and Runtime. This is the mid-level for reactive behavior
     entities (skills) of the behavior engine.
  </description>
  <author>Tim Niemueller</author>
  <license>GPLv2+</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/skiller</url>
  <depend package="roscpp"/>
  <depend package="roslib"/>
  <depend package="lua_utils"/>
  <depend package="roslua"/>
  <depend package="actionlib_lua"/>
  <depend package="actionlib_msgs"/>
  <export>
    <cpp cflags="-I${prefix}/msg/cpp -I${prefix}/srv/cpp"/>
    <error_kb path="error_kb"/>
  </export>
</package><package name="my_opencv_tests" path="" repo="smart-robotics-ros-pkg" repo_host="https://github.com/JBot/smart-robotics-ros-pkg">
  <description brief="my_opencv_tests">

     my_opencv_tests

  </description>
  <author>jbot</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/my_opencv_tests</url>
  <depend package="sensor_msgs"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="image_transport"/>

</package><package name="art_nav" path="/trunk/stacks/art_vehicle/art_nav" repo="utexas-art-ros-pkg" repo_host="http://utexas-art-ros-pkg.googlecode.com/svn">
  <description brief="ART vehicle navigation">

     Navigation nodes for controlling the ART autonomous vehicle.

     This is a port to ROS of some of the Player 2D navigation code
     used on the vehicle for the 2007 DARPA Urban Challenge
     competition.

  </description>
  <author>Austin Robot Technology, Jack O'Quin</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://www.ros.org/wiki/art_nav</url>

  <depend package="angles"/>
  <depend package="art_common"/>
  <depend package="art_map"/>
  <depend package="art_msgs"/>
  <depend package="driver_base"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="nav_msgs"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="std_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib"/>
  </export>

</package><package name="urdf_parser_py" path="" repo="stacks/robot_model_py" repo_host="git://github.com/laas/robot_model_py">
  <description brief="Modeling robot information (Python)">

    robot_model_py contains a Python implementation of the urdf_parser
     package modeling various aspects of robot information, specified
     in the Xml Robot Description Format (URDF).

  </description>
  <author>David!!, Thomas Moulard</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/urdf_parser_py</url>

  <export>
    <rosdoc config="rosdoc.yaml"/>
    <python path="${prefix}/src"/>
  </export>

  <depend package="rospy"/>
</package><package name="pr2_ogre" path="/stacks/pr2_simulator/trunk/pr2_ogre" repo="pr2_simulator" repo_host="https://code.ros.org/svn/wg-ros-pkg">

  <description brief="PR2 Ogre Mesh Files">
    
    This package contains PR2 Ogre mesh files used for visualization and collision as
    defined at Willow Garage.
    
  </description>
  <author>John Hsu</author>
  <license>BSD</license>
  <review notes="2010/01/20" status="Doc reviewed"/>
  <url>http://ros.org/wiki/pr2_ogre</url>
  
  <depend package="gazebo"/>
  <depend package="ivcon"/>
  <depend package="ogre_tools"/>
  <depend package="pr2_description"/>

  <export>
    <gazebo gazebo_media_path="${prefix}"/>
  </export>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="nxt_robot_sensor_car" path="" repo="foote-nxt" repo_host="https://nxt.foote-ros-pkg.googlecode.com/hg/">
  <description brief="nxt_robot_sensor_car">

     The nxt_robot_sensor_car package provides a nxt robot with four sensors. For instructions on building
     the nxt robot load the sensor_car.lxf into the LEGO Digital Designer
     <a href="http://ldd.lego.com/">(ldd.lego.com)</a> and select the building guide mode. This robot
     uses the <a href="http://mindstorms.lego.com/en-us/Products/Ultrasonic+Sensor/9846.aspx"> nxt lego ultrasonic sensor</a>,
     the <a href="http://www.ldraw.org/cgi-bin/ptdetail.cgi?f=parts/64892.dat"> nxt lego color sensor</a>,
     the <a href="http://www.hitechnic.com/cgi-bin/commerce.cgi?preadd=action&amp;key=NGY1044"> hitechnic gryo sensor</a>,
     and the <a href="http://www.hitechnic.com/cgi-bin/commerce.cgi?preadd=action&amp;key=NAC1040"> hitechnic acclerometer sensor</a>.


  </description>
  <author>Melonee Wise</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/nxt_robot_sensor_car</url>
  <depend package="nxt_ros"/>
  <depend package="nxt_controllers"/>
  <depend package="robot_pose_ekf"/>
  <depend package="nxt_description"/>
  <depend package="robot_state_publisher"/>


</package><package name="JKU_maps" path="" repo="JKU_Robotic_Stack" repo_host="https://github.com/AaronMR/JKU_Robotic_Stack">
  <description brief="maps">

     maps

  </description>
  <author>aaronmr</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/maps</url>

</package><package name="rosmpi" path="/stacks/mpi/trunk/rosmpi" repo="mpi" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="ROS OpenMPI bridge">

    ROSMPI provides a compact library for Publisher/Subscriber ROS-like
    mechanisms over OpenMPI.

  </description>

  <author>Radu Bogdan Rusu, John Hsu</author>
  <license>BSD</license>
  <url>http://ros.org/wiki/rosmpi</url>
  <review notes="beta" status="experimental"/>

  <depend package="roscpp"/>
  <depend package="pcl"/>
  <depend package="openmpi_devel"/>

  <!--rosdep name="openmpi" /-->
  
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lrosmpi"/>
  </export>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="rtt_ros_integration_sensor_msgs" path="" repo="orocos_toolchain_ros" repo_host="http://git.mech.kuleuven.be/robotics/orocos_toolchain_ros.git">
  <description brief="rtt_ros_integration_sensor_msgs">
    
    Provides all rtt typekits for ROS sensor_msgs
    
  </description>
  <author>Steven Bellens steven.bellens@mech.kuleuven.be</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rtt_ros_integration_sensor_msgs</url>
  <depend package="rtt_ros_integration"/>
  <depend package="rtt_ros_integration_geometry_msgs"/>
  <depend package="sensor_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>


</package><package name="nips_demo" path="/trunk/highlevel/nips_demo" repo="ubc-ros-pkg" repo_host="https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg">
  <description brief="srvc">

     NIPS demo

  </description>
  <author>Marius Muja</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/srvc</url>
  <depend package="srvc"/>

  <rosdep name="python-qt4"/>

</package><package name="hector_sensors_gazebo" path="/branches/fuerte/hector_models/hector_sensors_gazebo" repo="hector_models" repo_host="https://tu-darmstadt-ros-pkg.googlecode.com/svn">
  <description brief="hector_sensors_gazebo">

     hector_sensors_gazebo depends on the necessary plugins for using the sensors from the <a href="http://www.ros.org/wiki/hector_sensors_description">hector_sensors_description</a> package inside gazebo simulation.

  </description>
  <author>Stefan Kohlbrecher</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hector_sensors_gazebo</url>
  
  <depend package="hector_sensors_description"/>
  <depend package="gazebo_plugins"/>
  <depend package="hector_gazebo_plugins"/>

</package><package name="remote_mutex" path="" repo="pandora-auth-ros-pkg" repo_host="https://github.com/pandora-auth-ros-pkg/pandora-auth-ros-pkg">
  <description brief="remote_mutex">
	A remote mutex implementation for mutually exlusive access to nodes

  </description>
  <author>Miltiadis Allamanis</author>
  <license>MIT</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/remote_mutex</url>
  <depend package="roscpp"/>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib"/>
</export>

</package><package name="isr_maps" path="/stacks/lse_resources/trunk/isr_maps" repo="lse_resources" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="isr_maps">

     The isr_maps package contains maps of the ISR and arenas throughout the research labs. Centralized storage for commonly used maps for Stage world files and map_server nodes.

  </description>
  <author>Gonçalo Cabrita and Pedro Sousa</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/isr_maps</url>

</package><package name="can_usb_adapters" path="/stacks/can_communication/trunk/can_usb_adapters" repo="can_communication" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="can_usb_adapters">

     ROS Package for CAN to USB adapters drivers.

  </description>
  <author>Gonçalo Cabrita</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/can_usb_adapters</url>
  <depend package="roscpp"/>
  <depend package="cereal_port"/>
  <depend package="can_msgs"/>

</package><package name="geometric_semantics_orocos_typekit_kdl" path="" repo="geometric_relations_semantics" repo_host="http://git.mech.kuleuven.be/robotics/geometric_relations_semantics.git">
    <description brief="Orocos geometric_semantics_orocos_typekit_kdl Component package">
        This package contains the components of the geometric_semantics_orocos_typekit_kdl package, containing typekit code for KDL support of the geometric semantics
    </description>
  <author>Tinne De Laet, Steven Bellens</author>
  <license>LGPLv2.1 / BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.orocos.org/wiki/geometric-relations-semantics-wiki</url> 
    <depend package="geometric_semantics"/>
    <depend package="geometric_semantics_kdl"/>
    <depend package="geometric_semantics_orocos_typekit"/>
    <depend package="kdl_typekit"/>
</package><package name="rcf_base" path="/trunk/RCF4ROS/base/rcf_base" repo="roblab-whge-ros-pkg" repo_host="http://roblab-whge-ros-pkg.googlecode.com/svn">
  <description brief="rcf_base">

     rcf_base
     
     This package contains a base library for rcf nodes.
     
     All rcf nodes can be derived from the base node class.

  </description>
  <author>B. Fabricius</author>
  <license>CreativeCommons BY-NC-SA License</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rcf_base</url>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lrcf_base -lrcf_util "/>
  </export>
  <depend package="roscpp"/>

</package><package name="jacobian_utilities" path="" repo="usc-clmc-ros-pkg" repo_host="https://github.com/usc-clmc/usc-clmc-ros-pkg">
  <description brief="jacobian_utilities">

     jacobian_utilities

  </description>
  <author>Ludovic Righetti</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/jacobian_utilities</url>

  <depend package="robot_info"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -ljacobian_utilities"/>
  </export>


</package><package name="hai_sandbox" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="hai_sandbox">

     hai_sandbox

  </description>
  <author>Hai Nguyen</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hai_sandbox</url>
  <depend package="rospy"/>
  <depend package="std_msgs"/>
  <depend package="hrl_lib"/>
  <depend package="hrl_camera"/>
  <depend package="cv_bridge"/>
  <depend package="opencv2"/>
  <depend package="geometry_msgs"/>

  <!--<depend package="trigger_msgs"/>-->
  <depend package="sensor_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="move_base_msgs"/>
  <depend package="trajectory_msgs"/>
  <depend package="actionlib_msgs"/>
  <depend package="pr2_mechanism_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="kinematics_msgs"/>
  <depend package="hrl_pr2_lib"/>
  <depend package="ml_lib"/>
  <depend package="actionlib"/>
  <!--<depend package="planning_environment_msgs"/>-->
  <depend package="laser_interface"/>
  <depend package="interpolated_ik_motion_planner"/>
  <depend package="dynamic_reconfigure"/>

  <depend package="pr2_gripper_reactive_approach"/>
  <depend package="pr2_msgs"/>
  <depend package="libsvm3"/>
  <depend package="feature_extractor_fpfh"/>
  <depend package="message_filters"/>
</package><package name="kuka_lwr_fri" path="" repo="lwr_hardware" repo_host="https://github.com/RCPRG-ros-pkg/lwr_hardware">
    <description brief="Kuka FRI typekit package">
        This package contains the components of the Kuka FRI typekit package
    </description>
    <license/>
    <author> Ruben Smits, ruben.smits@mech.kuleuven.be</author>
    <depend package="rtt"/>
</package><package name="simulation_semantics" path="/trunk/arrg/ua_verbs/simulation_semantics" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="simulation_semantics">

     simulation_semantics

    </description>
    <author>Daniel Hewlett</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/simulation_semantics</url>

    <depend package="roslisp"/>
    <depend package="roslisp_runtime"/>
    <depend package="cl_transforms"/>
    <depend package="cl_utils"/>
    <depend package="actionlib_lisp"/>    
    <depend package="gbbopen"/>

    <depend package="wubble_description"/>
    <depend package="gazebo_plugins"/>

    <depend package="simulator_state"/>
    <depend package="wubble_mdp"/>
    <depend package="verb_learning"/>
    <depend package="time_series"/>

    <depend package="oomdp_msgs"/>
    <depend package="geometry_msgs"/>
    <depend package="std_msgs"/>
    <depend package="std_srvs"/>    

    <depend package="plotter"/>
    <depend package="map_server"/>
</package><package name="training_data" path="/trunk/training_data" repo="ubc-ros-pkg" repo_host="https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg">
  <description brief="training_data">

     training_data

  </description>
  <author/>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/training_data</url>

</package><package name="mapping_ias_msgs" path="" repo="mapping" repo_host="http://code.in.tum.de/git/mapping.git">
  <description brief="mapping_ias_msgs">

     mapping_ias_msgs

  </description>
  <author>Dejan Pangercic, Nico Blodow</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>todo</url>

  <depend package="sensor_msgs"/>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  
  <export>
    <cpp cflags="-I${prefix}/msg/cpp"/>
  </export>
  
</package><package name="cv_bridge" path="/stacks/vision_opencv/trunk/cv_bridge" repo="vision_opencv" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="CvBridge">

    This contains CvBridge, which converts between ROS
    Image messages and OpenCV images.

  </description>
  <author>Patrick Mihelich, James Bowman</author>
  <license>BSD</license>
  <review notes="Feb 1, 2011" status="Doc reviewed"/>
  <url>http://www.ros.org/wiki/cv_bridge</url>

  <export>
    <cpp cflags="`pkg-config opencv --cflags` -I${prefix}/include" lflags="`pkg-config opencv --libs` -Wl,-rpath,${prefix}/lib -L${prefix}/lib -lcv_bridge"/>
    <rosdoc config="rosdoc.yaml"/>
  </export>

  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="opencv2"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
  <rosdep name="opencv2"/>
</package><package name="audio_common_msgs" path="" repo="audio_common" repo_host="https://kforge.ros.org/audiocommon/audio_common">
  <description brief="audio_common_msgs">
    Messages for transmitting audio via ROS
  </description>
  <author>Nate Koenig</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/audio_common_msgs</url>

</package><package name="tidyup_executive" path="/trunk/tidyup_robot/tidyup_executive" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="sushi_executive">

     sushi_executive

  </description>
  <author>Daniel Benamy</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sushi_executive</url>

  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="sbpl_3dnav_planner"/>
  <depend package="pose_follower_3d"/>
  <depend package="pr2_tasks"/>
  <depend package="pr2_gripper_grasp_planner_cluster"/>
  <depend package="state_transformer"/>
  <depend package="mobile_manipulation_msgs"/>
  <depend package="pymongo"/>
  <depend package="sushi_turntable"/>
  <depend package="tidyup_utils"/>
  <depend package="tidyup_arm_services"/>
  <depend package="tidyup_actions"/>
  <depend package="planner_modules_pr2"/>
  <depend package="continual_planning_executive"/>
  <depend package="continual_planning_monitor"/>
  <depend package="tfd_modules"/>
  <!--depend package="narf_recognition"/-->
  <depend package="coverage_3d_executive"/>
  <depend package="door_executive"/>
  <depend package="planner_navigation_actions"/>
  <depend package="object_manipulator"/>
  <depend package="screenrun"/>

</package><package name="bullet" path="" repo="bullet" repo_host="https://kforge.ros.org/geometry/bullet">
<description brief="Bullet Physics Engine">
    <p>
    This package contains version 2.79 of the Bullet professional
    free 3D Game Multiphysics Library.  The ROS package automatically
    downloads, extracts and compiles a tarball.  For each major
    release of the Bullet library, the tarball will get updated.  The
    Bullet library provided by this ROS package is slightly different
    from the official Bullet release.
    </p>
    <p>
      This usage of bullet compiles with the flags
      -DBT_USE_DOUBLE_PRECISION -DBT_EULER_DEFAULT_ZYX set.
    </p>
</description>
<author>Erwin Coumans, ROS package maintained by Tully Foote</author>
<license>ZLib</license>
<review notes="ticket:2926" status="3rdparty doc reviewed"/>
<url>http://code.google.com/p/bullet/</url>
<rosdep name="libxext"/>
<rosdep name="glut"/>
<export>
<cpp cflags="-I${prefix}/include -DBT_USE_DOUBLE_PRECISION -DBT_EULER_DEFAULT_ZYX" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lBulletDynamics -lBulletCollision -lLinearMath"/>
  <doxymaker external="http://www.continuousphysics.com/Bullet/BulletFull/index.html"/>
<swig flags="-python -c++ -I${prefix}/include -DBT_USE_DOUBLE_PRECISION -DBT_EULER_DEFAULT_ZYX "/>
</export>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="kb_computable_client" path="/graveyard/kb_computable_client" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="kb_computable_client">

     kb_computable_client

     utils for querying external information, e.g. the poses of objects from jlo,
     from within Prolog

  </description>
  <author>Moritz Tenorth</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.ros.org/wiki/kb_computable_client</url>
  <depend package="rosjava"/>
  <depend package="vision_srvs"/>
  <depend package="std_msgs"/>

</package><package name="arbotix_firmware" path="/trunk/arbotix/arbotix_firmware" repo="vanadium-ros-pkg" repo_host="http://vanadium-ros-pkg.googlecode.com/svn">
  <description brief="arbotix_firmware">Firmware source code for ArbotiX ROS bindings.</description>
  <author>Michael Ferguson</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/arbotix_firmware</url>
</package><package name="openni_multitracker" path="/trunk/sandbox/openni_multitracker" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="openni_multitracker">

openni_multitracker broadcasts multiple OpenNI skeleton frame sets using tf.

  </description>
  <author>Edward T. Kaszubski, Tim Field</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/openni_multitracker</url>

  <depend package="roscpp"/>
  <depend package="roslib"/>
  <depend package="geometry_msgs"/>
  <depend package="openni"/>
  <depend package="nite"/>
  <depend package="kdl"/>
  <depend package="tf"/>
</package><package name="handle_detection2D" path="" repo="mapping" repo_host="http://code.in.tum.de/git/mapping.git">
  <description brief="handle_detector2D">

     handle_detector2D

  </description>
  <author>Dejan Pangercic</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/handle_detector2D</url>
  <depend package="opencv2"/>
  <depend package="roscpp"/>
  <depend package="pcl"/>
  <depend package="bullet"/>
  <depend package="pcl_ros"/>
  <depend package="image_geometry"/>
  <depend package="visualization_msgs"/>
</package><package name="cram_utilities" path="" repo="cram_core" repo_host="https://github.com/moesenle/cram_core">
  <description brief="CRAM utilities.">
    This packages contains some basic lisp utilities. This includes
    pattern matching and lazy lists.
  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <url>http://ros.org/wiki/cram_utilities</url>
  <review notes="" status="unreviewed"/>
  <depend package="sbcl"/>
  <depend package="alexandria"/>
  <depend package="synchronization_tools"/>
  <depend package="lisp_unit"/>
</package><package name="amcl" path="" repo="navigation" repo_host="https://kforge.ros.org/navigation/navigation">
  <description>
<p>
    amcl is a probabilistic localization system for a robot moving in
    2D. It implements the adaptive (or KLD-sampling) Monte Carlo
    localization approach (as described by Dieter Fox), which uses a
    particle filter to track the pose of a robot against a known map.
</p>
<p>
    This node is derived, with thanks, from Andrew Howard's excellent
    'amcl' Player driver.
</p>
  </description>
  <url>http://ros.org/wiki/amcl</url>
  <author>Brian P. Gerkey</author>
  <license>LGPL</license>
  <review status="Doc reviewed"/>
  <depend package="roscpp"/>
  <depend package="rosbag"/>
  <depend package="tf"/>
  <depend package="message_filters"/>
  <depend package="nav_msgs"/>
  <depend package="std_srvs"/>
  <depend package="dynamic_reconfigure"/>
  
  <!-- For tests -->
  <depend package="map_server"/>
  <depend package="rostest"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="pr2_grasp_adjust" path="/stacks/pr2_object_manipulation/branches/0.6-branch/manipulation/pr2_grasp_adjust" repo="pr2_object_manipulation" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_grasp_adjust">
  
    The pr2_grasp_adjust package provides an interface for finding grasp poses near a given input pose.

    The api includes a service server and an action server.

  </description>
  
  <author>Adam Leeper</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_grasp_adjust</url>
  <depend package="roscpp"/>
  <depend package="common_rosdeps"/>
  <rosdep name="eigen"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="tf"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="dynamic_reconfigure"/>
  <!-- 
    <depend package="tabletop_collision_map_processing" />
    <depend package="pr2_gripper_grasp_controller"/>
    <depend package="pr2_gripper_reactive_approach"/>
    <depend package="pr2_gripper_sensor_action"/>
  --> 
  <depend package="object_manipulation_msgs"/>
  <depend package="object_manipulator"/>
  <depend package="actionlib"/>


</package><package name="katana_arm_gazebo" path="" repo="katana_driver" repo_host="http://kos.informatik.uni-osnabrueck.de/katana_driver.git">
  <description brief="Simulates a Katana arm in Gazebo">

    This package starts a Neuronics Katana robot arm in the Gazebo simulation environment. It is modeled after the <a href="http://www.ros.org/wiki/pr2_arm_gazebo">pr2_arm_gazebo</a> package by John Hsu.

  </description>
  <author>Martin Günther</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/katana_arm_gazebo</url>
  <depend package="roscpp"/>
  <depend package="gazebo"/>
  <depend package="urdf"/>
  <depend package="xacro"/>
  <depend package="robot_state_publisher"/>
  <depend package="katana_description"/>
  <depend package="pr2_controller_manager"/>
  <depend package="robot_mechanism_controllers"/>
  <depend package="katana_gazebo_plugins"/>
  <depend package="katana_joint_movement_adapter"/>

  <!-- needed for test programs (moving the joints and gripper): -->  
  <depend package="actionlib"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="std_msgs"/>
</package><package name="png_pcd_saver" path="/trunk/kinect_utils/png_pcd_saver" repo="ubc-ros-pkg" repo_host="https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg">
  <description brief="png_pcd_saver">

     png_pcd_saver

  </description>
  <author/>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/png_pcd_saver</url>

  <depend package="sensor_msgs"/>
  <depend package="message_filters"/>
  <depend package="pcl"/>
  <depend package="cv_bridge"/>
  <rosdep name="opencv2.3"/>

</package><package name="srs_states" path="" repo="srs_public" repo_host="git://github.com/ipa320/srs_public">
  <description brief="srs_states">

     srs_states

  </description>
  <author>Georg Arbeiter</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/srs_states</url>
  <depend package="smach"/>
  <depend package="cob_script_server"/>
  <!--depend package="cob_2dnav"/-->
  <!--depend package="cob_linear_nav"/-->
  <depend package="cob_navigation_global"/>
  <depend package="cob_linear_nav"/>
  <depend package="cob_mmcontroller"/>
  <depend package="cob_manipulator"/>
  <depend package="cob_kinematics"/>
  <!--depend package="cob_tray_sensors"/-->
  <depend package="cob_object_detection_msgs"/>
  <depend package="cob_object_detection_fake"/>
  <depend package="gazebo"/>
  <depend package="cob_3d_mapping_msgs"/>
  <depend package="kinematics_msgs"/>
  <depend package="srs_object_verification"/>
  <depend package="srs_assisted_detection"/>
  <depend package="srs_knowledge"/>
  <depend package="srs_symbolic_grounding"/>
  
  
  

  <!--Start-->
  <!--Packages removed for simplifying the testing process, they will be loaded dynamicly within the states-->
  <!--depend package="srs_grasping"/-->
  <!--depend package="srs_assisted_arm_navigation"/-->
  <!--depend package="srs_interaction_primitives"/-->
  <!--End-->

</package><package name="bumperCar" path="/trunk/ros/nxt_lejos_ros_robots/bumperCar" repo="lejos-ros-pkg" repo_host="https://lejos.svn.sourceforge.net/svnroot/lejos">
	<description brief="nxtstatus">
		NXTStatus
	</description>
	<author>Juan Antonio Brenha Moral</author>
	<license>BSD</license>
	<review notes="" status="unreviewed"/>
	<url>http://ros.org/wiki/roslejos</url>

	<depend package="rosjava"/>
	<depend package="std_msgs"/>
	<depend package="sensor_msgs"/>
	<depend package="nxt_msgs"/>
	<depend package="nxt_lejos_ros_msgs"/>

	<export>
    	<rosjava-src location="src"/> 
    	<rosjava-pathelement artifactId="org.lejos.ros.nodes.bumpercar" built="true" groupId="org.lejos.ros" location="target/" version="0.0.1"/>
    	<rosjava-pathelement location="/home/lawrie/workspace/snapshot/lib/pc/pccomm.jar"/>
     	<rosjava-pathelement location="/home/lawrie/workspace/snapshot/lib/pc/3rdparty/bluecove-gpl.jar"/>
    	<rosjava-pathelement location="/home/lawrie/workspace/snapshot/lib/pc/3rdparty/bluecove.jar"/>	    	
   	</export>

</package><package name="eros_license" path="/trunk/eros_license" repo="eros" repo_host="https://code.ros.org/svn/eros">
  <description brief="Licensing details for eros">

  <p>
     Maintains the eros license details.
  </p>
  </description>
  <author>Daniel Stonier (d.stonier@gmail.com)</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/eros_license</url>
</package><package name="application_client" path="" repo="ros_applications" repo_host="https://kforge.ros.org/rosapps/hg">
  <description brief="application_client">

     application_client

  </description>
  <author/>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/application_client</url>
  <depend package="application_msgs"/>
  <depend package="rospy"/>
  <depend package="roslib"/>
  <depend package="actionlib"/>

</package><package name="mantis_perception" path="/trunk/mantis/mantis_perception" repo="swri-ros-pkg" repo_host="http://swri-ros-pkg.googlecode.com/svn">
  <description brief="mantis_perception">

     mantis_perception

  </description>
  <author>Jnicho</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/mantis_perception</url>
  <depend package="tf"/>
  <depend package="object_manipulator"/>
  <depend package="object_manipulation_msgs"/>
  <depend package="planning_environment"/>
  <depend package="visualization_msgs"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="object_manipulation_tools"/>
  <depend package="perception_tools"/>

</package><package name="rtcus_kinect_joystick" path="/branches/rtcus_kinect_joystick" repo="rtc-us-ros-pkg-branches" repo_host="https://rtc-us-ros-pkg.svn.sourceforge.net/svnroot/rtc-us-ros-pkg">
  <description brief="rtcus_kinect_joystick">

     rtcus_kinect_joystick

  </description>
  <author>ros1</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rtcus_kinect_joystick</url>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="joy"/>

</package><package name="yason" path="" repo="cram_highlevel" repo_host="https://github.com/moesenle/cram_highlevel">
  <description brief="yason">
YASON is a Common Lisp library for encoding and decoding data in the JSON (JavaScript Object Notation) interchange format.
http://www.cliki.net/YASON
  </description>
  <author>Hans Hübner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
</package><package name="dmp_behavior_actions" path="" repo="usc-clmc-ros-pkg" repo_host="https://github.com/usc-clmc/usc-clmc-ros-pkg">
  <description brief="dmp_behavior_actions">

     behavior_actions

  </description>
  <author>Peter Pastor</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/dmp_behavior_actions</url>

  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  <depend package="actionlib_msgs"/>

  <depend package="task_msgs"/>

  <depend package="dynamic_movement_primitive"/>
  <depend package="skill_library"/>

</package><package name="application_manager" path="" repo="ros_applications" repo_host="https://kforge.ros.org/rosapps/hg">
  <description brief="application_manager">

     application_manager

  </description>
  <author>Wim Meeussen</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/application_manager</url>

  <depend package="rospy"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="application_msgs"/>

</package><package name="ForceTorque_msgs" path="/darpa_arm_msgs/ForceTorque_msgs" repo="darpa_arm_msgs" repo_host="http://svn.thearmrobot.com">
  <description brief="ForceTorque_msgs">

     ForceTorque_msgs

  </description>
  <author>DARPA ARM GFE Team</author>
  <license>GPL</license>
  
  <export>
    <cpp cflags="-I${prefix}/msg/cpp -I${prefix}/srv/cpp"/>
  </export>

</package><package name="robchair_teleop" path="/stacks/robchair_robot/trunk/robchair_teleop" repo="robchair_robot" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="robchair_teleop">

     Teleoperation stack for the RobChair robot, the smart wheelchair from the ISR UC.

  </description>
  <author>Gonçalo Cabrita</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/robchair_teleop</url>
  <depend package="roscpp"/>
  <depend package="can_msgs"/>

</package><package name="ueyecamera" path="" repo="ueyecamera" repo_host="https://bitbucket.org/yogeshgirdhar/ueyecamera">
  <description brief="uEye camera driver">
    A ROS node to provide access to the uEye USB cameras made by IDS Imaging
    Development Systems. 
  </description>
  <author>Yogesh Girdhar, William J Beksi</author>
  <license>BSD</license>
  <url>http://ros.org/wiki/ueyecamera</url>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="image_transport"/>
</package><package name="collada_urdf_jsk_patch" path="/trunk/jsk_ros_patch/collada_urdf_jsk_patch" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="collada_urdf_jsk_patch">

     unaccepted patch for collada_urdf

  </description>
  <author>Kei Okada</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/collada_urdf_jsk_patch</url>

  <rosdep name="libgts"/>

  <depend package="collada_urdf"/>

</package><package name="easy_markers" path="/branches/stable/wu_ros_tools/easy_markers" repo="wu-ros-pkg" repo_host="https://wu-robotics.googlecode.com/svn">
  <description brief="Easy Python Marker Generator">
    A library to assist in publishing markers easily in Python
  </description>
  <author>David V. Lu!!</author>
  <license>BSD</license>
  <url>http://ros.org/wiki/easy_markers</url>
  <depend package="rospy"/>
  <depend package="visualization_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="tf"/>
  <depend package="interactive_markers"/>
</package><package name="create_joy" path="/trunk/create_joy" repo="ucsb-ros-pkg" repo_host="https://ucsb-ros-pkg.googlecode.com/svn">
  <description brief="create_joy">

Provides joystick control for the iRobot Create.  

  </description>
  <author>Paul Filitchkin</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://code.google.com/p/ucsb-ros-pkg/wiki/create_webcam</url>
  <depend package="std_msgs"/>
  <depend package="roscpp"/>
  <depend package="joy"/>
  <depend package="geometry_msgs"/>
  <depend package="create_node"/>

</package><package name="mocap_point_cloud" path="/branches/stable/motion_capture/mocap_point_cloud" repo="wu-ros-pkg" repo_host="https://wu-robotics.googlecode.com/svn">
  <description brief="mocap_point_cloud">
    A package for converting C3d motion capture files into a PointCloud
  </description>
  <author>David V. Lu!!</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/mocap_point_cloud</url>
  <depend package="rospy"/>
  <depend package="c3d"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="rosbag"/>

</package><package name="articulation_msgs" path="/trunk/articulation/articulation_msgs" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="ROS messages and services for describing articulation models of doors and drawers.">

This package defines generic messages for communicating observed kinematic trajectories and articulation models. Further, this packages defines generic services for fitting, selecting and storing kinematic models from observed trajectories.

  </description>
  <author>Juergen Sturm</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/articulation_msgs</url>

  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="std_msgs"/>
  <depend package="visualization_msgs"/>
  
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg_gen/cpp/include -I${prefix}/srv_gen/cpp/include"/>
  </export>


</package><package name="planner_modules_pr2" path="/trunk/pr2_symbolic_planning/planner_modules_pr2" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="planner_modules_pr2">
    This package contains planner modules for integrating robot
    information, mainly for the PR2, from ROS into the planner.
  </description>
  <author>Christian Dornhege, Andreas Hertle</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/planner_modules_pr2</url>
  <depend package="tfd_modules"/>
  <depend package="nav_msgs"/>
  <depend package="arm_navigation_msgs"/>
  <depend package="tf"/>
  <depend package="planner_benchmarks"/>
  <depend package="tidyup_msgs"/>
  <depend package="hardcoded_facts"/>
  <depend package="tidyup_utils"/>
  <depend package="pluginlib"/>
  <depend package="continual_planning_executive"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lplanner_modules_pr2"/>
  </export>
</package><package name="roscapable" path="/trunk/capabilities/roscapable" repo="vanadium-ros-pkg" repo_host="http://vanadium-ros-pkg.googlecode.com/svn">
  <description brief="roscapable is an extended version of roslaunch, which can handle launching required capabilties.">
    roscapable is an extended version of roslaunch, which can handle launching required capabilties.
  </description>
  <author>Michael Ferguson</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/roscapable</url>
  <depend package="rospy"/>
  <depend package="roslaunch"/>
  <depend package="capabilities_msgs"/>
  <depend package="capabilities_server"/>
</package><package name="qt_gui_cpp" path="" repo="qt_gui_core" repo_host="https://kforge.ros.org/visualization/qt_gui_core">
  <description brief="Foundation for C++-bindings">
    qt_gui_cpp provides the foundation for C++-bindings for qt_gui and creates bindings for every generator available.
    At least one specific binding must be available in order to use C++-plugins.
  </description>
  <author>Dirk Thomas</author>
  <license>BSD</license>
  <review notes="2012-06-20" status="API cleared"/>
  <url>http://ros.org/wiki/qt_gui_cpp</url>

  <depend package="qt_gui"/>
  <depend package="pluginlib"/>
  <rosdep name="libqt4-dev"/>
  <rosdep name="pkg-config"/>
  <rosdep name="qt4-qmake"/>
  <rosdep name="tinyxml"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lqt_gui_cpp"/>
    <qt_gui plugin="${prefix}/plugin.xml"/>
  </export>
</package><package name="comp_spatial" path="/tags/latest/comp_spatial" repo="knowrob" repo_host="http://code.in.tum.de/pubsvn/knowrob">
  <description brief="comp_spatial">

     Routines for spatial reasoning in Prolog.

     Contains Prolog computables for calculating qualitative spatial relations,
     but also those for extracting certain elements from the string representation
     of a matrix.

  </description>
  <author>Moritz Tenorth, Lars Kunze</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/comp_spatial</url>

  <depend package="ias_knowledge_base"/>
  <depend package="comp_temporal"/>
  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>
</package><package name="turtlebot_driver" path="" repo="turtlebot" repo_host="https://kforge.ros.org/turtlebot/turtlebot">
  <description brief="Driver for iRobot Turtlebot and Roomba">

     For ROS bindings, please see turtlebot_node. 

     This is a generic driver for iRobot Turtlebot and Roomba.  Port
     of pyrobot.py by Damon Kohler.  It is currently labeled as
     turtlebot_driver pending review by the entire create community
     before using the name create_driver.

  </description>
  <author>Damon Kohler. Ported and maintained by Ken Conley and Melonee Wise</author>
  <license>MIT</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/turtlebot_driver</url>
  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>

</package><package name="sparselib" path="/stacks/vslam/trunk/sparselib" repo="vslam" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Sparse matrix routines">

    Sparselib++ is a set of sparse matrix routines in C++ from NIST

  </description>
  <author>Roldan Pozo, Karin A. Remington, Andrew Lumsdaine</author>
  <license>Public Domain</license>
  <review notes="" status="unreviewed"/>
  <url>http://math.nist.gov/sparselib++</url>
  <export>
    <cpp cflags="-I${prefix}/include/ -DCOMPLEX='std::complex&lt;double&gt;'" lflags="-L${prefix}/lib/ -lsparse.a -lspblas.a -lmv.a"/>
  </export>

  <rosdep name="unzip"/>

</package><package name="cpp0x" path="/trunk/quickdev/cpp0x" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="cpp0x">

     cpp0x

  </description>
  <author>Edward T. Kaszubski ( ekaszubski@gmail.com )</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cpp0x</url>
  <export>
	<cpp cflags="-std=c++0x"/>
  </export>
</package><package name="fence_detection" path="" repo="au_automow_simulation" repo_host="https://github.com/Auburn-Automow/au_automow_simulation">
  <description brief="fence_detection">

     automow_fence_detection

  </description>
  <author>Michael Carroll</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/automow_fence_detection</url>

  <depend package="rosbag"/>
  <depend package="tf"/>
  <depend package="sensor_msgs"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="visualization_msgs"/>
  <depend package="tf"/>

</package><package name="openhrp" path="" repo="stacks/openhrp" repo_host="git://github.com/laas/openhrp">
  <description brief="OpenHRP">
    ROS package of the 3rd party package OpenHRP.
  </description>
  <author>Thomas Moulard</author>
  <license>EPL</license>
  <review notes="" status="experimental"/>
  <url>http://www.openrtp.jp/openhrp3/</url>

  <export>
    <cpp cflags="-I${prefix}/install/include -I${prefix}/install/include/OpenHRP-3.1 `pkg-config --cflags eigen3`" lflags="-L${prefix}/install/lib -Wl,-rpath,${prefix}/install/lib `pkg-config --libs eigen3` -lhrpCorbaStubSkel-3.1 -lhrpModel-3.1 -lhrpUtil-3.1"/>

    <rosdoc config="rosdoc.yaml"/>
  </export>

  <depend package="openrtm_cpp"/>
  <rosdep name="eigen"/>
  <rosdep name="liblapack-dev"/>
  <rosdep name="libjpeg"/>
  <rosdep name="libpng12-dev"/>
  <rosdep name="f2c"/>
  <rosdep name="java"/>
  <rosdep name="jython"/>
  <rosdep name="unzip"/>
  <rosdep name="doxygen"/>
  <rosdep name="pkg-config"/>
</package><package name="espeak" path="/trunk/arrg/ua_language/espeak" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">

    <description brief="Trivial service interface to eSpeak TTS System">

    A trivial text-to-speech system to serve as a small reference 
    for more interesting packages to come. 

    </description>
    <author>Daniel Hewlett</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/espeak</url>

    <!-- These are basic ROS packages that python nodes depend on -->
    <depend package="rospy"/>
    <depend package="std_msgs"/>
    <depend package="std_srvs"/>

    <!-- This is how you specify a system dependency 
         i.e., a package from the Ubuntu repository -->
    <rosdep name="espeak"/>

</package><package name="kurt_gazebo_plugins" path="" repo="kurt_driver" repo_host="http://kos.informatik.uni-osnabrueck.de/kurt_driver.git">
  <description brief="Gazebo plugins for the KURT robot">

    This package provides Gazebo plugins for the KURT robot. It is based on turtlebot_gazebo_plugins by Nate Koenig.

  </description>
  <author>Martin Günther</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/kurt_gazebo_plugins</url>
  <depend package="gazebo"/>
  <depend package="nav_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib"/>
    <gazebo plugin_path="${prefix}/lib"/>
  </export>
</package><package name="pr2_controller_configuration" path="" repo="pr2_robot" repo_host="https://kforge.ros.org/pr2robot/hg">
  <description brief="pr2_controller_configuration">

  Configuration files for PR2 controllers.

  </description>
  <author>Wim Meeussen</author>
  <license>BSD</license>
  <review notes="" status="Doc Reviewed"/>
  <url>http://ros.org/wiki/pr2_controller_configuration</url>
  <depend package="pr2_machine"/>
  <depend package="pr2_controller_manager"/>
  <depend package="robot_mechanism_controllers"/>
  <depend package="single_joint_position_action"/>
  <depend package="pr2_head_action"/>
  <depend package="pr2_gripper_action"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="pr2_control_utilities" path="" repo="uuisrc-pr2-pkgs" repo_host="https://github.com/uu-isrc-robotics/uu-isrc-robotics-pr2-pkgs">
  <description brief="Python classes to control/read the PR2 joints">

     A set of convenient Python classes to read the values from the PR2 joints and 
     execute actions. It supports storing a joints configuration on a file to be recalled later.
     Reading joint values from cartesian coordinates using IK is also supported.  

  </description>
  <author>Lorenzo Riano lorenzo.riano@gmail.com </author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_control_utilities</url>
  <depend package="rospy"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="arm_navigation_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="kinematics_msgs"/>
  <depend package="tf"/>
  <depend package="interpolated_ik_motion_planner"/>
  <depend package="move_base_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="pr2_mechanism_msgs"/>

</package><package name="hector_quadrotor_demo" path="/branches/fuerte/hector_quadrotor_apps/hector_quadrotor_demo" repo="hector_quadrotor_apps" repo_host="https://tu-darmstadt-ros-pkg.googlecode.com/svn">
  <description brief="hector_quadrotor_demo">

     hector_quadrotor_demo contains various launch files and needed dependencies for demonstration of the hector_quadrotor stack (indoor/outdoor flight in gazebo etc.)

  </description>
  <author>Stefan Kohlbrecher</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hector_quadrotor_demo</url>
  
  <depend package="hector_quadrotor_gazebo"/>
  <depend package="hector_gazebo_worlds"/>
  <depend package="hector_mapping"/>
  <depend package="hector_geotiff"/>
  <depend package="hector_trajectory_server"/>
  

</package><package name="jlo_navp_process_module" path="" repo="cram_rosie" repo_host="http://code.in.tum.de/git/cram-rosie.git">
  <description brief="jlo_navp_process_module">

     jlo_navp_process_module

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/jlo_navp_process_module</url>
  <depend package="cram_process_modules"/>
  <depend package="cljlo"/>
  <depend package="actionlib_lisp"/>
  <depend package="cram_roslisp_common"/>
  <depend package="designators_ros"/>
  <depend package="navp_action"/>
  <depend package="cljlo_utils"/>
  <depend package="cram_plan_failures"/>

</package><package name="engagement_recognition" path="/trunk/engagement/engagement_recognition" repo="ros-engagement" repo_host="http://ros-engagement.svn.sourceforge.net/svnroot/ros-engagement">
  <description brief="Recognizing Engagement Behaviors in Human-Robot Interaction">
    Human-robot engagement package developed at Worcester Polytechnic Institute
    by Prof. Charles Rich et al. <br/>Currently contains 
    the <b>recognition node</b> which is responsible for recognizing 
    <u>directed gaze</u>, <u>mutual facial gaze</u>, <u>adjacency 
    pairs</u>, and <u>backchannels</u> during an interaction.
  </description>
  <author>Brett Ponsler (bponsler (at) wpi (dot) edu)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://sourceforge.net/projects/ros-engagement/</url>
  <depend package="roscpp"/>
  <depend package="engagement_msgs"/>
  <depend package="engagement_srvs"/>
  <export>
    <cpp cflags="-I${prefix}/srv/cpp -I${prefix}/msg/cpp" lflags="-L${prefix}/lib -lros"/>
  	<rosdoc config="../rosdoc.yaml"/>
  </export>
</package><package name="velodyne_pointcloud" path="/trunk/stacks/velodyne/velodyne_pointcloud" repo="utexas-art-ros-pkg" repo_host="http://utexas-art-ros-pkg.googlecode.com/svn">
  <description brief="Velodyne point cloud conversions">

     Point cloud conversions for Velodyne 3D LIDARs.

  </description>
  <author>Jack O'Quin, Piyush Khandelwal, Jesse Vera</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/velodyne_pointcloud</url>

  <depend package="nodelet"/>
  <depend package="pcl_ros"/>
  <depend package="rostest"/>
  <depend package="sensor_msgs"/>
  <depend package="tf"/>
  <depend package="velodyne_driver"/> <!-- launch files for testing -->
  <depend package="velodyne_msgs"/>

  <rosdep name="yaml-cpp"/>
  <rosdep name="python-yaml"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lvelodyne_rawdata"/>
    <nodelet plugin="${prefix}/nodelets.xml"/>
  </export>

</package><package name="remote_power_manager" path="/trunk/stacks/pr2_dremel/remote_power_manager" repo="bosch-ros-pkg-e" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg-e/code">
  <description brief="remote_power_manager">

     A package that enables oommunication with a remote power manager such as the NP-02.
     The package provides services for checking the status of the ports, for setting
     specific ports to on or off, for setting all ports, and for resetting ports.

  </description>
  <author>Philip Roan, Bosch LLC</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/remote_power_manager</url>

  <depend package="std_msgs"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>
</package><package name="voxel_grid" path="" repo="navigation" repo_host="https://kforge.ros.org/navigation/navigation">
<description brief="3D Voxel Grid">

voxel_grid provides an implementation of an efficient 3D voxel grid. The occupancy grid can support 3 different representations for the state of a cell: marked, free, or unknown. Due to the underlying implementation relying on bitwise and and or integer operations, the voxel grid only supports 16 different levels per voxel column. However, this limitation yields raytracing and cell marking performance in the grid comparable to standard 2D structures making it quite fast compared to most 3D structures.

</description>
<author>Eitan Marder-Eppstein, Eric Berger</author>
<license>BSD</license>
<review notes="" status="Doc reviewed"/>
<url>http://ros.org/wiki/voxel_grid</url>
<depend package="rosconsole"/>
<export>
  <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lvoxel_grid"/>
</export>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="turtlebot_block_manipulation" path="" repo="turtlebot_arm" repo_host="https://kforge.ros.org/turtlebot/turtlebot_arm">
  <description brief="turtlebot_block_manipulation">

     turtlebot_block_manipulation contains a demo allowing the TurtleBot arm to manipulate small blocks on a level surface using interactive markers.

  </description>
  <author>Helen Oleynikova</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/turtlebot_block_manipulation</url>
  
  <depend package="roscpp"/>
  <depend package="actionlib"/>
  <depend package="visualization_msgs"/>
  <depend package="interactive_markers"/>
  <depend package="simple_arm_server"/>
  <depend package="simple_arm_actions"/>
  <depend package="pcl_ros"/>

</package><package name="image_matcher" path="/trunk/cturtle/image_matcher" repo="seabee3-ros-pkg" repo_host="http://seabee3-ros-pkg.googlecode.com/svn">
  <description brief="image_matcher">

     image_matcher

  </description>
  <author>Michael Wei</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/image_matcher</url>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="image_transport"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="yaml_cpp"/>
  <depend package="base_libs"/>

</package><package name="lcm" path="/trunk/stacks/april/lcm" repo="utexas" repo_host="https://utexas-ros-pkg.googlecode.com/svn">
  <description brief="lcm">

     lcm

  </description>
  <author>MIT DARPA Urban Challenge Team</author>
  <license>GNU LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/lcm</url>

  <rosdep name="java"/>
  <rosdep name="python"/>
  <rosdep name="libglib-dev"/>

</package><package name="knowrob_tutorial" path="/knowledge/knowrob_tutorial" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="knowrob_tutorial">

     knowrob_tutorial

  </description>
  <author>Moritz Tenorth</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/knowrob_tutorial</url>
  <depend package="mod_vis"/>
  <depend package="json_prolog"/>
  <depend package="rosjava_jni"/>
  <depend package="ias_semantic_map"/>
  <depend package="tabletop_object_detector"/>


  <export>
    <java classpath="${prefix}/bin"/>
  </export>

</package><package name="asctec_autopilot" path="" repo="asctec_drivers" repo_host="https://github.com/ccny-ros-pkg/asctec_drivers">
  <description brief="asctec_autopilot">
This is the hardware driver for the AscTec AutoPilot built by Ascending Technologies GmbH. http://www.asctec.de

It should be compatible with the Hummingbird and Pelican quadrotor aircraft.

This driver is not yet complete and the interfaces are not yet finalized. Full functionality will be supported in the near future. Contributions are welcome.
  </description>
  <author>William Morris, Ivan Dryanovski, Steven Bellens, Patrick Bouffard et al.</author>
  <license>GPL</license>
  <review notes="This is unstable and under active development." status="experimental"/>
  <url>http://ros.org/wiki/asctec_autopilot</url>
  <depend package="roscpp"/>
  <depend package="nodelet"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="asctec_msgs"/>
  <depend package="diagnostic_updater"/>

  <export>
    <nodelet plugin="${prefix}/autopilot_nodelet.xml"/>
  </export>

</package><package name="hippo_defs" path="/trunk/sandbox/hippo_defs" repo="vanadium-ros-pkg" repo_host="http://vanadium-ros-pkg.googlecode.com/svn">
  <description brief="hippo_defs">

     hippo_defs

  </description>
  <author>Michael Ferguson</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hippo_defs</url>

</package><package name="pr2_calibration_controllers" path="/stacks/pr2_controllers/trunk/pr2_calibration_controllers" repo="pr2_controllers" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_calibration_controllers">

     The pr2_calibration_controllers package contains the controllers
     used to bring all the joints in the PR2 to a calibrated state.

  </description>
  <author>Stuart Glaser</author>
  <license>BSD</license>
  <review notes="" status="NA"/>
  <url>http://ros.org/wiki/pr2_calibration_controllers</url>

  <depend package="std_msgs"/>
  <depend package="std_srvs"/>
  <depend package="pr2_controller_interface"/>

  <depend package="roscpp"/>
  <depend package="pr2_mechanism_model"/>
  <depend package="realtime_tools"/>
  <depend package="robot_mechanism_controllers"/>
  <depend package="pr2_mechanism_controllers"/>
  <depend package="pluginlib"/>
  <depend package="rosconsole"/>
  <depend package="angles"/>
  <depend package="control_toolbox"/>

  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp -I${prefix}/srv/cpp" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lpr2_calibration_controllers"/>
    <pr2_controller_interface plugin="${prefix}/controller_plugins.xml"/>
  </export>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="android_acm_serial" path="" repo="android_core" repo_host="https://code.google.com/p/rosjava.android/">
  <description brief="android_acm_serial">
    android_acm_serial
  </description>
  <author>Damon Kohler (damonkohler@google.com)</author>
  <license>Apache 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/android_acm_serial</url>
</package><package name="eros_qt_tutorials" path="/trunk/tests/eros_qt_tutorials" repo="eros" repo_host="https://code.ros.org/svn/eros">
  <description brief="eros_qt_tutorials">

     eros_qt_tutorials

  </description>
  <author>Daniel Stonier</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/eros_qt_tutorials</url>

  <depend package="eros_build"/>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <rosdep name="qt4"/>

  <!--
    This needs to go in and work eventually in rosbuild2 as well
    <depend package="eros_build"/>
  -->
  <!--
  <rosbuild2>
    <depend package="roscpp"/>
    <depend package="std_msgs"/>
    <rosdep name="qt4"/>

    <srvs>srv/TwoInts.srv</srvs>
  </rosbuild2>
  -->

</package><package name="power_monitor" path="/stacks/pr2_power_drivers/trunk/power_monitor" repo="pr2_power_drivers" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="Monitor PR2 batteries and power board">

     The power_monitor collects messages from the ocean_battery_server and
     the pr2_power_board, and publishes a summary of their data in a
     friendlier message format.

  </description>
  <author>Tim Field, Curt Meyers</author>
  <license>BSD</license>
  <review notes="Dec 2009" status="Doc reviewed"/>
  <url>http://www.ros.org/wiki/power_monitor</url>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="pr2_msgs"/>
  <depend package="dynamic_reconfigure"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="synchronization_tools" path="" repo="cram_core" repo_host="https://github.com/moesenle/cram_core">
  <description brief="synchronization-tools">
  </description>
  <author>Tobias C. Rittweiler</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
</package><package name="sick_lms400" path="/drivers/sick_lms400" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description>A library for accessing the SICK LMS400 laser sensor.</description>
  <author>Radu Bogdan Rusu (rusu@cs.tum.edu), Dejan Pangercic (dejan.pangercic@cs.tum.edu)</author>
  <license>BSD</license>
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="angles"/>
</package><package name="web_msgs" path="/stacks/web_interface/trunk/web_msgs" repo="web_interface" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="web_msgs">

     web_msgs

  </description>
  <author/>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/web_msgs</url>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="riq_hand_gui" path="/stacks/riq_hand/trunk/riq_hand_gui" repo="riq_hand" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="riq_hand_gui">

     riq_hand_gui

  </description>
  <author>Derek King</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/riq_hand_gui</url>
  <depend package="rospy"/>
  <depend package="riq_msgs"/>
  <rosdep name="wxwidgets"/>

</package><package name="aaai_lfd_simulator" path="/trunk/stacks/aaai_lfd_demo/aaai_lfd_simulator" repo="bosch-ros-pkg-e" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg-e/code">
  <description brief="aaai_lfd_simulator">

     aaai_lfd_simulator

  </description>
  <author>Ralf Kempf (Maintained by Sarah Osentoski)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/aaai_lfd_simulator</url>
  <depend package="roscpp"/>
  <depend package="actionlib"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="gazebo"/>
  <export>
    <gazebo gazebo_media_path="${prefix}"/>
  </export>
</package><package name="ackermann_qt" path="/trunk/stacks/ackermann_teleop/ackermann_qt" repo="utexas-art-ros-pkg" repo_host="http://utexas-art-ros-pkg.googlecode.com/svn">
  <description brief="Ackermann steering Qt tele-operation">

     Qt tele-operation interface for driving a vehicle with Ackermann
     steering under human control.

  </description>
  <author>Jack O'Quin</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://www.ros.org/wiki/ackermann_qt</url>

  <depend package="ackermann_msgs"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="rospy"/>

  <!-- declare run-time dependency on Qt4 python package -->
  <rosdep name="python-qt-bindings"/>

</package><package name="sbpl_recovery" path="" repo="navigation_experimental" repo_host="https://kforge.ros.org/navigation/experimental">
  <description brief="sbpl_recovery">

     sbpl_recovery

  </description>
  <author>Eitan Marder-Eppstein</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sbpl_recovery</url>
  <depend package="roscpp"/>
  <depend package="nav_core"/>
  <depend package="sbpl_lattice_planner"/>
  <depend package="pose_follower"/>
  <depend package="costmap_2d"/>
  <depend package="pluginlib"/>
  <depend package="base_local_planner"/>

  <export>
    <nav_core plugin="${prefix}/recovery_plugin.xml"/>
  </export>

</package><package name="google_topic_monitor" path="" repo="google" repo_host="https://code.google.com/p/rosjava.google/">
  <description brief="google_topic_monitor">
    google_topic_monitor is a tool for monitoring the frequency of arbitrary topics and exporting that information to a diagnostics_aggregator.
  </description>
  <author>Charles DuHadway</author>
  <license>Apache 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/google_topic_monitor</url>
  <depend package="diagnostic_updater"/>
  <depend package="roslib"/>
  <depend package="topic_tools"/>
</package><package name="ghmm" path="/trunk/rtcus_cognitive/ghmm" repo="rtc-us-ros-pkg-trunk" repo_host="https://rtc-us-ros-pkg.svn.sourceforge.net/svnroot/rtc-us-ros-pkg">
  <description brief="Gaussian Hidden Markov Library">
	Python bindings for Gaussian Hidden Markov Library (ghmm) - http://ghmm.org/
	Rutgers University
  </description>
  <author>Pablo Iñigo Blasco</author>
  <license>LGPL</license>
  <review notes="cpp export yet not specified" status="reviewed"/>
  <url>http://ros.org/wiki/ghmm</url>
  <export>
    <python path="${prefix}/lib/python2.7/site-packages"/>
  </export>
  <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib"/>
  <rosdep name="swig"/>
 </package><package name="calibration_estimation" path="" repo="calibration" repo_host="http://kforge.ros.org/calibration/calibration">
  <description brief="Runs an optimization to estimate a robot's kinematic parameters">
    Runs an optimization to estimate the a robot's kinematic parameters. This package is a
    generic rewrite of pr2_calibration_estimation.
  </description>
  <author>Vijay Pradeep, Michael Ferguson</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/calibration_estimation</url>

  <depend package="rospy"/>
  <depend package="rostest"/>

  <depend package="sensor_msgs"/>
  <depend package="calibration_msgs"/>

  <depend package="visualization_msgs"/>

  <!--<depend package="urdf_python" />   for parsing URDF (currently a modified version is held internally) -->
  <depend package="tf"/>           <!-- tf.transformations for angle-axis/RPY conversions -->

  <rosdep name="python-scipy"/>
</package><package name="simple_3D_target_tracker" path="/trunk/kinect_utils/simple_3D_target_tracker" repo="ubc-ros-pkg" repo_host="https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg">
  <description brief="simple_3D_target_tracker">

     simple_3D_target_tracker

  </description>
  <author/>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/simple_3D_target_tracker</url>

  <depend package="sensor_msgs"/>
  <depend package="message_filters"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="cv_bridge"/>
  <rosdep name="opencv2.3"/>

</package><package name="pr2_ps3_joystick_app" path="" repo="pr2_ps3_joystick_app" repo_host="https://kforge.ros.org/pr2apps/pr2_ps3joy_apphg">
  <description brief="pr2_ps3_joystick_app">
    Teleop PS3 joystick application for the pr2
  </description>
  <author>Tony Pratkanis</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/teleop</url>
  <depend package="pr2_teleop_general"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="filtered_odom" path="/trunk/cturtle/filtered_odom" repo="seabee3-ros-pkg" repo_host="http://seabee3-ros-pkg.googlecode.com/svn">
  <description brief="filtered_odom">

     filtered_odom

  </description>
  <author>Edward T. Kaszubski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/filtered_odom</url>
  <depend package="geometry_msgs"/>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="bfl"/>
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp -I${prefix}/srv/cpp" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lfiltered_odom"/>
  </export>

</package><package name="pyoj" path="" repo="amor-ros-pkg" repo_host="https://amor-ros-pkg.googlecode.com/hg/">
  <description brief="pyoj - use iPhone/iPod Touch as a joystick">

     <tt>pyoj</tt> is a ROS joystick node, that publishes data from the
     <a href="http://code.google.com/p/accelerometer-simulator/">accelerometer-simulator</a>.
     It is written in Python.

  </description>
  <author>Srećko Jurić-Kavelj</author>
  <license>GPLv3</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pyoj</url>
  <depend package="rospy"/>
  <depend package="joy"/>

</package><package name="rail_youbot_launch" path="/trunk/distribution/wpi-rail-ros-pkg/rail_youbot/rail_youbot_launch" repo="wpi-rail-ros-pkg" repo_host="http://wpi-rail.googlecode.com/svn">
	<description brief="Launch files useful for starting the Kuka YouBot">A set of launch files that are useful when launching the Kuka YouBot.</description>
	<author>Russell Toris</author>
	<license>BSD</license>
	<review notes="" status="unreviewed"/>
	<url>http://ros.org/wiki/rail_youbot_launch</url>

	<depend package="rail_youbot_description"/>
	<depend package="youbot_oodl"/>
	<depend package="robot_state_publisher"/>
	<depend package="xacro"/>
</package><package name="nxt_lejos_proxy" path="/trunk/ros/nxt_lejos/nxt_lejos_proxy" repo="lejos-ros-pkg" repo_host="https://lejos.svn.sourceforge.net/svnroot/lejos">
  <description brief="nxt_lejos_proxy">
      The nxt_lejos_proxy package communicates with a leJOS NXT robot running
      the ROS Responder. It works over USB or Bluetooth.  The proxy publishes
      sensor messages for all sensors in the &quot;nxt_robot&quot; configuration 
      parameters.  It also publishes tf transforms and odometry data. 
      It subscribes to the cmd_vel topic with a Twist message to allow the
      robot to be controlled by the ROS navigation stack. It also subscribes
      to other topics that allow the robot to be controlled with pilot 
      commands and allow tones to be played on the robot. It is much faster
      than nxt_lejos_lcp_proxy.
  </description>
  <author>leJOS development</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/nxt_lejos_proxy</url>

  <depend package="rosjava"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="nxt_msgs"/>
  <depend package="nxt_lejos_msgs"/>
  <depend package="tf"/>
</package><package name="dataFusion_communications" path="" repo="pandora-auth-ros-pkg" repo_host="https://github.com/pandora-auth-ros-pkg/pandora-auth-ros-pkg">
  <description brief="dataFusion_communications">

     The dataFusion_communications package contains messages used for data fusion.

  </description>
  <author>Stamadiadou Marina, Allamanis Miltiadis, Sykoudi Pelagia</author>
  <license>MIT</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/dataFusion_communications</url>
  <depend package="actionlib_msgs"/>

</package><package name="cwru_nav" path="" repo="cwru-ros-pkg" repo_host="http://github.com/cwru-robotics/cwru-ros-pkg">
  <description brief="cwru_nav">

     cwru_nav

  </description>
  <author>Eric Perko, Jesse Fish</author>
  <license>BSD, LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cwru_nav</url>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="cwru_base"/>
  <depend package="move_base"/>
  <depend package="amcl"/>
  <depend package="playsound_recovery"/>
  <depend package="tf"/>
  <depend package="tf_conversions"/>
  <depend package="sensor_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="filters"/>
  <depend package="pluginlib"/>
  
  <export>
    <cpp cflags="-I${prefix}/include"/>
    <filters plugin="${prefix}/cwru_laser_filters_plugins.xml"/>
  </export>
</package><package name="asctec_mon" path="" repo="asctec_drivers" repo_host="https://github.com/ccny-ros-pkg/asctec_drivers">
	<description brief="AscTec AutoPilot Console Monitor">
		AscTec AutoPilot Console Monitor
		This is a curses based groundstation.
  </description>
  <author>William Morris</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/asctec_mon</url>
  <depend package="std_msgs"/>
  <depend package="rospy"/>
  <depend package="asctec_msgs"/>
</package><package name="espeaktopic" path="/utils/espeaktopic" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
<description>Drive to a point in the map</description>
<author>Ulrich F Klank</author>
<license>Unknown</license>
<depend package="roscpp"/>
<depend package="std_msgs"/>
<depend package="vision_msgs"/>
<depend package="nav_pcontroller"/>
<depend package="cogman_msgs"/>

</package><package name="mjpeg_server" path="/trunk/stacks/mjpeg_server" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="mjpeg_server">A node that provides a mjpeg server which is able to subscribe to any ros image stream.</description>
  <author>Maintained by Benjamin Pitzer</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/mjpeg_server</url>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="roslib"/>
  <depend package="cv_bridge"/>
  <depend package="image_transport"/>
  <depend package="opencv2"/>
</package><package name="dummy_applications" path="" repo="ros_applications" repo_host="https://kforge.ros.org/rosapps/hg">
  <description brief="dummy_applications">

     dummy_applications

  </description>
  <author/>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/dummy_applications</url>
  <depend package="application_manager"/>
  <depend package="application_msgs"/>

</package><package name="lwpr_lib" path="" repo="usc-clmc-ros-pkg" repo_host="https://github.com/usc-clmc/usc-clmc-ros-pkg">
  <description brief="lwpr">

    This package contains Locally Weighted Projection Regression (LWPR) library,
    written by Stefan Klanke, Sethu Vijayakumar, and Stefan Schaal.
    This package does not modify LWPR in any way; it simply provides a convenient
		way to download and compile the headers and library in a way that can be
		managed by the ROS dependency system.

    Locally Weighted Projection Regression (LWPR) is a recent algorithm that
    achieves nonlinear function approximation in high dimensional spaces with
    redundant and irrelevant input dimensions. At its core, it uses locally linear
    models, spanned by a small number of univariate regressions in selected
    directions in input space. A locally weighted variant of Partial Least
    Squares (PLS) is employed for doing the dimensionality reduction.
    
    This nonparametric local learning system
    * learns rapidly with second order learning methods based on incremental training,
    * uses statistically sound stochastic cross validation to learn,
    * adjusts its weighting kernels based on local information only,
    *
    * has a computational complexity that is linear in the number of inputs, and
    * can deal with a large number of - possibly redundant - inputs,

    as shown in evaluations with up to 50 dimensional data sets. To our knowledge,
    this is the first truly incremental spatially localized learning method to combine
    all these properties.

    A good reference for the algorithm is the following paper:
    Sethu Vijayakumar, Aaron D'Souza and Stefan Schaal. Incremental Online Learning in High Dimensions.
    Neural Computation, vol. 17, no. 12, pp. 2602-2634 (2005).
    [http://homepages.inf.ed.ac.uk/svijayak/publications/vijayakumar-NeuCom2005.pdf]

    More information here http://www.ipab.inf.ed.ac.uk/slmc/software/lwpr/

  </description>
  <author>Stefan Klanke, Sethu Vijayakumar, and Stefan Schaal (sethu.vijayakumar@ed.ac.uk). ROS package maintained by Peter Pastor (pastor@willowgarage.com)</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.ipab.inf.ed.ac.uk/slmc/software/lwpr</url>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -llwpr"/>
  </export>

</package><package name="lightningros" path="/trunk" repo="lightningros" repo_host="http://svn.code.sf.net/p/lightningros/code">
  <description brief="repair">

     repair

  </description>
  <author>cameron</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/repair</url>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="arm_navigation_msgs"/>
  <depend package="trajectory_msgs"/>
  <depend package="planning_environment"/>
  <depend package="planning_models"/>
  <!--<depend package="ompl"/>-->
  <depend package="ompl_ros_interface"/>
  <depend package="gazebo_msgs"/>
  <depend package="pr2_mechanism_msgs"/>
  <depend package="kinematics_msgs"/>
</package><package name="cram_pr2_popcorn_executive" path="" repo="cram_pr2" repo_host="https://github.com/moesenle/cram_pr2">
  <description brief="cram_pr2_popcorn_executive">

     cram_pr2_popcorn_executive

  </description>
  <author>Lorenz Mösenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cram_pr2_popcorn_executive</url>
  <depend package="cram_language"/>
  <depend package="actionlib_lisp"/>
  <depend package="cram_roslisp_common"/>
  <depend package="cram_plan_knowledge"/>
  <depend package="cram_execution_trace"/>
  <depend package="pr2_navigation_process_module"/>
  <depend package="designators_ros"/>
  <depend package="ias_drawer_executive"/>
  <depend package="cram_plan_actionserver"/>

</package><package name="krypton_msgs" path="" repo="krypton_hardware" repo_host="http://git.mech.kuleuven.be/robotics/krypton_hardware.git">
  <description brief="krypton_msgs">

     Package providing Krypton interface messages as ROS messages

  </description>
  <author>Steven Bellens, steven.bellens@mech.kuleuven.be</author>
  <license>LGPLv2.1 / BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/krypton_msgs</url>

</package><package name="parsec_description" path="" repo="parsec" repo_host="https://code.google.com/p/parsec">
  <description brief="parsec_description">

     parsec_description

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>Apache 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/parsec_description</url>
  <depend package="urdf"/>

</package><package name="tf" path="" repo="geometry" repo_host="https://kforge.ros.org/geometry/geometry">
  <description brief="Transform Library">

tf is a package that lets the user keep track of multiple coordinate
frames over time. tf maintains the relationship between coordinate
frames in a tree structure buffered in time, and lets the user
transform points, vectors, etc between any two coordinate frames at
any desired point in time.

  </description>
  <author>Tully Foote, Eitan Marder-Eppstein, Wim Meeussen</author>
  <license>BSD</license>
  <review notes="http://www.ros.org/wiki/tf/Reviews/2009-10-07_Doc_Review" status="doc reviewed"/>
  <url>http://www.ros.org/wiki/tf</url>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/><!-- for point cloud should be removed-->
  <depend package="roscpp"/>
  <depend package="rosconsole"/>
  <depend package="bullet"/>
  <depend package="angles"/>
  <depend package="rospy"/>
  <depend package="rostest"/>
  <depend package="roswtf"/>
  <depend package="message_filters"/>
  <export>
    <cpp cflags="-I${prefix}/include `rosboost-cfg --cflags`" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -ltf `rosboost-cfg --lflags thread`"/>
    <roswtf plugin="tf.tfwtf"/>
    <rosdoc config="rosdoc.yaml"/>
  </export>
  <rosdep name="python-numpy"/>
  <rosdep name="graphviz"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="elektron_base" path="" repo="elektron_robot" repo_host="https://github.com/RCPRG-ros-pkg/elektron_robot">
  <description brief="elektron_base">
	A ROS node which provides access to the Elektron mobile robot.
  </description>
  <author>Konrad Banachowicz</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/elektron_base</url>
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="tf"/>


</package><package name="arm_navigation_tests" path="/stacks/pr2_arm_navigation_tests/trunk/arm_navigation_tests" repo="pr2_arm_navigation_tests" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="arm_navigation_tests">

    Tests for the move arm stack.

  </description>
  <author>Sachin Chitta</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/move_arm_tests</url>


  <!-- arm navigation -->
  <depend package="move_arm"/>
  
  <!-- simulation -->
  <depend package="pr2_description"/>
  <depend package="pr2_gazebo"/>


  <!-- ROSWTF mandated-->
  <depend package="move_arm"/>
  <depend package="pr2_description"/>
  <depend package="single_joint_position_action"/>
  <depend package="diagnostic_aggregator"/>
  <depend package="pr2_controller_manager"/>
  <depend package="planning_environment"/>
  <depend package="joint_trajectory_action"/>
  <depend package="pr2_arm_kinematics"/>
  <depend package="pr2_arm_kinematics_constraint_aware"/>
  <depend package="gazebo_tools"/>
  <depend package="rostopic"/>
  <depend package="pr2_gripper_action"/>
  <depend package="pr2_head_action"/>
  <depend package="gazebo"/>

  <depend package="robot_state_publisher"/>
  <depend package="pr2_arm_navigation_perception"/>
  <depend package="pr2_arm_navigation_filtering"/>
  <depend package="pr2_arm_navigation_planning"/>
  <depend package="collision_map"/>
  <depend package="image_proc"/>
  <depend package="pr2_arm_navigation_actions"/>

  <depend package="pr2_arm_navigation_kinematics"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>

 <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>

</package><package name="feature_extractor" path="/trunk/OIT_experimental/feature_extractor" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="feature_extractor">

     feature_extractor

  </description>
  <author>David Feil-Seifer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/feature_extractor</url>
  <depend package="point_map"/>
	<depend package="geometry_msgs"/>
  <depend package="tf"/>

</package><package name="test_matlab_full_ros" path="/trunk/sandbox/matlab/test_matlab_full_ros" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="test_matlab_full_ros">

     This is an example of how to create a bridge between matlab and ROS (necessary due to incompatibilities between log4cxx/rosconsole and matlab).

     Connects to SharedMemoryStorage using a SharedMemoryPublisher; connects to a ROS topic (geometry_msgs::Vector3); publishes the value of the
     Vector3 to SharedMemoryStorage and quits. This node is called by the test_matlab example.

  </description>
  <author>Edward T. Kaszubski ( ekaszubski@gmail.com )</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/test_matlab_full_ros</url>
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  <depend package="test_matlab"/>
</package><package name="triangle_mesh_rviz_plugin" path="/stacks/ias_visualization/triangle_mesh_rviz_plugin" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="triangle_mesh_rviz_plugin">
     RVIZ plugin to support Triangle Meshes
  </description>
  <author name="Nico Blodow"/>
  <license>BSD</license>

  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="triangle_mesh_msgs"/>
  <depend package="rviz"/>
  <depend package="roscpp"/>
  <depend package="tf"/>

  <export>
    <cpp cflags="-I${prefix}/msg/cpp"/>
    <rviz plugin="${prefix}/lib/rviz_plugin.yaml"/>
  </export>
</package><package name="cob_script_server_tutorial" path="" repo="cob_tutorials" repo_host="git://github.com/ipa320/cob_tutorials">
  <description brief="cob_script_server_tutorial">

     cob_script_server_tutorial

  </description>
  <author>Nadia Hammoudeh</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_script_server_tutorial</url>

  <depend package="kinematics_msgs"/>
  <depend package="cob_script_server"/>
  <depend package="cob_bringup_sim"/>
  <depend package="cob_navigation_global"/>
  <depend package="cob_default_env_config"/>
  <depend package="cob_default_robot_config"/>
  <depend package="cob_manipulator"/>

</package><package name="mpc" path="/trunk/reactive_grasping/mpc" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="mpc">

     mpc

  </description>
  <author>Jost Tobias Springenberg</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/mpc</url>

  <export>
     <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib        -L${prefix}/lib"/>
  </export>


  <depend package="roscpp"/>

</package><package name="diagnostic_aggregator" path="/stacks/diagnostics/trunk/diagnostic_aggregator" repo="diagnostics" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Aggregates, collects and analyzes robot diagnostics">
    <p><b>diagnostic_aggregator</b> contains the tools to aggregate and analyze robot diagnostics on an active robot. It uses the <b>Aggregator</b> class as to aggregate and process data. The aggregator tool loads diagnostic Analyzers as plug-ins. These analyzers can perform basic diagnostics analysis, such as testing when things are stale, or having known errors. Analyzers are subclasses of <b>Analyzer</b>. <b>AnalyzerGroup</b> and <b>GenericAnalyzer</b> are two of these subclasses.</p>

      <p>The Aggregator should be run on a robot, and is typically launched in the robot's launch file. Viewing of this aggregated diagnostics is done with the Robot Monitor, in the <b>robot_monitor</b> package. </p>
    </description>
  <author>Kevin Watts</author>
  <license>BSD</license>
  <review notes="" status="Doc reviewed"/>
  <url>http://www.ros.org/wiki/diagnostic_aggregator</url>
  <depend package="diagnostic_msgs"/>
  <depend package="roscpp"/>
  <depend package="xmlrpcpp"/> 
  <depend package="pluginlib"/>
  <depend package="rospy"/> <!-- For testing -->
  <export>
    <cpp cflags="-I${prefix}/include `rosboost-cfg --cflags`" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -ldiagnostic_aggregator `rosboost-cfg --lflags regex`"/>
    <diagnostic_aggregator plugin="${prefix}/analyzer_plugins.xml"/>
  </export>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="summit_joystick_teleop" path="/trunk/trunk/summit_sim/summit_joystick_teleop" repo="summit-ros-pkg" repo_host="http://summit-ros-stack.googlecode.com/svn">
  <description brief="summit_joystick_teleop">

     summit_joystick_teleop

  </description>
  <author>Robert</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/summit_joystick_teleop</url>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>

</package><package name="rtt_ros_integration_geometry_msgs" path="" repo="orocos_toolchain_ros" repo_host="http://git.mech.kuleuven.be/robotics/orocos_toolchain_ros.git">
  <description brief="rtt_ros_integration_geometry_msgs">
    
    Provides all rtt typekits for ROS geometry_msgs
    
  </description>
  <author>Ruben Smits ruben.smits@mech.kuleuven.be</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rtt_ros_integration_geometry_msgs</url>
  <depend package="rtt_ros_integration"/>
  <depend package="rtt_ros_integration_std_msgs"/>
  <depend package="geometry_msgs"/>
  
  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>


</package><package name="fast_match_template" path="/perception/fast_match_template" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="fast_match_template">
     fast_match_template matches target templates in source images using speed-optimized cvMatchTemplate.
  </description>
  <author>Tristen Georgiou, Dejan Pangercic (for ROS and modifications)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://opencv.willowgarage.com/wiki/FastMatchTemplate</url>
  <depend package="opencv2"/>
  <depend package="roscpp"/>

</package><package name="laser_scan_splitter" path="" repo="scan_tools" repo_host="https://github.com/ccny-ros-pkg/scan_tools">
  <description brief="laser_scan_splitter">

  The laser_scan_splitter takes in a LaserScan message and splits it into a number of other LaserScan messages. Each of the resulting laser scans can be assigned an arbitrary coordinate frame, and is published on a separate topic.

  </description>
  <author>Ivan Dryanovski, William Morris</author>
  <license url="http://www.opensource.org/licenses/BSD-3-Clause">BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/laser_scan_splitter</url>
  <depend package="roscpp"/>
  <depend package="nodelet"/>
  <depend package="sensor_msgs"/>
  <depend package="tf"/>

  <export>
    <nodelet plugin="${prefix}/laser_scan_splitter_nodelet.xml"/>
  </export>

</package><package name="spacepoint" path="/trunk/spacepoint" repo="stanford-ros-pkg" repo_host="https://stanford-ros-pkg.googlecode.com/svn">
  <description brief="PNI spacepoint driver">
    A simple driver for the PNI spacepoint. The starting point for this driver was Nirav Patel's spacepoint python module, which can be found here:

    http://eclecti.cc/hardware/easy-absolute-orientation-pni-spacepoint-fusion-in-python

  </description>
  <author>Morgan Quigley mquigley@cs.stanford.edu, wrapping code by Nirav Patel</author>
  <license>BSD</license>
  <url>http://ai.stanford.edu/~mquigley</url>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="tf"/>
  <depend package="geometry_msgs"/>
  <rosdep name="libudev"/>
</package><package name="ptu_musician" path="/branches/stable/music/ptu_musician" repo="wu-ros-pkg" repo_host="https://wu-robotics.googlecode.com/svn">
  <description brief="PTU Musician">
    Node that moves the PTU46 node at certain speeds in order to produce a musical tune. 
  </description>
  <author>David V. Lu!!</author>
  <license>BSD</license>
  <url>http://ros.org/wiki/ptu_musician</url>
  <depend package="sensor_msgs"/>
  <depend package="music_msgs"/>
  <depend package="rospy"/>


  <depend package="ptu_control"/>
  <depend package="actionlib"/>
</package><package name="gearbox" path="/trunk/arrg/ua_drivers/gearbox" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="Collection of robotics-related libraries">
         Gearbox provides a collection of usable peer-reviewed
         robotics-related libraries. Gearbox is not an integration
         framework. Rather, it provides a set of implementations,
         without insisting on a standard API, for use by any number
         of existing frameworks. 
    </description>

    <author>Project maintainers Geoffrey Biggs,Alex Makarenko.</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/gearbox</url>

    <export>
      <cpp cflags="-I${prefix}/gearbox/include" lflags="-L${prefix}/gearbox/lib64/gearbox -Wl,-rpath,${prefix}/gearbox/lib64/gearbox -lflexiport -L${prefix}/gearbox/lib -Wl,-rpath,${prefix}/gearbox/lib"/>
    </export>
</package><package name="joystick_commands" path="" repo="flyatar" repo_host="http://github.com/peterpolidoro/Flyatar">
  <description brief="stage_teleop">

     stage_teleop is... 

  </description>
  <author>Peter Polidoro</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url/>
  <depend package="rospy"/>
  <depend package="joystick_ps3"/>
</package><package name="quickdev_scripts" path="/trunk/quickdev/quickdev_scripts" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="quickdev_scripts">

     quickdev_scripts

  </description>
  <author>Edward T. Kaszubski ( ekaszubski@gmail.com )</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/quickdev_scripts</url>
</package><package name="eros_apr_util" path="/trunk/packages/rosdeps/core/eros_apr_util" repo="eros" repo_host="https://code.ros.org/svn/eros">
  <description brief="Build recipe for cross-compiling the apache runtime utilities">

	This provides a source package for compiling the apache runtime utilities.
	Ordinarily this is not useful as you would install via your system's
	installation method (e.g. apt-get for ubuntu), but for cross-compiling 
    it provides the recipe needed to make a toolchain ros-ready.

  </description>
  <author>Daniel Stonier (d.stonier@gmail.com)</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/eros_apr_util</url>
  <depend package="eros_license"/>
  <depend package="eros_apr"/>
  <depend package="eros_build"/>

</package><package name="columbot" path="/trunk/columbot" repo="cu-ros-pkg" repo_host="http://cu-ros-pkg.googlecode.com/svn">
  <description brief="columbot">
    Columbot package is the main controller package in order to test or use Staubli package.
  </description>
  <author>Soonhac Hong</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://code.google.com/p/cu-ros-pkg/</url>
  <depend package="std_msgs"/>
  <depend package="roscpp"/>
  <depend package="staubli"/>
</package><package name="maxwell_navigation" path="/trunk/maxwell/maxwell_navigation" repo="vanadium-ros-pkg" repo_host="http://vanadium-ros-pkg.googlecode.com/svn">
  <description brief="Navigation configuration for Maxwell mobile manipulator"/>
  <author>Michael Ferguson</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/maxwell_navigation</url>
  <depend package="hokuyo_node"/>
  <depend package="move_base"/>
  <depend package="tf"/>
  <depend package="pocketsphinx"/>
</package><package name="autopnp_dirt_detection" path="" repo="autopnp" repo_host="git://github.com/ipa320/autopnp">
  <description brief="autopnp_dirt_detection">

     This component is part of the cleaning scenario of the AutoPnP project. It provides an algorithm for dirt detection at the floor and the mapping of dirty areas.

  </description>
  <author>Richard Bormann</author>
  <license>LGPL, Fraunhofer IPA</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/autopnp_dirt_detection</url>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="std_msgs"/> 
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="image_transport"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="nav_msgs"/>
 <!-- <depend package="cv_bridge_redesign"/> -->
</package><package name="helloworld" path="/trunk/ros/examples/helloworld" repo="lejos" repo_host="https://lejos.svn.sourceforge.net/svnroot/lejos">
	<description brief="roslejos">
     roslejos
	</description>
	<author>Juan Antonio Brenha Moral</author>
	<license>BSD</license>
	<review notes="" status="unreviewed"/>
	<url>http://ros.org/wiki/roslejos</url>

	<depend package="rosjava"/>
	<depend package="std_msgs"/>

	<export>
    	<rosjava-src location="src"/> 
    	<rosjava-pathelement artifactId="org.lejos.ros.helloworld" built="true" groupId="org.lejos.ros" location="target/" version="0.0.1"/>
    	<rosjava-pathelement location="/usr/local/lejos/lib/pc/pccomm.jar"/>
	</export>

</package><package name="treadmill_control" path="/trunk/veltrop-ros-pkg/virtual_reality/treadmill_control" repo="veltrop-ros-pkg" repo_host="https://veltrop-ros-pkg.svn.sourceforge.net/svnroot/veltrop-ros-pkg">
  <description brief="treadmill_control">

     treadmill_control

  </description>
  <author/>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/treadmill_control</url>

  <depend package="roscpp"/>
  <depend package="joy"/>
  <depend package="wiimote"/>
  <depend package="tf"/>
  <depend package="geometry_msgs"/>
</package><package name="infinity_pedals" path="/stacks/pr2_cockpit/trunk/infinity_pedals" repo="pr2_cockpit" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="infinity_pedals">

     infinity_pedals

  </description>
  <author>Stuart Glaser</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/infinity_pedals</url>
  <depend package="rospy"/>
  <depend package="joy"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="cl_semantic_map_utils" path="" repo="cram_highlevel" repo_host="https://github.com/moesenle/cram_highlevel">
  <description brief="cl_semantic_map_utils">

     cl_semantic_map_utils

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cl_semantic_map_utils</url>
  <depend package="ias_semantic_map"/>
  <depend package="cl_json_pl_client"/>
  <depend package="cram_roslisp_common"/>
  <depend package="cl_transforms"/>
  <depend package="cram_designators"/>

</package><package name="zbar_barcode_reader_node" path="" repo="ias_perception" repo_host="http://code.in.tum.de/git/ias-perception.git">
  <description brief="zbar_barcode_reader_node">

     zbar_barcode_reader_node

  </description>
  <author>Dejan Pangercic</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/zbar_barcode_reader_node</url>
  <depend package="zbar"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="image_transport"/>
  <depend package="sensor_msgs"/>
  <depend package="comp_barcoo"/>
  <rosdep name="libcurl"/>
  <rosdep name="libtinyxml"/>
  <rosdep name="libboost-all-dev"/>   
  
</package><package name="stoc_driver" path="/graveyard/composite/stoc_driver" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description>A library for accessing a camera through the Small Vision System library</description>
  <author>Radu Bogdan Rusu (rusu@cs.tum.edu)</author>
  <license>BSD</license>
  <depend package="roscpp"/>
  <depend package="deprecated_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="opencv2"/> 
  <depend package="cv_bridge"/>
  <export>
    <cpp cflags="-I${prefix}/src" lflags="-L${prefix}/lib -lstoc"/>
  </export>
  <url/>
</package><package name="cl_json_pl_client" path="" repo="cram_highlevel" repo_host="https://github.com/moesenle/cram_highlevel">
  <description brief="cl_json_pl_client">

     cl_json_pl_client

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cl_json_pl_client</url>
  <depend package="roslisp_runtime"/>
  <depend package="json_prolog"/>
  <depend package="yason"/>
  <depend package="cram_utilities"/>
  <depend package="cram_reasoning"/>
  <depend package="alexandria"/>

</package><package name="push_button_action" path="/trunk/pr2_elevator/push_button_action" repo="ubc-ros-pkg" repo_host="https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg">
  <description brief="push_button_action">

     push_button_action

  </description>
  <author>Ankur Guptax210778 829 7001</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/push_button_action</url>
  <depend package="actionlib_msgs"/>
  <depend package="roscpp"/>
  <depend package="actionlib"/>
  <depend package="trajectory_msgs"/>
  
  <depend package="move_arm_msgs"/>
  <depend package="planning_environment"/>
  <depend package="motion_planning_msgs"/>

  <depend package="pr2_common_action_msgs"/>
  <depend package="pr2_controllers_msgs"/>
</package><package name="UI_segment_object" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="UI_segment_object">

     This nodes provides a simple user interface to designate a surface or point from a 2D image for which we want 3D data from the Kinect.  The main functionality is available via service calls.

  </description>
  <author>Marc Killpack / mkillpack3@gatech.edu,  Advisor: Prof. Charlie Kemp, Lab: Healthcare Robotics Lab at Georgia Tech</author>
  <license>new BSD</license>
  <review notes="" status="unreviewed"/>

  <depend package="cv_bridge"/>
  <depend package="opencv2"/>
  <depend package="image_transport"/>
  <depend package="sensor_msgs"/>
  <depend package="openni"/>
  <depend package="roslib"/>
  <depend package="roscpp"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="geometry_msgs"/>

</package><package name="srs_assisted_arm_navigation_ui" path="" repo="srs_public" repo_host="git://github.com/ipa320/srs_public">
  <description brief="srs_assisted_arm_navigation_ui">

     srs_assisted_arm_navigation_ui

  </description>
  <author>Zdenek Materna</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/srs_assisted_arm_navigation_ui</url>
  <depend package="srs_assisted_arm_navigation_msgs"/>
  <depend package="srs_assisted_arm_navigation"/>
  <depend package="ogre"/>
  <depend package="rviz"/>
  <depend package="actionlib"/>
  <depend package="roscpp"/>
  <depend package="ogre_tools"/>
  <depend package="cob_script_server"/>
  <depend package="sensor_msgs"/>
  <depend package="image_transport"/>
  
  <export>
    <rviz plugin="${prefix}/lib/but_arm_navigation.yaml"/>
    <rosdoc config="rosdoc.yaml"/>
  </export>

</package><package name="re2darmSimExampleController" path="/darpa_arm_sim_servers/re2darmSimExampleController" repo="darpa_arm_sim_servers" repo_host="http://svn.thearmrobot.com">
  <description brief="Example for DARPA ARM Track C">Sample joint control for DARPA ARM Track C.</description>
  <author>Andrew B. Mor</author>
  <license>GLPv3</license>
  <depend package="pr2_gazebo_plugins"/>
  <depend package="gazebo_plugins"/>
  <depend package="gazebo_tools"/>

  <depend package="std_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="pr2_mechanism_model"/>
  <depend package="pr2_mechanism_diagnostics"/>
  <depend package="pr2_controller_interface"/>
  <depend package="pr2_mechanism_msgs"/>
  <depend package="roscpp"/>
  <depend package="SimGazeboControllers"/>

  <platform os="ubuntu" version="10.04"/>
</package><package name="k-sap_pkg" path="/stacks/auction_methods_stack/trunk/k-sap_pkg" repo="auction_methods_stack" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="sap_pkg">

     sap_pkg

  </description>
  <author>Joao Manuel Leitao Quintas</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sap_pkg</url>

  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="auction_msgs"/>
  <depend package="auction_srvs"/>

</package><package name="hector_gazebo_plugins" path="/branches/fuerte/hector_gazebo/hector_gazebo_plugins" repo="hector_gazebo" repo_host="https://tu-darmstadt-ros-pkg.googlecode.com/svn">
  <description brief="hector_gazebo_plugins">

     hector_gazebo_plugins provides gazebo plugins from Team Hector.
     Currently it contains a 6wd differential drive plugin, an IMU sensor plugin,
     an earth magnetic field sensor plugin, a GPS sensor plugin and a
     sonar ranger plugin.

  </description>
  <author>Stefan Kohlbrecher and Johannes Meyer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hector_gazebo_plugins</url>

  <depend package="roscpp"/>
  <depend package="gazebo"/>

  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib"/>
    <gazebo plugin_path="${prefix}/lib"/>
  </export>

</package><package name="mantis_arm_navigation" path="/trunk/mantis/mantis_arm_navigation" repo="swri-ros-pkg" repo_host="http://swri-ros-pkg.googlecode.com/svn">
  <description brief="mantis_arm_navigation">

     mantis_arm_navigation

  </description>
  <author>Jnicho</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/mantis_arm_navigation</url>
  <depend package="urdf"/>
  <depend package="tf"/>
  <depend package="sensor_msgs"/>
  <depend package="pcl_ros"/>

</package><package name="hector_turtlebot_gazebo" path="/trunk/hector_turtlebot/hector_turtlebot_gazebo" repo="hector_turtlebot" repo_host="https://tu-darmstadt-ros-pkg.googlecode.com/svn">
  <description brief="hector_turtlebot_gazebo provides launch files and dependencies for using the hector_turtlebot in gazebo">

     hector_turtlebot_gazebo provides launch files and dependencies for using the hector_turtlebot in gazebo

  </description>
  <author>Stefan Kohlbrecher</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hector_turtlebot_gazebo</url>
  <depend package="hector_turtlebot_description"/>
  <depend package="hector_turtlebot_scan_filter"/>
  <depend package="turtlebot_gazebo"/>
  <depend package="turtlebot_gazebo_plugins"/>
  <depend package="pointcloud_to_laserscan"/>

</package><package name="webots_run" path="/trunk/kaist_webots/webots_run" repo="kaist_webots" repo_host="https://kaist-ros-pkg.googlecode.com/svn">
  <description brief="Start Webots from ROS">
Starts the <a href="http://www.cyberbotics.com">Webots</a> Simulator using a system() call, so Webots can be run directly from a roslaunch file.
The Webots world file is specified as an argument in the launch file.

Tested with Webots 6.4.4 and ROS Fuerte.
  </description>
  <author>David Butterworth</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/webots_run</url>
  <depend package="std_msgs"/>
  <depend package="roscpp"/>

</package><package name="rqt_image_view" path="" repo="rqt" repo_host="https://kforge.ros.org/visualization/rqt">
  <description brief="Plugin for displaying images">
    rqt_image_view provides a GUI plugin for displaying images using image_transport.
  </description>
  <author>Dirk Thomas</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rqt_image_view</url>

  <depend package="rqt_gui"/>
  <depend package="rqt_gui_cpp"/>
  <depend package="image_transport"/>
  <depend package="sensor_msgs"/>
  <depend package="cv_bridge"/>

  <export>
    <rqt_gui plugin="${prefix}/plugin.xml"/>
  </export>
</package><package name="guardian_pad_sim" path="/trunk/guardian_pad_sim" repo="guardian-ros-pkg" repo_host="http://guardian-ros-pkg.googlecode.com/svn">
  <description brief="guardian_pad_sim">

     guardian_pad_sim

  </description>
  <author>Robotnik Automation SLL</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/guardian_pad</url>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>

  <depend package="diagnostic_updater"/>
  <depend package="std_msgs"/>
  
   <export>
    <cpp cflags="-I${prefix}/include  -I${prefix}/srv_gen/cpp/include -I${prefix}/msg_gen/cpp/include"/>
  </export>


</package><package name="rqt_console" path="" repo="rqt" repo_host="https://kforge.ros.org/visualization/rqt">
  <description brief="rqt_console">
    rqt_console provides a GUI plugin for displaying and filtering ROS messages.
  </description>
  <author>Aaron Blasdel</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rqt_console</url>
  <depend package="rospy"/>
  <depend package="rqt_gui"/>
  <depend package="rqt_gui_py"/>
  <depend package="roslib"/>
  <export>
		<rqt_gui plugin="${prefix}/plugin.xml"/>
	</export>
</package><package name="rosshell" path="/trunk/rosshell" repo="ivs-ros-pkg" repo_host="http://svn.code.sf.net/p/ivs-ros-pkg/code">
  <description brief="rosshell">

     rosshell 

  </description>
  <author>André Dietrich</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosshell</url>
  <depend package="rospy"/>
  <depend package="std_msgs"/>

</package><package name="sicktoolbox" path="/stacks/laser_drivers/trunk/sicktoolbox" repo="laser_drivers" repo_host="https://code.ros.org/svn/ros-pkg">
<description brief="SICK Toolbox drivers for SICK laser rangefinders">

  This package contains the SICK LIDAR Matlab/C++ Toolbox, available from <a href="http://sicktoolbox.sourceforge.net/">http://sicktoolbox.sourceforge.net/</a>.
  The SICK LIDAR Matlab/C++ Toolbox offers stable and easy-to-use C++ drivers for SICK LMS 2xx and SICK LD LIDARs. It provides a Matlab Mex interface for streaming LIDAR returns directly into Matlab. Also included are config utilities, examples, and tutorials. This package contains version 1.0 of the toolbox.

</description>
<author>Maintained by Jason Derenick of the GRASP Laboratory at the University of Pennsylvania</author>
<license>BSD</license>
<review notes="" status="3rdparty doc reviewed"/>
<url>http://sicktoolbox.sourceforge.net</url>
<export>
  <cpp cflags="-I${prefix}/sicktoolbox/include" lflags="-Wl,-rpath,${prefix}/sicktoolbox/lib -L${prefix}/sicktoolbox/lib -lsicklms-1.0 -lpthread"/>
   <doxymaker external="http://sicktoolbox.sourceforge.net"/>
</export>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="sbcl" path="/stacks/roslisp_support/trunk/sbcl" repo="roslisp_support" repo_host="https://code.ros.org/svn/ros">
  <description brief="sbcl">
    
    Steel Bank Common Lisp
    http://www.sbcl.org

  </description>
  <author>Lorenz Mosenlechner</author>
  <license>Many</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sbcl</url>

  <!-- The dependency to sbcl is necessary since sbcl needs a lisp to bootstrap -->
  <rosdep name="sbcl"/>
  <rosdep name="coreutils"/> <!-- needed for the makefile, which needs md5sum -->

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="pipette_driver" path="" repo="viaflo_pipette" repo_host="https://kforge.ros.org/viaflopipette/hg">
  <description brief="pipette_driver">

     pipette_driver

  </description>
  <author>Kevin Watts</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pipette_driver</url>
  <depend package="rospy"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="driver_base"/>
  <depend package="diagnostic_msgs"/>

</package><package name="neo_base_mpo_500" path="" repo="neo_driver" repo_host="https://github.com/neobotix/neo_driver">
  <description brief="neo_base_mpo_500">

     neo_base_mpo_500

  </description>
  <author>mob</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/neo_base_mpo_500</url>

</package><package name="tabletop_collision_map_processing" path="/stacks/tabletop_object_perception/branches/0.4-branch/tabletop_collision_map_processing" repo="tabletop_object_perception" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="tabletop_collision_map_processing">

    Populates and manages a collision environment using the results of
    sensor processing from the tabletop_object_detector. Functionality
    includes adding and removing detected objects from the collision
    environment, and requesting static collision maps for obstacle
    avoidance.

  </description>
  <author>Matei Ciocarlie</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/tabletop_collision_map_processing</url>

  <depend package="collision_environment_msgs"/>
  <depend package="mapping_msgs"/>
  <depend package="std_srvs"/>
  <depend package="pr2_msgs"/>
  <depend package="geometric_shapes_msgs"/>

  <depend package="tf"/>
  <depend package="actionlib"/>
  <depend package="household_objects_database_msgs"/>
  <depend package="object_manipulation_msgs"/>
  <depend package="tabletop_object_detector"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -ltabletop_collision_map_processing"/>
  </export>
</package><package name="evart_bridge" path="" repo="stacks/motion_analysis_mocap" repo_host="git://github.com/laas/motion_analysis_mocap">
  <description brief="EVaRT node">

    EVa Real-Time Software(tm) - EVaRT(tm) - provides a user with a
    simple and powerful interface to the Motion Analysis(tm) motion
    capture hardware.

    This package forwards data computed by the EvaRT software as a ROS
    topic.

  </description>
  <author>Thomas Moulard/thomas.moulard@gmail.com</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/evart_bridge</url>

  <versioncontrol type="git" url="git://github.com/laas/evart_bridge.git"/>

  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>

  <depend package="std_msgs"/>
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  <depend package="bullet"/>
  <depend package="tf"/>
  <depend package="evart-client"/>
  <rosdep name="boost"/>

  <platform os="ubuntu" version="10.04"/>
  <platform os="ubuntu" version="10.10"/>
  <platform os="ubuntu" version="11.04"/>
</package><package name="rosruby" path="" repo="rosruby" repo_host="https://github.com/OTL/rosruby">
  <description brief="A Ruby client library for ROS">
    This package is a Ruby client library for ROS, the Robot Operating System.
  </description>
  <author>Takashi Ogura</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosruby</url>
  <depend package="roslang"/>
  <depend package="rosgraph_msgs"/>
  <depend package="std_msgs"/>
  <depend package="roscpp_tutorials"/>
  <export>
    <roslang cmake="${prefix}/cmake/rosruby.cmake"/>
  </export>
  <rosdep name="ruby"/>
  <rosdep name="rake"/>

</package><package name="interactivespaces-service-mail-sender" path="" repo="interactive-spaces" repo_host="https://code.google.com/p/interactive-spaces">
	<description brief="interactivespaces.service.mail.common">
		Email sending service for Interactive Spaces.
	</description>
	<author>Keith Hughes/khughes@google.com</author>
	<license>Apache License 2.0</license>
	
	<review notes="" status="unreviewed"/>
	<url>http://code.google.com/p/interactive-spaces/</url>
	
	<depend package="interactivespaces-core"/>

	<rosdep name="java"/>
</package><package name="cpl_visual_features" path="" repo="gt-ros-pkg.cpl" repo_host="https://code.google.com/p/gt-ros-pkg.cpl">
  <description brief="cpl_visual_features">

     cpl_visual_features

  </description>
  <author>Tucker Hermans</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cpl_visual_features</url>
  <depend package="cv_bridge"/>
  <depend package="sensor_msgs"/>
  <depend package="message_filters"/>
  <depend package="roscpp"/>
  <depend package="roslib"/>
  <rosdep name="opencv2"/>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lcpl_visual_features_base -lcpl_visual_features_saliency -lcpl_visual_features_motion -lcpl_lap_cpp"/>
  </export>

</package><package name="knowrob_cad_models" path="/tags/latest/knowrob_cad_models" repo="knowrob" repo_host="http://code.in.tum.de/pubsvn/knowrob">
  <description brief="knowrob_cad_models">

    a package which contains CAD Models (3D Models) used in mod_vis package.

  </description>
  <author>Stefan Profanter</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/knowrob_cad_models</url>

  <depend package="knowrob_common"/>
  <depend package="jpl"/>
  <depend package="rosjava_jni"/>

</package><package name="eigen_conversions" path="" repo="geometry" repo_host="https://kforge.ros.org/geometry/geometry">
  <description brief="eigen_conversions">

     Conversion functions between Eigen and other geometry types.

  </description>
  <author>Stuart Glaser</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/eigen_conversions</url>
  <depend package="eigen"/>
  <depend package="geometry_msgs"/>
  <depend package="kdl"/>
  <depend package="tf"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -leigen_conversions"/>
  </export>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="pr2_dremel_arm_controller" path="/trunk/stacks/pr2_dremel/pr2_dremel_arm_controller" repo="bosch-ros-pkg-e" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg-e/code">
  <description brief="pr2_dremel_arm_controller">

     pr2_dremel_arm_controller

  </description>
  <author>Christian Bersch (maintained by Benjamin Pitzer)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_dremel_arm_controller</url>

  <depend package="rospy"/>
  <depend package="roscpp"/>
 
  <depend package="actionlib"/>
  <depend package="kinematics_msgs"/>
  <depend package="arm_navigation_msgs"/>
  <depend package="move_arm"/>
  <depend package="pr2_arm_navigation_kinematics"/>
  <depend package="pr2_arm_kinematics_constraint_aware"/>
  <depend package="trajectory_filter_server"/>

  <depend package="geometry_msgs"/>
  <depend package="image_geometry"/>
  <depend package="pcl"/>

  <depend package="pluginlib"/>
  <depend package="pr2_controller_manager"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="pr2_controller_interface"/>
  <depend package="control_toolbox"/>
  <depend package="realtime_tools"/>
  <depend package="message_filters"/>
  
  <depend package="robot_mechanism_controllers"/>

  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp -I${prefix}/srv/cpp" lflags="-Wl,-rpath,${prefix}/lib/ -L${prefix}/lib -lpr2dremel_force_controller"/>
    <pr2_controller_interface plugin="${prefix}/controller_plugins.xml"/>
  </export>


</package><package name="hardcoded_facts" path="/trunk/tidyup_robot/hardcoded_facts" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="hardcoded_facts">
     A simple package to read hardcoded_facts as geometry poses from a file.
  </description>
  <author>Christian Dornhege</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hardcoded_facts</url>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="rosmsg"/>
  <depend package="geometry_msgs"/>
  <depend package="tf"/>

  <rosdep name="qt4"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lhardcoded_facts"/>
  </export>

</package><package name="create_kinect" path="/trunk/create_kinect" repo="ucsb-ros-pkg" repo_host="https://ucsb-ros-pkg.googlecode.com/svn">
  <description brief="create_kinect">

This first test implements a simple bump bot where the Create drives forward while avoiding obstacles

  </description>
  <author>Paul Filitchkin and Brian Satzinger</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>https://code.google.com/p/ucsb-ros-pkg/wiki/create_kinect</url>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="roscpp"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="visualization_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="create_node"/>
  <depend package="tf"/>
  <depend package="joy"/>
  
  <rosdep name="wxwidgets"/>

</package><package name="phidgets_imu" path="" repo="phidgets_drivers" repo_host="https://github.com/ccny-ros-pkg/phidgets_drivers">
  <description brief="Driver for the Phidgets Spatial 3/3/3 device">

     Driver for the Phidgets Spatial 3/3/3 device.

  </description>
  <author>Ivan Dryanovski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/phidgets_imu</url>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="std_srvs"/>
  <depend package="std_msgs"/>
  <depend package="phidgets_api"/>
  <depend package="nodelet"/>

  <export>
    <nodelet plugin="${prefix}/phidgets_imu_nodelet.xml"/>
  </export>

</package><package name="proximity_sensor_driver" path="/trunk/stacks/bosch_proximity_sensor/proximity_sensor_driver" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="proximity_sensor_driver">

     Driver for interfacing with Bosch proximity sensors through a Sub20 device.

  </description>
  <author>Philip Roan, Joerg Wagner (Maintained by Philip Roan)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/proximity_sensor_driver</url>
  <depend package="roslib"/>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="dynamic_reconfigure"/>

  <depend package="sub20"/>
</package><package name="gazebo_interface" path="" repo="nasa_r2_simulator" repo_host="https://bitbucket.org/nasa_ros_pkg/nasa_r2_simulator">
  <description brief="gazebo_interface">

     gazebo_interface

  </description>
  <author>rctaylo2</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/gazebo_interface</url>

  <depend package="sensor_msgs"/>
  <depend package="r2_msgs"/>
  <depend package="gazebo"/>
  <export>
    <gazebo plugin_path="${prefix}/lib"/>
  </export> 

</package><package name="rtcus_assert" path="/trunk/rtcus_tools/rtcus_assert" repo="rtc-us-ros-pkg-trunk" repo_host="https://rtc-us-ros-pkg.svn.sourceforge.net/svnroot/rtc-us-ros-pkg">
	<description brief="rtcus_assert">

The rtcus_assert package provides a cpp library that allows make assertions (RTCUS_ASSERT and RTCUS_ASSERT_MSG) allowing easy string formating, printing the assertion fail through the rosout system and printing the current stack trace for debuging proposes. Also prints the stack trace on segmentation faults signals.

		If stack trace is not shown in the console do this: Make sure that the operative system permissions to do this is
		activated. In Ubuntu you can set on the permissions temporally using
		the command:
		echo 0 | sudo tee /proc/sys/kernel/yama/ptrace_scope

	</description>
	<author>Pablo Iñigo Blasco</author>
	<license>BSD</license>
	<review notes="" status="unreviewed"/>
	<url>http://ros.org/wiki/rtcus_assert</url>
	<depend package="roscpp"/>

	<export>
		<cpp cflags="-I${prefix}/include -I${prefix}/cfg/cpp -I${prefix}/msg_gen/cpp/include" lflags="-L${prefix}/lib -lrtcus_assert"/>
	</export>


</package><package name="opencyc" path="/knowledge/3rdparty/opencyc" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="opencyc">

    Wrapper to install and launch the OpenCyc ontology

  </description>
  <author>Moritz Tenorth</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ias.in.tum.de/kb/wiki/index.php/opencyc</url>

  <depend package="rosprolog"/> <!-- For our deb build path replacement util -->
  <export>
    <java classpath="${prefix}/opencyc-2.0/api/java/build/OpenCyc.jar"/>
  </export>

</package><package name="sr_controller_manager" path="" repo="sr_contrib" repo_host="lp:sr-contrib">
  <description brief="sr_controller_manager">

	  sr_controller_manager packages provides a overlay to other controller managers services, connecting to them and giving access
	  to their services in one single call. One can load, unload, switch, start, stop any controller in any of the 
	  controller managers connected to sr_controller_manager. 

  </description>
  <author>Guillaume WALCK (UPMC)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sr_controller_manager</url>
  <depend package="rospy"/>
  <depend package="pr2_mechanism_msgs"/>

</package><package name="ic2020_surf" path="/trunk/ic2020_surf" repo="ic2020" repo_host="http://ic2020.googlecode.com/svn">
  <description brief="ic2020_surf">

     ic2020_surf

  </description>
  <author>Sean Anderson</author>
  <license>CC BY-NC-SA 2.5</license>
  <review notes="" status="unreviewed"/>

  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="std_msgs"/>
  <depend package="ic2020_vodom"/>

  <depend package="geometry_msgs"/>

</package><package name="approach_table_tools" path="/demos/ros_fall_school_2010/approach_table_tools" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="approach_table_support">

     approach_table_support

  </description>
  <author/>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/approach_table_support</url>
  <depend package="rospy"/>
  <depend package="tf"/>
  <depend package="pr2_tuck_arms_action"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="tf"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="image_geometry"/>
  <depend package="drive_base_action"/>
</package><package name="test_matlab_no_ros" path="/trunk/sandbox/matlab/test_matlab_no_ros" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="test_matlab_no_ros">

     A set of basic MEX tests that use only mex.cmake and matlab/mat.h ( no ROS components )

  </description>
  <author>Edward T. Kaszubski ( ekaszubski@gmail.com )</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/test_matlab_no_ros</url>
</package><package name="nxt_controllers" path="" repo="foote-nxt" repo_host="https://nxt.foote-ros-pkg.googlecode.com/hg/">
  <description brief="nxt_controllers">
    The nxt_controllers package provides a number of Python-based
     controllers for two-wheeled diff drive robots. The base
     controllers allows you to send velocity commands to a diff drive
     base, while the base odometry tracks the pose of a diff drive
     robot. The nxt_controllers package also contains a general
     purpose joint position controller that commnads a joint to a
     desired position by sending effort commands to the joint and
     reading the joint encoders.
  </description>
  <author>Wim Meeussen</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/nxt_controllers</url>

  <depend package="rospy"/>
  <depend package="sensor_msgs"/>
  <depend package="tf"/>
  <depend package="tf_conversions"/>
  <depend package="nxt_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="kdl"/>

</package><package name="re_comm" path="/public/tags/latest/re_comm" repo="roboearth" repo_host="https://ipvs.informatik.uni-stuttgart.de/roboearth/repos">
  <description brief="RoboEarth's communication interface">

     <p>
     re_comm is a communication interface to the RoboEarth DB. It provides
     services to download/upload/update/delete/query action recipes, object
     models and environments.
     </p>

     <p>
     This package is part of RoboEarth (EU FP7, grant 248942).
     </p>
  </description>
  <author>Alexander Perzylo</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.ros.org/wiki/re_comm</url>
  <versioncontrol type="svn" url="https://ipvs.informatik.uni-stuttgart.de/roboearth/repos/release"/>

  <depend package="re_comm_core"/>
  <depend package="re_ontology"/>
  <depend package="vision_srvs"/>
  <depend package="mod_vis"/>
  <depend package="knowrob_cad_models"/>
  <!--<depend package="re_wm_to_knowrob"/>-->

  <export>
    <java classpath="${prefix}/bin"/>
  </export>

</package><package name="nav_view_cu" path="/trunk/nav_view_cu" repo="prairiedog" repo_host="http://prairiedog.googlecode.com/svn">
  <description>A minimalistic graphical interface for 2-D navigation that does not use the ogre library.</description>
  <author>Michael Otte</author>
  <license>GNU GPL V3</license>
  <review notes="" status="unreviewed"/>
  <url>http://correll.cs.colorado.edu/pmwiki/index.php/Main/NavViewCu</url>
  <depend package="roscpp"/>
  <depend package="nav_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="tf"/>
  <depend package="message_filters"/>
  <depend package="move_base_msgs"/>
  
  <cpp cflags="-I${prefix}/src/" lflags="-lglut"/>
</package><package name="re_object_detector_gui" path="/public/tags/latest/object_scanning/re_object_detector_gui" repo="roboearth" repo_host="https://ipvs.informatik.uni-stuttgart.de/roboearth/repos">
  <description brief="re_object_detector_gui">
     <p>
     This package provides a user interface for downloading object models from
     the RoboEarth database and to feed them to re_vision and
     re_kinect_object_detector object detection algorithms.
     </p>

     <p>
     This package is part of RoboEarth (EU FP7, grant 248942).
     </p>
  </description>
  <author>Daniel Di Marco</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.ros.org/wiki/re_object_detector_gui</url>
  <versioncontrol type="svn" url="https://ipvs.informatik.uni-stuttgart.de/roboearth/repos/release"/>
  <logo>http://www.roboearth.org/sites/default/files/RoboEarth.org_logo.gif</logo>

  <rosdep name="libqt4-dev"/>
  <rosdep name="opencv2"/>
  <rosdep name="tinyxml"/>

  <depend package="roscpp"/>
  <depend package="pcl"/>
  <depend package="sensor_msgs"/>
  <depend package="re_srvs"/>
  <depend package="re_msgs"/>
  <depend package="re_vision"/>
  <depend package="re_kinect_object_detector"/>
  <!-- for QMiniZip -->
  <depend package="re_object_recorder"/>

</package><package name="pose_cov_ops" path="/trunk/mrpt_common/pose_cov_ops" repo="mrpt-ros-pkg" repo_host="http://mrpt-ros-pkg.googlecode.com/svn">
  <description brief="pose_cov_ops">

     pose_cov_ops provides a C++ library for manipulating 6D poses in different formats with 
     and without uncertainty. It offers functions to predict uncertainties of pose compositions, 
     inverse compositions, or user-provided arbitrary transformation functions.

  </description>
  <author>Jose Luis Blanco</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pose_cov_ops</url>
  <depend package="mrpt_bridge"/>
  <depend package="mrpt_libs"/>
  <depend package="geometry_msgs"/>
  <depend package="roscpp"/>

</package><package name="automow_description" path="" repo="au_automow_common" repo_host="https://github.com/Auburn-Automow/au_automow_common">
    <description brief="automow_description">
        
        automow_description provides a complete 3D model of the Auburn Automow
        for visualization and coordinate transformations.  The files in this
        package are parsed and used by a variety of other components.
    </description>
    <author>Michael Carroll</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/automow_description</url>
    <depend package="urdf"/>
    <depend package="xacro"/>

</package><package name="microstrain_3dmgx2_imu" path="/stacks/imu_drivers/trunk/microstrain_3dmgx2_imu" repo="imu_drivers" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Driver for 3DM-GX2 compatible IMUs.">
    A driver for IMUs compatible the microstrain 3DM-GX2 and 3DM-GX3 protocol. Includes 
    a heavily modified standalone driver pulled from the player distribution, 
    and a ROS node.
  </description>
  <author>Jeremy Leibs, Blaise Gassend</author>
  <license>LGPL</license>
  <review notes="Jan 14 2010" status="Doc Reviewed"/>
  <url>http://www.ros.org/wiki/microstrain_3dmgx2_imu</url>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="self_test"/>
  <depend package="diagnostic_updater"/>
  <depend package="tf"/>
  <depend package="std_srvs"/>
  <export>
    <cpp cflags="-I${prefix}/msg/cpp -I${prefix}/srv/cpp -I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -l3dmgx2"/>
  </export>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="rosbridge_test" path="" repo="rosbridge_suite" repo_host="http://kforge.ros.org/rosbridge/git">
  <description brief="rosbridge_test">

     rosbridge_test

  </description>
  <author>Jonathan Mace</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosbridge_test</url>
  <depend package="rospy"/>
  <depend package="rostest"/>
  <depend package="rosbridge_library"/>

</package><package name="k-saap_pkg" path="/stacks/auction_methods_stack/trunk/k-saap_pkg" repo="auction_methods_stack" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="sap_pkg">

     sap_pkg

  </description>
  <author>Joao Manuel Leitao Quintas</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sap_pkg</url>

  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="auction_msgs"/>
  <depend package="auction_srvs"/>

</package><package name="cl_utilities" path="" repo="cram_core" repo_host="https://github.com/moesenle/cram_core">
  <description brief="cl-utilities">
    CL-UTILITIES
    http://common-lisp.net/project/cl-utilities/
  </description>
  <author>Peter Scott</author>
  <license>Public domain</license>
  <review notes="" status="unreviewed"/>
</package><package name="sensoray626" path="/penn_lightweight_teleop/trunk/sensoray626" repo="penn_lightweight_teleop" repo_host="https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs">
  <description brief="sensoray626">

     sensoray626

  </description>
  <author>Will McMahan</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sensoray626</url>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/include -O3" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lsensoray626"/>
  </export>

</package><package name="tesseract" path="/trunk/stacks/ocr/tesseract" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="A ROS wrapper for tesseract">
  </description>
  <author>Benjamin Pitzer</author>
  <license>BSD</license>
  <review notes="" status=""/>
  <depend package="leptonica"/>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib"/>
  </export>
</package><package name="pr2_component_descriptions" path="/stacks/wg_hardware_test/trunk/pr2_component_descriptions" repo="wg_hardware_test" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="URDF descriptions of PR2 components for testing">
Robot descriptions in this package are used in PR2 hardware testing. This package relies on the URDF macros in pr2_description to make &quot;robots&quot; for PR2 components and PR2 configurations.
  </description>
  <author>Kevin Watts</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_component_descriptions</url>
  <depend package="urdf_parser"/>
  <depend package="xacro"/>
  <depend package="pr2_description"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="robotino_grappler_msgs" path="/robotino-ros-pkg/trunk/robotino_grappler/robotino_grappler_msgs" repo="robotino-ros-pkg" repo_host="http://svn.openrobotino.org">
  <description brief="robotino_grappler_msgs">

     robotino_grappler_msgs

  </description>
  <author>robotino</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/robotino_grappler_msgs</url>

</package><package name="katana_openloop_grasping" path="" repo="katana_manipulation" repo_host="http://kos.informatik.uni-osnabrueck.de/katana_manipulation.git">
  <description brief="Demo of open loop grasping using the Katana arm navigation pipeline">

     This package contains a small demo of open loop grasping using the
     <a href="/wiki/katana_arm_navigation">Katana arm navigation pipeline</a>.

  </description>
  <author>Martin Günther</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/katana_openloop_grasping</url>
  <depend package="roscpp"/>
  <depend package="katana_arm_navigation"/>
  <depend package="object_manipulation_msgs"/>
  <depend package="actionlib"/>
  <depend package="motion_planning_msgs"/>
  <depend package="move_arm_msgs"/>
  <depend package="collision_environment_msgs"/>

</package><package name="alexandria" path="" repo="cram_core" repo_host="https://github.com/moesenle/cram_core">
  <description brief="alexandria">
      Alexandria
      http://common-lisp.net/project/alexandria/
  </description>
  <author>Many</author>
  <license>Public domain</license>
  <review notes="" status="unreviewed"/>
</package><package name="rosdoc_rosorg" path="/stacks/rosorg/trunk/rosdoc_rosorg" repo="rosorg" repo_host="https://code.ros.org/svn/ros">
  <description brief="rosdoc_rosorg">

     Version of rosdoc for the ROS.org documenation.

  </description>
  <author>Ken Conley</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosdoc_rosorg</url>
  
  <depend package="rosdoc"/>

  <rosdep name="python-yaml"/>
   
</package><package name="maximus_goals" path="" repo="smart-robotics-ros-pkg" repo_host="https://github.com/JBot/smart-robotics-ros-pkg">
  <description brief="maximus_goals">

     maximus_goals

  </description>
  <author>Jbot</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/maximus_goals</url>
  <depend package="tf"/>
  <depend package="move_base_msgs"/>
  <depend package="actionlib"/>
  <depend package="roscpp"/>

</package><package name="win_boost" path="" repo="win_ros" repo_host="https://github.com/stonier/win_ros">
  <description brief="scripts to help build windows boost for ros">

  Scripts to help download, patch and compile cmake boost.

  </description>
  <author>Daniel Stonier</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/rosinstall</url>
</package><package name="starmac_viz" path="" repo="starmac-ros-pkg" repo_host="https://bitbucket.org/bouffard/starmac-ros-pkg">
  <description brief="starmac_viz">

    Visualization of quadrotor operations.

  </description>
  <author>bouffard</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/starmac_viz</url>

  <depend package="tf"/>
  <depend package="nav_msgs"/>

  <!--  depend package="asctec_msgs"/-->

  <depend package="starmac_roslib"/>
  <depend package="flyer_controller"/>
  <depend package="interactive_markers"/>

  <rosdep name="python-numpy"/>

</package><package name="rtt_tf" path="" repo="rtt_geometry" repo_host="http://git.mech.kuleuven.be/robotics/rtt_geometry.git">
    <description brief="Orocos rtt_tf Component package">
        This package contains the components of the rtt_tf package
    </description>
    <!--NOTE: set the license and author before you publish this code-->
    <license>GPL</license>
    <author>Ruben Smits, ruben.smits@mech.kuleuven.be</author>
    <depend package="rtt"/>
    <depend package="tf"/>
    <depend package="rtt_rosnode"/>
    <depend package="rtt_geometry_msgs"/>
    
</package><package name="srs_assisted_grasping_ui" path="" repo="srs_public" repo_host="git://github.com/ipa320/srs_public">
  <description brief="srs_assisted_grasping_ui">

     srs_assisted_grasping_ui

  </description>
  <author>Zdenek Materna</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/srs_assisted_grasping_ui</url>
  <depend package="srs_assisted_grasping_msgs"/>
  <depend package="srs_assisted_grasping"/>
  <depend package="ogre"/>
  <depend package="rviz"/>
  <depend package="actionlib"/>
  <depend package="roscpp"/>
  <depend package="ogre_tools"/>
  
  <export>
    <rviz plugin="${prefix}/lib/but_assisted_grasping.yaml"/>
    <rosdoc config="rosdoc.yaml"/>
  </export>

</package><package name="RobotModel" path="/darpa_arm_sim_servers/RobotModel" repo="darpa_arm_sim_servers" repo_host="http://svn.thearmrobot.com">
  <description brief="RobotModel">

     RobotModel

  </description>
  <author>RE2</author>
  <license>GPL</license>
  <depend package="opencv2"/>
  <depend package="roscpp"/>
  <depend package="gazebo"/>
  <depend package="planning_environment"/>
  <export>
    <gazebo gazebo_media_path="${prefix}/models"/>
   </export>
</package><package name="book_stacking_msgs" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="book_stacking_msgs">

     book_stacking_msgs

  </description>
  <author>Akansel Cosgun</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/book_stacking_msgs</url>
  <export>
	<cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp `rosboost-cfg --cflags`" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib `rosboost-cfg --lflags thread`"/>
  </export>
  <depend package="pcl"/>
	<depend package="move_base_msgs"/>
</package><package name="nodemon_tui" path="" repo="node_monitoring" repo_host="http://github.com/timn/ros-node_monitoring">
  <description brief="nodemon_tui">
    Node monitoring text-based user interface.
  </description>
  <author>Tim Niemueller</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/nodemon_tui</url>
  <depend package="roscpp"/>
  <depend package="nodemon_msgs"/>
</package><package name="husky_bringup" path="" repo="clearpath_husky" repo_host="https://github.com/clearpathrobotics/clearpath_husky">
  <description brief="husky_bringup">

     This package provides a launch file to bring up the Husky
     hardware interface in a way that will be accessible and
     usable by the other software in husky_teleop and husky_kinect.

     In the future, a script will be provided to allow this to
     be controlled by the service command and launched on startup
     of your machine.

  </description>
  <author>Mike Purvis, Ryan Gariepy</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/husky_bringup</url>
  <depend package="rospy"/>
  <depend package="sensor_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="clearpath_bringup"/>
  <depend package="clearpath_base"/>
  <depend package="kdl"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="diagnostic_msgs"/>

</package><package name="bullet_reasoning_demo" path="" repo="cram_physics" repo_host="https://github.com/moesenle/cram_physics">
  <description brief="bullet_reasoning_demo">

     bullet_reasoning_demo

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/bullet_reasoning_demo</url>
  <depend package="bullet_reasoning"/>
  <depend package="bullet_reasoning_designators"/>
  <depend package="semantic_map_costmap"/>
  <depend package="occupancy_grid_costmap"/>
  <depend package="perception_process_module"/>
  <depend package="cram_roslisp_common"/>
  <depend package="cram_plan_knowledge"/>
  <depend package="pr2_manipulation_knowledge"/>
  <depend package="cram_pr2_knowledge"/>
  <depend package="object_location_designators"/>
  <depend package="pr2_reachability_costmap"/>

</package><package name="opencv_fitting" path="/trunk/agentsystem_ros_tutorials/opencv_fitting" repo="rtm-ros-robotics/agentsystem_ros_tutorials" repo_host="https://rtm-ros-robotics.googlecode.com/svn">
  <description brief="opencv_fitting">

     opencv_fitting

  </description>
  <author>rtm-ros-robotics</author>
  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/opencv_fitting</url>
  <depend package="opencv2"/>
  <depend package="geometry_msgs"/>
  <depend package="image_transport"/>
  <depend package="cv_bridge"/>
</package><package name="continuous_ops_msgs" path="" repo="continuous_ops" repo_host="https://kforge.ros.org/contops/hg">
  <description brief="continuous_ops_msgs">

     continuous_ops_msgs

  </description>
  <author>Wim Meeussen</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/continuous_ops_msgs</url>
  <depend package="std_msgs"/>
  <depend package="actionlib_msgs"/>

</package><package name="parallel_move_base" path="/sbpl_dynamic_env/trunk/parallel_move_base" repo="sbpl_dynamic_env" repo_host="https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs">
  <description brief="A general navigation stack">

A modified version of move_base where the global planner runs in its own thread on a clock like the local planner does.

  </description>
 <author>Eitan Marder-Eppstein, Mike Phillips</author>
 <license>BSD</license>
 <review notes="" status="Doc reviewed"/>
 <url>http://ros.org/wiki/move_base</url>

 <depend package="roscpp"/>
 <depend package="rosconsole"/>
 <depend package="std_msgs"/>
 <depend package="move_base_msgs"/>
 <depend package="geometry_msgs"/>
 <depend package="visualization_msgs"/>
 <depend package="actionlib"/>
 <depend package="nav_core"/>
 <depend package="pluginlib"/>
 <depend package="costmap_2d"/>
 <depend package="tf"/>
 <depend package="nav_msgs"/>
 <depend package="roslib"/>
 <depend package="rospy"/>
 <depend package="rosmsg"/>
 <depend package="rostopic"/>
 <depend package="std_srvs"/>

 <!--These deps aren't strictly needed, but given the default parameters require them to work, we'll enforce that they build -->
 <depend package="base_local_planner"/>
 <depend package="navfn"/>
 <depend package="clear_costmap_recovery"/>
 <depend package="rotate_recovery"/>


 <export>
 <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp `rosboost-cfg --cflags`" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib `rosboost-cfg --lflags thread`"/>
 </export>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="starmac_vicon_testing" path="" repo="starmac-ros-pkg" repo_host="https://bitbucket.org/bouffard/starmac-ros-pkg">
  <description brief="starmac_vicon_testing">

     starmac_vicon_testing

  </description>
  <author>Patrick Bouffard</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/starmac_vicon_testing</url>
  <depend package="vicon_mocap"/>
  <depend package="flyer_est"/>
  <depend package="starmac_tools"/>

</package><package name="win_rosinstall" path="" repo="win_ros" repo_host="https://github.com/stonier/win_ros">
  <description brief="rosinstall for windows">

Rosinstall is a tool to check out source code. This is a slightly modified version so that it works on windows. Alot of the patches to rosinstall are already being merged upstream to the actual rosinstall package, whilst others will remain here until its decided they are stable (at which point we'll try to merge them upstream). 

  </description>
  <author>Daniel Stonier</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/rosinstall</url>
  <!-- Indirectly exporting this straight from svn, so don't need it as a ros dependency. -->
  <!-- <depend package="vcstools"/> -->

</package><package name="teer_example_turtle" path="" repo="executive_teer" repo_host="https://github.com/ethz-asl/executive_teer">
  <description brief="teer example using turtlesim">

     An example of how to use teer_ros using turtlesim.

  </description>
  <author>Stéphane Magnenat</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/teer_example_turtle</url>
  <depend package="roslib"/>
  <depend package="rospy"/>
  <depend package="teer_ros"/>
  <depend package="turtlesim"/>

</package><package name="ecl_eigen" path="/trunk/ecl_core/ecl_eigen" repo="ecl_core" repo_host="https://embedded-control-library.googlecode.com/svn">
  <description brief="Linear algebra implementation by eigen.">

     This provides an Eigen implementation for ecl's linear algebra.

  </description>
  <author>Daniel Stonier (d.stonier@gmail.com)</author>
  <license>BSD</license>
  <review notes="" status="doc reviewed"/>
  <url>http://eigen.tuxfamily.org/dox-devel/</url>
  <export>
    <cpp cflags="-I${prefix}/include/"/>
    <rosdoc config="rosdoc.yaml"/>
  </export>
	
  <depend package="ecl_license"/>
  <depend package="ecl_build"/>
  <rosdep name="eigen"/>
  <rosbuild2>
    <export>
      <include_dir>${ecl_eigen_SOURCE_DIR}/include</include_dir>
    </export>
    <depend package="ecl_license"/>
    <depend package="ecl_build"/> 
  </rosbuild2>

</package><package name="darm_dashboard" path="/darm_dashboard" repo="darm_dashboard" repo_host="http://svn.thearmrobot.com">
  <description brief="darm_dashboard">

     darm_dashboard

  </description>
  <author>DARPA ARM GFE Team</author>
  <license>GPL</license>

  <depend package="roscpp"/>
  <depend package="joy"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="image_transport"/>
  <depend package="SR4000_msgs"/>
  <depend package="Bumblebee2_msgs"/>
  <depend package="DPPanTilt_msgs"/>
  <depend package="audio_msgs"/>
  <depend package="prosilica_msgs"/>
  <depend package="WAM_msgs"/>
  <depend package="BHand_msgs"/>
  <depend package="TestExecution_msgs"/>
  <depend package="SafetyLight_msgs"/>
  <depend package="re2logger"/> 
  <depend package="PressureSensor_msgs"/>
  <depend package="ForceTorque_msgs"/>
    
  <rosdep name="qt4"/>
</package><package name="visp_camera_calibration" path="" repo="stacks/vision_visp" repo_host="git://github.com/laas/vision_visp">
  <description brief="Camera calibration using visp">
     visp_camera_calibration allows easy calibration of 
     cameras using a customizable pattern.
  </description>
  <author>Filip Novotny</author>
  <license>GPLv2</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/visp_camera_calibration</url>
  <depend package="std_msgs"/>
  <depend package="rospy"/>
  <depend package="roscpp"/>

  <depend package="visp"/>
  <depend package="sensor_msgs"/> <!-- For Image data types -->
  <depend package="visp_bridge"/>
  <depend package="opencv2"/>
  <depend package="camera_calibration_parsers"/> <!-- Write camera data to ini file -->

</package><package name="robot_booking" path="/trunk/stacks/remote_lab/robot_booking" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="robot_booking">

     robot_booking

  </description>
  <author>Jihoon Lee</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/robot_booking</url>

  <depend package="rospy"/>
  <depend package="std_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="interactive_marker_client"/>

</package><package name="kurt_navigation_global" path="" repo="kurt_apps" repo_host="http://kos.informatik.uni-osnabrueck.de/kurt_apps.git">
  <description brief="XML files for running global navigation assuming a static map on a Kurt robot.">
     This package holds XML files for running the <a href="http://www.ros.org/wiki/move_base">move_base</a> node on a Kurt
     robot. The <a href="http://www.ros.org/wiki/move_base">move_base</a> node
     is configured to run over a pre-specified static map. This package is
     modeled after pr2_navigation_global.
  </description>
  <author>Jochen Sprickerhof</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/kurt_navigation_global</url>
</package><package name="repository_maintenance" path="/stacks/ros_experimental/trunk/repository_maintenance" repo="ros_experimental" repo_host="https://code.ros.org/svn/ros">
  <description brief="A collection of tools useful for repository maintenance">

     A collection of tools useful for repository maintenance

  </description>
  <author>Tully Foote</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://pr.willowgarage.com/wiki/repository_maintenance</url>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="coverage_3d_msgs" path="/trunk/coverage_3d/coverage_3d_msgs" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="coverage_msgs">

     coverage_msgs

  </description>
  <author>Juergen Hess</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/coverage_msgs</url>

  <depend package="geometry_msgs"/>
  <depend package="std_msgs"/>
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg_gen/cpp/include -I${prefix}/msg/cpp"/>
  </export>
</package><package name="megatree_pcl" path="" repo="megatree_pcl" repo_host="http://kforge.ros.org/megatree/megatree_pcl">
  <description brief="megatree_pcl">

     megatree_pcl

  </description>
  <author>Wim Meeussen</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/megatree_pcl</url>


  <depend package="pcl_ros"/>
  <depend package="megatree_storage"/>
  <depend package="megatree_cpp"/>

</package><package name="zeroconf_jmdns" path="" repo="zeroconf_implementations" repo_host="https://github.com/stonier/zeroconf_implementations">
  <description brief="the java zeroconf'ing library">

     Uses the sources from jmnds and builds them in place in the ros environment.

  </description>
  <author>Daniel Stonier</author>
  <license>BSD</license>
  <review notes="" status="3rdparty"/>
  <url>http://jmdns.sourceforge.net/</url>

  <depend package="rosjava_bootstrap"/>
  <depend package="zeroconf_comms"/>
  <rosdep name="ant"/>
  <rosdep name="openjdk-6-jdk"/>

  <export>
    <rosjava-src location="src/main/java"/>
    <rosjava-pathelement artifactId="javax.jmdns" built="true" groupId="javax" location="target" version="3.4.2"/>
  </export>
</package><package name="semantic_point_annotator" path="" repo="pr2_navigation" repo_host="https://kforge.ros.org/pr2navigation/hg">
  <description>
    A node which annotates 3D point cloud data with semantic labels.
  </description>

  <author>Radu Bogdan Rusu</author>
  <license>BSD</license>
  <url>http://pr.willowgarage.com</url>
  <review notes="beta" status="experimental"/>

  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  
</package><package name="libntcan" path="" repo="cob_extern" repo_host="git://github.com/ipa320/cob_extern">
  <description brief="libntcan">

     This package wraps the libntcan to use it as a ros dependency.

  </description>
  <author>Florian Weisshardt</author>
  <license>proprietary</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.esd-electronics.com</url>

  <export>
    <cpp cflags="-I${prefix}/common/include -I${prefix}/common/include/libntcan" lflags="-Wl,-rpath,${prefix}/common/lib -L${prefix}/common/lib -lntcan"/>
  </export>
  
</package><package name="cob_relayboard" path="" repo="cob_driver" repo_host="git://github.com/ipa320/cob_driver">
  <description brief="cob_relayboard">

     cob_relayboard

  </description>
  <author>Christian Connette</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_relayboard</url>

  <depend package="roscpp"/>
  <depend package="rostest"/>
  <depend package="std_msgs"/>
  <depend package="cob_utilities"/>
  <depend package="pr2_msgs"/>

  <!-- As we deviate from the standard ROS Repository-Structure we have to tell ROS where to find header and lib -->
  <export>
    <cpp cflags="-I${prefix}/common/include" lflags="-Wl,-rpath,${prefix}/common/lib -L${prefix}/common/lib -lSerialIO -lcob_relayboard"/>
  </export>

</package><package name="frame_common" path="/stacks/vslam/trunk/frame_common" repo="vslam" repo_host="https://code.ros.org/svn/ros-pkg">
  <description>
    Common definitions for frames in SBA, VSLAM.
  </description>
  <author>Kurt Konolige</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <rosdep name="opencv2"/>
  <rosdep name="eigen"/>
  <rosdep name="pcl"/>
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lframe_common"/>
  </export>
</package><package name="nodelet_sandbox" path="/trunk/cturtle/sandbox/nodelet_sandbox" repo="seabee3-ros-pkg" repo_host="http://seabee3-ros-pkg.googlecode.com/svn">
  <description brief="nodelet_sandbox">

     nodelet_sandbox

  </description>
  <author>Edward</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/nodelet_sandbox</url>
  <depend package="roscpp"/>
  <depend package="pluginlib"/>
  <depend package="std_msgs"/>
  <depend package="nodelet"/>
  
  <export>
    <nodelet plugin="${prefix}/nodelet_plugins.xml"/>
  </export>
</package><package name="rve_common" path="" repo="visualization_engine" repo_host="https://kforge.ros.org/visengine/hg">
  <description brief="rve_common">

     rve_common

  </description>
  <author>Josh Faust</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rve_common</url>
  <depend package="rve_msgs"/>
  <depend package="roslib"/>
  <depend package="eigen"/>
  
  <export>
  	<cpp cflags="-I${prefix}/include/" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lrve_common"/>
  </export>
</package><package name="rosmultimaster" path="/stacks/wu_utils/trunk/rosmultimaster" repo="wu-ros-pkg" repo_host="https://wu-ros-pkg.svn.sourceforge.net/svnroot/wu-ros-pkg">
  <description brief="rosmultimaster">
      The rosmultimaster package is designed to allow you to connect to multiple ros cores from within a single process. This is achieved via the rosmultimaster.Adaptor class. 
  </description>
  <author>Erik Karulf/erik@karulf.com and Marshall Strother/mcstrother@gmail.com</author>
  <license>BSD</license>
  <review notes="reviewed and tested by mcstrother on 8/6/2009" status="experimental"/>
  <url>http://ros.org/wiki/rosmultimaster</url>
  <versioncontrol type="svn" url="https://kermit.cse.wustl.edu/svn/robotics/trunk/rosmultimaster"/>
  <depend package="rospy"/>
  <depend package="pymp"/>
  <depend package="basic_utils"/>
</package><package name="irobot_sensor_simulator" path="/trunk/irobot_sensor_simulator" repo="hacdc-ros-pkg" repo_host="http://hacdc-ros-pkg.googlecode.com/svn">
  <description brief="irobot_sensor_simulator">

     Simulates the sensors and sensorPacket normally sent
     by the irobot_create_2_1 driver.

  </description>
  <author>Andrew Harris</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/irobot_sensor_simulator</url>
  <depend package="dynamic_reconfigure"/>
  <depend package="std_msgs"/>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="irobot_create_2_1"/>

</package><package name="ecl_sigslots_lite" path="/trunk/ecl_lite/ecl_sigslots_lite" repo="ecl_lite" repo_host="https://embedded-control-library.googlecode.com/svn">
  <description brief="A very light sigslots implementation for embedded development">

     This avoids use of dynamic storage (malloc/new) and thread safety (mutexes) to
     provide a very simple sigslots implementation that can be used for *very*
     embedded development.

  </description>
  <author>Daniel Stonier (d.stonier@gmail.com)</author>
  <license>BSD</license>
  <review notes="" status="doc reviewed"/>
  <url>http://snorriheim.dnsdojo.com/redmine/wiki/ecl</url>
  
  <depend package="ecl_license"/>
  <depend package="ecl_build"/>
  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>
</package><package name="pmd_camcube_3_ros_pkg" path="" repo="pmd_camcube_3_ros_pkg" repo_host="https://github.com/pinaki2999/pmd_camcube_3_ros_pkg">
  <description brief="pmd_camcube_3">

     pmd_camcube_3

  </description>
  <author>Pinaki Sunil Banerjee</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pmd_camcube_3</url>
  <depend package="std_msgs"/>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="pcl"/>
  <depend package="tf"/>
  <depend package="pcl_ros"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="roslib"/>
</package><package name="pr2_dremel_gui" path="/trunk/stacks/pr2_dremel/pr2_dremel_gui" repo="bosch-ros-pkg-e" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg-e/code">
  <description brief="draw_gcode">

     draw_gcode

  </description>
  <author>Soeren Kammel, Benjamin Pitzer (maintained by Benjamin Pitzer)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/draw_gcode</url>

  <depend package="opencv2"/>
  <depend package="image_geometry"/>
  <depend package="visualization_msgs"/>
  <depend package="actionlib"/>  
  
  <depend package="vlr"/> 
  <depend package="pr2_dremel_server"/>
  <depend package="remote_power_manager"/>  

  <rosdep name="libqt4-opengl-dev"/>
</package><package name="ur5_driver" path="" repo="universal_robot" repo_host="https://kforge.ros.org/ros_industrial/universal_robot">
  <description brief="ur5_driver">

     universal_robot_driver

  </description>
  <author>Stuart Glaser</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ur5_driver</url>

  <depend package="rospy"/>
  <depend package="actionlib"/>
  <depend package="control_msgs"/>
  <depend package="sensor_msgs"/>

</package><package name="page_turning_demo" path="/branches/pr2_demos/iros_demos/page_turning_demo" repo="mit-ros-pkg-pr2-demos" repo_host="https://svn.csail.mit.edu/mit-ros-pkg">
  <description brief="page_turning_demo">

     page_turning_demo

  </description>
  <author>Anne E Holladay</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/page_turning_demo</url>
  <depend package="geometry_msgs"/>
  <depend package="rospy"/>
  <depend package="pr2_pick_and_place_demos"/>
  <depend package="visualization_msgs"/>
  <depend package="object_manipulator"/>
  <depend package="actionlib_msgs"/>
  <depend package="pr2_utils"/>

</package><package name="gsl" path="/trunk/quickdev/gsl" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="gsl">

     gsl

  </description>
  <author>Edward T. Kaszubski ( ekaszubski@gmail.com )</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/gsl</url>
  <rosdep name="gsl"/>

  <export>
    <cpp cflags="-I/usr/include/gsl" lflags="-lgsl -lgslcblas"/>
  </export>
</package><package name="roscolbot" path="/trunk/colbot-ros-pkg/roscolbot" repo="colbot-ros-pkg" repo_host="http://colbot.googlecode.com/svn">
  <description brief="roscolbot">
     Services and launch files for Colbot (hobby robot)
  </description>
  <author>fpesquet@gmail.com</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>none</url>
  
  <depend package="roslib"/>
  <depend package="rospy"/>
  <depend package="rosservice"/>
  <depend package="joy"/>
  <depend package="wiimote"/>
  <depend package="std_msgs"/>
  <depend package="std_srvs"/>
  <depend package="sensor_msgs"/>
  <depend package="rosqwerk"/>
</package><package name="magellan_dg14" path="" repo="au_automow_drivers" repo_host="https://github.com/Auburn-Automow/au_automow_drivers">
  <description brief="dg14">

     dg14

  </description>
  <author>William Woodall</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/dg14</url>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="nav_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="serial"/>
  <depend package="diagnostic_updater"/>

</package><package name="teer_ros" path="" repo="executive_teer" repo_host="https://github.com/ethz-asl/executive_teer">
  <description brief="ros integration of teer">
	High-level executive using teer, the task execution environment for robotics,
    from ETHZ ASL. Teer is a Python library proposing the use of co-routines
	(called tasks) to implement executives. Teer is an alternative to executives 
	based on state machines such as smach. This package extends teer with
	ROS-based time and protects teer tasks using a threading.Condition.
  </description>
  <author>Stéphane Magnenat</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/teer</url>
  <depend package="rospy"/>

</package><package name="rospkg" path="" repo="rospkg" repo_host="git://github.com/ros/rospkg">
  <catkin/>
  <description brief="rospkg">

     Standalone Python library for the ROS package system.

  </description>
  <author>Ken Conley/kwc@willowgarage.com</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rospkg</url>

  <export>
    <rosdoc config="rosdoc.yaml"/>    
  </export>

</package><package name="ancient_powercube" path="/trunk/ancient_powercube" repo="stanford-ros-pkg" repo_host="https://stanford-ros-pkg.googlecode.com/svn">
  <description brief="ancient_powercube">
    We have this ancient blue Amtec powercube sitting around our lab that 
    still works fine. I doubt there are many other working specimens of this
    vintage, so I'm putting it in its own package, since I believe the RS-232
    protocol is complete different from their newer products.
  </description>
  <author>Morgan Quigley</author>
  <license>BSD</license>
  <depend package="roscpp"/>
  <depend package="serial_port"/>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lancient_powercube"/>
  </export>
</package><package name="underwater_sensor_msgs" path="/trunk/underwater_simulation/underwater_sensor_msgs" repo="uji-ros-pkg" repo_host="http://uji-ros-pkg.googlecode.com/svn">
  <description brief="underwater_sensor_msgs">

     underwater_sensor_msgs

  </description>
  <author>mprats</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/underwater_sensor_msgs</url>

</package><package name="comp_germandeli" path="/tags/latest/comp_germandeli" repo="knowrob" repo_host="http://code.in.tum.de/pubsvn/knowrob">
  <description brief="comp_germandeli">

     Interface between KnowRob and the ODUfinder perception system
     for recognizing objects from the GermanDeli online shop. The
     package further provides information about these objects in
     form of an OWL ontology and utilities for generating the OWL
     representation given the XML log file created by the GermanDeli
     crawler.

  </description>
  <author>Moritz Tenorth</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.ros.org/wiki/comp_germandeli</url>

  <depend package="rosjava_jni"/>
  <depend package="ias_knowledge_base"/>
  <depend package="comp_cop"/>
  <depend package="jpl"/>

  <export>
    <java classpath="${prefix}/bin"/>
    <rosdoc config="rosdoc.yaml"/>
  </export>

</package><package name="wubble_arm_kinematics" path="/trunk/arrg/ua_controllers/wubble_arm_kinematics" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="wubble_arm_kinematics">
        This package provides a kinematics implementation for the Wubble robot arm. It can be used to compute forward and inverse kinematics.
    </description>

    <author>Antons Rebguns, with most of the code borrowed from pr2_arm_kinematics</author>
    <license>BSD</license>

    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/wubble_arm_kinematics</url>

    <depend package="roscpp"/>
    <depend package="geometry_msgs"/>
    <depend package="tf"/>
    <depend package="tf_conversions"/>
    <depend package="urdf"/>
    <depend package="pluginlib"/>

    <depend package="kinematics_base"/>
    <depend package="kinematics_msgs"/>
    <depend package="arm_navigation_msgs"/>

    <depend package="kdl"/>
    <depend package="kdl_parser"/>

    <export>
        <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lwubble_arm_kinematics_lib"/>
        <kinematics_base plugin="${prefix}/kinematics_plugins.xml"/>
    </export>
</package><package name="rovio_controller" path="" repo="iheart-ros-pkg" repo_host="git://github.com/IHeartRobotics/iheart-ros-pkg">
  <description brief="rovio_controller">

     rovio_controller controls the motors and head position of the Rovio

  </description>
  <author>I Heart Robotics</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rovio_controller</url>
  <depend package="std_msgs"/>
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  <depend package="rovio_common"/>
  <depend package="resource_retriever"/>

</package><package name="footstep_planner" path="/trunk/humanoid_stacks/humanoid_navigation/footstep_planner" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="Footstep planning for humanoid robots">

     <p>A footstep planner for humanoid / biped robots. The planner builds on SBPL and has anytime (ARA*) as well as dynamic replanning (AD*) capabilities.</p>
     <p>Details can be found in the corresponding paper <em>&quot;Humanoid Navigation with Dynamic Footstep Plans&quot;</em>
     by J. Garimort, A. Hornung, and M. Bennewitz; published in 
     Proc. of the IEEE International Conference on Robotics &amp; Automation (ICRA), 2011</p>

  </description>
  <author>Johannes Garimort, Armin Hornung</author>
  <license>GPL 3</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/footstep_planner</url>
  
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lfootstep_planner"/>
  </export>  
  
  <depend package="actionlib"/>
  <depend package="humanoid_nav_msgs"/>
  <depend package="gridmap_2d"/>
  <depend package="map_server"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="angles"/>
  <depend package="tf"/>
  <depend package="visualization_msgs"/>
  
  <!-- for electric: 
  <depend package="sbpl"/> -->


  <!-- for fuerte and later -->
  <rosdep name="sbpl"/>

</package><package name="virtualScan" path="/trunk/Scan3D/virtualScan" repo="roblab-whge-ros-pkg" repo_host="http://roblab-whge-ros-pkg.googlecode.com/svn">
  <description brief="virtualScan">

     Given a 2D point cloud it will create a 3D map.

  </description>
  <author>B. König</author>
  <license>CreativeCommons BY-NC-SA License</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/laserscanner_3d2d</url>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="pcl"/>

</package><package name="ecl_linear_algebra" path="/trunk/ecl_core/ecl_linear_algebra" repo="ecl_core" repo_host="https://embedded-control-library.googlecode.com/svn">
  <description brief="Matrix manipulation, solvers and geometry tools">

     Ecl frontend to a linear matrix package (currently eigen).

  </description>
  <author>Daniel Stonier (d.stonier@gmail.com)</author>
  <license>BSD</license>
  <review notes="" status="doc reviewed"/>
  <url>http://snorriheim.dnsdojo.com/redmine/wiki/ecl</url>
  <export>
    <!-- cover both internal and external options -->
    <cpp cflags="-I${prefix}/include `pkg-config  --cflags eigen3`"/>
    <rosdoc config="rosdoc.yaml"/>
  </export>
  <!--
    Embeddeding eigen for now, make sure we're always compatible with ros though! 
    <depend package="eigen"/> 
  -->
  <depend package="ecl_eigen"/> <!--  Internal eigen if ECL_EIGEN_IS_INTERNAL is defined -->
  <depend package="ecl_license"/>
  <depend package="ecl_build"/>
  <depend package="ecl_exceptions"/>
  <depend package="ecl_formatters"/>
  <rosbuild2>
    <export>
      <include_dir>${ecl_linear_algebra_SOURCE_DIR}/include</include_dir>
    </export>
    <depend package="ecl_eigen"/> <!--  Internal eigen if ECL_EIGEN_IS_INTERNAL is defined -->
    <depend package="ecl_license"/>
    <depend package="ecl_build"/>
    <depend package="ecl_exceptions"/>
    <depend package="ecl_formatters"/>
  </rosbuild2>
</package><package name="chiara" path="/trunk/albany_robots/chiara" repo="albany-ros-pkg" repo_host="http://albany-ros-pkg.googlecode.com/svn">
  <description brief="chiara">
    Configuration and launch files for a CMU Chiara.
  </description>
  <author>Michael Ferguson</author>
  <license>BSD</license>

  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/chiara</url>

  <depend package="rospy"/>
  <depend package="std_msgs"/>
  <depend package="arbotix_python"/>
</package><package name="simple_knowledge" path="" repo="cram_gazebo" repo_host="https://github.com/fairlight1337/cram_gazebo">
  <description brief="simple_knowledge">
    
    simple_knowledge
    
  </description>
  <author>Jan Winkler</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/simple_knowledge</url>
  
  <depend package="roslisp"/>
  <depend package="cram_gazebo_utilities"/>
  
</package><package name="task_compiler" path="/trunk/task_compiler" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="task_compiler">

     task_compiler

     Compiler that translate task description in PDDL (Planning Domain Description Language) to SMACH (state machine based execution and coordination system) description.

  </description>
  <author>Manabu Saito</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/task_compiler</url>
  <depend package="pddl_planner"/>
  <depend package="roseus_smach"/>

</package><package name="pyclearsilver" path="/stacks/web_interface/trunk/pyclearsilver" repo="web_interface" repo_host="https://code.ros.org/svn/wg-ros-pkg">
<description brief="Python Clearsilver">
A bunch of libraries to interface clearsilver with python and many databases.
</description>
<author>Scott Hassan/hassan@willowgarage.com</author>
<license>BSD</license>
<review notes="" status="experimental"/>
<url>http://ros.org/wiki/pyclearsilver</url>
<sysdepend os="ubuntu" package="python-clearsilver"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="pr2_pan_tilt" path="" repo="pr2_pan_tilt" repo_host="https://kforge.ros.org/pr2apps/pr2_pan_tilt">
  <description brief="PR2 Pan Tilt Viewer">
    Pan Tilt app for the PR2 with android
  </description>
  <author>Tony Pratkanis</author>
  <license>BSD</license>
  <url>http://ros.org/wiki/pr2_pan_tilt</url>
  <review notes="" status="na"/>
  <depend package="geometry_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="topic_tools"/>
  <depend package="actionlib"/>
  <depend package="rospy"/>
  <depend package="tf"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="pr2_arm_state_estimation" path="/trunk/stacks/manipulator_state_estimation/pr2_arm_state_estimation" repo="bosch-ros-pkg-e" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg-e/code">
  <description brief="pr2_arm_state_estimation">

    This package uses Bosch MEMS sensors to estimate the pose of the PR2's arm. The cost of accelerometers and gyroscopes has dropped to a point where they have become ubiquitous sensors, as seen by their presence in mobile phones and video game controllers. It is possible to use these sensors to estimate the joint positions of a robotic manipulator. This allows the joint angle sensor to be decoupled from the physical joint axis or actuator axis. In turn, this allows for a truly redundant measurement mechanism for safety as well as for new, lower-cost manipulator designs.

    Currently only the left arm is supported, and the sensors must be placed in specific locations and orientations.

  </description>
  <author>Philip Roan, Nikhil Deshpande (maintained by Philip Roan)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_arm_state_estimation</url>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="bma180"/>
  <depend package="smi540"/>
  <depend package="common_rosdeps"/>
  <rosdep name="eigen"/>

</package><package name="joint_fusion" path="" repo="uuisrc-ros-pkg" repo_host="https://github.com/cburbridge/uuisrc-ros-pkg">
  <description brief="joint_fusion">

     A simple node that takes two JointState messages and combines them into one.

     Params: rate the rate at with to publish (default 10)
     Subrcribes: source1, source2 of type sensor_msgs/JointState
     Publishes: joint_state of type sensor_msgs/JointState

  </description>
  <author>Lorenzo Riano </author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/joint_fusion</url>
  <depend package="sensor_msgs"/>
  <depend package="rospy"/>
  <depend package="roslib"/>

</package><package name="turtlebot_train" path="/trunk/clearpath_turtlebot/turtlebot_train" repo="clearpath-ros-pkg" repo_host="http://clearpath-ros-pkg.googlecode.com/svn">
  <description brief="turtle_train">

     A small demo application to get your group of TurtleBots moving around autonomously. The TurtleBot will attempt to identify another TurtleBot in its view and begin to follow it. Running this on multiple TurtleBots with a teleop'd bot at the front can make for a fun demo!

  </description>
  <author>Sean Anderson</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/turtle_train</url>

  <depend package="clearpath_tools"/>
  <depend package="clearpath_kinect_demo"/>
  <depend package="turtlebot_node"/>

</package><package name="spline_smoother" path="" repo="arm_navigation" repo_host="https://kforge.ros.org/armnavigation/armnavigation">
  <description brief="Converts a position trajectory to a smooth spline trajectory">

This package takes in position trajectories (with times), and can fill in
velocities and accelerations at the knot points using various schemes, like
numerical differentiation, clamped cubic splines, or the Fritsch-Butland monotonic cubic interpolator.

  </description>
  <author>Mrinal Kalakrishnan / mail@mrinal.net</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/spline_smoother</url>

  <depend package="urdf"/>
  <depend package="angles"/>
  <depend package="roscpp"/>
  <depend package="filters"/>
  <depend package="trajectory_msgs"/>
  <depend package="arm_navigation_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lspline_smoother"/>
    <filters plugin="${prefix}/default_plugins.xml"/>
  </export>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="eros_build" path="/trunk/tools/eros_build" repo="eros" repo_host="https://code.ros.org/svn/eros">
  <description brief="make/cmake utilities to assist 3rd party builds">

     This includes both makefiles and cmake macro libraries to assist in the build
     of 3rd party packages for use with a toolchain.

  </description>
  <author>Daniel Stonier (d.stonier@gmail.com)</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/eros_build</url>
  <depend package="eros_license"/>
  <depend package="rosbuild"/>
  <export>
    <rosbuild cmake_directory="${prefix}/cmake/modules"/>
  </export>
</package><package name="sbpl_lattice_planner" path="" repo="navigation_experimental" repo_host="https://kforge.ros.org/navigation/experimental">
  <description brief="sbpl_lattice_planner">

     sbpl_lattice_planner

  </description>
  <author>Michael Phillips</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sbpl_lattice_planner</url>
  <depend package="roscpp"/>
  <depend package="costmap_2d"/>
  <depend package="nav_core"/>
  <depend package="pluginlib"/>
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lsbpl_lattice_planner"/>
    <nav_core plugin="${prefix}/bgp_plugin.xml"/>
  </export>

  <rosdep name="sbpl"/>

</package><package name="pyqrnative" path="" repo="multimaster_experimental" repo_host="https://kforge.ros.org/appmanandroid/multimaster_experimental">
  <description brief="pyqrnative">

     Native Python library for QRCodes using PIL.

  </description>
  <author>Sam Curren</author>
  <license>MIT</license>
  <review notes="" status="thirdparty"/>
  <url>http://code.google.com/p/pyqrnative</url>
  <rosdep name="python-imaging"/>
</package><package name="ocr_server" path="/trunk/stacks/ocr/ocr_server" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="ocr_server">

     ocr_server

  </description>
  <author>Benjamin Pitzer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ocr_server</url>

  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="opencv2"/>  
  <depend package="image_transport"/>
  <depend package="cv_bridge"/>
  <depend package="tesseract"/>
  
  <export>
    <cpp cflags="-I${prefix}/srv_gen/cpp"/>
  </export>


</package><package name="osm_cartography" path="/trunk/stacks/open_street_map/osm_cartography" repo="utexas-art-ros-pkg" repo_host="http://utexas-art-ros-pkg.googlecode.com/svn">
  <description brief="Open Street Map cartography">

     Geographic mapping using Open Street Map data.

  </description>
  <author>Jack O'Quin</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/osm_cartography</url>
  <depend package="dynamic_reconfigure"/>
  <depend package="geodesy"/>
  <depend package="geographic_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="rospy"/>
  <depend package="tf"/>
  <depend package="std_msgs"/>
  <depend package="visualization_msgs"/>
  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>
</package><package name="pcl_ros" path="/trunk/perception_pcl_unstable/pcl_ros" repo="perception_pcl" repo_host="http://svn.pointclouds.org/ros">
  <description brief="PCL - ROS (Unstable)">

<p>
  PCL (Point Cloud Library) ROS interface package. PCL-ROS is the preferred
  bridge for 3D applications involving n-D Point Clouds and 3D geometry
  processing in ROS. The package contains powerful nodelet interfaces for PCL
  algorithms, accepts dynamic reconfiguration of parameters, and supports
  multiple threading natively for large scale PPG (Perception Processing
  Graphs) construction and usage.
</p>

  </description>

  <author>Maintained by Radu Bogdan Rusu</author>
  <license>BSD</license>
  <url>http://ros.org/wiki/pcl_ros</url>
  <review notes="" status="doc reviewed"/>

  <!-- ROS dependencies -->
  <depend package="roscpp"/>
  <depend package="rosbag"/>
  <depend package="geometry_msgs"/>
  <depend package="nodelet"/>
  <depend package="nodelet_topic_tools"/>
  <depend package="message_filters"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="tf"/>

  <!-- Eigen -->
  <depend package="common_rosdeps"/>
  <rosdep name="eigen"/>

  <!-- PCL -->
  <rosdep name="pcl"/>
  
  <!-- depend package="pcl" / -->
  <export>
    <!-- We go ahead and export pcl's flags here, to avoid having to depend
         on the pcl package, because that dependency can't be resolved
         properly by the rosrelease-legacy script. -->
    <cpp cflags="`pkg-config --cflags pcl_common-1.5 pcl_features-1.5 pcl_filters-1.5 pcl_io-1.5 pcl_kdtree-1.5 pcl_keypoints-1.5 pcl_octree-1.5 pcl_registration-1.5 pcl_sample_consensus-1.5 pcl_search-1.5 pcl_segmentation-1.5 pcl_surface-1.5 pcl_tracking-1.5 pcl_visualization-1.5` -I${prefix}/include -I${prefix}/cfg/cpp" lflags="`pkg-config --libs pcl_common-1.5 pcl_features-1.5 pcl_filters-1.5 pcl_io-1.5 pcl_kdtree-1.5 pcl_keypoints-1.5 pcl_octree-1.5 pcl_registration-1.5 pcl_sample_consensus-1.5 pcl_search-1.5 pcl_segmentation-1.5 pcl_surface-1.5 pcl_tracking-1.5 pcl_visualization-1.5` -lmysqlclient -Wl,-rpath,${prefix}/lib -L${prefix}/lib -lpcl_ros_tf -lpcl_ros_filters -lpcl_ros_io -lpcl_ros_tests -lpcl_ros_tf"/>
    <nodelet plugin="${prefix}/pcl_nodelets.xml"/>
  </export>
</package><package name="csm" path="" repo="scan_tools" repo_host="https://github.com/ccny-ros-pkg/scan_tools">
  <description brief="csm">

     A meta-package that downloads and installs Andrea Censi's Canonical Scan Matcher locally.
     Patches are applied to accept scans in cartesian (x,y) coordinates.
     More about CSM: http://www.cds.caltech.edu/~andrea/research/sw/csm.html

  </description>
  <author>Ivan Dryanovski, William Morris</author>
  <license url="http://www.gnu.org/licenses/lgpl-3.0.txt">LGPLv3</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/csm</url>
  <rosdep name="libgsl"/>

</package><package name="pr2_data_acquisition_tools" path="" repo="mapping" repo_host="http://code.in.tum.de/git/mapping.git">
  <description brief="pr2_data_acquisition_tools">
     pr2_data_acquisition_tools - for the data acquisition needed by registration stack.
  </description>
  <author>Dejan Pangercic</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_data_acquisition_tools</url>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="actionlib"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="tf"/>
  <depend package="pcl_ros"/>
  <depend package="message_filters"/>
  <!-- <depend package="amtec"/> -->
  <!-- <depend package="pcl_cloud_tools"/> -->
</package><package name="libax3500" path="" repo="UCLA-robomagellan" repo_host="https://github.com/garbear/UCLA-robomagellan">
  <description brief="libax3500">

     libax3500

  </description>
  <author>Garrett Brown</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/libax3500</url>

  <export>
    <!-- "-lboost_system" and other libraries are specified here to let *other* packages know to link in these libraries -->
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -llibax3500.a -lboost_system -lboost_thread"/>
  </export>
</package><package name="hrl_trajectory_playback" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="hrl_trajectory_playback">

    Simple interface for recording arm trajectories and replaying them.

  </description>
  <author>Travis Deyle and Kelsey Hawkins</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hrl_trajectory_playback</url>
  <depend package="hrl_lib"/>
  <depend package="hrl_pr2_lib"/>
  <depend package="pr2_controllers_msgs"/>
  <!-- <depend package="motion_planning_msgs"/> -->
</package><package name="ds_pr2_fridge_opener" path="/trunk/stacks/drink_serving/ds_pr2_fridge_opener" repo="bosch-ros-pkg-e" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg-e/code">
  <description brief="ds_pr2_fridge_opener">
     ds_pr2_fridge_opener
  </description>
  <author>Dejan Pangercic</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/fridge_opener</url>
  <depend package="bosch_drawer_executive"/>

</package><package name="interactivespaces-database" path="" repo="interactive-spaces" repo_host="https://code.google.com/p/interactive-spaces">
  <description brief="interactivespaces.database">
    Database support for Interactive Spaces nodes.
  </description>
  <author>Keith Hughes/khughes@google.com</author>
  <license>Apache License v2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://code.google.com/p/interactive-spaces/</url>

  <depend package="interactivespaces"/>

  <rosdep name="java"/>
</package><package name="locally_weighted_regression" path="" repo="usc-clmc-ros-pkg" repo_host="https://github.com/usc-clmc/usc-clmc-ros-pkg">
  <description brief="locally_weighted_regression">

     locally_weighted_regression

  </description>
  <author>Peter Pastor</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/locally_weighted_regression</url>

  <depend package="roscpp"/>
  <depend package="rosbag"/>

  <depend package="usc_utilities"/>

  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/lwrLib/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -llocally_weighted_regression -llwr"/>
  </export>
  
</package><package name="rosie_bringup" path="/stacks/rosie_robot/rosie_bringup" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="rosie_bringup">
    Launch files for bringing up the robot.
  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosie_bringup</url>
  <depend package="ias_maps"/>
  <depend package="powercube_node"/>
  <depend package="rosie_description"/>
  <depend package="jlo"/>
  <depend package="swissranger_camera"/>
  <depend package="robot_state_chain_publisher"/>
  <depend package="yarp2"/>
  <depend package="kdl"/>
  <depend package="simple_grasp_planner"/>
  <depend package="map_server"/>
  <depend package="power_relay"/>
  <depend package="pr2_computer_monitor"/>  
  <depend package="cop"/>
  <!-- rosie uses for the demo the following cop plugins, 
       so they should be also in rebuild (differences to pr2) -->
  <depend package="cop_transparent_objects_plugin"/>
  <depend package="cop_barcode_plugins"/>
  
  
  <depend package="diagnostic_aggregator"/>
  <depend package="tf"/>
  <depend package="gmapping"/>
  <depend package="amcl"/>
  <depend package="teleop_wii"/>
  <depend package="nav_pcontroller"/>
  <depend package="omni_ethercat"/>
  <depend package="soft_runstop"/>
  <depend package="motionControl"/>
  <depend package="kuka_fri"/>

  <!-- these packages are in oid5 -->
  <depend package="motionControl"/> 
  <depend package="sahand_api"/> 

  <!-- shoulder scanner related  -->
  <depend package="hokuyo_node"/>
  <depend package="laser_filters"/>
  <depend package="laser_assembler"/>
  <depend package="pr2_laser_snapshotter"/>

  <!-- Stuff people forgot to add -->
  <depend package="image_proc"/>
  <depend package="robot_self_filter"/>
  <depend package="collision_map"/>
  <depend package="robot_state_publisher"/>
  <depend package="ias_arm_kinematics"/>  
  <depend package="rosie_controller_manager"/>
  <depend package="costmap_2d"/>
</package><package name="pr2_computer_monitor" path="" repo="pr2_robot" repo_host="https://kforge.ros.org/pr2robot/hg">
  <description brief="Monitors computers on PR2 for temperature and usage">
Monitors the computer's processor and hard drives of the PR2 and publishes data to diagnostics. 
  </description>
  <author>Kevin Watts (watts@willowgarage.com)</author>
  <license>BSD</license>
  <review notes="" status="Doc Reviewed"/>
  <depend package="diagnostic_msgs"/>
  <depend package="rospy"/>
  <depend package="pr2_msgs"/>
  <depend package="roscpp"/> <!-- For network_detector -->
  <depend package="std_msgs"/> <!-- For network_detector -->
  <url>http://www.ros.org/wiki/pr2_computer_monitor</url>
  <rosdep name="ipmitool"/>
  <rosdep name="hddtemp"/>
  <rosdep name="sysstat"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="ui_responder" path="" repo="ros_applications" repo_host="https://kforge.ros.org/rosapps/hg">
  <description brief="ui_responder">

     ui_responder

  </description>
  <author>Eitan Marder-Eppstein</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ui_responder</url>
  <depend package="std_msgs"/>
  <depend package="rospy"/>
  <depend package="roslib"/>

  <rosdep name="python-qt4"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>

</package><package name="digiclops" path="/trunk/resources/digiclops" repo="ubc-ros-pkg" repo_host="https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg">
    <description brief="digiclops">
        PtGrey digiclops library
    </description>

    <author/>
    <license/>
    <review notes="" status="3rdparty"/>
    <url/>
    <export>
        <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -ldigiclops"/>
    </export>

</package><package name="pr2_trajectory_markers" path="" repo="uuisrc-pr2-pkgs" repo_host="https://github.com/uu-isrc-robotics/uu-isrc-robotics-pr2-pkgs">
  <description brief="Interactive marker to create trajectories on the PR2">

      An interactive marker to create and execute a trajectory on the PR2. It 
      supports cartesian gripper movements using a planner or collision-free IK,
      pointing the head to the marker, creating a trajectory and publishing it.
      It resembles pr2_marker_control, but it is not as features rich. But it
      supports creating and publishing (via bagrecord) trajectories.

  </description>
  <author>Lorenzo Riano lorenzo.riano@gmail.com </author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_trajectory_markers</url>
  <depend package="interactive_markers"/>
  <depend package="rospy"/>
  <depend package="visualization_msgs"/>
  <depend package="pr2_control_utilities"/>
  <depend package="geometry_msgs"/>
  <depend package="std_srvs"/>


</package><package name="cwru_base" path="" repo="cwru-ros-pkg" repo_host="http://github.com/cwru-robotics/cwru-ros-pkg">
  <description brief="cwru_base">

     This package is the interface between ROS and the CWRU specific robot stuff. Specifically, this package handles translating inputs to the cRIO and outputs from the cRIO into things that are more friendly to ROS.

  </description>
  <author>Eric Perko, Jesse Fish</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cwru_base</url>
  <depend package="std_msgs"/>
  <depend package="std_srvs"/>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="sicktoolbox_wrapper"/>
  <depend package="diagnostic_updater"/>

  <rosdep name="wxwidgets"/>
  <rosdep name="wxpython"/>
  <rosdep name="boost"/>

</package><package name="hrl_msgs" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="hrl_msgs">
    ROS messages that the Healthcare Robotics Lab, Georgia Tech often
    uses.
  </description>
  <author>Advait Jain</author>
  <license>New BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hrl_msgs</url>

</package><package name="lejos_speech" path="/trunk/ros/nxt_lejos_ros/lejos_speech" repo="lejos-ros-pkg" repo_host="https://lejos.svn.sourceforge.net/svnroot/lejos">
  <description brief="lejos_speech">

     lejos_speech

  </description>
  <author>lawrie</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/lejos_speech</url>

  <depend package="rosjava"/>
  <depend package="std_msgs"/>
  <depend package="nxt_lejos_ros_msgs"/>

  <export>
	    <rosjava-src location="src"/> 
	   	<rosjava-pathelement artifactId="org.lejos.ros.nodes.SpeechControl" built="true" groupId="org.lejos.ros" location="target/" version="0.0.1"/>
		<rosjava-pathelement built="true" location="build/"/>
    	<rosjava-pathelement location="/home/lawrie/workspace/snapshot/lib/pc/pccomm.jar"/>
     	<rosjava-pathelement location="/home/lawrie/workspace/snapshot/lib/pc/3rdparty/bluecove-gpl.jar"/>
    	<rosjava-pathelement location="/home/lawrie/workspace/snapshot/lib/pc/3rdparty/bluecove.jar"/>
  </export>
</package><package name="uffi" path="" repo="roll" repo_host="http://code.in.tum.de/git/roll.git">
  <description brief="uffi">

     uffi

  </description>
  <author>Kevin Rosenberg</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://uffi.b9.com/</url>

</package><package name="cogman_msgs" path="" repo="ias_common" repo_host="http://code.in.tum.de/git/ias-common.git">
  <description brief="Messages related to Manipulation">
  </description>
  <author>Alexis Maldonado</author>
  <license>GPLv3</license>
  <review notes="" status="unreviewed"/>
  <depend package="geometry_msgs"/>
  <depend package="actionlib_msgs"/>
  <depend package="actionlib"/>
  <depend package="vision_msgs"/>
</package><package name="shared_autonomy_msgs" path="/trunk/stacks/bosch_shared_autonomy_experimental/shared_autonomy_msgs" repo="bosch-ros-pkg-e" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg-e/code">
  <description brief="shared_autonomy_msgs">

     shared_autonomy_msgs

  </description>
  <author>Jihoon Lee</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/shared_autonomy_msgs</url>

</package><package name="cwru_maps" path="" repo="cwru-ros-pkg" repo_host="http://github.com/cwru-robotics/cwru-ros-pkg">
  <description brief="cwru_maps">

     cwru_maps

  </description>
  <author>Eric Perko</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cwru_maps</url>

</package><package name="cwru_configs" path="" repo="cwru-ros-pkg" repo_host="http://github.com/cwru-robotics/cwru-ros-pkg">
  <description brief="cwru_configs">

     cwru_configs

  </description>
  <author>Roberto</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cwru_configs</url>

</package><package name="ff" path="/trunk/3rdparty/ff" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="ff: pddl planner">
    ff: pddl planner. see http://www.loria.fr/~hoffmanj/ff.html
  </description>
  <author>J.Hoffmann()</author>
  <license>GPL</license>
</package><package name="rtt_sensor_msgs" path="" repo="rtt_common_msgs" repo_host="http://git.mech.kuleuven.be/robotics/rtt_common_msgs.git">
  <description brief="rtt_sensor_msgs">

    Provides an rtt typekit for ROS sensor_msgs messages.

    It allows you to use ROS messages transparently in
    RTT components and applications.

    This package was automatically generated by the
    create_rtt_msgs generator and should not be manually
    modified.

    See the http://ros.org/wiki/sensor_msgs documentation
    for the documentation of the ROS messages in this
    typekit.

  </description>
  <author>create_rtt_msgs Generator</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rtt_rosnode</url>
  <depend package="rtt_rosnode"/>
  <depend package="sensor_msgs"/>
  <depend package="rtt_std_msgs"/>
  <depend package="rtt_rosgraph_msgs"/>
  <depend package="rtt_geometry_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>


</package><package name="rcpdf" path="" repo="stacks/robot_contact_point" repo_host="git://github.com/laas/robot_contact_point">
  <description brief="Robot Contact Point Description Format parser">

    Robot Contact Point Description Format interfaces parser.

  </description>
  <author>Thomas Moulard/thomas.moulard@gmail.com</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rcpdf</url>

  <export>
    <rosdoc config="rosdoc.yaml"/>
    <cpp cflags="-I${prefix}/include `rosboost-cfg --cflags`" lflags="-L${prefix}/lib -lrcpdf -Wl,-rpath,${prefix}/lib"/>
  </export>

  <depend package="urdf"/>
  <depend package="urdf_interface"/>
  <depend package="rcpdf_interface"/>

  <rosdep name="boost"/>
  <rosdep name="tinyxml"/>
</package><package name="rms_rovio_environment" path="/trunk/distribution/wpi-rail-ros-pkg/rms/rms_rovio_environment" repo="wpi-rail-ros-pkg" repo_host="http://wpi-rail.googlecode.com/svn">
	<description brief="Launch files to start an RMS environment for the WowWee Rovio">The rms_rovio_environment package contains launch files that can be used to start RMS environment for the WowWee Rovio.</description>
	<author>Russell Toris</author>
	<license>BSD</license>
	<review notes="" status="unreviewed"/>
	<url>http://ros.org/wiki/rms_rovio_environment</url>

	<depend package="rovio_ctrl"/>
	<depend package="rovio_av"/>
	<depend package="rms_common"/>
</package><package name="gspeech" path="" repo="gspeech" repo_host="https://github.com/achuwilson/gspeech">
  <description brief="gspeech">

     gspeech

  </description>
  <author>achuwilsonGEC Sreekrishnapuram+91-9400418468</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://blog.achuwilson.in</url>
  <depend package="rospy"/>

</package><package name="robot_self_filter" path="" repo="arm_navigation" repo_host="https://kforge.ros.org/armnavigation/armnavigation">
  <description brief="robot_self_filter">
    The robot self filter is a package that allows you to filter out robot body parts from sensor information using the known positions and orientations of these parts. 
  </description>
  <author>Ioan Sucan</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/robot_self_filter</url>

  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="filters"/>
  <depend package="sensor_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="geometric_shapes"/>
  <depend package="urdf"/>
  <depend package="resource_retriever"/>
  <rosdep name="pcl"/>
  <depend package="shape_msgs"/>

  <rosdep name="assimp"/>
  <rosdep name="pkg-config"/>

  <export>
    <cpp cflags="-I${prefix}/include `rosboost-cfg --cflags`" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lrobot_self_filter"/>
  </export>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="biorob_gazebo" path="/trunk/biorob_common/biorob_gazebo" repo="biorob_common" repo_host="https://tu-darmstadt-ros-pkg.googlecode.com/svn">
  <description brief="biorob_gazebo">

     biorob_gazebo provides urdf and launch files for simulating the BioRob arm in gazebo.

  </description>
  <author>Stefan Kohlbrecher</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/biorob_gazebo</url>
  <depend package="biorob_description"/>
  
  <depend package="gazebo"/>
  <depend package="gazebo_tools"/>
  <depend package="pr2_gazebo_plugins"/>
  
  <export>
    <gazebo gazebo_media_path="${prefix}"/>
  </export>

</package><package name="DoorplateReader" path="/trunk/OCR4ROS/DoorplateReader" repo="roblab-whge-ros-pkg" repo_host="http://roblab-whge-ros-pkg.googlecode.com/svn">
  <description brief="DoorplateReader"> This Package reades textual information out of doorplates
  </description>
  <author>Maintained by C. Schäfer, B. Möller</author>
  <license>CreativeCommons BY-NC-SA License</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/DoorplateReader</url>
  <rosdep name="libusb"/>
  <depend package="roscpp"/>
  <depend package="libptp"/>
  <depend package="dynamixel"/>
  <depend package="sensor_msgs"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="std_msgs"/>
  <depend package="image_transport"/>
  <depend package="rcf_com_roomba_base"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="visualization_msgs"/>
  <depend package="tf"/>
  
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lcamera_interface -lcamera_mount_interface -lcamera_ctrl"/>
  </export>
</package><package name="neo_2dnav_mpo_500" path="" repo="neo_navigation" repo_host="https://github.com/neobotix/neo_navigation">
  <description brief="neo_2dnav_mpo_500">

     neo_2dnav_mpo_500

  </description>
  <author>Timo Hackel</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/neo_2dnav_mpo_500</url>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="move_base"/>
  <depend package="map_server"/>
  <depend package="amcl"/>
</package><package name="chameleon_msgs" path="/trunk/clearpath_chameleon/chameleon_msgs" repo="clearpath-ros-pkg" repo_host="http://clearpath-ros-pkg.googlecode.com/svn">
  <description brief="chameleon_msgs">

     chameleon_msgs

  </description>
  <author>Mike Purvis</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/chameleon_msgs</url>

</package><package name="learn_actions" path="" repo="uuisrc-pr2-pkgs" repo_host="https://github.com/uu-isrc-robotics/uu-isrc-robotics-pr2-pkgs">
  <description brief="learn_actions">

    Set of scripts-msgs-stuff for autonomous skills learning
    and improving. 

  </description>
  <author>Lorenzo Riano &lt;lorenzo.riano@gmail.com&gt;</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/learn_actions</url>
  <depend package="pr2_control_utilities"/>
  <depend package="tabletop_actions"/>
  <depend package="smach"/>
  <depend package="rosbag"/>
  <depend package="rospy"/>
  <depend package="sensor_msgs"/>
  <depend package="tf"/>
  <depend package="geometry_msgs"/>


</package><package name="m4atx" path="" repo="power_supplies" repo_host="http://ram.umd.edu/git/ros/power_supplies.git">
  <description brief="M4-ATX power supply support">

     m4atx provides monitoring and configuration for the Mini-Box M4-ATX
     power supply. It uses the m4api library from http://ram.umd.edu/.
 
  </description>
  <author>Ken Tossell/ktossell@umd.edu</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/m4atx</url>
  <depend package="roscpp"/>
  <depend package="power_msgs"/>
  <depend package="power_srvs"/>
  <rosdep name="libusb0"/>

</package><package name="simmechanics_to_urdf_experimental" path="/branches/stable/urdf_tools/simmechanics_to_urdf_experimental" repo="wu-ros-pkg" repo_host="https://wu-robotics.googlecode.com/svn">
  <description brief="Converts SimMechanics XML to URDF">
	Converts SimMechanics XML to URDF
  </description>
  <author>David V. Lu!!</author>
  <license>BSD</license>
  <url>http://ros.org/wiki/simmechanics_to_urdf</url>
  <depend package="rospy"/>
  <depend package="sensor_msgs"/>
  <depend package="tf"/>
  <depend package="urdf_python"/>
  <rosdep name="python-yaml"/>
</package><package name="hector_quadrotor_controller" path="/branches/fuerte/hector_quadrotor/hector_quadrotor_controller" repo="hector_quadrotor" repo_host="https://tu-darmstadt-ros-pkg.googlecode.com/svn">
  <description brief="hector_quadrotor_controller">

     hector_quadrotor_controller provides plugins for a quadrotor controller in gazebo.
     hector_quadrotor_aerodynamics simulates the quadrotor's motor, propeller and
     drag dynamics, given the four input voltages and the wind vector.
     hector_quadrotor_simple_controller is a simple controller allowing to command the quadrotor's velocity
     using a geometry_msgs/Twist message for teleoperation. 

  </description>
  <author>Johannes Meyer and Alexander Sendobry</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hector_quadrotor_controller</url>

  <depend package="roscpp"/>
  <depend package="gazebo"/>
  
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="hector_uav_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib"/>
    <gazebo plugin_path="${prefix}/lib"/>
  </export>

</package><package name="pcl_cloud_algos" path="" repo="mapping" repo_host="http://code.in.tum.de/git/mapping.git">
  <description>
    A collection of cloud algo[rithms] using nodelets.
  </description>

  <author>Nico Blodow, Dejan Pangercic, Zoltan-Csaba Marton</author>
  <license>BSD</license>
  <review notes="beta" status="experimental"/>

  <depend package="pcl_ias_sample_consensus"/>
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="triangle_mesh_msgs"/>
  <depend package="eigen"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="visualization_msgs"/>
  <!--depend package="octomap"/>
  <depend package="pcl_to_octree">
  <depend package="libsvm"/-->

  <export>
    <cpp cflags="-I${prefix}/include/" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lpcl_cloud_algos"/>
    <cloud_algos plugin="${prefix}/plugins.xml"/>
  </export>

</package><package name="wubble_mdp" path="/trunk/arrg/ua_verbs/wubble_mdp" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
  <description brief="wubble_mdp">

    An OO-MDP Environment for the Wubble Robot in simulation. 

  </description>
  <author>Daniel Hewlett</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/wubble_mdp</url>

  <depend package="roscpp"/>
  <depend package="actionlib"/>
  <depend package="tf"/>
  <depend package="bullet"/>

  <depend package="geometry_msgs"/>
  <depend package="move_base_msgs"/>
  <depend package="oomdp_msgs"/>
  <depend package="simulator_state"/>
  <depend package="wubble_description"/>
</package><package name="PhidgetServo" path="/trunk/Diamondback/Corobot/PhidgetServo" repo="roscorobot" repo_host="http://svn.code.sf.net/p/roscorobot/code">
  <description brief="PhidgetServo">
	Node interfacing the Phidget Advanced Servo Controller. 
	This package depends on the Phidget client library being installed manually:
		http://www.phidgets.com/drivers.php
  </description>
  <author>Morgan Cormier/mcormier@coroware.com</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/PhidgetServo</url>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="corobot_srvs"/>
  <depend package="corobot_msgs"/>&gt;


</package><package name="rovio_ctrl" path="" repo="rovio" repo_host="https://github.com/WPI-RAIL/rovio">
	<description brief="Control and query the movement devices on a WowWee Rovio">The rovio_ctrl package contains nodes to control and query the motor and head position of a WowWee Rovio.</description>
	<author>Russell Toris</author>
	<license>BSD</license>
	<review notes="" status="unreviewed"/>
	<url>http://ros.org/wiki/rovio_ctrl</url>

	<depend package="std_msgs"/>
	<depend package="roscpp"/>
	<depend package="rovio_shared"/>
	<depend package="rovio_av"/>
	<depend package="geometry_msgs"/>
	<depend package="joy"/>
	<depend package="sensor_msgs"/>
</package><package name="pr2_controller_configuration_gazebo" path="/stacks/pr2_simulator/trunk/pr2_controller_configuration_gazebo" repo="pr2_simulator" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_controller_configuration_gazebo">

  A copy of the pr2_controller_configuration package, for use in 
  the PR2 simulator.  We maintain two copies to allow for controller
  gains to be set differently between hardware and simulation.

  </description>
  <author>Wim Meeussen,John Hsu</author>
  <license>BSD</license>
  <review notes="2010/01/21" status="Doc reviewed"/>
  <url>http://ros.org/wiki/pr2_controller_configuration_gazebo</url>

  <depend package="pr2_controller_manager"/>
  <depend package="single_joint_position_action"/>
  <depend package="pr2_head_action"/>
  <depend package="pr2_gripper_action"/>
    
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="collision_free_arm_trajectory_controller" path="" repo="arm_navigation_experimental" repo_host="https://kforge.ros.org/armnavigation/experimental">
  <description brief="Collision free arm trajectory controller">

     collision free arm trajectory controller

  </description>
  <author>Sachin Chitta</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/collision_free_arm_trajectory_controller</url>
  <depend package="arm_navigation_msgs"/>
  <depend package="planning_environment"/>
  <depend package="trajectory_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="actionlib_msgs"/>
  <depend package="common_rosdeps"/>

  <rosdep name="eigen"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="perception_process_module" path="" repo="cram_highlevel" repo_host="https://github.com/moesenle/cram_highlevel">
  <description brief="perception_process_module">

     perception_process_module

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/perception_process_module</url>

  <depend package="cram_roslisp_common"/>
  <depend package="cram_process_modules"/>
  <depend package="vision_msgs"/>
  <depend package="vision_srvs"/>
  <depend package="cram_reasoning"/>
  <depend package="cram_plan_knowledge"/>
  <depend package="cram_designators"/>
  <depend package="designators_ros"/>
  <depend package="cljlo"/>
  <depend package="cljlo_utils"/>
  <depend package="cram_utilities"/>
  <depend package="cram_language"/>
  <depend package="std_msgs"/>
  <depend package="actionlib_lisp"/>
  <depend package="alexandria"/>
  <depend package="cram_plan_failures"/>
  <depend package="pr2_msgs"/>
  <depend package="cl_semantic_map_utils"/>
  <depend package="handle_detection"/>
  <depend package="ias_perception_actions"/>
  <depend package="semantic_map_cache"/>
  <depend package="cram_projection"/>
</package><package name="Bumblebee2_sim_server" path="/darpa_arm_sim_servers/Bumblebee2_sim_server" repo="darpa_arm_sim_servers" repo_host="http://svn.thearmrobot.com">
  <description brief="Bumblebee2_sim_server">

     Bumblebee2_sim_server

  </description>
  <author>DARPA ARM GFE Team</author>
  <license>private</license>

  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="Bumblebee2_msgs"/>
  <depend package="image_transport"/>
  <depend package="re2logger"/>
</package><package name="nltk" path="/trunk/arrg/ua_language/nltk" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="nltk">
    NLTK is the Natural Langauge Toolkit, available from http://www.nltk.org/. 
    This package is a wrapper to make NLTK functionality available in ROS.
    </description>

    <author>Derek Green</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/nltk</url>

    <rosdep name="nltk"/>
    <depend package="rospy"/>
</package><package name="rosh_common" path="" repo="rosh_robot_plugins" repo_host="https://kforge.ros.org/rosh/rosh_robot_hg">
  <description brief="ROSH common plugin">

     ROSH plugin for packages in the common stack

  </description>
  <author>Ken Conley</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosh_common</url>
  <depend package="rospy"/>
  <depend package="rosmsg"/>
  <depend package="rostopic"/>
  <depend package="roslib"/>
  <depend package="rosh"/>
  <depend package="actionlib"/>

  <!-- py_image_view stuff -->
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="nav_msgs"/>
  
</package><package name="contour_detector" path="/trunk/recognition/contour_detector" repo="ubc-ros-pkg" repo_host="https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg">
  <description brief="contour_detector">

     This package contains the code for contour detector node, with most of the detection
     and ros interface code lying in src/contour_detector/nodes and some c stuff for speed 
     in src/contour_detector/EdgeDetection.
     
     The contour detector node is in contour_driver.py, and this runs training and run-time
     behaviour. At test-time the node listens for detector_request messages and returns 
     hypothesis messages. It's a spammy detector, designed originally to be used in conjunction
     with stereo point clouds, but this was disabled.
 		
  </description>
  <author/>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/contour_detector</url>
   <depend package="rospy"/>
   <depend package="opencv2"/>
   <depend package="cv_bridge"/>
   <depend package="sift_detector"/>
   <depend package="recognition_msgs"/>
   <depend package="batchdetector"/>
   <rosdep name="opencv1"/>
</package><package name="openrave_robot_control" path="/trunk/openrave_planning/openrave_robot_control" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="A Robot Control Interface for OpenRAVE">
    Contains messages, services, and OpenRAVE clients to interface to robot hardware.

    - librobot_control - openrave plugin for ros client to talk to robot services
    - openravecontroller.h - base class for robot server using services
    - tfsender - given joint positions of the robot, sends the correct tf frames

    For more information on how to use this inside the openrave framework, see:
    http://openrave.programmingvision.com/wiki/index.php/ROS:ControllingRobots
  </description>
  <author>Rosen Diankov (rosen.diankov@gmail.com)</author>
  <license>Apache License, Version 2.0</license>
  <url>http://www.ros.org/wiki/openrave_robot_control</url>
  <export>
    <cpp cflags="-I${prefix}/srv/cpp -I${prefix}/msg/cpp -I${prefix}/include"/>
    <openrave pluginpath="${prefix}/lib"/>
    <rosdoc config="rosdoc.yaml"/>
  </export>
  <depend package="roscpp_sessions"/>
  <depend package="openrave"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="openrave_msgs"/>
  <depend package="tf"/>
</package><package name="power_srvs" path="" repo="power_supplies" repo_host="http://ram.umd.edu/git/ros/power_supplies.git">
  <description brief="power_srvs">

     power_srvs

  </description>
  <author/>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/power_srvs</url>

</package><package name="clearpath_tools" path="/trunk/clearpath_kinect/clearpath_tools" repo="clearpath-ros-pkg" repo_host="http://clearpath-ros-pkg.googlecode.com/svn">
  <description brief="clearpath_tools">

     The clearpath_tools package provides a set of Point Cloud Tools used by many of the Clearpath Demos, some of which are simply wrappers for existing PCL tools.

  </description>
  <author>Sean Anderson</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/clearpath_tools</url>

  <depend package="roscpp"/>
  <depend package="pcl_ros"/>

  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/src" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lVector3 -lbestfit -lClearpathPointCloudTools"/>
  </export>

</package><package name="aisoy_ros_server" path="" repo="aisoy-ros-pkg" repo_host="https://github.com/aisoy-robotics/aisoy-ros-pkg">
  <description brief="aisoy_ros_server"> 
    aisoy_ros_server: Node installed into the robot AISoy1 used to perform the actions (making calls to the API) received from a client node.
  </description> 
  <author>Adrian Jimenez, ajimenez@aisoy.com and Pablo Garcia, pgarcia@aisoy.com </author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/aisoy-ros-pkg</url>

  <depend package="std_msgs"/>
  <depend package="roscpp"/>
  <depend package="image_transport"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="aisoy_ros_client"/> <!-- to get aisoy headers .h -->

</package><package name="re_vision" path="/public/tags/latest/re_vision" repo="roboearth" repo_host="https://ipvs.informatik.uni-stuttgart.de/roboearth/repos">
  <description brief="re_vision">

     re_vision offers the service to recognize objects in images
     
     <p>
     This package is part of RoboEarth (EU FP7, grant 248942).
     </p>
  </description>
  <author>Dorian Galvez-Lopez</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.ros.org/wiki/re_vision</url>

  <depend package="std_msgs"/>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="re_msgs"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="std_msgs"/>
  <depend package="image_transport"/>
  <export>
    <cpp cflags="-I${prefix}/include/" lflags="-L${prefix}/lib -Wl -lDVision -lDUtilsCV -lDUtils"/>
  </export>

  <rosdep name="suitesparse"/>

</package><package name="cop_for_external_dependencies" path="/perception/cop_for_external_dependencies" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="cop_for_external_dependencies">

     package to link against, if not the full functionality of cop is
     necessary, but still some interfaces should be used.

  </description>
  <author>Ulrich Friedrich Klank</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <depend package="cognitive_perception"/>
  <export>
        <cpp lflags="-L${prefix}/lib -lcopext"/>
  </export>
                
</package><package name="filters" path="" repo="filters" repo_host="https://kforge.ros.org/common/filters">
<description brief="A standardized filter interface">

This library provides a standardized interface for processing data as a sequence 
of filters.  This package contains a base class upon which to build specific implementations
as well as an interface which dynamically loads filters based on runtime parameters.  

</description>
<author>Tully Foote/tfoote@willowgarage.com</author>
<license>BSD</license>
<review notes="2009-10-06" status="doc reviewed"/>
<url>http://ros.org/wiki/filters</url>
<depend package="rosconsole"/>
<depend package="roscpp"/>
<depend package="pluginlib"/>
<export>
  <cpp cflags="-I${prefix}/include `rosboost-cfg --cflags`" lflags=""/> <!--lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lfilter"/-->
  <filters plugin="${prefix}/default_plugins.xml"/>
</export>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="household_objects_database" path="/stacks/object_manipulation/branches/0.6-branch/household_objects_database" repo="object_manipulation" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="household_objects_database">

    Class definitions and a few convenience functions for interfacing
    with a specific SQL database, containing 3D models of a set of
    common household objects.

  </description>
  <author>Matei Ciocarlie, except for source files individually marked otherwise</author>
  <license>BSD, except for source files individually marked otherwise</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/household_objects_database</url>

  <depend package="database_interface"/>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="actionlib"/>
  <depend package="household_objects_database_msgs"/>
  <depend package="object_manipulation_msgs"/>

  <!-- for the register script -->
  <depend package="rospy"/>
  <depend package="rosgraph"/>  
  <depend package="roslib"/>  
  <depend package="rosservice"/>  
 
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lhousehold_objects_database"/>
  </export>
  
</package><package name="rve_geometry" path="" repo="visualization_engine" repo_host="https://kforge.ros.org/visengine/hg">
  <description brief="rve_geometry">

     Geometry functions for interacting with 3D shapes.

  </description>
  <author>Dave Hershberger</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rve_geometry</url>
  <depend package="roscpp"/>
  <depend package="rve_common"/>
  <depend package="rve_render_client"/>
  <depend package="rve_msgs"/>
  
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lrve_geometry"/>
  </export>

</package><package name="memcached_service" path="/trunk/cturtle/memcached_service" repo="seabee3-ros-pkg" repo_host="http://seabee3-ros-pkg.googlecode.com/svn">
  <description brief="memcached_service">

     memcached_service

  </description>
  <author>Michael Montalbo</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/memcached_service</url>
  <depend package="std_msgs"/>
  <depend package="rospy"/>
  <depend package="roscpp"/>

</package><package name="simple_object_capture" path="" repo="simple_object_capture" repo_host="https://kforge.ros.org/simplecap/simple_capture">
  <description brief="simple_object_capture">

    simple_object_capture

  </description>
  <author>Stuart Glaser</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/collect_foot</url>

  <depend package="pcl"/>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="message_filters"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="rosbag"/>
  <depend package="image_geometry"/>


</package><package name="cob_phidgets" path="" repo="cob_driver" repo_host="git://github.com/ipa320/cob_driver">
  <description brief="cob_phidgets">

     cob_phidgets

  </description>
  <author>Florian Weisshardt</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_phidgets</url>

  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="libphidgets"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>

</package><package name="bullet_reasoning" path="" repo="cram_physics" repo_host="https://github.com/moesenle/cram_physics">
  <description brief="bullet_reasoning">

     bullet_reasoning

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/bullet_reasoning</url>
  <depend package="alexandria"/>
  <depend package="cram_reasoning"/>
  <depend package="cram_manipulation_knowledge"/>
  <depend package="cl_bullet"/>
  <depend package="cl_bullet_vis"/>
  <depend package="cl_json_pl_client"/>
  <depend package="cl_urdf"/>
  <depend package="cl_tf"/>
  <depend package="kinematics_msgs"/>
  <depend package="kdl_arm_kinematics"/>
  <depend package="household_objects_database_msgs"/>
  <depend package="triangulate_point_cloud"/>
  <depend package="cl_semantic_map_utils"/>
  <depend package="arm_navigation_msgs"/>

</package><package name="buoy_identifier" path="/trunk/cturtle/buoy_identifier" repo="seabee3-ros-pkg" repo_host="http://seabee3-ros-pkg.googlecode.com/svn">
  <description brief="buoy_identifier">

     buoy_identifier

  </description>
  <author>Dhruv</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/buoy_identifier</url>
  <depend package="std_msgs"/>
  <depend package="roscpp"/>
  <depend package="base_libs"/>

</package><package name="mod_probcog" path="/tags/latest/mod_probcog" repo="knowrob" repo_host="http://code.in.tum.de/pubsvn/knowrob">
  <description brief="mod_probcog">

    Integration of KnowRob with the ProbCog library providing statistical relational learning and reasoning methods. 

  </description>
  <author>Daniel Nyga, Moritz Tenorth</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/mod_probcog</url>
  <depend package="ias_knowledge_base"/>
  <depend package="srldb"/>
  <depend package="comp_temporal"/>
  <depend package="comp_spatial"/>
  <!--  for tumutils.jar:  -->
  <depend package="mod_vis"/>
  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>
</package><package name="pr2_2dnav_slam" path="/stacks/pr2_navigation_apps/trunk/pr2_2dnav_slam" repo="pr2_navigation_apps" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="SLAM-based navigation for the PR2 robot.">

     This application allows the PR2 to navigate autonomously while also building a map of its environment as it drives along.

  </description>
  <author>Eitan Marder-Eppstein</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_2dnav_slam</url>
  <depend package="pr2_navigation_slam"/>
  <depend package="pr2_navigation_perception"/>
  <depend package="pr2_navigation_teleop"/>
  <depend package="pr2_machine"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="rosmanual" path="/stacks/ros_experimental/trunk/rosmanual" repo="ros_experimental" repo_host="https://code.ros.org/svn/ros">
  <description brief="rosmanual">

     The ROS Manual

  </description>
  <author>Ken Conley/kwc@willowgarage.com</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/rosmanual</url>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="R1_launch" path="" repo="JKU_Robotic_Stack" repo_host="https://github.com/AaronMR/JKU_Robotic_Stack">
  <description brief="R1_launch">

     R1_launch

  </description>
  <author>aaronmr</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/R1_launch</url>

</package><package name="robotiq_s_model_visualization" path="/trunk/robotiq/robotiq_s_model_visualization" repo="swri-ros-pkg" repo_host="http://swri-ros-pkg.googlecode.com/svn">
  <description brief="robotiq_s_model_visualization">

     robotiq

  </description>
  <author>Shaun Edwards</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/robotiq_s_model_visualization</url>

</package><package name="Bumblebee2_msgs" path="/darpa_arm_msgs/Bumblebee2_msgs" repo="darpa_arm_msgs" repo_host="http://svn.thearmrobot.com">
  <description brief="Bumblebee2_msgs">

     Bumblebee2_msgs

  </description>
  <author>DARPA ARM GFE Team</author>
  <license>GPL</license>

  <depend package="roscpp"/>

  <export>
    <cpp cflags="-I${prefix}/msg/cpp -I${prefix}/srv/cpp"/>
  </export>
  
</package><package name="rosserial_java" path="" repo="rosserial_java" repo_host="https://kforge.ros.org/rosserial/rosserial_java">
  <description brief="A Java-based implementation of the ROS serial protocol. ">
    A Java-based implementation of the ROS serial protocol. 
  </description>
  <author>Adam Stambler</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosserial_java</url>
  <depend package="rosjava"/>
  <depend package="rosserial_msgs"/>

  <export>
	<rosjava-src location="src/main/java"/>

	<rosjava-pathelement artifactId="org.ros.rosjava.rosserial_java" built="true" groupId="org.ros" location="target/" version="0.0.0"/>

  </export>
</package><package name="gui_communications" path="" repo="pandora-auth-ros-pkg" repo_host="https://github.com/pandora-auth-ros-pkg/pandora-auth-ros-pkg">
  <description brief="gui_communications">

   	Communications Requirements for PANDORA GUI

  </description>
  <author>Dimitrios Vitsios</author>
  <license>MIT</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/gui_communications</url>

</package><package name="mantis_object_manipulation" path="/trunk/mantis/mantis_object_manipulation" repo="swri-ros-pkg" repo_host="http://swri-ros-pkg.googlecode.com/svn">
  <description brief="mantis_object_manipulation">

     mantis_object_manipulation

  </description>
  <author>Jnicho</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/mantis_object_manipulation</url>
  <depend package="tf"/>
  <depend package="object_manipulator"/>
  <depend package="object_manipulation_msgs"/>
  <depend package="planning_environment"/>
  <depend package="visualization_msgs"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="object_manipulation_tools"/>
  <depend package="perception_tools"/>

</package><package name="object_tracker" path="" repo="haikalpribadi-ros-pkg" repo_host="https://github.com/haikalpribadi/haikalpribadi-ros-pkg">
  <description brief="object_tracker">

     object_tracker

  </description>
  <author>Haikal Pribadi</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/object_tracker</url>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="image_transport"/>
  <depend package="cv_bridge"/>
  <depend package="opencv2"/>

</package><package name="hector_quadrotor_gazebo" path="/branches/fuerte/hector_quadrotor/hector_quadrotor_gazebo" repo="hector_quadrotor" repo_host="https://tu-darmstadt-ros-pkg.googlecode.com/svn">
  <description brief="hector_quadrotor_gazebo">

     hector_quadrotor_gazebo provides a quadrotor model usable in gazebo simulation. It can be commanded using geometry_msgs/Twist messages.

  </description>
  <author>Stefan Kohlbrecher, Johannes Meyer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hector_quadrotor_gazebo</url>
  
  <depend package="gazebo_plugins"/>
  <depend package="hector_gazebo_plugins"/>
  <depend package="hector_sensors_gazebo"/>
  <depend package="hector_quadrotor_gazebo_plugins"/>
  <depend package="hector_quadrotor_controller"/>
  <depend package="message_to_tf"/>

</package><package name="lwr_simulation" path="" repo="lwr_robot" repo_host="https://github.com/RCPRG-ros-pkg/lwr_robot">
  <description brief="lwr_simulation">
	Simulation plugin and launch scripts for LWR in gazebo.
  </description>
  <author>Konrad Banachowicz</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/simulation</url>
  <depend package="gazebo"/>
  <depend package="kdl_parser"/>
  <depend package="kuka_lwr_fri"/>
  <export>
    <cpp cflags="-I${prefix}/cfg/cpp -I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib"/>
    <gazebo gazebo_media_path="${prefix}" plugin_path="${prefix}/lib"/>
  </export>

</package><package name="hector_ugv_description" path="/trunk/hector_ugv_common/hector_ugv_description" repo="hector_ugv_common" repo_host="https://tu-darmstadt-ros-pkg.googlecode.com/svn">
  <description brief="hector_ugv_description">

     hector_ugv_description

  </description>
  <author>Stefan Kohlbrecher</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hector_ugv_description</url>
  <depend package="hector_sensors_description"/>
  <depend package="hector_xacro_tools"/>

</package><package name="panasonic_blc111" path="" repo="ethzasl_drivers" repo_host="https://github.com/ethz-asl/ros-drivers">
  <description brief="panasonic_blc111">

     panasonic_blc111

  </description>
  <author>Cedric Pradalier</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/panasonic_blc111</url>
  <depend package="rospy"/>
  <depend package="gscam"/>

</package><package name="block_manipulation" path="/trunk/sandbox/block_manipulation" repo="vanadium-ros-pkg" repo_host="http://vanadium-ros-pkg.googlecode.com/svn">
  <description brief="block_manipulation">

     block_manipulation

  </description>
  <author>Michael Ferguson</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/block_manipulation</url>
  <depend package="roscpp"/>
  <depend package="actionlib"/>
  <depend package="visualization_msgs"/>
  <depend package="interactive_markers"/>
  <depend package="simple_arm_server"/>
  <depend package="pcl_ros"/>

</package><package name="usc_cameradc1394" path="/trunk/usc_cameradc1394" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="DC1394 Calibrated Camera Driver">
    Customizable camera streaming using dc1394 ROS driver. Parameters it uses:

    display - shows the image on the local computer
    cameraguid - hex string, if specified will only open a camera with this guid
    cameraindex - index of the camera to start if cameraguid is not present
    mode - any one of opencv modes to set, for example: &quot;MODE_640x480_YUV422&quot;
    framerate - number of frames a second to publish
    KK_fx,KK_fy,KK_cx,KK_cy - intrinsic parameters such that KK = [fx 0 cx; 0 fy cy; 0 0 1]
    kc_k1,kc_k2,kc_p1,kc_2 - radial distortion coefficients to undistort the image
    colorfilter - color conversion for debayering, can be
               &quot;COLOR_FILTER_RGGB&quot;, &quot;COLOR_FILTER_GBRG&quot;, &quot;COLOR_FILTER_GRBG&quot;, &quot;COLOR_FILTER_BGGR&quot;
    compression - how to compress the data before sending, can be &quot;none&quot;, &quot;png&quot;, &quot;jpg&quot;, &quot;jpeg&quot;
  </description>
  <author>David Feil-Seifer, Original package by Rosen Diankov (rdiankov@cs.cmu.edu) for camera1394 with Jeremy Liebs, Kurt Konolige for dcam1394 files</author>
  <license>Apache License 2.0/BSD</license>
  <depend package="roscpp"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="image_transport"/>
  <depend package="sensor_msgs"/>
  <!--<depend package="libdc1394v2"/>-->
  <depend package="std_msgs"/>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -ldcam1394"/>
  </export>
</package><package name="fctuc_open_day" path="/stacks/lse_experiments/trunk/fctuc_open_day" repo="lse_experiments" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="fctuc_open_day">

      Small demo for the FCTUC open day.

  </description>
  <author>Gonçalo Cabrita and Pedro Sousa</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/fctuc_open_day</url>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="move_base_msgs"/>
  <depend package="lse_sensor_msgs"/>
  <depend package="roomba_500_series"/>
  <depend package="isr_maps"/>

</package><package name="schunk_sdh" path="" repo="schunk_modular_robotics" repo_host="git://github.com/ipa320/schunk_modular_robotics">
  <description brief="schunk_sdh">

     This package provides an interface for operating the schunk dexterous hand (SDH), including the tactile sensors.

  </description>
  <author>Florian Weisshardt</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/schunk_sdh</url>
  
  <depend package="roscpp"/>
  <depend package="urdf"/>
  <depend package="sensor_msgs"/>
  <depend package="trajectory_msgs"/>
  <depend package="actionlib"/>
  <depend package="cob_srvs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="control_msgs"/>
  <depend package="libntcan"/>
  <depend package="libpcan"/>
  <depend package="diagnostic_msgs"/>
  <depend package="rostest"/>
  <depend package="brics_actuator"/>

</package><package name="eros_bzip2" path="/trunk/packages/other/eros_bzip2" repo="eros" repo_host="https://code.ros.org/svn/eros">
  <description brief="Build recipe for cross-compiling bzip2">

	This provides a source package for compiling bzip2 (needed by boost).
	
	Ordinarily this is not useful as you would install via your system's
	installation method (e.g. apt-get for ubuntu), but for cross-compiling 
    it provides the recipe needed to make a toolchain ros-ready.

  </description>
  <author>Daniel Stonier (d.stonier@gmail.com)</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/eros_bzip2</url>
  <depend package="eros_license"/>
  <depend package="eros_build"/>
</package><package name="point_cloud_classifier" path="/trunk/arrg/ua_experimental/point_cloud_classifier" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
  <description brief="point_cloud_classifier">

     point_cloud_classifier

  </description>
  <author>Mohsen</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/point_cloud_classifier</url>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="sensor_msgs"/>
  <depend package="sklearn"/>
  <depend package="opencv2"/>


</package><package name="neo_base_mpo_700" path="" repo="neo_driver" repo_host="https://github.com/neobotix/neo_driver">
  <description brief="neo_base_mpo_700">

     neo_base_mpo_700

  </description>
  <author>neobotix</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/neo_base_mpo_700</url>
  <depend package="cob_base_drive_chain"/>
  <depend package="cob_undercarriage_ctrl"/>
  <depend package="cob_bringup"/>
</package><package name="tagmapper_cu" path="/trunk/tagmapper_cu" repo="prairiedog" repo_host="http://prairiedog.googlecode.com/svn">
  <description brief="tagmapper_cu">

     tagmapper_cu

  </description>
  <author>common</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/tagmapper_cu</url>
  <depend package="std_msgs"/>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="stargazer_cu"/>
  <depend package="localization_cu"/>
  <depend package="geometry_msgs"/>
  <depend package="irobot_create_rustic"/>

  <export>
    <cpp cflags="-I${prefix}/msg/cpp"/>
  </export>

</package><package name="pr2_recorder_data" path="" repo="usc-clmc-ros-pkg" repo_host="https://github.com/usc-clmc/usc-clmc-ros-pkg">
  <description brief="pr2_recorder_data">

     pr2_recorder_data

  </description>
  <author>Peter Pastor</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_recorder_data</url>

</package><package name="rosfs" path="/stacks/ros_experimental/trunk/rosfs" repo="ros_experimental" repo_host="https://code.ros.org/svn/ros">
  <description brief="rosfs">

     rosfs

  </description>
  <author>Josh</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosfs</url>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="roslib"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="schunk_planning" path="" repo="uuisrc-ros-pkg" repo_host="https://github.com/cburbridge/uuisrc-ros-pkg">
  <description brief="schunk_planning">

    A collection of packages and launch files to enable planning on a Schunk Arm 

  </description>
  <author>Lorenzo Riano lorenzo.riano@gmail.com</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/schunk_planning</url>
  <depend package="ompl_planning"/>
  <depend package="planning_environment"/>
  <depend package="trajectory_filter_server"/>
  <depend package="joint_trajectory_action"/>
  <depend package="move_arm"/>
  <depend package="collision_map"/>

</package><package name="roboframenet_bringup" path="" repo="roboframenet" repo_host="https://kforge.ros.org/appmanandroid/roboframenet">
  <description brief="roboframenet_bringup">

    roboframenet_bringup contains launch files for roboframenet as well as application and interface information for appmanandroid.

  </description>
  <author/>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/roboframenet_bringup</url>

</package><package name="nao_msgs" path="/trunk/humanoid_stacks/nao_robot/nao_msgs" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="Message and service declarations for the Nao humanoid">

     Message and service declarations for the Nao humanoid

  </description>
  <author>Armin Hornung, Stefan Osswald, Daniel Maier</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/nao_msgs</url>
  <depend package="geometry_msgs"/>
  <depend package="actionlib_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="trajectory_msgs"/>
  <depend package="nav_msgs"/>

</package><package name="robotino_grappler_calibration" path="/robotino-ros-pkg/trunk/robotino_grappler/robotino_grappler_calibration" repo="robotino-ros-pkg" repo_host="http://svn.openrobotino.org">
  <description brief="robotino_grappler_calibration">

     robotino_grappler_calibration

  </description>
  <author>robotino</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/robotino_grappler_calibration</url>
  <depend package="robotino_node"/>
  <depend package="robotino_msgs"/>

</package><package name="eros_rpc_latency" path="/trunk/tests/eros_rpc_latency" repo="eros" repo_host="https://code.ros.org/svn/eros">
  <description brief="Test utility for benchmarking rpc latencies">

     Generates statistical data providing a benchmark for rpc messaging latencies.

  </description>
  <author>Daniel Stonier</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/eros_rpc_latency</url>
  <depend package="roscpp"/>
  <depend package="std_srvs"/>

</package><package name="proximity_sensor_add_obstacles" path="/trunk/stacks/bosch_proximity_sensor_applications/proximity_sensor_add_obstacles" repo="bosch-ros-pkg-e" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg-e/code">
  <description brief="proximity_sensor_add_obstacles">

     proximity_sensor_add_obstacles

  </description>
  <author>Adrian Funk (Maintained by Philip Roan)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/proximity_sensor_add_obstacles</url>
  <depend package="roscpp"/>
  <depend package="arm_navigation_msgs"/>
  <depend package="proximity_sensor_driver"/>
  <depend package="proximity_sensor_tf"/>

</package><package name="topological_nav_msgs" path="/stacks/topological_navigation/trunk/topological_nav_msgs" repo="topological_navigation" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="topological_nav_msgs">

     topological_nav_msgs

  </description>
  <author>Bhaskara Marthi</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/topological_nav_msgs</url>
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>

</package><package name="nao_driver" path="/trunk/humanoid_stacks/nao_robot/nao_driver" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="Driver package for the Nao humanoid robot.">
    <p>
     Driver package for the Nao robot, providing access to walking commands, 
     joint angles, and sensor data (odometry, IMU, camera, ...).
     The most-current version is
     compatible with the Nao API version 1.6 or newer, connecting to a real or simulated Nao
     by wrapping Aldebaran Robotics' NaoQI API in Python. This requires 
     the &quot;lib&quot; directory of the Aldebaran SDK to be in your PYTHONPATH
     environment variable.
   </p>
  </description>
  <author>Armin Hornung, Stefan Osswald, Daniel Maier</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/nao_driver</url>

  <depend package="diagnostic_updater"/>
  <depend package="std_msgs"/>
  <depend package="std_srvs"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="trajectory_msgs"/>
  <depend package="nao_msgs"/>
  <depend package="humanoid_nav_msgs"/>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="actionlib"/>

</package><package name="actionlib_lisp" path="/stacks/roslisp_common/trunk/actionlib_lisp" repo="roslisp_common" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="actionlib_lisp - an implenetation of actionlib in Common Lisp">

     actionlib_lisp is a native implementation of the famous actionlib
     in Common Lisp. It provides a client and a simple server.

  </description>
  <author>Bhaskara Marthi, Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/actionlib_lisp</url>
  <depend package="roslisp_runtime"/>
  <depend package="actionlib_msgs"/>
  <depend package="cl_utils"/>
  
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="husky_kinect" path="" repo="clearpath_husky" repo_host="https://github.com/clearpathrobotics/clearpath_husky">
  <description brief="husky_kinect">
    This package contains launch files which run some of the demos
    from the clearpath_kinect stack on the Husky platform.
  </description>
  <author>Mike Purvis</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/husky_kinect</url>

  <depend package="husky_bringup"/>
  <depend package="openni_camera"/>
  <depend package="clearpath_tools"/>
  <depend package="clearpath_kinect_demo"/>

</package><package name="rosspawn" path="" repo="rosspawn" repo_host="http://github.com/timn/rosspawn">
  <description brief="rosspawn">
    ROSspawn allows to start, stop, and monitor ROS nodes remotely. Opposed
    to roslaunch it does not read files with configurations to load, but
    rather it exposes services and topics to inform about available
    ROS nodes (i.e. binaries in appropriate folders) which can then be
    started and stopped.
  </description>
  <author>Tim Niemueller</author>
  <license>GPLv2+</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosspawn</url>
  <depend package="roscpp"/>
  <depend package="roslib"/>
  <depend package="rospack"/>

</package><package name="heyu_X10" path="" repo="ros-heyu-x10" repo_host="lp:ros-heyu-x10">
  <description brief="heyu_X10">

    This is a simple ROS interface to the Heyu X10 home automation program: use it if you want to turn on your lights using ROS !!

  </description>
  <author>Ugo Cupcic / ugocupcic@gmail.com</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/heyu_X10</url>
  <depend package="rospy"/>

</package><package name="corobot_camera" path="/trunk/Diamondback/Corobot/corobot_camera" repo="roscorobot" repo_host="http://svn.code.sf.net/p/roscorobot/code">
  <description>

A node that interface the corobot's webcam.

The package is based on the package dynamic_uvc_cam from Stefan Diewald. Main changes are to start the camera right away.


  Package is GPL since some of its code is adapted from GPL programs such as guvcview</description>
  <author>Morgan Cormier/mcormier@coroware.com</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="sensor_msgs"/>
<!-- <depend package="sdlgl"/> -->
  <depend package="image_transport"/>
  <depend package="cv_bridge"/>
  <depend package="camera_calibration_parsers"/>
  <depend package="corobot_msgs"/>
  <depend package="corobot_srvs"/>
  <depend package="dynamic_reconfigure"/>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -luvc_cam"/>
  </export>
  <url/>
</package><package name="rosserial_java_node" path="" repo="rosserial_java" repo_host="https://kforge.ros.org/rosserial/rosserial_java">
  <description brief="rosserial_java_node">

     This package contains the node for the rosserial_java implementation.
    It has been sepparated from the library so that both the android and
    PC implementations can use the same rosserial_java backend.

  </description>
  <author>asher</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosserial_java_node</url>
  <depend package="rosserial_java"/>

<export>
	<rosjava-src location="src/main/java"/>
	<rosjava-pathelement artifactId="org.ros.rosjava.rosserial_java_node" built="true" groupId="org.ros" location="target/" version="0.0.0"/>
	<rosjava-pathelement artifactId="rxtx-osgi" groupId="org.rxtx" version="2.1.7"/>
</export>

</package><package name="hector_compressed_map_transport" path="/branches/fuerte/hector_slam/hector_compressed_map_transport" repo="hector_slam" repo_host="https://tu-darmstadt-ros-pkg.googlecode.com/svn">
  <description brief="hector_compressed_map_transport provides means for transporting compressed map data through the use of image_transport">

     hector_compressed_map_transport provides means for transporting compressed map data through the use of image_transport

  </description>
  <author>Stefan Kohlbrecher</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hector_compressed_map_transport</url>
  <depend package="image_transport"/>
  <depend package="nav_msgs"/>
  <depend package="cv_bridge"/>
  <depend package="opencv2"/>
  <depend package="hector_map_tools"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>

  <rosdep name="eigen"/>

</package><package name="cwru_voice" path="" repo="cwru-ros-pkg" repo_host="http://github.com/cwru-robotics/cwru-ros-pkg">
  <description brief="cwru_voice">

     cwru_voice

  </description>
  <author>Tony</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cwru_voice</url>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="std_msgs"/>
  <depend package="roslib"/>
  <depend package="joy"/>
  <rosdep name="gstreamer_pocketsphinx"/>
</package><package name="vrmagic_devkit_wrapper" path="/trunk/vrmagic_camera/vrmagic_devkit_wrapper" repo="vrmagic_camera" repo_host="https://tu-darmstadt-ros-pkg.googlecode.com/svn">
  <description brief="vrmagic_devkit_wrapper">
    A package wrapping the VRmagic Devkit available at the manufacturer website
  </description>
  <author>Stefan Kohlbrecher</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/vrmagic_devkit_wrapper</url>
  <depend package="roscpp"/>
  
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib  -L${prefix}/lib -lvrmusbcam"/>
  </export>
</package><package name="driver_base" path="/stacks/driver_common/trunk/driver_base" repo="driver_common" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Driver framework">
    A framework for writing drivers that helps with runtime reconfiguration, diagnostics and self-test.

    This package is currently for internal use only as its API is still
    under development and is expected to undergo significant changes.
  </description>
  <author>Blaise Gassend</author>
  <license>BSD</license>
  <review note="Jan 18 2010, empty API" status="Doc Reviewed"/>
  <depend package="roscpp"/>
  <depend package="self_test"/>
  <depend package="diagnostic_updater"/>
  <depend package="dynamic_reconfigure"/>
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp"/>
  </export>
  <url>http://www.ros.org/wiki/driver_base</url>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="srs_assisted_arm_navigation" path="" repo="srs_public" repo_host="git://github.com/ipa320/srs_public">
  <description brief="srs_assisted_arm_navigation">

Arm navigation package provided by dcgm-robotics@FIT group:
- assisted arm manipulation for RViz using Interactive Markers and Warehouse Viewer
- manual grasping plugin for RViz

The package is partially derived from the pr2_arm_navigation package. It modifies components developed for PR2 robot so that you can use it with COB. Moreover, the package also provides several services that simplifies usage of the COB arm navigation.

  </description>
  <author>Zdenek Materna (imaterna@fit.vutbr.cz), Michal Spanel (spanel@fit.vutbr.cz)</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/srs_assisted_arm_navigation</url>

  <depend package="roscpp"/>
  <depend package="rviz"/>
  <depend package="cob_arm_navigation"/>
  <depend package="cob_default_env_config"/>
  <depend package="cob_default_robot_config"/>
  <depend package="cob_navigation_global"/>
  <depend package="actionlib_msgs"/>
  <depend package="actionlib"/>
  <!--depend package="cob_script_server"/-->
  <depend package="cob_interactive_teleop"/>
  <depend package="srs_env_model_percp"/>
  <depend package="srs_interaction_primitives"/>
  <depend package="srs_assisted_arm_navigation_msgs"/>
  <depend package="cob_image_flip"/> <!-- todo -> move it + RVIZ + int. teleop to ui package ? -->
  <depend package="sensor_msgs"/>
  <depend package="message_filters"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib"/>
  </export>

</package><package name="lzr_u901_node" path="/trunk/dfki_sks_laser_drivers/lzr_u901_node" repo="dfki-sks-ros-pkg" repo_host="https://svn-agbkb.informatik.uni-bremen.de/dfki-sks-ros-pkg">
  <description brief="lzr_u901_node">

     BEA LZR U901 laser rangefinder driver.  The driver currently
     expects the connection with the RS485 port to be exposed through
     some (possibly emulated) tty device node.

  </description>
  <author>Rene Wagner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/lzr_u901_node</url>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="eigen"/>
  <depend package="timeutils"/>
  <rosdep name="boost"/>

  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>

</package><package name="irobot_create_description" path="/trunk/irobot_create_description" repo="aptima-ros-pkg" repo_host="http://aptima-ros-pkg.googlecode.com/svn">
    <description brief="URDF for Create mobile base">
    URDF description files for the Create mobile robot base from iRobot.
    </description>
    <author>Jeff Rousseau</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/irobot_create_description</url>

    <depend package="urdf"/>
    <depend package="xacro"/>
    <depend package="gazebo"/>
    <depend package="gazebo_tools"/>
    <depend package="fake_localization"/>
    <depend package="erratic_gazebo_plugins"/>

    <export>
        <gazebo gazebo_media_path="${prefix}"/>
    </export>

</package><package name="worldmodel_msgs" path="/trunk/hector_worldmodel/worldmodel_msgs" repo="hector_worldmodel" repo_host="https://tu-darmstadt-ros-pkg.googlecode.com/svn">
  <description brief="worldmodel_msgs">

     worldmodel_msgs

  </description>
  <author>Team Hector Darmstadt</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/worldmodel_msgs</url>

  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>

</package><package name="android_sensor_message" path="/trunk/jsk_smart_apps/android_sensor_message" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">


  <description brief="android_sensor_message">
     android_sensor_message
  </description>
  <author>Damon Kohler</author>
  <license>Apache 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/android_tutorial_pubsub</url>

  <depend package="jsk_gui_msgs"/>

</package><package name="rosie_execution_trace_visualization" path="/stacks/cram_demo_apps/rosie_execution_trace_visualization" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="rosie_execution_trace_visualization">

     rosie_execution_trace_visualization

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosie_execution_trace_visualization</url>
  <depend package="rosie_executive"/>
  <depend package="cram_reasoning"/>
  <depend package="cram_plan_knowledge"/>
  <depend package="cram_execution_trace"/>
  <depend package="cram_plan_library"/>
  <depend package="cram_roslisp_common"/>
  <depend package="cram_utilities"/>
  <depend package="designators"/>
  <depend package="designators_ros"/>  
  <depend package="cl_json_pl_server"/>
  <depend package="visualization_msgs"/>
  <depend package="tf_trajectory_visualization"/>
  <depend package="geometry_msgs"/>
  <depend package="ias_kitchen_defs"/>
  <depend package="table_costmap"/>

</package><package name="ds_pr2_2dnav" path="/trunk/stacks/drink_serving/ds_pr2_2dnav" repo="bosch-ros-pkg-e" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg-e/code">
  <description brief="ds_pr2_2dnav">

     ds_pr2_2dnav

  </description>
  <author>Dejan Pangercic</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ds_pr2_2dnav</url>
  <depend package="roscpp"/>
  <depend package="pr2_2dnav"/>
  <depend package="actionlib"/>
  <depend package="move_base_msgs"/>
</package><package name="pi_robot_description" path="/trunk/experimental/pi_robot/pi_robot_description" repo="pi-robot-ros-pkg" repo_host="http://pi-robot-ros-pkg.googlecode.com/svn">
  <description brief="pi_robot_description">

     pi_robot_description

  </description>
  <author>patrick</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pi_robot_description</url>
  <depend package="urdf"/>
  <depend package="xacro"/>
  
</package><package name="uvc_cam2" path="/trunk/freiburg_tools/uvc_cam2" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description>A node and utilities for webcams supporting the uvcvideo driver (e.g. Logitech cameras and many others).

  Package is GPL since some of its code is adapted from GPL programs such as guvcview</description>
  <author>Morgan Quigley, extended and maintained by Juergen Sturm</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="image_transport"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>

  <rosdep name="sdl"/>
  
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -luvc_cam"/>
  </export>
  <url/>
</package><package name="ssf_updates" path="" repo="ethzasl_sensor_fusion" repo_host="git://github.com/ethz-asl/ethzasl_sensor_fusion">
  <description brief="ssf_updates">

     Single Sensor Fusion (SSF) framework containing the update sensor modules

  </description>
  <author>Stephan Weiss, Markus Achtelik</author>
  <license>BSD</license>
  <review notes="under active development" status="unreviewed"/>
  <url>http://ros.org/wiki/ethzasl_sensor_fusion/ssf_updates</url>
  <depend package="roscpp"/>
  <depend package="ssf_core"/>
  <depend package="geometry_msgs"/>

</package><package name="pr2_teleop" path="2_teleop" repo="pr2_apps" repo_host="">
  <description brief="Teleoperated the PR2">
  This package contains launch files for starting joystick or
  keyboard-based teleoperation (remote control) of the PR2.
  </description>
  <author>Kevin Watts</author>
  <license>BSD</license>
  <url>http://ros.org/wiki/pr2_teleop</url>
  <review notes="" status="na"/>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="roscpp"/>
  <depend package="topic_tools"/>
  <depend package="actionlib"/>
  <depend package="rospy"/>
  <depend package="tf"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="turtlebot_interactive_markers" path="" repo="turtlebot_viz" repo_host="https://kforge.ros.org/turtlebot/turtlebot_viz">
  <description brief="Interactive control for the TurtleBot.">

    A package that allows controlling a TurtleBot from rviz using interactive markers. 

  </description>
  <author>Helen Oleynikova</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/turtlebot_interactive_markers</url>
 
  <depend package="roscpp"/>
  <depend package="visualization_msgs"/>
  <depend package="interactive_markers"/>

</package><package name="sba" path="/stacks/vslam/trunk/sba" repo="vslam" repo_host="https://code.ros.org/svn/ros-pkg">
  <description>
    Sparse bundle adjustment and Sparse pose adjustment.
  </description>
  <author>Kurt Konolige, Helen Oleynikova</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  
  <depend package="roscpp"/>
  <rosdep name="eigen"/>
  <depend package="bpcg"/>
  <depend package="std_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="geometry_msgs"/>
  
  <rosdep name="suitesparse"/>

  <export>
    <cpp cflags="-DSBA_CHOLMOD -I${prefix}/include -I${prefix}/msg/cpp" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lsba -lsba_vis"/>
    <rosdoc config="rosdoc.yaml"/>
  </export>

</package><package name="proxy" path="" repo="proxy_tools" repo_host="http://ram.umd.edu/git/ros/proxy_tools.git">
  <description brief="proxy">

     Proxy provides a repeater node. Using the proxy, several clients
     can subscribe to a topic on the other side of a slow network connection
     using no more bandwidth than what's needed for a single subscriber.

     This node can relay multiple topics, and it only subscribes to the
     topics to which its downstream nodes are listening.
  </description>
  <author>Ken Tossell</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/proxy</url>
  <depend package="roscpp"/>
  <depend package="topic_tools"/>

</package><package name="busbot_driver" path="/trunk/stacks/drink_serving/busbot_driver" repo="bosch-ros-pkg-e" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg-e/code">
  <description brief="Driver for iRobot Turtlebot and Roomba">

     For ROS bindings, please see turtlebot_node. 

     This is a generic driver for iRobot Turtlebot and Roomba.  Port
     of pyrobot.py by Damon Kohler.  It is currently labeled as
     turtlebot_driver pending review by the entire create community
     before using the name create_driver.

  </description>
  <author>Damon Kohler. Ported and maintained by Ken Conley and Melonee Wise. Adapted by Ben Pitzer</author>
  <license>MIT</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/turtlebot_driver</url>
  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>

</package><package name="rostweet" path="/trunk/rostweet/rostweet" repo="uji-ros-pkg" repo_host="http://uji-ros-pkg.googlecode.com/svn">
  <description brief="rostweet">

     rostweet is a twitter client for ROS. It allows your robots to send tweets to its followers, and to receive tweets from its following contacts.

  </description>
  <author>Mario Prats</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rostweet</url>
  <depend package="roslib"/>
  <depend package="roscpp"/>
  <depend package="twitcurl"/>
  <depend package="cv_bridge"/>
  <depend package="rostweet_msgs"/>
  <rosdep name="tinyxml"/>
  <rosdep name="curl"/>

</package><package name="geographic_msgs" path="" repo="geographic_info" repo_host="https://kforge.ros.org/geographicinfo/geographic_info">
  <description brief="geographic_msgs">

     ROS messages for Geographic Information Systems.

  </description>
  <author>Jack O'Quin</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/geographic_msgs</url>

  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="uuid_msgs"/>

</package><package name="pr2_assisted_teleop_app" path="" repo="pr2_assisted_teleop_app" repo_host="https://kforge.ros.org/pr2apps/pr2_assisted_teleop_app">
  <description brief="pr2_assisted_teleop">

     pr2_assisted_teleop

  </description>
  <author>Eitan Marder-Eppstein</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_assisted_teleop</url>
  <depend package="assisted_teleop"/>
  <depend package="pr2_teleop"/>
</package><package name="srs_human_sensing" path="" repo="srs_public" repo_host="git://github.com/ipa320/srs_public">
  <description brief="srs_human_sensing">

     srs_human_sensing

  </description>
  <author>Alex</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/srs_human_sensing</url>

  <depend package="srs_leg_detector"/>
  <depend package="cob_people_detection_msgs"/>
  <depend package="smach"/>
  <depend package="cob_people_detection"/>
  <depend package="smach_ros"/>
  <depend package="tf"/>
  <depend package="cob_people_detection_msgs"/>
  <depend package="cob_people_detection"/>
  <depend package="geometry_msgs"/>
  <depend package="srs_body_detector"/>
	

</package><package name="swissranger_camera_description" path="/trunk/arrg/ua_robots/swissranger_camera_description" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
  <description brief="swissranger_camera_description">

     swissranger_camera_description

  </description>
  <author>Antons Rebguns</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/swissranger_camera_description</url>
  <depend package="convex_decomposition"/>
  <depend package="ivcon"/>
  <depend package="urdf"/>

</package><package name="pr2_description_lowres" path="" repo="cram_physics" repo_host="https://github.com/moesenle/cram_physics">
  <description brief="pr2_description">

  This package contains the description (mechanical, kinematic, visual,
  etc.) of the PR2 robot.  The files in this package are parsed and used by
  a variety of other components.  Most users will not interact directly
  with this package.

  </description>
  <author>John Hsu, Eric Berger</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_description</url>
  <depend package="convex_decomposition"/>
  <depend package="ivcon"/>
  <depend package="urdf"/> <!-- Testing -->
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="base_trajectory_action" path="/trunk/base_trajectory_action" repo="mit-ros-pkg-trunk" repo_host="https://svn.csail.mit.edu/mit-ros-pkg">
  <description brief="base_trajectory_action">

     base_trajectory_action

  </description>
  <author>Jenny Barry</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/base_trajectory_action</url>
  <depend package="geometry_msgs"/>
  <depend package="arm_navigation_msgs"/>
  <depend package="actionlib"/>
  <depend package="tf"/>

</package><package name="neato_xv11_lds" path="" repo="smart-robotics-ros-pkg" repo_host="https://github.com/JBot/smart-robotics-ros-pkg">
  <description brief="neato_xv11_lds">

     neato_xv11_lds

  </description>
  <author>Joffrey</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/neato_xv11_lds</url>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="tf"/>

  <rosdep name="boost"/>
</package><package name="dynamixel_controllers" path="/stacks/dynamixel_motor/trunk/dynamixel_controllers" repo="dynamixel_motor" repo_host="https://ua-ros-pkg.googlecode.com/svn">
    <description brief="Python Dynamixel Controller Manager and Joint Controllers">
        This package contains a configurable node, services and a spawner script
        to start, stop and restart one or more controller plugins. Reusable
        controller types are defined for common Dynamixel motor joints. Both speed and
        torque can be set for each joint. This python package can be used by more
        specific robot controllers and all configurable parameters can be loaded
        via a yaml file.
    </description>

    <author>Antons Rebguns, Cody Jorgensen, Cara Slutter</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/dynamixel_controllers</url>

    <depend package="rospy"/>
    <depend package="actionlib"/>
    <depend package="dynamixel_driver"/>
    
    <depend package="std_msgs"/>
    <depend package="trajectory_msgs"/>
    <depend package="diagnostic_msgs"/>
    <depend package="dynamixel_msgs"/>
    <depend package="control_msgs"/>
</package><package name="pr2_2dnav_local" path="/stacks/pr2_navigation_apps/trunk/pr2_2dnav_local" repo="pr2_navigation_apps" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="Local navigation for the PR2 robot.">

     This application allows the PR2 to navigate autonomously in an odometric frame.

  </description>
  <author>Eitan Marder-Eppstein</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_2dnav_local</url>
  <depend package="pr2_navigation_perception"/>
  <depend package="pr2_navigation_local"/>
  <depend package="pr2_navigation_teleop"/>
  <depend package="pr2_machine"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="people_detector_node" path="/perception/people_detector_node" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="people_detector_node">
     people_detector_node wraps around the functionality of the http://tum-ros-pkg.svn.sourceforge.net/viewvc/tum-ros-pkg/3rdparty/people_detector_2d_laser/
     package in thus provides the hypotheses about the pose of human legs as seen in the 2.5D laser scan. 
     Classsifer's hypotheses are to be found in training_data subfolder, please also see the README file in people_detector_2d_laser package if you need to train 
     your own classifier.
  </description>
  <author>Oscar Martinez Mozos, Dejan Pangercic(ROS)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/people_detector_node</url>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="people_detector_2d_laser"/>
</package><package name="roboard_servos" path="/trunk/veltrop-ros-pkg/roboard/roboard_servos" repo="veltrop-ros-pkg" repo_host="https://veltrop-ros-pkg.svn.sourceforge.net/svnroot/veltrop-ros-pkg">
  <description brief="roboard_servos">

     Controls the position of servos based on joint_states.
     Also can modify the servo position based on gyroscopic data.

  </description>
  <author>Taylor Veltrop</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://taylor.veltrop.com/robotics/khrhumanoidv2.php?topic=veltrop-ros-pkg</url>
  
  <depend package="roscpp"/>
  <!-- <depend package="tinyxml"/> -->
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="roboard_roboio"/>
  <depend package="veltrobot_msgs"/>

</package><package name="collvoid_pr2" path="" repo="multi_robot_collision_avoidance" repo_host="https://kforge.ros.org/collvoid/collvoid">
  <description brief="collvoid_pr2">

     collvoid_pr2

  </description>
  <author/>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/collvoid_pr2</url>

</package><package name="rosh_robot" path="" repo="rosh_robot_plugins" repo_host="https://kforge.ros.org/rosh/rosh_robot_hg">
  <description brief="rosh 'robot' plugin">

     ROSH meta-plugin for the ROS 'robot' variant.

  </description>
  <author>Ken Conley</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosh_robot</url>
  <depend package="rosh"/>
  <depend package="rosh_common"/>
  <depend package="rosh_geometry"/>
</package><package name="motld" path="/trunk/motld_freiburg/motld" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="motld">

     motld

  </description>
  <author>Jost Tobias Springenberg</author>
  <author>Jan Wuelfing</author>
  <license>GPL v3</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/motld</url>
  <depend package="roscpp"/>
  <depend package="opencv2"/>
  <depend package="image_transport"/>
  <depend package="cv_bridge"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="tf"/>
  <depend package="sensor_msgs"/>

</package><package name="application_msgs" path="" repo="ros_applications" repo_host="https://kforge.ros.org/rosapps/hg">
  <description brief="application_msgs">

     application_msgs

  </description>
  <author/>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/application_msgs</url>

  <depend package="roslib"/>
  <depend package="std_msgs"/>
  <depend package="actionlib_msgs"/>
  <export>
    <cpp cflags="-I${prefix}/msg/cpp"/>
  </export>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="clearpath_sensors" path="/trunk/clearpath_common/clearpath_sensors" repo="clearpath-ros-pkg" repo_host="http://clearpath-ros-pkg.googlecode.com/svn">
  <description brief="clearpath_sensors">
     The clearpath_sensors package contains drivers for sensors we have had to use with no previously reliable support.
  </description>
  <author>Ryan Gariepy</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/clearpath_sensors</url>
  <rosdep name="python-serial"/>
  <depend package="rospy"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="std_msgs"/>
</package><package name="katana_description" path="" repo="katana_driver" repo_host="http://kos.informatik.uni-osnabrueck.de/katana_driver.git">
  <description brief="URDF description of the Katana arm">

     This package contains an URDF description of the Katana arm and all supporting mesh files.

  </description>
  <author>Martin Günther</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/katana_description</url>
  <depend package="urdf"/>
  <depend package="convex_decomposition"/>
  <depend package="ivcon"/>

</package><package name="ps3joy_umd" path="" repo="joystick_umd" repo_host="http://ram.umd.edu/git/ros/joystick_umd.git">
  <description brief="Playstation 3 SIXAXIS or DUAL SHOCK 3 joystick driver.">
    Local fork of ps3joy driver. Adds partial support for Bluetooth v1.
    Adds controller shutdown on PS3 button, computer shutdown upon press of
    all four top buttons, LED control from ROS [this ps3joy.py is a ROS node]
    and other details.

  </description>
  <author>ps3joy: Blaise Gassend and pascal@pabr.org (modified by ktossell@umd.edu)</author>
  <license>BSD</license>

  <review notes="" status="experimental"/>
  <depend package="roscpp"/>
  <depend package="joy"/>
  <url>http://www.ros.org/wiki/ps3joy_umd</url>
  <rosdep name="libusb"/>
  <rosdep name="joystick"/>
  <rosdep name="bluez"/>
  <rosdep name="python-bluez"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="find_base_pose" path="/highlevel/find_base_pose" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="find_base_pose">

     find_base_pose - find a base pose to make trajectories reachable for the arm/s

  </description>
  <author>Thomas Ruehr</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/find_base_pose</url>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="kinematics_msgs"/>
  <depend package="tf"/>
  <depend package="move_base_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="kinematics_base"/>
  <depend package="std_srvs"/>
  <depend package="visualization_msgs"/>
  <depend package="urdf"/>
  <depend package="pr2_arm_kinematics"/>
  <depend package="eigen"/>
  <depend package="eigen_conversions"/>
  <depend package="laser_geometry"/>

</package><package name="execution_trace_server" path="" repo="cram_highlevel" repo_host="https://github.com/moesenle/cram_highlevel">
  <description brief="execution_trace_service">

     execution_trace_service

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/execution_trace_service</url>
  <depend package="cram_reasoning"/>
  <depend package="cram_plan_knowledge"/>
  <depend package="cram_execution_trace"/>
  <depend package="cram_plan_library"/>
  <depend package="cram_roslisp_common"/>
  <depend package="cram_utilities"/>
  <depend package="cl_json_pl_server"/>

</package><package name="continuous_ops_task_manager" path="" repo="continuous_ops" repo_host="https://kforge.ros.org/contops/hg">
  <description brief="task_manager">

     task_manager

  </description>
  <author>Wim Meeussen</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/task_manager</url>
  <depend package="actionlib"/>
  <depend package="rospy"/>
  <depend package="roslib"/>
  <depend package="continuous_ops_msgs"/>

</package><package name="object_recognition_msgs" path="" repo="object_recognition" repo_host="git://github.com/wg-perception/ros-object_recognition">
  <description brief="object_recognition_msgs">
     object_recognition_msgs
  </description>
  <author>Ethan Rublee</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/object_recognition_server</url>
  <cpp cflags="-I${prefix}/include"/>

  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="std_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="arm_navigation_msgs"/>
</package><package name="re_comm_core" path="/public/tags/latest/re_comm_core" repo="roboearth" repo_host="https://ipvs.informatik.uni-stuttgart.de/roboearth/repos">
  <description brief="re_comm_core">

     re_comm_core

  </description>
  <author>Alexander Perzylo</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/re_comm_core</url>
  <depend package="rosjava_jni"/>
  <depend package="re_msgs"/>
  <depend package="re_srvs"/>

  <export>
    <java classpath="${prefix}/bin:${prefix}/lib/httpcomponents-client/commons-codec-1.4.jar:${prefix}/lib/httpcomponents-client/commons-logging-1.1.1.jar:${prefix}/lib/httpcomponents-client/httpclient-4.1.1.jar:${prefix}/lib/httpcomponents-client/httpclient-cache-4.1.1.jar:${prefix}/lib/httpcomponents-client/httpcore-4.1.jar:${prefix}/lib/httpcomponents-client/httpmime-4.1.1.jar:${prefix}/lib/jgrapht/jgrapht-jdk1.6.jar:${prefix}/lib/mysql/mysql-connector-java-5.1.13-bin.jar:${prefix}/lib/argo/argo-2.8.jar:${prefix}/lib/hermit/HermiT.jar:${prefix}/lib/vecmath/vecmath.jar"/>
  </export>

</package><package name="re_msgs" path="/public/tags/latest/re_msgs" repo="roboearth" repo_host="https://ipvs.informatik.uni-stuttgart.de/roboearth/repos">
  <description brief="RoboEarth's ROS message declarations">

     <p>
     re_msgs contains RoboEarth specific ROS message declarations.
     </p>
     <p>
     This package is part of RoboEarth (EU FP7, grant 248942).
     </p>
  </description>
  <author>Alexander Perzylo</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.ros.org/wiki/re_msgs</url>
  <versioncontrol type="svn" url="https://ipvs.informatik.uni-stuttgart.de/roboearth/repos/release"/>
  <!--<export> <rosdoc external="http://roboearth.org/wiki"/> </export> -->

  <depend package="geometry_msgs"/>
  <depend package="std_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/msg/cpp"/>
  </export>

</package><package name="zeroconf_android_jmdns_demos" path="" repo="zeroconf_android" repo_host="https://github.com/stonier/zeroconf_android">
  <description brief="Android packages for zeroconf testing/demos">

     Android packages for zeroconf testing/demo purposes.

  </description>
  <author>Daniel Stonier</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/zeroconf_android_jmdns_demos</url>
  
  <depend package="rosjava_bootstrap"/>
  <depend package="zeroconf_android_jmdns"/>
  <depend package="zeroconf_comms"/>
  
  <export>
    <rosjava-android-app target="android-10"/>
    <rosjava-src location="src"/>
    <rosjava-src location="gen"/>
    <rosjava-src location="res"/>
  </export>
</package><package name="watchdog_timer" path="" repo="pandora-auth-ros-pkg" repo_host="https://github.com/pandora-auth-ros-pkg/pandora-auth-ros-pkg">
  <description brief="watchdog_timer">

     A remote Watchdog Timer

  </description>
  <author>Miltiadis Allamanis</author>
  <license>MIT</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/watchdog</url>
  <depend package="roscpp"/> 
  
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib"/>
  </export>

</package><package name="cph_recognition" path="/trunk/freetail/cph_recognition" repo="swri-ros-pkg" repo_host="http://swri-ros-pkg.googlecode.com/svn">
  <description brief="cph_recognition">

     cph_recognition

  </description>
  <author>Brian</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cph_recognition</url>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="tabletop_object_detector"/>

</package><package name="pacman_turtles" path="" repo="multi_robot_collision_avoidance" repo_host="https://kforge.ros.org/collvoid/collvoid">
  <description brief="pacman_turtles">

     pacman_turtles

  </description>
  <author>Daniel Claes</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pacman_turtles</url>

</package><package name="tf2" path="" repo="geometry_experimental" repo_host="https://kforge.ros.org/geometry/experimental">
  <description brief="tf2">
    tf2 is the second generation of the transform libraray, which lets
    the user keep track of multiple coordinate frames over time. tf2
    maintains the relationship between coordinate frames in a tree
    structure buffered in time, and lets the user transform points,
    vectors, etc between any two coordinate frames at any desired
    point in time.
  </description>
  <author>Tully Foote, Wim Meeussen, Eitan Marder-Eppstein</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/tf2</url>

  <depend package="geometry_msgs"/>
  <depend package="tf2_msgs"/>
  <!-- For Python Binding Time Support -->
  <depend package="rospy"/>
  <!-- Needed for ros/message.h which is in autogenerated messages -->
  <depend package="roscpp"/>

 <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp -I${prefix}/srv/cpp" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -ltf2"/>
    <rosdoc config="rosdoc.yaml"/>
 </export>

</package><package name="automow_planning" path="" repo="au_automow_common" repo_host="https://github.com/Auburn-Automow/au_automow_common">
  <description brief="automow_planning">

     automow_planning

  </description>
  <author>William Woodall</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/automow_planning</url>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="roslib"/>
  <depend package="tf"/>
  <depend package="geometry_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="std_msgs"/>
  <depend package="automow_pcb"/>
  <depend package="automow_maps"/>
  <depend package="actionlib"/>
  <depend package="move_base_msgs"/>
  <depend package="std_srvs"/>

</package><package name="sr4k" path="/trunk/bumblebee2/camera_drivers_experimental/sr4k" repo="cornell-ros-pkg" repo_host="http://cornell-ros-pkg.googlecode.com/svn">
  <description brief="Mesa Imaging Swissranger 3000/4000 driver">

    This is a port of the older ROS driver for SR3K that used the
    libusb API.  This driver uses the newer libmesasr API (&gt;= 1.0)
    that can be found at http://www.mesa-imaging.ch/drivers.php.  This
    node is designed to work with the ROS image_pipeline with minimal
    dependencies.  

    Note: A compile time flag at the top of include/sr4k.h is
    currently used to switch back and forth between supporting SR3000
    and SR4000 devices.
  </description>
  <author>Patrick Beeson, Radu Rusu</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/sr4k</url>
  <depend package="image_transport"/>
  <depend package="camera_calibration_parsers"/> 
  <rosdep name="libmesasr"/>

</package><package name="prolog_perception" path="/knowledge/prolog_perception" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="prolog_perception">
     prolog_perception logically interacts with below enlisted perception nodes
     in order to create a multi-purpose multi-level solution space for perception
     in robotics.
  </description>
  <author>Dejan Pangercic</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.ros.org/wiki/prolog_perception</url>
  <depend package="mapping_srvs"/>
  <depend package="tabletop_msgs"/>
   <depend package="vision_srvs"/>
   <depend package="vision_msgs"/>
   <depend package="geometry_msgs"/>
   <depend package="sensor_msgs"/>
   <depend package="ias_table_srvs"/>
   <depend package="ias_table_msgs"/>
   <depend package="ias_table_srvs"/>
   <depend package="ias_knowledge_base"/>
   <depend package="comp_temporal"/>
</package><package name="comp_temporal" path="/tags/latest/comp_temporal" repo="knowrob" repo_host="http://code.in.tum.de/pubsvn/knowrob">
  <description brief="comp_temporal">

     Temporal reasoning methods for the knowledge base.

     Time points and intervals are supported, and the system can
     calculate if one interval subsumes another one, happens before
     or after another, and how long it takes.

  </description>
  <author>Moritz Tenorth</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/comp_temporal</url>
  
  <depend package="ias_knowledge_base"/>
  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>
</package><package name="clutter_segmentation" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="clutter_segmentation">

     Segmentation of 3d pointclouds in clutter vs. table surface
     Uses classifiers trained from 104 hand-labeled clutter table
     scans combing 3d LIDAR and camera color information.
     
     The original training data is at: www.hrl.gatech.edu/data/clutter
     
     Brunt of the work is done by: processor.py
     Main file is: run_segmentation_PR2.py

  </description>
  <author>Jason Okerman, Martin Schuster, Advisors: Prof. Charlie Kemp and Jim Regh, Lab: Healthcare Robotics Lab at Georgia Tech</author>  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/clutter_segmentation</url>
  <depend package="rospy"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="message_filters"/>
  <!--depend package="hrl_hokuyo"/-->
  <!--depend package="hrl_tilting_hokuyo"/-->
  <!--depend package="hokuyo"/-->
  <!--depend package="tf"/-->
  <depend package="opencv2"/>
  <depend package="hrl_lib"/>
  <depend package="pr2_clutter_helper"/>
  
  <!--Some image-processing and machine learning code currently uses opencv 2.0.  Roadmap is to upgrade everything to use ROS version of cv-->
  <rosdep name="python-opencv"/>

</package><package name="clearpath_kinect_demo" path="/trunk/clearpath_kinect/clearpath_kinect_demo" repo="clearpath-ros-pkg" repo_host="http://clearpath-ros-pkg.googlecode.com/svn">
  <description brief="clearpath_kinect_demo">

     The clearpath_kinect_demo package provides a set of basic demos that can be used with almost any robot and a Kinect. Launch files can be found in clearpath_husky and clearpath_turtlebot with robot specific parameters.

  </description>
  <author>Sean Anderson</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/clearpath_kinect_demo</url>

  <depend package="roscpp"/>
  <depend package="pcl_ros"/>

  <depend package="clearpath_tools"/>

  <export>
    <cpp cflags="-I${prefix}/src" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lClearpathDemoTools"/>
  </export>

</package><package name="srs_env_model_msgs" path="" repo="srs_public" repo_host="git://github.com/ipa320/srs_public">
  <description brief="srs_env_model_msgs">

Shared ROS messages definition provided by dcgm-robotics@FIT group.

  </description>
  <author>Vit Stancl (stancl@fit.vutbr.cz), Michal Spanel (spanel@fit.vutbr.cz)</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/srs_env_model_msgs</url>

  <depend package="nav_msgs"/>
  <depend package="arm_navigation_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib"/>
    <rosdoc config="rosdoc.yaml"/>
  </export>

</package><package name="pr2_machine" path="/stacks/pr2_common/trunk/pr2_machine" repo="pr2_common" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_machine">
    This package contains the xxx.machine files that describe the different hosts a node can be spawned on. Currently there is one machine file for the pr2 robot, and one for the simulated pr2 robot.
  </description>
  <author>Wim Meeussen</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_machine</url>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="gpc" path="/3rdparty/gpc" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="gpc">
    General Polygon Clipper library (http://www.cs.man.ac.uk/~toby/alan/software/index.html)
  </description>
  <author>Alan Murta</author>
  <license>free for non-commercial use</license>
  <review notes="" status="unreviewed"/>
  <url/>

  <export>
    <cpp cflags="-I${prefix}/include/" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lgpc"/>
  </export>
</package><package name="tf_broadcast_server" path="" repo="rcommander_core" repo_host="https://kforge.ros.org/rcommander/rcommander_core">
  <description brief="tf_broadcast_server">
    A server that lets clients post static transforms that will be 
    broadcasted as tf messages.
  </description>
  <author>Hai Nguyen (haidai@gmail.com)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/tf_broadcast_server</url>
  <depend package="tf"/>
  <depend package="geometry_msgs"/>
</package><package name="robot_mask" path="" repo="cram_physics" repo_host="https://github.com/moesenle/cram_physics">
  <description brief="robot_mask">

     robot_mask

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/robot_mask</url>
  <depend package="cl_bullet_vis"/>
  <depend package="bullet_reasoning"/>
  <depend package="tf"/>

</package><package name="common_rosdeps" path="" repo="common_rosdeps" repo_host="https://kforge.ros.org/common/rosdepcore">
  <description brief="common_rosdeps">Deprecated.</description>
  <author>Maintained by Wim Meeussen</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/common_rosdeps</url>

</package><package name="hrl_table_detect" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="hrl_table_detection">

     hrl_table_detection

  </description>
  <author>kelsey</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hrl_table_detection</url>
  <depend package="rospy"/>
  <depend package="roslaunch"/>
  <depend package="rosnode"/>
  <depend package="tf"/>
  <depend package="bullet"/>
  <depend package="pcl_ros"/>
  <depend package="pcl"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="image_transport"/>
  <depend package="hrl_cvblobslib"/>
  <depend package="nav_core"/>
  <depend package="move_base"/>
  <depend package="image_geometry"/>
  <depend package="tabletop_object_detector"/>


</package><package name="nodelet" path="" repo="nodelet_core" repo_host="https://kforge.ros.org/common/nodeletcore">
  <description brief="nodelet base class and wrappers">
    The nodelet package is designed to provide a way to run multiple
    algorithms in the same process with zero copy transport between
    algorithms.  
    
    This package provides both the nodelet base class needed for
    implementing a nodelet, as well as the NodeletLoader class used
    for instantiating nodelets.
  </description>
  <author>Tully Foote, Radu Bogdan Rusu</author>
  <license>BSD</license>
  <review notes="http://www.ros.org/wiki/nodelet/Reviews/2010-03-08_API_Review" status="API cleared"/>
  <url>http://ros.org/wiki/nodelet</url>
  <depend package="pluginlib"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="bondcpp"/>

  <rosdep name="uuid"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lnodeletlib -luuid"/>
  </export>
  <platform os="ubuntu" version="10.04"/>
  <platform os="ubuntu" version="10.10"/>
  <platform os="ubuntu" version="11.04"/>
</package><package name="reem_gazebo" path="" repo="reem_simulation" repo_host="https://github.com/pal-robotics/reem_simulation">
  <description> 3D REEM Simulator Launch Scripts. </description>
  <author>Pablo Garcia Martinez</author>
  <license>Modified BSD</license>
  <review notes="" status="unreviewed"/>
  <url/>

  <depend package="laser_filters"/>
  <depend package="reem_controller_configuration_gazebo"/>
  <depend package="reem_description"/>
  <depend package="pr2_gazebo_plugins"/>
  <depend package="reem_controller_plugin"/>
  <depend package="range_gazebo_plugin"/>
  <depend package="reem_ogre"/>
  <depend package="robot_mechanism_controllers"/>

  <depend package="gazebo"/>
  <depend package="gazebo_worlds"/>
  <depend package="ogre"/>

  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="std_msgs"/>

  <export>
    <gazebo gazebo_media_path="${prefix}"/>
  </export>
</package><package name="bosch_object_segmentation_gui" path="/trunk/stacks/bosch_shared_autonomy/bosch_object_segmentation_gui" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="bosch_object_segmentation_gui">

     A package for interactive object segmentation using GrabCut3D.

  </description>
  <author>Benjamin Pitzer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/bosch_object_segmentation_gui</url>

  <depend package="rviz"/>
  <depend package="ogre_tools"/>
  <depend package="actionlib"/>
  <depend package="tf"/>
  <depend package="actionlib_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="stereo_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="roscpp"/>
  <depend package="tabletop_object_detector"/>
  <depend package="active_realtime_segmentation"/>
  <depend package="rviz_interaction_tools"/>
  <depend package="opencv2"/>
  <depend package="grabcut_3d"/>
  <depend package="image_transport"/>
  <depend package="rgbd_assembler"/>
  <depend package="cv_bridge"/>

  <export>
    <cpp cflags="-I${prefix}/include `rosboost-cfg --cflags`" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lros `rosboost-cfg --lflags thread,signals`"/>
    <rviz plugin="${prefix}/lib/rviz_plugin.yaml"/>
  </export>

</package><package name="rcf_com_roomba_base" path="/trunk/RCF4ROS/com/rcf_com_roomba_base" repo="roblab-whge-ros-pkg" repo_host="http://roblab-whge-ros-pkg.googlecode.com/svn">
  <description brief="rcf_com_roomba_base">

     rcf_com_roomba_base
     
     The Roomba robot base driver for the communication layer in rcf4ros.
     
     Use this driver to control the Roomba's actors and read from the sensors.
     
     Features:
     * Moving with the differential drive unit
     * Control LEDs, vacuum and song mode
     * Odometric intgration an update of world frame robot pose

  </description>
  <author>B. Fabricius</author>
  <license>CreativeCommons BY-NC-SA License</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rcf_com_roomba_base</url>
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  <depend package="rcf_control_protocol"/>
  <depend package="std_srvs"/>
  <depend package="tf"/>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lroomba_controller "/>
  </export>

</package><package name="touchosc_bridge" path="" repo="rososc" repo_host="https://github.com/Auburn-Automow/rososc">
  <description brief="touchosc_bridge">

      TouchOSC_bridge provides the core functionality of communicating with ROS and the
      TouchOSC iOS application.

      It provides a standard interface to commmon TouchOSC features, such as accessing the
      acclerometer data, diagnostics data, active clients and tabpages, as well as the 
      ability to make iPhones vibrate.

      Also included is a default tabpage handler for tabpages with no specified Python
      module.

  </description>
  <author>Michael Carroll</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/touchosc_bridge</url>
  <depend package="osc_bridge"/>
  <depend package="pytouchosc"/>
  <depend package="sensor_msgs"/>
  <depend package="touchosc_msgs"/>
  <depend package="diagnostic_msgs"/>

  <export>
      <rosdoc config="rosdoc.yaml"/>
  </export>
</package><package name="cartesian_motion" path="" repo="itasc_tasks" repo_host="http://git.mech.kuleuven.be/robotics/itasc_tasks.git">
    <description brief="Cartesian Motion">
        This package contains a cartesian motion task.
	    Part of the iTaSC-Skill framework, itasc_tasks.
    </description>
    <license>BSD,LGPL</license>
    <author>Dominick Vanthienen</author>
    <url>http://www.orocos.org/itasc</url>
    <depend package="rtt"/>
    <rosdep name="eigen"/>
    <depend package="orocos_kdl"/>
    <depend package="ocl"/>
    <depend package="itasc_core"/>
</package><package name="cob_vision_utils" path="" repo="cob_perception_common" repo_host="git://github.com/ipa320/cob_perception_common">
  <description brief="cob_vision_utils">

     cob_vision_utils

  </description>
  <author>Jan Fischer</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_vision_utils</url>
  
  <depend package="roscpp"/>
  <depend package="opencv2"/>
  
  <rosdep name="tinyxml"/>

  <export>
    <cpp cflags="-I${prefix}/common/include" lflags="-Wl,-rpath,${prefix}/common/lib -L${prefix}/common/lib -lcob_vision_utils"/>
  </export>

</package><package name="image_transport" path="/stacks/image_common/trunk/image_transport" repo="image_common" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="image_transport">

     image_transport should always be used to subscribe to and publish images. It provides transparent
     support for transporting images in low-bandwidth compressed formats. Examples (provided by separate
     plugin packages) include JPEG/PNG compression and Theora streaming video.

  </description>
  <author>Patrick Mihelich</author>
  <license>BSD</license>
  <review notes="" status="doc reviewed"/>
  <url>http://ros.org/wiki/image_transport</url>
  <depend package="sensor_msgs"/>
  <depend package="pluginlib"/>
  <depend package="message_filters"/>
  <depend package="roscpp"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -limage_transport"/>
    <image_transport plugin="${prefix}/default_plugins.xml"/>
  </export>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="herb_agents" path="" repo="behavior_engine" repo_host="https://github.com/timn/ros-behavior_engine">
  <description brief="herb_agents">
   Agent scripts for HERB.
  </description>
  <author>Tim Niemueller</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/herb_agents</url>
  <depend package="roslua"/>
  <depend package="actionlib_lua"/>
  <depend package="lua_utils"/>
  <depend package="fawkes_lua"/>
  <depend package="skiller"/>
</package><package name="vicon_nodes" path="" repo="uuisrc-ros-pkg" repo_host="https://github.com/cburbridge/uuisrc-ros-pkg">
  <description brief="vicon_nodes">

     vicon_nodes
     
     A collection of simple nodes that use libvicon

  </description>
  <author>Chris Burbridge</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/vicon_nodes</url>
  <depend package="roscpp"/>
  <depend package="libvicon"/>
  <depend package="tf"/>
  <depend package="visualization_msgs"/>
  <rosdep name="libxml2"/>
  <rosdep name="boost"/>

</package><package name="android_tutorial_map_viewer" path="" repo="android_core" repo_host="https://code.google.com/p/rosjava.android/">
  <description brief="android_tutorial_map_viewer">
     android_tutorial_map_viewer
  </description>
  <author>Damon Kohler (damonkohler@google.com)</author>
  <license>Apache 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/android_tutorial_map_viewer</url>
</package><package name="gazebo_perception_process_module" path="" repo="cram_gazebo" repo_host="https://github.com/fairlight1337/cram_gazebo">
  <description brief="gazebo_perception_process_module">

    gazebo_perception_process_module

  </description>
  <author>Jan Winkler</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/gazebo_perception_process_module</url>
  
  <depend package="cram_roslisp_common"/>
  <depend package="cram_process_modules"/>
  <depend package="cram_reasoning"/>
  <depend package="cram_plan_knowledge"/>
  <depend package="cram_designators"/>
  <depend package="designators_ros"/>
  <depend package="cram_utilities"/>
  <depend package="cram_language"/>
  <depend package="cram_plan_failures"/>
  <depend package="gazebo_msgs"/>
  <depend package="cram_projection"/>
  <depend package="simple_knowledge"/>

</package><package name="graph_slam" path="/stacks/graph_mapping/branches/unstable-branch/graph_slam" repo="graph_mapping" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="graph_slam">

     graph_slam

  </description>
  <author>Bhaskara Marthi</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/graph_slam</url>
  <depend package="pose_graph"/>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="occupancy_grid_utils"/>
  <depend package="karto_scan_matcher"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lgraph_slam"/>
  </export>


</package><package name="cram_plan_knowledge" path="" repo="cram_highlevel" repo_host="https://github.com/moesenle/cram_highlevel">
  <description brief="cram_plan_knowledge">

     cram_occasions

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cram_occasions</url>
  <depend package="cram_reasoning"/>
  <depend package="cram_language"/>
  <depend package="cram_utilities"/>
  <depend package="cram_execution_trace"/>
  <depend package="alexandria"/>
  <depend package="cram_designators"/>
  <depend package="designators_ros"/>  
  <depend package="cram_process_modules"/>

</package><package name="roscopter" path="" repo="roscopter" repo_host="https://code.google.com/p/roscopter">
  <description brief="roscopter">

     roscopter

  </description>
  <author>Yogesh Alok Girdhar</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/roscopter</url>
  <depend package="rospy"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>

</package><package name="test_rve" path="" repo="visualization_engine" repo_host="https://kforge.ros.org/visengine/hg">
    <description brief="Robot VIsualiZer">
    
    A 3d visualization environment for robots using ROS.
    
    </description>
    <author>Josh Faust</author>
    <license>BSD</license>
    <review notes="" status="Doc reviewed"/>
    <url>http://code.ros.org/wiki/rviz</url>
    <depend package="roscpp"/>
    <depend package="rosconsole"/>
    <depend package="eigen"/>
    <depend package="rve_msgs"/>
    <depend package="rve_common"/>
    <depend package="rve_interfaces"/>
    <depend package="rve_interface_gen"/>
    <depend package="rve_render_server"/>
    <depend package="rve_render_client"/>
    <depend package="rve_qt"/>
    <depend package="rve_transformer"/>
    <depend package="rve_common_transformers"/>
    <depend package="urdf"/>
    <depend package="nodelet"/>

  <rosdep name="qt4"/>

  <export>
    <nodelet plugin="${prefix}/nodelet_plugins.xml"/>
  </export>
</package><package name="grasp_motion" path="/trunk/student_projects/chair_grasping/grasp_motion" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="grasp_motion">
  Package for generating the arm movement for chair grasping with the simple_robot_control.
  </description>
  <author>Jan Metzger</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/grasp_motion</url>
  <depend package="std_msgs"/>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="visualization_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="tf"/>
  <depend package="actionlib"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="simple_robot_control"/>
  <depend package="std_srvs"/>
</package><package name="rms_youbot_gazebo_environment" path="/trunk/distribution/wpi-rail-ros-pkg/rms/rms_youbot_gazebo_environment" repo="wpi-rail-ros-pkg" repo_host="http://wpi-rail.googlecode.com/svn">
	<description brief="Launch files used to start a YouBot Gazebo RMS environment server.">Launch files used to start a YouBot Gazebo RMS environment server.</description>
	<author>Russell Toris</author>
	<license>BSD</license>
	<review notes="" status="unreviewed"/>
	<url>http://ros.org/wiki/rms_youbot_gazebo_environment</url>

	<depend package="rail_youbot_description"/>
	<depend package="youbot_overhead_localization"/>
	<depend package="rms_gazebo"/>
	<depend package="rms_common"/>
	<depend package="gazebo"/>
	<depend package="youbot_description"/>
	<depend package="xacro"/>
</package><package name="sr_kinematics" path="" repo="shadow_robot" repo_host="lp:sr-ros-interface">
  <description brief="A specific shadowhand package for computing finger Kinematics derived from arm_kinematics">
    A specific shadowhand package derived from arm_kinematics, for computing both forward and backward kinematics for the fingers except thumb.
    Solution is analytic. Developed as an alternative to arm_kinematics that cannot solve coupled joints.
  </description>
  <author>David LU, adapted for ShadowHand by Guillaume WALCK</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/arm_kinematics</url>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="urdf"/>
  <depend package="kdl_parser"/>
  <depend package="sensor_msgs"/>
  <depend package="tf_conversions"/>
  <depend package="kinematics_msgs"/>
</package><package name="fingertip_pressure" path="/stacks/pr2_ethercat_drivers/trunk/fingertip_pressure" repo="pr2_ethercat_drivers" repo_host="https://code.ros.org/svn/wg-ros-pkg">
<description brief="Fingertip Pressure">

This package provides access to the PR2 fingertip pressure sensors. This information includes:
<ul>
  <li>visualization of the pressure map in <a href="http://ros.org/wiki/rviz">Rviz</a> or in a standalone panel.</li>
  <li>calibration-related data such as scaling factors, zero points and reference frames. </li>
</ul>

</description>
<author>Blaise Gassend/blaise@willowgarage.com</author>
<license>BSD</license>
<review notes="" status="Doc reviewed"/>
<url>http://ros.org/wiki/fingertip_pressure</url>
<depend package="pr2_msgs"/>
<depend package="rospy"/>
<depend package="geometry_msgs"/>
<depend package="visualization_msgs"/>
<depend package="rostest"/>
<rosdep name="wxwidgets"/>
<export>
  <cpp cflags="-I${prefix}/msg/cpp"/>
</export>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="rosjs_tests" path="/trunk/stacks/remote_lab/rosjs_tests" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="rosjs_tests">
    rosjs tests.
  </description>
  <author>Benjamin Pitzer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosjs_tests</url>
  <!-- depend package="rosjs"/ -->
  <depend package="rosjs_common"/>
  <depend package="rosjs_visualization"/>
  <depend package="rosjs_remotelabwidgets"/>
</package><package name="realtime_urdf_filter" path="" repo="realtime_urdf_filter" repo_host="https://github.com/blodow/realtime_urdf_filter">
  <description brief="realtime_urdf_filter">

     realtime_urdf_filter

  </description>
  <author>Nico Blodow</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/realtime_urdf_filter</url>
  
  <depend package="urdf"/>
  <depend package="tf"/>
  <!-- right now, we find openni through pkg-config -->
  <!--depend package="openni" /-->
  <depend package="resource_retriever"/>
  <depend package="assimp"/>
  <depend package="sensor_msgs"/>
  <depend package="cv_bridge"/>
  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>

</package><package name="pioneer_arm_description" path="" repo="gt-ros-pkg.humans" repo_host="https://code.google.com/p/gt-ros-pkg.humans">
  <description brief="URDF for a Pioneer 5-DOF robotic arm">

     This package contains the URDF for a Pioneer 5-DOF robotic arm. Because this modular 
     arm may be attached to any existing robot (e.g. a Pioneer 3DX, a Pioneer 3AT, ...), 
     some amount of indirection is required to a viable URDF. A custom Python script is 
     included that reads an existing robot URDF/Xacro file, inserts the Pioneer Arm URDF,
     then loads the result into the standard &quot;robot_description&quot; parameter. The original 
     robot description is not modified by this process.

  </description>
  <author>Stephen Williams</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pioneer_arm_description</url>
  
  <export>
    <gazebo gazebo_media_path="${prefix}"/>
  </export>
  
  <depend package="xacro"/>
  <depend package="gazebo"/>
  <depend package="gazebo_plugins"/>
  <depend package="actuator_array_gazebo_plugin"/>
  <depend package="p2os_urdf"/>
  <depend package="rospy"/>

  <rosdep name="python-argparse"/>
  
</package><package name="flyatar_experiments" path="" repo="flyatar" repo_host="http://github.com/peterpolidoro/Flyatar">
  <description brief="flyatar_experiments">

     flyatar_experiments

  </description>
  <author>Peter Polidoro</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/flyatar_experiments</url>
  <depend package="rospy"/>
  <depend package="smach"/>
  <depend package="smach_ros"/>
  <depend package="stage_action_server"/>
  <depend package="image_gui"/>
  <depend package="plate_tf"/>
  <depend package="save_data"/>
  <depend package="geometry_msgs"/>

</package><package name="bma180" path="/trunk/stacks/bosch_drivers/bma180" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="bma180">

     This package contains drivers for Bosch BMA180 accelerometers. The BMA180 is a 3 axis sensor with configurable sensitivity ranges and event interrupts. As of 2/2012, the driver requires that the devices be connected to the host computer with a Sub20 interface device.

  </description>
  <author>Lukas Marti, Nikhil Deshpande, Philip Roan (Maintained by Philip Roan)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/bma180</url>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="sub20"/>
  
</package><package name="corobot_hokuyo" path="/trunk/Diamondback/Corobot/corobot_hokuyo" repo="roscorobot" repo_host="http://svn.code.sf.net/p/roscorobot/code">                                                                         
  <description brief="Hokuyo laser rangefinder drivers">
This corobot_hokuyo package is just an integration of the package hokuyo_node from Brian P. Gerkey, Jeremy Leibs and Blaise Gassend into the Corobot stack to make it easier for CoroWare's client to setup their robot.
A ROS node to provide access to SCIP 2.0-compliant Hokuyo laser range finders (including 04LX).</description>
  <author>Morgan Cormier/mcormier@coroware.com</author>
  <license>LGPL</license>
  <review notes="Dec 2009" status="API cleared"/>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="driver_base"/>
  <depend package="self_test"/>
  <depend package="diagnostic_updater"/>
  <depend package="dynamic_reconfigure"/>
  <url>http://www.ros.org/wiki/hokuyo_node</url>
  <export>
        <cpp cflags="-I${prefix}/msg/cpp -I${prefix}/srv/cpp -I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -llibhokuyo"/>
  </export>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="skin_config" path="/trunk/stacks/bosch_skin/skin_config" repo="bosch-ros-pkg-e" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg-e/code">
  <description brief="skin_config">

     skin_config

  </description>
  <author>Joerg Wagner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/skin_config</url>
  <depend package="roslib"/>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="skin_driver"/>
  <rosdep name="wxwidgets"/> 

</package><package name="win_patches" path="" repo="win_ros" repo_host="https://github.com/stonier/win_ros">
  <description brief="Temporarily stores patches for ros on windows till merged upstream">

     This is a temporary storage place for patches that enable ros on windows until these
     patches have been merged upstream.

  </description>
  <author>Daniel Stonier</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/win_patches</url>

</package><package name="pr2_controller_manager" path="" repo="pr2_mechanism" repo_host="https://kforge.ros.org/pr2mechanism/hg">
<description brief="PR2 Controller Manager">

<p>
The controller manager (CM) package provides the infrastructure to
run controllers in a hard realtime loop. In every cycle of the control
loop, all controllers loaded into CM will get triggered. The order in in
which the controllers are triggered is determined by the CM scheduler.
CM provides ROS services to load/start/stop/unload controllers.
</p>
<p>
The controller manager also enforces low level safety limits 
on the effort/velocity/position of each joint.
</p>

</description>
<author>Eric Berger berger@willowgarage.com, Stuart Glaser, Wim Meeussen</author>
<license>BSD</license>
<review notes="Realtime review pending" status="doc reviewed"/>
<url>http://ros.org/pr2_controller_manager</url>
<depend package="pr2_hardware_interface"/>
<depend package="pr2_mechanism_model"/>
<depend package="pr2_mechanism_diagnostics"/>
<depend package="pr2_description"/>
<depend package="pr2_controller_interface"/>
<depend package="pr2_mechanism_msgs"/>
<depend package="diagnostic_msgs"/>
<depend package="sensor_msgs"/>
<depend package="robot_state_publisher"/>
<depend package="realtime_tools"/>
<depend package="roscpp"/>
<depend package="tinyxml"/>
<depend package="rospy"/>
<depend package="rosparam"/>
<depend package="pluginlib"/>
<export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lpr2_controller_manager"/>
    <pr2_controller_interface plugin="${prefix}/test/controller_plugin.xml"/>
</export>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="segway_rmpX" path="" repo="segway-rmp-ros-pkg" repo_host="https://github.com/wjwwood/segway-rmp-ros-pkg">
  <description brief="segway_rmpX">

     segway_rmpX

  </description>
  <author>William Woodall</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/segway_rmpX</url>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="libsegwayrmp"/>

</package><package name="image_cache" path="" repo="cyphy_vis_slam" repo_host="https://cyphy-vis-slam.googlecode.com/hg/cyphy_vis_slam">
  <description brief="image_cache">

     image_cache

  </description>
  <author>Liz Murphy (liz.murphy@qut.edu.au)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/image_cache</url>
  <depend package="roscpp"/>
  <depend package="camera_calibration_parsers"/>
  <depend package="cv_bridge"/>
  <depend package="sensor_msgs"/>
  <depend package="stereo_msgs"/>
  <depend package="image_transport"/>
  <depend package="image_geometry"/>
  <depend package="message_filters"/>
  <depend package="slam_backend"/>
</package><package name="kinematics_base" path="" repo="arm_navigation" repo_host="https://kforge.ros.org/armnavigation/armnavigation">
  <description brief="kinematics_base">
    This is a base class for kinematics implementations
  </description>
  <author>Sachin Chitta</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/kinematics_base</url>
  <depend package="kinematics_msgs"/>
  <export>
   <cpp cflags="-I${prefix}/include"/>
  </export>

</package><package name="object_location_designators" path="" repo="cram_highlevel" repo_host="https://github.com/moesenle/cram_highlevel">
  <description brief="object_location_designators">

     object_location_designators

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/object_location_designators</url>
  <depend package="cram_designators"/>
  <depend package="cl_semantic_map_utils"/>
  <depend package="cl_json_pl_client"/>
  <depend package="cram_reasoning"/>
  <depend package="cram_projection"/>

</package><package name="nbv_main" path="/trunk/next_best_view/ros_nbv/nbv_main" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="nbv_main">

     nbv_main

  </description>
  <author>Christian Potthast</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/nbv_main</url>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="opencv2"/>
  <depend package="sensor_msgs"/>
  <depend package="pcl"/>
  <depend package="eigen"/>
  <depend package="visualization_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="actionlib"/>
  <depend package="move_base_msgs"/>
  <depend package="pr2_msgs"/>
  <depend package="nbv_utilities"/>
  
  
</package><package name="image_sync" path="/trunk/cturtle/image_sync" repo="seabee3-ros-pkg" repo_host="http://seabee3-ros-pkg.googlecode.com/svn">
  <description brief="image_sync">

     image_sync

  </description>
  <author>Edward T. Kaszubski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/image_sync</url>
  <depend package="image_transport"/>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>

</package><package name="annotation_srvs" path="" repo="ias_common" repo_host="http://code.in.tum.de/git/ias-common.git">
  <description>no description</description>
  <author>Ulrich F Klank</author>
  <license>GPL</license>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>  
  <depend package="triangle_mesh_msgs"/>
  <export>
        <cpp cflags="-I${prefix}/srv/cpp"/>
 </export>
</package><package name="rl_agent" path="/trunk/stacks/reinforcement_learning/rl_agent" repo="rl-texplore-ros-pkg" repo_host="http://rl-texplore-ros-pkg.googlecode.com/svn">
  <description brief="rl_agent">

     A set of reinforcement learning agents to learn various tasks. In addition, a framework for model based agents where any model learning and/or planning methods can be substituted in. Developed by <a href="http://www.cs.utexas.edu/~todd/">Todd Hester</a> and <a href="http://www.cs.utexas.edu/~pstone/">Peter Stone</a> at the University of Texas at Austin.

  </description>
  <author>Todd Hester</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rl_agent</url>
  <depend package="std_msgs"/>
  <depend package="roscpp"/>
  <depend package="rl_msgs"/>
  <depend package="tf"/>
  <depend package="rl_common"/>

  <export>
     <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib"/>
  </export>

</package><package name="landmark_finder" path="/trunk/cturtle/landmark_finder" repo="seabee3-ros-pkg" repo_host="http://seabee3-ros-pkg.googlecode.com/svn">
  <description brief="landmark_finder">

     landmark_finder

  </description>
  <author>Edward T. Kaszubski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/landmark_finder</url>
  <depend package="base_libs"/>
  <depend package="common_utils"/>
  <depend package="localization_defs"/>
  <depend package="color_blob_finder"/>
  <depend package="contour_matcher"/>
  <depend package="pipeline_finder"/>
  <depend package="color_classifier"/>
  <depend package="camera_interpolation"/>

  <export>
    <cpp cflags="-std=c++0x -I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -llandmark_finder"/>
  </export>

</package><package name="cob_3d_mapping_msgs" path="" repo="cob_environment_perception" repo_host="git://github.com/ipa320/cob_environment_perception">
  <description brief="cob_env_model_msgs">

     Message, service and action definitions for environment perception.

  </description>
  <author>Georg Arbeiter</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_env_model_msgs</url>

	<depend package="geometry_msgs"/>
	<depend package="sensor_msgs"/>
	<depend package="std_msgs"/>
	<depend package="actionlib_msgs"/>
	<depend package="tabletop_object_detector"/>
	
  <export>
    <cpp cflags="-I${prefix}/msg_gen/cpp -I${prefix}/srv_gen/cpp"/>
  </export>

</package><package name="slam_communications" path="" repo="pandora-auth-ros-pkg" repo_host="https://github.com/pandora-auth-ros-pkg/pandora-auth-ros-pkg">
  <description brief="slam_communications">

     The slam_communications package declares messages and services for the SLAM

  </description>
  <author>Stamadiadou Marina, Allamanis Miltiadis, Sykoudi Pelagia</author>
  <license>MIT</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/slam_communications</url>

</package><package name="interactivespaces-launcher" path="" repo="interactive-spaces" repo_host="https://code.google.com/p/interactive-spaces">
  <description brief="interactivespaces.launcher">
The launcher for Interactive Spaces masters and controllers.
  </description>
  <author>Keith Hughes/khughes@google.com</author>
  <license>Apache License 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://code.google.com/p/interactive-spaces/</url>

  <rosdep name="java"/>
</package><package name="icra_navigation_gazebo" path="/stacks/wg_robots_gazebo/trunk/icra_navigation_gazebo" repo="wg_robots_gazebo" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="icra_navigation_gazebo">

     icra_navigation_gazebo

  </description>
  <author>Eitan Marder-Eppstein</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/icra_navigation_gazebo</url>
  <depend package="gazebo"/>
  <depend package="roslib"/>
  <depend package="rospy"/>
  <depend package="actionlib"/>
  <depend package="pr2_2dnav_local"/>
  <depend package="pr2_gazebo"/>
  <depend package="move_base_msgs"/>
  <depend package="ros_epic_fail"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="ecl_type_traits" path="/trunk/ecl_core/ecl_type_traits" repo="ecl_core" repo_host="https://embedded-control-library.googlecode.com/svn">
  <description brief="Type traits and extensions beyond c++">

     Extends c++ type traits and implements a few more to boot.

  </description>
  <author>Daniel Stonier (d.stonier@gmail.com)</author>
  <license>BSD</license>
  <review notes="" status="doc reviewed"/>
  <url>http://snorriheim.dnsdojo.com/redmine/wiki/ecl</url>
  
  <depend package="ecl_license"/>
  <depend package="ecl_build"/>
  <depend package="ecl_config"/>
  <depend package="ecl_mpl"/>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lecl_type_traits"/>
  </export>
  <rosbuild2>
    <export>
      <include_dir>${ecl_type_traits_SOURCE_DIR}/include</include_dir>
      <lib>ecl_type_traits</lib>
    </export>
      <depend package="ecl_license"/>
      <depend package="ecl_build"/>
      <depend package="ecl_config"/>
      <depend package="ecl_mpl"/>
  </rosbuild2>
</package><package name="tf2_tools" path="" repo="geometry_experimental" repo_host="https://kforge.ros.org/geometry/experimental">
  <description brief="tf2_tools">

     tf2_tools

  </description>
  <author>Wim Meeussen</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/tf2_tools</url>
  <depend package="tf2_msgs"/>
  <depend package="tf2"/>
  <depend package="tf2_ros"/>
</package><package name="flyatar_action_client" path="" repo="flyatar" repo_host="http://github.com/peterpolidoro/Flyatar">
  <description brief="flyatar_action_client">

     flyatar_action_client

  </description>
  <author>Peter Polidoro</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/flyatar_action_client</url>
  <depend package="rospy"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="stage_action_server"/>

</package><package name="rosnode_rtc" path="/trunk/rtmros_common/rosnode_rtc" repo="rtm-ros-robotics/rtmros_common" repo_host="https://rtm-ros-robotics.googlecode.com/svn">
  <description brief="rosnode_rtc">

     rosnode_rtc

     This package gives transparency between RTM and ROS.

     rtmros-data-bridge.py is a RT-Component for dataport/topic.
     This automatically convert ROS/topic into RTM/dataport.

  </description>
  <author>Manabu Saito</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosnode_rtc</url>

  <depend package="rospy"/>
  <depend package="rostopic"/>

  <depend package="openrtm"/>

  <!-- for samples -->
  <depend package="roscpp_tutorials"/>
  <depend package="move_base_stage_tutorial"/>

  <depend package="jsk_tools"/>
  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>

</package><package name="dx100" path="/trunk/motoman/dx100" repo="swri-ros-pkg" repo_host="http://swri-ros-pkg.googlecode.com/svn">
  <description brief="dx100">

     The dx100 package includes nodes for interfacing with a motoman
	DX100 industrial controller.
     
  </description>
  <author>Shaun Edwards (Southwest Research Institute)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/dx100</url>
  <depend package="std_msgs"/>
  <depend package="roscpp"/>
  <depend package="actionlib"/>
  <depend package="trajectory_msgs"/>
  <depend package="actionlib_msgs"/>
  <depend package="control_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="simple_message"/>
  <depend package="urdf"/>

  <export>
    <cpp cflags="-I${prefix}/include/"/>
  </export>


</package><package name="ias_knowledge_base" path="/tags/latest/ias_knowledge_base" repo="knowrob" repo_host="http://code.in.tum.de/pubsvn/knowrob">
  <description brief="ias_knowledge_base">

    The KnowRob ontology and some other required OWL files (e.g. owl.owl defining the OWL language, and rdf-schema.xml defining the RDFS concepts).

  </description>
  <author>Moritz Tenorth, Lars Kunze</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.ros.org/wiki/ias_knowledge_base</url>
  <depend package="thea"/>
  <depend package="semweb"/>
  <depend package="ias_prolog_addons"/>
  <depend package="knowrob_actions"/>
  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>
</package><package name="nxt_msgs" path="" repo="foote-nxt" repo_host="https://nxt.foote-ros-pkg.googlecode.com/hg/">
  <description brief="nxt_msgs">
    The nxt_msgs package contains a set of messages to publish data coming from various NXT sensor.

  </description>
  <author>Wim Meeussen</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/nxt_msgs</url>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>

</package><package name="base_local_planner" path="" repo="navigation" repo_host="https://kforge.ros.org/navigation/navigation">
  <description brief="A local planner for a mobile base">

This package provides implementations of the Trajectory Rollout and Dynamic Window approaches to local robot navigation on a plane. Given a plan to follow and a costmap, the controller produces velocity commands to send to a mobile base. This package supports both holonomic and non-holonomic robots, any robot footprint that can be represented as a convex polygon or circle, and exposes its configuration as ROS parameters that can be set in a launch file. This package's ROS wrapper adheres to the BaseLocalPlanner interface specified in the <a href="http://ros.org/wiki/nav_core">nav_core</a> package. 

  </description>
  <author>Eitan Marder-Eppstein, Eric Perko</author>
  <license>BSD</license>
  <review notes="" status="Doc reviewed"/>
  <url>http://ros.org/wiki/base_local_planner</url>
  <depend package="std_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="rosconsole"/>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="roslib"/>
  <depend package="rospy"/>
  <depend package="pluginlib"/>
  <depend package="costmap_2d"/>
  <depend package="voxel_grid"/>
  <depend package="angles"/>
  <depend package="visualization_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="nav_core"/>
  <rosdep name="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="common_rosdeps"/>
  <rosdep name="eigen"/>
  <repository>http://pr.willowgarage.com/repos</repository>
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/cfg/cpp" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lbase_local_planner"/>
    <nav_core plugin="${prefix}/blp_plugin.xml"/>
  </export>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="rtt_control_msgs" path="" repo="orocos_tools" repo_host="https://github.com/RCPRG-ros-pkg/orocos_tools">
  <description brief="rtt_control_msgs">

    Provides an rtt typekit for ROS control_msgs messages.

    It allows you to use ROS messages transparently in
    RTT components and applications.

    This package was automatically generated by the
    create_rtt_msgs generator and should not be manually
    modified.

    See the http://ros.org/wiki/control_msgs documentation
    for the documentation of the ROS messages in this
    typekit.

  </description>
  <author>create_rtt_msgs Generator</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rtt_rosnode</url>
  <depend package="rtt_rosnode"/>
  <depend package="control_msgs"/>
  <depend package="rtt_actionlib_msgs"/>
  <depend package="rtt_std_msgs"/>
  <depend package="rtt_rosgraph_msgs"/>
  <depend package="rtt_geometry_msgs"/>
  <depend package="rtt_trajectory_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>


</package><package name="openrave_calibration" path="/trunk/openrave_planning/openrave_calibration" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="Sensor calibration routines using OpenRAVE's planning features">
    Package uses openrave planning and the robot_calibration stacks to calibrate a robot's sensors. The calibration only depends on the openrave/collada descriptions, therefore it is meant to be a relatively simple way of calibrating new robots with one-click.
  </description>
  <author>Rosen Diankov (rosen.diankov@gmail.com)</author>
  <license>Apache License, Version 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://openrave.programmingvision.com/index.php/ROS:openrave_calibration</url>
  <depend package="rospy"/>
  <depend package="openrave"/>
  <depend package="tf"/>
  <depend package="sensor_msgs"/>
  <depend package="resource_retriever"/>
  <depend package="posedetection_msgs"/>
  <depend package="roslaunch"/>
</package><package name="pr2_omni_teleop" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="pr2_omni_teleop">
    Integrated package that allows PR2 teleoperation with force feedback using two Phantom Omni devices
    and the stereo_anaglyph viewer. 
  </description>
  <author>Hai Nguyen, Marc Killpack  Advisor: Prof. Charlie Kemp, Lab: Healthcare Robotics Lab at Georgia Tech</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_omni_teleop</url>
  <depend package="pr2_controllers_msgs"/>
  <depend package="actionlib"/>
  <depend package="phantom_omni"/>
  <depend package="geometry_msgs"/>
  <depend package="hrl_camera"/>
  <depend package="pr2_msgs"/>
  <depend package="teleop_controllers"/>
  <depend package="polled_camera"/>
  <depend package="opencv2"/>
  <depend package="pr2_laser_snapshotter"/>
</package><package name="saliency_tracking" path="/trunk/arrg/ua_vision/saliency_tracking" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="saliency_tracking">

     saliency_tracking

    </description>
    <author>Antons Rebguns</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/saliency_tracking</url>
    
    <depend package="roscpp"/>
    <depend package="opencv2"/>
    <depend package="cv_bridge"/>
    <depend package="sensor_msgs"/>
    <depend package="geometry_msgs"/>
    <depend package="image_transport"/>
    <depend package="nmpt"/>
    <depend package="pr2_controllers_msgs"/>
    <depend package="std_msgs"/>
    <depend package="dynamic_reconfigure"/>
    <depend package="driver_base"/>

</package><package name="google_velocity_tracker" path="" repo="google" repo_host="https://code.google.com/p/rosjava.google/">
  <description brief="google_alpha_beta_velocity_tracker">

     google_alpha_beta_velocity_tracker

  </description>
  <author>Damon Kohler</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/google_alpha_beta_velocity_tracker</url>

  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  <depend package="tf"/>
</package><package name="coverage_3d_tools" path="/trunk/coverage_3d/coverage_3d_tools" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="Tools for coverage_3d stack.">

     Set of tools, e.g. for grasping a sponge, finding a table etc..
  </description>
  <author>Juergen Hess</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/coverage_3d_tools</url>
  <depend package="tf"/>
  <depend package="std_msgs"/>
  <depend package="std_srvs"/>
  <depend package="visualization_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="roscpp"/> 
  <depend package="rospy"/>
  <depend package="pcl"/>
  <depend package="coverage_3d_msgs"/>
  <depend package="image_transport"/>  
  <depend package="image_geometry"/>  
  <depend package="tf"/>
  <depend package="pcl_ros"/>
  <depend package="sensor_msgs"/>
  <depend package="rospy"/>
  <depend package="sensor_msgs"/>
  <depend package="arm_navigation_msgs"/>
  <depend package="planning_environment"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="kinematics_msgs"/>
  <depend package="laser_assembler"/>
  <depend package="angles"/>
  <rosdep name="opencv2.3"/>
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/srv_gen/cpp/include -I${prefix}/srv/cpp -I${prefix}/src" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lcoverage_3d_tools"/>
  </export>
</package><package name="SSC32_component" path="/branches/SSC32/SSC32_component" repo="rtc-us-ros-pkg-branches" repo_host="https://rtc-us-ros-pkg.svn.sourceforge.net/svnroot/rtc-us-ros-pkg">
  <description brief="SSC32_component">

     Example OROCOS component using the SSC32 library

  </description>
  <author>Steven Bellens - steven.bellens@mech.kuleuven.be</author>
  <license>LGPLv2.1 / BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/SSC32_component</url>

  <depend package="rtt"/>
  <depend package="SSC32_core"/>

</package><package name="libdc1394v2" path="/trunk/bumblebee2/camera_drivers_experimental/libdc1394v2" repo="cornell-ros-pkg" repo_host="http://cornell-ros-pkg.googlecode.com/svn">
<description brief="Firewire camera library">
libdc1394 is a library that provides a high level programming
interface for application developers who wish to control IEEE 1394
based cameras that conform to the 1394-based Digital Camera
Specifications (also known as the IIDC or DCAM Specifications)
</description>
<author>Damien Douxchamps</author>
<license>LGPL</license>
<review notes="" status="3rdparty"/>
<url>http://damien.douxchamps.net/ieee1394/libdc1394/</url>
<export>
  <cpp cflags="-I${prefix}/libdc1394v2/include" lflags="-Wl,-rpath,${prefix}/libdc1394v2/lib -L${prefix}/libdc1394v2/lib/ -ldc1394"/>
  <doxymaker external="http://damien.douxchamps.net/ieee1394/libdc1394/"/>
</export>
<versioncontrol type="svn" url="https://libdc1394.svn.sourceforge.net/svnroot/libdc1394/trunk/libdc1394"/>

  <rosdep name="automake"/>
  <rosdep name="autoconf"/>
  <rosdep name="libtool"/>
  <install>
    <arch><pacman pkg="libdc1394"/></arch>
  	<intrepid><apt pkg="libdc1394-22-dev"/></intrepid>
  </install>
</package><package name="spacenav" path="/stacks/joystick_drivers/trunk/spacenav" repo="joystick_drivers" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Spacenav driver and SDK">

    Open source, unofficial driver for the 3Dconnexion SpaceNavigator.
		This is a third party package. See the &quot;External Documentation&quot; link for
		API details. Currently, revision r91 of the upstream repository is being
		used in this package. 

  </description>
  <author>John Tsiombikas</author>
  <license>ZLib</license>
  <review notes="reviewed 10-1-2009" status="3rdparty doc reviewed"/>
  <url>http://spacenav.sourceforge.net/</url>
  <rosdep name="libx11-dev"/>
  <export>
    <cpp cflags="-I${prefix}/libspnav/include/" lflags="-L${prefix}/libspnav/lib/ -Wl,-rpath,${prefix}/libspnav/lib/ -L${prefix}/libspnav/lib64/ -Wl,-rpath,${prefix}/libspnav/lib64/ -lspnav -lX11"/>
    <doxymaker external="http://spacenav.sourceforge.net/"/>
  </export>
  <versioncontrol type="svn" url="https://spacenav.svn.sourceforge.net/svnroot/spacenav/trunk"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="roslaunch_tools" path="/stacks/wu_utils/trunk/roslaunch_tools" repo="wu-ros-pkg" repo_host="https://wu-ros-pkg.svn.sourceforge.net/svnroot/wu-ros-pkg">
  <description brief="roslaunch_tools">

     roslaunch_tools

  </description>
  <author>Erik Karulf</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/roslaunch_tools</url>
  <depend package="roscpp"/>

</package><package name="composite_node" path="/graveyard/composite/composite_node" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description>A node for accessing 3 sensing devices at once: a STOC, a SR4k, and a FLIR thermal camera.</description>
  <author>Radu Bogdan Rusu (rusu@cs.tum.edu)</author>
  <license>BSD</license>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="opencv2"/> 
  <depend package="cv_bridge"/>
  <depend package="flir_driver"/>
  <depend package="stoc_driver"/>
  <depend package="composite_swissranger"/>
  <depend package="tf"/>
  <url/>
</package><package name="rosh_desktop" path="/stacks/rosh_desktop_plugins/trunk/rosh_desktop" repo="rosh_desktop_plugins" repo_host="https://code.ros.org/svn/ros">
  <description brief="rosh plugins for 'desktop' variant">

     ROSH meta-plugin for the ROS 'desktop' variant.

  </description>
  <author>Ken Conley</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosh_desktop</url>
  <depend package="rosh"/>
  <depend package="rosh_robot"/>
  <depend package="rosh_visualization"/>  
</package><package name="cyphy_ros_gps" path="" repo="cyphy_legacy" repo_host="http://launchpad.net/cyphy">
  <description brief="cyphy_ros_gps">
	Package to parse NMEA strings and publish a very simple GPS messgae. Does not require the GPSD deamon.
  </description>
  <author>Steven Martin</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cyphy_gps</url>
  <depend package="sensor_msgs"/>
  <depend package="std_msgs"/>
  <depend package="rospy"/>
  <depend package="geometry_msgs"/>

</package><package name="compressed_depth_image_transport" path="/stacks/image_transport_plugins/trunk/compressed_depth_image_transport" repo="image_transport_plugins" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="compressed_depth_image_transport">

     compressed_depth_image_transport provides a plugin to image_transport for transparently sending
     depth images (raw, floating-point) using PNG compression.

  </description>
  <author>Julius Kammerl</author>
  <license>BSD</license>
  <review notes="2010/10/10" status="unreviewed"/>
  <url>http://www.ros.org/wiki/compressed_depth_image_transport</url>
  <depend package="image_transport"/>
  <depend package="cv_bridge"/>
  <depend package="dynamic_reconfigure"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lcompressed_depth_image_transport"/>
    <image_transport plugin="${prefix}/compressed_depth_plugins.xml"/>
  </export>

</package><package name="ecl_scripts" path="/trunk/ecl_tools/ecl_scripts" repo="ecl_tools" repo_host="https://embedded-control-library.googlecode.com/svn">
  <description brief="Scripts for ecl tools and utilities">

     Python scripts for ecl tools and utilities.

  </description>
  <author>Daniel Stonier</author>
  <license>BSD</license>
  <review notes="" status="doc reviewed"/>
  <url>http://snorriheim.dnsdojo.com/redmine/wiki/ecl</url>
  <depend package="ecl_license"/>

  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>
</package><package name="turtlebot_dashboard" path="" repo="turtlebot_viz" repo_host="https://kforge.ros.org/turtlebot/turtlebot_viz">
  <description brief="turtlebot_dashboard">

     turtlebot_dashboard

  </description>
  <author>Melonee Wise</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/turtlebot_dashboard</url>
  <depend package="rxtools"/>
  <depend package="robot_monitor"/>
  <depend package="std_msgs"/>
  <depend package="std_srvs"/>
  <depend package="rospy"/>
  <depend package="roslib"/>
  <depend package="turtlebot_node"/>

</package><package name="youbot_overhead_vision" path="/trunk/distribution/wpi-rail-ros-pkg/rail_youbot/youbot_overhead_vision" repo="wpi-rail-ros-pkg" repo_host="http://wpi-rail.googlecode.com/svn">
	<description brief="Vision software that can be used with overhead cameras in a YouBot world.">Vision software that can be used to locate a Kuka YouBot and obstacles inside of a room based on two overhead cameras.</description>
	<author>Fred Clinckemaillie</author>
	<author>Maintained by Russell Toris</author>
	<license>BSD</license>
	<review notes="" status="unreviewed"/>
	<url>http://ros.org/wiki/youbot_overhead_vision</url>

	<depend package="roslib"/>
	<depend package="roscpp"/>
	<depend package="std_msgs"/>
	<depend package="cv_bridge"/>
	<depend package="sensor_msgs"/>

	<rosdep name="yaml-cpp"/>
</package><package name="pytouchosc" path="" repo="rososc" repo_host="https://github.com/Auburn-Automow/rososc">
  <description brief="pytouchosc">

      PyTouchOSC is a Python module for interacting with *.touchosc layout files.  It
      provides a set of utilities for parsing tabpages and controls out of files created
      with the TouchOSC Editor application.

      Also included is a node for hosting layout files and transferring them to iOS devices.

  </description>
  <author>Michael Carroll</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pytouchosc</url>
  <depend package="rospy"/>

  <rosdep name="pybonjour"/>
  <rosdep name="lxml"/>

</package><package name="laser_signal_filter" path="" repo="parsec" repo_host="https://code.google.com/p/parsec">
  <description brief="laser_signal_filter">

     laser_signal_filter

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>Apache 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/laser_signal_filter</url>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="parsec_msgs"/>
  <depend package="ros_check"/>
</package><package name="extendedKalmanFilterComponentRobot" path="" repo="euRobotics_orocos_ws" repo_host="https://github.com/bellenss/euRobotics_orocos_ws">
    <description brief="Orocos extendedKalmanFilterComponentRobot package">
        This package contains the components of the extendedKalmanFilterComponent package
        It is a generic component estimated the state with a n'th (configurable) order system model and a linear analytic measurement model with additive gaussian noise.
    </description>
    <license>LGPLv2.1 / BSD</license>
    <author>Tinne De Laet</author>
    <depend package="rtt"/>
    <depend package="ocl"/>
    <depend package="orocos_bfl"/>
    <depend package="bfl_typekit"/>
    <depend package="tf"/>                                                                                                                                                                                    
    <depend package="rtt_ros_integration"/>                                                                                                                                                                   
    <depend package="rtt_ros_integration_geometry_msgs"/>  
    <depend package="rtt_ros_integration_sensor_msgs"/>  
    <depend package="geometry_msgs"/>  
    <depend package="std_msgs"/>  
    <export>
      <cpp cflags="-I${prefix}/src" lflags="-L${prefix}/lib/orocos/gnulinux -lextendedKalmanFilterComponentRobot-gnulinux -Wl,-rpath,${prefix}/lib"/>
    </export>
</package><package name="posedetectiondb" path="/trunk/jsk_visioncommon/posedetectiondb" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="Vision-based Pose Detection Database Scripts">
  </description>
  <author>Rosen Diankov (rdiankov@cs.cmu.edu)</author>
  <license>The Apache License 2.0</license>
  <export>
    <python path="${prefix}/src"/>
  </export>
  <depend package="std_msgs"/>
  <depend package="posedetection_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="rospy"/>
  <depend package="libsiftfast"/>
  <depend package="openrave"/>
  <depend package="cv_bridge"/>
  <depend package="tf"/>
  <sysdepend os="ubuntu" package="python-numpy" version="7.04-feisty"/>
  <sysdepend os="ubuntu" package="python-numpy" version="8.04-hardy"/>
  <sysdepend os="ubuntu" package="python-numpy" version="9.04-jaunty"/>
  <sysdepend os="ubuntu" package="python-scipy" version="7.04-feisty"/>
  <sysdepend os="ubuntu" package="python-scipy" version="8.04-hardy"/>
  <sysdepend os="ubuntu" package="python-scipy" version="9.04-jaunty"/>

  <rosdep name="opencv2"/>
</package><package name="color_blob_finder" path="/trunk/OIT/color_blob_finder" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="color_blob_finder">

     color_blob_finder

  </description>
  <author>David Feil-Seifer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/color_blob_finder</url>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="sensor_msgs"/>
  <depend package="image_transport"/>
  <depend package="image_geometry"/>
  <depend package="oit_msgs"/>
  <depend package="tf"/>

</package><package name="SR4000_msgs" path="/darpa_arm_msgs/SR4000_msgs" repo="darpa_arm_msgs" repo_host="http://svn.thearmrobot.com">
  <description brief="SR4000_msgs">

     SR4000_msgs

  </description>
  <author>DARPA ARM GFE Team</author>
  <license>GPL</license>

  <depend package="roscpp"/>

  <export>
    <cpp cflags="-I${prefix}/msg/cpp -I${prefix}/srv/cpp"/>
  </export>
  
</package><package name="corobot_gps" path="/trunk/Diamondback/Corobot/corobot_gps" repo="roscorobot" repo_host="http://svn.code.sf.net/p/roscorobot/code">
  <description brief="corobot_gps">

     corobot_gps connects to a GPSd server and broadcasts
     GPS fixes using the NavSatFix message.
     The package is based of the gpsd_client package made by Rob Thomson and Ken Tossell. 

  </description>
  <author>Morgan Cormier/mcormier@coroware.com</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/corobot_gps</url>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="corobot_msgs"/>
</package><package name="collision_proximity" path="" repo="arm_navigation_experimental" repo_host="https://kforge.ros.org/armnavigation/experimental">
  <description brief="collision_proximity">

     collision_proximity provides an API for maintaining distance fields through the planning_models paradigm. It provides functionality for generating distance fields from planning scenes, decomposing objects into swept sphere volumes, and finding distances and gradients for all points on a robot.

  </description>
  <author>Gil Jones</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/collision_proximity</url>
  <depend package="distance_field"/>
  <depend package="planning_models"/>
  <depend package="geometric_shapes"/>
  <depend package="planning_environment"/>
  <depend package="bullet"/>
  <depend package="kinematics_msgs"/>
  <!--<depend package="mesh_convex_decomposition"/>-->
  <depend package="spline_smoother"/>
  <depend package="arm_navigation_msgs"/>

 <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lcollision_proximity"/>
  </export>

</package><package name="re2gazeboPatch" path="/darpa_arm_sim_servers/re2gazeboPatch" repo="darpa_arm_sim_servers" repo_host="http://svn.thearmrobot.com">
  <description brief="Gazebo Patcher">
    Gazebo Plugins for Darm Sim.
  </description>
  <author>Andrew Somerville, Rorry Brenner</author>
  <license>BSD</license>

  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="pr2_manipulation_knowledge" path="" repo="cram_pr2" repo_host="https://github.com/moesenle/cram_pr2">
  <description brief="pr2_manipulation_knowledge">

     pr2_manipulation_knowledge

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_manipulation_knowledge</url>
  <depend package="cram_plan_knowledge"/>
  <depend package="cram_manipulation_knowledge"/>
  <depend package="cram_reasoning"/>
  <depend package="cl_semantic_map_utils"/>
  <depend package="cram_designators"/>
  <depend package="semantic_map_cache"/>

</package><package name="sbpl_cartesian_arm_planner" path="/sbpl_arm_planning/trunk/sbpl_cartesian_arm_planner" repo="sbpl_arm_planning" repo_host="https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs">
  <description brief="Motion Planning Research for a Robotic Manipulator">

  </description>
  <author>Benjamin Cohen/bcohen@seas.upenn.edu</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.ros.org/wiki/sbpl</url>

	<depend package="roscpp"/>
	<depend package="sbpl"/>
	<depend package="angles"/>
	<depend package="kdl"/>
	<depend package="kdl_parser"/>
	<depend package="distance_field"/>
	<depend package="urdf"/>
	<depend package="pr2_arm_kinematics"/>
  <depend package="sbpl_arm_planner"/>
  <depend package="bullet"/>
  <depend package="tf"/>

  <!-- Debugging - temporary  -->
  <depend package="visualize_arm"/>

  <export>
    <cpp cflags="-I${prefix}/include  -O3 -g" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib  -lsbpl_cartesian_arm_planner"/>
  </export>

</package><package name="door_executive" path="/trunk/dynamic_door_manipulation/door_executive" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="Launchfiles and scripts to use the door_* modules">
    Launchfiles and scripts to use the modules of the dynamic_doors stack.


  </description>
  <author>Felix Endres</author>
  <license/>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/door_executive</url>
  <depend package="articulation_models"/>
  <depend package="articulation_msgs"/>
  <depend package="ee_cart_imped_action"/>
  <depend package="std_srvs"/>
  <depend package="checkerboard_detector2"/>
  <depend package="door_manipulation_tools"/>
  <depend package="door_perception"/>
  <depend package="door_perception_msgs"/>

</package><package name="jpeg_streamer" path="" repo="camera_umd" repo_host="http://ram.umd.edu/git/ros/camera_umd.git">
  <description brief="jpeg_streamer">

     tools for streaming JPEG-formatted CompressedImage topics over HTTP

  </description>
  <author>Ken Tossell/ktossell@umd.edu</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/jpeg_streamer</url>
  <depend package="sensor_msgs"/>
  <depend package="roscpp"/>
  <depend package="image_transport"/>
</package><package name="imagesift" path="/trunk/jsk_visioncommon/imagesift" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="Computes SIFT Features">
    For every image, computes its sift features and send a new message with the image, its intrinsic parameters, and the features.
    Parameters include:
    display - shows the image on the local computer
  </description>
  <author>Rosen Diankov (rdiankov@cs.cmu.edu), Kei Okada</author>
  <license>LGPL</license>
  <export>
    <cpp cflags="-I${prefix}/msg/cpp"/>
  </export>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="posedetection_msgs"/>
  <depend package="image_transport"/>
  <depend package="cv_bridge"/>
  <depend package="libsiftfast"/>

  <rosdep name="opencv2"/>
</package><package name="robotino_grappler_node" path="/robotino-ros-pkg/trunk/robotino_grappler/robotino_grappler_node" repo="robotino-ros-pkg" repo_host="http://svn.openrobotino.org">
  <description brief="robotino_grappler_node">
  
  </description>
  <author>indorewala@servicerobotics.eu</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/robotino_grappler_node</url>
  <depend package="robotino_node"/>
  <depend package="robotino_msgs"/>
  <depend package="actionlib"/>
  <depend package="control_msgs"/>
  <depend package="trajectory_msgs"/>
  <depend package="robotino_grappler_msgs"/>
</package><package name="rcconsole" path="" repo="parsec" repo_host="https://code.google.com/p/parsec">
  <description brief="rcconsole">

     rcconsole

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>Apache 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rcconsole</url>
  <depend package="roscpp"/>
  <depend package="rosgraph_msgs"/>
  <depend package="ros_check"/>
  <depend package="nodelet"/>

  <export>
    <nodelet plugin="${prefix}/nodelets.xml"/>
  </export>
</package><package name="rtc" path="/trunk/stacks/bosch_common/rtc" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <author>Benjamin Pitzer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="openmesh"/>
  <depend package="opencv2"/>
  <export>
    <cpp cflags="-I${prefix}/include/" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lrtc"/>
    <!-- <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -lrtc" /> -->
  </export>
  <rosdep name="libann-dev"/>
  <rosdep name="libdevil-dev"/>
  <rosdep name="libglew-dev"/>
  <rosdep name="libglui-dev"/>
</package><package name="batchdetector" path="/trunk/recognition/batchdetector" repo="ubc-ros-pkg" repo_host="https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg">
  <description brief="batchdetector">

    This package contains a variety of nodes that distribute requests for detection and for
    collecting the responses from detectors. The code for these nodes is found in 
    src/batchdetector/nodes.
    
    Collator collects hypotheses generated by a set of detectors, and outputs images
    with bounding boxes from this collection. This node is geared towards producing results
    for the SRVC.
    
    Dispatcher listens for new scenes that are ready for processing and sends messages that 
    dictate which detectors are run on the scenes. Currently it simply sends out messages to all
    detectors.

  </description>
  <author>Scott Helmer and David Meger and Marius Muja</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/batchdetector</url>
  <depend package="std_msgs"/>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="image_transport"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="recognition_msgs"/>
  <depend package="hyp_filter"/>
  <export>
    <cpp cflags="-I${prefix}/msg/cpp"/>
  </export>
</package><package name="erratic_gazebo_plugins" path="/stacks/erratic_robot/trunk/erratic_gazebo_plugins" repo="erratic_robot" repo_host="https://ua-ros-pkg.googlecode.com/svn">
    <description brief="erratic_gazebo_plugins">
        Contains a differential drive plugin that works with the erratic robot model provided
        in the erratic_description package. The plugin may also work for other differential drive 
        robots. The purpose of this custom plugin is to build the ROS functionality directly into a 
        proper Gazebo plugin, rather than a node that communicates with Gazebo. 
    </description>

    <author>Daniel Hewlett, Antons Rebguns</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/erratic_gazebo_plugins</url>

    <depend package="roscpp"/>
    <depend package="gazebo"/>
    <depend package="gazebo_plugins"/>

    <export>
        <gazebo plugin_path="${prefix}/lib"/>
    </export>
</package><package name="rocon_gateway_hub" path="" repo="rocon_multimaster" repo_host="https://github.com/robotics-in-concert/rocon_multimaster">
  <description brief="rocon_gateway_hub">

     rocon_gateway_hub

  </description>
  <author>yujin</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rocon_gateway_hub</url>

  <depend package="rospy"/>
  <rosdep name="redis-server"/>
  <rosdep name="python-redis"/>
  <rosdep name="avahi-daemon"/>

</package><package name="vicon_mocap" path="" repo="starmac-ros-pkg" repo_host="https://bitbucket.org/bouffard/starmac-ros-pkg">
  <description brief="vicon_mocap">

     vicon_mocap

  </description>
  <author>Patrick Bouffard</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/vicon_mocap</url>
  <depend package="tf"/>
  <depend package="geometry_msgs"/>
  <depend package="diagnostic_updater"/>
  
    <depend package="starmac_roslib"/>
  
</package><package name="katana_tabletop_collision_map_processing" path="" repo="katana_manipulation" repo_host="http://kos.informatik.uni-osnabrueck.de/katana_manipulation.git">
  <description brief="Populates and manages a collision environment.">

    Populates and manages a collision environment using the results of
    sensor processing from the tabletop_object_detector. Functionality
    includes adding and removing detected objects from the collision
    environment, and requesting static collision maps for obstacle
    avoidance.

    Copied from tabletop_collision_map_processing by Matei Ciocarlie.

  </description>
  <author>Henning Deeken</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/katana_tabletop_collision_map_processing</url>
  <depend package="collision_environment_msgs"/>
  <depend package="mapping_msgs"/>
  <depend package="std_srvs"/>
  <depend package="pr2_msgs"/>
  <depend package="geometric_shapes_msgs"/>
  <depend package="tf"/>
  <depend package="actionlib"/>
  <depend package="household_objects_database_msgs"/>
  <depend package="tabletop_object_detector"/>
  <depend package="tabletop_collision_map_processing"/>

</package><package name="qt_gui_py_common" path="" repo="qt_gui_core" repo_host="https://kforge.ros.org/visualization/qt_gui_core">
  <description brief="Common functionality for plugins">
    qt_gui_py_common provides common functionality for GUI plugins written in Python.
  </description>
  <author>Dorian Scholz</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/qt_gui_py_common</url>

  <depend package="qt_gui"/>
</package><package name="sr_arm_kinematics" path="" repo="sr_contrib" repo_host="lp:sr-contrib">
  <description brief="sr_arm_kinematics">

    Currently only contains a launch file to start arm_kinematics for the shadow_arm
    Depends on arm_kinematics package which you should compile and install from source see arm_kinematics on the ROS wiki

  </description>
  <author>Guillaume WALCK (UPMC)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sr_arm_kinematics</url>
  <depend package="arm_kinematics"/>

</package><package name="rtt" path="" repo="orocos_toolchain" repo_host="https://git.gitorious.org/orocos-toolchain/rtt.git">
    <description brief="Orocos/RTT component framework">
    </description>
    <license>GPL v2 with linking exception</license>
		<author>RTT Developers</author>

		<url>http://www.orocos.org/rtt</url>
		<logo>http://www.orocos.org/files/logo-t.png</logo>
  
		<rosdep name="boost"/>
		<rosdep name="omniorb"/>
  
		<export>
			<!-- The default target is gnulinux when using rospack. This is definately a crippled solution -->
			<rosbuild cmake_directory="${prefix}/install/lib/cmake/orocos-rtt"/>
		</export>
    <tags>stable</tags>
</package><package name="flysim_teleop" path="" repo="flyatar" repo_host="http://github.com/peterpolidoro/Flyatar">
  <description brief="flysim_teleop">

     flysim_teleop is a simple package to demonstrate how to write a teleoperation node in ROS using the flysim.

  </description>
  <author>Melonee Wise / Peter Polidoro</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/turtlesim_teleop</url>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="flysim"/>
  <depend package="joystick_commands"/>
  <!-- <depend package="ps3joy"/> -->
  <!-- <depend package="joy"/> -->
  <!-- <depend package="wiimote"/> -->
  <!-- <depend package="spacenav_node"/> -->
</package><package name="coverage_3d_arm_navigation" path="/trunk/coverage_3d/coverage_3d_arm_navigation" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="Tools for using arm navigation for 3d coverage.">
   This package includes some tools for using arm navigation. 
	It also provides interfaces for collsion checking and faster solving for ik solutions with openrave.
  </description>
  <author>Juergen Hess</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/coverage_3d_arm_navigation</url>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="std_msgs"/>
  <depend package="std_srvs"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="octomap_ros"/>
  <depend package="octomap"/>
  <depend package="tf"/>
  <depend package="tf2"/>
  <depend package="visualization_msgs"/>
  <depend package="common_rosdeps"/>
  <rosdep name="eigen"/>
  <depend package="lkh_solver"/>
  <depend package="arm_navigation_msgs"/> 
  <depend package="planning_environment"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="actionlib"/>
  <depend package="angles"/>
  <depend package="kdl"/>
  <depend package="kdl_parser"/>
  <depend package="coverage_3d_tools"/>
  <depend package="spline_smoother"/>
  
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/srv_gen/cpp/include -I${prefix}/srv/cpp -I${prefix}/src" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lcoverage_3d_arm_navigation"/>
  </export>
</package><package name="semweb" path="/tags/latest/semweb" repo="knowrob" repo_host="http://code.in.tum.de/pubsvn/knowrob">
  <description brief="semweb">
      Patched version of the swi-prolog semweb library.
  </description>
  <author>Bernhard Kirchlechner, Moritz Tenorth</author>
  <license>GPL</license>
  <url>http://ros.org/wiki/semweb</url>
  <review notes="" status="unreviewed"/>
  <depend package="rosprolog"/>
  <depend package="jpl"/>
  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>
</package><package name="guiabot_launch" path="" repo="cyphy_legacy" repo_host="http://launchpad.net/cyphy">
  <description brief="guiabot_2dnav">

     guiabot_2dnav

  </description>
  <author>guiabot</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/guiabot_2dnav</url>
  <depend package="move_base"/>

</package><package name="automow_filtering" path="" repo="au_automow_common" repo_host="https://github.com/Auburn-Automow/au_automow_common">
  <description brief="automow_filtering">

     automow_filtering

  </description>
  <author>William Woodall</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/automow_filtering</url>
  <depend package="roscpp"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="sensor_msgs"/>
  <depend package="tf"/>

</package><package name="interactive_tf" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="interactive_tf">

     interactive_tf

  </description>
  <author>Kelsey Hawkins</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/interactive_tf</url>

  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  <depend package="interactive_markers"/>
  <depend package="tf"/>
  <depend package="tf_conversions"/>
  <depend package="rosbag"/>

</package><package name="megatree_cpp" path="" repo="megatree" repo_host="http://kforge.ros.org/megatree/megatree">
  <description brief="megatree">

     megatree

  </description>
  <author>Stuart Glaser</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/megatree</url>

  <depend package="megatree_core"/>
  <depend package="megatree_storage"/>

  <rosdep name="eigen"/>
  <rosdep name="gtest"/>

  <export>
    <cpp cflags="-I${prefix}/include `rosboost-cfg --cflags`" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib `rosboost-cfg --lflags thread` -lmegatree"/>
  </export>

</package><package name="wubble_mapping" path="/trunk/arrg/ua_apps/wubble_mapping" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="Wubble robot gmapping application">

     wubble_mapping

    </description>
    <author>UA Robot Lab</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/wubble_mapping</url>
    
    <depend package="wubble_teleop"/>
    <depend package="wubble_description"/>
    <depend package="hokuyo_node"/>

    <depend package="gmapping"/>
    <depend package="rviz"/>

</package><package name="industrial_io_client" path="/trunk/industrial_experimental/industrial_io_client" repo="swri-ros-pkg" repo_host="http://swri-ros-pkg.googlecode.com/svn">
  <description brief="industrial_io_client">

     A generic client to control tools and other devices that are connected
     to an industrial robot controller.

  </description>
  <author>Brian Gerkey</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/industrial_io_client</url>
  <depend package="rospy"/>
  <depend package="simple_message"/>

</package><package name="wubble_arm_description" path="/trunk/arrg/ua_robots/wubble_arm_description" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="3D Meshes and URDF for the Wubble Arm">
        3D model of a Wubble Arm (Dynamixel-based 7 DOF robotic arm with 2 DOF gripper).
    </description>

    <author>Antons Rebguns</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/wubble_arm_description</url>

    <depend package="convex_decomposition"/>
    <depend package="ivcon"/>

    <export>
        <gazebo gazebo_media_path="${prefix}"/>
    </export>

</package><package name="rflex_dashboard" path="/branches/stable/rwi/rflex_dashboard" repo="wu-ros-pkg" repo_host="https://wu-robotics.googlecode.com/svn">
  <description brief="Rflex Dashboard">
    B21 Dashboard using the generic dashboard interface
  </description>
  <author>David V. Lu!!</author>
  <license>BSD</license>
  <url>http://ros.org/wiki/rflex_dashboard</url>
  <depend package="rospy"/>
  <depend package="generic_dashboard"/>

</package><package name="urdf_validator" path="" repo="stacks/urdf_validator" repo_host="git://github.com/laas/urdf_validator">
  <description brief="URDF validator">
    XML scheme for URDF and wrapper around xmllint
    to validate URDF files easily.
  </description>
  <author>Thomas Moulard</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://www.ros.org/wiki/urdf_validator</url>

  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>

  <rosdep name="libxml2"/>
</package><package name="flyer_interface" path="" repo="mav_tools" repo_host="https://github.com/ccny-ros-pkg/mav_tools">
  <description brief="flyer_interface">

     flyer_interface

  </description>
  <author>Ivan Dryanovski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/flyer_interface</url>
  <depend package="roscpp"/>
  <depend package="nodelet"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="std_msgs"/>
  <depend package="tf"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="mav_msgs"/>
  <depend package="mav_srvs"/>
  <depend package="mav_common"/>
  <depend package="message_filters"/>
  <export>
    <nodelet plugin="${prefix}/flyer_interface_nodelet.xml"/>
  </export>

</package><package name="fake_sphero" path="/trunk/sandbox/sphero/fake_sphero" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="fake_sphero">

     fake_sphero

  </description>
  <author>Ross Mead and Edward T. Kaszubski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/fake_sphero</url>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="geometry_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="sphero_msgs"/>
</package><package name="bfl" path="" repo="bfl" repo_host="https://kforge.ros.org/bfl/bfl">
<description brief="The Bayesian Filtering Library (latest)">

  This package contains a recent version of the Bayesian Filtering
  Library (BFL), distributed by the Orocos Project.  For stability
  reasons, this package is currently locked to revision 31655 (April
  19, 2010), but this revision will be updated on a regular basis to
  the latest available BFL trunk.  This ROS package does not modify
  BFL in any way, it simply provides a convenient way to download and
  compile the library, because BFL is not available from an OS package
  manager.  This ROS package compiles BFL with the Boost library for
  matrix operations and random number generation.

</description>
<author> Klaas Gadeyne, Wim Meeussen, Tinne Delaet and many others. See web page for a full contributor list. ROS package maintained by Wim Meeussen.</author>
<license>LGPL</license>
<review notes="reviewed by kwc" status="3rdparty doc reviewed"/>
<url>http://www.orocos.org/bfl</url>
<export>
  <cpp cflags="-I${prefix}/include/bfl" lflags="-Wl,-rpath,${prefix}/lib  -L${prefix}/lib -lorocos-bfl"/>
  <rosdoc external="http://people.mech.kuleuven.be/~tdelaet/bfl_doc/doc/html/index.html"/>
</export>

<rosdep name="cppunit"/>

</package><package name="kingfisher_msgs" path="" repo="kingfisher" repo_host="https://github.com/clearpathrobotics/kingfisher">
  <description brief="kingfisher_msgs">

     kingfisher_msgs

  </description>
  <author>Mike Purvis</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/kingfisher_msgs</url>

</package><package name="actionlib_lua" path="" repo="behavior_engine" repo_host="https://github.com/timn/ros-behavior_engine">
  <description brief="actionlib_lua">
    Lua modules to deal with actionlib.
  </description>
  <author>Tim Niemueller</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/actionlib_lua</url>
  <export>
    <doxymaker external="http://timn.github.com/ros-actionlib_lua/"/>
  </export>
  <depend package="roslua"/>
  <depend package="actionlib_msgs"/>
</package><package name="random_testbench" path="" repo="iheart-ros-pkg" repo_host="git://github.com/IHeartRobotics/iheart-ros-pkg">
  <description brief="random_testbench">
This useless test outputs a random score as an example.
  </description>
  <author>I Heart Engineering</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/random_testbench</url>
  <depend package="roscpp"/>
  <depend package="pluginlib"/>
  <depend package="testbench"/>
  <export>
    <testbench plugin="${prefix}/random_testbench.xml"/>
  </export>
</package><package name="plate_tf" path="" repo="flyatar" repo_host="http://github.com/peterpolidoro/Flyatar">
  <description brief="plate_tf">

     plate_tf

  </description>
  <author>Peter Polidoro</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/plate_tf</url>
  <depend package="rospy"/>
  <depend package="tf"/>
  <depend package="pythonmodules"/>
  <depend package="geometry_msgs"/>
  <depend package="opencv2"/>
</package><package name="google_mapping" path="" repo="google" repo_host="https://code.google.com/p/rosjava.google/">
  <description brief="google_mapping is a SLAM approach based on hector_slam.">
    google_mapping is a SLAM approach based originally on hector_slam (see
    http://ros.org/wiki/hector_slam/). Like hector_slam, google_mapping can be
    used without odometry as well as on platforms that exhibit roll/pitch
    motion (of the sensor, the platform or both). It leverages the high update
    rate of modern LIDAR systems like the Hokuyo UTM-30LX and provides 2D pose
    estimates at scan rate of the sensors (40Hz for the UTM-30LX).

    google_mapping is built on top of octomap (see
    http://ros.org/wiki/octomap).
  </description>
  <author>Damon Kohler</author>
  <license>Apache 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.ros.org/wiki/google_mapping</url>

  <depend package="roscpp"/>
  <depend package="rosbag"/>
  <depend package="nav_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="tf"/>
  <depend package="laser_geometry"/>
  <depend package="tf_conversions"/>
  <depend package="octomap_ros"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>

  <rosdep name="octomap"/>
</package><package name="art_run" path="/trunk/stacks/art_vehicle/art_run" repo="utexas-art-ros-pkg" repo_host="http://utexas-art-ros-pkg.googlecode.com/svn">
  <description brief="Run the ART vehicle">

     Tools to run the Austin Robot Technology autonomous vehicle.

  </description>
  <author/>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/art_run</url>

  <depend package="applanix"/>
  <depend package="art_common"/>
  <depend package="art_image"/>
  <depend package="art_map"/>
  <depend package="art_nav"/>
  <depend package="art_observers"/>
  <depend package="art_pilot"/>
  <depend package="art_servo"/>
  <depend package="art_teleop"/>
  <depend package="camera1394"/>
  <depend package="joy"/>
  <depend package="rxtools"/>
  <depend package="sicktoolbox_wrapper"/>
  <depend package="simulator_art"/>
  <depend package="tf"/>
  <depend package="velodyne_driver"/>
  <depend package="velodyne_height_map"/>
  <depend package="velodyne_pointcloud"/>

</package><package name="cram_plan_library" path="" repo="cram_highlevel" repo_host="https://github.com/moesenle/cram_highlevel">
  <description brief="cram_plan_library">

     cram_plan_library

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cram_plan_library</url>
  <depend package="cram_language"/>
  <depend package="cram_utilities"/>
  <depend package="cram_process_modules"/>
  <depend package="cram_reasoning"/>
  <depend package="cram_designators"/>
  <depend package="cram_roslisp_common"/>
  <depend package="cram_plan_knowledge"/>
  <depend package="cram_plan_failures"/>
  <depend package="cram_projection"/>
  <depend package="alexandria"/>
  <depend package="designators_ros"/>

</package><package name="rovio_av" path="" repo="rovio" repo_host="https://github.com/WPI-RAIL/rovio">
	<description brief="Control and query the audio/video devices on a WowWee Rovio">The rovio_av package contains nodes to control and query the audio/video devices on a WowWee Rovio. Video streaming is provided via the gscam package.</description>
	<author>Russell Toris</author>
	<license>BSD</license>
	<review notes="" status="unreviewed"/>
	<url>http://ros.org/wiki/rovio_av</url>

	<depend package="roscpp"/>
	<depend package="std_msgs"/>
	<depend package="rovio_shared"/>
	<depend package="gscam"/>
</package><package name="geometric_semantics_tf" path="" repo="geometric_relations_semantics" repo_host="http://git.mech.kuleuven.be/robotics/geometric_relations_semantics.git">
  <description brief="geometric_semantics_tf">

    This package provides support for <a href="http://www.ros.org/wiki/tf">tf</a> datatypes (see <a href="http://www.ros.org/wiki/tf/Overview/Data%25%32%30Types">http://www.ros.org/wiki/tf/Overview/Data%20Types</a>) on top of the <a href="http://www.ros.org/wiki/geometric_semantics">geometric_semantics</a> package (for instance tf::Pose to represent the relative pose of two rigid bodies).

  </description>
  <author>Tinne De Laet, Steven Bellens</author>
  <license>LGPLv2.1 / BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.orocos.org/wiki/geometric-relations-semantics-wiki</url> 

  <depend package="tf"/>
  <depend package="geometric_semantics"/>
  <export>
        <rosdoc config="rosdoc.yaml"/>
        <cpp cflags="-I${prefix}/src" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lgeometric_semantics_tf"/>
   </export>

</package><package name="shape_msgs" path="/stacks/common_msgs/trunk/shape_msgs" repo="common_msgs" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="shape_msgs">

     shape_msgs

  </description>
  <author>Ioan Sucan</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/shape_msgs</url>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>

  <export>
    <cpp cflags="`PKG_CONFIG_PATH=${prefix}/../../lib/pkgconfig pkg-config --cflags shape_msgs`" lflags="`PKG_CONFIG_PATH=${prefix}/../../lib/pkgconfig pkg-config --libs shape_msgs`"/>
  </export>

</package><package name="chess_msgs" path="/trunk/maxwell_apps/chess_msgs" repo="vanadium-ros-pkg" repo_host="http://vanadium-ros-pkg.googlecode.com/svn">
  <description brief="Message definitions for AAAI Chess 2011"/>
  <author>Michael Ferguson</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/chess_msgs</url>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
</package><package name="pr2_grasp_behaviors" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="pr2_grasp_behaviors">

     Quick overhead grasping for the PR2. Objects are percieved using the tabletop_object_detector package and grasped from above using interpolated IK, modified to keep the elbows up. Collisions are detected by monitoring joint errors using thresholds learned by sampling different &quot;empty grasps&quot;. 

  </description>
  <author>Kelsey Hawkins, Advisor: Prof. Charlie Kemp (Healthcare Robotics Lab
    at Georgia Tech)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_grasp_behaviors</url>
  <depend package="rospy"/>
  <depend package="rosbag"/>
  <depend package="tf"/>

  <depend package="hrl_lib"/>
  <depend package="hrl_pr2_lib"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="pr2_mechanism_msgs"/>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="smach"/>
  <depend package="smach_ros"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="pr2_gripper_reactive_approach"/>
  <depend package="tabletop_object_detector"/>
  <!--<depend package="laser_interface"/>-->
  <depend package="pr2_collision_monitor"/>

</package><package name="axis_camera" path="" repo="axis_camera" repo_host="https://github.com/clearpathrobotics/axis_camera">
  <description brief="axis_camera">
    Contains basic Python drivers for accessing an Axis camera's MJPG stream. Also provides control for PTZ cameras.
  </description>
  <author>Ryan Gariepy</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/axis_camera</url>
  <depend package="rospy"/>
  <depend package="sensor_msgs"/>
</package><package name="state_manager_communications" path="" repo="pandora-auth-ros-pkg" repo_host="https://github.com/pandora-auth-ros-pkg/pandora-auth-ros-pkg">
  <description brief="state_manager_communications">

     Communications package for State Manager

  </description>
  <author>Pandora Robotics Team</author>
  <license>MIT</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/stateManager_communications</url>
	
</package><package name="costmap_services" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="costmap_services">

    costmap services

  </description>
  <author>Travis Deyle</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url/>
  <depend package="tf"/>
  <depend package="roscpp"/>
  <depend package="roslib"/>
  <depend package="base_local_planner"/>
  <depend package="costmap_2d"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
  <export>
  <cpp cflags="-I${prefix}/include `rosboost-cfg --cflags`" lflags=""/>
  </export>
</package><package name="doors_forces_kinematics" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
    <description brief="doors_forces_kinematics">
        Python code related to estimating and using the kinematics and
        forces required to open doors and drawers.
    </description>
    <author>Advait Jain. Advisor: Prof. Charlie Kemp (Healthcare Robotics Lab)</author>
    <license>New BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/doors_forces_kinematics</url>
    <depend package="rospy"/>
    <depend package="hrl_lib"/>

</package><package name="rcf_authentication" path="/trunk/RCF4ROS/base/rcf_authentication" repo="roblab-whge-ros-pkg" repo_host="http://roblab-whge-ros-pkg.googlecode.com/svn">
  <description brief="rcf_authentication">

     rcf_authentication
     
     This node is used to authenticate remote controllers in the rcf stack.
     All rcp commands received via p2p interface will be ignored until the
     remote controller has proven he is authenticated.
     
     Further authentication calls and rcp datagrams sent to the robot will
     be ignored, until the call has been ended, and the remote controller has signed
     off.
     
     The parameter server is used to store user login data.

  </description>
  <author>B. Fabricius</author>
  <license>CreativeCommons BY-NC-SA License</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rcf_authentication</url>
  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>
  <depend package="roscpp"/>
  <depend package="rcf_control_protocol"/>

</package><package name="eros_msg_latency" path="/trunk/tests/eros_msg_latency" repo="eros" repo_host="https://code.ros.org/svn/eros">
  <description brief="Test utility for benchmarking topic latencies">

     Generates statistical data providing a benchmark for msg latencies.

  </description>
  <author>Daniel Stonier</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/eros_msg_latency</url>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <rosdep name="boost"/>
</package><package name="pr2_plugs_common" path="" repo="pr2_plugs" repo_host="https://kforge.ros.org/plugs/hg">
  <description brief="pr2_plugs_common">

     pr2_plugs_common contains common utilies for plugging in the PR2 robot. 

  </description>
  <author>Wim Meeussen and Melonee Wise</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_plugs_common</url>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="bfl"/>
  <depend package="kdl"/>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="actionlib"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="std_srvs"/>

  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>

</package><package name="rqt_rviz" path="" repo="rqt" repo_host="https://kforge.ros.org/visualization/rqt">
  <description brief="Plugin embedding RViz">
    rqt_rviz provides a GUI plugin embedding RViz.
  </description>
  <author>Dorian Scholz</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rqt_rviz</url>

  <depend package="rqt_gui"/>
  <depend package="rqt_gui_cpp"/>
  <depend package="rviz"/>

  <export>
    <rqt_gui plugin="${prefix}/plugin.xml"/>
  </export>
</package><package name="srs_interaction_primitives" path="" repo="srs_public" repo_host="git://github.com/ipa320/srs_public">
    <description brief="srs_interactive_primitives">GUI primitives for HRI based on Interactive Markers provided by dcgm-robotics@FIT group.</description>
    <author>Tomas Lokaj, Michal Spanel (spanel@fit.vutbr.cz)</author>
    <license>LGPL</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/srs_interaction_primitives</url>
    <depend package="opencv2"/>
    <depend package="eigen"/>
    <depend package="roscpp"/>
    <depend package="cob_object_detection_msgs"/>
    <depend package="image_transport"/>
    <depend package="camera_calibration_parsers"/>
    <depend package="visualization_msgs"/>
    <depend package="std_msgs"/>
    <depend package="std_srvs"/>
    <depend package="nav_msgs"/>
    <depend package="arm_navigation_msgs"/>
    <depend package="pcl"/>
    <depend package="pcl_ros"/>
    <depend package="ogre"/>
    <depend package="interactive_markers"/>
    <depend package="actionlib"/>
    <depend package="actionlib_msgs"/>
    <export>
        <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -lbut_interaction_primitives"/>
        <rosdoc config="rosdoc.yaml"/>
    </export>

</package><package name="rosjs_visualization" path="/trunk/stacks/bosch_web_visualization/rosjs_visualization" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="rosjs_visualization">
    rosjs common.
  </description>
  <author>Benjamin Pitzer and Bener Suay</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosjs_visualization</url>
  <export>
	<rosdoc config="rosdoc.yaml"/>
  </export>
  <depend package="rosjs_common"/>
</package><package name="corobot_state_tf" path="/trunk/Diamondback/Corobot/corobot_state_tf" repo="roscorobot" repo_host="http://svn.code.sf.net/p/roscorobot/code">
  <description brief="corobot_state_tf">

     corobot_state_tf register 2 topics, sending the odometry in the form of a nav_msgs::Odometry message and the Transform.

  </description>
  <author>Morgan Cormier/mcormier@coroware.com</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/corobot_state_tf</url>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="geometry_msgs"/>
  <depend package="corobot_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="roslaunch"/>
  <depend package="dynamic_reconfigure"/>

</package><package name="mav_ctrl_interface" path="" repo="mav_tools" repo_host="https://github.com/ccny-ros-pkg/mav_tools">
  <description brief="mav_ctrl_interface">

     mav_ctrl_interface

  </description>
  <author>Ivan Dryanovski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/mav_ctrl_interface</url>
  <depend package="roscpp"/>
  <depend package="mav_srvs"/>
  <depend package="nav_msgs"/>
  <depend package="navfn"/>
  <depend package="costmap_2d"/>
  <depend package="mav_common"/>
  <depend package="nodelet"/>
  <depend package="tf"/>
  <depend package="geometry_msgs"/>

  <export>
    <nodelet plugin="${prefix}/mav_ctrl_interface_nodelet.xml"/>
  </export>


</package><package name="ecl_mpl" path="/trunk/ecl_core/ecl_mpl" repo="ecl_core" repo_host="https://embedded-control-library.googlecode.com/svn">
  <description brief="A library of metaprogramming structures">

  Metaprogramming tools move alot of runtime calculations to be shifted to
  compile time. This has only very elementary structures at this stage.
 
  </description>
  <author>Daniel Stonier (d.stonier@gmail.com)</author>
  <license>BSD</license>
  <review notes="" status="doc reviewed"/>
  <url>http://snorriheim.dnsdojo.com/redmine/wiki/ecl</url>
  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>
  <depend package="ecl_license"/>
  <depend package="ecl_build"/>
  <rosbuild2>
    <export>
      <include_dir>${ecl_mpl_SOURCE_DIR}/include</include_dir>
    </export>
    <depend package="ecl_license"/>
    <depend package="ecl_build"/>
  </rosbuild2>
  
</package><package name="rgbdslam" path="/trunk/rgbdslam_freiburg/rgbdslam" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="SLAM on RGBD Data">
    This package can be used to register the point clouds from RGBD sensors such as the kinect or stereo cameras.
    The rgbdslam node can be connected easily to an octomap_server node to create a memory-efficient 3D map.
  </description>
  <author>Felix Endres, Juergen Hess, Nikolas Engelhard</author>
  <license>GPL v3</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rgbdslam</url>
  <depend package="tf"/>
  <depend package="pcl"/>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="rosbag"/>
  <depend package="pcl_ros"/>
  <!--depend package="opencv2"/-->
  <depend package="cv_bridge"/>
  <depend package="sensor_msgs"/>
  <!--depend package="openni_camera"/-->
  <!--depend package="octomap_server"/-->
  <!--depend package="octomap"/-->
  <depend package="geometry_msgs"/>
  <depend package="visualization_msgs"/>
  <rosdep name="libqt4-opengl-dev"/>
  <rosdep name="libqt4-dev"/>
  <rosdep name="libglew-dev"/>
  <rosdep name="libdevil-dev"/>
  <rosdep name="libgsl"/>
  <!--rosdep name="gl2ps"/-->
  <rosdep name="eigen"/>
  <rosdep name="libg2o"/>
  <export>
    <rosdoc config="rosdoc.yaml"/>
    <nodelet plugin="${prefix}/nodelet_plugins.xml"/>
    <cpp cflags="-I${prefix}/srv_gen/cpp"/>
 </export>
</package><package name="cram_plan_actionserver" path="" repo="cram_highlevel" repo_host="https://github.com/moesenle/cram_highlevel">
  <description brief="cram_plan_actionserver">

     cram_plan_actionserver

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cram_plan_actionserver</url>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="roslisp_runtime"/>
  <depend package="actionlib_lisp"/>
  <depend package="cram_language"/>
  <depend package="cram_roslisp_common"/>
  <depend package="cram_execution_trace"/>

</package><package name="lse_xsens_mti" path="/stacks/lse_imu_drivers/trunk/lse_xsens_mti" repo="lse_imu_drivers" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="lse_xsens_mti">

     Xsens MTi node. The existing xsens_mti node is distributed in the form of a library and requires the MTi to be set to a determined configuration to work. We had some old code laying around so we just ported it to ROS. This sends the MTi to configuration mode at start and sets it to the propper mode of operation.

  </description>
  <author>Gonçalo Cabrita, Nicolas Vignard</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/lse_xsens_mti</url>
  <depend package="sensor_msgs"/>
  <depend package="gps_common"/>
  <depend package="roscpp"/>
  <depend package="cereal_port"/>
  <depend package="nav_msgs"/>
  <depend package="tf"/>

</package><package name="cram_math" path="" repo="cram_core" repo_host="https://github.com/moesenle/cram_core">
  <description brief="CRAM math utilities.">
    Math utilities. This includes functions for sampling from
    arbitrary probability distributions and utilities to work with
    poses, vectors and quaternions.
  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <url>http://ros.org/wiki/cram_math</url>
  <review notes="" status="unreviewed"/>
  <depend package="sbcl"/>
  <depend package="alexandria"/>
  <depend package="gsll"/>
</package><package name="libsiftfast" path="/trunk/3rdparty/libsiftfast" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="libsiftfast">
    Library to compute SIFT features
  </description>
  <license>LGPL</license>
  <author>zerofrog</author>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix} -Wl,-rpath,${prefix}/lib -L${prefix}/lib -lsiftfast -lgomp"/>
    <python path="${prefix}/lib"/>
  </export>
  <versioncontrol type="svn" url="https://libsift.svn.sourceforge.net/svnroot/libsift/trunk"/>
  <sysdepend os="ubuntu" package="python-numpy" version="7.04-feisty"/>
  <sysdepend os="ubuntu" package="python-numpy" version="8.04-hardy"/>
</package><package name="schunk_libm5api" path="" repo="schunk_modular_robotics" repo_host="git://github.com/ipa320/schunk_modular_robotics">
  <description brief="schunk_libm5api">

     This package wraps the libm5api to use it as a ros dependency. Original sources from http://www.schunk-modular-robotics.com/fileadmin/user_upload/software/schunk_libm5api_source.zip.

  </description>
  <author>Florian Weisshardt</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/schunk_libm5api</url>

  <depend package="libpcan"/>
  <depend package="libntcan"/>

  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/include/schunk_libm5api" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lm5api"/>
  </export>

</package><package name="cob_kinematics" path="" repo="cob_manipulation" repo_host="git://github.com/ipa320/cob_manipulation">
  <description brief="cob_kinematics">
      IK solvers and utilities for Care-O-bot
  </description>
  <author>Mathias Lüdtke</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_kinematics</url>

  <depend package="roscpp"/>
  <depend package="arm_navigation_msgs"/>
  <depend package="kinematics_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="kdl"/>
  <depend package="kdl_parser"/>  
  <depend package="urdf"/>  
  <depend package="urdf_parser"/>  
  <depend package="tf_conversions"/>  
</package><package name="px4flow_node" path="" repo="px-ros-pkg" repo_host="https://github.com/cvg/px-ros-pkg">
  <description brief="Interface to the PX4FLOW board.">

     A ROS node to provide access to the PX4FLOW board.

  </description>
  <author>Lionel Heng</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/px4flow_node</url>
  <depend package="image_transport"/>
  <depend package="px_comm"/>

</package><package name="cri" path="" repo="cri" repo_host="https://github.com/jonclaassens/cri">
  <description brief="avatar">

     avatar

  </description>
  <author>parallels</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/avatar</url>

  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="tf"/>
  <depend package="rviz"/>
  <depend package="resource_retriever"/>
  <depend package="ogre_tools"/>
  <depend package="common_rosdeps"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="laser_geometry"/>
  <depend package="urdf"/>
  <depend package="urdf_interface"/>

  <depend package="kdl_parser"/>
  <depend package="robot_state_publisher"/>

  <rosdep name="assimp"/>
  <rosdep name="python"/>
  <rosdep name="boost"/>
</package><package name="patrolling_sim" path="/stacks/patrol/trunk/patrolling_sim" repo="patrol" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="patrolling_sim"> Multi-Robot Patrolling Stage/ROS Simulation Package.</description>
  <author>David Portugal</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/patrolling_sim</url>
  <depend package="move_base_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="actionlib"/>
  <depend package="roscpp"/>
  <depend package="tf"/>

</package><package name="lwa_arm_navigation" path="" repo="cob_manipulation" repo_host="git://github.com/ipa320/cob_manipulation">
  <description brief="lwa_arm_navigation">

     lwa_arm_navigation

  </description>
  <author>Mathias Luedtke</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/lwa_arm_navigation</url>
  <depend package="planning_environment"/>
  <depend package="arm_kinematics_constraint_aware"/>
  <depend package="ompl_ros_interface"/>
  <depend package="trajectory_filter_server"/>
  <depend package="constraint_aware_spline_smoother"/>
  <depend package="move_arm"/>
  <!--@ToDo: Find out why needed-->
  <!--Maybe for defining static obstacles in planning-->
  <depend package="tinyxml"/>
  <!--depend package="gazebo"/-->
  <!--###################-->
  <depend package="mongodb"/>
  <depend package="rviz"/>
  <depend package="robot_state_publisher"/>
  
</package><package name="turtlebot_wviz" path="/trunk/stacks/remote_lab/turtlebot_wviz" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="turtlebot_wviz">

    turtlebot_wviz

  </description>
  <author>Sarah Osentoski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/tutlebot_wviz</url>
  <depend package="rosjs_common"/>
  <depend package="rosjs_visualization"/>
  <depend package="rosbridge_server"/>
  <depend package="rosapi"/>
</package><package name="ias_table_msgs" path="" repo="ias_common" repo_host="http://code.in.tum.de/git/ias-common.git">
  <description brief="ias_table_msgs">
     Messages for table perception applications at TUM.
  </description>
  <author name="Nico Blodow"/>
  <license>BSD</license>

  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
</package><package name="quickdev_cpp" path="/trunk/quickdev/quickdev_cpp" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="quickdev_cpp">

     A toolbox designed to speed up the development time of code by providing generic implementations and utilities.
     Diamondback: supported; Electric: technically supported; Fuerte: experimental.

  </description>
  <author>Edward T. Kaszubski (ekaszubski@gmail.com)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/quickdev_cpp</url>
  <depend package="rosbuild"/>
  <depend package="roscpp"/>
  <depend package="quickdev_build"/>
  <depend package="cpp11"/>
  <depend package="gsl"/>
  <depend package="std_msgs"/>
  <depend package="std_srvs"/>
  <depend package="geometry_msgs"/>
  <depend package="tf"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="sensor_msgs"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="image_transport"/>
  <depend package="driver_base"/>
  <depend package="nodelet"/>
  <depend package="pluginlib"/>
  <depend package="joy"/>
  <depend package="actionlib"/>
  <depend package="urdf"/>
  <depend package="tinyxml"/>

  <export>
    <rosdoc config="rosdoc.yaml"/>
    <cpp cflags="-I${prefix}/include -I${prefix}/cfg/cpp" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lquickdev_cpp"/>
    <!-- cmake files exported for backwards compatibility; new packages should be using quickdev_build for this functionality -->
    <rosbuild cmake_directory="${prefix}/cmake"/>
  </export>

</package><package name="template_matching" path="" repo="cyphy_vis_slam" repo_host="https://cyphy-vis-slam.googlecode.com/hg/cyphy_vis_slam">
  <description brief="template_matching">

     sequence_matching

  </description>
  <author>liz</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sequence_matching</url>
  <depend package="roscpp"/>
  <depend package="cyphy_vslam_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="cv_bridge"/>
  <depend package="image_transport"/>

</package><package name="multi_interface_roam" path="/stacks/linux_networking/trunk/multi_interface_roam" repo="linux_networking" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Roaming with multiple network interfaces.">
    <p>
    This package allows automatic configuration and switching between 
    multiple network interfaces. It can be used in combination with a VPN
    tunnel to achieve seamless wifi roaming, and near-instantaneous
    transitioning between multiple available network interfaces.
  </p>
  <p>
    Currently only wifi interfaces are supported.
  </p>
  </description>
  <author>Blaise Gassend</author>
  <license>BSD, LGPL, GPL for sigblock</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/multi_interface_roam</url>
  <depend package="rospy"/>
  <depend package="network_monitor_udp"/>
  <depend package="std_msgs"/>
  <depend package="diagnostic_msgs"/>
  <depend package="pr2_msgs"/>
  <depend package="wpa_supplicant_node"/>
  <depend package="asmach"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="ieee80211_channels"/>
  <rosdep name="python-libpcap"/>&quot;
  <rosdep name="python-twisted-core"/>
  <rosdep name="udhcpc"/>
  <rosdep name="python-scapy"/>
  <rosdep name="beep"/>
</package><package name="guardian_2dnav" path="/trunk/guardian_2dnav" repo="guardian-ros-pkg" repo_host="http://guardian-ros-pkg.googlecode.com/svn">
  <description brief="guardian_2dnav">
  Contains all the configuration files needed to execute the AMCL and SLAM navigation algorism in the robot. 
  </description>
  <author>Robotnik Automation SLL</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/guardian_2dnav</url>

</package><package name="startup" path="/trunk/jsk_android_apps_api9/startup" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="startup">

     startup

  </description>
  <author>Manabu Saito</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/startup</url>

</package><package name="cop_ros_plugins" path="" repo="ias_perception" repo_host="http://code.in.tum.de/git/ias-perception.git">
  <description brief="a package that provides ros-vision functionality in cop">
     a package to provide a Sensor plugin for cop
  </description>
  <author>U. Klank, Dejan Pangercic</author>
  <license>BSD</license>
  <depend package="pluginlib"/>
  <depend package="opencv2"/>
  <depend package="cognitive_perception"/>
  <depend package="cv_bridge"/>
  <depend package="ias_table_msgs"/>
  <export>
    <cpp cflags="-I${prefix}/include/" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lCopRosPlugin"/>
    <cognitive_perception plugin="${prefix}/plugins.xml"/>
  </export>

</package><package name="pr2_arm_kinematics" path="/stacks/pr2_kinematics/trunk/pr2_arm_kinematics" repo="pr2_kinematics" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_arm_kinematics">
   This package provides a kinematics implementation for the PR2 robot. It can be used to compute forward and inverse kinematics. 
  </description>
  <author>Sachin Chitta</author>
  <license>BSD</license>
  <review notes="" status="ROS API reviewed"/>
  <url>http://ros.org/wiki/pr2_arm_kinematics</url>
  <depend package="roscpp"/>
  <depend package="kdl"/>
  <depend package="angles"/>
  <depend package="tf_conversions"/>
  <depend package="urdf"/>
  <depend package="geometry_msgs"/>
  <depend package="kdl_parser"/>
  <depend package="kinematics_msgs"/>
  <depend package="pluginlib"/>
  <depend package="kinematics_base"/>
  <depend package="common_rosdeps"/>

  <rosdep name="eigen"/>

  <export>
   <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lpr2_arm_kinematics_lib"/>
  <kinematics_base plugin="${prefix}/kinematics_plugins.xml"/>
  </export>


  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="pr2_power_board" path="/stacks/pr2_power_drivers/trunk/pr2_power_board" repo="pr2_power_drivers" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="PR2 power board drivers">This provides a ROS node for the PR2 Power Board.</description>
  <author>Curt Meyers, Blaise Gassend</author>
  <license>BSD</license>
  <review notes="Dec 2009" status="Doc reviewed"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="diagnostic_updater"/>
  <depend package="diagnostic_msgs"/>
  <depend package="pr2_msgs"/>
  <rosdep name="wxpython"/>
  <url>http://www.ros.org/wiki/pr2_power_board</url>
  <export> 
    <cpp cflags="-I${prefix}/srv/cpp"/>   
  </export> 
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="glados_sensors" path="" repo="UCLA-robomagellan" repo_host="https://github.com/garbear/UCLA-robomagellan">
  <description brief="glados_sensors">

     sensors for GLaDOS

  </description>
  <author>Asa Hammond</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/glados</url>
  <!-- c++ dependencies -->
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="cv_bridge"/>
</package><package name="longhorn_object_manipulation" path="/trunk/swri_demos/longhorn_object_manipulation" repo="swri-ros-pkg" repo_host="http://swri-ros-pkg.googlecode.com/svn">
  <description brief="armadillo_object_manipulation">

     armadillo_object_manipulation

  </description>
  <author>Shaun Edwards</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/armadillo_object_manipulation</url>
  <depend package="trajectory_execution_monitor"/>
  <depend package="object_manipulator"/>
  <depend package="tabletop_object_detector"/>
  <depend package="planning_environment"/>
  <depend package="armadillo_arm_navigation"/>
  <depend package="pr2_gripper_grasp_planner_cluster"/>

  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>

</package><package name="mrpt_hokuyo" path="/trunk/mrpt_hwdrivers/mrpt_hokuyo" repo="mrpt-ros-pkg" repo_host="http://mrpt-ros-pkg.googlecode.com/svn">
  <description brief="mrpt_hokuyo">

     mrpt_hokuyo

  </description>
  <author>Jose Luis</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/mrpt_hokuyo</url>
  <depend package="sensor_msgs"/>
  <depend package="roscpp"/>

</package><package name="cob_3d_visualization" path="" repo="cob_environment_perception" repo_host="git://github.com/ipa320/cob_environment_perception">
  <description brief="cob_3d_visualization">

     Visualization of 3D environment data using mainly interactive markers.

  </description>
  <author>Georg Arbeiter</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_3d_visualization</url>

  <depend package="cob_3d_mapping_common"/>
  <depend package="cob_3d_mapping_msgs"/>
  <depend package="interactive_markers"/>
  <depend package="pcl"/>
  <depend package="tabletop_object_detector"/>

</package><package name="depth_image_proc" path="/stacks/image_pipeline/branches/image_pipeline-1.8/depth_image_proc" repo="image_pipeline" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="depth_image_proc">

     Contains nodelets for processing depth images such as those
     produced by OpenNI camera. Functions include creating disparity
     images and point clouds, as well as registering (reprojecting)
     a depth image into another camera frame.

  </description>
  <author>Patrick Mihelich</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/depth_image_proc</url>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -ldepth_image_proc"/>
    <nodelet plugin="${prefix}/nodelet_plugins.xml"/>
  </export>

  <rosdep name="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="image_geometry"/>
  <depend package="image_transport"/>
  <depend package="message_filters"/>
  <depend package="nodelet"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="stereo_msgs"/>
  <depend package="tf"/>

  <depend package="common_rosdeps"/>
  <rosdep name="eigen"/>

</package><package name="rosjs_common" path="/trunk/stacks/bosch_web_visualization/rosjs_common" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="rosjs_common">
    rosjs common.
  </description>
  <author>Benjamin Pitzer and Bener Suay</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosjs_common</url>
  <export>
  	<rosdoc config="rosdoc.yaml"/>
	</export>
</package><package name="python_qt_binding" path="" repo="python_qt_binding" repo_host="https://kforge.ros.org/visualization/python_qt_binding">
  <description brief="Python bindings for the Qt widget library, plus helpers for writing other Python bindings.">

This stack provides Python bindings for Qt.
There are two providers: pyqt and pyside.  PyQt is released under the
GPL, which can be too restrictive.  Therefore this package also
provides PySide when available.  PySide uses the LGPL license, but is
not available via normal Debian package channels on Ubuntu Lucid.

Both the bindings and tools to build bindings are included from each
available provider.  For PyQt, this is called &quot;SIP&quot;.  For PySide, it
is called &quot;Shiboken&quot; (and other tools).

Also provided is adapter code to make the user's Python code
independent of which binding provider was actually used.

  </description>
  <author>Dave Hershberger, Dirk Thomas</author>
  <license>BSD, LGPL, GPL</license>
  <review status="unreviewed"/>
  <url>http://ros.org/wiki/python_qt_binding</url>

  <depend package="rosbuild"/>

  <rosdep name="ros"/>
  <rosdep name="qt4-qmake"/>
  <rosdep name="python-qt-bindings"/>

  <export>
    <rosbuild cmake_directory="${prefix}/cmake"/>
    <cpp cflags="-I${prefix}/include"/> <!-- hack until catkin and CFG_EXTRA enables to pass path to sip_configure.py -->
  </export>

</package><package name="rovio_shared" path="" repo="rovio" repo_host="https://github.com/WPI-RAIL/rovio">
	<description brief="Standard messages and services used to communicate with a WowWee Rovio">The rovio_shared package contains standard messages and services as well as a library that can be used to communicate with a WowWee Rovio.</description>
	<author>Russell Toris</author>
	<license>BSD</license>
	<review notes="" status="unreviewed"/>
	<url>http://ros.org/wiki/rovio_shared</url>

	<depend package="roscpp"/>
	<depend package="std_msgs"/>
	<rosdep name="curl"/>

	<export>
		<cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lrovio_shared"/>
	</export> 
</package><package name="robot_state_chain_publisher" path="/robot_model/robot_state_chain_publisher" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="This package allows you to publish the state of a robot to the transform library topic. In contrast to robot_state_publisher, it publishes the complete kinematic chain."/>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>

  <depend package="kdl_parser"/>
  <depend package="sensor_msgs"/>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="tf_conversions"/>
  
  <export>
    <cpp cflags="-I${prefix}/include/"/>
  </export>
</package><package name="laser_camera_segmentation" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="Pointcloud segmentation">

     Segmentation of 3d pointclouds in clutter vs. table

  </description>
  <author>Martin Schuster, Advisor: Prof. Charlie Kemp, Lab: Healthcare Robotics Lab at Georgia Tech</author>
  <license>New BSD</license>
  <review notes="" status="unreviewed"/>
  <url/>
  <depend package="rospy"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="hrl_hokuyo"/>
  <depend package="hrl_tilting_hokuyo"/>
  <depend package="hokuyo"/>
  <depend package="tf"/>

</package><package name="ecl_navigation_apps" path="/trunk/ecl_navigation/ecl_navigation_apps" repo="ecl_navigation" repo_host="https://embedded-control-library.googlecode.com/svn">
  <description brief="app suite for the ecl_navigation">

     This includes a suite of programs demo'ing various aspects of the
     ecl_navigation. It also includes various benchmarking and utility programs for
     use primarily with embedded systems.

  </description>
  <author>Daniel Stonier (d.stonier@gmail.com)</author>
  <license>BSD</license>
  <review notes="" status="api cleared"/>
  <url>http://snorriheim.dnsdojo.com/redmine/wiki/ecl</url>
  
  <depend package="ecl_formatters"/>
  <depend package="ecl_slam"/>
  <depend package="ecl_utilities"/>
  <depend package="ecl_license"/>
  <depend package="ecl_build"/>
</package><package name="bumpercar" path="/trunk/ros/examples/bumpercar" repo="lejos" repo_host="https://lejos.svn.sourceforge.net/svnroot/lejos">
	<description brief="nxtstatus">
		NXTStatus
	</description>
	<author>Juan Antonio Brenha Moral</author>
	<license>BSD</license>
	<review notes="" status="unreviewed"/>
	<url>http://ros.org/wiki/roslejos</url>

	<depend package="rosjava"/>
	<depend package="std_msgs"/>
	<depend package="sensor_msgs"/>
	<depend package="nxt_msgs"/>

	<export>
    	<rosjava-src location="src"/> 
    	<rosjava-pathelement artifactId="org.lejos.ros.nodes.bumpercar" built="true" groupId="org.lejos.ros" location="target/" version="0.0.1"/>
    	<rosjava-pathelement location="/usr/local/lejos/lib/pc/pccomm.jar"/>
    	<rosjava-pathelement location="/usr/local/lejos/lib/pc/3rdparty/bluecove-gpl.jar"/>
    	<rosjava-pathelement location="/usr/local/lejos/lib/pc/3rdparty/bluecove.jar"/>
	</export>

</package><package name="osg_markers" path="/trunk/visualization_osg/osg_markers" repo="uji-ros-pkg" repo_host="http://uji-ros-pkg.googlecode.com/svn">
  <description brief="osg_markers">
	osg_markers is a library that creates OpenSceneGraph geometry from ROS Markers messages
  </description>
  <author>Mario Prats</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/osg_markers</url>

  <depend package="roslib"/>
  <depend package="roscpp"/>
  <depend package="visualization_msgs"/>
  <depend package="tf"/>
  <rosdep name="libopenscenegraph"/>

  <export>
	<cpp cflags="-I${prefix}/src" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -losg_markers"/>
  </export>

</package><package name="learnable_cost_function" path="" repo="usc-clmc-ros-pkg" repo_host="https://github.com/usc-clmc/usc-clmc-ros-pkg">
  <description brief="learnable_cost_function">

     learnable_cost_function

  </description>
  <author>Mrinal Kalakrishnan</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/learnable_cost_function</url>

  <depend package="roscpp"/>
  <depend package="pluginlib"/>
  <depend package="usc_utilities"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -llearnable_cost_function"/>
  </export>

</package><package name="hector_uav_msgs" path="/branches/fuerte/hector_quadrotor/hector_uav_msgs" repo="hector_quadrotor" repo_host="https://tu-darmstadt-ros-pkg.googlecode.com/svn">
  <description brief="hector_uav_msgs">

     hector_uav_msgs

  </description>
  <author>Johannes Meyer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hector_uav_msgs</url>

  <depend package="geometry_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>

</package><package name="mesh_parameterization" path="/trunk/stacks/bosch_texture_reconstruction/mesh_parameterization" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <author>Benjamin Pitzer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <depend package="roscpp"/>
  <depend package="rtc"/>
  <depend package="opennl"/>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -lmesh_parameterization"/>
  </export>
</package><package name="map_manager_app" path="" repo="map_manager_app" repo_host="https://kforge.ros.org/pr2apps/map_managerhg">
  <description brief="Map Manager">
   Manage installed apps
  </description>
  <author>Tony Pratkanis</author>
  <license>BSD</license>
  <url>http://ros.org/wiki/make_a_map</url>
  <review notes="" status="na"/>
  <depend package="mongodb"/>
  <depend package="map_store"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="jsk_maps" path="/trunk/jsk_maps" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="jsk_maps">

     jsk_maps

  </description>
  <author>Manabu Saito, Haseru Chen</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/jsk_maps</url>

  <depend package="roseus"/>
  <depend package="multi_map_server"/>

  <rosdep name="imagemagick"/>

</package><package name="smach_msgs" path="" repo="executive_smach" repo_host="https://kforge.ros.org/smach/executive_smach">
  <description brief="smach_msgs">
    This package contains a set of messages that are used in the
    internal debugging interface of a SMACH state
    machine. The <a href="http://www.ros.org/wiki/smach_viewer">smach
    viewer</a> uses this debugging interface to visualize complete
    hierarchical state machines.
  </description>
  <author>Jonathan Bohren</author>
  <license>BSD</license>
  <review notes="" status="Doc reviewed"/>
  <url>http://ros.org/wiki/smach_msgs</url>

</package><package name="visp_bridge" path="" repo="stacks/vision_visp" repo_host="git://github.com/laas/vision_visp">
  <description brief="Compatibility bridge between visp as ros">

     visp_bridge converts between ROS structures and ViSP structures.

  </description>
  <author>Filip Novotny</author>
  <license>GPLv2</license>
  <export>
    <cpp cflags="-I${prefix}/src" lflags="-L${prefix}/lib -lvisp_bridge -Wl,-rpath=${prefix}/lib"/>
  </export>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/visp_bridge</url>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="visp"/>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>

</package><package name="overhead_cam_description" path="/trunk/arrg/ua_robots/overhead_cam_description" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
  <description brief="overhead_cam_description">

     overhead_cam_description

  </description>
  <author>Jeremy</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/overhead_cam_description</url>

</package><package name="image_cb_detector" path="" repo="calibration" repo_host="http://kforge.ros.org/calibration/calibration">
  <description brief="Extract checkerboards from images">
    Provide a node that extracts checkerboard corners from ROS images.
    This package is still experimental and unstable.
    Expect its APIs to change.
  </description>
  <author>Vijay Pradeep and Eitan Marder-Eppstein</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/image_cb_detector</url>

  <depend package="calibration_msgs"/>
  <depend package="roscpp"/>
  <depend package="cv_bridge"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="image_transport"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="pcl_ros"/>

  <rosdep name="opencv2"/>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -limage_cb_detector"/>
  </export> 
</package><package name="control_arm_action" path="/trunk/pr2_elevator/control_arm_action" repo="ubc-ros-pkg" repo_host="https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg">
  <description brief="control_arm_action">

     control_arm_action

  </description>
  <depend package="roslib"/> 
  <depend package="rospy"/>
  <depend package="actionlib"/>
  <depend package="trajectory_msgs"/>
  <depend package="pr2_common_action_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  
  <author>Ankur Gupta</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/control_arm_action</url>

</package><package name="hrl_generic_arms" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="hrl_generic_arms">

     hrl_generic_arms

  </description>
  <author>Kelsey Hawkins</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hrl_generic_arms</url>
  <depend package="equilibrium_point_control"/>
  <depend package="geometry_msgs"/>
  <depend package="std_msgs"/>
  <depend package="tf"/>

</package><package name="lua_utils" path="" repo="behavior_engine" repo_host="https://github.com/timn/ros-behavior_engine">
  <description brief="lua_utils">
   This package provides utility classes to integrate Lua into a C++ program.
   The code is copied from Fawkes (http://www.fawkesrobotics.org).
  </description>
  <author>Tim Niemueller</author>
  <license>GPLv2+</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/lua_utils</url>
  <export>
    <cpp cflags="-I${prefix}/include -DUSE_ROS -DHAVE_INOTIFY `pkg-config --exists lua5.1 &amp;&amp; pkg-config --cflags lua5.1 || pkg-config --cflags lua`" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -llua_utils `pkg-config --exists lua5.1 &amp;&amp; pkg-config --libs lua5.1 || pkg-config --libs lua`"/>
  </export>
  <depend package="roscpp"/>
  <depend package="roslib"/>
  <rosdep name="lua"/>
  <rosdep name="tolua++"/>
</package><package name="sr_convenient_dependencies" path="" repo="sr_contrib" repo_host="lp:sr-contrib">
  <description brief="sr_convenient_dependencies">

     This is an empty package used for a convenient building of our packages.

  </description>
  <author>Ugo Cupcic / ugo@shadowrobot.com, contact@shadowrobot.com</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.shadowrobot.com</url>
  <depend package="rviz"/>
  <depend package="gazebo_worlds"/>
  <depend package="pr2_gazebo_plugins"/>  
  <depend package="robot_monitor"/>
  <depend package="diagnostic_aggregator"/>
  <depend package="robot_state_publisher"/>
  <depend package="pr2_mechanism_controllers"/>

</package><package name="erratic_teleop" path="/stacks/erratic_robot/trunk/erratic_teleop" repo="erratic_robot" repo_host="https://ua-ros-pkg.googlecode.com/svn">
    <description brief="Teleoperation for Erratic robot">
        This package contains keyboard teleoperation node used to drive the
        Erratic robot.
    </description>

    <author>Antons Rebguns</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/erratic_teleop</url>

    <depend package="roscpp"/>
    <depend package="geometry_msgs"/>
</package><package name="youbot_supervisor" path="" repo="euRobotics_orocos_ws" repo_host="https://github.com/bellenss/euRobotics_orocos_ws">
  <description brief="youbot_supervisor">

     youbot_supervisor: this package contains deploy scripts to launch the demo
     application. It does not contain any source code

  </description>
  <author>Steven Bellens, steven.bellens@mech.kuleuven.be</author>
  <license>LGPLv2.1 / BSD</license>
  <depend package="youbot_controller"/>
  <depend package="youbot_simulator"/>
  <depend package="extendedKalmanFilterComponentRobot"/>
</package><package name="kdl_conversions" path="" repo="rtt_geometry" repo_host="http://git.mech.kuleuven.be/robotics/rtt_geometry.git">
    <description brief="Orocos kdl_conversions Component package">
        This package contains the components of the kdl_conversions package
    </description>
    <!--NOTE: set the license and author before you publish this code-->
    <license/>
    <author>Unknown Author</author>
    <depend package="rtt"/>
    <depend package="tf_conversions"/>
</package><package name="blort" path="" repo="perception_blort" repo_host="https://github.com/pal-robotics/perception_blort">
  <description brief="blort">
    BLORT - The Blocks World Robotic Vision Toolbox <br/>
    Ported and refactored version of the library.
  </description>
  <author>Michael Zillich, <br/>
  Thomas Mörwald, <br/>
  Johann Prankl, <br/>
  Andreas Richtsfeld,<br/>
  Bence Magyar (ROS version)</author>

  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pal_blort</url>
  <depend package="roscpp"/>
  <depend package="opencv2"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="tf"/>
  <depend package="siftgpu"/>
  <rosdep name="libglu1"/>
  <export>
     <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -lros"/>
  </export>
</package><package name="rosruby_tutorials" path="" repo="rosruby_common" repo_host="https://github.com/OTL/rosruby_common">
  <description brief="rosruby_tutorials">

    rosruby_tutorials contains source codes of rosruby tutorials.

  </description>
  <author>Takashi Ogura</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosruby_tutorials</url>
  <depend package="rosruby"/>
  <depend package="rosruby_tf"/>
  <depend package="rosruby_actionlib"/>
  <depend package="roscpp_tutorials"/>
  <depend package="std_msgs"/>

</package><package name="rosruby_actionlib" path="" repo="rosruby_common" repo_host="https://github.com/OTL/rosruby_common">
  <description brief="rosruby_actionlib">

    actionlib for rosruby.

  </description>
  <author>Takashi Ogura</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosruby_actionlib</url>
  <depend package="rosruby"/>
  <depend package="actionlib_msgs"/>
  <depend package="actionlib_tutorials"/> <!-- for test only -->

</package><package name="pr2_gripper_sensor_controller" path="/stacks/pr2_object_manipulation/branches/0.6-branch/manipulation/pr2_gripper_sensor_controller" repo="pr2_object_manipulation" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_gripper_sensor_controller">

     The pr2_gripper_sensor_controller package is a real-time controller that integrates signals from the PR2 hand-mounted accelerometer and finger-mounted pressure sensors with motor control of the gripper joint to do highly responsive sensing and low-latency closed-loop control.

  </description>
  <author>Joe Romano</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_gripper_sensor_controller</url>
  <depend package="pr2_controller_interface"/>
  <depend package="pr2_mechanism_model"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="realtime_tools"/>
  <depend package="pluginlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="roscpp"/>
  <depend package="rosrt"/>
  <depend package="roslib"/>
  <depend package="std_msgs"/>
  <depend package="std_srvs"/>
  <depend package="pr2_gripper_sensor_msgs"/>

  <export>
      <cpp cflags="-I${prefix}/msg/cpp"/>
      <pr2_controller_interface plugin="${prefix}/controller_plugins.xml"/>
  </export>  

</package><package name="rosh" path="" repo="rosh_core" repo_host="https://kforge.ros.org/rosh/rosh_core">
  <description brief="rosh">

     rosh is a Python-based scripting and runtime environment for ROS.  Through rosh and its various plugins, you can interact with ROS APIs in an introspectable and unified approach.

  </description>
  <author>Ken Conley</author>
  <license>BSD</license>
  <review notes="2010/10" status="API reviewed"/>
  <url>http://ros.org/wiki/rosh</url>

  <!-- temporary, to test rewrite of roslaunch -->
  <depend package="roshlaunch"/>
  
  <depend package="rospy"/>
  <depend package="rosgraph"/>
  <depend package="rosnode"/>
  <depend package="rostopic"/>
  <depend package="rosservice"/>
  <depend package="rosparam"/>
  <depend package="rosmsg"/>

  <rosdep name="ipython"/>

  <export>
    <rosdoc config="${prefix}/rosdoc.yaml"/>
  </export>
</package><package name="network_traffic_control" path="/stacks/linux_networking/trunk/network_traffic_control" repo="linux_networking" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="network_traffic_control">
  A ROS node that allows control of network emulation parameters such as bandwidth, loss and latency for a Linux network interface. 
  </description>
  <author>Catalin Drula</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/network_traffic_control</url>
  <depend package="rospy"/>
  <depend package="dynamic_reconfigure"/>
</package><package name="contour_matcher" path="/trunk/cturtle/contour_matcher" repo="seabee3-ros-pkg" repo_host="http://seabee3-ros-pkg.googlecode.com/svn">
  <description brief="contour_matcher">

     contour_matcher

  </description>
  <author>Edward</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/contour_matcher</url>
  <depend package="base_libs"/>
  <depend package="color_blob_finder"/>
  <depend package="opencv2"/>
  <depend package="pluginlib"/>
  <depend package="nodelet"/>

</package><package name="pr2_kinect_teleop" path="/branches/stable/wu_pr2_demos/pr2_kinect_teleop" repo="wu-ros-pkg" repo_host="https://wu-robotics.googlecode.com/svn">
  <description brief="Teleop PR2 Using Kinect">
    Another simple demo that moves the PR2 based on an openni-recognized skeleton
  </description>
  <author>David V. Lu!!</author>
  <license>BSD</license>
  <url>http://ros.org/wiki/pr2_kinect_teleop</url>
  <depend package="rospy"/>
  <depend package="sensor_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="pr2_gripper_sensor_msgs"/>
  <depend package="pr2_trajectory"/>
  <depend package="actionlib"/>
</package><package name="soem_beckhoff_drivers" path="" repo="soem" repo_host="http://git.mech.kuleuven.be/robotics/soem.git">
  <description brief="soem_beckhoff_drivers">

     soem_beckhoff_drivers contains drivers for the ethercat beckhoff modules to work together with the soem_master package, every module creates the necessary services, dataports and properties for its own functionality.

  </description>
  <author>Ruben Smits</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/soem_beckhoff_drivers</url>
  <depend package="soem_core"/>
  <depend package="soem_master"/>
  <depend package="rtt"/>
  <depend package="rtt_rosnode"/>


</package><package name="bondcpp" path="" repo="bond_core" repo_host="https://kforge.ros.org/common/bondcore">
  <description brief="bondcpp">

     C++ implementation of bond, a mechanism for checking when
     another process has terminated.

  </description>
  <author>Stuart Glaser</author>
  <license>BSD</license>
  <review notes="http://www.ros.org/wiki/bond/Reviews/2010-07-28_API_Review" status="API cleared"/>
  <url>http://ros.org/wiki/bondcpp</url>
  <depend package="bond"/>
  <depend package="roscpp"/>
  <depend package="smclib"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lbondcpp"/>
  </export>

  <rosdep name="uuid"/>

</package><package name="rve_properties" path="" repo="visualization_engine" repo_host="https://kforge.ros.org/visengine/hg">
  <description brief="rve_properties">

     rve_properties

  </description>
  <author>Josh Faust</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rve_properties</url>
  
  <depend package="roscpp"/>
  
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lrve_properties"/>
  </export>

</package><package name="cob_controller_configuration_gazebo" path="" repo="cob_robots" repo_host="git://github.com/ipa320/cob_robots">
  <description brief="cob_controller_configuration_gazebo">

    This packages provides the controller configuration for simulating Care-O-bot in the gazebo simulator.

  </description>
  <author>Florian Weisshardt</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_controller_configuration_gazebo</url>
  
  <depend package="rostopic"/>
  <depend package="joint_trajectory_action"/>
  <depend package="pr2_controller_manager"/>
  <depend package="cob_bringup"/>
  <depend package="cob_sick_s300"/>
  <depend package="cob_relayboard"/>
  <depend package="cob_sound"/>
  <depend package="image_proc"/>
  <depend package="schunk_simulated_tactile_sensors"/>
  <depend package="cob_phidgets"/>

</package><package name="projector_camera_calibration" path="/trunk/3dscanning/projector_camera_calibration" repo="stanford-ros-pkg" repo_host="https://stanford-ros-pkg.googlecode.com/svn">
  <description brief="projector_camera_calibration">

     projector_camera_calibration

  </description>
  <author>David Mandle</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/projector_camera_calibration</url>
  <depend package="rospy"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="sensor_msgs"/>
  <depend package="image_geometry"/>
  <depend package="projector"/>
</package><package name="levmar" path="/3rdparty/levmar" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="levmar">
    A native ANSI C implementations of the Levenberg-Marquardt optimization algorithm.
  </description>

  <author>Manolis Lourakis</author>
  <license>GPL</license>
  <review notes="" status="3rdparty"/>
  <url>http://www.ics.forth.gr/~lourakis/levmar/</url>
  <export>
    <cpp cflags="-I${prefix}/build/levmar-2.4" lflags="-Wl,-rpath,${prefix}/build/build -L${prefix}/build/build -llevmar -llapack"/>
  </export>
  <sysdepend os="ubuntu" package="liblapack-dev" version="9.04-jaunty"/>
</package><package name="smclib" path="" repo="bond_core" repo_host="https://kforge.ros.org/common/bondcore">
  <description brief="smclib">
    The State Machine Compiler (SMC) from http://smc.sourceforge.net/
    converts a language-independent description of a state machine
    into the source code to support that state machine.

    This package contains the libraries that a compiled state machine
    depends on, but it does not contain the compiler itself.

  </description>
  <author>Various, ROS package maintained by Stuart Glaser</author>
  <license>Mozilla Public License Version 1.1</license>
  <review notes="" status="3rdparty"/>
  <url>http://smc.sourceforge.net/</url>

  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>

</package><package name="tabletop_pushing" path="" repo="gt-ros-pkg.cpl" repo_host="https://code.google.com/p/gt-ros-pkg.cpl">
  <description brief="tabletop_pushing">

     tabletop_pushing

  </description>
  <author>Tucker Hermans</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/tabletop_pushing</url>
  <depend package="roscpp"/>
  <depend package="stereo_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="pcl16"/>
  <depend package="pcl16_ros"/>
  <depend package="tf"/>
  <depend package="tf_conversions"/>
  <depend package="cpl_visual_features"/>
  <depend package="cpl_superpixels"/>
  <depend package="image_transport"/>
  <depend package="cv_bridge"/>
  <depend package="hrl_pr2_lib"/>
  <depend package="pr2_manipulation_controllers"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="hrl_pr2_arms"/>
  <depend package="robot_mechanism_controllers"/>
  <depend package="pr2_camera_self_filter"/>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lpoint_cloud_segmentation"/>
  </export>

  <rosdep name="opencv2"/>
</package><package name="2010_biorob_everyday_mechanics" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief=".">
        This package contains code associated with the following publication:
        The Complex Structure of Simple Devices: A Survey of Trajectories and Forces that Open Doors and Drawers.
        Advait Jain, Hai Nguyen, Mrinal Rath, Jason Okerman and Charles C. Kemp. IEEE RAS and EMBS International Conference on Biomedical Robotics and Biomechatronics (BioRob) 2010
  </description>
  <author>Advait Jain, Hai Nguyen, Charles C. Kemp (Healthcare Robotics Lab, Georgia Tech)</author>
  <license>New BSD</license>

  <depend package="rospy"/>
  <depend package="hrl_lib"/>
  <depend package="force_torque"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="hrl_camera"/>
  <depend package="checkerboard_detector"/>

  <depend package="hrl_tilting_hokuyo"/>
  <depend package="equilibrium_point_control"/>
</package><package name="interactivespaces_msgs" path="" repo="interactive-spaces" repo_host="https://code.google.com/p/interactive-spaces">
  <description brief="ecsj_msgs">
These messages are used by the ECSj system.
  </description>
  <author>Keith Hughes</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ecs2_msgs</url>

  <depend package="std_msgs"/>
  <depend package="actionlib_msgs"/>
</package><package name="nodemon_cpp" path="" repo="node_monitoring" repo_host="http://github.com/timn/ros-node_monitoring">
  <description brief="nodemon_cpp">
    Node monitoring C++ library.
  </description>
  <author>Tim Niemueller</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/nodemon_cpp</url>
    <export>
      <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lnodemon"/>
    </export>
  <depend package="roscpp"/>
  <depend package="nodemon_msgs"/>
</package><package name="speech_interface" path="" repo="haikalpribadi-ros-pkg" repo_host="https://github.com/haikalpribadi/haikalpribadi-ros-pkg">
  <description brief="Natural Speech Interface">

     A natural speech interface package that is able to extract predefined 
     commands from recognized (natural) speeches, perform text-to-speech 
     functionality, as well as providing a console for text-to-speech input.
     
  </description>
  <author>Haikal Pribadi (haikal.pribadi@gmail.com)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/speech_interface</url>
  <depend package="std_msgs"/>
  <depend package="roscpp"/>
  <depend package="pocketsphinx"/>
  
  <rosdep name="festival"/>

</package><package name="sbpl_dynamic_env_global_planner" path="/sbpl_dynamic_env/trunk/sbpl_dynamic_env_global_planner" repo="sbpl_dynamic_env" repo_host="https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs">
  <description brief="sbpl_dynamic_env_global_planner">

A wrapper around sbpl_dynamic_planner which allows it to be used as a global planner for the navigation stack.

  </description>
  <author>Michael Phillips</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sbpl_dynamic_env_global_planner</url>
  <depend package="roscpp"/>
  <depend package="sbpl"/>
  <depend package="sbpl_dynamic_planner"/>
  <depend package="dynamic_obs_msgs"/>
  <depend package="costmap_2d"/>
  <depend package="nav_core"/>
  <depend package="pluginlib"/>
  <depend package="actionlib_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lsbpl_dynamic_env_global_planner"/>
    <nav_core plugin="${prefix}/bgp_plugin.xml"/>
  </export>

</package><package name="collada_robots" path="/trunk/openrave_planning/collada_robots" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="COLLADA Robot Repository">
    COLLADA 1.5 Robot Models Repository

    This repository is associated with the Open Robotics Automation Virtual Environment (OpenRAVE). The open and view them, install OpenRAVE and execute:
    
    openrave XXX.zae
    
    The robots are augmented with information as described by the &quot;OpenRAVE&quot; profile here:
    http://openrave.programmingvision.com/index.php/Started:COLLADA
    
    *.zae files are zip archives which contain the raw collada 1.5 xml (dae).
  </description>
  <author>package maintainance: Rosen Diankov</author>
  <license/>
  <review notes="" status="unreviewed"/>
  <url>http://www.openrave.org/en/main/robots.html</url>
</package><package name="ecl_build" path="/trunk/ecl_tools/ecl_build" repo="ecl_tools" repo_host="https://embedded-control-library.googlecode.com/svn">
  <description brief="Cmake and make based build tools for generic and ros environments">

     Collection of cmake/make build tools primarily for ecl development itself, but also
     contains a few cmake modules useful outside of the ecl.

  </description>
  <author>Daniel Stonier (d.stonier@gmail.com)</author>
  <license>BSD</license>
  <review notes="" status="doc reviewed"/>
  <url>http://snorriheim.dnsdojo.com/redmine/wiki/ecl</url>
  <depend package="ecl_license"/>
  <depend package="rosbuild"/>
  <export>
    <rosdoc config="rosdoc.yaml"/>
    <rosbuild cmake_directory="${prefix}/cmake/modules"/>
  </export>
  <rosbuild2>
    <export>
      <rosdoc config="rosdoc.yaml"/>
      <rosbuild cmake_directory="${prefix}/cmake/modules"/>
    </export>
    <depend package="ecl_license"/>
    <!--depend package="rosbuild"/-->
  </rosbuild2>
</package><package name="DPPanTilt_msgs" path="/darpa_arm_msgs/DPPanTilt_msgs" repo="darpa_arm_msgs" repo_host="http://svn.thearmrobot.com">
  <description brief="DPPanTilt_msgs">

     DPPanTilt_msgs

  </description>
  <author>DARPA ARM GFE Team</author>
  <license>GPL</license>

  <depend package="roscpp"/>

  <export>
    <cpp cflags="-I${prefix}/msg/cpp -I${prefix}/srv/cpp"/>
  </export>
  
</package><package name="shadow_arm_navigation" path="" repo="sr_object_manipulation" repo_host="lp:sr-manipulation">
  <description brief="shadow_arm_navigation">

     shadow_arm_navigation

  </description>
  <author>Ugo Cupcic</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/shadow_arm_navigation</url>
  <depend package="planning_environment"/>
  <depend package="arm_kinematics_constraint_aware"/>
  <depend package="ompl_ros_interface"/>
  <depend package="trajectory_filter_server"/>
  <depend package="constraint_aware_spline_smoother"/>
  <depend package="move_arm"/>

</package><package name="netft_example_controllers" path="/stacks/netft/trunk/netft_example_controllers" repo="netft" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="netft_example_controllers">

     netft_example_controllers

     Provides simple example controller that shows how to 
     access force-torque data provided by netft_ethercat_hardware plugin.

     This also provides a convientent way to make sure that
     netft_ethercat_hardware plug-in is actually loaded and working.

  </description>
  <author>DerekKing</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/netft_example_controllers</url>
  <depend package="roscpp"/>
  <depend package="ethercat_hardware"/>
  <depend package="pr2_controller_interface"/>

  <export>
    <pr2_controller_interface plugin="${prefix}/controller_plugins.xml"/>
  </export>


</package><package name="cyphy_rcRos" path="" repo="cyphy_legacy" repo_host="http://launchpad.net/cyphy">
  <description brief="rcRos">
    Package to communicate with a low level avr over serial to generate/receive RC pulses. 
  </description>
  <author>Steven Martin</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/temp</url>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="nav_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="tf"/>
  <depend package="cereal_port"/>
</package><package name="elektron_calibration" path="" repo="elektron_kinectbot" repo_host="https://github.com/RCPRG-ros-pkg/elektron_kinectbot">
  <description brief="elektron_calibration">

     Applications to calibrate Elektron motion sensors (gyroscope and odometry).

  </description>
  <author>Maciej Stefańczyk</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/elektron_calibration</url>
  
  <depend package="rospy"/>
  <depend package="sensor_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="kdl"/>

</package><package name="simulator_state" path="/trunk/arrg/ua_verbs/simulator_state" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">

    <description brief="simulator_state">

    Gazebo plugins for publishing the simulation state with relations.

    </description>

    <author>Daniel Hewlett</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/simulator_state</url>

    <depend package="roscpp"/>

    <depend package="std_msgs"/>
    <depend package="std_srvs"/>
    <depend package="geometry_msgs"/>
    <depend package="oomdp_msgs"/>
    
    <depend package="gazebo"/>
    <depend package="gazebo_tools"/>
    <depend package="gazebo_plugins"/>

    <depend package="bullet"/>

    <export>
        <cpp cflags="-I${prefix}/msg/cpp"/>
        <gazebo plugin_path="${prefix}/lib"/>
    </export>

</package><package name="phidget_ik" path="/trunk/phidget_ik" repo="dri-ros-pkg" repo_host="https://svn.3me.tudelft.nl/dri-ros-pkg">
  <description brief="phidget_ik">

     phidget_ik extends phidgetspp to the PhidgetInterfaceKit.

  </description>
  <author>Wouter Caarls</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/phidget_ik</url>
  <depend package="phidgetspp"/>

  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>
        
</package><package name="summit_odometry" path="/trunk/trunk/summit_sim/summit_odometry" repo="summit-ros-pkg" repo_host="http://summit-ros-stack.googlecode.com/svn">
  <description brief="summit_odometry">

     summit_odometry

  </description>
  <author>Robert</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/summit_odometry</url>
  <depend package="roscpp"/>
  <depend package="summit_controller"/>
  <depend package="nav_msgs"/>
  <depend package="tf"/>
  <depend package="pr2_mechanism_model"/>
  <depend package="pr2_controller_interface"/>
  <depend package="sensor_msgs"/>

</package><package name="cram_physics_utils" path="" repo="cram_physics" repo_host="https://github.com/moesenle/cram_physics">
  <description brief="cram_physics_utils">

     cram_physics_utils

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/bullet_utils</url>
  <depend package="cl_transforms"/>
  <depend package="cffi"/>
  <depend package="cffi_ros_utils"/>
  <depend package="roslisp_runtime"/>

</package><package name="pr2_control_gui" path="" repo="uuisrc-pr2-pkgs" repo_host="https://github.com/uu-isrc-robotics/uu-isrc-robotics-pr2-pkgs">
  <description brief="pr2_control_gui">

     A control GUI for the PR2 which allows to save the joint states in a stack.

     Be careful with the values as there are no limits.

  </description>
  <author>Yiannis Gatsoulis Lorenzo Riano</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_control_gui</url>
  <depend package="rospy"/>
  <depend package="pr2_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="trajectory_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="actionlib"/>
  <depend package="pr2_control_utilities"/>


</package><package name="comp_orgprinciples" path="/tags/latest/comp_orgprinciples" repo="knowrob" repo_host="http://code.in.tum.de/pubsvn/knowrob">
  <description brief="comp_orgprinciples">

     Routines for reasoning about organizational principles in the environment (Prolog).

     Contains Prolog computables for calculating the best location where a (new) object 
     should be placed (or searched for), given a knowledge base containing an Ontology 
     including the object's class and information about the locations of other objects
     in the environment.

  </description>
  <author>Martin Schuster</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/comp_orgprinciples</url>

<depend package="comp_germandeli"/>
<depend package="ias_semantic_map"/>
  <depend package="rosprolog"/>
  <depend package="ias_prolog_addons"/>
<depend package="mod_vis"/>

  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>
</package><package name="walk_tools" path="" repo="stacks/humanoid_walk" repo_host="git://github.com/laas/humanoid_walk">
  <description brief="Walk tools">

     Gathers tools providing useful computations when dealing with
     walking trajectory generation.

  </description>
  <author>Thomas Moulard</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/walk_tools</url>

  <depend package="rospy"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="message_filters"/>

  <depend package="diagnostic_aggregator"/>
  <depend package="diagnostic_updater"/>

  <depend package="urdf_parser_py"/>
</package><package name="udp_proxy_generator" path="" repo="cn-util-ros-pkg" repo_host="https://code.google.com/p/cn-util-ros-pkg">
  <description brief="udp_proxy_generator">

     udp_proxy_generator

  </description>
  <author>hendrik</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/udp_proxy_generator</url>
  <depend package="rosbuild"/>
  <depend package="roscpp"/>
  <depend package="roscs"/>
  <export>
   <rosbuild cmake_directory="${prefix}/cmake"/>
  </export>
</package><package name="BarrettCompat" path="/darpa_arm_sim_servers/BarrettCompat" repo="darpa_arm_sim_servers" repo_host="http://svn.thearmrobot.com">
  <description brief="BarrettCompat">

     BarrettCompat 

  </description>
  <author>DARPA ARM GFE Team</author>
  <license>GPLv(3 or greater)</license>

  <depend package="roscpp"/>
  
  <depend package="WAM_msgs"/>
  <depend package="BHand_msgs"/>
  <depend package="PressureSensor_msgs"/>
  <depend package="ForceTorque_msgs"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  
  <depend package="pr2_mechanism_model"/>
  <depend package="pr2_mechanism_diagnostics"/>
  <depend package="pr2_controller_interface"/>
  <depend package="pr2_mechanism_msgs"/>
  <depend package="pr2_mechanism_model"/>
  <depend package="control_toolbox"/>
  <depend package="gazebo_plugins"/>
  <depend package="SimGazeboControllers"/>
  <depend package="gazebo"/>

  <rosdep name="config"/>
  <rosdep name="config++"/>
  <rosdep name="gsl"/>

  <export>
    <cpp cflags="-I${prefix}/include/" lflags="-Wl,-rpath,${prefix}/lib/ -L${prefix}/lib -lbarrettcompat"/>
  </export>

  
</package><package name="calibration_msgs" path="" repo="calibration" repo_host="http://kforge.ros.org/calibration/calibration">
  <description brief="Messages for full robot calibration">
     This package defines messages for storing calibration samples
     to be used in full robot calibration procedures. This package
     is still unstable. Expect the messages to change.
  </description>
  <author>Vijay Pradeep</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.ros.org/wiki/calibration_msgs</url>

  <!-- common_msgs -->
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
</package><package name="monocam_settler" path="" repo="calibration" repo_host="http://kforge.ros.org/calibration/calibration">
  <description brief="Waits for features in a single camera to settle">
     Listens on a ImageFeatures topic, and waits for the data to settle.
     This package is experimental and unstable.
     Expect its APIs to change.
  </description>
  <author>Vijay Pradeep</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.ros.org/wiki/monocam_settler</url>

  <!-- ros -->
  <depend package="roscpp"/>

  <!-- common -->
  <depend package="actionlib"/>

  <!-- common_msgs -->
  <depend package="actionlib_msgs"/>

  <!-- robot_calibration -->
  <depend package="settlerlib"/>
  <depend package="calibration_msgs"/>

</package><package name="rosserial_android" path="" repo="rosserial_android" repo_host="https://kforge.ros.org/rosserial/android">
  <description brief="rosserial_android">

     rosserial_android is an Android implementation of the rosserial
     master protocol.  It provides an Android service which 
     communicates with an Android ADK board and publishes the messages
     directly to ROS.
  </description>
  <author>Adam Stambler</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosserial_android</url>
  <depend package="rosjava"/>
  <depend package="rosserial_java"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="rosserial_msgs"/>
  <depend package="android"/>
    
  <export>
    <rosjava-android-app/>
    <rosjava-android target="Google Inc.:Google APIs:10"/>
    <rosjava-src location="src"/>
    <rosjava-src location="gen"/>
    <rosjava-src location="res"/>    
  </export>

</package><package name="bosch_assistive_teleop" path="/trunk/stacks/bosch_shared_autonomy_experimental/bosch_assistive_teleop" repo="bosch-ros-pkg-e" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg-e/code">
  <description brief="assistive_teleop">

     assistive_teleop

  </description>
  <author>Sarah Osentoski, Thomas Witzig, Jihoon Lee, Kyle Maroney</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/assistive_teleop</url>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="robot_mechanism_controllers"/>
  <depend package="tf"/>
  <depend package="pr2_gripper_sensor_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="image_geometry"/>
  <depend package="object_manipulation_msgs"/>  
  <depend package="tabletop_object_detector"/>
  <depend package="object_manipulator"/>
  <depend package="point_cloud_server"/>
  <depend package="shared_autonomy_msgs"/>
  
   <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -lassistiveteleop"/>
  </export>

 </package><package name="rviz_qt" path="" repo="visualization_experimental" repo_host="https://kforge.ros.org/visualization/vis-exp">
  <description brief="rviz_qt">

     rviz_qt

  </description>
  <author>Dave Hershberger</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rviz_qt</url>

  <depend package="ogre"/>
  <depend package="ogre_tools_qt"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="rosconsole"/>
  <depend package="message_filters"/>
  <depend package="std_msgs"/>
  <depend package="std_srvs"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="tf"/>
  <depend package="laser_geometry"/>
  <depend package="visualization_msgs"/>
  <depend package="urdf"/>
  <depend package="urdf_interface"/>
  <depend package="resource_retriever"/>
  <depend package="image_transport"/>
  <depend package="interactive_markers"/>
  <depend package="pluginlib"/>
  <depend package="common_rosdeps"/>
  <export> 
      <cpp cflags="-I${prefix}/src/" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lrviz_qt"/>
      <python path="${prefix}/lib:${prefix}/src/python_bindings"/>
      <rviz_qt plugin="${prefix}/src/rviz/default_plugin/plugin_description.xml"/>
  </export>
  <rosdep name="libqt4-dev"/>
  <rosdep name="libqt4-opengl-dev"/>
  <rosdep name="qt4-qmake"/>
  <rosdep name="assimp"/>
  <rosdep name="pyside"/>
  <rosdep name="yaml-cpp"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="rosjava_zeroconf_common" path="" repo="interactive-spaces" repo_host="https://code.google.com/p/interactive-spaces">
	<description brief="rosjava_zeroconf_common">
		Common Zeroconf module for ROS.
	</description>
	<author>Keith Hughes/khughes@google.com</author>
	<license>Apache License 2.0</license>
	<review notes="" status="unreviewed"/>
	<url>http://code.google.com/p/interactive-spaces/</url>
	
	<depend package="rosjava"/>
	<depend package="osgi"/>

	<rosdep name="java"/>
</package><package name="interactivespaces-service-script" path="" repo="interactive-spaces" repo_host="https://code.google.com/p/interactive-spaces">
	<description brief="interactivespaces.service.script">
		Scripting service for Interactive Spaces.
	</description>
	<author>Keith Hughes/khughes@google.com</author>
	<license>Apache License 2.0</license>
	<review notes="" status="unreviewed"/>
	<url>http://code.google.com/p/interactive-spaces/</url>
	
	<depend package="interactivespaces"/>

	<rosdep name="java"/>
</package><package name="rcf_com_roomba_ctr_3d_scan" path="/trunk/RCF4ROS/com/rcf_com_roomba_ctr_3d_scan" repo="roblab-whge-ros-pkg" repo_host="http://roblab-whge-ros-pkg.googlecode.com/svn">
  <description brief="rcf_com_roomba_ctr_3d_scan">

     Controls the roomba 3D - Scan.

  </description>
  <author>B. König </author>
  <license>CreativeCommons BY-NC-SA License</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rcf_com_roomba_ctr_3d_scan</url>
  <depend package="roscpp"/>
  <depend package="my3dscan"/>
  <depend package="rcf_control_protocol"/>
  <depend package="sensor_msgs"/>

</package><package name="wubble_2dnav" path="/trunk/arrg/wubble_navigation_apps/wubble_2dnav" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="Global navigation for the Wubble robot.">
        This application allows the Wubble robot to navigate autonomously with a pre-specified static map.
    </description>
    <author>Antons Rebguns</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/wubble_2dnav</url>
    
    <depend package="wubble_navigation_global"/>
</package><package name="parsec_arduino_tests" path="" repo="parsec" repo_host="https://code.google.com/p/parsec">
  <description brief="parsec_arduino_tests">

     parsec_arduino_tests

  </description>
  <author>Wolfgang Hess</author>
  <license>Apache 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/parsec_arduino_tests</url>

  <depend package="parsec_arduino"/>

</package><package name="hokuyo_listener_cu" path="/trunk/hokuyo_listener_cu" repo="prairiedog" repo_host="http://prairiedog.googlecode.com/svn">
  <description brief="hokuyo_listener_cu">

     hokuyo_listener_cu

  </description>
  <author>common</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://correll.cs.colorado.edu/pmwiki/index.php/Main/LaserScanner</url>
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="hokuyo_node"/>
  <depend package="tf"/>

  <export>
    <cpp cflags="-I${prefix}/msg/cpp"/>
  </export>
</package><package name="nxt_rviz_plugin" path="" repo="foote-nxt" repo_host="https://nxt.foote-ros-pkg.googlecode.com/hg/">
  <description brief="nxt_rviz_plugin">

     nxt_rviz_plugin provides plugins for rviz for visualizing data coming from the nxt sensors. 

  </description>
  <author>Melonee Wise</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/nxt_rviz_plugin</url>
  <depend package="rviz"/>
  <depend package="roscpp"/>
  <depend package="nxt_msgs"/>
  <depend package="tf"/>

  <export>
    <rviz plugin="${prefix}/lib/nxt_rviz_plugin.yaml"/>
  </export>


</package><package name="policy_learning_tools" path="" repo="usc-clmc-ros-pkg" repo_host="https://github.com/usc-clmc/usc-clmc-ros-pkg">
  <description brief="policy_learning_tools">

     policy_learning_tools

  </description>
  <author>Mrinal Kalakrishnan</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/policy_learning_tools</url>
  <depend package="policy_library"/>
  <depend package="dynamic_movement_primitive_utilities"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lpolicy_learning_tools"/>
  </export>


</package><package name="roboptim_smoother" path="" repo="stacks/redundant_manipulator_control" repo_host="git://github.com/laas/redundant_manipulator_control">
  <description brief="roboptim_smoother">

     roboptim_smoother

  </description>
  <author>Thomas Moulard</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/roboptim_smoother</url>

</package><package name="cop_client_cpp" path="/perception/cop_client_cpp" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
<description>cop_client_cpp</description>
<author>Ulrich F Klank</author>
<license>GPL</license>
<depend package="roscpp"/>
<depend package="vision_srvs"/>
<depend package="tf"/>
<export>
 <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -lcopclientcpp"/>
</export>
</package><package name="imu_filter_madgwick" path="" repo="imu_tools" repo_host="https://github.com/ccny-ros-pkg/imu_tools">
  <description brief="imu_filter_madgwick">

     Filter which fuses angular velocities, accelerations, and (optionally) magnetic readings from a generic IMU device into an orientation. Based on code by Sebastian Madgwick, http://www.x-io.co.uk/node/8#open_source_ahrs_and_imu_algorithms.

  </description>
  <author>Ivan Dryanovski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/imu_filter_madgwick</url>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="tf"/>
  <depend package="nodelet"/>
  <depend package="message_filters"/>

  <export>
    <nodelet plugin="${prefix}/imu_filter_nodelet.xml"/>
  </export>

</package><package name="cl_urdf" path="" repo="cram_physics" repo_host="https://github.com/moesenle/cram_physics">
  <description brief="cl_urdf">

     cl_urdf

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cl_urdf</url>
  <!-- We include roslisp here to get the s-xml library which is part
       of roslisp's xml-rpc library -->
  <depend package="roslisp_runtime"/>
  <depend package="cl_transforms"/>
  <depend package="cram_physics_utils"/>
  <depend package="cram_physics_utils"/>
</package><package name="pycontroller_manager" path="" repo="rcommander_pr2" repo_host="https://kforge.ros.org/rcommander/rcommander_pr2">
  <description brief="pycontroller_manager">

     pycontroller_manager

  </description>
  <author>Hai</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pycontroller_manager</url>

  <depend package="rospy"/>
  <depend package="pr2_mechanism_msgs"/>

</package><package name="pr2_object_manipulation_launch" path="/stacks/pr2_object_manipulation/branches/0.6-branch/manipulation/pr2_object_manipulation_launch" repo="pr2_object_manipulation" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_object_manipulation_launch">

    Contains launch and configuration files for starting the
    manipulation pipeline, along with all needed controllers,
    planners, etc., on the PR2 robot.

  </description>
  <author>Matei Ciocarlie</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_object_manipulation_launch</url>

  <depend package="dynamic_reconfigure"/>

  <!-- arm navigation -->
  <depend package="pr2_arm_navigation_perception"/>
  <depend package="pr2_arm_navigation_planning"/>
  <depend package="pr2_arm_navigation_actions"/>
  <depend package="pr2_arm_navigation_filtering"/>
  <depend package="pr2_arm_navigation_kinematics"/>
  <depend package="interpolated_ik_motion_planner"/>
  <depend package="trajectory_filter_server"/>
  <depend package="pr2_manipulation_controllers"/>
  <depend package="current_state_validator"/>
  

  <!-- manipulation -->
  <depend package="object_manipulator"/>
  <depend package="probabilistic_grasp_planner"/>
  <depend package="bayesian_grasp_planner"/>
  <depend package="pr2_gripper_grasp_controller"/>
  <depend package="pr2_gripper_reactive_approach"/>
  <depend package="pr2_gripper_grasp_planner_cluster"/>

</package><package name="rcf_skype" path="/trunk/RCF4ROS/base/rcf_skype" repo="roblab-whge-ros-pkg" repo_host="http://roblab-whge-ros-pkg.googlecode.com/svn">
  <description brief="rcf_com_skype">

    rcf_com_skype

    Mimics Skype access in ROS for the RCFCommunication Layer between RCF Client
    applications and RCF4ROS communication stack nodes via Skype protocols.
      
    Uses Skype4Py Wrapper for Skype API access.
     
    Implements these Skype API's for:
    - Skype Attach
    - PlaceCall,
    - SendMessage.

    SkypeBridge features Skype4Py like Skype API support e.g. register event
    handlers etc.
    
    SkypeMimicNode is a skype server node offering ROS services for sending
    chat messages and handling calls.
    
    RCF is the Roomba Control Framework specification. RCF is a recommendation on
    how to develop server-client robot control software based on iRobot's Roomba
    service robot.

    For more on RCF, RCF4ROS and rcf.com.skype see:
    RoblabFhGe Blog   

  </description>
  <author>B. Fibricius</author>
  <license>CreativeCommons BY-NC-SA License</license>
  <review notes="" status="unreviewed"/>
  <url>https://fileserver.informatik.fh-gelsenkirchen.de:3711/trac/roblab</url>
  <versioncontrol type="svn" url="https://fileserver.informatik.fh-gelsenkirchen.de:3711/roblab/rcf4ros/trunk/"/>  
  <depend package="std_msgs"/>
  <depend package="rospy"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <rosdep name="skype"/>
  <rosdep name="python-skype"/>
  <export>
  	<rosdoc config="rosdoc.yaml"/>  	
        <cpp cflags="-I${prefix}/include"/>
  </export>

</package><package name="openni_camera_deprecated" path="" repo="openni_kinect" repo_host="https://kforge.ros.org/openni/openni_ros">
  <description brief="An OpenNI camera ROS driver">

    Deprecated ROS driver for OpenNI depth cameras.

  </description>

  <author>Suat Gedikli, Patrick Mihelich, Radu Bogdan Rusu</author>

  <license>BSD</license>

  <url>http://ros.org/wiki/openni_camera_deprecated</url>

  <review notes="beta" status="experimental"/>

  <depend package="openni_camera"/>

  <depend package="camera_info_manager"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="image_transport"/>
  <depend package="nodelet"/>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>

  <!-- Following packages only required for old nodelet and launch files -->
  <depend package="common_rosdeps"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="stereo_msgs"/>
  <depend package="tf"/>

  <rosdep name="eigen"/>

  <export>
    <cpp lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lopenni_deprecated"/>
    <nodelet plugin="${prefix}/openni_nodelets.xml"/>
  </export>

  <platform os="ubuntu" version="10.04"/>
  <platform os="ubuntu" version="10.10"/>
</package><package name="openrtm_cpp" path="" repo="stacks/openrtm_cpp" repo_host="git://github.com/laas/openrtm_cpp">
  <description brief="OpenRTM C++">
    ROS package of the 3rd party package OpenRTM-aist C++.
  </description>
  <author>Thomas Moulard/thomas.moulard@gmail.com</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://www.openrtm.org/</url>

  <export>
    <cpp cflags="-I${prefix}/install/include `pkg-config --cflags omniORB4`" lflags="-L${prefix}/install/lib -Wl,-rpath,${prefix}/install/lib `pkg-config --libs omniORB4`"/>

    <rosdoc config="rosdoc.yaml"/>
  </export>

  <versioncontrol type="svn" url="http://www.openrtp.jp/openrtm/svn/OpenRTM-aist/trunk/OpenRTM-aist"/>


  <rosdep name="pkg-config"/>
  <rosdep name="uuid"/>
  <rosdep name="omniorb"/>
  <rosdep name="python-yaml"/>
  <rosdep name="doxygen"/>
</package><package name="color_voxel_recognition" path="" repo="isi-ros-pkg" repo_host="http://github.com/kanezaki/isi-ros-pkg">
  <description brief="color_voxel_recognition">

     Tools for object detection using C3-HLAC features and linear subspace method.

  </description>
  <author>kanezaki</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/color_voxel_recognition</url>
  <depend package="roscpp"/>
  <depend package="pcl"/>
  <depend package="c3_hlac"/>
  <depend package="visualization_msgs"/>
  <export>
    <cpp cflags="-I${prefix}/include/" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lcolor_voxel_recognition"/>
  </export>
</package><package name="cyphy_height_estimator" path="" repo="cyphy_legacy" repo_host="http://launchpad.net/cyphy">
  <description brief="cyphy_height_estimator">

     cyphy_height_estimator

  </description>
  <author>Inkyu Sa</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cyphy_height_estimator</url>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="roslib"/>
  <depend package="sensor_msgs"/>
</package><package name="flir_driver" path="/drivers/flir_driver" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description>A library for accessing a FLIR thermal camera through libunicap</description>
  <author>Radu Bogdan Rusu (rusu@cs.tum.edu)</author>
  <license>BSD</license>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <export>
    <cpp cflags="-I${prefix}/src" lflags="-L${prefix}/lib -lflir"/>
  </export>
  <url/>
  <rosdep name="libunicap2-dev"/>
</package><package name="penn_lightweight_teleop_msgs" path="/penn_lightweight_teleop/trunk/penn_lightweight_teleop_msgs" repo="penn_lightweight_teleop" repo_host="https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs">
  <description brief="penn_lightweight_teleop_msgs">

     penn_lightweight_teleop_msgs

  </description>
  <author>Will McMahan</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/penn_lightweight_teleop_msgs</url>
  <depend package="geometry_msgs"/>

</package><package name="pr2_laser_snapshotter" path="" repo="pr2_doors" repo_host="https://kforge.ros.org/doors/hg">
  <description brief="Build point clouds from PR2's tilting laser mechanism">
     Uses the laser_assembler to generate points clouds from each sweep from PR2's
     tilting laser mechanism.
  </description>
  <author>Vijay Pradeep</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_laser_snapshotter</url>

  <export>
    <cpp cflags="-I${prefix}/srv/cpp"/>
  </export>

  <!-- ROS -->
  <depend package="roscpp"/>

  <!-- common_msgs -->
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>

  <!-- pr2_msgs -->
  <depend package="pr2_msgs"/>

  <!-- laser_pipeline -->
  <depend package="laser_assembler"/>

  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="RS003" path="/trunk/rtmros_common/RS003" repo="rtm-ros-robotics/rtmros_common" repo_host="https://rtm-ros-robotics.googlecode.com/svn">
  <description brief="RS003">

     RS003

  </description>
  <author/>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/RS003</url>

  <depend package="openinvent"/>
  <depend package="hrpsys"/> <!-- just for SDO Package -->
  <depend package="opencv2"/>

</package><package name="cob_head_axis" path="" repo="cob_driver" repo_host="git://github.com/ipa320/cob_driver">
  <description brief="cob_head_axis">

     cob_head_axis

  </description>
  <author>Ulrich Reiser</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_head_axis</url>

  <depend package="roscpp"/>
  <depend package="rostest"/>
  <depend package="sensor_msgs"/>
  <depend package="cob_srvs"/>
  <depend package="actionlib"/>
  <depend package="cob_generic_can"/>
  <depend package="cob_canopen_motor"/>
  <depend package="cob_utilities"/>
  <depend package="urdf"/>
  <depend package="libntcan"/>
  <depend package="diagnostic_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="control_msgs"/>

</package><package name="pymp" path="/stacks/wu_utils/trunk/pymp" repo="wu-ros-pkg" repo_host="https://wu-ros-pkg.svn.sourceforge.net/svnroot/wu-ros-pkg">
  <description brief="pymp">

     Python multiprocessing library

  </description>
  <author>Erik Karulf/erik@cse.wustl.edu</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pymp</url>

</package><package name="plotter" path="/trunk/arrg/ua_experimental/plotter" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="A service for plotting data with matplotlib">

    Creates static plots that can be saved to a file or displayed. Basically a static version of rxplot.    

    </description>
    <author>Daniel Hewlett</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/plotter</url>

    <depend package="rospy"/>
    <depend package="std_msgs"/>
    <depend package="opencv2"/>

<!--    <rosdep name="matplotlib"/>-->

</package><package name="stereo_image_proc" path="/stacks/image_pipeline/branches/image_pipeline-1.8/stereo_image_proc" repo="image_pipeline" repo_host="https://code.ros.org/svn/ros-pkg">
  <description>Stereo and single image rectification and disparity processing.</description>
  <author>Patrick Mihelich, Kurt Konolige, Jeremy Leibs</author>
  <license>BSD</license>
  <review notes="Jan 4, 2010" status="Doc reviewed"/>
  <url>http://www.ros.org/wiki/stereo_image_proc</url>

  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/cfg/cpp" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lstereo_image_proc"/>
    <nodelet plugin="${prefix}/nodelet_plugins.xml"/>
  </export>

  <rosdep name="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="image_proc"/>
  <depend package="message_filters"/>
  <depend package="nodelet"/>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="stereo_msgs"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="simple_navigation_goals_tutorial" path="" repo="navigation_tutorials" repo_host="https://kforge.ros.org/navigation/tutorials">
  <description brief="simple_navigation_goals_tutorial">

     A package that provides sample code for sending simple navigation goals to the navigation stack.

  </description>
  <author>Eitan Marder-Eppstein</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://pr.willowgarage.com/wiki/simple_navigation_goals_tutorial</url>
  <depend package="move_base_msgs"/>
  <depend package="actionlib"/>
  <depend package="roscpp"/>
  <depend package="tf"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="outlet_pose_estimation" path="" repo="pr2_plugs" repo_host="https://kforge.ros.org/plugs/hg">
  <description brief="outlet_pose_estimation">

     outlet_pose_estimation

  </description>
  <author>Patrick Mihelich</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/outlet_pose_estimation</url>

  <depend package="roscpp"/>
  <depend package="opencv2"/>
  <depend package="visual_pose_estimation"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -loutlet_detection -loutlet_pose_estimation"/>
  </export>

</package><package name="gazebo_gripper" path="" repo="nasa_r2_simulator" repo_host="https://bitbucket.org/nasa_ros_pkg/nasa_r2_simulator">
  <description brief="gazebo_gripper">

     gazebo_gripper

  </description>
  <author>rctaylo2</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/gazebo_gripper</url>
  <depend package="gazebo"/>
  <export>
    <gazebo plugin_path="${prefix}/lib"/>
  </export> 

</package><package name="goal_passer" path="" repo="navigation_experimental" repo_host="https://kforge.ros.org/navigation/experimental">
  <description brief="goal_passer">

     goal_passer

  </description>
  <author>Eitan Marder-Eppstein</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/goal_passer</url>
  <depend package="roscpp"/>
  <depend package="costmap_2d"/>
  <depend package="pluginlib"/>
  <depend package="nav_core"/>

  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lgoal_passer"/>
    <nav_core plugin="${prefix}/bgp_plugin.xml"/>
  </export>

</package><package name="nodemon_lua" path="" repo="node_monitoring" repo_host="http://github.com/timn/ros-node_monitoring">
  <description brief="nodemon_lua">
    Lua node monitoring library to publish state information.
  </description>
  <author>Tim Niemueller</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/nodemon_lua</url>
  <depend package="roslua"/>
  <depend package="nodemon_msgs"/>

</package><package name="beego_navigation" path="/trunk/rtmros_common/beego_navigation" repo="rtm-ros-robotics/rtmros_common" repo_host="https://rtm-ros-robotics.googlecode.com/svn">
  <description brief="beego_navigation">

     beego_navigation

  </description>
  <author>chen</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/beego_navigation</url>
  <depend package="move_base"/>
  <depend package="map_server"/>
  <depend package="amcl"/>
  <depend package="openni_camera"/>
  <depend package="pointcloud_to_laserscan"/>
  <depend package="hrpsys"/>
  <depend package="mrobot_ros_bridge"/>
  <depend package="openrtm"/>
</package><package name="roomrider_driver" path="/trunk/stacks/ais_bonn_drivers/roomrider_driver" repo="ais-bonn-ros-pkg" repo_host="http://ais-bonn-ros-pkg.googlecode.com/svn">
  <description brief="Driver for the Roomrider platform">

	This driver controls the iRobot Roomba 530 from our roomrider platform. It has been developed for a robotics lab at
	the Autonomous Intelligent Systems department at Bonn University.

  </description>
  <author>Andreas Hochrath, Torsten Fiolka</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.ros.org/wiki/roomrider_driver/</url>
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="tf"/>
  <depend package="joy"/>
  
  <export>
  	<cpp cflags="-I${prefix}/msg/cpp"/>
  </export>

</package><package name="jpl" path="/tags/latest/3rdparty/jpl" repo="knowrob" repo_host="http://code.in.tum.de/pubsvn/knowrob">
  <description brief="jpl">
      JPL. A Java/Prolog bridge
  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <export>
    <java classpath="${prefix}/jpl/jpl.jar" ld_lib_path="${prefix}/jpl"/>
  </export>

</package><package name="gmock" path="" repo="pandora-auth-ros-pkg" repo_host="https://github.com/pandora-auth-ros-pkg/pandora-auth-ros-pkg">
  <description brief="gmock">

     Google Mock Framework Wrapper for ROS

  </description>
  <author>Google</author>
  <license>Google</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/gmock</url>
  <depend package="roscpp"/>
	<export>
    <cpp cflags="-I${prefix}/include  -I${prefix}/gtest/include" lflags="-L${prefix}/include -L${prefix}/lib"/>
  </export>
</package><package name="c3_hlac_core" path="" repo="isi-ros-pkg" repo_host="http://github.com/kanezaki/isi-ros-pkg">
  <description brief="c3_hlac_core">

     ROS wrapper for core functions in C3-HLAC feature extraction.

  </description>
  <author>Kanezaki Asako</author>
  <license>BSD(non-commercial use)</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/c3_hlac_core</url>
  <depend package="roscpp"/>
  <export>
    <cpp cflags="-I${prefix}/include/" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lc3_hlac_core"/>
  </export>

</package><package name="projected_light" path="/demos/projected_light" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="projected_light">
    Out-of-the-box solution for projected stereo using
    a Videre STOC camera and a regular wall projector.
  </description>
  <author>Dejan Pangercic, Andreas Leha</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://tum-ros-pkg.svn.sourceforge.net/viewvc/tum-ros-pkg/demos/projected_light</url>
  <!--Get from https://cmu-ros-pkg.svn.sourceforge.net/svnroot -->
<!--   <depend package="cameradc1394"/> -->
 <depend package="roscpp"/>
 <depend package="opencv2"/>
 <depend package="sensor_msgs"/>
 <depend package="cv_bridge"/>
</package><package name="powerbot_player" path="/trunk/drivers/powerbot_player" repo="ubc-ros-pkg" repo_host="https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg">
  <description brief="powerbot_player">
      A ROS node that wraps up the Player p2os driver, which provides access to the PowerBot robot (also other ActivMedia mobile robots). This node was derived from the erratic_player node.
  </description>
  <author>Marius Muja</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url/>
  <depend package="roscpp"/>
  <depend package="player"/>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="pr2_msgs"/>
  <depend package="tf"/>

</package><package name="mv_bluefox_driver" path="" repo="ccny_drivers" repo_host="http://robotics.ccny.cuny.edu/git/ccny-ros-pkg/ccny_drivers.git">
  <description brief="mv_bluefox_driver">

     Driver for MatrixVision BlueFox Cameras (it wraps arround mvIMPACT Acquire API that comes with the hardware)
     
  </description>
  <author>Carlos Jaramillo</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/mv_bluefox_driver</url>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="camera_info_manager"/>
  <depend package="image_transport"/>
  <depend package="nodelet"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="driver_base"/> 
  <!-- Needed for the driver_base/SensorLevels Message used in dynamic_reconfigure .cfg fie -->
  
  <export>
    <nodelet plugin="${prefix}/mv_bluefox_driver_nodelet.xml"/>
    <cpp cflags="-I${prefix}/include"/>
  </export>
</package><package name="p2os_teleop" path="/trunk/p2os/p2os_teleop" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
	<description brief="p2os_teleop">

     p2os_teleop

	</description>
	<author>Edward</author>
	<license>BSD</license>
	<review notes="" status="unreviewed"/>
	<url>http://ros.org/wiki/p2os_teleop</url>
	<depend package="roscpp"/>
	<depend package="sensor_msgs"/>
	<depend package="geometry_msgs"/>
</package><package name="stop_and_go" path="/trunk/sandbox/stop_and_go" repo="vanadium-ros-pkg" repo_host="http://vanadium-ros-pkg.googlecode.com/svn">
  <description brief="stop_and_go">

     stop_and_go

  </description>
  <author>Michael Ferguson</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/stop_and_go</url>
  <depend package="rospy"/>
  <depend package="arbotix_msgs"/>
  <depend package="arbotix_python"/>
  <depend package="geometry_msgs"/>

  <depend package="nodelet"/>
  <depend package="tf"/>
  <depend package="roscpp"/>
  <depend package="pcl_ros"/>
</package><package name="mrw_simulator_server" path="/trunk/rtcus_applications/mas_ros_workshop/mrw_simulator_server" repo="rtc-us-ros-pkg-trunk" repo_host="https://rtc-us-ros-pkg.svn.sourceforge.net/svnroot/rtc-us-ros-pkg">
  <description brief="mrw_simulator_server">

     mrw_simulator_server

  </description>
  <author>Pablo Iñigo Blasco</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/mrw_simulator_server</url>
  
  <depend package="rospy"/>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>

</package><package name="sr_edc_controller_configuration" path="" repo="shadow_robot_ethercat" repo_host="lp:sr-ros-interface-ethercat">
  <description brief="sr_edc_controller_configuration">

    contains the different launch files for Shadow Robot hand controllers. The actual configuration files are stored in the sr_config stack.

  </description>
  <author>Ugo Cupcic / ugo@shadowrobot.com , contact@shadowrobot.com</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sr_edc_controller_configuration</url>
  <depend package="pr2_controller_manager"/>
  <depend package="robot_mechanism_controllers"/>
  <depend package="sr_ethercat_hand_config"/>
</package><package name="android_sensors_driver" path="" repo="android_sensors_driver" repo_host="https://github.com/chadrockey/android_sensors_driver">
  <description brief="android_sensors_driver">

     android_sensors_driver

  </description>
  <author>Chad Rockey</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/android_sensors_driver</url>

  <depend package="android_gingerbread"/>
  <depend package="sensor_msgs"/>

  <export>
    <rosjava-android-app target="android-9"/>
    <rosjava-src location="src"/>
    <rosjava-src location="gen"/>
    <rosjava-src location="res"/>
  </export>

</package><package name="lwr_kinematics" path="" repo="lwr_kinematics" repo_host="https://github.com/RCPRG-ros-pkg/lwr_kinematics">
  <description brief="lwr_kinematics">

     lwr_kinematics

  </description>
  <author>Konrad Banachowicz</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/lwr_kinematics</url>
  <depend package="kinematics_base"/>
	<depend package="pluginlib"/>
	<depend package="tf"/>
  <depend package="tf_conversions"/>
	<depend package="kdl"/>
	<depend package="kdl_parser"/>
	<depend package="urdf"/>

  <export>
    <kinematics_base plugin="${prefix}/kinematics_plugin.xml"/>
  </export>

</package><package name="save_data" path="" repo="flyatar" repo_host="http://github.com/peterpolidoro/Flyatar">
  <description brief="save_data">

     save_data

  </description>
  <author>Peter Polidoro</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url/>
  <depend package="rospy"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="joystick_commands"/>
  <depend package="plate_tf"/>

</package><package name="pr2_arm_move_ik" path="/stacks/pr2_common_actions/trunk/pr2_arm_move_ik" repo="pr2_common_actions" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_arm_move_ik">

    Move the pr2 arm using inverse kinematics

  </description>
  <author>Melonee Wise, Wim Meeussen</author>
  <license>BSD</license>
  <review notes="" status="API cleared"/>
  <url>http://ros.org/wiki/pr2_arm_move_ik</url>
  <depend package="actionlib"/>
  <depend package="roscpp"/>
  <depend package="actionlib_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="pr2_common_action_msgs"/>
  <depend package="tf"/>
  <depend package="pr2_arm_kinematics"/>
  <depend package="urdf"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="tf2_ros" path="" repo="geometry_experimental" repo_host="https://kforge.ros.org/geometry/experimental">
  <description brief="tf2_ros">
    This package contains the ROS bindings for the tf2 library, for both Python and C++. 
  </description>
  <author>Wim Meeussen, Eitan Marder-Eppstein</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/tf2_ros</url>

  <depend package="tf2"/>
  <depend package="tf2_msgs"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="geometry_msgs"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="rosgraph"/>

 <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp -I${prefix}/srv/cpp" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -ltf2_ros"/>    
 </export>


</package><package name="librviz_tutorial" path="/stacks/visualization_tutorials/branches/visualization_tutorials-0.6/librviz_tutorial" repo="visualization_tutorials" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="librviz_tutorial">

     Tutorial demonstrating the embedding of rviz visualization in another program.

  </description>
  <author>Dave Hershberger</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/librviz_tutorial</url>
  <depend package="rviz"/>
  <export>
    <rosdoc config="${prefix}/rosdoc.yaml"/>
  </export>
</package><package name="force_torque" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="">
  Drivers for:
      1) ATI sensors with the Controller FT system.
      2) HE 6x6 Force plate from AMTI.
  </description>
  <author>Advait Jain, Cressel Anderson, Hai Nguyen, Advisor: Prof. Charlie Kemp, Lab: Healthcare Robotics Lab at Georgia Tech</author>
  <license>new BSD</license>
  <depend package="hrl_lib"/>  
  <depend package="rospy"/>  
  <sysdepend os="ubuntu" package="python-numarray" version="8.04-hardy"/>
  <sysdepend os="ubuntu" package="python-numarray" version="7.04-feisty"/>
</package><package name="ic2020_optflow" path="/trunk/ic2020_optflow" repo="ic2020" repo_host="http://ic2020.googlecode.com/svn">
  <description brief="ic2020_optflow">

     ic2020_optflow

  </description>
  <author>Sean Anderson</author>
  <license>CC BY-NC-SA 2.5</license>
  <review notes="" status="unreviewed"/>

  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="cv_bridge"/>
  <depend package="image_transport"/>
  <depend package="std_msgs"/>
  <depend package="ic2020_vodom"/>

</package><package name="mrpt_icp_slam_2d" path="/trunk/mrpt_slam/mrpt_icp_slam_2d" repo="mrpt-ros-pkg" repo_host="http://mrpt-ros-pkg.googlecode.com/svn">
  <description brief="mrpt_icp_slam_2d">

     mrpt_icp_slam_2d contains a wrapper on MRPT's 2D ICP-SLAM algorithms.

  </description>
  <author>Jose Luis Blanco Claraco</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/mrpt_icp_slam_2d</url>
  <depend package="mrpt_libs"/>
  <depend package="mrpt_bridge"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="std_msgs"/>
  <depend package="roscpp"/>

</package><package name="DPPanTilt_sim_server" path="/darpa_arm_sim_servers/DPPanTilt_sim_server" repo="darpa_arm_sim_servers" repo_host="http://svn.thearmrobot.com">
  <description brief="DPPanTilt_sim_server">

     DPPanTilt_sim_server

  </description>
  <author>DARPA ARM GFE Team</author>
  <license>private</license>

  <depend package="roscpp"/>
  <depend package="DPPanTilt_msgs"/>
  <depend package="re2logger"/>
  <depend package="pr2_mechanism_msgs"/>
  <depend package="SimGazeboControllers"/>  
  <depend package="DPPanTiltCompat"/>  

</package><package name="cob_arm_navigation" path="" repo="cob_manipulation" repo_host="git://github.com/ipa320/cob_manipulation">
  <description brief="cob_arm_navigation">

    This package contains the launch files for arm navigation with the Care-O-bot 3.

  </description>
  <author>Mathias Luedtke and Felix Messmer</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_arm_navigation</url>
  <depend package="actionlib"/>
  <depend package="planning_environment"/>
  <depend package="arm_kinematics_constraint_aware"/>
  <depend package="ompl_ros_interface"/>
  <depend package="trajectory_filter_server"/>
  <depend package="constraint_aware_spline_smoother"/>
  <depend package="move_arm"/>
  <depend package="collider"/>
  <depend package="robot_self_filter"/>
  <depend package="rviz"/>
  <depend package="robot_state_publisher"/>
  <depend package="move_arm_warehouse"/>
  <depend package="mongodb"/>

  <depend package="cob_hardware_config"/> <!-- for URDFs -->
  <depend package="cob_manipulator"/> <!-- pose_transform -->
  <depend package="cob_kinematics"/>
  <depend package="cob_manipulation_config"/>
  <depend package="cob_object_handler"/>
  
  <depend package="common_rosdeps"/>
  <rosdep name="yaml-cpp"/>  
</package><package name="wpdtb" path="" repo="wpdros" repo_host="https://github.com/wpd/wpdros">
  <description brief="wpdtb">

     wpdtb

  </description>
  <author>Patrick Doyle</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/wpdtb</url>

  <depend package="rospy"/>
  <depend package="actionlib"/>
  <depend package="pr2_tuck_arms_action"/>
  <depend package="trajectory_msgs"/>  
  <depend package="kinematics_msgs"/>
  <depend package="pr2_common_action_msgs"/>
  <depend package="sensor_msgs"/>

  <!--<depend package="pr2_pick_and_place_demos"/>-->
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="object_manipulation_msgs"/>
  <depend package="object_manipulator"/>
  <!--<depend package="tabletop_object_detector"/>
  <depend package="tabletop_collision_map_processing"/>
  <depend package="household_objects_database"/>
  <depend package="pr2_gripper_reactive_approach"/>
  <depend package="simple_Jtranspose_controller"/>
  <depend package="pr2_tabletop_manipulation_launch"/>
   --> 
</package><package name="jsk_gui_msgs" path="/trunk/jsk_smart_apps/jsk_gui_msgs" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="jsk_gui_msgs">

     jsk_gui_msgs

  </description>
  <author>chen</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/jsk_gui_msgs</url>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
</package><package name="vision_msgs" path="" repo="ias_common" repo_host="http://code.in.tum.de/git/ias-common.git">
  <description>Cognitive Perception Server</description>
  <author>Ulrich F Klank</author>
  <license>Closed</license>
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>  
</package><package name="audio_msgs" path="/darpa_arm_msgs/audio_msgs" repo="darpa_arm_msgs" repo_host="http://svn.thearmrobot.com">
  <description brief="audio_msgs">

     audio_msgs

  </description>
  <author>DARPA ARM GFE Team</author>
  <license>GPL</license>

  <depend package="roscpp"/>

  <export>
    <cpp cflags="-I${prefix}/msg/cpp"/>
  </export>
  
</package><package name="pid_control" path="/trunk/pid_control" repo="hacdc-ros-pkg" repo_host="http://hacdc-ros-pkg.googlecode.com/svn">
  <description brief="pid_control">

     Simple PID controller class

  </description>
  <author>Andrew Harris</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pid_control</url>
  <depend package="std_msgs"/>
  <depend package="rospy"/>
  <depend package="roscpp"/>

</package><package name="roomba_500_series" path="/stacks/roomba_robot/trunk/roomba_500_series" repo="roomba_robot" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="roomba_500_series">

     iRobot Roomba 500 package based on the iRobot Open Interface Specification. There are two nodes available, a light node which exposes odometry and velocity commands, and a full node which exposes all capabilities of the underlying library.

  </description>
  <author>Gonçalo Cabrita</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/roomba_500_series</url>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lirobot_oi -lgo_dock"/>
  </export>
  <depend package="roscpp"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="tf"/>
  <depend package="nav_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="cereal_port"/>

</package><package name="ax2550" path="" repo="ax2550" repo_host="https://github.com/Auburn-Automow/ax2550">
  <description brief="ax2550">

     ax2550

  </description>
  <author>William Woodall</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ax2550</url>
  <depend package="serial"/>
  <depend package="serial_utils"/>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>

</package><package name="g2o" path="/stacks/vslam/trunk/g2o" repo="vslam" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Generalized Graph Optimizer (G2O)">

    A general system for graph optimization.

  </description>
  <author>Rainer Kummerle, Giorgio Grisetti, Cyril Stachniss, Hauke Strasdat, Kurt Konolige</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://openslam.org/g2o.html</url>

  <rosdep name="eigen"/>
  <rosdep name="suitesparse"/>

  <export>
    <cpp cflags="-I${prefix}/include/ -I/usr/include/suitesparse" lflags="-L${prefix}/lib/ -lcsparse -Wl,-rpath,${prefix}/lib/"/>
  </export>

</package><package name="cob_camera_calibration" path="" repo="cob_calibration" repo_host="git://github.com/ipa320/cob_calibration">
  <description brief="cob_camera_calibration">

     The cob_camera_calibration package implements automatic mono and stereo calibration
     for Care-O-bot. All calibration results are automatically converted to the correct
     format and saved in the cob_hardware_config package. No manual steps are required.

  </description>
  <author>Sebastian Haug</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_camera_calibration</url>

  <depend package="cv_bridge"/>
  <depend package="tf"/>

  <rosdep name="opencv2"/>

</package><package name="nxt_lejos_speech_control" path="/trunk/ros/nxt_lejos_apps/nxt_lejos_speech_control" repo="lejos-ros-pkg" repo_host="https://lejos.svn.sourceforge.net/svnroot/lejos">
  <description brief="nxt_lejos_speech_control">
  Controls a NXT lejOS robot using speech commands, such as forward, backwards, left, right,
  stop. The nxt_lejos_proxy node must be running. Uses a pocketsphinx node to recognize the
  commands. 
  </description>
  <author>leJOS development</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/nxt_lejos_speech_control</url>

  <depend package="rosjava"/>
  <depend package="std_msgs"/>
  <depend package="nxt_lejos_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="pocketsphinx"/>
</package><package name="turtlebot_bringup" path="" repo="turtlebot" repo_host="https://kforge.ros.org/turtlebot/turtlebot">
  <description brief="turtlebot_bringup">

     turtlebot_bringup provides roslaunch scripts for starting the TurtleBot base functionality. 

  </description>
  <author>Tully Foote</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/turtlebot_bringup</url>
  <depend package="app_manager"/>
  <depend package="turtlebot_driver"/>
  <depend package="turtlebot_node"/>
  <depend package="turtlebot_description"/>
  <depend package="joy"/>
  <depend package="robot_state_publisher"/>
  <depend package="pointcloud_to_laserscan"/>
  <depend package="openni_camera"/>

  <!-- for video teleoperation -->
  <depend package="compressed_image_transport"/>
  
</package><package name="udpmulti_transport" path="" repo="ethzasl_message_transport" repo_host="https://github.com/ethz-asl/ros-message-transport">
  <description brief="udpmulti_transport">

     udpmulti_transport

  </description>
  <author>Cedric Pradalier</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/udpmulti_transport</url>
  <depend package="std_msgs"/> <!-- for testing -->
  <depend package="message_transport_common"/>

  <export>
      <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -ludpmulti_transport"/>
  </export>



</package><package name="controllersAndSensors_communications" path="" repo="pandora-auth-ros-pkg" repo_host="https://github.com/pandora-auth-ros-pkg/pandora-auth-ros-pkg">
  <description brief="controllersAndSensors_communications">

     The controllersAndSensors_communications contains messages and services for the contollersAndSensors.

  </description>
  <author>Stamatiadou Marina, Allamanis Miltiadis, Sykoudi Pelagia</author>
  <license>MIT</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/controllersAndSensors_communications</url>
  <depend package="actionlib_msgs"/>
  <depend package="interface_tester"/>

</package><package name="ecl_create" path="/trunk/ecl_tools/ecl_create" repo="ecl_tools" repo_host="https://embedded-control-library.googlecode.com/svn">
  <description brief="Python module for ecl package creation">

     Module support for the eclcreate-xxx-pkg scripts.

  </description>
  <author>Daniel Stonier</author>
  <license>BSD</license>
  <review notes="" status="doc reviewed"/>
  <url>http://snorriheim.dnsdojo.com/redmine/wiki/ecl</url>
  <depend package="ecl_license"/>
  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>
</package><package name="rqt_logger_level" path="" repo="rqt" repo_host="https://kforge.ros.org/visualization/rqt">
  <description brief="rqt_logger_level">
     rqt_logger_level provides a GUI plugin for configuring the logger level of ROS nodes.
  </description>
  <author>Aaron Blasdel</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rqt_logger_level</url>
  <depend package="rospy"/>
  <depend package="rqt_gui"/>
  <depend package="rqt_gui_py"/>
  <export>
      <rqt_gui plugin="${prefix}/plugin.xml"/>
  </export>
</package><package name="image_algos" path="/perception/image_algos" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description>
    Robotic perception algorithms for 2D images. They are intended to 
    be flexible and tightly work together with following packages:
    cloud_tools (using table_memory functionality)
    cloud_algos (using IAS 3D perception algorithms)
    pcl stack (using  general 3D perception algorithms and tools)
    knowledge stack (for reasoning and inferences)
    cognitive_perception (for some further CV algorithms).
  </description>

  <author>Dejan Pangercic</author>
  <license>BSD</license>
  <url/>
  <review notes="beta" status="experimental"/>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="opencv2"/> 
  <depend package="cv_bridge"/>
  <depend package="rosconsole"/>
<!--   <depend package="libdc1394v2"/> -->
  <depend package="sensor_msgs"/>
  <depend package="image_transport"/>
  <depend package="pluginlib"/>
<!--   <depend package="detect_objects_chamfer"/> -->
  <depend package="compressed_image_transport"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="tf"/>
  <depend package="image_geometry"/>
  <depend package="angles"/>
  <depend package="cmvision"/>
  <depend package="yaml_cpp"/>
  <depend package="ias_table_msgs"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="actionlib"/>
  <depend package="pr2_controllers_msgs"/>
  <export>
    <cpp cflags="-I${prefix}/include/" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -limage_algos"/>
    <image_algos plugin="${prefix}/plugins.xml"/>
  </export>
</package><package name="yarp2" path="/3rdparty/yarp2" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description>
    YARP is a library and toolkit for communication and device interfaces,
    developed by humanoid robotics researchers but useful beyond that field!
  </description>
  <author>
    Paul Fitzpatrick,
    Giorgio Metta,
    Lorenzo Natale,
    Alessandro Scalzo,
  </author>
  <license>GPL</license>
  <export>
    <cpp cflags="-I${prefix}/yarp2/include/" lflags="-Wl,-rpath,${prefix}/yarp2/lib -L${prefix}/yarp2/lib -lYARP_OS -lYARP_dev -lYARP_sig -lYARP_init"/>
    <python path="${prefix}/yarp2/lib/python/site-packages"/>
  </export>

  <rosdep name="swig"/>
  <rosdep name="libace"/>
  <rosdep name="libgsl"/>
</package><package name="rosh_experimental" path="/stacks/roshpit/trunk/rosh_experimental" repo="roshpit" repo_host="https://code.ros.org/svn/ros">
  <description brief="rosh_experimental">

     Experimental plugins for rosh

  </description>
  <author>Ken Conley</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosh_experimental</url>
<!-- 
  Disabling PR2 dependencies for now until this plugin is more useful
  <depend package="pr2_controller_manager"/>
  <depend package="pr2_mechanism_msgs"/>
-->
  <depend package="rosh"/>
  <depend package="roslib"/>
  <depend package="rospy"/>
  <depend package="rostopic"/>

  <depend package="smach"/>
</package><package name="gazebo_tests" path="/stacks/simulator_gazebo/trunk/gazebo_tests" repo="simulator_gazebo" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="gazebo_tests">

     Contains a variety of unit tests for gazebo, tools and plugins.

  </description>
  <author>John Hsu</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/gazebo_tests</url>
  <depend package="gazebo"/>
  <depend package="gazebo_plugins"/>
  <depend package="gazebo_worlds"/>
  <depend package="gazebo_tools"/>
  <depend package="std_srvs"/>
  <depend package="geometry_msgs"/>

</package><package name="gsd" path="" repo="cram_core" repo_host="https://github.com/moesenle/cram_core">
  <description brief="GSD">
      GSD
      http://repo.or.cz/w/gsd.git
  </description>
  <author>Liam Healy</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <depend package="split_sequence"/>
</package><package name="itasc_youbot" path="" repo="itasc_robots_objects" repo_host="http://git.mech.kuleuven.be/robotics/itasc_robots_objects.git">
	<description brief="iTaSC_youBot">
	</description>
	
	<author>Dominick Vanthienen, Gunther Struyf, Tinne De Laet</author>
	<license>BSD,LGPL</license>
	<review notes="" status="unreviewed"/>
	<url>http://www.orocos.org/itasc</url>
	<depend package="rtt"/>
	<depend package="orocos_kdl"/>
	<depend package="kdl_typekit"/>
	<depend package="kdl_parser"/>
	<rosdep name="eigen"/>
	<depend package="itasc_core"/>
	<depend package="rtt_rosnode"/>
	<depend package="rtt_std_msgs"/>
	<depend package="rtt_sensor_msgs"/>
	<depend package="rtt_geometry_msgs"/>
	<depend package="geometry_msgs"/>
	<depend package="rtt_motion_control_msgs"/>
	<depend package="motion_control_msgs"/>
    <depend package="trajectory_msgs"/>
	<depend package="rtt_nav_msgs"/>
	<depend package="tf"/>
	<depend package="tf_conversions"/>
    <depend package="youbot_description"/>
    <depend package="brics_actuator"/>

    <rosdep name="robot_model"/>
</package><package name="iap_common" path="" repo="turbo-ros-pkg" repo_host="https://github.com/tu-rbo/turbo-ros-pkg">
  <description brief="iap common library">
	
	The iap common library contains shared classes and resources for all packages and nodes of the iap.

  </description>
  <license>GPL, BSD</license>
  <author>Roberto Martin, Dov Katz, Sebastian Hoefer</author>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/iap_common</url>

  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="pcl_ros"/>
  <depend package="rosbuild"/>

  <export>
  	<!--<rosbuild cmake_directory="${prefix}"/>-->
     <cpp cflags="-I${prefix}/include/iap_common       -I${prefix}/include/iap_common/data_logging       -I${prefix}/include/iap_common/kinematics       -I${prefix}/include/iap_common/tracker       -I${prefix}/include/iap_common/image       -I${prefix}/include/iap_common/video_sensor       -I${prefix}/include/iap_common/utils       -I${prefix}/include/iap_common/cluster      -I${prefix}/msg_gen/cpp/include " lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -liap_common"/>
  </export>
</package><package name="wubble_navigation_self_filter" path="/trunk/arrg/wubble_navigation/wubble_navigation_self_filter" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="wubble_navigation_self_filter">
    Filters the robot's body out of point clouds.
    </description>

    <author>Eitan Marder-Eppstein</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/pr2_navigation_self_filter</url>

    <depend package="roscpp"/>
    <depend package="tf"/>
    <depend package="filters"/>
    <depend package="sensor_msgs"/>
    <depend package="urdf"/>
    <depend package="resource_retriever"/>
    <depend package="visualization_msgs"/>
    <depend package="assimp"/>
    <depend package="geometric_shapes"/>
</package><package name="move_base_simple" path="/stacks/simple_navigation/trunk/move_base_simple" repo="simple_navigation" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
    <description brief="move_base_simple">move_base_simple</description>
    <author>Gonçalo Cabrita</author>
    <license>BSD</license>  
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/move_base_simple</url>
    <depend package="roscpp"/>
    <depend package="geometry_msgs"/>
    <depend package="nav_msgs"/>
    <depend package="tf"/>
    <depend package="message_filters"/>
    <depend package="move_base_msgs"/>
    <depend package="actionlib"/>
    <depend package="angles"/>
    <depend package="visualization_msgs"/>
</package><package name="rosspawn_gui" path="" repo="rosspawn_gui" repo_host="http://github.com/timn/rosspawn_gui">
  <description brief="rosspawn_gui">
    GUI application for rosspawn, based on Fawkes' Plugin GUI.
  </description>
  <author>Tim Niemueller</author>
  <license>GPLv2+</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosspawn_gui</url>
  <depend package="roscpp"/>
  <depend package="roslib"/>
  <depend package="rosspawn"/>
  <rosdep name="gtkmm24"/>
  <rosdep name="glibmm24"/>
</package><package name="network_monitor_udp" path="/stacks/linux_networking/trunk/network_monitor_udp" repo="linux_networking" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Monitors network quality using udp packets.">
    Facilities to monitor a network connection by sending UDP packets from
    a client to a server, which bounces them back to the client. The client
    collects statistics on latency and loss. The server is a C standalone utility
    or a ROS node. The client can be a ROS node, a standalone utility or a python class.
  </description>
  <author>Blaise Gassend, Catalin Drula</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/network_monitor_udp</url>
  <depend package="rospy"/>
  <depend package="diagnostic_msgs"/>
  <depend package="actionlib_msgs"/>
  <depend package="actionlib"/>
  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>
</package><package name="joint_trajectory_generator" path="/stacks/pr2_common_actions/trunk/joint_trajectory_generator" repo="pr2_common_actions" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="joint_trajectory_generator">

     joint_trajectory_generator

  </description>
  <author>Eitan Marder-Eppstein, Wim Meeussen</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/joint_trajectory_generator</url>
  <depend package="actionlib"/>
  <depend package="angles"/>
  <depend package="kdl"/>
  <depend package="joint_trajectory_action"/>
  <depend package="roscpp"/>
  <depend package="urdf"/>

  <export>
    <cpp cflags="-I${prefix}/include `rosboost-cfg --cflags`" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib `rosboost-cfg --lflags thread` -ljoint_trajectory_generation"/>
  </export>


  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="kurtana_arm_navigation" path="" repo="kurtana_robot" repo_host="http://kos.informatik.uni-osnabrueck.de/kurtana_robot.git">
  <description brief="kurtana_arm_navigation">

     kurtana_arm_navigation

  </description>
  <author>Henning Deeken</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/kurtana_arm_navigation</url>

  <depend package="rospy"/>
  <depend package="sensor_msgs"/>
  <rosdep name="wxpython"/>

</package><package name="libmesasr" path="" repo="cob_extern" repo_host="git://github.com/ipa320/cob_extern">
  <description brief="libmesasr">

     This package wraps the libmesasr to use it as a ros dependency

  </description>
  <author>Florian Weisshardt</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/libmesasr</url>
  
  <export>
    <cpp cflags="-I${prefix}/common/include -I${prefix}/common/include/libmesasr" lflags="-Wl,-rpath,${prefix}/common/lib -L${prefix}/common/lib -lmesasr"/>
  </export>
  
</package><package name="pr2_mannequin_mode" path="2_mannequin_mode" repo="pr2_apps" repo_host="">
  <description brief="Lets a person position the arms and head manually">
    A super-simple tool for letting a person position the arms manually, by
    simply pushing the arm to the location that want. Without this tool,
    users are often stuck tweaking joint angles in a script, or holding the
    arm steady while hitting keys to freeze the arm.
  </description>
  <author>Vijay Pradeep</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/pr2_mannequin_mode</url>

  <depend package="trajectory_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="pr2_controller_manager"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="dmp_launch" path="" repo="usc-clmc-ros-pkg" repo_host="https://github.com/usc-clmc/usc-clmc-ros-pkg">
  <description brief="dmp_launch">

     dmp_launch

  </description>
  <author>Arm User</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/dmp_launch</url>

  <depend package="dmp_behaviors"/> 
  <depend package="dmp_behavior_actions"/>
  <depend package="arm_dmp_behaviors"/> 

  <depend package="arm_recorder2"/> 
  <depend package="arm_safety_lights"/> 
  <depend package="arm_dashboard_client"/> 

  <depend package="sensor_database"/>
  <depend package="manipulation_graph"/>

  <depend package="skill_library"/>
  <depend package="sensor_database"/> 
  <depend package="arm_task_recorder2"/> 
  <depend package="task_recorder2_file_io"/> 

  <depend package="dynamics_markers"/> 

  <depend package="usc_dashboard"/> 
  <depend package="arm_head_behaviors"/> 

  <depend package="sl_utc_interface"/> 
 
  <depend package="dynamic_movement_primitive"/>
  <depend package="dynamic_movement_primitive_utilities"/>
  <depend package="arm_dynamic_movement_primitive_utilities"/>

</package><package name="test_osm" path="/trunk/stacks/open_street_map/test_osm" repo="utexas-art-ros-pkg" repo_host="http://utexas-art-ros-pkg.googlecode.com/svn">
  <description brief="Open street map tests.">

     These are regression tests for the osm_cartography and
     route_network packages. They are packaged separately to avoid
     unnecessary implementation dependencies.

  </description>
  <author>Jack O'Quin</author>
  <license>BSD</license>
  <review notes="" status="test"/>
  <url>http://ros.org/wiki/test_osm</url>
  <depend package="osm_cartography"/>
  <depend package="route_network"/>
  <depend package="geodesy"/>
  <depend package="geographic_msgs"/>

</package><package name="cob_description" path="" repo="cob_common" repo_host="git://github.com/ipa320/cob_common">
  <description brief="cob_description">

  This package contains the description (mechanical, kinematic, visual,
  etc.) of the Care-O-bot robot. The files in this package are parsed and used by
  a variety of other components. Most users will not interact directly
  with this package.

  </description>
  <author>Florian Weisshardt</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_description</url>

  <depend package="rostest"/>
  <depend package="convex_decomposition"/>
  <depend package="ivcon"/>
  <depend package="urdf"/>

</package><package name="turtlebot_button" path="" repo="iheart-ros-pkg" repo_host="git://github.com/IHeartRobotics/iheart-ros-pkg">
  <description brief="turtlebot_button">

     turtlebot_button

  </description>
  <author>linda</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/turtlebot_button</url>
  <depend package="rosserial_arduino"/>
  <depend package="rosserial_client"/>
  <depend package="rosserial_msgs"/>
  <depend package="rosserial_python"/>
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>

</package><package name="demo1_sagar" path="/trunk/cturtle/demo1/demo1_sagar" repo="seabee3-ros-pkg" repo_host="http://seabee3-ros-pkg.googlecode.com/svn">
  <description brief="demo1_sagar">

     demo1_sagar

  </description>
  <author>Sagar Pandya</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/demo1_sagar</url>
  <depend package="base_libs"/>
</package><package name="mpi_test" path="/stacks/mpi/trunk/mpi_test" repo="mpi" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="mpi_test">

     mpi_test

  </description>
  <author>John Hsu</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/mpi_test</url>
  <depend package="roscpp"/>
  <depend package="eigen3"/>
  <depend package="openmpi_devel"/>
<!--
  <rosdep name="openmpi"/>
-->
  <platform os="ubuntu" version="10.04"/>

</package><package name="ackermann_msgs" path="/trunk/stacks/ackermann_msgs" repo="utexas-art-ros-pkg" repo_host="http://utexas-art-ros-pkg.googlecode.com/svn">
  <description brief="ackermann_msgs">

     Ackermann steering messages.

  </description>
  <author>Jack O'Quin</author>
  <license>BSD</license>
  <review notes="2012-01-29" status="API reviewed"/>
  <url>http://ros.org/wiki/ackermann_msgs</url>

  <depend package="std_msgs"/>

</package><package name="kurt_2dnav" path="" repo="kurt_apps" repo_host="http://kos.informatik.uni-osnabrueck.de/kurt_apps.git">
  <description brief="Global navigation for the Kurt robot.">
     This application allows the Kurt robot to navigate autonomously with a
     pre-specified static map. This package is modeled after pr2_2dnav.
  </description>
  <author>Jochen Sprickerhof</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/kurt_2dnav</url>
  <depend package="move_base"/>
  <depend package="kurt_bringup"/>
</package><package name="velodyne_height_map" path="/trunk/stacks/velodyne_utils/velodyne_height_map" repo="utexas-art-ros-pkg" repo_host="http://utexas-art-ros-pkg.googlecode.com/svn">
  <description brief="Height map obstacle detection">

    Obstacle detection for 3D point clouds using a height map algorithm.

  </description>
  <author>David Claridge, Michael Quinlan</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/velodyne_height_map</url>

  <depend package="angles"/>
  <depend package="nodelet"/>
  <depend package="roscpp"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="rostest"/>
  <depend package="sensor_msgs"/>
  <depend package="velodyne_driver"/>           <!-- for testing -->
  <depend package="velodyne_msgs"/>
  <depend package="velodyne_pointcloud"/>       <!-- for testing -->

  <export>
    <nodelet plugin="${prefix}/nodelets.xml"/>
  </export>

</package><package name="sonar_node" path="/trunk/cturtle/sonar_node" repo="seabee3-ros-pkg" repo_host="http://seabee3-ros-pkg.googlecode.com/svn">
  <description brief="sonar_node">

     sonar_node

  </description>
  <author>Edward T. Kaszubski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sonar_node</url>
  <depend package="roscpp"/>
  <rosdep name="fftw3"/>
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp -I${prefix}/srv/cpp" lflags="-L/{prefix}/lib"/>
  </export>

</package><package name="range_gazebo_plugin" path="" repo="reem_plugins" repo_host="https://github.com/pal-robotics/reem_plugins">
  <description brief="range_gazebo_plugin">range_gazebo_plugin</description>

  <author/>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <depend package="gazebo"/>
  <depend package="gazebo_tools"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>  
  <depend package="angles"/>
  <depend package="std_srvs"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="tinyxml"/>
  <depend package="bullet"/>
  <depend package="urdf"/>
  <depend package="tf"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="driver_base"/>
 <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp -I${prefix}/srv/cpp" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib"/>
    <gazebo plugin_path="${prefix}/lib"/>
  </export>
  <rosdep name="python-numpy"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>

</package><package name="ecl_devices" path="/trunk/ecl_core/ecl_devices" repo="ecl_core" repo_host="https://embedded-control-library.googlecode.com/svn">
  <description brief="Standardised framework for input-output devices">

     Provides an extensible and standardised framework for input-output devices.

  </description>
  <author>Daniel Stonier (d.stonier@gmail.com)</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://snorriheim.dnsdojo.com/redmine/wiki/ecl</url>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lecl_devices"/>
  </export>
  <depend package="ecl_config"/>
  <depend package="ecl_errors"/>
  <depend package="ecl_mpl"/>
  <depend package="ecl_type_traits"/>
  <depend package="ecl_utilities"/>
  <depend package="ecl_license"/>
  <depend package="ecl_build"/>
  <depend package="ecl_containers"/>
  <depend package="ecl_threads"/>
</package><package name="mingw_cross" path="" repo="win_ros" repo_host="https://github.com/stonier/win_ros">
  <description brief="Build recipe to install the mingw cross environment">

     Installer script for the mingw cross environment. This will install to /opt/mingw
     and immediately begin cross-compiling gcc, boost and qt. Other libraries can be added by
     simply cd'ing to /opt/mingw and running make for the desired target.

  </description>
  <author>Daniel Stonier (d.stonier@gmail.com)</author>
  <license>BSD</license>
  <review notes="" status="doc reviewed"/>
  <url>http://mingw-cross-env.nongnu.org/</url>
  <!-- 
    Provided by rosdep2 but not very useful for a catkin stack yet
    since you can't rosdep install packages in a catkin stack (no
    ROS_PACKAGE_PATH).

    On ubuntu: 
      sudo apt-get install mercurial xz-utils flex bison yasm 
      sudo apt-get install autoconf libtool intltool scons
   -->
  <rosdep name="mercurial"/>
  <rosdep name="xz-utils"/>
  <rosdep name="flex"/>
  <rosdep name="bison"/>
  <rosdep name="yasm"/>
  <rosdep name="autoconf"/>
  <rosdep name="libtool"/>
  <rosdep name="intltool"/>
  <rosdep name="scons"/>
</package><package name="laser_height_estimation" path="" repo="mav_tools" repo_host="https://github.com/ccny-ros-pkg/mav_tools">
  <description brief="laser_height_estimation">

     A tool to measure the distance to the floor/ceiling using a a laser scanner.

  </description>
  <author>Ivan Dryanovski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/laser_height_estimation</url>
  <depend package="tf"/>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="std_msgs"/>
  <depend package="mav_msgs"/>
  <depend package="bullet"/>
  <depend package="nodelet"/>

  <export>
    <nodelet plugin="${prefix}/laser_height_estimation_nodelet.xml"/>
  </export>

</package><package name="mrpt_msgs" path="/trunk/mrpt_common/mrpt_msgs" repo="mrpt-ros-pkg" repo_host="http://mrpt-ros-pkg.googlecode.com/svn">
  <description brief="mrpt_msgs">

     mrpt_msgs

  </description>
  <author>Jose Luis</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/mrpt_msgs</url>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>

</package><package name="audio_sim_server" path="/darpa_arm_sim_servers/audio_sim_server" repo="darpa_arm_sim_servers" repo_host="http://svn.thearmrobot.com">
  <description brief="darm_audio_sim">

     darm_audio_sim

  </description>
  <author>DARPA ARM GFE Team</author>
  <license>private</license>

  <depend package="roscpp"/>
  <depend package="audio_msgs"/>
  <depend package="re2logger"/>
  
</package><package name="virtual_nose" path="/stacks/odor_tools/trunk/virtual_nose" repo="odor_tools" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="virtual_nose">

     Reads data from PlumeSim and publishes it as a lse_sensor_msgs/Nostril message.

  </description>
  <author>Gonçalo Cabrita</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/virtual_nose</url>
  <depend package="roscpp"/>
  <depend package="lse_sensor_msgs"/>
  <depend package="plumesim"/>

</package><package name="invisical" path="/trunk/pogo/invisical" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="InVisiCal Visual-Inertial Calibration">
    InVisiCal is a MATLAB/Octave package for calibrating the
    6-DOF transform between a camera and an IMU.
  </description>
  <author>Jonathan Kelly</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://robotics.usc.edu/ros</url>
</package><package name="srs_environments" path="" repo="srs_public" repo_host="git://github.com/ipa320/srs_public">
  <description brief="srs_environments">

     srs_environments (a place that stores some parameters that can be used and shared by srs components.)

  </description>
  <author>Ze Ji</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/srs_environments</url>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>

</package><package name="libpcan" path="" repo="cob_extern" repo_host="git://github.com/ipa320/cob_extern">
  <description brief="libpcan">

     This package wraps the libpcan to use it as a ros dependency

  </description>
  <author>Florian Weisshardt</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://p103112.typo3server.info/fileadmin/media/linux/index.htm</url>

  <rosdep name="linux-headers-generic"/>
  <rosdep name="libpopt-dev"/>

  <export>
    <cpp cflags="-I${prefix}/common/include -I${prefix}/common/include/libpcan" lflags="-Wl,-rpath,${prefix}/common/lib -L${prefix}/common/lib -lpcan"/>
  </export>
  
</package><package name="color_segmenter" path="/trunk/cturtle/color_segmenter" repo="seabee3-ros-pkg" repo_host="http://seabee3-ros-pkg.googlecode.com/svn">
  <description brief="color_segmenter">

     color_segmenter

  </description>
  <author>Michael Montalbo</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/color_segmenter</url>
  <depend package="image_transport"/>
  <depend package="sensor_msgs"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="driver_base"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="base_libs"/>
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp -I${prefix}/srv/cpp"/>
  </export>
</package><package name="hector_quadrotor_urdf" path="/branches/fuerte/hector_quadrotor/hector_quadrotor_urdf" repo="hector_quadrotor" repo_host="https://tu-darmstadt-ros-pkg.googlecode.com/svn">
  <description brief="hector_quadrotor_urdf">

     hector_quadrotor_urdf provides an URDF model of a quadrotor UAV.

  </description>
  <author>Stefan Kohlbrecher and Johannes Meyer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hector_quadrotor_urdf</url>

  <depend package="hector_sensors_description"/>

</package><package name="compressed_pointcloud_transport" path="/stacks/object_manipulation/branches/0.6-branch/compressed_pointcloud_transport" repo="object_manipulation" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="compressed_pointcloud_transport">

     compressed_pointcloud_transport

  </description>
  <author/>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/compressed_pointcloud_transport</url>
  <depend package="roscpp"/>
  <depend package="pcl"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="common_rosdeps"/>
</package><package name="rosmatlab_common_msgs" path="" repo="rosmatlab" repo_host="https://github.com/tu-darmstadt-ros-pkg/rosmatlab">
  <description brief="rosmatlab_common_msgs">

     rosmatlab_common_msgs

  </description>
  <author>Johannes Meyer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosmatlab_common_msgs</url>

  <depend package="rosmatlab"/>
  <depend package="std_msgs"/>

  <export>
    <!-- <rosmatlab path="${prefix}/matlab"/> -->
  </export>

</package><package name="cob_teleop" path="" repo="cob_command_tools" repo_host="git://github.com/ipa320/cob_command_tools">
  <description brief="cob_teleop">

     This Package enables remote controll of Care-O-bot via a joystick or keyboard. Currently tray, torso, arm and base are supported.

  </description>
  <author>Florian Weisshardt</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.ros.org/wiki/cob_teleop</url>
  
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="trajectory_msgs"/>
  <depend package="cob_srvs"/>
  <depend package="brics_actuator"/>
  <depend package="pr2_teleop"/>

</package><package name="kinect_cleanup" path="" repo="mapping" repo_host="http://code.in.tum.de/git/mapping.git">
  <description brief="kinect_cleanup">

     kinect_cleanup is a package to demonstrate desired object locations by
     pointing at objects and virtually moving them somewhere (for ROS 3D Contest)

  </description>
  <author>Zoltan-Csaba Marton, Dejan Pangercic</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/kinect_cleanup</url>
  <depend package="roscpp"/>
  <depend package="pcl"/>
  <depend package="tf"/>
  <depend package="sensor_msgs"/>
  <depend package="pcl_ros"/>
  <depend package="vision_msgs"/>
</package><package name="wbc_urdf" path="" repo="whole_body_control" repo_host="https://github.com/poftwaresatent/whole_body_control">
  <description brief="URDF to TAO conversion for Stanford_WBC">
  </description>
  <author>Roland Philippsen</author>
  <license>LGPLv3</license>
  <review notes="" status="unreviewed"/>
  <url>http://stanford-wbc.sourceforge.net/</url>
  <depend package="wbc_core"/>
  <depend package="urdf"/>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lwbc_urdf"/>
  </export>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="rosruby_tf" path="" repo="rosruby_common" repo_host="https://github.com/OTL/rosruby_common">
  <description brief="rosruby_tf">

     rosruby_tf

  </description>
  <author>Takashi Ogura</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosruby_tf</url>
  <depend package="rosruby"/>
  <depend package="tf"/>

</package><package name="robot_monitor" path="/stacks/diagnostics_monitors/trunk/robot_monitor" repo="diagnostics_monitors" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Displays aggregated robot diagnostics">
<p>
    robot_monitor is a simple GUI tool for displaying robot diagnostics that has been aggregated by the <a href="http://www.ros.org/wiki/diagnostic_aggregator">diagnostic_aggregator</a>. 
</p>
<p>
Some icons from the Silk icon pack are used, which is available from <a href="http://www.famfamfam.com/lab/icons/silk/">famfamfam.com</a>.
</p>

  </description>
  <author>Kevin Watts (watts@willowgarage.com), Josh Faust (jfaust@willowgarage.com)</author>
  <license>BSD</license>
  <review notes="2010/01/09" status="Doc reviewed"/>
  <url>http://www.ros.org/wiki/robot_monitor</url>
  <depend package="rospy"/>
  <depend package="diagnostic_msgs"/>
  <depend package="rxbag"/>
  <rosdep name="wxwidgets"/>
  <rosdep name="wxpython"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
  <export>
    <rxbag plugin="robot_monitor.rxbag_plugins"/>
  </export>
</package><package name="srs_body_detector" path="" repo="srs_public" repo_host="git://github.com/ipa320/srs_public">
  <description brief="srs_body_detector">

     srs_body_detector

  </description>
  <author>Alex</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/srs_body_detector</url>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>

</package><package name="pr2_hardware_interface" path="" repo="pr2_mechanism" repo_host="https://kforge.ros.org/pr2mechanism/hg">
<description brief="PR2 Hardware Interface">
  This package contains the C++ interfaces to the PR2 hardware
  components that are controlled over EtherCAT. This includes the
  motors and encoders needed to control the PR2 mechanism, as well as
  components like the pressure sensors in the fingertips, camera
  triggers, etc... All of the hardware components in this interface are
  directly available to the controllers inside the hard realtime
  control loop. 
</description>
<author>Eric Berger berger@willowgarage.com</author>
<license>BSD</license>
<review notes="2010-01-18" status="Doc reviewed"/>
<depend package="roscpp"/>
<depend package="geometry_msgs"/>
<url>http://ros.org/wiki/pr2_hardware_interface</url>
<export>
  <cpp cflags="-I${prefix}/include"/>
</export>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="rosjs_resources" path="/trunk/stacks/bosch_web_visualization/rosjs_resources" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="rosjs_resources">
    rosjs resources 
  </description>
  <author>Sarah Osentoski and Bener Suay</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosjs_resourcees</url>
</package><package name="pr2_commandline" path="/branches/stable/wu_pr2_demos/pr2_commandline" repo="wu-ros-pkg" repo_host="https://wu-robotics.googlecode.com/svn">
  <description brief="Simple PR2 Command-line scripts">
    Scripts for manipulating the PR2 spine and projector from the command line.
  </description>
  <author>David V. Lu!!</author>
  <license>BSD</license>
  <url>http://ros.org/wiki/pr2_commandline</url>
  <depend package="rospy"/>
  <depend package="trajectory_msgs"/>
  <depend package="dynamic_reconfigure"/>

</package><package name="current_state_validator" path="/stacks/object_manipulation/branches/0.6-branch/current_state_validator" repo="object_manipulation" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="current_state_validator">

     arm_navigation_experimental_tools

  </description>
  <author>Gil Jones</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/current_state_validator</url>
  <depend package="planning_environment"/>

</package><package name="geometric_semantics" path="" repo="geometric_relations_semantics" repo_host="http://git.mech.kuleuven.be/robotics/geometric_relations_semantics.git">
  <description brief="geometric_semantics">

     geometric_semantics

  </description>
  <author>Tinne De Laet, Steven Bellens</author>
  <license>LGPLv2.1 / BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.orocos.org/wiki/geometric-relations-semantics-wiki</url> 

  <rosdep name="boost"/>
  <export>
        <rosdoc config="rosdoc.yaml"/>
        <cpp cflags="-I${prefix}/src" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lgeometric_semantics"/>
   </export>

</package><package name="pr2_camera_focus" path="/stacks/wg_hardware_test/trunk/pr2_camera_focus" repo="wg_hardware_test" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="Tools for camera focusing.">
    This package is used to output a signal indicating how well a camera is
    focused. It is used during production to focus the cameras.
  </description>
  <author>Blaise Gassend</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://pr.willowgarage.com/wiki/camera_focus</url>
  <depend package="wge100_camera"/>
  <depend package="prosilica_camera"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="rospy"/>
  <depend package="sensor_msgs"/>
  <depend package="std_msgs"/>
  <depend package="pr2_self_test_msgs"/>
  <depend package="stereo_image_proc"/>
  
  <rosdep name="gnuplot"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="cob_utilities" path="" repo="cob_driver" repo_host="git://github.com/ipa320/cob_driver">
  <description brief="cob_utilities">

    Deprecated
    &quot;cob_utilities&quot; subsumes a number of classes, which are used in the original COb3 software. E.g. &quot;IniFile.h&quot; supports the original inifile structure of Care-O-bot 3. &quot;MathSup.h&quot; provides some basic functions like conversion from degree to radion or norming of angles within +/- PI. The package is currently used while the drivers are ported to ROS and Orocos respectively. Midterm it shall be removed and the ROS structures shall be used for reading parameters during initialization. So, don't use this package in new code!

  </description>
  <author>Christian Connette</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_utilities</url>

  <!-- Dependencies from other packages or external libs-->
  <depend package="roscpp"/>

  <!-- As we deviate from the standard ROS Repository-Structure we have to tell ROS where to find header and lib -->
  <export>
    <cpp cflags="-I${prefix}/common/include" lflags="-Wl,-rpath,${prefix}/common/lib -L${prefix}/common/lib -lcob_utilities"/>
  </export>

</package><package name="bosch_drawer_executive" path="/trunk/stacks/drink_serving/bosch_drawer_executive" repo="bosch-ros-pkg-e" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg-e/code">
  <description brief="ias_drawer_executive">

     ias_drawer_executive
     opens drawers in the ias kitchen.
     the robot is driven to a hardcoded location that is know for each drawer.
     the right hand goes to a hardcoded joint state so that we see the ar toolkit marker on the drawer handle in the forearm camera.
     ik is then used to grasp at the marker, and the drawer is opened with some trajectory exploration, following the line of least resistance so to say.

  </description>
  <author>Thomas Ruehr</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ias_drawer_executive</url>
  <depend package="move_arm_msgs"/>
  <!-- <depend package="articulation_pr2"/> -->
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <!--depend package="ar_pose"/-->
  <depend package="kinematics_msgs"/>
  <depend package="pr2_arm_move_ik"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="tf"/>
  <depend package="pr2_msgs"/>
  <depend package="move_base_msgs"/>
  <depend package="joint_trajectory_action"/>
  <depend package="geometry_msgs"/>
  <depend package="kinematics_msgs"/>
  <depend package="std_srvs"/>
  <depend package="pr2_gripper_sensor_msgs"/>
<depend package="visualization_msgs"/>

  <!-- for listening to clouds from handle detector -->
  <depend package="pcl"/>
  <!-- for projecting laser and not driving into obstacles-->
  <depend package="laser_geometry"/>

  <depend package="object_manipulation_msgs"/>

  <!-- <depend package="pcl_cloud_tools"/> -->
  <depend package="pr2_gripper_sensor_msgs"/>

  <!-- for SnapMapICP

  <depend package="nav_msgs"/>

  <depend package="point_cloud_converter"/>

   -->

  <!-- for cop plate detection -->
  <depend package="cop_client_cpp"/>

  <depend package="ias_table_msgs"/>

  <!-- needed for localization (make will produce pgm's from png's) -->
  <depend package="ias_maps"/>

  <export>
    <cpp cflags="-I${prefix}/include/" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lias_drawer_executive_library"/>
  </export>

</package><package name="mrpt_ro_slam" path="/trunk/mrpt_slam/mrpt_ro_slam" repo="mrpt-ros-pkg" repo_host="http://mrpt-ros-pkg.googlecode.com/svn">
  <description brief="mrpt_ro_slam">

     mrpt_ro_slam

  </description>
  <author>Jose Luis</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/mrpt_ro_slam</url>
  <depend package="mrpt_libs"/>
  <depend package="mrpt_msgs"/>

</package><package name="arm_hand_splitter" path="" repo="uuisrc-ros-pkg" repo_host="https://github.com/cburbridge/uuisrc-ros-pkg">
  <description brief="arm_hand_splitter">

     arm_hand_splitter

  </description>
  <author>Lorenzo Riano</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/arm_hand_splitter</url>
  <depend package="rospy"/>
  <depend package="roslib"/>
  <depend package="trajectory_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="pr2_controllers_msgs"/>

</package><package name="cob_manipulation_config" path="" repo="cob_manipulation" repo_host="git://github.com/ipa320/cob_manipulation">
  <description brief="cob_manipulation_config">

     cob_manipulation_config

  </description>
  <author>Mathias Lüdtke</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_manipulation_config</url>

</package><package name="robot_mechanism_controllers" path="/stacks/pr2_controllers/trunk/robot_mechanism_controllers" repo="pr2_controllers" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="Generic Mechanism Controller Library">
  </description>
  <author>John Hsu, Melonee Wise, Stuart Glaser</author>
  <license>BSD</license>
  <review notes="https://code.ros.org/trac/wg-ros-pkg/ticket/3574" status="Doc reviewed"/>

  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="angles"/>
  <depend package="filters"/>
  <depend package="tf"/>
  <depend package="tf_conversions"/>
  <depend package="kdl"/>
  <depend package="eigen_conversions"/>
  <depend package="pluginlib"/>
  <depend package="actionlib"/>

  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="diagnostic_msgs"/>
  <depend package="trajectory_msgs"/>

  <depend package="pr2_controllers_msgs"/>
  <depend package="pr2_controller_interface"/>
  <depend package="pr2_controller_manager"/>
  <depend package="kdl_parser"/>
  <depend package="pr2_mechanism_model"/>
  <depend package="control_toolbox"/>
  <depend package="realtime_tools"/>
  <depend package="message_filters"/>
  <depend package="control_msgs"/>
  
  
  <url>http://ros.org/wiki/robot_mechanism_controllers</url>
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp -I${prefix}/srv/cpp" lflags="-Wl,-rpath,${prefix}/lib/ -L${prefix}/lib -lrobot_mechanism_controllers"/>
    <pr2_controller_interface plugin="${prefix}/controller_plugins.xml"/>
  </export>
  <rosdep name="libtool"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="dynamic_movement_primitive_controller_test" path="" repo="usc-clmc-ros-pkg" repo_host="https://github.com/usc-clmc/usc-clmc-ros-pkg">
  <description brief="dynamic_movement_primitive_controller_test">

     dynamic_movement_primitive_controller_test

  </description>
  <author>Peter Pastor</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/dynamic_movement_primitive_controller_test</url>
  <depend package="roscpp"/>
  <depend package="robot_info"/>
  <depend package="usc_utilities"/>
  <depend package="dynamic_movement_primitive"/>

</package><package name="explore_pr2" path="/trunk/stacks/pr2_exploration/explore_pr2" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="explore_pr2">
     Demo for running explore stack on PR2
  </description>
  <author>Charles DuHadway (maintained by Benjamin Pitzer)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/explore_pr2</url>

  <depend package="explore"/>
  <depend package="pr2_navigation_slam"/>
  <depend package="gmapping"/>
  
</package><package name="hrl_simple_arm_goals" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="hrl_simple_arm_goals">
    Python equivalents for move_Arm tutorials. (For example,
    http://www.ros.org/wiki/move_arm/Tutorials/MoveArmPoseGoalComplex)
  </description>
  <author>Advait Jain, Advisor: Prof. Charlie Kemp, Lab: Healthcare Robotics Lab at Georgia Tech</author>
  <license>New BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/simple_armstack_goals</url>

  <depend package="move_arm_msgs"/>
  <depend package="actionlib"/>
  <depend package="rospy"/>
  <depend package="roscpp"/>

</package><package name="pr2_arm_navigation_filtering" path="/stacks/pr2_arm_navigation/trunk/pr2_arm_navigation_filtering" repo="pr2_arm_navigation" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_arm_navigation_filtering">
    This package contains a set of launch files and configuration files for 
  </description>
  <author>Sachin Chitta</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_arm_navigation_filtering</url>

  <depend package="pr2_machine"/>
  <depend package="trajectory_filter_server"/>
  <depend package="spline_smoother"/>
  <depend package="constraint_aware_spline_smoother"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="srs_decision_making_interface" path="" repo="srs_public" repo_host="git://github.com/ipa320/srs_public">
  <description brief="srs_decision_making_interface">

     srs_decision_making_interface

  </description>
  <author>renxi</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/srs_decision_making_interface</url>
  <depend package="std_msgs"/>
  <depend package="actionlib"/>
  <depend package="rospy"/>
</package><package name="oomdp_msgs" path="/trunk/arrg/ua_verbs/oomdp_msgs" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
  <description brief="oomdp_msgs">

     Standard messages for communication with OO-MDP enviroments. 

  </description>
  <author>Daniel Hewlett</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/oomdp_msgs</url>

  <depend package="std_msgs"/>

</package><package name="ecl_converters_lite" path="/trunk/ecl_lite/ecl_converters_lite" repo="ecl_lite" repo_host="https://embedded-control-library.googlecode.com/svn">
  <description brief="Simple c style library for type conversions">

     These are a very simple version of some of the functions in ecl_converters suitable for
     firmware development. That is, there is no use of new, templates or exceptions.

  </description>
  <author>Daniel Stonier (d.stonier@gmail.com)</author>
  <license>BSD</license>
  <review notes="" status="doc reviewed"/>
  <url>http://snorriheim.dnsdojo.com/redmine/wiki/ecl</url>
  
  <depend package="ecl_license"/>
  <depend package="ecl_build"/>
  <depend package="ecl_config"/>
  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>
</package><package name="mh5_mesh_arm_navigation" path="/trunk/motoman/mh5_mesh_arm_navigation" repo="swri-ros-pkg" repo_host="http://swri-ros-pkg.googlecode.com/svn">
  <description brief="mh5_mesh_arm_navigation">

     mh5_mesh_arm_navigation

  </description>
  <author>Somudro Gupta</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/mh5_mesh_arm_navigation</url>
  <depend package="planning_environment"/>
  <depend package="kinematics_base"/>
  <depend package="arm_kinematics_constraint_aware"/>
  <depend package="ompl_ros_interface"/>
  <depend package="trajectory_filter_server"/>
  <depend package="constraint_aware_spline_smoother"/>
  <depend package="move_arm"/>

</package><package name="collvoid_stage" path="" repo="multi_robot_collision_avoidance" repo_host="https://kforge.ros.org/collvoid/collvoid">
  <description brief="clearpath_stage">

     collvoid_stage

  </description>
  <author>Daniel Claes</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/collvoid_stage</url>
  <depend package="stage"/>
  <depend package="cocalu_local_planner"/>

</package><package name="rosserial_client" path="" repo="rosserial" repo_host="https://kforge.ros.org/rosserial/hg">  
  <description brief="Generalized client side source for rosserial."/>
  <author>Michael Ferguson, Adam Stambler</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosserial_client</url>
  
  <depend package="std_msgs"/>
  <depend package="rosserial_msgs"/>
  <depend package="tf"/>

</package><package name="continuous_ops_alerts" path="" repo="continuous_ops" repo_host="https://kforge.ros.org/contops/hg">
  <description brief="continuous_ops_alerts">

     continuous_ops_alerts

  </description>
  <author>Eitan Marder-Eppstein</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/continuous_ops_alerts</url>
  <depend package="rospy"/>
  <depend package="roslib"/>
  <depend package="tf2"/>
  <depend package="tf2_ros"/>
  <depend package="geometry_msgs"/>
  <depend package="tf2_geometry_msgs"/>
  <depend package="pr2_msgs"/>
</package><package name="pcl_vtk_tools" path="" repo="mapping" repo_host="http://code.in.tum.de/git/mapping.git">
  <description>
    A collection of point cloud tools that depend on vtk.
  </description>

  <author>Nico Blodow, Zoltan-Csaba Marton, Dejan Pangercic</author>
  <license>BSD</license>
  <review notes="beta" status="experimental"/>

  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="pcl"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="mapping_msgs"/>
  <depend package="yaml_cpp"/>
  <!--See http://octomap.sourceforge.net/ -->
  <depend package="pcl_visualization"/>

  <rosdep name="libvtk"/>
  <rosdep name="libitpp-dev"/>
<!--   <depend package="cop_for_external_dependencies" /> -->
  <export>
    <cpp cflags="-I${prefix}/include/"/>
  </export>
</package><package name="robotino_teleop" path="/robotino-ros-pkg/trunk/robotino/robotino_teleop" repo="robotino-ros-pkg" repo_host="http://svn.openrobotino.org">
  <description brief="robotino_teleop">
Implements nodes to control Robotino using a joystick or a keyboard.
  </description>
  <author>indorewala@servicerobotics.eu</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/robotino_teleop</url>
  <depend package="robotino_node"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
</package><package name="wpa_supplicant_node" path="/stacks/linux_networking/trunk/wpa_supplicant_node" repo="linux_networking" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="wpa_supplicant for multi_interface_roam">
     A version of wpa_supplicant that has been modified to work with
     multi_interface_roam.
  </description>
  <author>Package maintained by Blaise Gassend</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/wpa_supplicant</url>
  <depend package="roscpp"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="dynamic_reconfigure"/>
  <rosdep name="libpcsclite-dev"/>
  <rosdep name="libncurses-dev"/>
  <rosdep name="libnl-dev"/>
  <rosdep name="libreadline-dev"/>
  <rosdep name="libdbus-dev"/>
</package><package name="mongo_ros" path="" repo="warehousewg" repo_host="https://kforge.ros.org/warehousewg/warehouse-hg">
  <description brief="mongo_ros">
Package for storing ROS messages in a MongoDB database.  Contains C++ and Python client libraries.
  </description>
  <author>Bhaskara Marthi</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/mongo_ros</url>
  <depend package="mongodb"/>
  <depend package="pymongo"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="std_msgs"/>

  <!-- For testing -->
  <depend package="geometry_msgs"/>
  <depend package="tf"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lmongo_ros -lboost_system"/>
  </export>

</package><package name="vanadium_maps" path="/trunk/sandbox/vanadium_maps" repo="vanadium-ros-pkg" repo_host="http://vanadium-ros-pkg.googlecode.com/svn">
  <description brief="Maps">
     vanadium_maps
  </description>
  <author>Michael Ferguson</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/vanadium_maps</url>
</package><package name="lwr_arm_navigation" path="" repo="lwr_arm_navigation" repo_host="https://github.com/RCPRG-ros-pkg/lwr_arm_navigation">
  <description brief="lwr_arm_navigation">

     lwr_arm_navigation

  </description>
  <author>Konrad Banachowicz</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/lwr_arm_navigation</url>
  <depend package="planning_environment"/>
  <depend package="arm_kinematics_constraint_aware"/>
  <depend package="ompl_ros_interface"/>
  <depend package="trajectory_filter_server"/>
  <depend package="constraint_aware_spline_smoother"/>
  <depend package="move_arm"/>

</package><package name="segmented_clutter_grasp_planner" path="/stacks/pr2_object_manipulation/branches/0.6-branch/manipulation/segmented_clutter_grasp_planner" repo="pr2_object_manipulation" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="segmented_clutter_grasp_planner">

     segmented_clutter_grasp_planner: segments clutter into clusters by removing points whose normals are parallel to a given grasp direction, and then running the point cluster grasp planner on the resulting clusters

  </description>
  <author>Kaijen Hsiao</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/segmented_clutter_grasp_planner</url>
  <depend package="object_manipulation_msgs"/>
  <depend package="object_manipulator"/>
  <depend package="tf"/>
  <depend package="pr2_gripper_grasp_planner_cluster"/>
  <depend package="roscpp"/>
  <depend package="pcl"/>
  <depend package="sensor_msgs"/>
</package><package name="spacenav_node" path="/stacks/joystick_drivers/trunk/spacenav_node" repo="joystick_drivers" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Node for the 3Dconnexion SpaceNavigator">
    A node for publishing the state of the 3Dconnexion SpaceNavigator 6DOF joystick.
  </description>
  <author>Stuart Glaser, Blaise Gassend</author>
  <license>BSD</license>
  <review notes="reviewed 10-1-2009" status="Doc reviewed"/>
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="spacenav"/>

  <url>http://ros.org/wiki/spacenav_node</url>
  <export>
  </export>
  <!--rosdep name="spacenavd" /-->
  <!--rosdep name="libspnav-dev" /-->
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="opt_camera" path="/trunk/opt_camera" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="opt_camera">

     opt_camera

  </description>
  <author>Kei Okada</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/opt_camera</url>
  <depend package="sensor_msgs"/>
  <depend package="driver_base"/>
  <depend package="image_proc"/>
  <depend package="stereo_synchronizer"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="camera_calibration_parsers"/>
  <depend package="compressed_image_transport"/>
</package><package name="dmp_behaviors" path="" repo="usc-clmc-ros-pkg" repo_host="https://github.com/usc-clmc/usc-clmc-ros-pkg">
  <description brief="dmp_behaviors">

     behaviors

  </description>
  <author>Peter Pastor</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/dmp_behaviors</url>

  <depend package="roscpp"/>

  <depend package="geometry_msgs"/>
  <depend package="std_srvs"/>
  
  <depend package="actionlib"/>  
  <depend package="actionlib_msgs"/>

  <depend package="usc_utilities"/>
  <depend package="dmp_behavior_actions"/>

  <depend package="bullet"/>
  <depend package="tf"/>
  <depend package="angles"/>
  
  <depend package="task_msgs"/> 
 
  <depend package="skill_library"/>
  <depend package="dynamic_movement_primitive"/>
  <depend package="dynamic_movement_primitive_utilities"/>

  <depend package="arm_dynamic_movement_primitive_utilities"/>
  
  <!-- <depend package="tabletop_object_detector"/> -->

</package><package name="sr_mechanism_controllers" path="" repo="shadow_robot" repo_host="lp:sr-ros-interface">
  <description brief="sr_mechanism_controllers">

     The sr_mechanism_controllers package contains different types of
     controllers for the etherCAT hand:(fake) calibration controllers,
     position controllers, velocity controllers, force controllers, ...

  </description>
  <author>Ugo Cupcic / ugo@shadowrobot.com , contact@shadowrobot.com</author>
  <license>GPL</license>
  <review notes="" status="NA"/>
  <url>http://ros.org/wiki/sr_mechanism_controllers</url>

  <depend package="std_msgs"/>
  <depend package="std_srvs"/>
  <depend package="roscpp"/>
<!--  <depend package="sr_hand"/> -->
  <depend package="actionlib"/>
  <depend package="pr2_controllers_msgs"/>
<!--  <depend package="pr2_mechanism_msgs"/> -->
  <depend package="sr_robot_msgs"/>
  <depend package="sr_utilities"/>
  <depend package="pr2_controller_interface"/>
<!--  <depend package="sr_hardware_interface" /> -->
  <depend package="pr2_mechanism_model"/>
  <depend package="realtime_tools"/>
  <depend package="robot_mechanism_controllers"/>
  <depend package="pr2_mechanism_controllers"/>
  <depend package="pluginlib"/>
  <depend package="rosconsole"/>
  <depend package="angles"/>
  <depend package="control_toolbox"/>

  <depend package="sr_hardware_interface"/>

  <depend package="xmlrpcpp"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib"/>
    <!--
      <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp -I${prefix}/srv/cpp"
	   lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lpr2_calibration_controllers" />
      -->
    <!-- This controller plugin file is invalid, and prevents other controlers from getting loaded -->
    <pr2_controller_interface plugin="${prefix}/controller_plugins.xml"/>
  </export>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="cmucam_png" path="/trunk/cmucam_png" repo="ajh-ros-pkg" repo_host="https://ajh-ros-pkg.svn.sourceforge.net/svnroot/ajh-ros-pkg">
  <description brief="cmucam_png">

     cmucam_png

  </description>
  <author>Andrew Harris</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cmucam_png</url>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="rospy"/>
  <depend package="roscpp"/>

</package><package name="kurt_2dnav_slam" path="" repo="kurt_apps" repo_host="http://kos.informatik.uni-osnabrueck.de/kurt_apps.git">
  <description brief="SLAM-based navigation for the Kurt robot.">
     This application allows the Kurt to navigate autonomously while also
     building a map of its environment as it drives along. It is modeled after
     pr2_2dnav_slam.
  </description>
  <author>Jochen Sprickerhof</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/kurt_2dnav_slam</url>
</package><package name="robot_face" path="/trunk/robot_face" repo="agas-ros-pkg" repo_host="http://agas-ros-pkg.googlecode.com/svn">
  <description brief="RobotFace - Display your talking head on your robot.">

     This is an application to display a talking head on your robot for human robot interaction. It displays text and synchronized mouthmovements. It is also able to show emotions.

  </description>
  <author>AGAS, Julian Giesen, David Gossow</author>
  <license>LGPLv3</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/robot_face</url>
  <logo>http://www.uni-koblenz-landau.de/koblenz/fb4/institute/icv/agpaulus/logo_institut.jpg</logo>

  <depend package="ogre"/>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <rosdep name="pulse"/>
  <rosdep name="festival"/>
  <rosdep name="mbrola"/>
  <rosdep name="qt4"/>
</package><package name="euscollada" path="/trunk/euscollada" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="collada_eus">

     euscollada

  </description>
  <author>Kei Okada</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/euscollada</url>

  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>

  <depend package="colladadom"/>
  <depend package="collada_urdf_jsk_patch"/>
  <depend package="euslisp"/>
  <depend package="roseus"/>
  <depend package="jsk_tools"/>

  <rosdep name="yaml-cpp"/>
  <rosdep name="libqhull"/>

</package><package name="nxt_robot_gyro_car" path="" repo="foote-nxt" repo_host="https://nxt.foote-ros-pkg.googlecode.com/hg/">
  <description brief="nxt_robot_gryo_car">
     The nxt_robot_gyro_car package provides a starting nxt robot. For instructions on building
     the nxt robot load the gyro_car.lxf into the LEGO Digital Designer 
     <a href="http://ldd.lego.com/">(ldd.lego.com)</a> and select the building guide mode. This robot 
     uses the <a href="http://mindstorms.lego.com/en-us/Products/Ultrasonic+Sensor/9846.aspx"> nxt lego ultrasonic sensor</a>,
     the <a href="http://www.hitechnic.com/cgi-bin/commerce.cgi?preadd=action&amp;key=NGY1044"> hitechnic gryo sensor</a>,
     and the <a href="http://www.hitechnic.com/cgi-bin/commerce.cgi?preadd=action&amp;key=NAC1040"> hitechnic acclerometer sensor</a>.

  </description>
  <author>Melonee Wise</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/nxt_robot_gyro_car</url>
  <depend package="nxt_ros"/>
  <depend package="nxt_controllers"/>
  <depend package="robot_pose_ekf"/>
  <depend package="nxt_description"/>
  <depend package="robot_state_publisher"/>


</package><package name="jsk_android_gui" path="/trunk/jsk_android_apps_api9/jsk_android_gui" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="jsk_android_gui">

     jsk_android_gui written in android api-9

  </description>
  <author>Haseru Azuma</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/jsk_android_gui</url>

  <depend package="roseus"/> <!--for StringStamped message-->
  <depend package="appmanandroid"/>
  <depend package="jsk_gui_msgs"/>
  <export>
    <rosjava-android-app target="android-9"/>
  </export>

  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>
</package><package name="rtt_ar_pose" path="" repo="camera_pose_estimation" repo_host="http://git.mech.kuleuven.be/robotics/camera_pose_estimation.git">
  <description brief="rtt_ar_pose">

    Provides an rtt typekit for ROS ar_pose messages.

    It allows you to use ROS messages transparently in
    RTT components and applications.

    This package was automatically generated by the
    create_rtt_msgs generator and should not be manually
    modified.

    See the http://ros.org/wiki/ar_pose documentation
    for the documentation of the ROS messages in this
    typekit.

  </description>
  <author>create_rtt_msgs Generator</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rtt_rosnode</url>
  <depend package="rtt_rosnode"/>
  <depend package="ar_pose"/>
  <depend package="rtt_std_msgs"/>
  <depend package="rtt_rosgraph_msgs"/>
  <depend package="rtt_geometry_msgs"/>
  <depend package="rtt_visualization_msgs"/>
  <depend package="rtt_sensor_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>


</package><package name="safe_base_controller" path="/trunk/stacks/bosch_skin/safe_base_controller" repo="bosch-ros-pkg-e" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg-e/code">
  <description brief="Safe Base Controller">
  	
    The safe_base_controller only moves/turns the base if movement/turning in this direction is allowed. It subscribes to the command_limits topic where max and min velocities greater than zero must be published in order for the controller to allow movement. 
	
  </description>
  <author>Sebastian Haug, Sachin Chita, John Hsu, Melonee Wise</author>
  <license>BSD</license>
  
  <!-- ROS Interfaces -->
  <depend package="geometry_msgs"/>
  <depend package="roscpp"/>
  <depend package="realtime_tools"/>
  <depend package="pluginlib"/>
  <depend package="angles"/>
  <depend package="pr2_mechanism_controllers"/>
  <depend package="pr2_controller_interface"/>
  <depend package="filters"/>
  <depend package="std_msgs"/>
  <url>http://www.ros.org/wiki/safe_base_controller</url>
  
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp -I${prefix}/srv/cpp" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lsafe_base_controller"/>
    <pr2_controller_interface plugin="${prefix}/safe_base_controller.xml"/>
  </export>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="trf_learn" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="trf_learn">
      A package for learning task relevant features.  Contain behaviors for
      operating flip style light switches, rocker style light switches, and
      drawers.
  </description>
  <author>Hai Nguyen (hai@gatech.edu) Advisor: Prof. Charlie Kemp, Lab: Healthcare Robotics Lab at Georgia Tech</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/trf_learn</url>

  <depend package="rospy"/>
  <depend package="laser_interface"/>
  <depend package="hrl_lib"/>
  <depend package="feature_extractor_fpfh"/>
  <depend package="libsvm3"/>
  <depend package="ml_lib"/>

  <depend package="geometry_msgs"/>
  <depend package="tf"/>
  <depend package="std_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="opencv2"/>
  <depend package="hrl_camera"/>
  <depend package="hrl_pr2_lib"/>
  <depend package="hrl_opencv"/>
  <depend package="dynamic_reconfigure"/>

  <depend package="hai_sandbox"/>

</package><package name="icreate_sensorListen" path="" repo="cmr-ros-pkg" repo_host="lp:cmr">
  <description brief="icreate_sensorListen">

    icreate_sensorListen 

  </description>
  <author>QUT-Roomba</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/icreate_sensorListen</url>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="irobot_create_2_1"/>
    
</package><package name="demo1_kaszubski" path="/trunk/cturtle/demo1/demo1_kaszubski" repo="seabee3-ros-pkg" repo_host="http://seabee3-ros-pkg.googlecode.com/svn">
  <description brief="demo1_kaszubski">

     demo1_kaszubski

  </description>
  <author>Edward T. Kaszubski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/demo1_kaszubski</url>
  <depend package="base_libs"/>
</package><package name="pi_speech_tutorial" path="/trunk/pi_tutorials/pi_speech_tutorial" repo="pi-robot-ros-pkg" repo_host="http://pi-robot-ros-pkg.googlecode.com/svn">
  <description brief="pi_speech_tutorial">

     ROS Tutorial for using pocketsphinx and TTS

  </description>
  <author>patrick</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pi_speech_tutorial</url>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="pocketsphinx"/>
  <depend package="sound_play"/>
  <depend package="std_msgs"/>
</package><package name="cl_opengl" path="" repo="cram_physics" repo_host="https://github.com/moesenle/cram_physics">
  <description brief="cl_opengl">

     cl_opengl

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cl_opengl</url>
  <depend package="cffi"/>

</package><package name="table_pose" path="/demos/ros_fall_school_2010/table_pose" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="table_pose">
  </description>

  <author>Radu Bogdan Rusu</author>
  <license>BSD</license>
  <url/>
  <review notes="beta" status="experimental"/>

  <depend package="pcl"/>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
</package><package name="pr2_plugs_msgs" path="" repo="pr2_plugs" repo_host="https://kforge.ros.org/plugs/hg">
  <description brief="pr2_plugs_msgs">

     pr2_plugs_msgs provides the msgs and action definitions required for plugging in.

  </description>
  <author/>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_plugs_msgs</url>
  <depend package="actionlib_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="std_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/msg/cpp -I${prefix}/srv/cpp"/>
   <rosdoc config="rosdoc.yaml"/>
  </export>



</package><package name="turtlebot_arm_interactive_markers" path="" repo="turtlebot_arm" repo_host="https://kforge.ros.org/turtlebot/turtlebot_arm">
  <description brief="turtlebot_arm_interactive_markers">

     turtlebot_arm_interactive_markers allows the user to control the TurtleBot arm using rviz interactive markers.

  </description>
  <author>Helen Oleynikova</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/turtlebot_arm_interactive_markers</url>

  <depend package="roscpp"/>
  <depend package="visualization_msgs"/>
  <depend package="interactive_markers"/>
  <depend package="arbotix_msgs"/>
  <depend package="arbotix_controllers"/>
  <depend package="simple_arm_server"/>
  <depend package="actionlib"/>

</package><package name="R1_2dnav" path="" repo="JKU_Robotic_Stack" repo_host="https://github.com/AaronMR/JKU_Robotic_Stack">
  <description brief="R1_2dnav">

     R1_2dnav

  </description>
  <author>aaronmr</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/R1_2dnav</url>
  <depend package="R1_Odom"/>
  <depend package="R1_urdf"/>
  <depend package="joint_state_publisher"/>
  <depend package="Laser_PLS200"/>
  <depend package="CB_TCP_RTAI"/>

</package><package name="chameleon_teleop" path="/trunk/clearpath_chameleon/chameleon_teleop" repo="clearpath-ros-pkg" repo_host="http://clearpath-ros-pkg.googlecode.com/svn">
  <description brief="chameleon_teleop">

     chameleon_teleop

  </description>
  <author>Mike Purvis</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/chameleon_teleop</url>

  <depend package="chameleon_firmware"/>
  <depend package="sensor_msgs"/>
  <depend package="joy"/>
  <depend package="rospy"/>
</package><package name="laser_ortho_projector" path="" repo="scan_tools" repo_host="https://github.com/ccny-ros-pkg/scan_tools">
  <description brief="laser_ortho_projector">

  The laser_ortho_projector package calculates orthogonal projections of LaserScan messages. 

  </description>
  <author>Ivan Dryanovski, William Morris</author>
  <license url="http://www.opensource.org/licenses/BSD-3-Clause">BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/laser_ortho_projector</url>

  <depend package="roscpp"/>
  <depend package="nodelet"/>
  <depend package="sensor_msgs"/> 
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="geometry_msgs"/> 
  <depend package="message_filters"/>
  <depend package="tf"/> 

  <export>
    <nodelet plugin="${prefix}/laser_ortho_projector_nodelet.xml"/>
  </export>

</package><package name="bumblebee_stereo" path="/trunk/drivers/bumblebee_stereo" repo="ubc-ros-pkg" repo_host="https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg">
  <description brief="bumblebee_stereo">
      This package contains a node that computes stereo(disparity, point cloud) from a pair of stereo images. It uses the PtGrey triclops library.
  </description>
  <author>Marius Muja</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://pr.willowgarage.com/wiki/bumblebee_stereo</url>

  <depend package="triclops"/>
  <depend package="digiclops"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="sensor_msgs"/>
  <depend package="image_transport"/>
  <depend package="bumblebee1394"/>
</package><package name="mrpt_bridge" path="/trunk/mrpt_common/mrpt_bridge" repo="mrpt-ros-pkg" repo_host="http://mrpt-ros-pkg.googlecode.com/svn">
  <description brief="mrpt_bridge">

     A C++ library for converting between some of the MRPT data types and ROS messages.

  </description>
  <author>Jose Luis Blanco, Pablo Iñigo Blasco</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/mrpt_bridge</url>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="mrpt_msgs"/>
  <depend package="mrpt_libs"/>
  
  <depend package="tf"/>
  <depend package="pcl"/>
  <depend package="opencv2"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lmrpt_bridge"/>
  </export>


</package><package name="camera_info_manager" path="/stacks/image_common/trunk/camera_info_manager" repo="image_common" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Camera calibration information manager">

     This package provides a C++ interface for camera calibration
     information.  It provides CameraInfo, and handles SetCameraInfo
     service requests, saving and restoring the camera calibration
     data.

  </description>
  <author>Jack O'Quin</author>
`  <license>BSD</license>
  <review notes="2011-07-12" status="Doc reviewed"/>
  <url>http://ros.org/wiki/camera_info_manager</url>

  <depend package="camera_calibration_parsers"/>
  <depend package="sensor_msgs"/>
  <depend package="roslib"/>
  <depend package="rostest"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lcamera_info_manager"/>
  </export>

</package><package name="asmach" path="/stacks/linux_networking/trunk/asmach" repo="linux_networking" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Smach">
    SMACH, which stands for 'state machine', is a task-level
    architecture for rapidly creating complex robot behavior. At its
    core, SMACH is a ROS-independent Python library to build
    hierarchical state machines.  SMACH is a new library that takes
    advantage of very old concepts in order to quickly create robust
    robot behavior with maintainable and modular code.
  </description>
  <author>Jonathan Bohren</author>
  <license>BSD</license>
  <review notes="" status="API cleared"/>
  <url>http://ros.org/wiki/smach</url>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
  <export>
    <rosdoc config="rosdoc.yaml"/>    
  </export>
</package><package name="gaussian_process" path="/trunk/freiburg_tools/gaussian_process" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="Gaussian Process regression (C++ library)">

This package provides an implementation of Gaussian Process regression. It provides an easy interface to build a GP from input and output data. The GP can then estimate the output at any given input location. Further, a gradient-descent based optimization of the hyperparameter is available.

This library was implemented by Christian Plagemann, Jürgen Hess, Axel Rottmann and Jürgen Sturm at the Autonomous Intelligent Systems Lab. It contains code from Gunter Winkler and Konstantin Kutzkow which implements a LU factorization for boost.

More details on Gaussian Process regression can be found in the open-source book &quot;Gaussian Processes for Machine Learning&quot;, written by Carl Edward Rasmussen and Chris Williams, the MIT Press, 2006, available from http://www.gaussianprocess.org/gpml/chapters.

  </description>
  <author>Maintained by Juergen Sturm</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/gaussian_process</url>

  <rosdep name="libgsl"/>
  <rosdep name="libatlas"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -lgaussian_process -lgsl  -lgslcblas -Wl,-rpath,${prefix}/lib"/>
  </export>


</package><package name="kurtana_description" path="" repo="kurtana_robot" repo_host="http://kos.informatik.uni-osnabrueck.de/kurtana_robot.git">
  <description brief="URDF description of the KURTana robot">

     This package contains an URDF description of the KURTana Robot and all supporting mesh files.
     
     NOTICE: the construction is custom-made, so it's relatively unlikely that it serves for more than an exemplar
             but if you have comments or questions regarding the KURTana project, feel free to contact us  

  </description>
  <author>Henning Deeken</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/kurtana_description</url>
  <depend package="urdf"/>
  <depend package="convex_decomposition"/>
  <depend package="ivcon"/>
  <depend package="mapping_msgs"/>
  <depend package="geometric_shapes_msgs"/>
</package><package name="differential_drive" path="" repo="differential_drive" repo_host="https://code.google.com/p/differential-drive">
  <description brief="differential_drive">

Provides some basic tools for interfacing a differential-drive 
robot with the ROS navigation stack.  The intent is to make this 
independent of specific robot implementation.

  </description>
  <author>Jon Stephan</author>
  <license>GNU GPL3</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/differential_drive</url>
  <depend package="rospy"/>
  <depend package="std_msgs"/>

</package><package name="google_handheld_slam" path="" repo="google" repo_host="https://code.google.com/p/rosjava.google/">
  <description brief="google_handheld_slam">
     google_handheld_slam
  </description>
  <author>Damon Kohler (damonkohler@google.com)</author>
  <license>Apache 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/google_handheld_slam</url>

  <depend package="xsens_driver"/>
  <depend package="hector_mapping"/>
  <depend package="hector_imu_attitude_to_tf"/>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="google_topic_monitor"/>
</package><package name="cr_calibration" path="/trunk/cr_calibration" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="cr_calibration">

     cr_calibration

  </description>
  <author>youhei kakiuchi, JSK</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cr_calibration</url>
  <depend package="rospy"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="message_filters"/>
  <depend package="cv_bridge"/>
  <depend package="opencv2"/>
  <depend package="tf"/>
  <depend package="tf_conversions"/>
  <depend package="kdl"/>
  <depend package="stereo_synchronizer"/>

</package><package name="youbot_overhead_localization" path="/trunk/distribution/wpi-rail-ros-pkg/rail_youbot/youbot_overhead_localization" repo="wpi-rail-ros-pkg" repo_host="http://wpi-rail.googlecode.com/svn">
	<description brief="Localization software for the Kuka YouBot using two overhead cameras.">A package containing localization software for use with the Kuka YouBot in a room with two overhead cameras.</description>
	<author>David Kent</author>
	<license>BSD</license>
	<review notes="" status="unreviewed"/>
	<url>http://ros.org/wiki/youbot_overhead_localization</url>

	<depend package="rosconsole"/>
	<depend package="roscpp"/>
	<depend package="rospy"/>
	<depend package="costmap_2d"/>
	<depend package="map_server"/>
	<depend package="nav_msgs"/>
	<depend package="geometry_msgs"/>
	<depend package="navfn"/>
	<depend package="tf"/>
	<depend package="common_rosdeps"/>
	<depend package="cv_bridge"/>
	<depend package="actionlib"/>
	<depend package="actionlib_msgs"/>
	<export>
		<cpp cflags="-I${prefix}/include `rosboost-cfg --cflags`" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib `rosboost-cfg --lflags thread`"/>
	</export>
	<depend package="youbot_overhead_vision"/>

	<rosdep name="python-imaging"/>
	<rosdep name="python-yaml"/>
	<rosdep name="yaml-cpp"/>
</package><package name="zeroconf_jmdns_demos" path="" repo="zeroconf_implementations" repo_host="https://github.com/stonier/zeroconf_implementations">
  <description brief="demos for the zeroconf jmdns implementation">

     A couple of demos for the zeroconf jmdns implementation. This is
     useful to illustrate both the usage of the library and to test
     the rosjava framework with zeroconf_jmdns as a dependency.

  </description>
  <author>Daniel Stonier</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/zeroconf_jmdns_demos</url>
  <depend package="zeroconf_comms"/>
  <depend package="zeroconf_jmdns"/>
  <export>
    <rosjava-src location="src/java"/>
<!--    <rosjava-pathelement location="bin" groupId="javax.jmdns.demos" artifactId="jmdns_demos" version="0.0.1" built="true" /> -->
  </export>
</package><package name="crlibm" path="/trunk/3rdparty/crlibm" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="Correctly Rounded Mathematical Library v1.0beta4">
    CRlibm, an efficient and proven correctly-rounded mathematical library (similar to libm) which provides:

    * implementations of the double-precision C99 standard elementary functions,

    * correctly rounded in the four IEEE-754 rounding modes,

    * with a comprehensive proof of both the algorithms used and their implementation,

    * sufficiently efficient in average time, worst-case time, and memory consumption to replace existing libms transparently
  </description>
  <author>Jean Michel Muller, Florent de Dinechin, Christoph Lauter, ROS package maintained by Rosen Diankov</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://lipforge.ens-lyon.fr/www/crlibm/</url>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lcrlibm"/>
  </export>
</package><package name="chess_player" path="/trunk/maxwell_apps/chess_player" repo="vanadium-ros-pkg" repo_host="http://vanadium-ros-pkg.googlecode.com/svn">
  <description brief="Executive for AAAI Chess Challenge"/>
  <author>Michael Ferguson</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/chess_player</url>
  <depend package="rospy"/>
  <depend package="chess_msgs"/>
  <depend package="simple_arm_server"/>
  <depend package="diagnostic_msgs"/>

  <!-- from chess_board_locator -->
  <depend package="roscpp"/>
  <depend package="pcl_ros"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="sensor_msgs"/>
  <depend package="tf"/>
  <depend package="message_filters"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="image_transport"/>
  <depend package="std_srvs"/>

  <!-- from chess_piece_locator
  <depend package="roscpp" />
  <depend package="pcl_ros" />
  <depend package="chess_msgs" /> -->
  <depend package="nodelet"/>
  <depend package="nodelet_topic_tools"/>

  <export>
    <nodelet plugin="${prefix}/nodelets.xml"/>
  </export>

  <rosdep name="gnuchess"/>
  <rosdep name="gnuchess-book"/>
</package><package name="pr2_props_rfn" path="" repo="roboframenet" repo_host="https://kforge.ros.org/appmanandroid/roboframenet">
  <description brief="pr2_props_rfn">

    pr2_props_rfn acts as an interface between RoboFrameNet and the pr2_props action server.  pr2_props_rfn is an RFNServer which listens for requests for pr2 props (eg, high-fiving).  When a request comes in, move_base_rfn sends a request to the pr2_props action server.

  </description>
  <author>Brian Thomas</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_props_rfn</url>
  <depend package="rospy"/>
  <depend package="roslaunch"/>
  <depend package="pr2_props"/>
  <depend package="rfnserver"/>

</package><package name="nxtstatus" path="/trunk/ros/examples/nxtstatus" repo="lejos" repo_host="https://lejos.svn.sourceforge.net/svnroot/lejos">
	<description brief="nxtstatus">
		NXTStatus
	</description>
	<author>Juan Antonio Brenha Moral</author>
	<license>BSD</license>
	<review notes="" status="unreviewed"/>
	<url>http://ros.org/wiki/roslejos</url>

	<depend package="rosjava"/>
	<depend package="std_msgs"/>
	<depend package="sensor_msgs"/>

	<export>
    	<rosjava-src location="src"/> 
    	<rosjava-pathelement artifactId="org.lejos.ros.nodes.nxtstatus" built="true" groupId="org.lejos.ros" location="target/" version="0.0.1"/>
    	<rosjava-pathelement location="/usr/local/lejos/lib/pc/pccomm.jar"/>
    	<rosjava-pathelement location="/home/jabrena/ros3/workspace/nxtstatus/lib-bt/bluecove-gpl.jar"/>
    	<rosjava-pathelement location="/home/jabrena/ros3/workspace/nxtstatus/lib-bt/bluecove.jar"/>
	</export>

</package><package name="lwr_defs" path="" repo="lwr_robot" repo_host="https://github.com/RCPRG-ros-pkg/lwr_robot">
  <description brief="lwr_defs">

     lwr_defs

  </description>
  <author>Konrad Banachowicz</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/lwr_defs</url>

</package><package name="touchosc_msgs" path="" repo="rososc" repo_host="https://github.com/Auburn-Automow/rososc">
  <description brief="touchosc_msgs">

      Package containing messages Published and Subscribed to by the default tabpage
      handler in touchosc_bridge.

  </description>
  <author>Michael Carroll</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/touchosc_msgs</url>

</package><package name="hector_trajectory_server" path="/branches/fuerte/hector_slam/hector_trajectory_server" repo="hector_slam" repo_host="https://tu-darmstadt-ros-pkg.googlecode.com/svn">
  <description brief="hector_trajectory_server keeps track of tf trajectories extracted from tf data and makes this data accessible via a service and topic">
 
     hector_trajectory_server keeps track of tf trajectories extracted from tf data and makes this data accessible via a service and topic

  </description>
  <author>Stefan Kohlbrecher</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hector_path_saver</url>
  <depend package="hector_nav_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="hector_map_tools"/>
  <depend package="tf"/>

</package><package name="soccer_application" path="/stacks/pr2_web_apps/trunk/soccer_application" repo="pr2_web_apps" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="soccer_application">
  </description>
  <author>Brian Gerkey, Eitan Marder-Eppstein</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://pr.willowgarage.com/wiki/pr2_addons</url>
  <depend package="actionlib"/>
  <depend package="move_base_msgs"/>
  <depend package="sound_play"/>
  <depend package="webui"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="test_tf2" path="" repo="geometry_experimental" repo_host="https://kforge.ros.org/geometry/experimental">
  <description brief="test_tf2">

     test_tf2

  </description>
  <author>Tully Foote, Eitan Marder-Eppstein</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/test_tf2</url>
  <depend package="rostest"/>
  <depend package="tf"/>
  <depend package="tf2"/>
  <depend package="tf2_bullet"/>
  <depend package="tf2_ros"/>
  <depend package="tf2_geometry_msgs"/>
  <depend package="tf2_kdl"/>
  <depend package="tf2_msgs"/>
  <depend package="roscpp"/>
  <depend package="roslib"/>

</package><package name="roslisp_repl" path="/stacks/roslisp_support/trunk/roslisp_repl" repo="roslisp_support" repo_host="https://code.ros.org/svn/ros">
  <description brief="roslisp_repl is a script for launching up a roslisp REPL">

    This package downloads and extracts SLIME and provides a script to
    start up emacs with a roslisp slime REPL.

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>Public domain</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/roslisp_repl</url>
  <depend package="rosemacs"/>

</package><package name="icreate_OR_sim" path="" repo="cmr-ros-pkg" repo_host="lp:cmr">
  <description brief="icreate_OR_sim">
    An OpenRave Simulator for the iCreate. 

  </description>
  <author>Nick Hillier</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/icreate_OR_sim</url>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="openrave"/>
  <depend package="openrave_sensors"/>
  <depend package="nav_msgs"/>
  <depend package="tf"/>
</package><package name="xsens_driver" path="" repo="ethzasl_xsens_driver" repo_host="git://github.com/ethz-asl/ethzasl_xsens_driver">
  <description brief="xsens_driver">

     ROS Driver for XSens MT/MTi/MTi-G devices.

  </description>
  <author>Francis Colas</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/xsens_driver</url>
  <depend package="rospy"/>
  <depend package="tf"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="gps_common"/>
  <depend package="diagnostic_msgs"/>

</package><package name="jsk_pr2_startup" path="/trunk/jsk_pr2_startup" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="jsk_pr2_startup">

     jsk_pr2_startup

  </description>
  <author>Manabu Saito</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/jsk_pr2_startup</url>

  <depend package="sound_play"/>
  <depend package="voice_text"/>
  <depend package="image_view2"/>
  <depend package="face_detector_mono"/>
  <depend package="openni_camera"/>
  <depend package="imagesift"/>
  <depend package="posedetectiondb"/>
  <depend package="move_base"/>
  <depend package="amcl"/>
  <depend package="safe_teleop_pr2"/>
  <depend package="map_server"/>
  <depend package="pr2_move_base"/>
  <depend package="pr2_navigation_self_filter"/>
  <depend package="pr2_navigation_teleop"/>
  <depend package="pr2_navigation_slam"/>
  <depend package="pr2_base_trajectory_action"/>
  <depend package="pr2_teleop_general_jsk_patch"/>
  <depend package="pr2_laser_snapshotter"/>
  <depend package="topic_tools"/>
  <depend package="mjpeg_server"/>
  <depend package="dynamic_tf_publisher"/>

  <depend package="jsk_maps"/>
  <depend package="jsk_pcl_ros"/>
  <depend package="jsk_smart_gui"/>
</package><package name="pr2_playpen" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="pr2_playpen">

     pr2_playpen

  </description>
  <author>Marc Killpack / mkillpack3@gatech.edu,  Advisor: Prof. Charlie Kemp, Lab: Healthcare Robotics Lab at Georgia Tech</author>
  <license>New BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_playpen</url>
  
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="robotis"/>
  <depend package="actionlib"/>
  <depend package="object_manipulation_msgs"/>
  <depend package="tabletop_object_detector"/>
  <depend package="tabletop_collision_map_processing"/>
  <depend package="UI_segment_object"/>
  <depend package="object_manipulator"/>
  <depend package="rospy"/>
  <depend package="tf"/>
  <depend package="teleop_controllers"/>
  <!--<depend package="point_cloud_python" />-->
  <depend package="pr2_grasp_behaviors"/>

</package><package name="biolab_description" path="" repo="viaflo_pipette" repo_host="https://kforge.ros.org/viaflopipette/hg">
  <description brief="biolab_description">

     biolab_description

  </description>
  <author>John Hsu</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/biolab_description</url>

</package><package name="ua_audio_msgs" path="/trunk/arrg/ua_experimental/ua_audio_msgs" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
  <description brief="audio_msgs">
    
    audio_msgs
    
  </description>
  <author>Morgan Quigley</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://pr.willowgarage.com/wiki/audio_msgs</url>
  <export>
    <cpp cflags="-I${prefix}/msg/cpp"/>
  </export>
  
</package><package name="chr_6dm_imu_description" path="/trunk/arrg/ua_robots/chr_6dm_imu_description" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="CH Robotics CHR-6dm IMU URDF description">
        Continas xacro macros for CHR-6dm IMU.
    </description>
    <author>Antons Rebguns</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/chr_6dm_imu_description</url>
</package><package name="kinect_2d_scanner" path="/trunk/mrpt_hwdrivers/kinect_2d_scanner" repo="mrpt-ros-pkg" repo_host="http://mrpt-ros-pkg.googlecode.com/svn">                                                                         
  <description brief="Kinect grabber as 2D laser scans">A ROS node to 
read range data from a Kinect sensor and convert it (in a flexible way) into 2D equivalent range scans. This allows low-cost implementation of classic SLAM and localization techniques originally designed to work with more expensive laser range finders.</description>
  <author>Jose Luis Blanco</author>
  <license>GPL</license>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="driver_base"/>
  <depend package="mrpt_libs"/>
  <depend package="mrpt_bridge"/>
  <url>http://www.ros.org/wiki/kinect_2d_scanner</url>
</package><package name="win_appupdater" path="" repo="win_ros" repo_host="https://github.com/stonier/win_ros">
  <description brief="win_appupdater">

     win_appupdater

  </description>
  <author>Daniel Stonier</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/win_appupdater</url>

</package><package name="libnabo" path="" repo="ethzasl_mapping" repo_host="https://github.com/ethz-asl/ros-mapping">
  <description brief="libnabo">

     Fetches libnabo through git submodule and makes it available to ROS

  </description>
  <author>Stéphane Magnenat</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/libnabo</url>
  <rosdep name="doxygen"/>
  <rosdep name="boost"/>
  <rosdep name="eigen"/>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lnabo"/>
  </export>
</package><package name="verb_learning" path="/trunk/arrg/ua_verbs/verb_learning" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
  
  <description brief="verb_learning">

     verb_learning

  </description>
  <author>Daniel Hewlett</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/verb_learning</url>
  
  <depend package="rosjava"/>
  <depend package="time_series"/>
  <depend package="wubble_world_2d"/>
  
  <depend package="oomdp_msgs"/>
</package><package name="jrl_walkgen_bridge" path="" repo="stacks/jrl_walkgen_bridge" repo_host="git://github.com/laas/jrl_walkgen_bridge">
  <description brief="jrl-walkgen bridge">

    Provide pattern-generators compatible with the walk_interfaces /
    walk_msgs interface using the jrl-walkgen software.

    The following algorithms are provided by this pattern generator:
    <ul>
      <li>Kajita 2003</li>
      <li>Morisawa 2007</li>
    </ul>

  </description>
  <author>Thomas Moulard</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/jrl_walkgen_bridge</url>

  <export>
    <cpp cflags="`pkg-config --cflags eigen3` `rosboost-cfg --cflags` -I${prefix}/include" lflags=""/>
  </export>

  <depend package="common_rosdeps"/>
  <rosdep name="boost"/>
  <rosdep name="eigen"/>
  <rosdep name="jrl-mal"/>
  <rosdep name="jrl-walkgen"/>

  <depend package="bullet"/>

  <depend package="walk_interfaces"/>
  <depend package="walk_msgs"/>

  <depend package="jrl_dynamics_urdf"/>

  <depend package="visualization_msgs"/>

  <depend package="angles"/>

</package><package name="rqt_dep" path="" repo="rqt" repo_host="https://kforge.ros.org/visualization/rqt">
  <description brief="Plugin for visualizing the ROS dependency graph">
    rqt_dep provides a GUI plugin for visualizing the ROS dependency graph.
  </description>
  <author>Thibault Kruse</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rqt_dep</url>

  <depend package="rqt_gui"/>
  <depend package="qt_dotgraph"/>
  <depend package="rqt_graph"/>
  <depend package="qt_gui_py_common"/>
  <rosdep name="python-rospkg"/>

  <export>
    <rqt_gui plugin="${prefix}/plugin.xml"/>
  </export>
</package><package name="gpsd_client" path="" repo="gps_umd" repo_host="http://ram.umd.edu/git/ros/gps_umd.git">
  <description brief="gpsd_client">

     gpsd_client connects to a GPSd server and broadcasts
     GPS fixes using the NavSatFix message

  </description>
  <author>Rob Thomson, Ken Tossell</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/gpsd_client</url>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="gps_common"/>
  <rosdep name="libgps"/>
</package><package name="bosch_worlds" path="/trunk/stacks/bosch_common/bosch_worlds" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="bosch-ros-pkg worlds">
    Worlds used in simulation for demoing bosch-ros-pkg packages.
  </description>
  <author>Charles DuHadway (Maintained by Benjamin Pitzer)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
</package><package name="webots_controllers" path="/trunk/kaist_webots/webots_controllers" repo="kaist_webots" repo_host="https://kaist-ros-pkg.googlecode.com/svn">
  <description brief="Webots controllers for ROS">
The idea behind this package was to create a controller manager for Webots, similar to what is available for Gazebo. This would enable users to
easily test different position/velocity/force controllers with their simulation.

The launch file loads the 'webots_run' node which opens the specified world file in the Webots simulator, which in turn executes the controller binary.

At present, only a stand-alone P-controller has been implemented: joint_position_controller. The controller configuration is defined in a yaml file and this allows users to quickly implement a controller to test their new model. Position commands are received on a ROS topic for each joint, and position and velocity feedback is published on the /joint_states topic.

Tested with Webots 6.4.4, ROS Fuerte.
  </description>
  <author>David Butterworth</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/webots_controllers</url>
  <depend package="std_msgs"/>
  <depend package="roscpp"/>
  <depend package="webots_run"/>

</package><package name="test_rosjava_jni" path="" repo="client_rosjava_jni" repo_host="http://code.in.tum.de/git/client-rosjava.git">
  <description brief="test_rosjava_jni">Tests for rosjava</description>
  <author>Jason Wolfe (jawolfe@willowgarage.com)</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <depend package="roslib"/>
  <depend package="rosjava_jni"/>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <url>http://pr.willowgarage.com/wiki/test_rosjava_jni</url>
</package><package name="indomptable_model" path="" repo="smart-robotics-ros-pkg" repo_host="https://github.com/JBot/smart-robotics-ros-pkg">
  <description brief="indomptable_model">

     indomptable_model

  </description>
  <author>jbot</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/indomptable_model</url>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="tf"/>
  <depend package="rviz"/>
  <depend package="robot_state_publisher"/>
  <depend package="joint_state_publisher"/>

</package><package name="armrobot" path="/trunk/armrobot" repo="cmu-ros-pkg" repo_host="https://cmu-ros-pkg.svn.sourceforge.net/svnroot/cmu-ros-pkg">
  <description brief="Controlling the door">
  </description>
  <author>Takateru Urakubo, Tomoaki Mashimo, Rosen Diankov</author>
  <license>Apache License 2.0</license>
  <depend package="roscpp"/>
  <depend package="openrave_robot_control"/>
  <depend package="maxondrivers"/>
</package><package name="rosserial_adk_demo_msgs" path="" repo="rosserial_android" repo_host="https://kforge.ros.org/rosserial/android">
  <description brief="rosserial_adk_demo_msgs">

     rosserial_adk_demo_msgs

  </description>
  <author>Adam Stambler</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosserial_adk_demo_msgs</url>

</package><package name="control_msgs" path="" repo="control" repo_host="https://bitbucket.org/sglaser/control">
  <description brief="control_msgs">

    control_msgs contains base messages and actions useful for
    controlling robots.  It provides representations for controller
    setpoints and joint and cartesian trajectories.

  </description>
  <author>Stuart Glaser</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/control_msgs</url>

  <depend package="actionlib_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="trajectory_msgs"/>

  <!-- This package doesn't actually depend on rospy.  The dependency is
       here to cause roscreate-stack to add a stack-level dependency on
       ros_comm, which is needed for the cmake logic to do message
       generation.  Eventually, this message-only stack should just be
       converted to catkin. -->
  <depend package="rospy"/>

  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp -I${prefix}/srv/cpp"/>
  </export>

</package><package name="rqt_py_common" path="" repo="rqt" repo_host="https://kforge.ros.org/visualization/rqt">
  <description brief="Common functionality for plugins">
    rqt_py_common provides common functionality for GUI plugins written in Python.
  </description>
  <author>Dorian Scholz</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rqt_py_common</url>

  <depend package="qt_gui"/>
  <depend package="rospy"/>
  <depend package="rostopic"/>
</package><package name="videre_stoc_description" path="/trunk/arrg/ua_robots/videre_stoc_description" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="URDF description of 9cm Videre STOC Camera">

     videre_stoc_description

    </description>
    <author>Daniel Hewlett</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/videre_stoc_description</url>

    <depend package="pr2_description"/>

</package><package name="pcl16" path="" repo="perception_pcl_fuerte_unstable" repo_host="https://bitbucket.org/macmason/perception_pcl_fuerte_unstable">
  <description brief="PCL (Point Cloud Library)">

<p>
  <b>PCL</b> - <b>P</b>oint <b>C</b>loud <b>L</b>ibrary: a comprehensive open
  source library for <b>n-D Point Clouds</b> and <b>3D geometry processing</b>.
  The library contains numerous state-of-the art algorithms for: filtering,
  feature estimation, surface reconstruction, registration, model fitting and
  segmentation, etc.  
</p>

  </description>

  <author>See http://pcl.ros.org/authors for the complete list of authors.</author>
  <license>BSD</license>
  <url>http://pointclouds.org</url>
  <review notes="" status="3rdparty"/>

  <!-- Message type dependencies -->
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>

  <!-- Extra libraries -->
  <depend package="flann"/>
  <depend package="common_rosdeps"/>

  <!--rosdep name="libtbb" /-->
  <rosdep name="libqhull"/>
  <rosdep name="libvtk"/>
  <rosdep name="cmake"/>
  <rosdep name="boost"/>
  
  <export>
     <cpp cflags="-I${prefix}/include/pcl-1.6/" lflags="-L${prefix}/lib -lpcl16pcl_common -lpcl16pcl_features -lpcl16pcl_filters -lpcl16pcl_geometry -lpcl16pcl_io -lpcl16pcl_io_ply -lpcl16pcl_kdtree -lpcl16pcl_keypoints -lpcl16pcl_octree -lpcl16pcl_registration -lpcl16pcl_sample_consensus -lpcl16pcl_search -lpcl16pcl_segmentation -lpcl16pcl_surface -lpcl16pcl_tracking"/>
    <rosdoc external="http://docs.pointclouds.org/"/>
  </export>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
  <platform os="ubuntu" version="10.10"/>
  <platform os="ubuntu" version="12.04"/>
</package><package name="shared_serial" path="/trunk/shared_serial" repo="dri-ros-pkg" repo_host="https://svn.3me.tudelft.nl/dri-ros-pkg">
  <description brief="shared_serial">

    Shared serial port with locking functionality

  </description>
  <author>Wouter Caarls</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/shared_serial</url>
  <depend package="roscpp"/>
  
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lshared_serial"/>
  </export>

</package><package name="sr_external_dependencies" path="" repo="shadow_robot_ethercat" repo_host="lp:sr-ros-interface-ethercat">
  <description brief="sr_external_dependencies">

     sr_external_dependencies package is a &quot;dummy&quot; package used to synchronize the includes for the protocol communication between the host and the PIC for Shadow's EtherCAT hardware. It contains a script that automatically downloads the latest h file from our pic32 svn.

  </description>
  <author>Ugo Cupcic/ ugo@shadowrobot.com, software@shadowrobot.com</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sr_external_dependencies</url>

  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>
</package><package name="pr2_run_stop_auto_restart" path="" repo="pr2_robot" repo_host="https://kforge.ros.org/pr2robot/hg">
  <description brief="pr2_run_stop_auto_restart">
   This package provides a node that monitors the state of the run stops of the pr2_robot. When the state of the
   run stop changes from off to on, this node will automatically enable the power to the motors, and reset
   the motors. This allows you to use the run stop as a 'pause' button. By using the run stop as a tool to
   power up the robot, the run stop is also in reach of the user once the robot starts moving.
  </description>
  <author>Wim Meeussen</author>
  <license>BSD</license>
  <review notes="" status="Doc Reviewed"/>
  <url>http://ros.org/wiki/pr2_run_stop_auto_restart</url>
  <depend package="pr2_msgs"/>
  <depend package="pr2_power_board"/>
  <depend package="std_srvs"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="openni_camera" path="" repo="openni_camera" repo_host="https://kforge.ros.org/openni/openni_camera">
  <description brief="An OpenNI camera ROS driver">

    A ROS driver for OpenNI depth (+ RGB) cameras. These include:
    <ul>
      <li> Microsoft Kinect </li>
      <li> PrimeSense PSDK </li>
      <li> ASUS Xtion Pro and Pro Live </li>
    </ul>

    The driver publishes raw depth, RGB, and IR image streams.

  </description>

  <author>Patrick Mihelich, Suat Gedikli, Radu Bogdan Rusu</author>

  <license>BSD</license>

  <url>http://ros.org/wiki/openni_camera</url>

  <review notes="beta" status="experimental"/>

  <depend package="camera_info_manager"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="image_transport"/>
  <depend package="nodelet"/>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>

  <rosdep name="libusb-1.0-dev"/>
  <rosdep name="openni-dev"/>
  <rosdep name="ps-engine"/>

  <export>
    <cpp cflags="-I${prefix}/include -I/usr/include/openni" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lopenni_nodelet -lopenni_driver"/>
    <nodelet plugin="${prefix}/openni_nodelets.xml"/>
  </export>

  <platform os="ubuntu" version="10.04"/>
  <platform os="ubuntu" version="10.10"/>
</package><package name="reactive_grasping_pr2" path="/trunk/reactive_grasping/reactive_grasping_pr2" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="reactive_grasping_pr2">
	reactive_grasping_pr2
  </description>
  <author>Jost Tobias Springenberg</author>
  <author>Jan  Wuelfing</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wikii/reactive_grasping_pr2</url>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="message_filters"/>
  <depend package="actionlib"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="pr2_arm_navigation_actions"/>
  <depend package="motld"/>
  <depend package="mpc"/>

</package><package name="pr2_pick_and_place_service" path="/trunk/stacks/remote_lab/pr2_pick_and_place_service" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="pr2_pick_and_place_service">
	Provides much of the functionality of the pick_and_place_demo through a set of services.

  </description>
  <author>Sarah Osentoski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_pick_and_place_service</url>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="actionlib"/>
  <depend package="geometry_msgs"/>
  <depend package="std_msgs"/>
  <depend package="trajectory_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="tf"/>
  <depend package="actionlib_msgs"/>
  <depend package="pr2_pick_and_place_demos"/>
  <depend package="object_manipulator"/>
  <depend package="pr2_tabletop_manipulation_launch"/>
</package><package name="pr2_gripper_sensor_msgs" path="/stacks/pr2_object_manipulation/branches/0.6-branch/manipulation/pr2_gripper_sensor_msgs" repo="pr2_object_manipulation" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_gripper_sensor_msgs">

  The pr2_gripper_sensor_msgs package contains various actions and messages that are used in the pr2_gripper_sensor* packages. The structure of the API used by pr2_gripper_sensor_action, and pr2_gripper_sensor_controller packages is as follows: 

Users will send a goal to an Action in the message format of PR2Gripper*Command (where * replaces the name of the particular Action from pr2_gripper_sensor_action). Feedback and Result information for the action is then returned in the format of PR2Gripper*Data.

  </description>
  <author>Joe Romano</author>
  <license>BSD</license>
  <review status=""/>
  <url/>
  <depend package="roscpp"/>
  <depend package="actionlib_msgs"/>
  <depend package="actionlib"/>

  <export>
    <cpp cflags="-I${prefix}/msg/cpp"/>
  </export>

</package><package name="ic2020_toro" path="/trunk/ic2020_toro" repo="ic2020" repo_host="http://ic2020.googlecode.com/svn">
  <description brief="ic2020_toro">

     ic2020_toro

  </description>
  <author>Sean Anderson</author>
  <license>CC BY-NC-SA 2.5</license>
  <review notes="" status="unreviewed"/>

  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="std_msgs"/>
  <depend package="ic2020_vodom"/>
  <depend package="ic2020_render"/>
  
  <depend package="geometry_msgs"/>

</package><package name="hrl_pr2_kinematics_tutorials" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="hrl_pr2_kinematics_tutorials">
    Looking at the different PR2 arm tutorials and trying to come up
    with equivalent python versions.
  </description>
  <author>Advait Jain (Healthcare Robotics Lab)</author>
  <license>New BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hrl_pr2_kinematics_tutorials</url>
  <depend package="kinematics_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="pr2_arm_kinematics"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="rospy"/>
  <depend package="actionlib"/>

  <depend package="tf"/>
  <depend package="hrl_lib"/>

</package><package name="cram_pr2_knowledge" path="" repo="cram_physics" repo_host="https://github.com/moesenle/cram_physics">
  <description brief="cram_pr2_knowledge">

     cram_pr2_knowledge

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cram_pr2_knowledge</url>
  <depend package="cram_reasoning"/>
  <depend package="cram_manipulation_knowledge"/>
  <depend package="bullet_reasoning"/>
  <depend package="cram_designators"/>
</package><package name="arm_workspace_evaluator" path="/trunk/industrial_core/arm_workspace_evaluator" repo="swri-ros-pkg" repo_host="http://swri-ros-pkg.googlecode.com/svn">
  <description brief="arm_workspace_evaluator">

     Package for evaluating the workspace of an arm(manipulator).

  </description>
  <author>Shaun Edwards</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/arm_workspace_evaluator</url>
  
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="geometry_msgs"/>
  <depend package="arm_kinematics_constraint_aware"/>
  <depend package="kinematics_msgs"/>
  <depend package="arm_navigation_msgs"/>

</package><package name="tf_odometry_relay" path="" repo="parsec" repo_host="https://code.google.com/p/parsec">
  <description brief="tf_odometry_relay">

     tf_odometry_relay

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>Apache 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/tf_odometry_relay</url>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="nav_msgs"/>
  <depend package="geometry_msgs"/>

</package><package name="pr2eus_armnavigation" path="/trunk/pr2eus_armnavigation" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="pr2eus_armnavigation">

     pr2eus_armnavigation

  </description>
  <author>Yohei Kakiuchi</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2eus_armnavigation</url>

  <depend package="pr2eus"/>
  <depend package="ompl_ros_interface"/>

</package><package name="rcommander_plain" path="" repo="rcommander_core" repo_host="https://kforge.ros.org/rcommander/rcommander_core">
  <description brief="rcommander_plain">

      Package that launches a minimal version of RCommander and illustrates how to adapt it to different robots.

  </description>
  <author>haidai</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rcommander_plain</url>
  <depend package="rospy"/>
  <depend package="rcommander"/>
  <export>
      <rcommander plugin="rcommander_plain.sleep_tool" robot="myrobot" tab="My Robot Actions"/>
      <rcommander plugin="rcommander_plain.input_tool" robot="myrobot" tab="My Robot Actions"/>
      <rcommander plugin="rcommander_plain.output_tool" robot="myrobot" tab="My Robot Actions"/>
  </export>
</package><package name="charlie_controllers" path="/trunk/arrg/ua_controllers/charlie_controllers" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="charlie_controllers">
         charlie_controllers
    </description>

    <author>Arizona Robotics Research Group</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/charlie_controllers</url>

    <depend package="rospy"/>
    <depend package="rosnode"/>
    <depend package="std_msgs"/>
    <depend package="dynamixel_controllers"/>
</package><package name="uos_gazebo_worlds" path="" repo="uos_tools" repo_host="http://kos.informatik.uni-osnabrueck.de/uos_tools.git">
  <description brief="Gazebo world and model files for UOS.">

     Gazebo world and model files for UOS.

  </description>
  <author>Martin Günther</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/uos_gazebo_worlds</url>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
  <platform os="ubuntu" version="10.10"/>
  <platform os="ubuntu" version="11.04"/>

  <depend package="gazebo"/>

  <export>
    <gazebo gazebo_media_path="${prefix}"/>
  </export>

</package><package name="knowrob_objects" path="/tags/latest/knowrob_objects" repo="knowrob" repo_host="http://code.in.tum.de/pubsvn/knowrob">
  <description brief="knowrob_objects">

     knowrob_objects

  </description>
  <author>Moritz Tenorth</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/knowrob_objects</url>
  <depend package="knowrob_common"/>
  <depend package="tf_prolog"/>
</package><package name="sap_pkg" path="/stacks/auction_methods_stack/trunk/sap_pkg" repo="auction_methods_stack" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="sap_pkg">

     sap_pkg

  </description>
  <author>Joao Manuel Leitao Quintas</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sap_pkg</url>

  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="auction_msgs"/>
  <depend package="auction_srvs"/>

</package><package name="articulation_models" path="/trunk/articulation/articulation_models" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="Estimates kinematic models for articulated objects like doors and drawers. ">

<p>
This package contains the core library for kinematic model fitting for articulated objects. Examples of articulated objects are gangway or cabinet doors, door handles, and drawers. 
It provides both a C++ library for model fitting and selection, and nodes that make the functions of this library available as ROS services to other nodes.
</p>

  </description>
  <author>Juergen Sturm</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/articulation_models</url>

  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="tf"/>
  
  <depend package="gaussian_process"/>
  <depend package="articulation_msgs"/>
  <depend package="icp"/>

  <depend package="bullet"/>
  <rosdep name="eigen"/>
  <rosdep name="libgsl"/>
  <rosdep name="libatlas"/>
  
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp -I${prefix}/srv/cpp" lflags="-L${prefix}/lib -larticulation_models -lgsl -lgslcblas -Wl,-rpath,${prefix}/lib"/>
  </export>

</package><package name="uniserial" path="/trunk/stacks/bosch_drivers/uniserial" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="uniserial">

     This class provides Unix machines with access to serial devices 
     through serial ports. Essentially, this class is a wrapper of the 
     Unix-specific function calls to (1) establish a connection,
     (1)read a single byte, and (1)write a single byte. The default 
     constructer's parameters are set to 8-bit packets, No parity, and
     1 stop bit; however, custom parameters can be set using the 
     initialize(args..) method rather than the initialize() method.  

  </description>
  <author>Joshua Vasquez and Philip Roan. Maintained by Philip Roan</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/uniserial</url>
  <depend package="roscpp"/>

  <!-- Export the header files so library can be used by other packages. -->
  <export>
     <cpp cflags="-I${prefix}/include/uniserial" lflags="-L${prefix}/lib -luniserial"/>
  </export>
</package><package name="pr2_tuck_arms_action" path="/stacks/pr2_common_actions/trunk/pr2_tuck_arms_action" repo="pr2_common_actions" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_tuck_arms_action">
     pr2_tuck_arms_action
  </description>
  <author>Wim Meeussen</author>
  <license>BSD</license>
  <review notes="" status="API cleared"/>
  <url>http://ros.org/wiki/pr2_tuck_arms_action</url>
  <depend package="actionlib"/>
  <depend package="rospy"/>
  <depend package="actionlib_msgs"/>  
  <depend package="trajectory_msgs"/>  
  <depend package="pr2_common_action_msgs"/>
  <depend package="pr2_controllers_msgs"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="localization_cu" path="/trunk/localization_cu" repo="prairiedog" repo_host="http://prairiedog.googlecode.com/svn">
  <description>A Localization System for a 2D Environment</description>
  <author>Michael Otte</author>
  <license>GNU GPL V3</license>
  <review notes="" status="unreviewed"/>
  <url>http://correll.cs.colorado.edu/pmwiki/index.php/Main/LocalizationSystemBase</url>
  <depend package="roscpp"/>
  <depend package="nav_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="tf"/>

  <export>
    <cpp cflags="-I${prefix}/srv/cpp"/>
  </export>
</package><package name="pen_gripper" path="/trunk/portrait_bot/pen_gripper" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
	<description brief="pen_gripper">
 
	This package gives a pr2 robot the ability to grip a pen off a surface.

	</description>
	<author>Richard Schneider</author>
	<license>BSD</license>
	<review notes="" status="unreviewed"/>
	<url>http://ros.org/wiki/pen_gripper</url>

	<depend package="roscpp"/>
	<depend package="opencv2"/>
	<depend package="roslib"/>
	<depend package="std_msgs"/>
	<depend package="sensor_msgs"/>
	<depend package="pcl"/>
	<depend package="ee_cart_imped_action"/>
	<depend package="ee_cart_imped_control"/>
	<depend package="actionlib"/>
	<depend package="pr2_controllers_msgs"/>
	<depend package="visualization_msgs"/>
	<depend package="dynamic_reconfigure"/>
	<depend package="portrait_robot_msgs"/>
	<depend package="tf"/>

</package><package name="rosjs_assisted_teleoperation" path="/trunk/stacks/remote_lab/rosjs_assisted_teleoperation" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="rosjs_assisted_teleoperation">

     rosjs_assisted_teleoperation

  </description>
  <author>Sarah Osentoski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosjs_assisted_teleoperation</url>
  <depend package="rosbridge_server"/>
  <depend package="rosapi"/>
  <depend package="rosjs_common"/>
  <depend package="rosjs_visualization"/>
  <depend package="rosjs_remotelabwidgets"/>
  <depend package="visualization_msgs"/>
</package><package name="pr2_tilt_laser_interface" path="/stacks/pr2_common_actions/trunk/pr2_tilt_laser_interface" repo="pr2_common_actions" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="Tools for using th PR2's tilting laser">
    Provides a set of tools/actions for manipulating the pr2's tilting
    laser. Simplifies previously complex tasks, such as fetching
    a single sweep, given a set of desired parameters for both the laser
    driver and tilting platform.
  </description>
  <author>Radu Rusu, Wim Meeussen, Vijay Pradeep</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_tilt_laser</url>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="pr2_msgs"/>

  <depend package="laser_geometry"/>
  <depend package="pcl_ros"/>
  <depend package="common_rosdeps"/>
  <rosdep name="eigen"/>
 <export>
   <cpp cflags="-I${prefix}/msg_gen/cpp/include"/>
 </export>

</package><package name="ui_preempter" path="" repo="ros_applications" repo_host="https://kforge.ros.org/rosapps/hg">
  <description brief="ui_preempter">

     ui_preempter

  </description>
  <author>Eitan Marder-Eppstein</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ui_preempter</url>
  <depend package="actionlib"/>
  <depend package="rospy"/>
  <depend package="roslib"/>
  <depend package="std_msgs"/>
  <depend package="application_msgs"/>

</package><package name="bumblebee1394" path="/trunk/drivers/bumblebee1394" repo="ubc-ros-pkg" repo_host="https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg">
    <description>
        This package contains a ROS node for accessing the PtGrey Bumblebee cameras.
    </description>
  <author>Marius Muja</author>
  <url>http://www.ros.org/wiki/dc1394_camera</url>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <depend package="rostest"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="diagnostic_updater"/>
  <depend package="opencv2"/>
  <depend package="driver_base"/>
  <depend package="libdc1394v2"/>
  <depend package="image_transport"/>
  <depend package="self_test"/>
  <depend package="timestamp_tools"/>
  <depend package="camera_calibration_parsers"/>
</package><package name="roboard_sensors" path="/trunk/veltrop-ros-pkg/roboard/roboard_sensors" repo="veltrop-ros-pkg" repo_host="https://veltrop-ros-pkg.svn.sourceforge.net/svnroot/veltrop-ros-pkg">
  <description brief="roboard_sensors">

     Polls the i2c and ad of the Roboard for raw sensor data.
     Raw data should be processed into meaningful data in
     your own stack, in an other node.

  </description>
  <author>Taylor Veltrop</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://taylor.veltrop.com/robotics/khrhumanoidv2.php?topic=veltrop-ros-pkg</url>

  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="roboard_roboio"/>
  
  <!-- graveyard -->
  <!-- <depend package="yaml_cpp"/> -->
  
</package><package name="command_generator_PR2" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="command_generator">

     command_generator

  </description>
  <author>Akansel Cosgun</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/command_generator</url>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>

</package><package name="hrl_behavior_manager" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="hrl_behavior_manager">

     A global locking mechanism for managing robot resources.

  </description>
  <author>Kelsey Hawkins</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hrl_behavior_manager</url>
  <depend package="rospy"/>

</package><package name="rtt_typelib" path="" repo="orocos_toolchain" repo_host="https://git.gitorious.org/orocos-toolchain/rtt_typelib.git">
    <description brief="Orocos/RTT typelib bindings">
    </description>
    <author>Sylvain Joyeux/sylvain.joyeux@m4x.org</author>
    <copyright>
        DFKI/robotik@dfki.de
        Sylvain Joyeux/sylvain.joyeux@m4x.org
    </copyright>
    <license>GPL v2 or later</license>
    <url>http://doudou.github.com/orogen</url>

    <depend package="rtt"/>
    <depend package="typelib"/>
</package><package name="elektron_sensors" path="" repo="elektron_robot" repo_host="https://github.com/RCPRG-ros-pkg/elektron_robot">
  <description brief="elektron_sensors">

     elektron_sensors

  </description>
  <author>Maciej Stefanczyk</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/elektron_sensors</url>
  
  <depend package="std_srvs"/>
  <depend package="rospy"/>
  <depend package="sensor_msgs"/>
  <depend package="std_msgs"/>
  <depend package="kdl"/>
  <depend package="LMS1xx"/>
  

</package><package name="geometric_verification" path="" repo="cyphy_vis_slam" repo_host="https://cyphy-vis-slam.googlecode.com/hg/cyphy_vis_slam">
  <description brief="geometric_verification">

     geometric_verification

  </description>
  <author>Liz Murphy (liz.murphy@qut.edu.au)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/geometric_verification</url>
  <depend package="roscpp"/>
  <depend package="cv_bridge"/>
  <depend package="sensor_msgs"/>
  <depend package="stereo_msgs"/>
  <depend package="image_transport"/>
  <depend package="image_geometry"/>
  <depend package="message_filters"/>
  <depend package="openfabmap2"/>
  <depend package="image_cache"/>
  <depend package="opencv2"/>
  <depend package="viso2_ros"/>
  <depend package="tf"/>
  <depend package="geometry_msgs"/>
  <depend package="cyphy_vslam_msgs"/>

</package><package name="interactivespaces-service-scheduler" path="" repo="interactive-spaces" repo_host="https://code.google.com/p/interactive-spaces">
  <description brief="interactivespaces.service.scheduler">
    Scheduler service for Interactive Spaces.
  </description>
  <author>Keith Hughes/khughes@google.com</author>
  <license>Apache License 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://code.google.com/p/interactive-spaces/</url>
  
  <depend package="interactivespaces"/>

  <rosdep name="java"/>
</package><package name="task_signal_processor" path="" repo="usc-clmc-ros-pkg" repo_host="https://github.com/usc-clmc/usc-clmc-ros-pkg">
  <description brief="task_signal_processor">

     task_signal_processor

  </description>
  <author>Peter Pastor</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/task_signal_processor</url>

  <depend package="roscpp"/>
  <depend package="visualization_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="usc_utilities"/>

  <depend package="task_recorder2_msgs"/>
  <depend package="task_recorder2_utilities"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -ltask_signal_processor"/>
  </export>

</package><package name="ua_audio_capture" path="/trunk/arrg/ua_experimental/ua_audio_capture" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="a simple audio capture node which streams raw audio">
        This package grabs a live audio stream from PortAudio and ships it across the
        ROS botnet. The program grabs the &quot;default&quot; audio stream. I can't speak for
        other distros, but on Ubuntu the default stream is settable via the GNOME
        &quot;System-&gt;Preferences-&gt;Sound&quot; box. I set the &quot;Sound Capture&quot; field to &quot;ALSA&quot; and
        use &quot;alsamixer&quot; on the command line to poke around until I get the microphone
        jack working. Each motherboard seems to be a little different in how the
        various jacks come up in ALSA.

        In XFCE (xubuntu), I couldn't find it in the GUI, but either right-click the
        speaker icon in the taskbar, or type &quot;gnome-volume-control&quot; in the console. 
        This will bring up a handy window which lets you select the input device and
        set the volume.

        I assume there is a way to do this all on headless boxen, but I haven't tried.
        If someone is sufficiently motivated to figure it out, let me know.
    </description>

    <author>Morgan Quigley</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>

    <depend package="roscpp"/>
    <depend package="rospy"/>
    <depend package="ua_audio_msgs"/>
    <depend package="std_srvs"/>
    <depend package="scikits"/>
    <depend package="pybrain"/>
    <depend package="sklearn"/>

    <rosdep name="portaudio"/>
    <rosdep name="libsndfile"/>
</package><package name="wubble_navigation_slam" path="/trunk/arrg/wubble_navigation/wubble_navigation_slam" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="XML files for running SLAM with the move_base node on a Wubble robot.">
        This package holds launch files for running the <a href="http://www.ros.org/wiki/move_base">move_base</a> node in conjunction with [[gmapping | SLAM]] on a Wubble robot.
    </description>
    <author>Antons Rebguns</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/wubble_navigation_slam</url>
    
    <depend package="gmapping"/>
    <depend package="move_base"/>
    <depend package="wubble_navigation_config"/>
</package><package name="pr2_acceleration_record" path="/penn_lightweight_teleop/trunk/pr2_acceleration_record" repo="penn_lightweight_teleop" repo_host="https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs">
  <description brief="pr2_acceleration_record">

     pr2_acceleration_record

  </description>
  <author>Will McMahan</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_noise_model</url>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="pr2_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="pr2_gripper_and_wrist_roll_sensor_controller"/>

 
</package><package name="openmesh" path="/trunk/stacks/bosch_3rdparty/openmesh" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="A ROS wrapper for openmesh">
  </description>
  <author>Benjamin Pitzer</author>
  <license>LGPLv3</license>
  <review notes="" status=""/>
  <export>
    <cpp cflags="-I${prefix}/openmesh/include" lflags="-L${prefix}/openmesh/lib/OpenMesh -lOpenMeshCore -lOpenMeshTools"/>
  </export>
</package><package name="roboptim-core-plugin-cminpack" path="" repo="stacks/roboptim" repo_host="git://github.com/laas/roboptim">
  <description brief="RobOptim core CMinPack plug-in">

    Roboptim Core CMinPack plug-in can be used to solve least-squares
    problem.

  </description>
  <author>See package AUTHORS file.</author>
  <license>LGPL</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/roboptim-core</url>

  <export>
    <rosdoc external="http://laas.github.com/roboptim-core-cminpack-plugin/doxygen/HEAD/index.html"/>
  </export>
  <rosdep name="boost"/>
  <rosdep name="cminpack"/>

  <versioncontrol type="git" url="git://github.com/laas/roboptim-core-cminpack-plugin.git"/>
</package><package name="pr2_haptic_event_detector" path="/haptic_event_detector/trunk/pr2_haptic_event_detector" repo="haptic_event_detector" repo_host="https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs">
  <description brief="pr2_haptic_event_detector">

   pr2_haptic_event_detector discription

  </description>
  <author>Joe Romano</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_haptic_event_detector</url>
  <depend package="pr2_controller_interface"/>
  <depend package="pr2_mechanism_model"/>
  <depend package="realtime_tools"/>
  <depend package="pluginlib"/>
  <depend package="roscpp"/>
  <depend package="rosrt"/>
  <depend package="roslib"/>
  <depend package="std_msgs"/>
  <depend package="std_srvs"/>
  <depend package="haptic_event_detector_msgs"/>

  <export>
      <cpp cflags="-I${prefix}/msg/cpp"/>
      <pr2_controller_interface plugin="${prefix}/controller_plugins.xml"/>
  </export>  

</package><package name="xv_11_laser_driver" path="" repo="cwru-ros-pkg" repo_host="http://github.com/cwru-robotics/cwru-ros-pkg">
  <description brief="xv_11_laser_driver">

     Neato XV-11 Laser Driver. This driver works with the laser when it is removed from the XV-11 Robot as opposed to reading scans from the Neato's USB port.

  </description>
  <author>Eric Perko, Chad Rockey</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/xv_11_laser_driver</url>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>

  <rosdep name="boost"/>

</package><package name="wm_acceleration_feedback" path="/penn_lightweight_teleop/trunk/wm_acceleration_feedback" repo="penn_lightweight_teleop" repo_host="https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs">
  <description brief="wm_acceleration_feedback">

   wm_acceleration_feedback

  </description>
  <author>Will McMahan</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/wm_acceleration_feedback</url>
 
  <depend package="sensoray626"/>
  <depend package="pr2_gripper_sensor_msgs"/>
  <depend package="pr2_msgs"/>
  <depend package="wiimote"/>
  <depend package="joy"/>
  
  <rosdep name="octave3.2"/>
  <rosdep name="octave3.2-dbg"/>
  <rosdep name="octave3.2-headers"/>
  <platform os="ubuntu" version="10.04"/>
  <platform os="ubuntu" version="10.10"/>

  <export>
    <cpp cflags="-I${prefix}/src -O3" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lwm_acceleration_feedback"/>
  </export>

</package><package name="blackboard_demo" path="/trunk/arrg/ua_experimental/blackboard_demo" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="Demo application of GBBopen and Wubble Robot">

     blackboard_demo

    </description>
    <author>Daniel Hewlett</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/blackboard_demo</url>

    <depend package="roslisp"/>

    <depend package="gbbopen"/>

    <depend package="gazebo_plugins"/>
    <depend package="wubble_actions"/>
</package><package name="articulation_tutorials" path="/trunk/articulation/articulation_tutorials" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="articulation_tutorials">

     This package contains various tutorials on how to use, learn and evaluate articulation models. 

  </description>
  <author>Juergen Sturm</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/articulation_tutorials</url>
  <depend package="articulation_models"/>
  <!-- does not work in fuerte
  <depend package="articulation_rviz_plugin"/>
  -->
  <depend package="articulation_structure"/>
  <rosdep name="eigen"/>
  <depend package="checkerboard_detector2"/>
  <depend package="uvc_cam2"/>
  <depend package="image_proc"/>
  <depend package="compressed_image_transport"/>
</package><package name="hrl_pr2_door_opening" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="hrl_pr2_door_opening">
     Door opening on the PR2.
  </description>
  <author>Advait Jain. Advisor: Prof. Charlie Kemp. Healthcare Robotics Lab, Georgia Tech</author>
  <license>New BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hrl_pr2_door_opening</url>
  <depend package="rospy"/>
  <depend package="hrl_lib"/>
  <depend package="geometry_msgs"/>

</package><package name="motion_planning_rviz_plugin" path="" repo="arm_navigation" repo_host="https://kforge.ros.org/armnavigation/armnavigation">
  <description brief="motion_planning_rviz_plugin">

   The motion_planning_rviz_plugin enables the display of joint paths for the robot in the rviz visualizer. 

  </description>
  <author>Josh Faust</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/motion_planning_rviz_plugin</url>
  <depend package="rviz"/>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="planning_models"/>
  <depend package="planning_environment"/>
  <depend package="arm_navigation_msgs"/>

  <export>
    <rviz plugin="${prefix}/plugin_description.xml"/>
  </export>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="dashel" path="" repo="ethzasl_aseba" repo_host="https://github.com/ethz-asl/ros-aseba">
  <description brief="dashel">

     Fetches dashel through git submodule and makes it available to ROS

  </description>
  <author>Stéphane Magnenat</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/dashel</url>
  <rosdep name="doxygen"/>
  <rosdep name="libudev-dev"/>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -ldashel"/>
  </export>
</package><package name="eros_nodelet_latency" path="/trunk/tests/eros_nodelet_latency" repo="eros" repo_host="https://code.ros.org/svn/eros">
  <description brief="Test utility for benchmarking nodelet latencies">

     Generates statistical data providing a benchmark for nodelet latencies, both internally
     (via the boost shared pointer mechanism) and externally (via copies).

  </description>
  <author>Daniel Stonier</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/eros_nodelet_latency</url>
  <depend package="nodelet"/>
  <depend package="std_msgs"/>
  <export>
    <nodelet plugin="${prefix}/src/latency_nodelets.xml"/>
  </export>
</package><package name="image_proc" path="/stacks/image_pipeline/branches/image_pipeline-1.8/image_proc" repo="image_pipeline" repo_host="https://code.ros.org/svn/ros-pkg">
  <description>Single image rectification and color processing.</description>
  <author>Patrick Mihelich, Kurt Konolige, Jeremy Leibs</author>
  <license>BSD</license>
  <review notes="Jan 4, 2010" status="Doc reviewed"/>
  <url>http://www.ros.org/wiki/image_proc</url>

  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/cfg/cpp" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -limage_proc"/>
    <nodelet plugin="${prefix}/nodelet_plugins.xml"/>
  </export>

  <rosdep name="opencv2"/>
  <depend package="camera_calibration_parsers"/>
  <depend package="cv_bridge"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="image_geometry"/>
  <depend package="image_transport"/>
  <depend package="nodelet"/>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="parallel_quickstep" path="/stacks/physics_ode/trunk/parallel_quickstep" repo="physics_ode" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="parallel_quickstep">
    <p>
      Parallel implementation of quickstep, configurable for CUDA, OpenCL and OpenMP.
    </p>
     <p>
       The package by default is compiled with CPU quickstep.  To enable GPU capabilities, overlay this package and recompile
       with CUDA drivers installed.
     </p>
  </description>

  <author>Jared Duke</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>

  <depend package="rosbuild"/>
  <depend package="opende"/>

  <export>
    <rosbuild cmake_directory="${prefix}/CMakeModules"/>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -lparallel_quickstep"/>
  </export>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>

</package><package name="katana_tabletop_manipulation_launch" path="" repo="katana_manipulation" repo_host="http://kos.informatik.uni-osnabrueck.de/katana_manipulation.git">
  <description brief="Config package with top-level launch files for tabletop manipulation on the Katana.">

    Config package with top-level launch files for tabletop manipulation on the Katana.

  </description>
  <author>Henning Deeken</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/katana_tabletop_manipulation_launch</url>
  <depend package="roscpp"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="tf_conversions"/>
  <depend package="object_manipulation_msgs"/>
  <depend package="object_manipulator"/>
  <depend package="tabletop_object_detector"/>
  <depend package="tabletop_collision_map_processing"/>
  <depend package="household_objects_database"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="tf"/>
  <depend package="visualization_msgs"/>
  <depend package="eigen"/>
  <depend package="eigen_conversions"/>
  <depend package="sensor_msgs"/>
  <depend package="orrosplanning"/>
  <depend package="openrave"/>
  <depend package="posedetection_msgs"/>
  <depend package="motion_planning_msgs"/>
  <depend package="object_manipulation_msgs"/>
  <depend package="trajectory_msgs"/>
  <depend package="kinematics_msgs"/>
  <depend package="actionlib"/>
  <depend package="move_base_msgs"/>
  <depend package="std_msgs"/>
</package><package name="polonius_demo" path="/branches/stable/polonius/polonius_demo" repo="wu-ros-pkg" repo_host="https://wu-robotics.googlecode.com/svn">
  <description brief="Demo using Polonius">
    Demo on how to use Polonius
  </description>
  <author>David V. Lu!!</author>
  <license>BSD</license>
  <url>http://ros.org/wiki/polonius_demo</url>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="rospy"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="trajectory_msgs"/>
  <depend package="polonius_msgs"/>
</package><package name="basic_utils" path="/stacks/wu_utils/trunk/basic_utils" repo="wu-ros-pkg" repo_host="https://wu-ros-pkg.svn.sourceforge.net/svnroot/wu-ros-pkg">
  <description brief="basic_utils">

     basic_utils - A collection of general-purpose functions.

  </description>
  <author>CJ Carey</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/basic_utils</url>
  <depend package="rospy"/>
  <export>
	<cpp cflags="-I${prefix}/include"/>
  </export>
</package><package name="velodyne_driver" path="/trunk/stacks/velodyne/velodyne_driver" repo="utexas-art-ros-pkg" repo_host="http://utexas-art-ros-pkg.googlecode.com/svn">
  <description brief="ROS driver for Velodyne 3D LIDARs">

     ROS device driver for Velodyne HDL-64E, HDL-64E S2, and HDL-32
     LIDARs.

  </description>
  <author> Jack O'Quin, Patrick Beeson, Michael Quinlan, Yaxin Liu </author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://www.ros.org/wiki/velodyne_driver</url>

  <depend package="diagnostic_updater"/>
  <depend package="nodelet"/>
  <depend package="roscpp"/>
  <depend package="rostest"/>
  <depend package="tf"/>
  <depend package="velodyne_msgs"/>

  <!-- declare build dependency on pcap library -->
  <rosdep name="libpcap"/>

  <export>
    <nodelet plugin="${prefix}/nodelet_velodyne.xml"/>
  </export>

</package><package name="ogre_tools_qt" path="" repo="visualization_experimental" repo_host="https://kforge.ros.org/visualization/vis-exp">
    <description brief="Ogre Tools">
    
    Internal package, shared code for use by the visualization stack, nav_view, and the simulation stack.  No supported/stable API is exported.
    
    </description>
    <author>Josh Faust</author>
    <license>BSD</license>
    <review notes="2009/08/04 by kwc" status="doc reviewed"/>
    <url>http://ros.org/wiki/ogre_tools</url>
    <depend package="ogre"/>
    <depend package="rosconsole"/>
    <depend package="roslib"/>
    <export> 
        <cpp cflags="-I${prefix}/src/" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -logre_tools_qt"/>
        <python path="${prefix}/lib/"/>
    </export>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="cl_tf" path="/stacks/roslisp_common/trunk/cl_tf" repo="roslisp_common" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="cl_tf">

     cl_tf

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cl_tf</url>
  <depend package="roslisp_runtime"/>
  <depend package="cl_transforms"/>
  <depend package="tf"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="ptu_control" path="/branches/stable/wu_ptu/ptu_control" repo="wu-ros-pkg" repo_host="https://wu-robotics.googlecode.com/svn">
  <description brief="ptu_control">

     Provides an actionlib interface for PTUs which listen for JointState messages (such as PTU46)

  </description>
  <author>Dan Lazewatsky</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ptu_control</url>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="std_msgs"/>
  <depend package="nav_msgs"/>
  <!-- <depend package="logitech_pantilt"/> -->
  <!-- <depend package="optic_flow"/> -->
  <depend package="tf"/>
    
  <export>
    <cpp cflags="-I${prefix}/msg/cpp -I${prefix}/srv/cpp -I${prefix}/include"/>
  </export>
</package><package name="cob_tesseract" path="" repo="cob_object_perception" repo_host="git://github.com/ipa320/cob_object_perception">
  <description brief="cob_tesseract">

     A ROS wrapper for tesseract (http://code.google.com/p/tesseract-ocr/) following the procedure from package tesseract in the ocr stack.

  </description>
  <author>Richard Bormann</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_tesseract</url>

  <depend package="cob_leptonica"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib"/>
  </export>

</package><package name="quad_joy_teleop" path="" repo="mav_tools" repo_host="https://github.com/ccny-ros-pkg/mav_tools">
  <description brief="quad_joy_teleop">

     quad_joy_teleop

  </description>
  <author>Ivan Dryanovski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/quad_joy_teleop</url>
  <depend package="roscpp"/>
  <depend package="nodelet"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="mav_msgs"/>
  <depend package="mav_srvs"/>

  <export>
    <nodelet plugin="${prefix}/quad_joy_teleop_nodelet.xml"/>
  </export>

</package><package name="sr_utilities" path="" repo="shadow_robot" repo_host="lp:sr-ros-interface">
  <description brief="sr_utilities">

     sr_utilities contains different useful header libraries (math libraries, etc...).

  </description>
  <author>Ugo Cupcic</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sr_utilities</url>
  <depend package="sensor_msgs"/>
  <depend package="sr_robot_msgs"/>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="tf"/>

  <export>
	<cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -lsr_calibration"/>
  </export>
</package><package name="hector_pose_estimation_core" path="/trunk/hector_localization/hector_pose_estimation_core" repo="hector_localization" repo_host="https://tu-darmstadt-ros-pkg.googlecode.com/svn">
  <description brief="hector_pose_estimation_core">

     hector_pose_estimation_core is the core package of the hector_localization stack. It contains the Extended Kalman Filter (EKF)
     that estimates the 6DOF pose of the robot. hector_pose_estimation can be used either as a library, as a nodelet or as a standalone node.

  </description>
  <author>Johannes Meyer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hector_pose_estimation_core</url>

  <depend package="roscpp"/>
  <depend package="bfl_eigen"/>
  <depend package="eigen"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="tf"/>

  <export>
    <rosbuild cmake_directory="${prefix}/cmake"/>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lhector_pose_estimation"/>
  </export>
</package><package name="arduino_interface" path="/trunk/stacks/bosch_drivers/arduino_interface" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="arduino_interface">

     The arduino_interface class contains details specifics to 
     interfacing sensors with software using an Arduino as
     the physical hardware interface.  
     
     Each instantiation of this class is specific to an 
     Arduino hardware device, indentified by the serial port  name.
     
     NOTE: To use this package, you must deactivate the Arduino's
     pullups on the SDA and SCL lines. By default, these pullups are
     enabled. To deactivate them, you must open the Wire library in 
     your libraries folder and comment out two lines in the twi.c 
     sketch.
     
     This class inherits the bosch_drivers_hardware_interface
     base class. In this manner, specific bosch_drivers_sensor_driver
     classes can access sensor data through the virtual functions provided by 
     the parent bosch_drivers_hardware_interface class.

     The arduino_firmware directory contains a makefile and .ino code for
     building the hex files to upload to the Arduino. After a `make', type
     `make upload' to upload to firmware to the Arduino.

  </description>
  <author>Joshua Vasquez and Philip Roan. Maintained by Philip Roan</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/arduino_interface</url>
  <depend package="roscpp"/>
  <depend package="bosch_drivers_common"/>
  <depend package="uniserial"/>

  <!-- Export the header files so library can be used by other packages. -->
  <export>
    <cpp cflags="-I${prefix}/include/arduino_interface" lflags="-L${prefix}/lib -larduino_interface"/>
  </export>
</package><package name="head_pose_estimation" path="/branches/stable/head_tracking/head_pose_estimation" repo="wu-ros-pkg" repo_host="https://wu-robotics.googlecode.com/svn">
  <description brief="head_pose_estimation">

     head_pose_estimation

  </description>
  <author>Daniel Lazewatsky</author>
  <license>Microsoft Shared Source</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/head_pose_estimation</url>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="geometry_msgs"/>
  <depend package="tf"/>
  <depend package="sensor_msgs"/>
  <depend package="cv_bridge"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="image_transport"/>
  <depend package="kdl"/>
  <depend package="angles"/>
  <depend package="message_filters"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="headmath"/>
</package><package name="robot_info" path="" repo="usc-clmc-ros-pkg" repo_host="https://github.com/usc-clmc/usc-clmc-ros-pkg">
  <description brief="robot_info">

     robot_info

  </description>
  <author>Mrinal Kalakrishnan</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/robot_info</url>

  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="bullet"/>
  <depend package="tf"/>
  <depend package="kdl"/>
  <depend package="kdl_parser"/>

  <depend package="usc_utilities"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lrobot_info"/>
  </export>

</package><package name="aaai_lfd_pick_and_place_service" path="/trunk/stacks/aaai_lfd_demo/aaai_lfd_pick_and_place_service" repo="bosch-ros-pkg-e" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg-e/code">
  <description brief="aaai_lfd_pick_and_place_service">

     aaai_lfd_pick_and_place_service

  </description>
  <author>Sarah Osentoski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/aaai_lfd_pick_and_place_service</url>
  <depend package="rospy"/>
  <depend package="geometry_msgs"/>
  <depend package="actionlib_msgs"/>
  <depend package="pr2_pick_and_place_demos"/>
  <depend package="pr2_controllers_msgs"/>
</package><package name="rfid_demos" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="rfid_demos">

    rfid_demos

  </description>
  <author>Travis Deyle</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rfid_demos</url>
  <depend package="rfid_hardware"/>
  <depend package="rfid_servoing"/>
  <depend package="rfid_behaviors"/>
  <depend package="rfid_artoolkit"/>
  <depend package="approach_table"/>
  <depend package="explore_hrl"/>
  <depend package="smach"/>
  <depend package="smach_ros"/>
  <depend package="tf"/>
  <depend package="move_base_msgs"/>
</package><package name="bmp085_driver" path="/trunk/stacks/bosch_drivers/bmp085_driver" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="bmp085_driver">

    The bmp085_driver class provides the user with sensor-specific 
    methods to access the temperature and pressure data on the bmp085
    sensor. This class addresses the sensor through a hardware
    interface using generic function calls common to all hardware
    interfaces.  In this manner, the driver is independent of the 
    hardware device acting as a passthrough.  
  
</description>
  <author>Joshua Vasquez, Philip Roan. Maintained by Philip Roan</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/bmp085</url>
  <depend package="bosch_drivers_common"/>

  <export>
    <cpp cflags="-I${prefix}/include/bmp085_driver" lflags="-L${prefix}/lib -lbmp085"/>
  </export>
  <export>
    <cpp cflags="-I${prefix}/include/bmp085_driver" lflags="-L${prefix}/lib -lbmp085_parameters"/>
  </export>

</package><package name="map_tiler" path="/stacks/pr2_web_apps/trunk/map_tiler" repo="pr2_web_apps" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="map_tiler">

     rosweb plugin to serve map tiles as jpeg

  </description>
  <author>Rob Wheeler</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/map_tiler</url>
  <depend package="rosweb"/>
  <depend package="nav_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="tf"/>
  <depend package="rospy"/>
  <export>
    <rosweb plugin="map_tiler.handler"/>
  </export>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="neo_teleop" path="" repo="neo_apps" repo_host="https://github.com/neobotix/neo_apps">
  <description brief="neo_teleop">

     neo_teleop

  </description>
  <author>mob</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/neo_teleop</url>
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  <depend package="trajectory_msgs"/>
  <depend package="sensor_msgs"/>
</package><package name="rtcus_dwa" path="/trunk/rtcus_mobile_robots/rtcus_dwa" repo="rtc-us-ros-pkg-trunk" repo_host="https://rtc-us-ros-pkg.svn.sourceforge.net/svnroot/rtc-us-ros-pkg">
  <description brief="rtcus_dwa">

     rtcus_dwa

  </description>
  <author>Pablo Iñigo Blasco</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rtcus_dwa</url>
  
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/cfg/cpp" lflags="-L${prefix}/lib"/>
  	<rtcus_navigation plugin="${prefix}/plugins.xml"/>
  </export>
  
  <depend package="roscpp"/>
  
  <depend package="rtcus_motion_models"/>
  <depend package="rtcus_navigation"/>
  <depend package="rtcus_navigation_tools"/>  
  
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="laser_geometry"/>
  
  <depend package="dynamic_reconfigure"/>
  <depend package="pcl"/>
  <depend package="cv_bridge"/>
  <depend package="pcl_ros"/>
  <depend package="cv_bridge"/>
  <depend package="opencv2"/>
  <depend package="image_transport"/>
  <depend package="visualization_msgs"/>

</package><package name="roslaunch_caller" path="/stacks/wg_hardware_test/trunk/roslaunch_caller" repo="wg_hardware_test" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="Puts roslaunch in a library for API use">
  </description>
  <author>Kevin Watts (watts@willowgarage.com), Ken Conley (kwc@willowgarage.com)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <depend package="rospy"/>
  <depend package="roslaunch"/>
  <url>http://www.ros.org/wiki/roslaunch_caller</url>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="cstf" path="" repo="cn-util-ros-pkg" repo_host="https://code.google.com/p/cn-util-ros-pkg">
  <description brief="cstf">

     cstf

  </description>
  <author>endy</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cstf</url>
  <depend package="roscs"/>
  <depend package="tf"/>
  <depend package="geometry_msgs"/>
  <depend package="roscpp"/>

</package><package name="riq_msgs" path="/stacks/riq_hand/trunk/riq_msgs" repo="riq_hand" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="riq_msgs">

     riq_msgs

  </description>
  <author>Derek King</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/riq_msgs</url>

</package><package name="starmac_tui" path="" repo="starmac-ros-pkg" repo_host="https://bitbucket.org/bouffard/starmac-ros-pkg">
  <description brief="starmac_tui">

     starmac_tui

  </description>
  <author>bouffard</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/starmac_tui</url>

  <depend package="rospy"/>
  <depend package="rosgraph_msgs"/>
  <depend package="flyer_controller"/>
  <depend package="nav_msgs"/>
  <depend package="asctec_hl_comm"/>

</package><package name="collvoid_msgs" path="" repo="multi_robot_collision_avoidance" repo_host="https://kforge.ros.org/collvoid/collvoid">
  <description brief="collvoid_msgs">

     collvoid_msg

  </description>
  <author>Daniel Claes</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/collvoid_msg</url>
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>

</package><package name="pelican_urdf" path="" repo="asctec_drivers" repo_host="https://github.com/ccny-ros-pkg/asctec_drivers">
  <description brief="pelican_urdf">

     STL and URDF files for the AscTec Pelican quadrotor.

  </description>
  <author>William Morris, Ivan Dryanovski</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pelican_urdf</url>

</package><package name="ds_common_msgs" path="/trunk/stacks/drink_serving/ds_common_msgs" repo="bosch-ros-pkg-e" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg-e/code">
  <description brief="ds_common_msgs">

     ds_common_msgs

  </description>
  <author>Jihoon Lee</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ds_common_msgs</url>

  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="std_srvs"/>

</package><package name="rqt_gui_py" path="" repo="rqt" repo_host="https://kforge.ros.org/visualization/rqt">
  <description brief="Foundation for plugins using rospy">
    rqt_gui_py enables GUI plugins to use the Python client library for ROS.
  </description>
  <author>Dirk Thomas</author>
  <license>BSD</license>
  <review notes="2012-06-20" status="API cleared"/>
  <url>http://ros.org/wiki/rqt_gui_py</url>

  <depend package="rqt_gui"/>
  <depend package="rospy"/>

  <export>
    <rqt_gui plugin="${prefix}/plugin.xml"/>
  </export>
</package><package name="scan_matcher" path="/trunk/stacks/bosch_registration/scan_matcher" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <author>Benjamin Pitzer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <depend package="roscpp"/>
  <depend package="mesh_registration"/>
  <depend package="rtc"/>
  <depend package="openmesh"/>
  <depend package="pcl"/>
  <!-- <export> -->
  <!--   <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -lrtc" /> -->
  <!-- </export> -->
  <!-- <rosdep name="libann"/> -->
</package><package name="ds_pr2_fridge_manipulation_executive" path="/trunk/stacks/drink_serving/ds_pr2_fridge_manipulation_executive" repo="bosch-ros-pkg-e" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg-e/code">
  <description brief="ds_pr2_fridge_manipulation_executive">

     ds_fridge_manipulation_executive

  </description>
  <author>Christian Bersch</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ds_fridge_manipulation_executive</url>
  <depend package="rospy"/>
  <depend package="actionlib"/>
  <depend package="ds_pr2_drink_fetching_planner"/>
  <depend package="ds_pr2_fridge_drink_perception"/>
  <depend package="simple_robot_control"/>
  <depend package="ds_pr2_fridge_opener"/>
  <depend package="ds_pr2_drop_drink"/>

</package><package name="quickdev_build" path="/trunk/quickdev/quickdev_build" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="quickdev_build">

     quickdev_build

  </description>
  <author>Edward T. Kaszubski ( ekaszubski@gmail.com )</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/quickdev_build</url>
  <depend package="rosbuild"/>
  <export>
    <rosbuild cmake_directory="${prefix}/cmake"/>
  </export>
</package><package name="rosjs_remotelabwidgets" path="/trunk/stacks/remote_lab/rosjs_remotelabwidgets" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="rosjs_widgets">
    rosjs common.
  </description>
  <author>Benjamin Pitzer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosjs_widgets</url>
  <depend package="rosjs_common"/>
</package><package name="interactivespaces-service-alert" path="" repo="interactive-spaces" repo_host="https://code.google.com/p/interactive-spaces">
	<description brief="interactivespaces.service.alert">
		Scripting service for Interactive Spaces.
	</description>
	<author>Keith Hughes/khughes@google.com</author>
	<license>Apache License 2.0</license>
	<review notes="" status="unreviewed"/>
	
	<url>http://code.google.com/p/interactive-spaces/</url>
	
	<depend package="interactivespaces"/>

	<rosdep name="java"/>
</package><package name="pr2_projection_process_modules" path="" repo="cram_physics" repo_host="https://github.com/moesenle/cram_physics">
  <description brief="pr2_projection_cram_process_modules">

     projection_cram_process_modules

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_projection_cram_process_modules</url>
  <depend package="alexandria"/>
  <depend package="cram_plan_failures"/>
  <depend package="cram_process_modules"/>
  <depend package="cram_roslisp_common"/>
  <depend package="bullet_reasoning"/>
  <depend package="bullet_reasoning_designators"/>
  <depend package="cram_designators"/>
  <depend package="cram_plan_knowledge"/>
  <depend package="cram_manipulation_knowledge"/>
  <depend package="cl_transforms"/>
  <depend package="cram_projection"/>
  <depend package="pr2_manipulation_knowledge"/>
  <depend package="cram_roslisp_common"/>
  <depend package="cl_semantic_map_utils"/>

</package><package name="rfid_servoing" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="rfid_servoing">

     rfid_servoing

  </description>
  <author>Travis Deyle</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rfid_servoing</url>
  <depend package="rfid_hardware"/>
  <depend package="costmap_services"/>
  <depend package="geometry_msgs"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
</package><package name="portrait_robot_msgs" path="/trunk/portrait_bot/portrait_robot_msgs" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="This package contains the service definitions for intra-project communication and the launch files.">

     portrait_roboter_msgs

  </description>
  <author>Julian Schmid</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/portrait_roboter_msgs</url>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="rospy"/>
  <depend package="roscpp"/>

</package><package name="skillgui" path="" repo="skillgui" repo_host="https://github.com/timn/ros-skillgui">
  <description brief="skillgui">
    A GUI for controlling skiller.
  </description>
  <author>Tim Niemueller</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/skillgui</url>
  <depend package="skiller"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <rosdep name="gtkmm24"/>
  <rosdep name="glibmm24"/>
  <rosdep name="gconfmm26"/>
  <rosdep name="libglademm24"/>
  <rosdep name="libgraphviz"/>
</package><package name="graycode_scanner" path="/trunk/3dscanning/graycode_scanner" repo="stanford-ros-pkg" repo_host="https://stanford-ros-pkg.googlecode.com/svn">
  <description brief="graycode_scanner">

     picoscanner

  </description>
  <author>David Mandle</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/graycode_scanner</url>
  <depend package="rospy"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="image_geometry"/>
  <depend package="projector"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>

</package><package name="libdmtx_python" path="" repo="cob_object_perception" repo_host="git://github.com/ipa320/cob_object_perception">
  <description brief="libdmtx">

     libdmtx

	originally from James Bowman

  </description>
  <author>Joshua Hampp</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url/>

  <rosdep name="libdmtx-dev"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -ldmtx"/>
  </export>
</package><package name="WAM_msgs" path="/darpa_arm_msgs/WAM_msgs" repo="darpa_arm_msgs" repo_host="http://svn.thearmrobot.com">
  <description brief="WAM_msgs">

     WAM_msgs

  </description>
  <author>DARPA ARM GFE Team</author>
  <license>GPL</license>

  <depend package="roscpp"/>
  
  <export>
    <cpp cflags="-I${prefix}/msg/cpp -I${prefix}/include"/>
  </export>

</package><package name="geodesy" path="" repo="geographic_info" repo_host="https://kforge.ros.org/geographicinfo/geographic_info">
  <description brief="geodetic coordinate transforms">

     Python and C++ interfaces for manipulating geodetic coordinates.

  </description>
  <author>Jack O'Quin</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/geodesy</url>
  <depend package="angles"/>
  <depend package="geographic_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="rosunit"/>
  <depend package="tf"/>
  <depend package="unique_id"/>
  <depend package="uuid_msgs"/>

  <rosdep name="python-pyproj"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lgeoconv"/>
    <rosdoc config="rosdoc.yaml"/>
  </export>

</package><package name="ua_audio_infomax" path="/trunk/arrg/ua_experimental/ua_audio_infomax" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
<description brief="ua_audio_infomax">

     ua_audio_infomax

  </description>
<author>Daniel Ford</author>
<license>BSD</license>
<review notes="" status="unreviewed"/>
<url>http://ros.org/wiki/ua_audio_infomax</url>
<depend package="rospy"/>
<depend package="std_msgs"/>
<depend package="std_srvs"/>
<depend package="pybrain"/>
</package><package name="pr2_gazebo_cartworld" path="/stacks/cart_pushing/trunk/pr2_gazebo_cartworld" repo="cart_pushing" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_gazebo_cartworld">

     pr2_gazebo_cartworld

  </description>
  <author>Jonathan Scholz</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_gazebo_cartworld</url>
  <depend package="pr2_gazebo"/>
<!--  <depend package="gazebo_worlds"/> -->
  <depend package="rospy"/>
  <depend package="tf"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>

</package><package name="armadillo_object_manipulation" path="/trunk/swri_demos/armadillo_object_manipulation" repo="swri-ros-pkg" repo_host="http://swri-ros-pkg.googlecode.com/svn">
  <description brief="armadillo_object_manipulation">

     armadillo_object_manipulation

  </description>
  <author>Shaun Edwards</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/armadillo_object_manipulation</url>
  <depend package="trajectory_execution_monitor"/>
  <depend package="object_manipulator"/>
  <depend package="tabletop_object_detector"/>
  <depend package="planning_environment"/>
  <depend package="armadillo_arm_navigation"/>
  <depend package="pr2_gripper_grasp_planner_cluster"/>

  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>

</package><package name="hector_gazebo_worlds" path="/branches/fuerte/hector_gazebo/hector_gazebo_worlds" repo="hector_gazebo" repo_host="https://tu-darmstadt-ros-pkg.googlecode.com/svn">
  <description brief="hector_gazebo_worlds">

     hector_gazebo_worlds provides gazebo scenarios used by Team Hector Darmstadt

  </description>
  <author>Stefan Kohlbrecher</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hector_gazebo_worlds</url>
  <depend package="gazebo"/>
  <depend package="hector_gazebo_plugins"/>
  
  <export>
    <gazebo gazebo_media_path="${prefix}"/>
  </export>

</package><package name="publish_servo_joint_state" path="" repo="parsec" repo_host="https://code.google.com/p/parsec">
  <description brief="publish_servo_joint_state">

     publish_servo_joint_state

  </description>
  <author>Lorenz Mosenlechner</author>
  <license>Apache 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/publish_servo_joint_state</url>
  <depend package="rospy"/>
  <depend package="sensor_msgs"/>
  <depend package="parsec_msgs"/>

</package><package name="cart_pushing_msgs" path="/stacks/cart_pushing/trunk/cart_pushing_msgs" repo="cart_pushing" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="cart_pushing_msgs">

     cart_pushing_msgs

  </description>
  <author>Sachin Chitta</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cart_pushing_msgs</url>
  <depend package="actionlib_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>

</package><package name="circle_finder" path="/trunk/cturtle/circle_finder" repo="seabee3-ros-pkg" repo_host="http://seabee3-ros-pkg.googlecode.com/svn">
  <description brief="circle_finder">

     circle_finder

  </description>
  <author>Kaylyn Sung</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/circle_finder</url>
  <depend package="opencv2"/>
  <depend package="roscpp"/>
  <depend package="base_libs"/>
  <depend package="cv_bridge"/>
  <depend package="image_transport"/>
  <depend package="geometry_msgs"/>

</package><package name="jsk_pr2_desktop" path="/trunk/jsk_pr2_desktop" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="jsk_pr2_desktop">

    JSK PR2 Desktop

  </description>
  <author>JSK PR2 Group</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/jsk_pr2_desktop</url>

  <depend package="jsk_pr2_startup"/>
</package><package name="freetail_ball_bin_segmentation" path="/trunk/freetail/freetail_ball_bin_segmentation" repo="swri-ros-pkg" repo_host="http://swri-ros-pkg.googlecode.com/svn">
  <description brief="freetail_ball_bin_segmentation">

     freetail_ball_bin_segmentation

  </description>
  <author>Christina</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/freetail_ball_bin_segmentation</url>
  <depend package="pcl_ros"/>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="tabletop_object_detector"/>

</package><package name="stereo_capture" path="/trunk/veltrop-ros-pkg/veltrop_stereo/stereo_capture" repo="veltrop-ros-pkg" repo_host="https://veltrop-ros-pkg.svn.sourceforge.net/svnroot/veltrop-ros-pkg">
  <description brief="stereo_capture">

   Contains stereo video capture related nodes.
   There is a modified version of uvc_cam that works with non-uvc cameras.  To work with standard capture devices it allows the user to set the video encoding standard (NTSC, PAL, DEFAULT)
   The stereo capture also permits the incoming images to be rotated by 90 degrees.  This allows the user to set up stereo cameras in non standard orientations, or could be used to permit vertical stereo.
   The included modified stereo_image_proc can also produce two disparity images, one based on the left image, and one based on the right image.  This is because low resolution images which are requesting a large maximum disparity can lose much of the incoming image data. (a 240px wide image with 128 max disparity has less than half left).  So for percieving things that are very close to the cameras this is no good.  The additional disparity image allows the full field of view to be used up close, but requires more cpu time.

  </description>
  <author>Taylor Veltrop</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/stereo_capture</url>

  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="image_transport"/>
  <depend package="camera_info_manager"/>

  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg_gen/cpp" lflags="-L${prefix}/lib"/>
  </export>

  <!-- experimental -->
  <!-- <depend package="uvc_cam"/>
       <depend package="usb_cam"/> 
       <rosdep name="libswscale"/>
       <rosdep name="libavcodec"/> -->
  
  <!-- <depend package="planning_environment_msgs"/> -->
  <!-- <depend package="kinematics_msgs"/> -->

  <!--<depend package="actionlib_msgs"/>
  <depend package="pr2_controllers_msgs"/>

  <depend package="move_arm_msgs"/>
  <depend package="planning_environment"/>
  <depend package="motion_planning_msgs"/>

  <depend package="pr2_arm_navigation_perception"/>
  <depend package="mapping_rviz_plugin"/> -->

</package><package name="templated_transports" path="" repo="ethzasl_message_transport" repo_host="https://github.com/ethz-asl/ros-message-transport">
  <description brief="templated_transports">

     templated_transports

  </description>
  <author>Cedric Pradalier</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/templated_transports</url>
  <depend package="rosbuild"/>
  <depend package="roscpp"/>
  <depend package="pluginlib"/>
  <depend package="message_transport_common"/>
  <depend package="sharedmem_transport"/>
  <depend package="udpmulti_transport"/>
  <depend package="bz2_transport"/>
  <depend package="throttled_transport"/>

  <export>
    <cpp cflags="-I${prefix}/include"/>
    <!-- This causes this cmake directory to be available to depending packages -->
    <rosbuild cmake_directory="${prefix}/cmake"/>
  </export>
  <rosdep name="m4"/>
</package><package name="re2logger" path="/re2logger" repo="re2logger" repo_host="http://svn.thearmrobot.com">
  <description brief="re2logger">

     re2logger

  </description>
  <author>DARPA ARM GFE Team</author>
  <license>GPL</license>
  
  <depend package="roscpp"/>
  <rosdep name="log4cxx"/>
  
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lre2logger"/>
  </export>
</package><package name="autonomous_mapping" path="" repo="mapping" repo_host="http://code.in.tum.de/git/mapping.git">
  <description brief="autonomous_mapping">

     autonomous_mapping

  </description>
  <author> Gheorghe Rus </author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/autonomous_mapping</url>

  <depend package="roscpp"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="octomap_ros"/>
  <depend package="octomap"/>
  <depend package="octomap_server"/>
  <depend package="pcl_to_octree"/>
  <depend package="tf"/>
  <depend package="nodelet"/>
  <depend package="nav_msgs"/>
  <depend package="move_base_msgs"/>
  <depend package="actionlib"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="pr2_msgs"/>
  <depend package="terminal_tools"/>
  <depend package="pcl_visualization"/>
  <depend package="pcl_ias_sample_consensus"/>
  <depend package="mod_semantic_map"/>
  <depend package="dos_pcl"/>

  <!--<depend package="dos_pcl_ros"/>-->

  <!--<depend package="pcl_cloud_algos"/>-->

  <export>
    <nodelet plugin="${prefix}/nodelets.xml"/>
    <nodelet plugin="${prefix}/nodelets_exploration.xml"/>
  </export>
</package><package name="summit_2dnav" path="/trunk/trunk/summit_sim/summit_2dnav" repo="summit-ros-pkg" repo_host="http://summit-ros-stack.googlecode.com/svn">
  <description brief="summit_2dnav">

     summit_2dnav

  </description>
  <author>Roberto</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/summit_2dnav</url>
  <depend package="move_base"/>
  <depend package="summit_tf"/>
  <depend package="summit_odometry"/>

</package><package name="pr2_sith" path="/branches/stable/wu_pr2_demos/pr2_sith" repo="wu-ros-pkg" repo_host="https://wu-robotics.googlecode.com/svn">
  <description brief="Make the PR2 use a lightsaber">
    An extension of the PR2 props demo, but instead of high fives, the PR2 swings a lightsaber until it detects an impact. 
  </description>
  <author>David V. Lu!!</author>
  <license>BSD</license>
  <url>http://ros.org/wiki/pr2_sith</url>
  <depend package="rospy"/>
  <depend package="actionlib"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="pr2_gripper_sensor_action"/>
  <depend package="pr2_gripper_sensor_controller"/>
  <depend package="pr2_gripper_sensor_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="joy"/>
  <depend package="resource_retriever"/>
</package><package name="test_roslisp" path="/stacks/roslisp_support/trunk/test_roslisp" repo="roslisp_support" repo_host="https://code.ros.org/svn/ros">
  <description brief="tests for roslisp">

Tests for roslisp

  </description>
  <author>Bhaskara Marthi</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/test_roslisp</url>
  <depend package="roslisp_runtime"/>
  <depend package="std_msgs"/>
  <depend package="std_srvs"/>
  <depend package="roscpp"/>
  <depend package="rostest"/>
  <depend package="roslisp_testing"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="roscpp_sessions" path="/trunk/openrave_planning/roscpp_sessions" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="A small library for ROS sessions">
    Sessions offer execution synchronization between a persistent set of services. Each session maintains a state on the server side which is independent of the connection. This allows multiple clients to have the option of maintaining an independent workspace on the server side, or potentially to share the same workspace.
  </description>
  <author>Rosen Diankov (rdiankov@cs.cmu.edu)</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <depend package="roscpp"/>
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/srv/cpp `rosboost-cfg --cflags`" lflags="`rosboost-cfg --lflags thread`"/>
  </export>
  <url>http://pr.willowgarage.com/wiki/roscpp_sessions</url>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="diag_sim" path="" repo="lwr_gui" repo_host="https://github.com/RCPRG-ros-pkg/lwr_gui">
  <description brief="diag_sim">

     diag_sim

  </description>
  <author>Maciej Stefańczyk</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/diag_sim</url>

  <depend package="rospy"/>
  <depend package="diagnostic_msgs"/>
  
</package><package name="art_msgs" path="/trunk/stacks/art_vehicle/art_msgs" repo="utexas-art-ros-pkg" repo_host="http://utexas-art-ros-pkg.googlecode.com/svn">
  <description brief="ART vehicle messages">

     This package defines messages specific to ART autonomous vehicle.

  </description>
  <author>Jack O'Quin</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/art_msgs</url>

  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="std_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/include"/>
    <rosbag migration_rule_file="migration_rules/art_msgs.bmr"/>
  </export>

</package><package name="pr2_counterbalance_check" path="/stacks/pr2_self_test/trunk/pr2_counterbalance_check" repo="pr2_self_test" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="Checks the counterbalance of the PR2, recommends adjustments">
<b>pr2_counterbalance_check</b> can be used as either a stand-alone tool to check the counterbalance, or as part of the PR2 Production Qualification system.
  </description>
  <author>Kevin Watts</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_counterbalance_check</url>
  <depend package="joint_qualification_controllers"/>
  <depend package="rospy"/>
  <depend package="std_msgs"/>
  <depend package="pr2_self_test_msgs"/>
  <depend package="pr2_controller_configuration"/>
  <depend package="actionlib"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="pr2_controller_manager"/>

  <rosdep name="python-matplotlib"/>
</package><package name="asctec_hl_comm" path="" repo="asctec_mav_framework" repo_host="https://github.com/ethz-asl/asctec_mav_framework">
  <description brief="Headers and message definitions for communication with the AscTec helicopters">

     This Package contains header files for communication with the HL controller on the AscTec AutoPilot and custom message, server, and action definitions 

  </description>
  <author>Markus Achtelik, Michael Achtelik, Stephan Weiss, Laurent Kneip</author>
  <license>BSD</license>
  <review notes="This is unstable and under active development" status="unreviewed"/>
  <url>http://ros.org/wiki/asctec_hl_comm</url>
  <depend package="actionlib_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp -I${prefix}/srv/cpp"/>
  </export>


</package><package name="rescuebot_drive" path="/trunk/robotdrivers/rescuebot_drive" repo="roblab-whge-ros-pkg" repo_host="http://roblab-whge-ros-pkg.googlecode.com/svn">
  <description brief="rescuebot_driver">

rescuebot is the package for controling the actors of the Fraunhofer rescuebot, a tracked volksbot with two flippers at the front.s

  </description>
  <author>Thorsten Linder</author>
  <license>CC-by-nc</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rescuebot</url>
  <depend package="std_msgs"/>
  <depend package="roscpp"/>
  <depend package="joy"/>
  <depend package="tf"/>
  <depend package="nav_msgs"/> 
</package><package name="rqt_publisher" path="" repo="rqt" repo_host="https://kforge.ros.org/visualization/rqt">
  <description brief="Plugin for publishing arbitrary messages">
    rqt_publisher provides a GUI plugin for publishing arbitrary messages with fixed or computed field values.
  </description>
  <author>Dorian Scholz</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rqt_publisher</url>

  <depend package="rqt_gui"/>
  <depend package="rqt_gui_py"/>
  <depend package="rqt_py_common"/>
  <depend package="qt_gui_py_common"/>
  <depend package="rosmsg"/>

  <export>
    <rqt_gui plugin="${prefix}/plugin.xml"/>
  </export>
</package><package name="ds_pr2_drink_fetching_planner" path="/trunk/stacks/drink_serving/ds_pr2_drink_fetching_planner" repo="bosch-ros-pkg-e" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg-e/code">
  <description brief="ds_pr2_drink_fetching_planner">

     ds_drink_fetching_planner

  </description>
  <author>Christian Bersch</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ds_drink_fetching_planner</url>
  <depend package="roscpp"/>
  <depend package="rospy"/>
    <depend package="geometry_msgs"/>
  <depend package="simple_robot_control"/>
  <depend package="tf"/>
  <depend package="tf_conversions"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="pr2_gripper_sensor_action"/>
  <depend package="pr2_gripper_sensor_msgs"/>

</package><package name="AlicaEngine" path="" repo="cn-alica-ros-pkg" repo_host="https://code.google.com/p/cn-alica-ros-pkg">
  <description brief="AlicaEngine">

     AlicaEngine

  </description>
  <author>Hendrik Skubch</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://carpenoctem.das-lab.net/research/ALICA</url>
  <depend package="roscs"/>
  <depend package="roscpp"/>
  <depend package="Castor"/>
  <depend package="std_msgs"/>
 <export>
    <cs lpath="${prefix}/../../lib"/>
    <rosdoc config="rosdoc.yaml"/>
  </export>
</package><package name="smach_ros" path="" repo="executive_smach" repo_host="https://kforge.ros.org/smach/executive_smach">
  <description brief="smach_ros">
    The smach_ros package contains extensions for the SMACH library to
    integrate it tightly with ROS.  For example, SMACH-ROS can call
    ROS services, listen to ROS topics, and integrate
    with <a href="http://www.ros.org/wiki/actionlib">actionlib</a>
    both as a client, and a provider of action servers.  SMACH is a
    new library that takes advantage of very old concepts in order to
    quickly create robust robot behavior with maintainable and modular
    code.
  </description>
  <author>Jonathan Bohren</author>
  <license>BSD</license>
  <review notes="" status="Doc reviewed"/>
  <url>http://ros.org/wiki/smach_ros</url>

  <depend package="smach"/>

  <depend package="rospy"/>
  <depend package="rostest"/>
  <depend package="rostopic"/>

  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>

  <depend package="smach_msgs"/>
  <depend package="std_msgs"/>
  <depend package="std_srvs"/>

  <export>
    <rosdoc config="rosdoc.yaml"/>    
  </export>

</package><package name="timestamp_tools" path="/stacks/driver_common/trunk/timestamp_tools" repo="driver_common" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Classes to facilitate timestamping of sensor data">
    This package is currently for internal use only. Its API may change
    without warning in the future.
    
    <tt>timestamp_tools</tt> provides:
    
    <ul>
    <li>
      a <tt>TriggerMatcher</tt>, that matches a stream of data structures with
    approximate timestamps to a stream of exact timestamps.
    </li>
    </ul>

  </description>
  <author>Blaise Gassend</author>
  <license>BSD</license>
  <review note="Jan 18 2010, empty API" status="Doc Reviewed"/>
  <url>http://www.ros.org/wiki/timestamp_tools</url>
  <depend package="roslib"/>
  <depend package="roscpp"/>
  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="cram_plan_failures" path="" repo="cram_highlevel" repo_host="https://github.com/moesenle/cram_highlevel">
  <description brief="cram_plan_failures">

     cram_plan_failures

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cram_plan_failures</url>
  <depend package="cram_language"/>

</package><package name="rxgraphplus" path="/branches/stable/wu_ros_tools/rxgraphplus" repo="wu-ros-pkg" repo_host="https://wu-robotics.googlecode.com/svn">
  <description brief="Modification of rxgraph">

     rxgraph is a command-line tool for visualizing a ROS computation graph. The rxgraph is a new package in ROS 1.1 that provides an updated version of the rxgraph tool that was originally distributed in the rosgraph package.

     This forked version allows for grouping nodes into clusters. 

  </description>
  <author>Ken Conley and David V. Lu!!</author>
  <license>BSD</license>
  <url>http://ros.org/wiki/rxgraphplus</url>

  <depend package="rosgraph"/>
  <depend package="xdot"/>
  <depend package="roslib"/>

  <depend package="rostopic"/>  
  <depend package="rosnode"/>  

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
  <platform os="macports" version="macports"/>
</package><package name="phidget" path="/trunk/phidget" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="phidget">
     Phidget Interface Kit
  </description>
  <author>dfseifer@usc.edu</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://pr.willowgarage.com/wiki/b3ia</url>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp" oflags="-L${prefix}/lib -lphidget21"/>
  </export>
</package><package name="ecl_streams" path="/trunk/ecl_core/ecl_streams" repo="ecl_core" repo_host="https://embedded-control-library.googlecode.com/svn">
  <description brief="Lightweight streaming classes that connect to ecl devices">

     These are lightweight text streaming classes that connect to standardised
     ecl type devices.

  </description>
  <author>Daniel Stonier (d.stonier@gmail.com)</author>
  <license>BSD</license>
  <review notes="" status="api cleared"/>
  <url>http://snorriheim.dnsdojo.com/redmine/wiki/ecl</url>
  
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lecl_streams"/>
  </export>

  <depend package="ecl_concepts"/>
  <depend package="ecl_devices"/>
  <depend package="ecl_errors"/>
  <depend package="ecl_time"/>
  <depend package="ecl_converters"/>
  <depend package="ecl_type_traits"/>
  <depend package="ecl_license"/>
  <depend package="ecl_build"/>
</package><package name="lockfree" path="/stacks/ros_realtime/trunk/lockfree" repo="ros_realtime" repo_host="https://code.ros.org/svn/ros">
  <description brief="A collection of lockfree data structures">
  
     The lockfree package contains lock-free data structures for use in multithreaded programming.  These
     kinds of data structures are generally not as easy to use as single-threaded equivalents, and are not
     always faster.  If you don't know you need to use one, try another structure with a lock around it
     first.

  </description>
  <author>Josh Faust</author>
  <license>BSD</license>
  <review notes="" status="API reviewed"/>
  <url>http://ros.org/wiki/lockfree</url>
  <depend package="rosatomic"/>
  <depend package="rosconsole"/>
  <depend package="roslib"/>
  <depend package="allocators"/>

  <export>
  	<cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -llockfree"/>
  </export>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="rqt_topic" path="" repo="rqt" repo_host="https://kforge.ros.org/visualization/rqt">
  <description brief="Plugin for displaying topic information">
    rqt_topic provides a GUI plugin for displaying debug information about ROS topics including publishers, subscribers, publishing rate, and ROS Messages.
  </description>
  <author>Dorian Scholz</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rqt_topic</url>

  <depend package="rqt_gui"/>
  <depend package="rqt_gui_py"/>
  <depend package="std_msgs"/>
  <depend package="rostopic"/>

  <export>
    <rqt_gui plugin="${prefix}/plugin.xml"/>
  </export>
</package><package name="navigation_application" path="/stacks/pr2_web_apps/trunk/navigation_application" repo="pr2_web_apps" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="navigation">
    Navigation Application
  </description>
  <author>Scott Hassan</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://pr.willowgarage.com/wiki/navigation_application</url>
  <depend package="roslib"/>
  <depend package="rospy"/>
  <depend package="webui"/>
  <depend package="pr2_navigation_global"/>
  <depend package="pr2_navigation_perception"/>
  <depend package="pr2_navigation_teleop"/>
  <depend package="pr2_machine"/>
  <depend package="tf"/>
  <depend package="laser_geometry"/>
  <depend package="sensor_msgs"/>
  <depend package="message_filters"/>
  <depend package="nav_msgs"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="haptic_event_detector_msgs" path="/haptic_event_detector/trunk/haptic_event_detector_msgs" repo="haptic_event_detector" repo_host="https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs">
  <description brief="haptic_event_detector_msgs">

     haptic_event_detector_msgs

  </description>
  <author>Joe Romano</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/haptic_event_detector_msgs</url>
  
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  
  <export>
    <cpp cflags="-I${prefix}/msg/cpp"/>
  </export>

</package><package name="move_base_rfn" path="" repo="roboframenet" repo_host="https://kforge.ros.org/appmanandroid/roboframenet">
  <description brief="move_base_rfn">

    move_base_rfn acts as an interface between RoboFrameNet and the move_base action server.  move_base_rfn is an RFNServer which listens for requests to navigate to certain locations.  When a request comes in, move_base_rfn sends requests to the move_base action server. When a preempt request comes, a preempt is likewise sent to the move_base action server.

  </description>
  <author>Brian Thomas</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/move_base_rfn</url>
  <depend package="rospy"/>
  <depend package="geometry_msgs"/>
  <depend package="tf"/>
  <depend package="move_base_msgs"/>
  <depend package="rfnserver"/>
  <depend package="location_memorizer"/>

</package><package name="pr2_head_action" path="/stacks/pr2_controllers/trunk/pr2_head_action" repo="pr2_controllers" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_head_action">

  The PR2 head action is a node that provides an action interface for
  pointing the head of the PR2.  It passes trajectory goals to the
  controller, and reports success when they have finished executing.

  </description>
  <author>Stuart Glaser</author>
  <license>BSD</license>
  <review notes="http://www.ros.org/wiki/pr2_head_action/Reviews/2010-01-13_Doc_Review" status="Doc reviewed"/>
  <url>http://ros.org/wiki/pr2_head_action</url>

  <depend package="geometry_msgs"/>
  <depend package="trajectory_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="pr2_controllers_msgs"/>

  <depend package="roscpp"/>
  <depend package="message_filters"/>
  <depend package="tf"/>
  <depend package="tf_conversions"/>
  <depend package="actionlib"/>
  <depend package="orocos_kdl"/>
  <depend package="kdl_parser"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="sbpl_door_planner_plugin" path="/sbpl_door_planning/trunk/sbpl_door_planner_plugin" repo="sbpl_door_planning" repo_host="https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs">
  <description brief="sbpl_door_planner_plugin"> sbpl_door_planner_plugin </description>
  <author>Steven Gray</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>Coming soon...</url>
  <depend package="roscpp"/>
  <depend package="sbpl"/>
  <depend package="sbpl_door_planner"/>
  <depend package="costmap_2d"/>
  <depend package="nav_core"/>
  <depend package="pluginlib"/>
  <depend package="door_msgs"/>
  <depend package="pr2_doors_actions"/>
  <depend package="door_handle_detector"/>
  <depend package="pr2_navigation_teleop"/>
  <depend package="pr2_navigation_perception"/>
  <depend package="pr2_navigation_local"/>
  <depend package="pr2_controller_manager"/>
  <depend package="pr2_mechanism_model"/>
  <depend package="move_base"/>
  <depend package="manipulation_msgs"/>
  <depend package="trajectory"/>
  <depend package="pose_base_controller"/>
  <depend package="kdl"/>
  <depend package="eigen"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lsbpl_door_planner_plugin"/>
    <nav_core plugin="${prefix}/door_planner_plugin.xml"/>
  </export>

</package><package name="interactivespaces-service-mail-common" path="" repo="interactive-spaces" repo_host="https://code.google.com/p/interactive-spaces">
	<description brief="interactivespaces.service.mail.common">
		Common portions of Email service for Interactive Spaces.
	</description>
	<author>Keith Hughes/khughes@google.com</author>
	<license>Apache License 2.0</license>
	<review notes="" status="unreviewed"/>
	<url>http://code.google.com/p/interactive-spaces/</url>
	
	<depend package="interactivespaces-core"/>

	<rosdep name="java"/>
</package><package name="ecl_io" path="/trunk/ecl_lite/ecl_io" repo="ecl_lite" repo_host="https://embedded-control-library.googlecode.com/svn">
  <description brief="Cross platform abstractions for implementation dependant and low-level io api">

     Most implementations (windows, posix, ...) have slightly different api for 
     low level input-output functions. These are gathered here and re-represented 
     with a cross platform set of functions.

  </description>
  <author>Daniel Stonier (d.stonier@gmail.com)</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://snorriheim.dnsdojo.com/redmine/wiki/ecl</url>
  
  <depend package="ecl_license"/>
  <depend package="ecl_build"/>
  <depend package="ecl_config"/>
  <depend package="ecl_errors"/>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lecl_sockets"/>
  </export>
</package><package name="astromech_base" path="/astromech_base" repo="astromech-ros" repo_host="https://astromech-ros.svn.sourceforge.net/svnroot/astromech-ros">
  <description brief="astromech_base">

     astromech_base: Node to talk to an Astromech robot platform

  </description>
  <author>Björn Giesler bjoern-AT-giesler.de</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/astromech_base</url>

  <depend package="roscpp"/>      <!-- Standard C++ library for ROS -->

  <depend package="std_msgs"/>    <!-- Standard messages -->
  <depend package="sensor_msgs"/> <!-- Sensor messages -->
  <depend package="nav_msgs"/>    <!-- Navigational messages -->

  <depend package="robot_state_publisher"/>  <!-- Robot State Publisher library -->
  <depend package="urdf"/>        <!-- to parse URDF files -->
  <depend package="tf"/>          <!-- Transformation library -->

</package><package name="katana_arm_navigation" path="" repo="katana_manipulation" repo_host="http://kos.informatik.uni-osnabrueck.de/katana_manipulation.git">
  <description brief="katana_arm_navigation">

     <p>
     This package contains the launch files for arm navigation with the Katana robot arm.
     It is modeled after the <a href="/wiki/pr2_arm_navigation">pr2_arm_navigation</a>
     stack. All packages inside that stack are represented as subdirectories here.
     </p>

     <p>
     The complete arm navigation pipeline can be launched via the katana_arm_navigation.launch file.
     </p>

  </description>
  <author>Martin Günther</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/katana_arm_navigation</url>
  <depend package="katana"/>
  <depend package="katana_description"/>
  <depend package="arm_kinematics"/>
  <depend package="katana_kinematics_constraint_aware"/>

  <depend package="collision_map"/>
  <depend package="constraint_aware_spline_smoother"/>
  <depend package="laser_assembler"/>
  <depend package="laser_filters"/>
  <depend package="move_arm"/>
  <depend package="planning_environment"/>
  <depend package="robot_self_filter"/>
  <depend package="spline_smoother"/>
  <depend package="trajectory_filter_server"/>
  <depend package="topic_tools"/>
  <depend package="ompl_ros_interface"/>
  
  <!-- <depend package="chomp_motion_planner"/> -->
  
  <depend package="point_cloud_converter"/>

  <depend package="katana_trajectory_filter"/>
</package><package name="rqt_service_caller" path="" repo="rqt" repo_host="https://kforge.ros.org/visualization/rqt">
  <description brief="Plugin for calling arbitrary services">
    rqt_publisher provides a GUI plugin for calling arbitrary services.
  </description>
  <author>Dorian Scholz</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rqt_publisher</url>

  <depend package="rqt_gui"/>
  <depend package="rqt_gui_py"/>
  <depend package="rqt_py_common"/>
  <depend package="rosservice"/>

  <export>
    <rqt_gui plugin="${prefix}/plugin.xml"/>
  </export>
</package><package name="luaagent" path="" repo="behavior_engine" repo_host="https://github.com/timn/ros-behavior_engine">
  <description brief="luaagent">
     Behavior Engine Lua agent.
  </description>
  <author>Tim Niemueller</author>
  <license>GPLv2+</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/luaagent</url>
  <depend package="roscpp"/>
  <depend package="roslib"/>
  <depend package="lua_utils"/>
  <depend package="skiller"/>
  <depend package="roslua"/>
  <depend package="actionlib_lua"/>
</package><package name="freenect_camera" path="" repo="freenect_stack" repo_host="https://github.com/piyushk/freenect_stack">
  <description brief="A libfreenect based ROS driver for the Microsoft Kinect">
    A libfreenect based ROS driver for the Microsoft Kinect. This is a port of
    the OpenNI driver to use libfreenect.
  </description>
  <author>Patrick Mihelich, Suat Gedikli, Radu Bogdan Rusu (original openni_camera driver). Piyush Khandelwal (libfreenect port).</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/freenect_camera</url>

  <depend package="dynamic_reconfigure"/>
  <depend package="libfreenect"/>
  <depend package="image_transport"/>
  <depend package="camera_info_manager"/>
  <depend package="nodelet"/>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/cfg/cpp" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lfreenect_nodelet"/>
    <nodelet plugin="${prefix}/freenect_nodelets.xml"/>
  </export>

</package><package name="siftgpu" path="" repo="perception_blort" repo_host="https://github.com/pal-robotics/perception_blort">
  <description brief="siftgpu">

    The SiftGPU library is an implementation of SIFT for GPU.
     
  </description>
  <author>Changchang Wu (library), Bence Magyar (ROS wrapper)</author>
  <license>non-profit license from University of North Carolina</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/siftgpu</url>
  <depend package="mk"/>
  <export>
    <rosdoc external="http://www.cs.unc.edu/~ccwu/siftgpu"/>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -lsiftgpu"/>
  </export>
  <rosdep name="libglew"/>
  <rosdep name="libdevil"/>

</package><package name="simple_occupancy_grid" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="simple_occupancy_grid">

     simple_occupancy_grid

  </description>
  <author>Advait Jain</author>
  <license>New BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/simple_occupancy_grid</url>

  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="hrl_msgs"/>
  <depend package="hrl_srvs"/>
  <depend package="visualization_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="std_msgs"/>

</package><package name="rawlog_play" path="/trunk/mrpt_common/rawlog_play" repo="mrpt-ros-pkg" repo_host="http://mrpt-ros-pkg.googlecode.com/svn">
  <description brief="rawlog_play">

     rawlog_play

  </description>
  <author>Jose Luis</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rawlog_play</url>
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="mrpt_bridge"/>

</package><package name="geometric_semantics_msgs" path="" repo="geometric_relations_semantics" repo_host="http://git.mech.kuleuven.be/robotics/geometric_relations_semantics.git">
  <description brief="geometric_semantics_msgs">

     This package provides ROS messages matching the C++ types defined on the <a href="http://www.ros.org/wiki/geometric_semantics">geometric_semantics</a> package, in order to support semantic support during message based communication.

  </description>
  <author>Tinne De Laet</author>
  <license>LGPLv2.1 / BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.orocos.org/wiki/geometric-relations-semantics-wiki</url> 

  <depend package="roscpp"/>
  <export>
        <rosdoc config="rosdoc.yaml"/>
   </export>

</package><package name="hector_map_server" path="/branches/fuerte/hector_slam/hector_map_server" repo="hector_slam" repo_host="https://tu-darmstadt-ros-pkg.googlecode.com/svn">
  <description brief="hector_map_server provides a service for retrieving the map, as well as for raycasting based obstacle queries (finds next obstacle in the map, given start and endpoint in any tf coordinate frame).">

     hector_map_server provides a service for retrieving the map, as well as for raycasting based obstacle queries (finds next obstacle in the map, given start and endpoint in any tf coordinate frame).

  </description>
  <author>stefan</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hector_map_server</url>
  <depend package="nav_msgs"/>
  <depend package="hector_map_tools"/>
  <depend package="hector_marker_drawing"/>
  <depend package="hector_nav_msgs"/>
  <depend package="tf"/>

</package><package name="auction_msgs" path="/stacks/auction_methods_stack/trunk/auction_msgs" repo="auction_methods_stack" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="auction_msgs">

     auciton_msgs

  </description>
  <author>Joao Manuel Leitao Quintas</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/auciton_msgs</url>

  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>

</package><package name="rtcus_timing" path="/trunk/rtcus_tools/rtcus_timing" repo="rtc-us-ros-pkg-trunk" repo_host="https://rtc-us-ros-pkg.svn.sourceforge.net/svnroot/rtc-us-ros-pkg">
  <description brief="rtcus_timing">
	A cpp library for performance analysis. It makes possible timing code sections and publishing them on a topic. 

This package is open to ideas and contributions. Please contact with us.
We have some ideas for the near future like use performance tools and profilers like PAPI or PINTool for a futher performance comparison.
Another future idea is to make a python binding with a similar same API.
  </description>
  <author>Pablo Iñigo Blasco</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rtcus_timing</url>

 	<depend package="roscpp"/>
 	
 	<export>
    <cpp cflags="-I${prefix}/include -I${prefix}/cfg/cpp" lflags="-L${prefix}/lib -lrtcus_timing"/>
  </export>
</package><package name="oro_ontology" path="/knowledge/oro/oro_ontology" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="oro_ontology">

     oro_ontology

  </description>
  <author>Severin Lemaignan</author>
  <license>Creative Commons 3.0 by</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/oro_ontology</url>

</package><package name="summit_xl_2dnav" path="/trunk/trunk/summit_xl_sim_fuerte/summit_xl_2dnav" repo="summit-xl-ros-stack" repo_host="http://summit-xl-ros-stack.googlecode.com/svn">
  <description brief="summit_xl_2dnav">

     summit_xl_2dnav

  </description>
  <author>Roberto</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/summit_2dnav</url>
  <depend package="move_base"/>
  <depend package="summit_xl_tf"/>
  <depend package="summit_xl_odometry"/>

</package><package name="hector_imu_attitude_to_tf" path="/branches/fuerte/hector_slam/hector_imu_attitude_to_tf" repo="hector_slam" repo_host="https://tu-darmstadt-ros-pkg.googlecode.com/svn">
  <description brief="     hector_imu_attitude_to_tf is a lightweight node that can be used to publish the roll/pitch attitude angles reported via a imu message to tf">

     hector_imu_attitude_to_tf is a lightweight node that can be used to publish the roll/pitch attitude angles reported via a imu message to tf

  </description>
  <author>Stefan Kohlbrecher</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hector_imu_attitude_to_tf</url>
  <depend package="roscpp"/>
  <depend package="tf"/>

</package><package name="hone_markers" path="/trunk/irvs-ros-pkg/hone_markers" repo="irvs-ros-pkg" repo_host="http://subaru.ait.kyushu-u.ac.jp/svn/irvs-ros-pkg">
  <description brief="hone_markers">

     hone_markers

  </description>
  <author>pyo</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hone_markers</url>
  <depend package="roscpp"/>
  <depend package="visualization_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="openni_camera"/>
  <depend package="openni_tracker"/>

</package><package name="impromptu_buttons" path="/trunk/kinect_utils/impromptu_buttons" repo="mit-ros-pkg-trunk" repo_host="https://svn.csail.mit.edu/mit-ros-pkg">
  <description brief="impromptu_buttons allows the user to create and interact with buttons ">

     The  impromptu_buttons package lets the user create buttons by drawing them on a white piece of paper. 
	   The buttons can then be pressed to create noises.


  </description>
  <author>garratt</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/impromptu_buttons</url>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="pcl_tools"/>
  <depend package="nnn"/>
  <depend package="roscpp"/>
  <rosdep name="libsfmt"/>
</package><package name="common_utils" path="/trunk/cturtle/common_utils" repo="seabee3-ros-pkg" repo_host="http://seabee3-ros-pkg.googlecode.com/svn">
  <description brief="common_utils">

     common_utils

  </description>
  <author>Edward T. Kaszubski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/common_utils</url>
  <depend package="roscpp"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="image_transport"/>
  <depend package="tf"/>
  <export>
    <cpp cflags="-std=c++0x -I${prefix}/include -I${prefix}/msg/cpp -I${prefix}/srv/cpp" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lcommon_utils"/>
  </export>

</package><package name="pr2_pick_and_place_demos" path="/stacks/pr2_tabletop_manipulation_apps/branches/0.4-branch/pr2_pick_and_place_demos" repo="pr2_tabletop_manipulation_apps" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_pick_and_place_demos">

    Example applications that call the services provided by the
    manipulation pipeline.

  </description>
  <author>Matei Ciocarlie and Kaijen Hsiao</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_pick_and_place_demos</url>

  <depend package="roscpp"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="tf_conversions"/>
  <depend package="object_manipulation_msgs"/>
  <depend package="object_manipulator"/>
  <depend package="tabletop_object_detector"/>
  <depend package="tabletop_collision_map_processing"/>
  <depend package="household_objects_database"/>
  <depend package="pr2_gripper_reactive_approach"/>
  <depend package="simple_Jtranspose_controller"/>
  <depend package="pr2_tabletop_manipulation_launch"/>

</package><package name="phippipublisher" path="" repo="TYROS" repo_host="https://github.com/tonuonu/TYROS">
  <description brief="phippipublisher">

     phippipublisher

  </description>
  <author>robot</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/phippipublisher</url>

  <depend package="roscpp"/>

</package><package name="policy_improvement" path="" repo="usc-clmc-ros-pkg" repo_host="https://github.com/usc-clmc/usc-clmc-ros-pkg">
  <description brief="policy_improvement">

     policy_improvement

  </description>
  <author>Ludovic Righetti</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/policy_improvement</url>

  <depend package="roscpp"/>
  <depend package="rosbag"/>
  
  <depend package="policy_library"/>
  <depend package="usc_utilities"/>
  
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/srv/cpp -I${prefix}/msg/cpp" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lpolicy_improvement"/>
  </export>
  
</package><package name="indomptable_nav" path="" repo="smart-robotics-ros-pkg" repo_host="https://github.com/JBot/smart-robotics-ros-pkg">
  <description brief="indomptable_nav">

     indomptable_nav

  </description>
  <author>jbot</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/indomptable_nav</url>
  <depend package="move_base"/>
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  <depend package="std_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="tf"/>
  <depend package="move_base_msgs"/>
  <depend package="actionlib"/>

</package><package name="bosch_drivers_common" path="/trunk/stacks/bosch_drivers/bosch_drivers_common" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="Common header files for bosch_drivers.">
    This package contains common constants and abstract class definitions
    for use with bosch_drivers.
  </description>
  <author>Joshua Vasquez, Philip Roan. Maintained by Philip Roan</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/bosch_drivers_common</url>
  <depend package="roscpp"/>

  <!-- Export the header files for use in other packages. -->
  <export>
    <cpp cflags="-I${prefix}/include/bosch_drivers_common"/>
  </export>

</package><package name="pr2_drive_life_test" path="/stacks/wg_hardware_test/trunk/pr2_drive_life_test" repo="wg_hardware_test" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="Drives PR2 base to for a burn-in test">
<p><b>pr2_drive_life_test</b> contains utilities for localizing and commanding the PR2 in a special fixture. This is used in a PR2 burn in test.</p>

<p>This is intended for Willow Garage personnel only, and has no public API.</p>
  </description>
  <author>Eric Berger, Kevin Watts</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_drive_life_test</url>
  <depend package="tf"/>
  <depend package="amcl"/>
  <depend package="map_server"/>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="topic_tools"/>
  <depend package="std_msgs"/>
  <depend package="std_srvs"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="ecl_sigslots" path="/trunk/ecl_core/ecl_sigslots" repo="ecl_core" repo_host="https://embedded-control-library.googlecode.com/svn">
  <description brief="Many to many sigslot comms with thread safety and posix style naming">

     Provides a signal/slot mechanism (in the same vein as qt sigslots, boost::signals etc.
     for intra-process communication. These include some improvements - they do not need 
     a preprocessor, are fully type safe,
     allow for simple connections via a posix style string identifier and are multithread-safe.

  </description>
  <author>Daniel Stonier</author>
  <license>BSD</license>
  <review notes="" status="doc reviewed"/>
  <url>http://snorriheim.dnsdojo.com/redmine/wiki/ecl</url>
  <depend package="ecl_license"/>
  <depend package="ecl_build"/>
  <depend package="ecl_config"/>
  <depend package="ecl_threads"/>
  <export>
    <cpp cflags="-I${prefix}/include/" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lecl_sigslots"/>
  </export>
</package><package name="move_head_to_button2" path="/trunk/pr2_elevator/move_head_to_button2" repo="ubc-ros-pkg" repo_host="https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg">
  <description brief="move_head_to_button2">

     move_head_to_button2

  </description>
  <author>caris</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/move_head_to_button2</url>
  <depend package="actionlib"/>
  <depend package="pr2_controllers_msgs"/>

</package><package name="trivial_garbage" path="" repo="cram_core" repo_host="https://github.com/moesenle/cram_core">
  <description brief="trivial-garbage">
      trivial-garbage
      http://www.cliki.net/trivial-garbage
  </description>
  <author>Luis Oliveira</author>
  <license>Public domain</license>
  <review notes="" status="unreviewed"/>
</package><package name="netft_ethercat_hardware" path="/stacks/netft/trunk/netft_ethercat_hardware" repo="netft" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="netft_ethercat_hardware">

    pr2_etherCAT/ethercat_hardware driver plugin for NetFT sensor
    NetFT does not use EtherCAT, however, having plugin allows 
    realtime controllers get data from NetFT box.

  </description>
  <author>Derek King</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/netft_ethercat_hardware</url>
  <depend package="roscpp"/>
  <depend package="realtime_tools"/>
  <depend package="ethercat_hardware"/>
  <depend package="netft_rdt_driver"/>
  <depend package="geometry_msgs"/>

  <export>
    <ethercat_hardware plugin="${prefix}/ethercat_device_plugin.xml"/>
  </export>


</package><package name="mary_tts" path="/knowledge/3rdparty/mary_tts" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="mary_tts">

     3rdparty wrapper for DFKI's Mary Text-to-speech system. Node listens to the /mary/tts topic and reads all published texts.

     Mary is based on human speech recordings, i.e. the models are larger than for formant-based systems like espeak, but the output is often more natural.

  </description>
  <author>Moritz Tenorth</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/mary_tts</url>

  <depend package="rosjava_jni"/>
  <depend package="std_msgs"/>
  <rosdep name="ant"/>
</package><package name="map_creation" path="" repo="cyphy_people_mapping" repo_host="https://cyphy-people-mapping.googlecode.com/hg/cyphy_people_mapping">
  <description brief="map_creation">

    map_creation 

  </description>
  <author>liz</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/imitation_mapper</url>
  <depend package="roscpp"/>
  <depend package="trajectory_clustering"/>

</package><package name="navigation_communications" path="" repo="pandora-auth-ros-pkg" repo_host="https://github.com/pandora-auth-ros-pkg/pandora-auth-ros-pkg">
  <description brief="navigation_communications">

     The navigation_communications package defines messages and services for navigation.

  </description>
  <author>Stamadiadou Marina, Allamanis Miltiadis, Sykoudi Pelagia</author>
  <license>MIT</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/navigation_communications</url>

</package><package name="seabee3_stabilizer" path="/trunk/cturtle/seabee3_stabilizer" repo="seabee3-ros-pkg" repo_host="http://seabee3-ros-pkg.googlecode.com/svn">
  <description brief="seabee3_stabilizer">

     seabee3_stabilizer

  </description>
  <author>John O'Hollaren</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/seabee3_stabilizer</url>
  <depend package="base_libs"/>
  <depend package="common_utils"/>
  <depend package="seabee3_driver_base"/>
  <depend package="xsens_node"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib"/>
  </export>

</package><package name="cliquer" path="/trunk/3rdparty/cliquer" repo="cmu-ros-pkg" repo_host="https://cmu-ros-pkg.svn.sourceforge.net/svnroot/cmu-ros-pkg">
  <description brief="Finds Cliques in a graph">
    Cliquer is a set of C routines for finding cliques in an arbitrary weighted graph. It uses an exact branch-and-bound algorithm recently developed by Patric Östergård. It is designed with the aim of being efficient while still being flexible and easy to use.
  </description>
  <author>Sampo Niskanen and Patric R. J. Östergård</author>
  <license url="http://www.coin3d.org/licensing/index_html#free-edition-gpl">GPL</license>
  <review notes="" status="3rdparty"/>
  <url>http://users.tkk.fi/pat/cliquer.html</url>
  <export>
    <doxymaker external="http://developer.nvidia.com/page/documentation.html"/>
  </export>
</package><package name="turtlebot_gazebo_plugins" path="" repo="turtlebot_simulator" repo_host="https://kforge.ros.org/turtlebot/simulator">
  <description brief="turtlebot_gazebo_plugins">

     turtlebot_plugins

  </description>
  <author>Nate Koenig</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/turtlebot_gazebo_plugins</url>
  <depend package="gazebo"/>
  <depend package="nav_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="turtlebot_node"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib"/>
    <gazebo plugin_path="${prefix}/lib"/>
  </export>

</package><package name="eros_log4cxx" path="/trunk/packages/rosdeps/core/eros_log4cxx" repo="eros" repo_host="https://code.ros.org/svn/eros">
  <description brief="Build recipe for cross-compiling the apache c++ logging library">

	This provides a source package for compiling the apache c++ logging library.
	Ordinarily this is not useful as you would install via your system's
	installation method (e.g. apt-get for ubuntu), but for cross-compiling 
    it provides the recipe needed to make a toolchain ros-ready.

  </description>
  <author>Daniel Stonier (d.stonier@gmail.com)</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/eros_log4cxx</url>
  <depend package="eros_license"/>
  <depend package="eros_apr_util"/>
  <depend package="eros_build"/>

</package><package name="herb_skills" path="" repo="behavior_engine" repo_host="https://github.com/timn/ros-behavior_engine">
  <description brief="herb_skills">
    Skills used for the HERB robot at Intel Research Pittsburgh.
  </description>
  <author>Tim Niemueller</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/herb_skills</url>
  <depend package="skiller"/>
  <depend package="roslua"/>
  <depend package="actionlib_lua"/>
  <depend package="actionlib_msgs"/>
  <depend package="fawkes_lua"/>
</package><package name="head_follow_people" path="/trunk/head_interaction_behavior/head_follow_people" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="head_follow_people">

     head_follow_people

  </description>
  <author>David Feil-Seifer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/head_follow_people</url>
  <depend package="people_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="opencv2"/>
  <depend package="tf"/>

</package><package name="color_classifier" path="/trunk/cturtle/color_classifier" repo="seabee3-ros-pkg" repo_host="http://seabee3-ros-pkg.googlecode.com/svn">
  <description brief="color_classifier">

     color_classifier

  </description>
  <author>Edward T. Kaszubski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://code.google.com/p/seabee3-ros-pkg/wiki/color_classifier</url>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="opencv2"/>
  <depend package="image_geometry"/>
  <depend package="cv_bridge"/>
  <depend package="image_transport"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="driver_base"/>
  <depend package="base_libs"/>
  <depend package="common_utils"/>
  <depend package="nodelet"/>
  <depend package="pluginlib"/>
  
  <export>
    <nodelet plugin="${prefix}/nodelet_plugins.xml"/>
    <cpp cflags="-std=c++0x -I${prefix}/include -I${prefix}/msg/cpp -I${prefix}/srv/cpp" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib"/>
  </export>

</package><package name="prosilica_gige_sdk" path="/stacks/prosilica_driver/trunk/prosilica_gige_sdk" repo="prosilica_driver" repo_host="https://code.ros.org/svn/ros-pkg">
<description brief="Prosilica GigE SDK">
  <p>
  The PvAPI SDK from AVT (originally Prosilica) allows users to control and
  capture images from AVT's GigE Vision cameras. The ROS package automatically
  downloads and extracts a tarball, installs headers and libraries, and builds a
  few useful example programs.
  </p>
  <p>
  We currently use version 1.20 of the SDK, released 7 April 2009. It is known
  to work with version 1.36 of the AVT GigE Vision camera firmware. We will
  update the version for bugfixes and for new features we deem particularly
  useful to vision applications.
  </p>
</description>
<author>Allied Vision Technologies. ROS package maintained by Patrick Mihelich.</author>
<license>Commercial</license>
<review notes="Jan 22 2010" status="Doc Reviewed"/>
<url>http://www.ros.org/wiki/prosilica_gige_sdk</url>
<export>
  <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lPvAPI"/>
  <doxymaker external="http://www.alliedvisiontec.com/us/products/software/avt-pvapi-sdk.html"/>
</export>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="aseba" path="" repo="ethzasl_aseba" repo_host="https://github.com/ethz-asl/ros-aseba">
  <description brief="aseba">

     Fetches aseba through git submodule and makes it available to ROS

  </description>
  <author>Stéphane Magnenat</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/aseba</url>
  <rosdep name="doxygen"/>
  <depend package="dashel"/>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lasebacore"/>
  </export>
</package><package name="bilibot_bringup" path="/trunk/bilibot/bilibot_bringup" repo="bilibot-ros-pkg" repo_host="http://bilibot-ros-pkg.googlecode.com/svn">
  <description brief="bilibot_bringup">

     bilibot_bringup provides roslaunch scripts for starting the bilibot base functionality.

  </description>
  <author>Jeff Rousseau</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/bilibot_bringup</url>

  <depend package="create_node"/>
  <depend package="bilibot_node"/>
  <depend package="openni_camera"/>
  <depend package="pointcloud_to_laserscan"/>
  <depend package="tf"/>

</package><package name="robotino_grappler_bringup" path="/robotino-ros-pkg/trunk/robotino_grappler/robotino_grappler_bringup" repo="robotino-ros-pkg" repo_host="http://svn.openrobotino.org">
  <description brief="robotino_grappler_bringup">

     robotino_grappler_bringup

  </description>
  <author>indorewala@servicerobotics.eu</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/robotino_grappler_bringup</url>
  <depend package="planning_environment"/>
  <depend package="simple_arm_server"/>
  <depend package="arm_kinematics_constraint_aware"/>

</package><package name="maxwell_arm_navigation" path="/trunk/maxwell/maxwell_arm_navigation" repo="vanadium-ros-pkg" repo_host="http://vanadium-ros-pkg.googlecode.com/svn">
  <description brief="Originally auto-generated by wizard, now heavily modified.">
    Originally auto-generated by wizard, now heavily modified.
  </description>
  <author>Michael Ferguson</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/maxwell_arm_navigation</url>

  <depend package="actionlib"/>
  <depend package="arm_navigation_msgs"/>
  <depend package="planning_environment"/>
  <depend package="arm_kinematics_constraint_aware"/>
  <depend package="ompl_ros_interface"/>
  <depend package="trajectory_filter_server"/>
  <depend package="constraint_aware_spline_smoother"/>
  <depend package="move_arm"/>
  <depend package="robot_self_filter"/>
  <depend package="collider"/>
  <depend package="maxwell_defs"/>
</package><package name="srvc" path="/trunk/highlevel/srvc" repo="ubc-ros-pkg" repo_host="https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg">
    <description brief="srvc">
        This package contains scripts and launch files for starting the software and robot leagues in the SRVC contest.
    </description>
    <author>Marius Muja</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/srvc</url>
    <depend package="online_results"/>
    <depend package="powerbot"/>
    <depend package="2dnav_powerbot"/>
    <depend package="felz_detector"/>
    <depend package="scene_server"/>
    <depend package="sift_detector"/>
    <depend package="batchdetector"/>
    <depend package="contour_detector"/>
    <depend package="hokuyo_node"/>
    <depend package="DPM"/>
    <depend package="webImages"/>
    <depend package="pyUtils"/>
    <depend package="executive_srvc"/>

</package><package name="clearpath_teleop" path="/trunk/clearpath_common/clearpath_teleop" repo="clearpath-ros-pkg" repo_host="http://clearpath-ros-pkg.googlecode.com/svn">
  <description brief="clearpath_teleop">
     The clearpath_teleop package contains basic nodes used to quickly launch your Clearpath Robotics platform with a joystick control.
  </description>
  <author>Mike Purvis</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/clearpath_teleop</url>
  <depend package="rospy"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="std_msgs"/>
</package><package name="ic2020_vodom" path="/trunk/ic2020_vodom" repo="ic2020" repo_host="http://ic2020.googlecode.com/svn">
  <description brief="ic2020_vodom">

     ic2020_vodom

  </description>
  <author>Sean Anderson</author>
  <license>CC BY-NC-SA 2.5</license>
  <review notes="" status="unreviewed"/>

  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="roscpp"/>
  <depend package="cv_bridge"/>
  <depend package="image_transport"/>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
</package><package name="ias_table_srvs" path="" repo="mapping" repo_host="http://code.in.tum.de/git/mapping.git">
  <description brief="ias_table_srvs">
    Services for table perception applications at TUM.
  </description>
  <author>Nico Blodow, Dejan Pangercic</author>
  <license>BSD</license>

  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="mapping_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="ias_table_msgs"/>
  <export>
    <cpp cflags="-I${prefix}/srv/cpp"/>
  </export>
</package><package name="interactive_segmentation_textured" path="/trunk/stacks/bosch_interactive_segmentation/interactive_segmentation_textured" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="interactive_segmentation_textured">
     interactive_segmentation_textured segments objects in the cluttered scenes
     by letting the user or the robot interact with 
     the objects and tracking of 2D features.
  </description>
  <author>Dejan Pangercic, Christian Bersch, Sarah Osentoski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_interactive_segmentation</url>
  <depend package="roscpp"/>
  <depend package="simple_robot_control"/>
  <depend package="cv_bridge"/>
  <depend package="camera_self_filter"/>
  <depend package="eigen_conversions"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="image_geometry"/>
  <depend package="geometry_msgs"/>

  <rosdep name="eigen"/>
</package><package name="interval_intersection" path="" repo="calibration" repo_host="http://kforge.ros.org/calibration/calibration">
  <description brief="Compute the intersection of many interval msgs">
    Tools for calculating the intersection of interval messages coming
    in on several topics. This package is experimental and unstable.
    Expect its APIs to change.
  </description>
  <author>Romain Thibaux</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.ros.org/wiki/interval_intersection</url>

  <!-- ros -->
  <depend package="roscpp"/>

  <!-- common_msgs -->
  <depend package="actionlib_msgs"/>

  <!-- common -->
  <depend package="actionlib"/>

  <!-- robot_calibration -->
  <depend package="calibration_msgs"/>
</package><package name="explore" path="/trunk/trunk/summit_xl_sim_fuerte/summit_xl_exploration/explore" repo="summit-xl-ros-stack" repo_host="http://summit-xl-ros-stack.googlecode.com/svn">
  <description brief="frontier based exploration">A node that provides frontier based exploration.</description>
  <author>Charles DuHadway (maintained by Benjamin Pitzer)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/explore</url>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="costmap_2d"/>
  <depend package="actionlib"/>
  <depend package="move_base_msgs"/>
  <depend package="tf"/>
  <depend package="roslib"/>
  <depend package="navfn"/>
  <depend package="visualization_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>
  
  <export>
  <cpp cflags="-I${prefix}/include `rosboost-cfg --cflags`" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib `rosboost-cfg --lflags thread` -lexplore"/>
  </export>
  
</package><package name="husky_description" path="" repo="clearpath_husky" repo_host="https://github.com/clearpathrobotics/clearpath_husky">
	<description brief="husky_description">
		Clearpath Husky A200 Robot Description
	</description>
	<author>Siddhant Ahuja/siddahuja@gmail.com/WAVELab, Ryan Gariepy/rgariepy@clearpathrobotics.com/Clearpath Robotics</author>
	<license>BSD</license>
	<review notes="" status="unreviewed"/>
	<url>http://ros.org/wiki/husky_description</url>
	<!--ROS specific-->
	<depend package="std_msgs"/>
	<depend package="roscpp"/>
	<depend package="rospy"/>
	<!--URDF specific-->
	<depend package="urdf"/>
	<depend package="xacro"/>
	<!--Gazebo specific-->
	<depend package="gazebo"/>
	<depend package="gazebo_tools"/>
	<depend package="gazebo_worlds"/>
	<depend package="gazebo_plugins"/>

	<depend package="robot_state_publisher"/>
	<depend package="joint_state_publisher"/>
	<export>
        <gazebo plugin_path="${prefix}/lib"/>
	</export>
	<export>
		<gazebo gazebo_media_path="${prefix}"/>
	</export>
</package><package name="biorob_description" path="/trunk/biorob_common/biorob_description" repo="biorob_common" repo_host="https://tu-darmstadt-ros-pkg.googlecode.com/svn">
  <description brief="biorob_description">
   This package contains the description (mechanical, kinematic, visual, etc.) of the BioRob robot.  
  </description>
  <author>Stefan Kohlbrecher</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/biorob_description</url>
  <depend package="urdf"/>
  <depend package="xacro"/>

</package><package name="freetail_object_manipulation" path="/trunk/freetail/freetail_object_manipulation" repo="swri-ros-pkg" repo_host="http://swri-ros-pkg.googlecode.com/svn">
  <description brief="freetail_object_manipulation">

     freetail_object_manipulation

  </description>
  <author>Shaun Edwards</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <!--url>http://ros.org/wiki/freetail_object_manipulation</url-->
  <depend package="trajectory_execution_monitor"/>
  <depend package="object_manipulator"/>
  <depend package="tabletop_object_detector"/>
  <depend package="planning_environment"/>
  <depend package="pr2_gripper_grasp_planner_cluster"/>
  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>

</package><package name="bilibot_logging" path="/trunk/bilibot/bilibot_logging" repo="bilibot-ros-pkg" repo_host="http://bilibot-ros-pkg.googlecode.com/svn">
  <description brief="bilibot_logging">

     bilibot_logging

  </description>
  <author>garratt</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/bilibot_logging</url>
  <depend package="rospy"/>
  <depend package="roscpp"/>

</package><package name="parsec_bringup" path="" repo="parsec" repo_host="https://code.google.com/p/parsec">
  <description brief="parsec_bringup">

     parsec_bringup

  </description>
  <author>Lorenz Mosenlechner</author>
  <license>Apache 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/parsec_bringup</url>

  <depend package="parsec_description"/>
  <depend package="parsec_odometry"/>
  <depend package="robot_state_publisher"/>
  <depend package="rospy"/>
  <depend package="geometry_msgs"/>
  <depend package="priority_mux"/>
  <depend package="cmd_vel_safety_filter"/>
  <depend package="compressed_visualization_transport"/>

</package><package name="object_recognition_gui" path="/stacks/tabletop_object_perception/branches/0.4-branch/object_recognition_gui" repo="tabletop_object_perception" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="object_detection_gui">

     A package for user-aided object detection and pose estimation
     on pre-segmented point clouds.

  </description>
  <author>David Gossow</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/object_detection_gui</url>

  <depend package="roscpp"/>
  
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  
  <depend package="rviz"/>
  <depend package="ogre_tools"/>
  
  <depend package="rviz_interaction_tools"/>
  
  <depend package="sensor_msgs"/>
  <depend package="stereo_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="geometric_shapes_msgs"/>
  
  <export>
    <rviz plugin="${prefix}/lib/rviz_plugin.yaml"/>
  </export>

</package><package name="random_walk" path="/stacks/odor_search/trunk/random_walk" repo="odor_search" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="random_walk">

     ROS implementation of a random walk algorithm based on the navigation stack.

  </description>
  <author>Gonçalo Cabrita</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/random_walk</url>
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="move_base_msgs"/>
  <depend package="tf"/>
  <depend package="angles"/>

</package><package name="ccny_opencv_cam" path="" repo="ccny_drivers" repo_host="http://robotics.ccny.cuny.edu/git/ccny-ros-pkg/ccny_drivers.git">
  <description brief="ccny_opencv_cam">

     ccny_opencv_cam

  </description>
  <author>Carlos Jaramillo</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ccny_opencv_cam</url>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="image_transport"/>
  <depend package="camera_info_manager"/>

  <depend package="cv_bridge"/>
  <rosdep name="opencv2.3"/>

</package><package name="pr2_laban_gazebo_demo" path="/stacks/wg_robots_gazebo/trunk/pr2_laban_gazebo_demo" repo="wg_robots_gazebo" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_laban_gazebo_demo">

     PR2 Laban motion analysis template project.
     For now it starts a PR2 and loads some default trajectory controllers.

  </description>
  <author>John Hsu</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_laban_gazebo_demo</url>
  <depend package="pr2_gazebo"/>
  <depend package="gazebo"/>
  <depend package="pr2_tuckarm"/>
  <depend package="robot_state_publisher"/>
  <depend package="pr2_common_action_msgs"/>
  <depend package="actionlib"/>
  <depend package="roscpp"/>
  <depend package="joint_trajectory_action"/>
  <depend package="geometry_msgs"/>
  <depend package="kinematics_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="tf"/>

</package><package name="hector_sensors_description" path="/branches/fuerte/hector_models/hector_sensors_description" repo="hector_models" repo_host="https://tu-darmstadt-ros-pkg.googlecode.com/svn">
  <description brief="hector_sensors_description">

     hector_sensors_description contains URDF xacro macros for sensors, so they are easily attachable to robot models and usable in gazebo.

  </description>
  <author>Stefan Kohlbrecher</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hector_sensors_description</url>
  
</package><package name="rfid_behaviors" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="rfid_behaviors">

     rfid_behaviors

  </description>
  <author>Travis Deyle</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rfid_behaviors</url>
  <depend package="rfid_hardware"/>

</package><package name="multi_camera1394" path="" repo="cyphy_vis_slam" repo_host="https://cyphy-vis-slam.googlecode.com/hg/cyphy_vis_slam">
  <description brief="IEEE 1394 Digital Camera driver">
    ROS driver for devices supporting the IEEE 1394 Digital Camera
    (IIDC) protocol. Supports the ROS image_pipeline, using libdc1394
    for device access.
  </description>
  <author>Jack O'Quin, Ken Tossell, Patrick Beeson,
    Nate Koenig, Andrew Howard,
    Damien Douxchamps, Dan Dennedy
  </author>
  <license>LGPL</license>
  <review notes="2010-06-19" status="Doc reviewed"/>
  <url>http://ros.org/wiki/camera1394</url>

  <depend package="camera_info_manager"/>
  <depend package="diagnostic_updater"/>
  <depend package="driver_base"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="image_transport"/>
  <depend package="nodelet"/>
  <depend package="tf"/>

  <rosdep name="libdc1394-dev"/>

  <export>
    <nodelet plugin="${prefix}/camera1394_nodelet.xml"/>
  </export>

</package><package name="janus" path="/trunk/janus" repo="ivs-ros-pkg" repo_host="http://svn.code.sf.net/p/ivs-ros-pkg/code">
  <description brief="janus">

     janus

  </description>
  <author>andre</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/janus</url>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="roslib"/>
</package><package name="cram_emacs_repl" path="/demos/ros_fall_school_2010/cram_emacs_repl" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="cram_emacs_repl">

     cram_emacs_repl

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cram_emacs_repl</url>
  <depend package="rosemacs"/>

</package><package name="nxt_python" path="" repo="foote-nxt" repo_host="https://nxt.foote-ros-pkg.googlecode.com/hg/">
  <description brief="nxt_python">
    This package automatically downloads version 1.1.2 of the
    <a href="http://code.google.com/p/nxt-python">NXT-python</a>
    library. We intend to upgrade to the 2.0.x version of this library
    when it becomes available. NXT-python is a libraray for
    controlling a LEGO NXT robot using the Python programming
    language. It can communicate using either USB or Bluetooth. It is
    available under the Free Software Foundation's GPL license.
  </description>
  <author>Douglas P Lau.</author>
  <license>BSD</license>
  <review notes="" status="3rdparty"/>
  <url>http://ros.org/wiki/nxt_python</url>
  <export>
    <doxymaker external="http://code.google.com/p/nxt-python"/>
    <rosdoc config="rosdoc.yaml"/>
  </export>

  <depend package="rospy"/>
  <rosdep name="python-usb"/>
  <rosdep name="python-bluez"/>


</package><package name="skin_safe_base" path="/trunk/stacks/bosch_skin/skin_safe_base" repo="bosch-ros-pkg-e" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg-e/code">
  <description brief="Prevent robot base from driving into objects using Bosch Skin">

	The skin_safe_base node uses skin patches mounted to the robot's base to determine in which directions the robot can drive without hitting obstacles. The node constantly publishes command_limits messages and prevents driving/truning in a specific direction if something blocks a sensor in that direction. The command_limits are enforced by using the safe_base_controller instead of the PR2's regular base_controller. The mapping of the patch ids to their location on the robots base is done using the skin_safe_base.yaml file.

  </description>
  <author>Sebastian Haug</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/skin_safe_base</url>

  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>

  <!-- skin --> 
  <depend package="skin_driver"/>
  
  <!-- safe_base_controller -> TwistLimits message --> 
  <depend package="safe_base_controller"/>
</package><package name="cob_mmcontroller" path="" repo="cob_manipulation" repo_host="git://github.com/ipa320/cob_manipulation">
  <description brief="cob_mmcontroller">

     cob_mmcontroller

  </description>
  <author>Alexander Bubeck</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_mmcontroller</url>
  
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="geometry_msgs"/>
  <depend package="trajectory_msgs"/>
  <depend package="kinematics_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="kdl_parser"/>
  <depend package="cob_srvs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="tf_conversions"/>
  <depend package="tf"/>
  <depend package="kdl"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="cob_srvs"/>
  <depend package="brics_actuator"/>
  <depend package="visualization_msgs"/>
  
</package><package name="pr2_wrappers" path="/stacks/pr2_object_manipulation/branches/0.6-branch/manipulation/pr2_wrappers" repo="pr2_object_manipulation" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_wrappers">

    A library of useful PR2 interface classes.

  </description>
  <author>Adam Leeper</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_wrappers</url>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="sensor_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="move_base_msgs"/>
  <depend package="pr2_common_action_msgs"/>
  <depend package="pr2_controllers_msgs"/>

  <!-- Robot interface -->
  <depend package="object_manipulator"/>
  

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -lpr2_wrappers"/>
  </export>

</package><package name="cad_model_publisher" path="/trunk/stacks/bosch_kitchen_models/cad_model_publisher" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="cad_model_publisher">
    cad_model_publisher publishes stl and dae format meshes as RVIZ markers.
  </description>
  <author>Dejan Pangercic</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cad_model_publisher</url>
  <depend package="visualization_msgs"/>

</package><package name="interface_tester" path="" repo="pandora-auth-ros-pkg" repo_host="https://github.com/pandora-auth-ros-pkg/pandora-auth-ros-pkg">
  <description brief="interface_tester">

     Interface Tests specific to the PANDORA platform

  </description>
  <author>Miltiadis Allamanis, Pelagia Amanatidou, Marina Stamatiadou</author>
  <license>MIT</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/interface_tester</url>
  <depend package="roscpp"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="diagnostic_updater"/>
  <depend package="state_manager"/>
  <depend package="state_manager_communications"/>
  <depend package="interface_testing"/>

  <export>
	<cpp cflags="-I${prefix}/src" lflags="-L${prefix}/lib"/>
  </export>

</package><package name="lwr_bringup" path="" repo="lwr_robot" repo_host="https://github.com/RCPRG-ros-pkg/lwr_robot">
  <description brief="lwr_bringup">

     lwr_bringup

  </description>
  <author>Konrad Banachowicz</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/lwr_bringup</url>

  <depend package="rtt"/>
  <deprnd package="rtt_rosnode"/>

  <depend package="rtt_std_msgs"/>
  <depend package="rtt_sensor_msgs"/>
  <depend package="rtt_actionlib_msgs"/>
  <depend package="rtt_trajectory_msgs"/>
  <depend package="rtt_diagnostic_msgs"/>
  <depend package="rtt_control_msgs"/>

  <depend package="fake_servo"/>
  <depend package="lwr_fri"/>
  <depend package="oro_joint_state_publisher"/>
  <depend package="oro_joint_trajectory_action"/>
  <depend package="joint_spline_trajectory_generator"/>

</package><package name="srs_assisted_grasping" path="" repo="srs_public" repo_host="git://github.com/ipa320/srs_public">
  <description brief="srs_assisted_grasping">

     srs_assisted_grasping

  </description>
  <author>Zdenek Materna</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/srs_assisted_grasping</url>
  <depend package="srs_assisted_grasping_msgs"/>
  <depend package="roscpp"/>
  <depend package="actionlib"/>
  <depend package="cob_script_server"/>
  <depend package="srs_interaction_primitives"/>
  <depend package="cob_srvs"/>
  <depend package="srs_assisted_grasping_msgs"/>
  <depend package="std_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="schunk_sdh"/>
  <depend package="opencv2"/>
  <depend package="brics_actuator"/>
  <depend package="trajectory_msgs"/>
  <depend package="urdf"/>
  
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib"/>
  </export>

</package><package name="lse_sensor_msgs" path="/stacks/lse_messages/trunk/lse_sensor_msgs" repo="lse_messages" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="lse_sensor_msgs">

     This package defines messages for commonly used sensors at the LSE, including
anemometers and odor sensors.  

  </description>
  <author>Gonçalo Cabrita and Pedro Sousa</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/lse_sensor_msgs</url>
  <depend package="roscpp"/>

</package><package name="2010_icra_epc_pull" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="2010_icra_epc_pull">
        This package contains code associated with the following
        publication: 
        Pulling Open Doors and Drawers: Coordinating an Omni-directional Base and a Compliant Arm with Equilibrium Point Control.
        Advait Jain and Charles C. Kemp. IEEE International Conference on Robotics and Automation (ICRA), 2010.
  </description>
  <author>Advait Jain, Charles C. Kemp (Healthcare Robotics Lab, Georgia Tech)</author>
  <license>New BSD</license>

  <depend package="rospy"/>
  <depend package="geometry_msgs"/>

  <depend package="hrl_lib"/>
  <depend package="hrl_hokuyo"/>
  <depend package="hrl_tilting_hokuyo"/>
  <depend package="zenither"/>
  <depend package="segway_vo"/>
  <depend package="vis_odometry_feat"/>
  <depend package="segway_omni"/>

</package><package name="door_perception_old" path="/trunk/dynamic_door_manipulation/door_perception_old" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="Tools for door perception">

     Prototyping package for door perception

  </description>
  <author>Felix Endres</author>
  <license/>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/door_perception</url>
  <!--depend package="articulation_models"/-->
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="tf"/>
  <!--depend package="pr2_python"/-->
  <!--depend package="pr2_tasks"/-->
  <!--head-pointer-->
  <depend package="actionlib"/>
  <depend package="articulation_msgs"/>
  <depend package="roscpp"/>
  <depend package="std_srvs"/>
  <depend package="pr2_controllers_msgs"/> 

</package><package name="hector_map_tools" path="/branches/fuerte/hector_slam/hector_map_tools" repo="hector_slam" repo_host="https://tu-darmstadt-ros-pkg.googlecode.com/svn">
  <description brief="hector_map_tools contains some functions related to accessing information from OccupancyGridMap maps.">

     hector_map_tools contains some functions related to accessing information from OccupancyGridMap maps.
     Currently consists of a single header.

  </description>
  <author>Stefan Kohlbrecher</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hector_map_tools</url>
  <depend package="nav_msgs"/>

  <rosdep name="eigen"/>
  
  <export>
  <cpp cflags="`pkg-config --cflags eigen3` -I${prefix}/include"/>
  </export>

</package><package name="trajectory_clustering" path="" repo="cyphy_people_mapping" repo_host="https://cyphy-people-mapping.googlecode.com/hg/cyphy_people_mapping">
  <description brief="trajectory_clustering">

     imitation_clustering

  </description>
  <author>liz</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/trajectory_clustering</url>
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  <depend package="costmap_2d"/>
  <depend package="nav_msgs"/>
  <depend package="eigen"/>
  <depend package="tf"/>
  <depend package="visualization_msgs"/>

</package><package name="astromech_samples" path="/astromech_samples" repo="astromech-ros" repo_host="https://astromech-ros.svn.sourceforge.net/svnroot/astromech-ros">
  <description brief="astromech_samples">

     astromech_samples: Some simple samples

  </description>
  <author/>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/astromech_samples</url>

  <depend package="rospy"/>      <!-- Standard Python library for ROS -->
  <depend package="joy"/>
  <depend package="sensor_msgs"/> <!-- Sensor messages -->
  <depend package="geometry_msgs"/>

</package><package name="anaglyph" path="" repo="amor-ros-pkg" repo_host="https://amor-ros-pkg.googlecode.com/hg/">
  <description brief="Get anaglyph image form a stereo camera">

     <tt>anaglyph</tt> combines left and right stereo camera images to produce a single stereoscopic image.

  </description>
  <author>Srećko Jurić-Kavelj</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/anaglyph</url>
  <depend package="sensor_msgs"/>
  <depend package="stereo_msgs"/>
  <depend package="image_transport"/>

</package><package name="register_image" path="/trunk/mapping/register_image" repo="ubc-ros-pkg" repo_host="https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg">
  <description brief="register_image">

     register_image

  </description>
  <author/>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/register_image</url>

  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="image_transport"/>
  <depend package="recognition_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="eigen"/>
  <depend package="tf"/>
  <export>
          <cpp cflags="-I${prefix}/srv/cpp"/>
  </export>
</package><package name="dynamixel_hardware_interface" path="/trunk/arrg/ua_experimental/dynamixel_hardware_interface" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="dynamixel_hardware_interface">
        dynamixel_hardware_interface
    </description>
    
    <author>Antons Rebguns</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/dynamixel_hardware_interface</url>
    
    <depend package="roscpp"/>
    <depend package="pluginlib"/>
    <depend package="actionlib"/>
    <depend package="gearbox"/>
    <depend package="control_msgs"/>
    <depend package="trajectory_msgs"/>
    <depend package="diagnostic_msgs"/>
    <depend package="diagnostic_updater"/>
    <depend package="std_srvs"/>
    
    <export>
        <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -ldynamixel_hardware_interface -ldynamixel_controllers"/>
        <dynamixel_hardware_interface plugin="${prefix}/controller_plugins.xml"/>
        <python path="${prefix}/lib"/>
        <python path="${prefix}/src"/>
    </export>

</package><package name="face_recognition" path="" repo="procrob_functional" repo_host="git://github.com/procrob/procrob_functional">
  <description brief="face_recognition">
A ROS package for face recognition in video stream.
Face recognition is performed using Eigenfaces (also called &quot;Principal Component Analysis&quot; or PCA) by utilizing the c++ source code provided by Shervin Emami (http://www.shervinemami.info/faceRecognition.html)
  </description>
  <author>Pouyan Ziafati</author>
  <email>pouyan.ziafati@uni.lu</email>
  <license>Attribution-NonCommercial 3.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/face_recognition</url>
  <depend package="actionlib"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="roslib"/>
  <depend package="std_msgs"/>
  <depend package="actionlib_msgs"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="image_transport"/>

</package><package name="tools" path="/trunk/next_best_view/ros_nbv/tools" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="tools">

     tools

  </description>
  <author>Christian Potthast</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/tools</url>
  <depend package="roscpp"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="visualization_msgs"/>

</package><package name="robot_self_filter_color" path="/stacks/pr2_object_manipulation/branches/0.6-branch/perception/robot_self_filter_color" repo="pr2_object_manipulation" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="robot_self_filter_color">
    The robot self filter is a package that allows you to filter out robot body parts from sensor information using the known positions and orientations of these parts.  (same as robot_self_filter in arm_navigation, but with PointXYZRGB.)
  </description>
  <author>Ioan Sucan</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/robot_self_filter_color</url>

  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="filters"/>
  <depend package="sensor_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="geometric_shapes"/>
  <depend package="urdf"/>
  <depend package="resource_retriever"/>
  <depend package="pcl"/>
  <depend package="common_rosdeps"/>

  <rosdep name="assimp"/>

  <export>
    <cpp cflags="`pkg-config --cflags eigen3` -I${prefix}/include `rosboost-cfg --cflags`" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lrobot_self_filter"/>
  </export>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="rve_render_server" path="" repo="visualization_engine" repo_host="https://kforge.ros.org/visengine/hg">
  <description brief="rve_render_server">

     rve_render_server

  </description>
  <author>Josh Faust</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rve_render_server</url>
  <depend package="ogre"/>
  <depend package="ogre_tools"/>
  <depend package="rve_common"/>
  <depend package="rve_interfaces"/>
  <depend package="rve_mesh_loader"/>
  <depend package="sensor_msgs"/>
  <depend package="roscpp"/>
  
  <export>
  	<cpp cflags="-I${prefix}/include" lflags="-lrve_render_server -L${prefix}/lib -Wl,-rpath,${prefix}/lib"/>
  </export>
</package><package name="astromech_data" path="/astromech_data" repo="astromech-ros" repo_host="https://astromech-ros.svn.sourceforge.net/svnroot/astromech-ros">
  <description brief="astromech_data">

     astromech_data

  </description>
  <author/>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/astromech_data</url>

</package><package name="locloc_erratic" path="/trunk/low_cost_localization/locloc_erratic" repo="stanford-ros-pkg" repo_host="https://stanford-ros-pkg.googlecode.com/svn">
  <description brief="locloc_erratic">
    Low-cost localization experiments on an erratic robot
  </description>
  <author>Morgan Quigley and Brian Chung</author>
  <license>BSD</license>
  <depend package="roscpp"/>
  <depend package="wifi_sniffer"/> 
</package><package name="freetail_grasp_planning" path="/trunk/freetail/freetail_grasp_planning" repo="swri-ros-pkg" repo_host="http://swri-ros-pkg.googlecode.com/svn">
  <description brief="freetail_grasp_planning">

     freetail_grasp_planning

  </description>
  <author>Jorge L. Nicho</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/freetail_grasp_planning</url>
  <depend package="object_manipulator"/>
  <depend package="object_manipulation_msgs"/>
  <depend package="pr2_gripper_grasp_planner_cluster"/>

</package><package name="soem_ebox" path="" repo="soem" repo_host="http://git.mech.kuleuven.be/robotics/soem.git">
    <description brief="Orocos soem_ebox Component package">
        This package contains the components of the soem_ebox package
    </description>
    <author>Ruben Smits</author>
    <license>BSD</license>
    <depend package="rtt"/>
    <depend package="rtt_rosnode"/>
    <depend package="soem_core"/>
    <depend package="soem_master"/>
</package><package name="sift_lowe" path="/3rdparty/sift_lowe" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="sift_lowe">

     Classics - Lowe's Sift feature.

  </description>
  <author>David Lowe</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://people.cs.ubc.ca/~lowe/keypoints/</url>

</package><package name="hydra" path="/trunk/hydra" repo="stanford-ros-pkg" repo_host="https://stanford-ros-pkg.googlecode.com/svn">
  <description brief="hydra">
     hydra
  </description>
  <author>Morgan Quigley</author>
  <depend package="roscpp"/>
  <depend package="yaml_cpp"/>
  <depend package="rospy"/>
  <depend package="bullet"/>
  <depend package="geometry_msgs"/>
  <depend package="tf"/>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -lhydra"/>
  </export>
</package><package name="pr2_approach_table" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="pr2_approach_table">

     Provides a behavior which commands the base to move forward slowly
     while monitoring for collisions, stopping when very close to the first
     obstacle.  Designed specifically to approach a table within grasping
     distance.

  </description>
  <author>Travis Deyle, Advisor: Prof. Charlie Kemp (Healthcare Robotics Lab
    at Georgia Tech)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_approach_table</url>
  <depend package="costmap_services"/>
  <depend package="geometry_msgs"/>
  <depend package="actionlib_msgs"/>
  <depend package="actionlib"/>
  <depend package="smach"/>
  <depend package="smach_ros"/>
  <depend package="move_base_msgs"/>
  <depend package="tf"/>
</package><package name="people_tracker" path="" repo="cyphy_people_mapping" repo_host="https://cyphy-people-mapping.googlecode.com/hg/cyphy_people_mapping">
  <description brief="people_tracker">

     people_tracker

  </description>
  <author>Liz Murphy</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/people_tracker</url>
  <depend package="roscpp"/>
  <depend package="roslib"/>
  <depend package="geometry_msgs"/>
  <!--depend package="openni"/-->
  <!--depend package="nite"/-->
  <depend package="sound_play"/>
  <depend package="sensor_msgs"/>

</package><package name="quickdev_examples" path="/trunk/quickdev/quickdev_examples" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="quickdev_examples">

     A group of examples using tools from quickdev_cpp

  </description>
  <author>Edward T. Kaszubski ( ekaszubski@gmail.com )</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/quickdev_examples</url>
  <depend package="quickdev_cpp"/>
  <depend package="nodelet"/>
  <export>
    <nodelet plugin="${prefix}/nodelets/nodelet_plugins.xml"/>
  </export>
</package><package name="pr2_reachability_costmap" path="" repo="cram_pr2" repo_host="https://github.com/moesenle/cram_pr2">
  <description brief="pr2_reachability_costmap">

     pr2_reachability_costmap

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_reachability_costmap</url>
  <depend package="kinematics_msgs"/>
  <depend package="location_costmap"/>
  <depend package="roslisp_runtime"/>
  <depend package="cl_transforms"/>
  <depend package="cl_tf"/>
  <depend package="cram_utilities"/>
  <depend package="cram_math"/>
  <depend package="cram_reasoning"/>
  <depend package="cram_roslisp_common"/>
  <depend package="cram_manipulation_knowledge"/>
  <depend package="designators_ros"/>
</package><package name="phidgets_ir" path="" repo="phidgets_drivers" repo_host="https://github.com/ccny-ros-pkg/phidgets_drivers">
  <description brief="Driver for the Phidgets IR device">

     Driver for the Phidgets IR.

  </description>
  <author>Ivan Dryanovski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/phidgets_ir</url>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="std_srvs"/>
  <depend package="std_msgs"/>
  <depend package="phidgets_api"/>
  <depend package="nodelet"/>

</package><package name="hector_nist_arena_designer" path="/trunk/hector_nist_arenas_gazebo/hector_nist_arena_designer" repo="hector_nist_arenas_gazebo" repo_host="https://tu-darmstadt-ros-pkg.googlecode.com/svn">
  <description brief="hector_nist_arena_designer">

     hector_nist_arena_designer is a simple GUI for the fast and easy creation of test scenarios involving NIST standard test methods for response robots.

  </description>
  <author>Johannes Simon, Stefan Kohlbrecher</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hector_nist_arena_designer</url>

</package><package name="process_info" path="/stacks/ros_experimental/trunk/process_info" repo="ros_experimental" repo_host="https://code.ros.org/svn/ros">
  <description brief="process_info">

     process_info

  </description>
  <author>Ethan Dreyfuss</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://pr.willowgarage.com/wiki/process_info</url>
  
  <rosdep name="libgtop"/>

  <export>
    <cpp cflags="`pkg-config --cflags libgtop-2.0 glib-2.0` -I${prefix}/include" lflags="`pkg-config --libs libgtop-2.0 glib-2.0`"/>
  </export>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="roscon_urdf" path="/branches/stable/urdf_tools/roscon_urdf" repo="wu-ros-pkg" repo_host="https://wu-robotics.googlecode.com/svn">
  <description brief="ROSCON 2012 URDF">
    URDF Files from David V. Lu's 2012 ROSCon presentation
  </description>
  <author>David V. Lu!!</author>
  <license>BSD</license>
  <url>http://ros.org/wiki/roscon_urdf</url>
  <depend package="urdf"/>
  <depend package="joint_state_publisher"/>
  <depend package="robot_state_publisher"/>

</package><package name="rqt_robot_steering" path="" repo="rqt" repo_host="https://kforge.ros.org/visualization/rqt">
  <description brief="Plugin for steering a robot">
    rqt_robot_steering provides a GUI plugin for steering a robot using Twist messages.
  </description>
  <author>Dirk Thomas</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rqt_robot_steering</url>

  <depend package="rqt_gui"/>
  <depend package="rqt_gui_py"/>
  <depend package="rostopic"/>
  <depend package="geometry_msgs"/>

  <export>
    <rqt_gui plugin="${prefix}/plugin.xml"/>
  </export>
</package><package name="strike_pose" path="/trunk/turn_taking/strike_pose" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="strike_pose">

     strike_pose

  </description>
  <author>David Feil-Seifer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/strike_pose</url>
  <depend package="sensor_msgs"/>
	<depend package="pose_model"/>
</package><package name="android_camera_viewer" path="/trunk/jsk_smart_apps/android_camera_viewer" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="android_camera_viewer">
     android_camera_viewer
  </description>
  <author>Damon Kohler (damonkohler@google.com)</author>
  <license>Apache 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/android_camera_viewer</url>
  <depend package="std_msgs"/>
  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>
</package><package name="rubiks_graph" path="" repo="pr2_rubiks_solver" repo_host="https://github.com/uu-isrc-robotics/pr2_rubiks_solver">
  <description brief="rubiks_graph">

     rubiks_graph

  </description>
  <author>Lorenzo Riano</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rubiks_graph</url>
  <depend package="rospy"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="motion_planning_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="kinematics_msgs"/>
  <depend package="tf"/>
  <depend package="polled_camera"/>
  <depend package="pr2_control_utilities"/>

</package><package name="erratic_player" path="/stacks/erratic_robot/trunk/erratic_player" repo="erratic_robot" repo_host="https://ua-ros-pkg.googlecode.com/svn">
    <description brief="Videre Erratic mobile base ROS driver.">
        A ROS node that wraps up the Player erratic driver, which provides access to the Erratic mobile robot.
    </description>

    <author>Maintained by Antons Rebguns</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/erratic_player</url>

    <depend package="roscpp"/>
    <depend package="tf"/>
    <depend package="player"/>
    <depend package="geometry_msgs"/>
    <depend package="nav_msgs"/>
    <depend package="std_msgs"/>
    <depend package="sensor_msgs"/>
</package><package name="jsk_pcl_ros" path="/trunk/jsk_pcl_ros" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="jsk_pcl_ros">

     jsk_pcl_ros

  </description>
  <author>ryohei ueda</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/jsk_pcl_ros</url>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="tf"/>
  <depend package="stereo_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="stereo_msgs"/>
  <depend package="nodelet"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="std_srvs"/>
  <depend package="image_transport"/>
  <depend package="image_geometry"/>

  <rosdep name="libtbb"/>

  <export>
    <nodelet plugin="${prefix}/jsk_pcl_nodelets.xml"/>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -ljsk_pcl_ros"/>
  </export>

  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>

</package><package name="map_compressor" path="/trunk/stacks/bosch_web_visualization/map_compressor" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <catkin/>
  <description brief="map_compressor">A helper node that subscribes to /map topic, compresses and publishes from /compressed_map topic.</description>
  <author>Bener Suay</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/map_compressor</url>
  <depend package="roscpp"/>
  <depend package="nav_msgs"/>
  <depend package="std_msgs"/>
</package><package name="topological_map_2d" path="/stacks/topological_navigation/trunk/topological_map_2d" repo="topological_navigation" repo_host="https://code.ros.org/svn/wg-ros-pkg">
<description>
Defines 2d topological map, which is a set of 2d occupancy grids connected by approximate pose constraints.
</description>
<author>Bhaskara Marthi</author>
<license>BSD</license>
<review notes="" status="unreviewed"/>
<depend package="roscpp"/>
<depend package="topological_nav_msgs"/>
<depend package="graph_mapping_utils"/>

<export>
<cpp cflags="-I${prefix}/include -I${prefix}/srv/cpp" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -ltopological_map_2d"/>
</export>
<url>http://ros.org/wiki/topological_map_2d</url>
</package><package name="settlerlib" path="" repo="calibration" repo_host="http://kforge.ros.org/calibration/calibration">
  <description brief="A set of routines to help with creating a settler">
    Defines helper functions and routines that greatly help when trying to create a settler
    for a specific sensor channel. This package is experimental and unstable.
    Expect its APIs to change.
  </description>
  <author>Vijay Pradeep</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.ros.org/wiki/settlerlib</url>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -lsettlerlib"/>
  </export> 

  <!-- ros -->
  <depend package="roscpp"/>

  <!-- calibration -->
  <depend package="calibration_msgs"/>
</package><package name="ADEPT_VIPER_S650_ikfast_arm_navigation" path="/trunk/adept/ADEPT_VIPER_S650_ikfast_arm_navigation" repo="swri-ros-pkg" repo_host="http://swri-ros-pkg.googlecode.com/svn">
  <description brief="ADEPT_VIPER_S650_arm_navigation">

     ADEPT_VIPER_S650_arm_navigation

  </description>
  <author>Jorge Nicho</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ADEPT_VIPER_S650_arm_navigation</url>
  <depend package="kinematics_base"/>
  <depend package="planning_environment"/>
  <depend package="arm_kinematics_constraint_aware"/>
  <depend package="ompl_ros_interface"/>
  <depend package="trajectory_filter_server"/>
  <depend package="constraint_aware_spline_smoother"/>
  <depend package="move_arm"/>
  <export>
    <kinematics_base plugin="${prefix}/kinematics_plugins.xml"/>
  </export>
</package><package name="armadillo" path="/trunk/swri_demos/armadillo" repo="swri-ros-pkg" repo_host="http://swri-ros-pkg.googlecode.com/svn">
  <description brief="armadillo">

     armadillo

  </description>
  <author>Shaun Edwards</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/armadillo</url>
  <depend package="roscpp"/>
  <depend package="actionlib"/>
  <depend package="object_manipulation_msgs"/>
  <depend package="simple_message"/>
</package><package name="longhorn" path="/trunk/swri_demos/longhorn" repo="swri-ros-pkg" repo_host="http://swri-ros-pkg.googlecode.com/svn">
  <description brief="longhorn">

     longhorn

  </description>
  <author>Shaun Edwards</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/longhorn</url>
  <depend package="roscpp"/>
  <depend package="actionlib"/>
  <depend package="object_manipulation_msgs"/>
  <depend package="simple_message"/>

</package><package name="mini_max_apps" path="/trunk/mini_max/mini_max_apps" repo="vanadium-ros-pkg" repo_host="http://vanadium-ros-pkg.googlecode.com/svn">
  <description brief="mini_max_apps"/>
  <author>Michael Ferguson</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/mini_max_apps</url>
  <depend package="rospy"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="control_msgs"/>
</package><package name="xsens_component" path="" repo="xsens_hardware" repo_host="http://git.mech.kuleuven.be/robotics/xsens_hardware.git">
  <description brief="xsens_mti_orocos">

     Example Orocos component which uses the <a href="http://www.ros.org/wiki/xsens_mti">xsens_mti</a> library to interface the MTI sensor.

  </description>
  <author>Koen Buys - koen.buys@mech.kuleuven.be, Steven Bellens - steven.bellens@mech.kuleuven.be</author>
  <license>LGPLv2.1 / BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/xsens_mti_orocos</url>
  <depend package="xsens_mti"/>
  <depend package="rtt"/>
  <depend package="rtt_tf"/>
  <depend package="rtt_rosnode"/>
  <depend package="orocos_kdl"/>

</package><package name="torque_check" path="/sbpl_door_planning/trunk/torque_check" repo="sbpl_door_planning" repo_host="https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs">
  <description brief="torque_check">

     torque_check

  </description>
  <author>steve</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/torque_check</url>
  <depend package="kinematics_msgs"/>
  <depend package="kdl_parser"/>
  <depend package="pr2_controller_interface"/>
  <depend package="pr2_mechanism_model"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="pr2_arm_kinematics"/>
  <depend package="actionlib"/>

</package><package name="coreslam" path="/trunk/slam_coreslam/coreslam" repo="albany-ros-pkg" repo_host="http://albany-ros-pkg.googlecode.com/svn">
  <description brief="coreslam">

This package contains CoreSLAM, from OpenSlam, and a ROS wrapper.

  </description>
  <author>Bruno Steuxa and Oussama El Hamzaoui; ROS Wrapper by Michael Ferguson</author>
  <license>MIT</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/coreslam</url>

  <depend package="roscpp"/>
  <depend package="rosconsole"/>
  <depend package="std_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="std_msgs"/>
  <depend package="tf"/>
  <depend package="message_filters"/>

</package><package name="rubiks_solver" path="" repo="pr2_rubiks_solver" repo_host="https://github.com/uu-isrc-robotics/pr2_rubiks_solver">
  <description brief="rubiks_solver">

     rubiks_solver

  </description>
  <author>Chris Burbridge</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rubiks_solver</url>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>

</package><package name="neo_platformctrl_diff" path="" repo="neo_driver" repo_host="https://github.com/neobotix/neo_driver">
  <description brief="neo_platformctrl_diff">

     neo_platformctrl_diff

  </description>
  <author>Timo Hackel</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/neo_platformctrl_diff</url>

  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="trajectory_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="tf"/>
  <export>
    <cpp cflags="-I${prefix}/common/include -I${prefix}/ros/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lneo_platformctrl_diff"/>
  </export>

</package><package name="pr2_se_calibration_launch" path="" repo="pr2_calibration" repo_host="https://kforge.ros.org/calibration/pr2_calibration">
  <description brief="pr2_se_calibration_launch">

     pr2_se_calibration_launch 

  </description>
  <author>Adam Leeper, Vijay Pradeep</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_se_calibration_launch</url>

  <depend package="pr2_calibration_launch"/>

</package><package name="alsa_audio" path="" repo="usc-clmc-ros-pkg" repo_host="https://github.com/usc-clmc/usc-clmc-ros-pkg">
  <description brief="alsa_audio">

     alsa_audio

  </description>
  <author>Peter Pastor</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/alsa_audio</url>

  <depend package="roscpp"/>
  <depend package="usc_utilities"/>
  <depend package="diagnostic_updater"/>

  <depend package="visualization_msgs"/>
  <depend package="geometry_msgs"/>
  
  <rosdep name="libfftw3-3"/>
  <rosdep name="libfftw3-dev"/>
  <rosdep name="libasound2"/>
  <rosdep name="libasound2-dev"/>

  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg_gen/cpp" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lalsa_audio"/>
  </export>
  
</package><package name="kurt_bringup" path="" repo="kurt_driver" repo_host="http://kos.informatik.uni-osnabrueck.de/kurt_driver.git">
  <description brief="kurt_bringup">

     kurt_bringup

  </description>
  <author>Jochen Sprickerhof</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/kurt_bringup</url>
  <depend package="kurt_description"/>
  <depend package="kurt_base"/>
  <depend package="kurt_teleop"/>
  <depend package="robot_state_publisher"/>

  <depend package="sicktoolbox_wrapper"/>
  <depend package="laser_assembler"/>
  <depend package="rotunit_snapshotter"/>

</package><package name="semantic_map_costmap" path="" repo="cram_highlevel" repo_host="https://github.com/moesenle/cram_highlevel">
  <description brief="semantic_map_costmap">

     semantic_map_costmap

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/semantic_map_costmap</url>
  <depend package="cl_json_pl_client"/>
  <depend package="cl_transforms"/>
  <depend package="cl_semantic_map_utils"/>
  <depend package="cram_roslisp_common"/>
  <depend package="cram_projection"/>
  <depend package="location_costmap"/>
  <depend package="alexandria"/>
  <depend package="semantic_map_cache"/>

</package><package name="rfid_datacapture" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="rfid_datacapture">

     rfid_datacapture

  </description>
  <author>Travis Deyle</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rfid_datacapture</url>
  <depend package="rfid_demos"/>
  <depend package="rfid_behaviors"/>
  <depend package="costmap_services"/>
  <depend package="rfid_servoing"/>
  <depend package="rfid_nav"/>
  <depend package="rfid_hardware"/>

</package><package name="rosbag_analysis" path="" repo="stacks/rosbag_analysis" repo_host="git://github.com/laas/rosbag_analysis">
  <description brief="rosbag analysis tool">

    This tool extracts data as gnuplot compatible files so that one
    can easily analyze rosbag data offline.

  </description>
  <author>Thomas Moulard</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosbag_analysis</url>

  <depend package="rosbag"/>

  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="std_msgs"/>
  <depend package="tf"/>
</package><package name="localization_defs" path="/trunk/cturtle/localization_defs" repo="seabee3-ros-pkg" repo_host="http://seabee3-ros-pkg.googlecode.com/svn">
  <description brief="localization_defs">

     localization_defs

  </description>
  <author>Edward T. Kaszubski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/localization_defs</url>
  <depend package="roscpp"/>
  <depend package="opencv2"/>
  <depend package="sonar_node"/>
  <depend package="visualization_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="tf"/>
  <depend package="base_libs"/>
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp -I${prefix}/srv/cpp" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -llocalization_defs"/>
  </export>
</package><package name="joint_states_settler" path="" repo="calibration" repo_host="http://kforge.ros.org/calibration/calibration">
  <description brief="Detect when a set of joints has stopped moving">
     Provides a node that reports how long a subset of joints has been
     settled. That is, it calculates how long a set of joints has remained
     within a specified threshold. This package is experimental and unstable.
     Expect its APIs to change.
  </description>
  <author>Vijay Pradeep</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.ros.org/wiki/joint_states_settler</url>

  <!-- ROS -->
  <depend package="roscpp"/>

  <!-- common_msgs -->
  <depend package="actionlib_msgs"/>
  <depend package="sensor_msgs"/>

  <!-- common -->
  <depend package="actionlib"/>

  <!-- calibration -->
  <depend package="settlerlib"/>
  <depend package="calibration_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/msg/cpp -I${prefix}/include" lflags="-L${prefix}/lib -ljoint_states_settler"/>
  </export>

</package><package name="executor" path="" repo="roboframenet" repo_host="https://kforge.ros.org/appmanandroid/roboframenet">
  <description brief="executor">

    executor takes the actions planned by the arbitrator and executes them.

  </description>
  <author>Brian Thomas</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/executor</url>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="roboframenet_msgs"/>
  <depend package="rospy"/>
  <depend package="std_msgs"/>

</package><package name="landmark_projector" path="/trunk/cturtle/landmark_projector" repo="seabee3-ros-pkg" repo_host="http://seabee3-ros-pkg.googlecode.com/svn">
  <description brief="landmark_projector">

     landmark_projector

  </description>
  <author>Mike Gerow</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/landmark_projector</url>
  <depend package="base_libs"/>
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  <depend package="opencv2"/>
  <depend package="localization_defs"/>
  <depend package="color_segmenter"/>
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp -I${prefix}/srv/cpp" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -llandmark_projector"/>
  </export>

</package><package name="pcl_filter" path="/trunk/distribution/brown_remotelab/pcl_filter" repo="brown-ros-pkg" repo_host="http://brown-ros-pkg.googlecode.com/svn">
  <description brief="pcl_filter">

     pcl_filter

  </description>
  <author>Jihoon</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pcl_filter</url>
  <depend package="roscpp"/>
  <depend package="pcl_ros"/>
  <depend package="sensor_msgs"/>
  <depend package="std_msgs"/>

</package><package name="pr2_bringup" path="" repo="pr2_robot" repo_host="https://kforge.ros.org/pr2robot/hg">
  <description brief="pr2_bringup">

  Launch files and scripts needed to bring a PR2 up into a running state.

  </description>
  <author>Wim Meeussen</author>
  <license>BSD</license>
  <review notes="" status="Doc Reviewed"/>
  <url>http://ros.org/wiki/pr2_bringup</url>

  <depend package="pr2_description"/>
  <depend package="pr2_machine"/>
  <depend package="pr2_etherCAT"/>
  <depend package="pr2_controller_manager"/>
  <depend package="pr2_controller_configuration"/>
  <depend package="pr2_calibration_controllers"/>
  <depend package="robot_mechanism_controllers"/>
  <depend package="ethercat_trigger_controllers"/>
  <depend package="pr2_head_action"/>
  <depend package="pr2_gripper_action"/>
  <depend package="joint_trajectory_action"/>
  <depend package="single_joint_position_action"/>

  <depend package="tf2_ros"/>
  <depend package="robot_state_publisher"/>
  <depend package="robot_pose_ekf"/>
  <depend package="pr2_camera_synchronizer"/>
  <depend package="stereo_image_proc"/>

  <depend package="hokuyo_node"/>
  <depend package="wifi_ddwrt"/>
  <depend package="microstrain_3dmgx2_imu"/>
  <depend package="wge100_camera"/>
  <depend package="prosilica_camera"/>
  <depend package="sound_play"/>
  <depend package="joy"/>
  <depend package="std_srvs"/>
  <depend package="pr2_run_stop_auto_restart"/>
  <depend package="rosbag"/>
  <depend package="pr2_power_board"/>
  <depend package="ocean_battery_driver"/>
  <depend package="power_monitor"/>
  <depend package="pr2_computer_monitor"/>
  <depend package="diagnostic_aggregator"/>
  <depend package="pr2_dashboard_aggregator"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="rocket_driver" path="" repo="ros_rocket" repo_host="https://github.com/trainman419/ros_rocket">
  <description brief="rocket_driver">

      A ROS driver for the ever-popular Dream Cheeky USB Rocket launchers.

  </description>
  <author>Austin Hendrix</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rocket_driver</url>
  <depend package="rospy"/>
  <depend package="rocket_msgs"/>
  <depend package="std_srvs"/>

  <rosdep name="pyusb"/>

</package><package name="pr2_mechanism_msgs" path="" repo="pr2_mechanism" repo_host="https://kforge.ros.org/pr2mechanism/hg">
  <description brief="pr2_mechanism_msgs">
     This package defines services that are used to communicate with
     the realtime control loop. It also defines messages
     that represent the state of the realtime controllers, the joints
     and the actuators.
  </description>
  <author>Stuart Glaser sglaser@willowgarage.com, Wim Meeussen</author>
  <license>BSD</license>
  <review notes="" status="doc reviewed"/>
  <url>http://ros.org/wiki/pr2_mechanism_msgs</url>
  <depend package="std_msgs"/>
  <export>
    <cpp cflags=""/>
  </export>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="rubiks_inspect" path="" repo="pr2_rubiks_solver" repo_host="https://github.com/uu-isrc-robotics/pr2_rubiks_solver">
  <description brief="rubiks_inspect">

     rubiks_inspect

	 Inspects a rubiks cube using Prosilica Camera, finding the colour of
	 each cubie.

  </description>
  <author>Chris Burbridge</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rubiks_inspect</url>
  <depend package="roscpp"/>
  <depend package="prosilica_camera"/>
  <depend package="opencv2"/>
  <depend package="image_transport"/>
  <depend package="image_geometry"/>
  <depend package="tf"/>
  <depend package="cv_bridge"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="polled_camera"/>

  <depend package="actionlib"/>
  <depend package="rubiks_graph"/>
  <depend package="rubiks_solver"/>

</package><package name="ds_pr2_drop_drink" path="/trunk/stacks/drink_serving/ds_pr2_drop_drink" repo="bosch-ros-pkg-e" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg-e/code">
  <description brief="ds_pr2_drop_drink">

     ds_drop_drink

  </description>
  <author>Dejan Pangercic</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ds_drop_drink</url>
  <depend package="roscpp"/>
  <depend package="actionlib"/>
  <depend package="geometry_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="marker_detector_tbot"/>
  <depend package="bosch_drawer_executive"/>
  <depend package="simple_robot_control"/>
</package><package name="openrave_robot_filter" path="/trunk/openrave_planning/openrave_robot_filter" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="Robot Self Filtering">
    Utilities for filtering the robot out of sensor data
  </description>
  <author>Rosen Diankov (rdiankov@cs.cmu.edu)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://pr.willowgarage.com/wiki/robot_self_filter</url>
  <export>
    <openrave pluginpath="${prefix}/lib"/>
  </export>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="filters"/>
  <depend package="sensor_msgs"/>
  <depend package="resource_retriever"/>
  <depend package="openrave"/>
  <rosdep name="qhull"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="map_server" path="" repo="navigation" repo_host="https://kforge.ros.org/navigation/navigation">
  <description brief="Static map server">

    map_server provides the <tt>map_server</tt> ROS <a href="http://www.ros.org/wiki/Nodes">Node</a>, which offers map data as a ROS <a href="http://www.ros.org/wiki/Services">Service</a>. It also provides the <tt>map_saver</tt> command-line utility, which allows dynamically generated maps to be saved to file.

  </description>
  <author>Brian Gerkey, Tony Pratkanis</author>
  <license>BSD</license>
  <review notes="" status="Doc reviewed"/>
  <url>http://ros.org/wiki/map_server</url>
  <depend package="rosconsole"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="nav_msgs"/>
  <depend package="tf"/>
  <depend package="common_rosdeps"/>
  <export>
     <cpp cflags="-I${prefix}/include `rosboost-cfg --cflags`" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib `rosboost-cfg --lflags thread`"/>
  </export>

  <rosdep name="python-imaging"/>
  <rosdep name="python-yaml"/>
  <rosdep name="yaml-cpp"/>
  <rosdep name="sdl-image"/>


  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="smach_viewer" path="" repo="executive_smach_visualization" repo_host="https://kforge.ros.org/smach/visualization">
  <description brief="smach_viewer">
    The smach viewer is a GUI that shows the state of hierarchical
    SMACH state machines. It can visualize the possible transitions
    between states, as well as the currently active state and the
    values of user data that is passed around between states. The
    smach viewer uses the SMACH debugging interface based on
    the <a href="http://www.ros.org/wiki/smach_msgs">smach
    messages</a> to gather information from running state machines.
  </description>
  <author>Jon Bohren</author>
  <license>BSD</license>
  <review notes="" status="Doc reviewed"/>
  <url>http://ros.org/wiki/smach_viewer</url>

  <depend package="smach_ros"/>
  <depend package="xdot"/>
  <depend package="smach_msgs"/>
</package><package name="zbar_qt_ros" path="" repo="ias_perception" repo_host="http://code.in.tum.de/git/ias-perception.git">
  <description brief="zbar_qt_ros">

     zbar_qt_ros

  </description>
  <author>banacer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/zbar_qt_ros</url>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="image_transport"/>
  <depend package="sensor_msgs"/>
  <depend package="zbar_barcode_reader_node"/>


</package><package name="chr_6dm_imu" path="/trunk/arrg/ua_experimental/chr_6dm_imu" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="chr_6dm_imu">
        chr_6dm_imu
    </description>
    
    <author>Antons Rebguns</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/chr_6dm_imu</url>
    
    <depend package="rospy"/>
    <depend package="tf"/>
    <depend package="sensor_msgs"/>
    <depend package="std_srvs"/>
    
    <rosdep name="pyserial"/>
</package><package name="pr2_arm_ik_tests" path="/stacks/pr2_arm_navigation_tests/trunk/pr2_arm_ik_tests" repo="pr2_arm_navigation_tests" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_arm_ik_tests">

     pr2_arm_ik_tests

  </description>
  <author>Sachin Chitta</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_arm_ik_tests</url>

  <depend package="pr2_arm_kinematics"/>

  <!-- Dependencies needed for regression tests, which use Gazebo -->
  <depend package="gazebo"/>
  <depend package="pr2_gazebo"/>
  <depend package="robot_state_publisher"/>
  <depend package="pr2_controller_manager"/>
  <depend package="pr2_arm_navigation_kinematics"/>
  <depend package="pr2_arm_navigation_perception"/>

  <depend package="pluginlib"/>
  <depend package="kinematics_base"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="ir_finder" path="/trunk/OIT/ir_finder" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="ir_finder">

     ir_finder

  </description>
  <author>David Feil-Seifer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ir_finder</url>
  <depend package="tf"/>
  <depend package="cv_bridge"/>
  <depend package="oit_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="image_geometry"/>

</package><package name="serial" path="" repo="serial" repo_host="https://github.com/wjwwood/serial">
  <description brief="serial">

     serial

  </description>
  <author>William Woodall</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/serial</url>
  
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lserial -lrt -pthread"/>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lserial" os="osx"/>
  </export>

</package><package name="guardian_odometry" path="/trunk/guardian_odometry" repo="guardian-ros-pkg" repo_host="http://guardian-ros-pkg.googlecode.com/svn">
  <description brief="guardian_odometry">
  Computes the odometry of the robot using the wheel movements and a IMU. 
  Publish these odometry to /odom.
  </description>
  <author>Robotnik Automation SLL</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/guardian_odometry</url>
  <depend package="roscpp"/>
  <depend package="nav_msgs"/>
  <depend package="tf"/>

</package><package name="pr2_elevator_smach" path="/trunk/pr2_elevator/pr2_elevator_smach" repo="ubc-ros-pkg" repo_host="https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg">
  <description brief="pr2_elevator_smach">

     pr2_elevator_smach

  </description>
  <author>Koosha</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_elevator_smach</url>
  <depend package="rospy"/>
  <depend package="smach"/>
  <depend package="smach_msgs"/>
  <depend package="smach_ros"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="pr2_tuck_arms_action"/>
  <depend package="pr2_common_action_msgs"/>
  <depend package="push_button_action"/>
  <depend package="push_button_ik_action"/>
  <depend package="move_base_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="get_button_xyz"/>

</package><package name="ecl_containers" path="/trunk/ecl_core/ecl_containers" repo="ecl_core" repo_host="https://embedded-control-library.googlecode.com/svn">
  <description brief="Stl/Eigen style containers with a few memory debugging techniques.">
    <p>
	The containers included here are intended to extend the stl containers.
	In all cases, these implementations are designed to implement
	c++ conveniences and safety where speed is not sacrificed. 
   </p>
   <p>	
	Also includes techniques for memory debugging of common problems such
	as buffer overruns.
   </p>

  </description>
  <author>Daniel Stonier (d.stonier@gmail.com)</author>
  <license>BSD</license>
  <review notes="" status="doc reviewed"/>
  <url>http://snorriheim.dnsdojo.com/redmine/wiki/ecl</url>
  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>
  <depend package="ecl_license"/>
  <depend package="ecl_build"/>
  <depend package="ecl_config"/>
  <depend package="ecl_errors"/>
  <depend package="ecl_exceptions"/>
  <depend package="ecl_formatters"/>
  <depend package="ecl_converters"/>
  <depend package="ecl_mpl"/>
  <depend package="ecl_type_traits"/>
  <depend package="ecl_utilities"/>
  <rosbuild2>
    <export>
      <include_dir>${ecl_containers_SOURCE_DIR}/include</include_dir>
    </export>
    <depend package="ecl_license"/>
    <depend package="ecl_build"/>
    <depend package="ecl_config"/>
    <depend package="ecl_errors"/>
    <depend package="ecl_exceptions"/>
    <depend package="ecl_formatters"/>
    <depend package="ecl_converters"/>
    <depend package="ecl_mpl"/>
    <depend package="ecl_type_traits"/>
    <depend package="ecl_utilities"/>
  </rosbuild2>
</package><package name="kinect_color_segmentation" path="" repo="sr_contrib" repo_host="lp:sr-contrib">
  <description brief="kinect_color_segmentation">

    Segments the output of the kinect based on a color.

  </description>
  <author>Ugo Cupcic</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/kinect_color_segmentation</url>
  <depend package="roscpp"/>
  <depend package="nodelet"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="pcl_visualization"/>
  <depend package="tf"/>
  <depend package="eigen"/>
  <depend package="object_manipulation_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="sr_robot_msgs"/>

  <export>
    <nodelet plugin="${prefix}/nodelets.xml"/>
  </export>
</package><package name="test_nodelet" path="" repo="nodelet_core" repo_host="https://kforge.ros.org/common/nodeletcore">
  <description brief="test_nodelet">

    A package for nodelet unit tests

  </description>
  <author>Tully Foote</author>
  <license>BSD</license>
  <review notes="" status="unittest"/>
  <url>http://ros.org/wiki/test_nodelet</url>
  <depend package="nodelet"/>
  <depend package="std_msgs"/>
  <depend package="rostest"/>
  <depend package="pluginlib"/>
  
  <export>
    <nodelet plugin="${prefix}/test_nodelet.xml"/>
  </export>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="polar_scene" path="" repo="scene_labelling_rgbd" repo_host="https://github.com/aa755/scene_labelling_rgbd">
  <description brief="polar_scene">

     polar_scene

  </description>
  <author>nav</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/polar_scene</url>
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="scene_processing"/>

</package><package name="april_tk" path="/trunk/stacks/april/april_tk" repo="utexas" repo_host="https://utexas-ros-pkg.googlecode.com/svn">
  <description brief="april_tk">
     Wrapper for downloading and installing the April toolkit
  </description>
  <author>Edwin Olson and others</author>
  <license>GNU LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/april_tk</url>

  <rosdep name="git"/>
  <rosdep name="ant"/>
  <rosdep name="gtk-doc-tools"/>
  <rosdep name="libusb-1.0-dev"/>
  <rosdep name="gv"/>
  <rosdep name="libncurses-dev"/>
  <rosdep name="java"/>
  <rosdep name="autopoint"/>
  <rosdep name="opengl"/>
  <rosdep name="maven"/>
  <rosdep name="libdc1394-dev"/>

  <depend package="lcm"/>

</package><package name="parsec_arduino" path="" repo="parsec" repo_host="https://code.google.com/p/parsec">
  <description brief="parsec_arduino">

     parsec_arduino

  </description>
  <author>Damon Kohler</author>
  <license>Apache 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/parsec_arduino</url>

  <depend package="rosserial_arduino"/>
  <depend package="parsec_msgs"/>
  <depend package="sensor_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/src"/>
  </export>

</package><package name="static_tf_kinect_to_base_calibration" path="" repo="sr_contrib" repo_host="lp:sr-contrib">
  <description brief="static_tf_kinect_to_base_calibration">

     This package calibrates the transform between base_link and the camera_link for the kinect. It uses the ar_kinect to recognize markers placed at a known position.

  </description>
  <author>Ugo Cupcic / ugo@shadowrobot.com</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/static_tf_kinect_to_base_calibration</url>
  <depend package="rospy"/>
  <depend package="tf"/>
  <depend package="geometry_msgs"/>

</package><package name="proxemic_controllers" path="/trunk/sbl_experimental/proxemics/proxemic_controllers" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="proxemic_controllers">

     proxemic_controller

  </description>
  <author>Ross Mead, Edward T. Kaszubski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/proxemic_controllers</url>
  <depend package="bullet"/>
  <depend package="driver_base"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="nav_msgs"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="roscpp"/>
  <depend package="tf"/>

</package><package name="robotino_safety" path="/robotino-ros-pkg/trunk/robotino/robotino_safety" repo="robotino-ros-pkg" repo_host="http://svn.openrobotino.org">
  <description brief="robotino_safety">

The robotino_safety package contains the robotino_safety_node which controls the command velocities (cmd_vel) sent to Robotino so that potential collisions can be avoided.
  </description>
  <author>indorewala@servicerobotics.eu</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/robotino_safety</url>
  <depend package="robotino_node"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="std_msgs"/>
  <depend package="tf"/>
  <depend package="laser_geometry"/>
  <depend package="visualization_msgs"/>

</package><package name="collision_map" path="" repo="arm_navigation" repo_host="https://kforge.ros.org/armnavigation/armnavigation">
  <description brief="Collision Map">
    A node providing a map of the occupied space around the robot as discretized boxes (center, dimension), useful for collision detection. 
  </description>

  <author>Radu Bogdan Rusu, Ioan Sucan</author>
  <license>BSD</license>
  <url>http://ros.org/wiki/collision_map</url>
  <review notes="beta" status="experimental"/>

  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="visualization_msgs"/>
  <depend package="std_msgs"/>
  <depend package="std_srvs"/>
  <depend package="robot_self_filter"/>
  <depend package="arm_navigation_msgs"/>
  <depend package="actionlib"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="busbot_navigation" path="/trunk/stacks/drink_serving/busbot_navigation" repo="bosch-ros-pkg-e" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg-e/code">
  <description brief="busbot_navigation">

     busbot_navigation

  </description>
  <author>Tully Foote, Ben Pitzer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/busbot_navigation</url>
  <depends package="navigation"/>
  <depends package="gmapping"/>
</package><package name="openrtm_ros_bridge" path="/trunk/rtmros_common/openrtm_ros_bridge" repo="rtm-ros-robotics/rtmros_common" repo_host="https://rtm-ros-robotics.googlecode.com/svn">
  <description brief="openrtm_ros_bridge">

     openrtm_ros_bridge

  </description>
  <author>Manabu Saito</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/openrtm_ros_bridge</url>

  <depend package="roscpp"/>
  <depend package="openrtm"/>

  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>

</package><package name="rosh_base" path="/stacks/roshpit/trunk/rosh_base" repo="roshpit" repo_host="https://code.ros.org/svn/ros">
  <description brief="rosh_base">

     ROSH meta-plugin for the ROS 'base' variant.

  </description>
  <author>Ken Conley</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosh_base</url>
  <depend package="rosh"/>
  <depend package="rosh_common"/>
  <depend package="rosh_geometry"/>
  <depend package="rosh_visualization"/>  
</package><package name="msvc_sdk_tutorials" path="" repo="win_ros" repo_host="https://github.com/stonier/win_ros">
  <catkin/>
  <description brief="Shows the features of ROS step-by-step">
    Includes a few tutorials to introduce the workflow with 
	the win-ros msvc sdk and visual studio/express.
  </description>
  <author>Daniel Stonier</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/msvc_sdk_tutorials</url>
</package><package name="maxwell_teleop" path="/trunk/maxwell_apps/maxwell_teleop" repo="vanadium-ros-pkg" repo_host="http://vanadium-ros-pkg.googlecode.com/svn">
  <description brief="maxwell_teleop"/>
  <author>Michael Ferguson</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/maxwell_teleop</url>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="tf"/>
</package><package name="engagement_srvs" path="/trunk/engagement/engagement_srvs" repo="ros-engagement" repo_host="http://ros-engagement.svn.sourceforge.net/svnroot/ros-engagement">
	<description brief="engagement_srvs">
        engagement_srvs is a package which collects the services for the enagement stack.
    </description>
    <author>Aaron Holroyd (aholroyd (at) wpi (dot) edu),
            Brett Ponsler (bponsler (at) wpi (dot) edu)</author>
	<license>BSD</license>
	<review notes="" status="unreviewed"/>
    <url>http://sourceforge.net/projects/ros-engagement/</url>

	<depend package="engagement_msgs"/>
    <depend package="bml_msgs"/>
    <depend package="bml_srvs"/>

	<export>
        <cpp cflags="-I${prefix}/srv/cpp -I${prefix}/msg/cpp"/>
  		<rosdoc config="../rosdoc.yaml"/>
    </export>
</package><package name="nodebox_qt" path="" repo="rcommander_core" repo_host="https://kforge.ros.org/rcommander/rcommander_core">
  <description brief="nodebox_qt">
     NodeBox is a Mac OS X application that lets you create 2D visuals (static, animated or interactive) using Python programming code and export them as a PDF, an image or a Quicktime movie. NodeBox is free and well-documented.
     Frederik De Bleser, Tom De Smedt, Lucas Nijs (2002). NodeBox version 1.9.5 for Mac OS X. 
     From NodeBoxQT, adapted as a rendering engine for RCommander by Hai Nguyen.
  </description>
  <author>Various (maintained by haidai@gmail.com)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/nodebox_qt</url>

</package><package name="particle_plume" path="/stacks/odor_search/trunk/particle_plume" repo="odor_search" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="particle_plume">

     Particle plume is a odor mapping algorithm based on the PCL allowing for a 3D representation of a chemical plume by means of a 3D point cloud.

  </description>
  <author>Gonçalo Cabrita and Pedro Sousa</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/particle_plume</url>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="lse_sensor_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="pcl_ros"/>
  <depend package="nav_msgs"/>
  <depend package="message_filters"/>

</package><package name="roboframenet_msgs" path="" repo="roboframenet" repo_host="https://kforge.ros.org/appmanandroid/roboframenet">
  <description brief="roboframenet_msgs">

     roboframenet_msgs contains common messages used within roboframenet.

  </description>
  <author>Brian Thomas</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/roboframenet_msgs</url>
  <depend package="actionlib"/>

</package><package name="door_manipulation_tools" path="/trunk/dynamic_door_manipulation/door_manipulation_tools" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="Door Manipulation Tools">
    This package contains nodes that can
    - unlatch a door
    - push it open dynamically
    based on the door_perception module
  </description>
  <author>Felix Endres</author>
  <license/>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/handle</url>
  <rosdep name="eigen"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="tf"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="actionlib"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="pr2_mechanism_msgs"/>
  <depend package="ee_cart_imped_control"/>
  <depend package="ee_cart_imped_action"/>
  <depend package="visualization_msgs"/>
  <depend package="std_srvs"/>
  <!--depend package="pr2_tasks"/>
  <depend package="pr2_python"/-->



</package><package name="comp_missingobj" path="/knowledge/comp_missingobj" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="comp_missingobj">

     comp_missingobj

     files for a demo on 'objects missing on the table'

  </description>
  <author>Moritz Tenorth</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ias.in.tum.de/kb/wiki/index.php/comp_missingobj</url>

  <depend package="mod_probcog"/>
  <depend package="prolog_perception"/>
  <depend package="mod_vis"/>
  <depend package="json_prolog"/>
<!--   <depend package="dyn_obj_store"/> -->

</package><package name="libpointmatcher" path="" repo="ethzasl_mapping" repo_host="https://github.com/ethz-asl/ros-mapping">
  <description brief="libpointmatcher">

     Fetches libpointmatcher through git submodule and makes it available to ROS

  </description>
  <author>Stéphane Magnenat</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/libpointmatcher</url>
  <rosdep name="doxygen"/>
  <rosdep name="boost"/>
  <rosdep name="eigen"/>
  <depend package="libnabo"/>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lnabo"/>
  </export>
</package><package name="prmini_arm_nav" path="/trunk/sandbox/prmini/prmini_arm_nav" repo="vanadium-ros-pkg" repo_host="http://vanadium-ros-pkg.googlecode.com/svn">
  <description brief="Configurations for PR-MINI's arms">
    Definitions for the PR-MINI platform.
  </description>
  <author>Michael Ferguson</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/prmini_arm_navigation</url>

</package><package name="oro_joint_state_publisher" path="" repo="orocos_controllers" repo_host="https://github.com/RCPRG-ros-pkg/orocos_controllers">
  <description brief="oro_joint_state_publisher">

     This package contain orocos component, which will publish JoinState for you from within orocos controller.

  </description>
  <author>Konrad Banachowicz</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/oro_joint_state_publisher</url>
  <depend package="rtt"/>
  <depend package="ocl"/>
  <depend package="rtt_rosnode"/>
  <depend package="rtt_sensor_msgs"/>
  <depend package="sensor_msgs"/>
</package><package name="cob_lbr" path="" repo="cob_substitute" repo_host="git://github.com/ipa320/cob_substitute">
  <description brief="cob_lbr">

     cob_lbr

  </description>
  <author>dummy</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_lbr</url>

  <depend package="rosjava_jni"/>
  <depend package="actionlib"/>
  <depend package="cob_srvs"/>
  <depend package="brics_actuator"/>
  <depend package="trajectory_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="diagnostic_msgs"/>
  <depend package="pr2_controllers_msgs"/>

</package><package name="sr_remappers" path="" repo="sr_teleop" repo_host="lp:sr-teleop">
  <description brief="Remaps data from and to the Shadow Robot hardware">

     Contains different remappers to remap data coming from an
     actuator such as the cyberglove (Immersion) to Shadow Robot's
     hand. It also contains remapper to remap data coming from the
     Shadow hand to an other mechanism such as the cybergrasp
     (Immersion).

  </description>
  <author>Ugo Cupcic</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sr_remappers</url>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="sr_robot_msgs"/>
<!--  <depend package="cybergrasp"/> -->
  <depend package="cyberglove"/>

</package><package name="oit_launch" path="/trunk/OIT/oit_launch" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="oit_launch">

     oit_launch

  </description>
  <author>Edward T. Kaszubski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/oit_launch</url>

</package><package name="starmac_kinect" path="" repo="starmac-ros-pkg" repo_host="https://bitbucket.org/bouffard/starmac-ros-pkg">
  <description brief="starmac_kinect">

    State estimation and obstacle detection using 3D sensor output.
    
    NOTE: Hasn't been maintained in awhile and would need some modifications to get working again.
    For this reason, building this package is suppressed with ROS_NOBUILD.

  </description>
  <author>bouffard</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/flyer_kinect</url>
  <depend package="pcl"/>
  <depend package="tf"/>
  <depend package="nodelet"/>
  <depend package="pluginlib"/>
  <depend package="message_filters"/>
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="openni_camera"/>
  <depend package="sensor_msgs"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="image_transport"/>

  <export>
    <nodelet plugin="${prefix}/nodelets.xml"/>
  </export>

</package><package name="pr2_props_app" path="" repo="pr2_props_app" repo_host="https://kforge.ros.org/pr2apps/pr2_props_app">
  <description brief="PR2 Props App">
    Application files for running PR2 props
  </description>
  <author>Tony Pratkanis</author>
  <license>BSD</license>
  <url>http://ros.org/wiki/pr2_props</url>
  <review notes="" status="na"/>
  <depend package="roslib"/>
  <depend package="rospy"/>
  <depend package="pr2_props"/>
  <depend package="pr2_position_scripts"/>
  <depend package="std_srvs"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="nodemon_msgs" path="" repo="node_monitoring" repo_host="http://github.com/timn/ros-node_monitoring">
  <description brief="nodemon_msgs">
   Messages for node monitoring features.
  </description>
  <author>Tim Niemueller</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/nodemon_msgs</url>

</package><package name="phidgetspp" path="" repo="foote-phidget" repo_host="https://phidget.foote-ros-pkg.googlecode.com/hg/">
<description brief="A C++ Wrapper for the Phidgets C API">

This is an object oriented C++ wrapper for the Phidgets C API

</description>
<author>Tully Foote</author>
<license>BSD</license>
<export>
  <cpp cflags="-I${prefix}/include " lflags="-L${prefix}/lib "/>
</export>
<depend package="phidgetspp_c_api"/>
</package><package name="kdetoolbox" path="/trunk/3rdparty/kdetoolbox" repo="cmu-ros-pkg" repo_host="https://cmu-ros-pkg.svn.sourceforge.net/svnroot/cmu-ros-pkg">
  <description brief="Kernel Density Estimation Toolbox for C++ and MATLAB/Octave">
    The KDE class is a general matlab class for k-dimensional kernel density estimation.
  </description>
  <author>Alexander Ihler and python wrapper by Rosen Diankov</author>
  <export>
    <cpp cflags="" lflags=""/>
  </export>
  <license>LGPL</license>
  <review notes="" status="3rdparty"/>
  <url>http://www.ics.uci.edu/~ihler/code/kde.html</url>
  <export>
    <python path="${prefix}"/>
  </export>
  <depend package="rospy"/>
  <depend package="openrave"/>
</package><package name="cram_reasoning" path="" repo="cram_core" repo_host="https://github.com/moesenle/cram_core">
  <description brief="CRAM reasoning package.">
    This package implements a simple interpreter for a Prolog-like
    language and an implementation of the RETE algorithm.
  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <url>http://ros.org/wiki/cram_reasoning</url>
  <review notes="" status="unreviewed"/>
  <depend package="sbcl"/>
  <depend package="alexandria"/>
  <depend package="cram_utilities"/>
  <depend package="lisp_unit"/>
</package><package name="sr_automatic_pid_tuning" path="" repo="sr_contrib" repo_host="lp:sr-contrib">
  <description brief="sr_automatic_pid_tuning">

     sr_automatic_pid_tuning is an automatic pid tuner using eodev. It is still highly experimental and can not be used as is.

  </description>
  <author>Ugo Cupcic</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sr_automatic_pid_tuning</url>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="sr_robot_msgs"/>
  <depend package="sr_utilities"/>
  <depend package="sr_movements"/>
  <depend package="eodev"/>

</package><package name="pancakebot" path="/trunk/pancakebot" repo="stanford-ros-pkg" repo_host="https://stanford-ros-pkg.googlecode.com/svn">
  <description brief="pancakebot makes pancakes for you">
    An application of the openarms hardware/software stack which hopes to
    someday make delicious pancakes.
  </description>
  <author>Morgan Quigley mquigley@cs.stanford.edu, Alan Asbeck aasbeck@stanford.edu</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ai.stanford.edu/~mquigley</url>
  <depend package="roscpp"/>
  <depend package="openarms"/>
  <depend package="camera1394"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="tf"/>
  <depend package="joy"/>
  <depend package="robot_state_publisher"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="std_msgs"/>
  <depend package="visualization_msgs"/>
</package><package name="teleop_twist_keyboard" path="/trunk/distribution/brown_remotelab/teleop_twist_keyboard" repo="brown-ros-pkg" repo_host="http://brown-ros-pkg.googlecode.com/svn">
  <description brief="teleop_twist_keyboard">
Simple keyboard teleoping for Twist based robots.
  </description>
  <author>Graylin Trevor Jay</author>
  <email>tjay@cs.brown.edu</email>
  <license>BSD</license>

  <depend package="geometry_msgs"/>

</package><package name="neo_2dnav_slam_mp_500" path="" repo="neo_navigation" repo_host="https://github.com/neobotix/neo_navigation">
  <description brief="neo_2dnav_slam_mp_500">

     neo_2dnav_slam_mp_500

  </description>
  <author>Timo Hackel</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/neo_2dnav_slam_mp_500</url>
  <depend package="gmapping"/>
</package><package name="theora_image_transport" path="/stacks/image_transport_plugins/trunk/theora_image_transport" repo="image_transport_plugins" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="theora_image_transport">

     theora_image_transport provides a plugin to image_transport for
     transparently sending an image stream encoded with the Theora codec.

  </description>
  <author>Patrick Mihelich, Ethan Dreyfuss</author>
  <license>BSD</license>
  <review notes="2010/10/10" status="Doc reviewed"/>
  <url>http://www.ros.org/wiki/theora_image_transport</url>
  <depend package="image_transport"/>
  <depend package="cv_bridge"/>
  <depend package="pluginlib"/>
  <depend package="dynamic_reconfigure"/>
 
  <!-- for migration rules -->
  <depend package="rosbag"/>

  <rosdep name="libogg"/>
  <rosdep name="libtheora"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -ltheora_image_transport -logg -ltheora -ltheoraenc -ltheoradec"/>
    <image_transport plugin="${prefix}/theora_plugins.xml"/>
    <rosbag migration_rule_file="migration_rules/Packet.bmr"/>
  </export>

</package><package name="pr2_chat" path="/branches/stable/wu_pr2_demos/pr2_chat" repo="wu-ros-pkg" repo_host="https://wu-robotics.googlecode.com/svn">
  <description brief="Demo using speech recognition and generation">
    Demo that enables you to have very simplistic conversations with the PR2
  </description>
  <author>David V. Lu!!</author>
  <license>BSD</license>
  <url>http://ros.org/wiki/pr2_chat</url>
  <depend package="rospy"/>
  <depend package="sound_play"/>
  <depend package="pocketsphinx"/>
  <depend package="roslaunch"/>

</package><package name="as11" path="" repo="mapping" repo_host="http://code.in.tum.de/git/mapping.git">
  <description brief="as11">

     as11

  </description>
  <author>lucian goron</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/as11</url>
  <depend package="roscpp"/>
  <depend package="pcl"/>
  <depend package="opencv2"/>
  <depend package="features_2d"/>
</package><package name="policy_improvement_loop_test" path="" repo="usc-clmc-ros-pkg" repo_host="https://github.com/usc-clmc/usc-clmc-ros-pkg">
  <description brief="policy_improvement_loop_test">

     policy_improvement_loop_test

  </description>
  <author>Peter Pastor</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/policy_improvement_loop_test</url>

  <depend package="roscpp"/>
  <depend package="dynamic_movement_primitive"/>
  <depend package="dynamic_movement_primitive_utilities"/>
  <depend package="policy_improvement_loop"/>
  <depend package="task_manager"/>

  <export>
    <task_manager plugin="${prefix}/task_plugins.xml"/>
  </export>

</package><package name="pycv" path="/trunk/3rdparty/pycv" repo="cmu-ros-pkg" repo_host="https://cmu-ros-pkg.svn.sourceforge.net/svnroot/cmu-ros-pkg">
  <description brief="PyCV: A Computer Vision Package for Python Incorporating Fast Training of Face Detection">
    PyCV is a Python package of modules useful for computer vision tasks. Its current focus is on boosting techniques, Haar-like features, and face detection. PyCV provides the world's fastest method for training a face detector, in a few hours.
  </description>
  <author>Minh-Tri Pham (mtpham@ntu.edu.sg), Viet-Dung D. Hoang (hken@pmail.ntu.edu.sg), Tat-Jen Cham (astjcham@ntu.edu.sg)</author>
  <license>GPL</license>
  <review notes="" status="3rdparty"/>
  <url>http://sourceforge.net/projects/pycv</url>
  <export>
    <python path="${prefix}/src"/>
  </export>
</package><package name="wg_invent_client" path="/stacks/wg_hardware_test/trunk/wg_invent_client" repo="wg_hardware_test" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="Interfaces with WG inventory system">
Provides an interface for the Willow Garage Inventory system, used by the life_test and qualification systems to automatically log assembly data into invent.
  </description>
  <author>Scott Hassan, Kevin Watts</author>
  <review notes="" status="na"/>
  <license>BSD</license>
  <url>http://ros.org/wiki/wg_invent_client</url>
  <rosdep name="python-clearsilver"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="unique_id" path="" repo="unique_identifier" repo_host="https://kforge.ros.org/geographicinfo/id_msgs">
  <description brief="Unique identifier APIs.">

     ROS Python and C++ interfaces for universally unique identifiers.

  </description>
  <author>Jack O'Quin</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/unique_id</url>

  <depend package="roscpp"/>
  <depend package="rosunit"/>
  <depend package="uuid_msgs"/>

  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>

</package><package name="pr2_mechanism_model" path="" repo="pr2_mechanism" repo_host="https://kforge.ros.org/pr2mechanism/hg">
<description brief="PR2 Mechanism model">
<p>
  This package contains the robot model that is used by the realtime
  controllers
  inside <a href="http://www.ros.org/wiki/pr2_controller_manager">controller
  manager</a>. This robot model focuses on controlling the robot
  mechanism in a realtime control loop, and therefore it only contains
  the components of a robot that are relevant in realtime: the robot
  joints (with encoders, transmisisons and actuators) and the
  kinematic/dynamic model of the robot. 
</p>
<p>
  The pr2_mechanism_model package is well tested and is released with a stable API.
</p>
</description>
<author>Eric Berger berger@willowgarage.com, Stuart Glaser, Wim Meeussen</author>
<license>BSD</license> 
<review notes="" status="doc reviewed"/>
<depend package="roscpp"/>
<depend package="pr2_hardware_interface"/>
<depend package="tinyxml"/>
<depend package="urdf"/>
<depend package="kdl_parser"/>
<depend package="pluginlib"/>
<depend package="angles"/>
<url>http://ros.org/wiki/pr2_mechanism_model</url>
<export>
  <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -lpr2_mechanism_model -Wl,-rpath,${prefix}/lib"/>
  <pr2_mechanism_model plugin="${prefix}/transmission_plugins.xml"/>
</export>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="pcl16_ros" path="" repo="perception_pcl_fuerte_unstable" repo_host="https://bitbucket.org/macmason/perception_pcl_fuerte_unstable">
  <description brief="PCL - ROS (Unstable)">

<p>
  PCL (Point Cloud Library) ROS interface package. PCL-ROS is the preferred
  bridge for 3D applications involving n-D Point Clouds and 3D geometry
  processing in ROS. The package contains powerful nodelet interfaces for PCL
  algorithms, accepts dynamic reconfiguration of parameters, and supports
  multiple threading natively for large scale PPG (Perception Processing
  Graphs) construction and usage.
</p>

  </description>

  <author>Maintained by Radu Bogdan Rusu</author>
  <license>BSD</license>
  <url>http://ros.org/wiki/pcl_ros</url>
  <review notes="" status="doc reviewed"/>

  <!-- ROS dependencies -->
  <depend package="roscpp"/>
  <depend package="rosbag"/>
  <depend package="geometry_msgs"/>
  <depend package="message_filters"/>
  <depend package="tf"/>

  <!-- Eigen -->
  <depend package="common_rosdeps"/>
  <rosdep name="eigen"/>
  <rosdep name="hdf5"/>

  <!-- PCL -->
  <depend package="pcl16"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lpcl16_ros_tf"/>
  </export>
  <platform os="ubuntu" version="10.04"/>
  <platform os="ubuntu" version="10.10"/>
</package><package name="ieee80211_channels" path="/stacks/linux_networking/trunk/ieee80211_channels" repo="linux_networking" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="ieee80211_channels">
    This package provides mapping from frequencies to
    IEEE802.11 channels and vice-versa.
  </description>
  <author>Catalin Drula</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ieee80211_channels</url>
  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>
</package><package name="sr_hand" path="" repo="shadow_robot" repo_host="lp:sr-ros-interface">
  <description brief="Shadow Robot Hand ROS interface ">

     This is a ROS interface to the Shadow Robot's robotic hand. It
     contains both an interface to the real hand (communicating via
     a CAN interface) and a simulated version of the hand. It also
     contains an interface to Shadow Robot's muscle arm.

  </description>
  <author>Ugo Cupcic / ugo@shadowrobot.com, contact@shadowrobot.com</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.shadowrobot.com</url>
  <depend package="roslib"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="std_msgs"/>
  <depend package="std_srvs"/>
  <depend package="sensor_msgs"/>
  <depend package="sr_robot_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="sr_utilities"/>
  <depend package="diagnostic_msgs"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="self_test"/>
  <depend package="urdf"/>

  <depend package="gazebo_msgs"/>

  <export>
	<cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -lSrVirtual"/>
	<python path="${prefix}/python_lib"/>
	<python path="${prefix}/python_lib/grasp"/>
  </export>
</package><package name="rosgui_paramedit" path="/trunk/freiburg_tools/rosgui_paramedit" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="rosgui_paramedit">
     rosgui_paramedit - a rosgui plugin for editing parameters using rxparamedit.
  </description>
  <author>Christian Dornhege</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosgui_paramedit</url>
  <depend package="roscpp"/>
  <depend package="rxparamedit"/>
  <depend package="rqt_gui_cpp"/>
  <depend package="rqt_gui"/>

  <export>
      <rqt_gui plugin="${prefix}/rxparamedit_plugin.xml"/>
  </export>

</package><package name="robotino_description" path="/robotino-ros-pkg/trunk/robotino/robotino_description" repo="robotino-ros-pkg" repo_host="http://svn.openrobotino.org">
  <description brief="robotino_description">
This package includes the xacro files and meshes for Robotino.
  </description>
  <author>indorewala@servicerobotics.eu</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/robotino_description</url>

</package><package name="sr_edc_ethercat_drivers" path="" repo="shadow_robot_ethercat" repo_host="lp:sr-ros-interface-ethercat">
  <description brief="sr_edc_ethercat_drivers">

    A package implementing a ROS interface for the etherCAT Shadow Robot Dextrous Hand.

  </description>
  <author>Yann Sionneau, Ugo Cupcic / ugo@shadowrobot.com, software@shadowrobot.com</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sr_edc_ethercat_drivers</url>
  <depend package="roscpp"/>
  <depend package="roslib"/>
  <depend package="std_msgs"/>

  <depend package="sr_robot_lib"/>
  <depend package="ethercat_hardware"/>
  <depend package="sr_external_dependencies"/>

  <rosdep name="binutils"/>
  <export>
    <ethercat_hardware plugin="${prefix}/ethercat_device_plugin.xml"/>
  </export>

</package><package name="interactivespaces-service-mail-receiver" path="" repo="interactive-spaces" repo_host="https://code.google.com/p/interactive-spaces">
	<description brief="interactivespaces.service.mail.receiver">
		Email service receiving for Interactive Spaces.
	</description>
	<author>Keith Hughes/khughes@google.com</author>
	<license>Apache License 2.0</license>
	<review notes="" status="unreviewed"/>
	
	<url>http://code.google.com/p/interactive-spaces/</url>
	
	<depend package="interactivespaces-core"/>

	<rosdep name="java"/>
</package><package name="fake_process_modules" path="" repo="cram_highlevel" repo_host="https://github.com/moesenle/cram_highlevel">
  <description brief="fake_process_modules">

     fake_process_modules

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/fake_process_modules</url>
  <depend package="cram_process_modules"/>
  <depend package="cram_designators"/>

</package><package name="rtt_ros_service" path="" repo="orocos_toolchain_ros" repo_host="http://git.mech.kuleuven.be/robotics/orocos_toolchain_ros.git">
    <description brief="Orocos RTT-ROS integration tools">
        This package contains a service you can use to quickly connect
				to ROS topics and other utility functions for in an RTT-ROS environment.
    </description>
    <!--NOTE: set the license and author before you publish this code-->
    <license>BSD</license>
    <author>Peter Soetens</author>
    <depend package="rtt"/>
    <depend package="rtt_ros_integration"/>
</package><package name="rqt_graph" path="" repo="rqt" repo_host="https://kforge.ros.org/visualization/rqt">
  <description brief="Plugin for visualizing the ROS computation graph">
    rqt_graph provides a GUI plugin for visualizing the ROS computation graph.
  </description>
  <author>Dirk Thomas</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rqt_graph</url>

  <depend package="rqt_gui"/>
  <depend package="qt_dotgraph"/>
  <depend package="rosgraph"/>
  <depend package="roslib"/>
  <depend package="rosnode"/>
  <depend package="rostopic"/>
  <depend package="rosservice"/>

  <export>
    <rqt_gui plugin="${prefix}/plugin.xml"/>
  </export>
</package><package name="fake_localization" path="" repo="navigation" repo_host="https://kforge.ros.org/navigation/navigation">
  <description brief="fake localization">A ROS node that simply forwards odometry information.</description>
  <author>Ioan A. Sucan</author>
  <license>BSD</license>
  <review notes="" status="Doc reviewed"/>
  <url>http://pr.willowgarage.com/wiki/fake_localization</url>
  <depend package="roscpp"/>
  <depend package="rosconsole"/>
  <depend package="nav_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="tf"/>
  <depend package="message_filters"/>
  <depend package="angles"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="qt_gui" path="" repo="qt_gui_core" repo_host="https://kforge.ros.org/visualization/qt_gui_core">
  <description brief="Integrated graphical user interface">
    qt_gui provides the infrastructure for an integrated graphical user interface based on Qt.
    It is extensible with Python- and C++-based plugins (implemented in separate packages) which can contribute arbitrary widgets.
    It requires either PyQt or PySide bindings.
  </description>
  <author>Dirk Thomas</author>
  <license>BSD</license>
  <review notes="2012-06-20" status="API cleared"/>
  <url>http://ros.org/wiki/qt_gui</url>

  <depend package="python_qt_binding"/>
  <rosdep name="python-qt-bindings"/>
</package><package name="hostapd_access_point" path="/stacks/linux_networking/trunk/hostapd_access_point" repo="linux_networking" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="hostapd_access_point">
    A ROS node that controls a hostapd-based access
    point. It is mainly intended for use with a wireless 
    network adapter running in master mode. It implements 
    the dynamic_reconfigure interface defined
    in the [[access_point_control]] package.
  </description>
  <author>Catalin Drula</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hostapd_access_point</url>
  <depend package="rospy"/>
  <depend package="access_point_control"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="ieee80211_channels"/>
  <rosdep name="hostapd"/>
</package><package name="multimaster" path="" repo="multimaster" repo_host="https://kforge.ros.org/collvoid/multimaster">
  <description brief="master">

     master

  </description>
  <author>Wim Meeussen</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/master</url>

  <depend package="rosgraph"/>
  <depend package="rospy"/>

</package><package name="pr2_defs" path="/stacks/pr2_common_alpha/trunk/pr2_defs" repo="pr2_common_alpha" repo_host="https://code.ros.org/svn/wg-ros-pkg">

  <description brief="PR2 Robot Definitions">
    
    This package contains XML (and xacro macros) descriptions of robot kinematics in the format
    defined at Willow Garage.
    
  </description>
  <author>Eric Berger, Sachin Chitta, John Hsu</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  
  <depend package="urdf"/>
  <depend package="xacro"/>
  <depend package="convex_decomposition"/>
  <depend package="ivcon"/>
  <url>http://pr.willowgarage.com/wiki/RobotDescriptionFormat</url>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="goal_server_cu" path="/trunk/goal_server_cu" repo="prairiedog" repo_host="http://prairiedog.googlecode.com/svn">
  <description>A Goal Server</description>
  <author>Michael Otte</author>
  <license>GNU GPL V3</license>
  <review notes="" status="unreviewed"/>
  <url>http://correll.cs.colorado.edu/pmwiki/</url>
  <depend package="roscpp"/>
  <depend package="nav_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="localization_cu"/>
</package><package name="motoman_config" path="/trunk/motoman/motoman_config" repo="swri-ros-pkg" repo_host="http://swri-ros-pkg.googlecode.com/svn">
  <description brief="motoman_config">

     The motoman_config package includes common configurations and 3D models for motoman manipulators
     
  </description>
  <author>Shaun Edwards (Southwest Research Institute)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/motoman_config</url>
  <depend package="urdf"/>


</package><package name="lo" path="" repo="ias_perception" repo_host="http://code.in.tum.de/git/ias-perception.git">
<description>Located Object Library</description>
<author>U. Klank</author>
<license>GPL</license>
<export>
    <cpp cflags="-I${prefix}/local/include" lflags="-L${prefix}/local/lib -llo"/>
</export>
</package><package name="osl_core" path="/trunk/hwu_osl_common/osl_core" repo="hwu-osl-ros-pkg" repo_host="http://hwu-osl-ros-pkg.googlecode.com/svn">
  <description brief="osl_core">

     osl_core

  </description>
  <author>Joel Cartwright</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/osl_core</url>
  <rosdep name="commoncpp2"/>
  <depend package="roscpp"/>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -losl_core"/>
  </export>

</package><package name="srs_env_model" path="" repo="srs_public" repo_host="git://github.com/ipa320/srs_public">
	<description brief="srs_env_model">

ROS dynamic environment model provided by dcgm-robotics@FIT group.

	</description>
	<author>Vit Stancl (stancl@fit.vutbr.cz), Tomas Lokaj, Jan Gorig, Michal Spanel (spanel@fit.vutbr.cz)</author>
	<license>LGPL</license>
	<review notes="" status="unreviewed"/>
	<url>http://ros.org/wiki/srs_env_model</url>

	<depend package="opencv2"/>
	<depend package="eigen"/>
	<depend package="roscpp"/>
	<depend package="image_transport"/>
	<depend package="camera_calibration_parsers"/>
	<depend package="visualization_msgs"/>
	<depend package="cv_bridge"/>
	<depend package="std_msgs"/>
	<depend package="std_srvs"/>
	<depend package="nav_msgs"/>
	<depend package="arm_navigation_msgs"/>
	<depend package="pcl"/>
	<depend package="pcl_ros"/>
	<depend package="ogre"/>
	<depend package="interactive_markers"/> <!-- interactive markers server -->
	<depend package="octomap_ros"/> <!-- octomap -->
	<depend package="actionlib_msgs"/>
	<depend package="actionlib"/>
	<depend package="cob_object_detection_msgs"/>
	<depend package="image_geometry"/>
	<depend package="nodelet"/>

	<depend package="srs_env_model_msgs"/>
	<depend package="srs_interaction_primitives"/>

	<export>
		<cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib"/>
		<rosdoc config="rosdoc.yaml"/>
		<nodelet plugin="${prefix}/nodelets.xml"/>
	</export>

</package><package name="wubble_teach" path="/trunk/arrg/ua_verbs/wubble_teach" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
  <description brief="teaching_interface">

     teaching_interface

  </description>
  <author>Daniel Hewlett</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/teaching_interface</url>

  <depend package="rosjava"/>
  <depend package="oomdp_msgs"/>
  <depend package="verb_learning"/>

</package><package name="gui_utilities" path="" repo="usc-clmc-ros-pkg" repo_host="https://github.com/usc-clmc/usc-clmc-ros-pkg">
  <description brief="gui_utilities">

     gui_utilities

  </description>
  <author>Peter Pastor</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/gui_utilities</url>

  <depend package="roscpp"/>
  <depend package="usc_utilities"/>
  <depend package="task_recorder2_msgs"/>
  <depend package="task_recorder2_utilities"/>

  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg_gen/cpp" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lgui_utilities"/>
  </export>

</package><package name="ROSARIA" path="" repo="amor-ros-pkg" repo_host="https://amor-ros-pkg.googlecode.com/hg/">
  <description brief="ROS wrapper for MobileRobots' ARIA C++ library">

    <tt>ROSARIA</tt> is a ROS wrapper for MobileRobots' ARIA C++ library.
    This is a simple proof of concept package that lets you set velocity and
    read odometry data form MobileRobots (ActivMedia) platforms (e.g. Pioneer)
    using their official library.

  </description>
  <author>Srećko Jurić-Kavelj</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.ros.org/wiki/ROSARIA</url>

  <depend package="Aria"/>
  <depend package="roscpp"/>
  <depend package="nav_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="tf"/>
</package><package name="cob_tactiletools" path="" repo="cob_manipulation" repo_host="git://github.com/ipa320/cob_manipulation">
  <description brief="cob_tactiletools">

     cob_tactiletools

  </description>
  <author>Alexander Bubeck</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_tactiletools</url>
  
  <depend package="rospy"/>
  <depend package="cob_srvs"/>
  <depend package="std_msgs"/>
  <depend package="schunk_sdh"/>

</package><package name="corobot_map_to_jpeg" path="/trunk/Diamondback/Corobot/corobot_map_to_jpeg" repo="roscorobot" repo_host="http://svn.code.sf.net/p/roscorobot/code">
  <description brief="corobot_map_to_jpeg">

     Package based on the package hector_compressed_map_transport. It provides means for transporting compressed map data through the use of image_transport. The difference with hector_compressed_map_transport is that the position and orientation of the robot is displayed on the map.

  </description>
  <author>Morgan Cormier</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/corobot_map_to_jpeg</url>
  <depend package="image_transport"/>
  <depend package="nav_msgs"/>
  <depend package="cv_bridge"/>
  <depend package="opencv2"/>
  <depend package="image_transport"/>
  <depend package="eigen"/>
  <depend package="sensor_msgs"/>
  <depend package="tf"/>
  <depend package="geometry_msgs"/>


</package><package name="rtt_gems" path="" repo="orocos_toolchain_ros" repo_host="http://git.mech.kuleuven.be/robotics/orocos_toolchain_ros.git">
  <description brief="rtt_gems">

		rtt_gems contains the ruby gems which are required to build the utilrb library
    and other ruby based tools. This package guarantees that a build can be done,
		even if rubygems.org is down or unreachable.

  </description>
  <author>Peter Soetens</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rtt_gems</url>

</package><package name="flann" path="" repo="perception_pcl_fuerte_unstable" repo_host="https://bitbucket.org/macmason/perception_pcl_fuerte_unstable">
  <description brief="FLANN">

    FLANN is a library for performing fast approximate nearest neighbor
    searches in high dimensional spaces. It contains a collection of
    algorithms we found to work best for nearest neighbor search and a
    system for automatically choosing the best algorithm and optimum
    parameters depending on the dataset.

    FLANN is written in C++ and contains bindings for the following
    languages: C, MATLAB and Python.

  </description>

  <author>Marius Muja and David Lowe</author>
  <license>LGPL</license>
  <review notes="" status="3rdparty"/>
  <url>http://www.cs.ubc.ca/~mariusm/index.php/FLANN/FLANN</url>

  <export>
     <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib64 -Wl,-rpath,${prefix}/lib -L${prefix}/lib64 -L${prefix}/lib -lflann -lflann_cpp -lhdf5_cpp -lhdf5"/>
     <!--python path="${prefix}/flann-1.2-src/build/python" /-->
    <doxymaker external="http://www.cs.ubc.ca/~mariusm/uploads/FLANN/manual.pdf"/>
  </export>

  <!--rosdep name="hdf5" /-->
  <rosdep name="unzip"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
  <platform os="ubuntu" version="10.10"/>
</package><package name="david_laserscanner" path="/controllers/david_laserscanner" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="david_laserscanner">
    A Client to connect to a David server which controls the 
    David laser light triangulation software (www.david-laserscanner.com) 
    running on a windows machine.
  </description>

  <author>Andreas Holzbach, Dejan Pangercic</author>
  <license>BSD</license>

  <depend package="roscpp"/>
  <depend package="perception_srvs"/>

</package><package name="dynamicvoronoi" path="/trunk/dynamic_voronoi/dynamicvoronoi" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="Efficient computation and updating of Euclidean distance maps and Euclidean Voronoi diagrams on 2D grid maps.">

<p>
This package provides software to compute and update Euclidean distance maps (DM) and Euclidean Voronoi diagrams (GVD) on 2D grid maps.
</p>

<p>
The program is initialized with a binary occupancy grid map and computes the corresponding DM and GVD. When provided with points that mark newly occupied or freed cells, the DM and GVD can be updated efficiently to reflect the changes in the environment.
</p>

<p>
Details on the algorithms can be found in the corresponding paper. Please cite the paper if you use it for scientific work:<br/>
B. Lau, C. Sprunk and W. Burgard, Improved Updating of Euclidean Distance Maps and Voronoi Diagrams, IEEE Intl. Conf. on Intelligent Robots and Systems (IROS), Taipei, Taiwan, 2010.<br/>
See also <a href="http://www.informatik.uni-freiburg.de/~lau/dynamicvoronoi">http://www.informatik.uni-freiburg.de/~lau/dynamicvoronoi</a>
</p>

  </description>
  <author>Boris Lau, Christoph Sprunk, Wolfram Burgard</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/dynamicvoronoi</url>
  <export>
    <cpp cflags="-I${prefix}/dynamicvoronoi/include" lflags="-L${prefix}/dynamicvoronoi/lib -Wl,-rpath,${prefix}/dynamicvoronoi/lib -ldynamicvoronoi"/>
  </export>


</package><package name="usb_cam" path="/trunk/stacks/bosch_drivers/usb_cam" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="A generic driver for USB camera that are supported by V4L"/>
  <author>Benjamin Pitzer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <depend package="image_transport"/>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="self_test"/>
  <rosdep name="libswscale-dev"/>

  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp" lflags="-L${prefix}/lib"/>
  </export>
</package><package name="roboptim-trajectory" path="" repo="stacks/roboptim" repo_host="git://github.com/laas/roboptim">
  <description brief="RobOptim trajectory layer">

    RobOptim trajectory is a toolbox for trajectory optimization
    relying on RobOptim core to solve numerical optimization problems.

  </description>
  <author>See package AUTHORS file.</author>
  <license>LGPL</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/roboptim-core</url>

  <export>
    <rosdoc external="http://laas.github.com/roboptim-trajectory/doxygen/HEAD/index.html"/>
  </export>
  <rosdep name="boost"/>

  <depend package="roboptim-core"/>

  <versioncontrol type="git" url="git://github.com/laas/roboptim-trajectory.git"/>
</package><package name="wait_for_response_action" path="/trunk/turn_taking/wait_for_response_action" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="wait_for_response_action">

     wait_for_response_action

  </description>
  <author>David Feil-Seifer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/wait_for_response_action</url>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="sensor_msgs"/>

</package><package name="traxbot_robot" path="/stacks/mrl_robots/trunk/traxbot_robot" repo="mrl_robots" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="traxbot_robot">

     Driver to control traxbot robot on ROS,  developed at ISR - Coimbra
 
  </description>
  <author>André Gonçalves Araújo</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/traxbot_robot</url>
  <depend package="std_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="roslib"/>
  <depend package="rosserial_arduino"/>
    

</package><package name="ecl_manipulators" path="/trunk/ecl_manipulation/ecl_manipulators" repo="ecl_manipulation" repo_host="https://embedded-control-library.googlecode.com/svn">
  <description brief="Manipulation algorithms/filters.">

  Deploys various manipulation algorithms, currently just 
  feedforward filters (interpolations). 

  </description>
  <author>Daniel Stonier (d.stonier@gmail.com)</author>
  <license>BSD</license>
  <review notes="" status="api cleared"/>
  <url>http://snorriheim.dnsdojo.com/redmine/wiki/ecl</url>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lecl_manipulators"/>
  </export>
  <depend package="ecl_exceptions"/>  
  <depend package="ecl_formatters"/>  
  <depend package="ecl_geometry"/>  
  <depend package="ecl_license"/>
  <depend package="ecl_build"/>
</package><package name="diagnostic_msgs" path="/stacks/common_msgs/trunk/diagnostic_msgs" repo="common_msgs" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="A package for diagnostic_msgs">
     <p>
     This package holds the diagnostic messages which provide the
     standardized interface for the diagnostic and runtime monitoring
     systems in ROS. These messages are currently used by
     the <a href="http://ros.org/wiki/diagnostics">diagnostics</a>
     Stack, which provides libraries for simple ways to set and access
     the messages, as well as automated ways to process the diagnostic
     data.
     </p>
     <p>
     These messages are used for long term logging and will not be
     changed unless there is a very important reason.
     </p>
  </description>
  <author>Tully Foote/ tfoote@willowgarage.com</author>
  <license>BSD</license>
  <review notes="http://www.ros.org/wiki/diagnostic_msgs/Reviews/2009-09-30_Doc_Review" status="doc reviewed"/>
  <url>http://ros.org/wiki/diagnostic_msgs</url>

  <export>
    <cpp cflags="`PKG_CONFIG_PATH=${prefix}/../../lib/pkgconfig pkg-config --cflags diagnostic_msgs`" lflags="`PKG_CONFIG_PATH=${prefix}/../../lib/pkgconfig pkg-config --libs diagnostic_msgs`"/>
  </export>

</package><package name="rosjs_tutorials" path="/trunk/stacks/remote_lab/rosjs_tutorials" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="rosjs_tutorials">
    rosjs tutorials.
  </description>
  <author>Benjamin Pitzer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosjs_tutorials</url>
  <!-- depend package="rosjs"/ -->
  <depend package="rosjs_common"/>
  <depend package="rosjs_visualization"/>
  <depend package="rosjs_remotelabwidgets"/>
  <depend package="wviz_tf_manager"/>
  <depend package="wviz_scene_manager"/>
  <depend package="interactive_marker_client"/>
</package><package name="pose_action" path="/trunk/turn_taking/pose_action" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="pose_action">

     pose_action

  </description>
  <author>David Feil-Seifer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pose_action</url>
  <depend package="actionlib_msgs"/>
	<depend package="actionlib"/>
  <depend package="sensor_msgs"/>

</package><package name="srs_leg_detector" path="" repo="srs_public" repo_host="git://github.com/ipa320/srs_public">
  <description brief="srs_legdetector">

     srs_legdetector

  </description>
  <author>Alex Noyvirt</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/srs_legdetector</url>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="std_srvs"/>
  <depend package="sensor_msgs"/>
  <depend package="laser_geometry"/>
  <depend package="tf"/>
  <depend package="bfl"/>
  <depend package="bullet"/>
  <depend package="visualization_msgs"/>
  <depend package="srs_msgs"/>
  <depend package="srs_people_tracking_filter"/>
  <depend package="opencv2"/>
  <depend package="rosbag"/>
  <depend package="nav_msgs"/>

</package><package name="iis_idl" path="/trunk/rtmros_common/iis_idl" repo="rtm-ros-robotics/rtmros_common" repo_host="https://rtm-ros-robotics.googlecode.com/svn">
  <description brief="iis_idl">

     iis_idl

     based on following paper

The Joint Interface of RT Component for Mobile Robots
- The Second Activity Report of Mobile Robot One Sub WG in NEDO Intelligent RT Software Project -

Masaharu SHIMIZU (CIT, fuRo), Nobuyuki KITA (AIST), Toshihisa SAITO (Segway Japan),
Eijiro TAKEUCHI (Touhoku Univ.), Yusuke NAKAJIMA (AIST), Naohito TAKEGAWA (AIST),
Hiroki IGARASHI (Kyoto Univ.) Yasuo HAYASHIBARA (CIT), Hideaki YAMATO (CIT, fuRo),
Kengo TODA (CIT, fuRo), Takayuki FURUTA (CIT, fuRo), Makoto MIZUKAWA (SIT)

Abstract: This paper describes the second activity report of sub working group for the mobile robot in NEDO Intelligent
RT Software Project. The sub working group is organized by three research consortia who consist of National Institute of
Advanced Industrial Science and Technology, the Shibaura Institute of Technology consortium (Chiba Institute of
Technology, NEC Soft, PUES), and the Segway Japan consortium (Tohoku University, International Rescue System Institute,
Kyoto University). The joint interface of RT component for mobile robots is proposed by the three research consortia as
activity efforts

  </description>
  <author>Writtein by M.Shimizu, N.Kita, T.Saito, E.Takeuchi, Y.Nakajima, N.Takegawa H.Igarashi, Y.Hayashibara, H.Yamamoto, K.Toda, T.Furuta, M.Mizukawa, ROS package is maintained Kei Okada</author>
  <license/>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/iis_idl</url>

  <depend package="openrtm"/>

</package><package name="automow_maps" path="" repo="au_automow_common" repo_host="https://github.com/Auburn-Automow/au_automow_common">
  <description brief="automow_maps">

     Contains maps and map_server configurations and launch files.

  </description>
  <author>William Woodall</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/automow_maps</url>
  <depend package="map_server"/>
  <depend package="geometry_msgs"/>
  <depend package="magellan_dg14"/>

</package><package name="starmac_roslib" path="" repo="starmac-ros-pkg" repo_host="https://bitbucket.org/bouffard/starmac-ros-pkg">
  <description brief="starmac_roslib">

     starmac_roslib contains no nodes, only library code

  </description>
  <author>Patrick Bouffard</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/starmac_roslib</url>

  <depend package="visualization_msgs"/>
  <depend package="rospy"/>
  <depend package="std_msgs"/>
  <depend package="tf"/>
</package><package name="pose_follower" path="" repo="navigation_experimental" repo_host="https://kforge.ros.org/navigation/experimental">
  <description brief="pose_follower">

     pose_follower

  </description>
  <author>Eitan Marder-Eppstein</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pose_follower</url>
  <depend package="nav_core"/>
  <depend package="base_local_planner"/>
  <depend package="costmap_2d"/>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="nav_msgs"/>
  <depend package="pluginlib"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lpose_follower"/>
    <nav_core plugin="${prefix}/blp_plugin.xml"/>
  </export>

</package><package name="sr_dremmeling_wall" path="" repo="sr_demo" repo_host="lp:sr-demo">
  <description brief="sr_dremmeling_wall">

    This is a package used to dremmel a colored part of a white wall, using the denso arm
    with a dremmel attached to it. This is a demo only.

  </description>
  <author>Ugo Cupcic / ugo@shadowrobot.com</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sr_dremmeling_wall</url>
  <depend package="rospy"/>
  <depend package="sr_robot_msgs"/>
  <depend package="denso_msgs"/>
  <depend package="tf"/>
  <depend package="actionlib"/>
  <depend package="kinect_color_segmentation"/>
  <depend package="sr_utilities"/>
  <depend package="interactive_markers"/>

</package><package name="cob_base_velocity_smoother" path="" repo="cob_driver" repo_host="git://github.com/ipa320/cob_driver">
  <description brief="cob_base_velocity_smoother">

    The 'cob_base_velocity_smoother' reads velocity messages and publishes messages of the same type for &quot;smoothed&quot; velocity to avoid shaking behavior. 

  </description>
  <author>Florian Mirus</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_base_velocity_smoother</url>
  <depend package="std_msgs"/>
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>

</package><package name="ddwrt_access_point" path="/stacks/linux_networking/trunk/ddwrt_access_point" repo="linux_networking" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="ddwrt_access_point">
    A ROS node that controls a Linksys WRT610Nv2 access point with
    a dd-wrt firmware. Other access points models/dd-wrt versions
    may be compatible as long as the web interface is identical.
  </description>
  <author>Personal Networks</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ddwrt_access_point</url>
  <depend package="rospy"/>
  <depend package="access_point_control"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="ieee80211_channels"/>
</package><package name="knowrob_cad_parser" path="/tags/latest/knowrob_cad_parser" repo="knowrob" repo_host="http://code.in.tum.de/pubsvn/knowrob">
  <description brief="knowrob_cad_parser">

     a package which contains Java code for parsing CAD Models (3D Models)

  </description>
  <author>Stefan Profanter</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/knowrob_cad_parser</url>

  <depend package="knowrob_common"/>
  <depend package="jpl"/>
  <depend package="rosjava_jni"/>

  <export>
    <java classpath="${prefix}/bin:${prefix}/lib/vecmath.jar:${prefix}/lib/j3dcore.jar:${prefix}/lib/j3dutils.jar:${prefix}/lib/dae4j.jar${prefix}/lib/processing/core.jar:${prefix}/lib/processing/PeasyCam.jar:${prefix}/lib/processing/log4j-1.2.16.jar"/>
    <rosdoc config="rosdoc.yaml"/>
  </export>

</package><package name="pr2_dremel_server" path="/trunk/stacks/pr2_dremel/pr2_dremel_server" repo="bosch-ros-pkg-e" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg-e/code">
  <description brief="pr2_dremel_server">

     pr2_dremel_server

  </description>
  <author>Christian Bersch, Benjamin Pitzer (maintained by Benjamin Pitzer)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_dremel_server</url>
  
  <depend package="rospy"/>
  <depend package="roscpp"/>

  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="kinematics_msgs"/>
  <depend package="arm_navigation_msgs"/>
  <depend package="tf"/>
  <depend package="trajectory_filter_server"/>

  <depend package="pr2_controller_manager"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="pr2_controller_interface"/>   

  <depend package="simple_robot_control"/>
</package><package name="ARL_sphero_command" path="" repo="ARL_sphero_command" repo_host="https://github.com/parcon/ARL-sphero-command">
  <description brief="ARL_sphero_command">

     ARL_sphero_command is a node that allows the command of a Sphero robot. Currently it suports joy and twist messages.

  </description>
  <author>Parker Conroy</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ARL_sphero_command</url>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
</package><package name="cram_process_modules" path="" repo="cram_core" repo_host="https://github.com/moesenle/cram_core">
  <description brief="A common interface definition for lower level control routines.">
  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <url>http://ros.org/wiki/cram_process_modules</url>
  <review notes="" status="unreviewed"/>
  <depend package="sbcl"/>
  <depend package="alexandria"/>
  <depend package="cram_designators"/>
  <depend package="cram_language"/>
  <depend package="lisp_unit"/>
</package><package name="elevator_move_base_pr2" path="/trunk/elevator_move_base_pr2" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="elevator_move_base_pr2">

     elevator_move_base_pr2

  </description>
  <author>saito</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/elevator_move_base_pr2</url>
  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>

  <depend package="roseus"/>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="pr2eus"/>
  <depend package="roseus_smach"/>
  <depend package="jsk_maps"/>
  <depend package="jsk_perception"/>
  <depend package="move_base_msgs"/>
  <depend package="sound_play"/>
  <depend package="std_srvs"/>
  <depend package="nav_msgs"/>
  <depend package="image_geometry"/>
  <depend package="image_transport"/>
  <depend package="roseus_smach"/>
  <depend package="cv_bridge"/>

  <rosdep name="opencv2"/>
</package><package name="self_test" path="/stacks/diagnostics/trunk/self_test" repo="diagnostics" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Tools relating to self-tests.">
    <p>  
      A self_test is a service call provided by a node that triggers a
      test of the driver and any associated hardware. This service call can
      be used by users to quickly verify that a device or process is working.
      Currently self-tests are mainly used with drivers, but nothing
      precludes non-driver nodes using them.
    </p>
    <p>  
      The self_test package contains tools to for calling the self-test
      service from the command-line, or from a regression test. It also
      provides a C++ API for facilitating writing of self-tests.  
    </p>
  </description>
  <author>Jeremy Leibs and Blaise Gassend</author>
  <license>BSD</license>
  <review notes="Jan 15 2010" status="Doc reviewed"/>
  <url>http://www.ros.org/wiki/self_test</url>
  <depend package="roscpp"/>
  <depend package="diagnostic_updater"/>
  <depend package="diagnostic_msgs"/>  
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/srv/cpp"/>
  </export>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="pr2_navigation_self_filter" path="" repo="pr2_navigation" repo_host="https://kforge.ros.org/pr2navigation/hg">
  <description brief="pr2_navigation_self_filter">

     Filters the robot's body out of point clouds.

  </description>
  <author>Eitan Marder-Eppstein</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_navigation_self_filter</url>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="filters"/>
  <depend package="sensor_msgs"/>
  <depend package="urdf"/>
  <depend package="bullet"/>
  <depend package="resource_retriever"/>
  <depend package="visualization_msgs"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>

</package><package name="pr2_create_object_model" path="/stacks/pr2_tabletop_manipulation_apps/branches/0.4-branch/pr2_create_object_model" repo="pr2_tabletop_manipulation_apps" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_create_object_model">

     pr2_create_object_model

  </description>
  <author>Kaijen Hsiao</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_create_object_model</url>

  <depend package="actionlib"/>
  <depend package="tf"/>
  <depend package="actionlib_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="tabletop_object_detector"/>
  <depend package="object_manipulator"/>
  <depend package="tabletop_collision_map_processing"/>

</package><package name="rxparamedit" path="/trunk/freiburg_tools/rxparamedit" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="rxparamedit">
     rxparamedit - A graphical parameter editor.
  </description>
  <author>Christian Dornhege</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rxparamedit</url>
  <depend package="roscpp"/>

  <rosdep name="qt4"/>
  
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lxmlRpcModel"/>
  </export>

</package><package name="libvicon" path="" repo="uuisrc-ros-pkg" repo_host="https://github.com/cburbridge/uuisrc-ros-pkg">
  <description brief="libvicon">

     Classes for Stream and Request-Reply TCP communications with 
     a Vicon Motion Tracking System.

  </description>
  <author>Chris Burbridge</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/libvicon</url>
  <depend package="roscpp"/>
  <rosdep name="libxml2"/>
  <rosdep name="boost"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -llibvicon"/>
  </export>
</package><package name="s2250_capture" path="/trunk/s2250_capture" repo="aptima-ros-pkg" repo_host="http://aptima-ros-pkg.googlecode.com/svn">
  <description brief="s2250_capture">

     Sensoray 2250/2251 usb video capture card driver

  </description>
  <author>Jeff Rousseau</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/s2250_capture</url>

  <depend package="sensor_msgs"/>
  <depend package="camera_info_manager"/>
  <depend package="roscpp"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>

  <platform os="ubuntu" version="10.04"/>

  <rosdep name="opencv2.3"/>

</package><package name="automow_apps" path="" repo="au_automow_apps" repo_host="https://github.com/Auburn-Automow/au_automow_apps">
  <description brief="automow_apps">

     automow_apps

  </description>
  <author>Michael Carroll</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/automow_apps</url>

  <depend package="rosservice"/>
  <depend package="app_manager"/>

</package><package name="opennl" path="/trunk/stacks/bosch_3rdparty/opennl" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <author>Benjamin Pitzer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <export>
    <cpp cflags="-I${prefix}/opennl/include" lflags="-L${prefix}/opennl/lib -lnl"/>
  </export>
</package><package name="oldultraspeech" path="/trunk/arrg/ua_experimental/oldultraspeech" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
  <description brief="ultraspeech">

     ultraspeech

  </description>
  <author>Arizona Robotics Research Group</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ultraspeech</url>
  <depend package="opencv2"/>
  <depend package="image_proc"/>
  <depend package="rospy"/>
  <depend package="roscpp"/>

</package><package name="sr_gazebo_plugins" path="" repo="shadow_robot" repo_host="lp:sr-ros-interface">
  <description brief="Gazebo Plugins for Personal Robots">
    Gazebo Plugins for various Shadow Robot-specific sensors and actuators on the robot.
  </description>
  <author>adapted by Ugo(software@shadowrobot.com), Sachin Chitta, Stu Glaser, John Hsu</author>
  <license>BSD</license>
  <review notes="2010/01/21" status="Doc reviewed"/>
  <url>http://ros.org/wiki/pr2_gazebo_plugins</url>
  <depend package="gazebo"/>
  <depend package="gazebo_plugins"/>
  <depend package="gazebo_tools"/>
  <depend package="opende"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="std_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="cv_bridge"/>
  <depend package="pr2_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="opencv2"/>
  <depend package="diagnostic_updater"/>
  <depend package="cv_bridge"/>
  <depend package="diagnostic_msgs"/>
  <depend package="angles"/>
  <depend package="pr2_hardware_interface"/>
  <depend package="sr_hardware_interface"/>
  <depend package="pr2_controller_manager"/>
  <depend package="pr2_mechanism_model"/>
  <depend package="bullet"/>
  <depend package="urdf"/>
  <depend package="polled_camera"/>
  <depend package="image_transport"/>
  <depend package="dynamic_reconfigure"/>

  <depend package="sr_hardware_interface"/>
  <depend package="pr2_gazebo_plugins"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib"/>
    <gazebo plugin_path="${prefix}/lib"/>
  </export>
  <rosdep name="python-numpy"/>
  <rosdep name="tinyxml"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="tf2_msgs" path="" repo="geometry_experimental" repo_host="https://kforge.ros.org/geometry/experimental">
  <description brief="tf2_msgs">

     tf2_msgs

  </description>
  <author>Eitan Marder-Eppstein</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/tf2_msgs</url>
  <depend package="geometry_msgs"/>
  <depend package="actionlib_msgs"/>
</package><package name="cob_ogre" path="" repo="cob_simulation" repo_host="git://github.com/ipa320/cob_simulation">
  <description brief="cob_ogre">

    This package contains Care-O-bot Ogre mesh files used for visualization and collision.

  </description>
  <author>Florian Weisshardt</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_ogre</url>
  
  <depend package="cob_description"/>
  <depend package="raw_description"/>
  <depend package="schunk_description"/>
  <depend package="ogre_tools"/>
  <depend package="ivcon"/>
  <depend package="convex_decomposition"/>

</package><package name="freenect_launch" path="" repo="freenect_stack" repo_host="https://github.com/piyushk/freenect_stack">
  <description brief="Convenience launch files for freenect_camera">

    Contains a set of launch files for freenect_camera to produce rectified,
    registered and/or disparity images. Also used to produce point clouds and
    registered point clouds. Based on the freenect_launch package.

  </description>
  <author>Patrick Mihelich (original openni_launch package), Piyush Khandelwal (libfreenect port)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/freenect_launch</url>

  <depend package="depth_image_proc"/>
  <depend package="image_proc"/>
  <depend package="nodelet"/>
  <depend package="freenect_camera"/>
  <depend package="tf"/>

</package><package name="miabot" path="" repo="miabot" repo_host="https://github.com/MerlinSystemsCorp/ROSMiabotDriver">
  <description brief="miabot">

     Merlin Systems Corp. Ltd - MiabotPro mobile robot platform driver.

  </description>
  <author>user</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/miabot</url>
  <depend package="roscpp"/>
  <depend package="tf"/>
<!--  <depend package="player"/>-->
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="std_msgs"/>
</package><package name="2010_05_pr2_workshop" path="/trunk/demos/2010_05_pr2_workshop" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="pr2 workshop for pr2 beta program">
    pr2 workshop for pr2 beta program
  </description>
  <author>Ryohei Ueda (ueda@jsk.t.u-tokyo.ac.jp)</author>
  <license>Apache License 2.0</license>
  <depend package="pr2_controllers_msgs"/>
  <depend package="setup_midbody_controller"/>
</package><package name="explore_rfid" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="explore_rfid">

     explore_rfid

  </description>
  <author>Travis Deyle</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <depend package="explore_hrl"/>
  <depend package="pr2_navigation_slam"/>
  <depend package="pr2_navigation_perception"/>
  <depend package="pr2_navigation_teleop"/>
  <depend package="pr2_machine"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="simple_robot_control" path="/trunk/stacks/bosch_manipulation_utils/simple_robot_control" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="interface to PR2 controllers">

     Simple C++ and python interface to move the arms, head, base, torso and grippers of a PR2 robot.

  </description>
  <author>Christian Bersch, Sebastian Haug (Maintained by Benjamin Pitzer)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/simple_robot_control</url>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="actionlib"/>
  <depend package="sensor_msgs"/>
  <depend package="kinematics_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="trajectory_msgs"/>
  <depend package="std_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="arm_navigation_msgs"/>
  <depend package="tf"/>
  <depend package="tf_conversions"/>
  <depend package="pr2_common_action_msgs"/>
  
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lsimple_robot_control"/>
  </export>

</package><package name="gazebo_worlds" path="/stacks/simulator_gazebo/trunk/gazebo_worlds" repo="simulator_gazebo" repo_host="https://code.ros.org/svn/ros-pkg">
  <description>Gazebo world and model files for wg.</description>
  <author>John Hsu, Ioan Sucan</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/gazebo_worlds</url>

  <depend package="xacro"/>
  <depend package="ivcon"/>
  <depend package="gazebo"/>
  <depend package="gazebo_tools"/>
  <depend package="gazebo_plugins"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>

  <export>
    <gazebo gazebo_media_path="${prefix}"/>
  </export>

</package><package name="pr2_2dnav" path="/stacks/pr2_navigation_apps/trunk/pr2_2dnav" repo="pr2_navigation_apps" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="Global navigation for the PR2 robot.">

     This application allows the PR2 robot to navigate autonomously with a pre-specified static map.

  </description>
  <author>Eitan Marder-Eppstein</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_2dnav</url>
  <depend package="pr2_navigation_global"/>
  <depend package="pr2_navigation_perception"/>
  <depend package="pr2_navigation_teleop"/>
  <depend package="pr2_machine"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="scan3d_pcl" path="/trunk/Scan3D/scan3d_pcl" repo="roblab-whge-ros-pkg" repo_host="http://roblab-whge-ros-pkg.googlecode.com/svn">
  <description brief="scan3d_pcl">

     Communicates with the pcl package

  </description>
  <author>B. Möller</author>
  <license>CreativeCommons BY-NC-SA License</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/scan3d_pcl</url>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="pcl_visualization"/>
  <depend package="sensor_msgs"/>

</package><package name="camera_firewire" path="" repo="flyatar" repo_host="http://github.com/peterpolidoro/Flyatar">
  <description brief="DC1394 Calibrated Camera Driver">
    Customizable camera streaming using dc1394 ROS driver. Parameters it uses:

    display - shows the image on the local computer
    cameraguid - hex string, if specified will only open a camera with this guid
    cameraindex - index of the camera to start if cameraguid is not present
    mode - any one of opencv modes to set, for example: &quot;MODE_640x480_YUV422&quot;
    framerate - number of frames a second to publish
    KK_fx,KK_fy,KK_cx,KK_cy - intrinsic parameters such that KK = [fx 0 cx; 0 fy cy; 0 0 1]
    kc_k1,kc_k2,kc_p1,kc_2 - radial distortion coefficients to undistort the image
    colorfilter - color conversion for debayering, can be
               &quot;COLOR_FILTER_RGGB&quot;, &quot;COLOR_FILTER_GBRG&quot;, &quot;COLOR_FILTER_GRBG&quot;, &quot;COLOR_FILTER_BGGR&quot;
    brightness
    contrast
    whitebalance_blueu
    whitebalance_redv
    exposure
    compression - how to compress the data before sending, can be &quot;none&quot;, &quot;png&quot;, &quot;jpg&quot;, &quot;jpeg&quot;
    gain - the gain on the camera values
  </description>
  <author>Rosen Diankov (rdiankov@cs.cmu.edu) with Jeremy Liebs, Kurt Konolige for dcam1394 files</author>
  <license>Apache License 2.0</license>
  <depend package="roscpp"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="image_transport"/>
  <depend package="sensor_msgs"/>
  <depend package="std_msgs"/>
  <depend package="tf"/>
  <rosdep name="libdc1394"/>
  <export>
    <!-- <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -ldcam1394" /> -->
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -libdc1394"/>
  </export>
</package><package name="automow_ekf" path="" repo="au_automow_common" repo_host="https://github.com/Auburn-Automow/au_automow_common">
  <description brief="automow_ekf">

    Extended Kalman Filter to estimate the position of the Autonomous lawnmower
    based on the wheel encoders, GPS position, and AHRS.

  </description>
  <author>Michael Carroll and William Woodall</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/automow_ekf</url>
  <depend package="rospy"/>
  <depend package="roslib"/>
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="tf"/>
  <depend package="ax2550"/>
  <depend package="automow_node"/>
  <depend package="magellan_dg14"/>
</package><package name="playground" path="/trunk/ros/playground" repo="drh-robotics-ros" repo_host="http://drh-robotics-ros.googlecode.com/svn">
  <description brief="playground">

     playground

  </description>
  <author>Dr. Rainer Hessmer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/playground</url>
  <depend package="std_msgs"/>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="tf"/>

</package><package name="ds_pr2_fridge_drink_perception" path="/trunk/stacks/drink_serving/ds_pr2_fridge_drink_perception" repo="bosch-ros-pkg-e" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg-e/code">
  <description brief="ds_pr2_fridge_drink_perception">

     A node that locates cylindrical clusters inside the refigerator and returns their centroids.

  </description>
  <author>Bharath Sankaran</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ds_pr2_fridge_drink_perception</url>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="pcl"/>
  <depend package="std_msgs"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <!--depend package="pcl_cloud_tools" /-->
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="mapping_msgs"/>
  <depend package="yaml_cpp"/>
  <!--See http://octomap.sourceforge.net/ -->
  <!--depend package="octomap"/-->
  <!--depend package="octomap_server"/-->
  <depend package="visualization_msgs"/>
  <!--depend package="ias_table_msgs" /-->
  <depend package="pcl_visualization"/>
  <!-- <depend package="pcl_vtk_tools" /> -->
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <!--depend package="drink_serving_perception"/-->
  <export>
    <cpp cflags="-I${prefix}/include/"/>
  </export>


</package><package name="joint_trajectory_action_tools" path="/stacks/pr2_common_actions/trunk/joint_trajectory_action_tools" repo="pr2_common_actions" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="joint_trajectory_action_tools">

     joint_trajectory_action_tools

  </description>
  <author>Melonee Wise</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/joint_trajectory_action_tools</url>
  <depend package="joint_trajectory_action"/>
  <depend package="trajectory_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="rospy"/>
  <depend package="roslib"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="cob_gazebo_objects" path="" repo="cob_environments" repo_host="git://github.com/ipa320/cob_environments">
  <description brief="cob_gazebo_objects">

     This package provides some objects and furniture for gazebo simulation.

  </description>
  <author>Nadia Hammoudeh</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_gazebo_objects</url>

  <depend package="urdf"/>
  <depend package="xacro"/>

  <depend package="cob_description"/> <!-- only needed for urdf test-->

  <export>
    <gazebo gazebo_media_path="${prefix}"/>
  </export>

</package><package name="hesitation" path="/trunk/gestures/hesitation" repo="ubc-ros-pkg" repo_host="https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg">
  <description brief="hesitation">

     This package provides a trajectory generator of hesitation gestures as described in AJung Moon's thesis (available at https://circle.ubc.ca/handle/2429/42094), adding a new type of motion defined as Pause(P)-type hesitation. It constantly publishes Cartesian points on a topic with frequency determined by the user, allowing robotic platforms to subscribe to it and move following a desired trajectory. 

  </description>
  <author>AJung Moon/ajmoon@interchange.ubc.ca (original code), Andre Goto/goto.andre@gmail.com (extended code)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hesitation</url>
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>

</package><package name="cob_object_detection_fake" path="" repo="cob_object_perception" repo_host="git://github.com/ipa320/cob_object_perception">
  <description brief="cob_object_detection_fake">

     cob_object_detection_fake

  </description>
  <author>Joshua Hampp</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_object_detection_fake</url>
  
  <depend package="rospy"/>
  <depend package="gazebo"/>
  <depend package="cob_object_detection_msgs"/>

</package><package name="wagon_handle_steering" path="" repo="cwru-ros-pkg" repo_host="http://github.com/cwru-robotics/cwru-ros-pkg">
	<description brief="wagon_handle_steering">

		wagon_handle_steering

	</description>
	<author>Eric Perko</author>
	<license>BSD</license>
	<review notes="" status="unreviewed"/>
	<url>http://ros.org/wiki/wagon_handle_steering</url>
	<depend package="std_msgs"/>
	<depend package="tf"/>
	<depend package="nav_msgs"/>
	<depend package="base_local_planner"/>
	<depend package="nav_core"/>
	<depend package="pluginlib"/>
	<depend package="roscpp"/>

	<export>
		<cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lwagon_handle_steering"/>
		<nav_core plugin="${prefix}/blp_plugin.xml"/>
	</export>


</package><package name="cyphy_CF" path="" repo="cyphy_legacy" repo_host="http://launchpad.net/cyphy">
  <description brief="cyphy_complementary filter implementation">
cyphy complementary filter implementation for mikrokopter.
  </description>
  <author>Inkyu Sa</author>
  <license>GPL</license>
  <review notes="This is unstable and under active development." status="experimental"/>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="control_toolbox"/>
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="tf"/>
  <depend package="visualization_msgs"/>
  <depend package="resource_retriever"/>
  <depend package="cyphy_kbd"/>
  <depend package="dynamic_reconfigure"/>
</package><package name="demo_sbpl_dynamic_env" path="/sbpl_dynamic_env/trunk/demo_sbpl_dynamic_env" repo="sbpl_dynamic_env" repo_host="https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs">
  <description brief="demo_sbpl_dynamic_env">

A demo package which has launch files to test the stack and demonstrate uses.

  </description>
  <author>Michael Phillips</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/demo_sbpl_dynamic_env</url>
  
  <depend package="roscpp"/> 
  <depend package="tf"/> 
  <depend package="nav_msgs"/> 
  <depend package="sbpl_dynamic_env_global_planner"/>

  <!-- For gtest -->
  <depend package="stage"/>
</package><package name="lwr_impedance_controller" path="" repo="lwr_robot" repo_host="https://github.com/RCPRG-ros-pkg/lwr_robot">
  <description brief="lwr_impedance_controller">

     lwr_impedance_controller

  </description>
  <author>Konrad Banachowicz</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/lwr_impedance_controller</url>

  <depend package="rtt"/>
  <depend package="kdl"/>
  <depend package="lwr_fri"/>
  <depend package="geometry_msgs"/>
  <depend package="rtt_geometry_msgs"/>
  
</package><package name="topic_logger" path="/trunk/stacks/remote_lab/topic_logger" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="topic_logger">

     topic_logger

  </description>
  <author>Ralf Kempf  Maintained by Sarah Osentoski and Ben Pitzer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/topic_logger</url>
  <depend package="actionlib"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="roslib"/>
  <depend package="std_msgs"/>
  <depend package="actionlib_msgs"/>
  <depend package="topic_tools"/>
  <depend package="rostest"/>
  <depend package="rosbag"/>
</package><package name="tf_publisher_gui" path="" repo="uos_tools" repo_host="http://kos.informatik.uni-osnabrueck.de/uos_tools.git">
  <description brief="GUI for publishing tf transforms">

     This is a simple GUI for publishing a single TF transform.

  </description>
  <author>Martin Günther</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/tf_publisher_gui</url>
  <depend package="rospy"/>
  <depend package="tf"/>

  <rosdep name="wxpython"/>
</package><package name="px_comm" path="" repo="px-ros-pkg" repo_host="https://github.com/cvg/px-ros-pkg">
  <description brief="Message definitions for communications with PIXHAWK hardware and software">

     This package contains message definitions for communications with the PIXHAWK hardware and software.

  </description>
  <author>Lionel Heng</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/px_comm</url>
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp"/>
  </export>

</package><package name="rgbd_assembler" path="/stacks/pr2_object_manipulation/branches/0.6-branch/manipulation/rgbd_assembler" repo="pr2_object_manipulation" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="rgbd_assembler">

    Upon a request, this service collects the necessary 
    sensory data to transfer the colour information from 
    the wide field to the narrow field camera image. 

    Since the narrow field cameras of the PR2 are monochrome,
    this can be useful for any algorithm that does, e.g., 
    segmentation or recognition based partially on colour information.

  </description>
  <author>Jeannette Bohg</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rgbd_assembler</url>

  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="sensor_msgs"/>
  <depend package="stereo_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="rviz_interaction_tools"/>
  <depend package="pcl_ros"/>

</package><package name="color_DDP" path="/branches/stable/color_DDP" repo="wu-ros-pkg" repo_host="https://wu-robotics.googlecode.com/svn">
  <description brief="head">
     Color_DDP is a simple ROS package for the PR2 that uses cmvision to track a green and red colored ball. Color_DDP uses Differential Dynamic Programming (DDP) to solve a locally-optimal trajectory from an initial position, around an obstacle, to a goal. Here the initial position is the pixel given by cmvision of the green ball in the Kinect camera/rgb/image_color topic. The obstacle is the pixel of the red ball in the camera/rgb/image_color topic. The goal is the center of the image. 
  </description>
  <author>Matthew Kusner, Tom Erez</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/color_DDP</url>
  <depend package="message_filters"/>
  <depend package="sensor_msgs"/>
  <depend package="actionlib"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="stereo_msgs"/>
  <depend package="image_geometry"/>
  <depend package="roscpp"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="rospy"/>
  <depend package="cmvision"/>
  <depend package="tf"/>
  <depend package="sound_play"/>
</package><package name="rosie_arm_navigation_launch" path="/arm_navigation/rosie_arm_navigation/rosie_arm_navigation_launch" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="rosie_arm_navigation">

     rosie_arm_navigation

  </description>
  <author>E. Gil Jones</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosie_arm_navigation</url>

  <depend package="arm_navigation_tests"/>
  <depend package="ias_gazebo"/>
  <depend package="rosie_arm_kinematics"/>

</package><package name="task_image_server" path="" repo="continuous_ops" repo_host="https://kforge.ros.org/contops/hg">
  <description brief="task_image_server">

     task_image_server

  </description>
  <author>Eitan Marder-Eppstein</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/task_image_server</url>
  <depend package="rosweb"/>
  <depend package="rospy"/>
  <depend package="continuous_ops_msgs"/>

  <export>
    <rosweb plugin="task_image_server.handler"/>
  </export>

</package><package name="seabee3_teleop" path="/trunk/cturtle/seabee3_teleop" repo="seabee3-ros-pkg" repo_host="http://seabee3-ros-pkg.googlecode.com/svn">
  <description brief="seabee3_teleop">

     seabee3_teleop

  </description>
  <author>Edward T. Kaszubski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/seabee3_teleop</url>
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  <depend package="joy"/>
  <depend package="tf"/>
  <depend package="seabee3_driver_base"/>
  <depend package="base_libs"/>
  <depend package="common_utils"/>
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp -I${prefix}/srv/cpp"/>
  </export>
</package><package name="rxlab" path="/stacks/ros_experimental/trunk/rxlab" repo="ros_experimental" repo_host="https://code.ros.org/svn/ros">
  <description brief="rxlab">

rxlab is a graphical scripting environment for ROS.

  </description>
  <author>Tim Field</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rxlab</url>

  <depend package="rospy"/>
  <depend package="rosgraph"/>
  <depend package="rosh"/>

  <!-- for units -->
  <depend package="rxbag"/>
  <depend package="rxbag_plugins"/>
  <depend package="image_geometry"/>
  <depend package="tf"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="auv_description" path="/trunk/hwu_osl_software/auv_description" repo="hwu-osl-ros-pkg" repo_host="http://hwu-osl-ros-pkg.googlecode.com/svn">
  <description brief="auv_description">

     auv_model

  </description>
  <author>Joel Cartwright</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/auv_description</url>

</package><package name="player_camera" path="" repo="uuisrc-ros-pkg" repo_host="https://github.com/cburbridge/uuisrc-ros-pkg">
  <description brief="player_camera">
	
  </description>
  <author>Chris Burbridge</author>
  <license>WhoCares</license>
  <review notes="" status="unreviewed"/>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="image_transport"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>  
  <depend package="camera_calibration_parsers"/>  


  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="rosjava_zeroconf_master" path="" repo="interactive-spaces" repo_host="https://code.google.com/p/interactive-spaces">
  <description brief="rosjava_zeroconf_master">
    Master Zeroconf module for ROS..
  </description>
  <author>Keith Hughes/khughes@google.com</author>
  <license>Apache License 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://code.google.com/p/interactive-spaces/</url>
  
  <depend package="rosjava"/>
  <depend package="osgi"/>
  <depend package="osgi_master"/>
  <depend package="rosjava_zeroconf_common"/>

  <rosdep name="java"/>
</package><package name="rosdoc" path="/stacks/documentation/trunk/rosdoc" repo="documentation" repo_host="https://code.ros.org/svn/ros">
  <description brief="ROS documentation generator">

      rosdoc wraps documentation tools like doxygen, sphinx, and epydoc
      with ROS package semantics to auto-generate
      documentation for ROS packages. rosdoc also supports online documentation,
      like the ROS wiki.

  </description>
  <author>Ken Conley/kwc@willowgarage.com</author>
  <license>BSD</license>
  
  <review notes="" status="Doc reviewed"/>
  
  <url>http://ros.org/wiki/rosdoc</url>
  
  <depend package="roslib"/>
  <depend package="rosmsg"/>   
  <rosdep name="doxygen"/>
  <rosdep name="epydoc"/>
  <rosdep name="python-sphinx"/>
  <rosdep name="python-yaml"/>
  
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
  <platform os="macports" version="macports"/>
</package><package name="audio_play" path="" repo="audio_common" repo_host="https://kforge.ros.org/audiocommon/audio_common">
  <description brief="audio_play">
    Outputs audio to a speaker from a source node.
  </description>

  <author>Nate Koenig</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/audio_play</url>
  <depend package="roscpp"/>
  <depend package="audio_common_msgs"/>
  <rosdep name="libgstreamer0.10-dev"/>
  <rosdep name="libgstreamer-plugins-base0.10-dev"/>
  <rosdep name="python-gst"/>
  <rosdep name="gstreamer0.10-plugins-ugly"/>
  <rosdep name="gstreamer0.10-plugins-good"/>

</package><package name="wbc_uta_opspace" path="" repo="whole_body_control" repo_host="https://github.com/poftwaresatent/whole_body_control">
  <description brief="ROS wrapper for the UT Austin operational space control library.">
  </description>
  <author/>
  <license>LGPLv3</license>
  <review notes="" status="unreviewed"/>
  <url>https://github.org/poftwaresatent/utaustin-wbc</url>
  <depend package="wbc_core"/>
  <export>
    <cpp cflags="-I${prefix}/" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lwbc_uta_opspace"/>
  </export>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="route_network" path="/trunk/stacks/open_street_map/route_network" repo="utexas-art-ros-pkg" repo_host="http://utexas-art-ros-pkg.googlecode.com/svn">
  <description brief="Route network path planning.">

     Route network graphing and path planning.

  </description>
  <author>Jack O'Quin</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/route_network</url>

  <depend package="dynamic_reconfigure"/>
  <depend package="geodesy"/>
  <depend package="geographic_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="rospy"/>
  <depend package="visualization_msgs"/>

  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>

</package><package name="arm_track" path="" repo="uuisrc-ros-pkg" repo_host="https://github.com/cburbridge/uuisrc-ros-pkg">
  <description brief="arm_track">

     arm_track

  </description>
  <author>Lorenzo</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/arm_track</url>
  <depend package="SchunkRos"/>
  <depend package="roscpp"/>
  <depend package="bullet"/>
  <depend package="schunk_kinematics"/>

</package><package name="qualification" path="/stacks/wg_hardware_test/trunk/qualification" repo="wg_hardware_test" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="PR2 Hardware Qualification and Testing">
    Tests PR2 hardware as individual components and assembled robots. Tests, analyzes and logs results of the qualification/self-tests.
  </description>
  <author>Kevin Watts (watts@willowgarage.com), Josh Faust (jfaust@willowgarage.com)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <depend package="rospy"/>
  <depend package="pr2_camera_focus"/>
  <depend package="std_msgs"/>
  <depend package="pr2_msgs"/>
  <depend package="fingertip_pressure"/>
  <depend package="diagnostic_msgs"/>
  <depend package="hokuyo_node"/>
  <depend package="microstrain_3dmgx2_imu"/>
  <depend package="ethercat_trigger_controllers"/>
  <depend package="robot_mechanism_controllers"/>
  <depend package="joint_qualification_controllers"/>
  <depend package="pr2_etherCAT"/>
  <depend package="ethercat_hardware"/>
  <depend package="runtime_monitor"/>
  <depend package="rviz"/>
  <depend package="pr2_power_board"/>
  <depend package="wg_invent_client"/>
  <depend package="roslaunch_caller"/>
  <depend package="wge100_camera"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="rxtools"/>
  <depend package="image_view"/>
  <depend package="image_proc"/>
  <depend package="prosilica_camera"/>
  <depend package="pr2_component_descriptions"/>
  <depend package="pr2_camera_synchronizer"/>
  <depend package="sensor_msgs"/>
  <depend package="pr2_controller_manager"/>
  <depend package="pr2_controller_configuration"/>
  <depend package="pr2_bringup"/>
  <depend package="robot_state_publisher"/>
  <depend package="ectools"/>
  <depend package="pr2_self_test_msgs"/>
  <depend package="actionlib"/>
  <depend package="single_joint_position_action"/>
  <depend package="xacro"/>
  <depend package="pr2_counterbalance_check"/>
  <depend package="pr2_transmission_check"/>
  <url>http://www.ros.org/wiki/qualification</url>
  <export>
    <cpp cflags="-I${prefix}/msg/cpp -I${prefix}/srv/cpp"/>
  </export>
  <rosdep name="wxwidgets"/>
  <rosdep name="wxpython"/>
  <rosdep name="python-matplotlib"/>
  <rosdep name="python-serial"/>
  <rosdep name="gnuplot"/>	
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="ltk" path="/3rdparty/lisp/ltk" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="ltk">
    LTK
    http://www.peter-herth.de/ltk/
  </description>
  <author>Peter Herth</author>
  <license>lgpl</license>
  <review notes="" status="unreviewed"/>
</package><package name="youbot_simulator" path="" repo="euRobotics_orocos_ws" repo_host="https://github.com/bellenss/euRobotics_orocos_ws">
    <description brief="Orocos youbot_simulator Component package">

        This package contains the components of the youbot_simulator package

    </description>
    <license>LGPLv2.1 / BSD</license>
    <author>Steven Bellens - steven.bellens@mech.kuleuven.be</author>
    <depend package="rtt"/>
    <depend package="orocos_bfl"/>
    <depend package="bfl_typekit"/>
    <depend package="rtt_ros_param"/>
    <depend package="rtt_ros_integration"/>
    <depend package="geometry_msgs"/>
    <depend package="std_msgs"/>
    <depend package="rtt_ros_integration_geometry_msgs"/>
    <depend package="extendedKalmanFilterComponentRobot"/>
</package><package name="asctec_hl_gps" path="" repo="asctec_mav_framework" repo_host="https://github.com/ethz-asl/asctec_mav_framework">
  <description brief="mission_control">

     mission_control

  </description>
  <author>Markus Achtelik</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/mission_control</url>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="tf"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="actionlib"/>
  <depend package="diagnostic_updater"/>
  <depend package="asctec_hl_comm"/>
  <depend package="message_filters"/>
  <depend package="std_srvs"/>
  
  <rosdep name="eigen"/>

</package><package name="floor_align" path="/trunk/OIT/floor_align" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="floor_align">

     floor_align

  </description>
  <author>Edward</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/floor_align</url>
  
  <depend package="opencv2"/>
  <depend package="tf"/>

</package><package name="missing_objects_tutorial" path="/demos/missing_objects_tutorial" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="missing_objects">

     missing_objects

  </description>
  <author>Dejan Pangercic</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/missing_objects</url>
<!--   <depend package="opencv2"/> -->
<!--   <depend package="cv_bridge"/> -->
  <depend package="sensor_msgs"/>
<!--   <depend package="tf"/> -->
<!--   <depend package="vision_msgs"/> -->
  <depend package="json_prolog"/>
  <depend package="comp_cop"/>
  <depend package="comp_missingobj"/>
</package><package name="rotunit_snapshotter" path="" repo="kurt_driver" repo_host="http://kos.informatik.uni-osnabrueck.de/kurt_driver.git">
  <description brief="rotunit_snapshotter">

     rotunit_snapshotter

  </description>
  <author>Jochen Sprickerhof</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rotunit_snapshotter</url>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="laser_assembler"/>

</package><package name="wireless_camera" path="/trunk/wireless_camera" repo="cu-ros-pkg" repo_host="http://cu-ros-pkg.googlecode.com/svn">
  <description brief="wireless_camera">
     This package publishes sensor_msgs/image from wireless camera which provides a MJPEG stream file.
  </description>
  <author>Soonhac Hong</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/wireless_camera</url>
  <depend package="std_msgs"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="image_transport"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>

</package><package name="contracting_curve_density_algorithm" path="" repo="ias_perception" repo_host="http://code.in.tum.de/git/ias-perception.git">
  <description>
    An extended and optimized implementation of the state-of-theart
    local curve fitting algorithm named Contracting Curve Density (CCD) algorithm, originally
    developed by Hanek et al. 
    The CCD algorithm can be best described as follows. Given one or multiple images as
    input data and a parametric curve model with a priori distribution of model parameters,
    through curve-fitting process, we estimate the model parameters which determine the approximation
    of the posterior distribution in order to make the curve models best matching
    the image data. In order to improve the stability, accuracy and robustness over the original
    implementation we introduce the following improvements. Firstly, we use the logistic
    sigmoid function instead of a Gaussian error function which renders a curve-fitting problem
    as a Gaussian logistic regression problem known in the field of pattern recognition.
    Secondly, a quadratic or a cubic B-spline curve is used to model the parametric curve to
    avoid the Runge phenomenon without increasing the degree of the B-spline. Thirdly, the
    system supports both planar affine (6-DOF) and three-dimensional affine (8-DOF) shapespace.
    The latter affine space can avoid curve mismatching caused by major viewpoint
    changes. Lastly, in order to avoid manual intervention by the user, the developed system
    also supports robust global initial curve initialization modules based on both keypoint
    feature matching and back-projections from the 3D point clouds.
  </description>

  <author>Shulei Zhu, Dejan Pangercic</author>
  <license>BSD</license>
  <url>http://ros.org/wiki/contracting_curve_density_algorithm</url>
  <depend package="roscpp"/>
  <depend package="opencv2"/> 
  <depend package="cv_bridge"/>
  <depend package="image_transport"/>

  <!-- <export> -->
  <!--   <cpp cflags="-I${prefix}/include/" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib "/> -->
  <!--   <image_algos plugin="${prefix}/plugins.xml"/> -->
  <!-- </export> -->
</package><package name="w2_object_manipulation_launch" path="/trunk/arrg/ua_experimental/w2_object_manipulation_launch" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="w2_object_manipulation_launch">
         w2_object_manipulation_launch
    </description>

    <author>Antons Rebguns</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/w2_object_manipulation_launch</url>
    
    <depend package="rospy"/>
    <depend package="tabletop_object_detector"/>
    <depend package="tabletop_collision_map_processing"/>
    <depend package="object_manipulation_msgs"/>
    <depend package="kinematics_msgs"/>
    <depend package="arm_navigation_msgs"/>
    <depend package="actionlib"/>
    <depend package="ua_audio_capture"/>
    <depend package="ua_audio_infomax"/>
    <depend package="dynamixel_msgs"/>
    <depend package="dynamixel_controllers"/>
    <depend package="dynamixel_driver"/>
    <depend package="dynamixel_hardware_interface"/>
    <depend package="interpolated_ik_motion_planner"/>
    <depend package="wubble2_robot"/>
    <depend package="visualization_msgs"/>
    <depend package="move_base_msgs"/>
    <depend package="geometry_msgs"/>
    <depend package="control_msgs"/>
    <depend package="point_cloud_classifier"/>
    <depend package="bolt_msgs"/>
    <depend package="bolt_representation"/>
    <depend package="opencv2"/>
    <depend package="cv_bridge"/>
    <depend package="sensor_msgs"/>
    <depend package="object_tracking"/>
    
    <depend package="smach"/>
    <depend package="smach_ros"/>
</package><package name="kurtana_tabletop_manipulation_launch" path="" repo="kurtana_robot" repo_host="http://kos.informatik.uni-osnabrueck.de/kurtana_robot.git">
  <description brief="kurtana_tabletop_manipulation_launch">

     kurtana_tabletop_manipulation_launch

  </description>
  <author>Henning Deeken</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/kurtana_tabletop_manipulation_launch</url>
  <depend package="roscpp"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="tf_conversions"/>
  <depend package="object_manipulation_msgs"/>
  <depend package="object_manipulator"/>
  <depend package="tabletop_object_detector"/>
  <depend package="tabletop_collision_map_processing"/>
  <depend package="household_objects_database"/>
  <depend package="visualization_msgs"/>

</package><package name="hrpsys_base" path="" repo="stacks/hrpsys_base" repo_host="git://github.com/laas/hrpsys_base">
  <description brief="hrpsys-base">
    ROS package of the 3rd party package hrpsys-base.
  </description>
  <author>Thomas Moulard</author>
  <license>EPL</license>
  <review notes="" status="experimental"/>
  <url>https://code.google.com/p/hrpsys-base/</url>

  <export>
    <cpp cflags="-I${prefix}/install/include" lflags="-L${prefix}/install/lib -Wl,-rpath,${prefix}/install/lib"/>

    <rosdoc config="rosdoc.yaml"/>
  </export>

  <depend package="openrtm_cpp"/>
  <depend package="openhrp"/>
  <depend package="octomap"/>
  <depend package="opencv2"/>

  <rosdep name="libirrlicht-dev"/>
  <rosdep name="libglew-dev"/>
  <rosdep name="sdl"/>

  <rosdep name="jython"/>
  <rosdep name="libqhull"/>
  <rosdep name="libxml2"/>
  <rosdep name="doxygen"/>
  <rosdep name="pkg-config"/>
</package><package name="android_tutorial_hokuyo" path="" repo="android_core" repo_host="https://code.google.com/p/rosjava.android/">
  <description brief="android_tutorial_hokuyo">
     android_tutorial_hokuyo
  </description>
  <author>Damon Kohler (damonkohler@google.com)</author>
  <license>Apache 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/android_tutorial_hokuyo</url>
</package><package name="dead_reckoning_odom" path="/trunk/cturtle/dead_reckoning_odom" repo="seabee3-ros-pkg" repo_host="http://seabee3-ros-pkg.googlecode.com/svn">
  <description brief="dead_reckoning_odom">

     dead_reckoning_odom

  </description>
  <author>Edward T. Kaszubski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/dead_reckoning_odom</url>
  <depend package="roscpp"/>
  <depend package="nav_msgs"/>
  <depend package="seabee3_driver_base"/>
  <depend package="xsens_node"/>
  <depend package="geometry_msgs"/>
  <depend package="base_libs"/>
  <depend package="std_srvs"/>
  <depend package="seabee3_common"/>
  <!-- <depend package="seabee3_physics"/> -->

</package><package name="m10iA_arm_navigation" path="/trunk/fanuc/m10iA_arm_navigation" repo="swri-ros-pkg" repo_host="http://swri-ros-pkg.googlecode.com/svn">
  <description brief="m10iA_arm_navigation">

     m10iA_arm_navigation

  </description>
  <author>Christina Gomez</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/m10iA_arm_navigation</url>
  <depend package="planning_environment"/>
  <depend package="kinematics_base"/>
  <depend package="arm_kinematics_constraint_aware"/>
  <depend package="ompl_ros_interface"/>
  <depend package="trajectory_filter_server"/>
  <depend package="constraint_aware_spline_smoother"/>
  <depend package="move_arm"/>

</package><package name="cyphy_serial_driver" path="" repo="cyphy_legacy" repo_host="http://launchpad.net/cyphy">
  <description brief="cyphy_serial_driver">
cyphy serial driver for mikrokopter.
  </description>
  <author>Inkyu Sa</author>
  <license>GPL</license>
  <review notes="This is unstable and under active development." status="experimental"/>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="control_toolbox"/>
</package><package name="transdec_localizer" path="/trunk/cturtle/transdec_localizer" repo="seabee3-ros-pkg" repo_host="http://seabee3-ros-pkg.googlecode.com/svn">
  <description brief="transdec_localizer">

     transdec_localizer

  </description>
  <author>Rand</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/transdec_localizer</url>
  <depend package="base_libs"/>

</package><package name="pole_structure_mapper" path="/stacks/lse_climber_robots/trunk/pole_structure_mapper" repo="lse_climber_robots" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="pole_structure_mapper">

     This package contains two nodes for pole extraction and mapping for aiding 3D climbing robots in navigation and localization.

  </description>
  <author>Gonçalo Cabrita and Mahmoud Tavakoli</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pole_structure_mapper</url>
  <depend package="roscpp"/>
  <depend package="ar_pose"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="tf"/>
  <depend package="geometry_msgs"/>
  <depend package="std_msgs"/>

</package><package name="libfreenect" path="" repo="freenect_stack" repo_host="https://github.com/piyushk/freenect_stack">
  <description brief="libfreenect">

      Open source libraries that will enable the Kinect to be used with Windows, Linux, and Mac.

  </description>
  <author>Hector Martin, Josh Blake, Kyle Machulis and the OpenKinect community(http://www.openkinect.org).</author>
  <license>Apache 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/libfreenect</url>

  <rosdep name="git"/>
  <rosdep name="cmake"/>
  <rosdep name="glut"/>
  <rosdep name="pkg-config"/>
  <rosdep name="libxmu-dev"/>
  <rosdep name="libxi-dev"/>
  <rosdep name="libusb-1.0-dev"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -lfreenect -lfreenect_sync"/>
  </export>

</package><package name="indomptable_arm" path="" repo="smart-robotics-ros-pkg" repo_host="https://github.com/JBot/smart-robotics-ros-pkg">
  <description brief="indomptable_arm">

     indomptable_arm

  </description>
  <author>jbot</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/indomptable_arm</url>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="dynamixel_controllers"/>
  <depend package="sensor_msgs"/>
  <depend package="tf"/>

</package><package name="rve_mesh_loader" path="" repo="visualization_engine" repo_host="https://kforge.ros.org/visengine/hg">
  <description brief="rve_mesh_loader">

     rve_mesh_loader

  </description>
  <author>Josh Faust</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rve_mesh_loader</url>
  <depend package="assimp"/>
  <depend package="rosconsole"/>
  <depend package="eigen"/>
  <depend package="rve_msgs"/>
  <depend package="rve_common"/>
  <depend package="resource_retriever"/>
  
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lrve_mesh_loader"/>
  </export>

</package><package name="phidgets_api" path="" repo="phidgets_drivers" repo_host="https://github.com/ccny-ros-pkg/phidgets_drivers">
  <description brief="A C++ Wrapper for the Phidgets C API">

  This is an object oriented C++ wrapper for the Phidgets C API

  </description>
  <author>Tully Foote, Ivan Dryanovski</author>
  <license>BSD</license>
  <export>
    <cpp cflags="-I${prefix}/include " lflags="-L${prefix}/lib "/>
  </export>
  <depend package="phidgets_c_api"/>

  <export>
    <cpp cflags="-I${prefix}/include " lflags="-L${prefix}/lib -lphidgets_api"/>
  </export>

</package><package name="hector_quadrotor_gazebo_plugins" path="/branches/fuerte/hector_quadrotor/hector_quadrotor_gazebo_plugins" repo="hector_quadrotor" repo_host="https://tu-darmstadt-ros-pkg.googlecode.com/svn">
  <description brief="hector_quadrotor_gazebo_plugins">

     hector_quadrotor_gazebo_plugins provides gazebo plugins for using quadrotors in gazebo.
     The hector_gazebo_ros_baro sensor plugin simulates an altimeter based on barometric pressure.

  </description>
  <author>Johannes Meyer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hector_quadrotor_gazebo_plugins</url>

  <depend package="roscpp"/>
  <depend package="gazebo"/>
  <depend package="hector_gazebo_plugins"/>

  <depend package="geometry_msgs"/>
  <depend package="hector_uav_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib"/>
    <gazebo plugin_path="${prefix}/lib"/>
  </export>

</package><package name="robotArmJointAnimation" path="/branches/robotArmJointAnimation" repo="rtc-us-ros-pkg-branches" repo_host="https://rtc-us-ros-pkg.svn.sourceforge.net/svnroot/rtc-us-ros-pkg">
  <description brief="robotArmJointAnimation">
	this package contains a node which sends periodically JointStates messages through a topic. It's useful to test the kinematics models defined in URDF and to show it on the rviz tool.

  </description>
  <author>Pablo Iñigo Blasco</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/minoloTest</url>
  <depend package="opencv2"/>
  <depend package="sensor_msgs"/>
  <depend package="roscpp"/>
  <depend package="gazebo"/>
  

</package><package name="simple_arm_actions" path="/trunk/simple_arms/simple_arm_actions" repo="vanadium-ros-pkg" repo_host="http://vanadium-ros-pkg.googlecode.com/svn">
  <description brief="Simple actions for simple arms."/>
  <author>Michael Ferguson</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/simple_arm_actions</url>
  <depend package="rospy"/>

  <!-- messages -->
  <depend package="actionlib"/>
  <depend package="trajectory_msgs"/>
  <depend package="kinematics_msgs"/>
  <depend package="control_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="std_srvs"/>
</package><package name="elektron_defs" path="" repo="elektron_robot" repo_host="https://github.com/RCPRG-ros-pkg/elektron_robot">
  <description brief="elektron_defs">

	This package contains XML (and xacro macros) descriptions of robot kinematics in the format
  defined at Willow Garage for the erratic robot.

  </description>
  <author>Konrad Banachowicz</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/elektron_defs</url>
  <depend package="xacro"/>

</package><package name="wviz" path="/trunk/stacks/bosch_web_visualization/wviz" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="wviz">
    Web visualization tool based on  webgl and websockets.
  </description>
  <author>Benjamin Pitzer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/wviz</url>
  <depend package="rosjs_common"/>
  <depend package="rosjs_resources"/>
  <depend package="rosjs_visualization"/>
  <depend package="visualization_msgs"/>
  <depend package="mjpeg_server"/>
</package><package name="pr2_teleop_app" path="" repo="pr2_teleop_app" repo_host="https://kforge.ros.org/pr2apps/pr2_teleop_apphg">
  <description brief="pr2_teleop_app">
    Teleop application for the pr2
  </description>
  <author>Tony Pratkanis</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/teleop</url>
  <depend package="pr2_position_scripts"/>
  <depend package="topic_tools"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="ardusim" path="/stacks/lse_arduino/trunk/ardusim" repo="lse_arduino" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="ardusim">

     Ardusim (Arduino Sensor Interface Module) is a library for interfacing a wide range of sensors with ROS over the Arduino microcontroller.

  </description>
  <author>Gonçalo Cabrita and Pedro Sousa</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ardusim</url>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lardusim"/>
  </export>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="cereal_port"/>
  <depend package="lse_sensor_msgs"/>

</package><package name="pr2_hello_world" path="/trunk/jsk_android_apps_api9/pr2_hello_world" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="pr2_hello_world">

     pr2_hello_world

  </description>
  <author>Manabu Saito</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_hello_world</url>

</package><package name="pr2_sbl_launch" path="/trunk/pr2_sbl_experimental/pr2_sbl_launch" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="pr2_sbl_launch">

     pr2_sbl_launch

  </description>
  <author>Edward T. Kaszubski ( ekaszubski@gmail.com )</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_sbl_launch</url>

</package><package name="wubble_world_2d" path="/trunk/arrg/ua_verbs/wubble_world_2d" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="wubble_world_2d">

     wubble_world_2d

    </description>
    <author>Daniel Hewlett</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/wubble_world_2d</url>

    <depend package="rosjava"/>
</package><package name="visual_net" path="" repo="turbo-ros-pkg" repo_host="https://github.com/tu-rbo/turbo-ros-pkg">
  <description brief="visual_net">

     Visual Net

  </description>
  <author>Roberto Martin, Dov Katz, Sebastian Hoefer</author>
  <license>GPL / BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/visual_net</url>

  <depend package="iap_common"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="sensor_msgs"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="image_transport"/>
    <export>
    	<cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -lros"/>
    	<cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,-L${prefix}lib -lrosthread -framework CoreServices" os="osx"/>
  </export>
</package><package name="maxwell_defs" path="/trunk/maxwell/maxwell_defs" repo="vanadium-ros-pkg" repo_host="http://vanadium-ros-pkg.googlecode.com/svn">
  <description brief="URDF and bringup info for Maxwell">
    Maxwell is a custom mobile manipulator, this package contains his configuration and launch files. 
  </description>
  <author>Michael Ferguson</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/maxwell_defs</url>

  <!-- definitions -->
  <depend package="urdf"/>
  <depend package="xacro"/>
  <depend package="ivcon"/>

  <!-- diagnostics -->
  <depend package="diagnostic_msgs"/>

  <!-- hardware -->
  <depend package="arbotix_python"/>
</package><package name="ecl_time" path="/trunk/ecl_core/ecl_time" repo="ecl_core" repo_host="https://embedded-control-library.googlecode.com/svn">
  <description brief="Timing utilities">

    Timing utilities are very dependent on the system api provided for their use.
	This package provides a means for handling different timing models. Current support
	
	- posix rt : complete.
	- macosx : posix timers only, missing absolute timers.
	- win : none.
	
  </description>
  <author>Daniel Stonier (d.stonier@gmail.com)</author>
  <license>BSD</license>
  <review notes="" status="api cleared"/>
  <url>http://snorriheim.dnsdojo.com/redmine/wiki/ecl</url>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lecl_time"/>
	<rosdoc config="rosdoc.yaml"/>
  </export>
  <depend package="ecl_errors"/>
  <depend package="ecl_exceptions"/>
  <depend package="ecl_config"/>
  <depend package="ecl_license"/>
  <depend package="ecl_build"/>
  <depend package="ecl_time_lite"/>
</package><package name="nxt_lejos_monitor" path="/trunk/ros/nxt_lejos_apps/nxt_lejos_monitor" repo="lejos-ros-pkg" repo_host="https://lejos.svn.sourceforge.net/svnroot/lejos">
  <description brief="nxt_lejos_monitor">
	A GUI to show the state of the battery and sensors, the robot pose and velocity etc.,
	for a robot running nxt_lejos_proxy. 
  </description>
  <author>leJOS development</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/nxt_lejos_monitor</url>
  <depend package="rosjava"/>
  <depend package="nxt_msgs"/>
  <depend package="nxt_lejos_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="tf"/>
</package><package name="robust_topic_relay" path="" repo="parsec" repo_host="https://code.google.com/p/parsec">
  <description brief="robust_topic_relay">

     robust_topic_relay

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/robust_topic_relay</url>
  <depend package="roscpp"/>
  <depend package="topic_tools"/>
  <depend package="ros_check"/>

</package><package name="sound_play" path="" repo="audio_common" repo_host="https://kforge.ros.org/audiocommon/audio_common">
  <description brief="Play sounds, or synthesize speech.">
sound_play provides a ROS node that translates commands on a ROS topic (<tt>robotsound</tt>) into sounds. The node supports built-in sounds, playing OGG/WAV files, and doing speech synthesis via festival. C++ and Python bindings allow this node to be used without understanding the details of the message format, allowing faster development and resilience to message format changes.
  </description>
  <author>Blaise Gassend, Austin Hendrix/ahendrix@willowgarage.com</author>
  <license>BSD</license>
  <review notes="reviewed 9/30/2009" status="Doc reviewed"/>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="roslib"/>
  <depend package="diagnostic_msgs"/>
  <rosdep name="festival"/>
  <rosdep name="libgstreamer0.10-dev"/>
  <rosdep name="libgstreamer-plugins-base0.10-dev"/>
  <rosdep name="python-gst"/>
  <rosdep name="gstreamer0.10-plugins-ugly"/>
  <rosdep name="gstreamer0.10-plugins-good"/>

  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp"/>
  </export>
  <url>http://www.ros.org/wiki/sound_play</url>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="cram_pr2_executive" path="" repo="cram_pr2" repo_host="https://github.com/moesenle/cram_pr2">
  <description brief="cram_pr2_executive">

     cram_pr2_executive

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cram_pr2_executive</url>
  <depend package="cram_language"/>
  <depend package="cram_execution_trace"/>
  <depend package="cram_reasoning"/>
  <depend package="cram_utilities"/>
  <depend package="cram_math"/>
  <depend package="designators_ros"/>
  <depend package="cram_roslisp_common"/>
  <depend package="cram_plan_library"/>
  <depend package="cram_plan_knowledge"/>
  <depend package="location_costmap"/>
  <depend package="occupancy_grid_costmap"/>
  <depend package="semantic_map_costmap"/>
  <depend package="cram_plan_actionserver"/>
  <depend package="pr2_navigation_process_module"/>
  <depend package="perception_process_module"/>
  <depend package="point_head_process_module"/>
  <depend package="pr2_manipulation_process_module"/>

</package><package name="pose_base_controller" path="" repo="navigation_experimental" repo_host="https://kforge.ros.org/navigation/experimental">
  <description brief="pose_base_controller">

     pose_base_controller

  </description>
  <author>Eitan Marder-Eppstein</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pose_base_controller</url>
  <depend package="actionlib"/>
  <depend package="move_base_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="geometry_msgs"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="WAM_sim_server" path="/darpa_arm_sim_servers/WAM_sim_server" repo="darpa_arm_sim_servers" repo_host="http://svn.thearmrobot.com">
  <description brief="WAM_server">

     WAM_server

  </description>
  <author>DARPA ARM GFE Team</author>
  <license>GPL</license>

  <depend package="roscpp"/>
  <depend package="rosrt"/>
  <depend package="WAM_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="BHand_msgs"/>
  <depend package="PressureSensor_msgs"/>
  <depend package="ForceTorque_msgs"/>
  <depend package="BarrettCompat"/>
  <!--depend package="libbarrett" /-->

  <rosdep name="config++"/>
  <rosdep name="config"/>  

</package><package name="compressed_image_transport" path="/stacks/image_transport_plugins/trunk/compressed_image_transport" repo="image_transport_plugins" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="compressed_image_transport">

     compressed_image_transport provides a plugin to image_transport for transparently sending images
     encoded as JPEG or PNG.

  </description>
  <author>Patrick Mihelich, Julius Kammerl</author>
  <license>BSD</license>
  <review notes="2010/10/10" status="Doc reviewed"/>
  <url>http://www.ros.org/wiki/compressed_image_transport</url>
  <depend package="image_transport"/>
  <depend package="cv_bridge"/>
  <depend package="dynamic_reconfigure"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lcompressed_image_transport"/>
    <image_transport plugin="${prefix}/compressed_plugins.xml"/>
  </export>

</package><package name="gazebo_msgs" path="/stacks/simulator_gazebo/trunk/gazebo_msgs" repo="simulator_gazebo" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="gazebo_msgs">

     Msg and Srv data structures for interacting with Gazebo from ROS.

  </description>
  <author>John Hsu</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/gazebo_msgs</url>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="trajectory_msgs"/>

</package><package name="pr2_gazebo_plugins" path="/stacks/pr2_simulator/trunk/pr2_gazebo_plugins" repo="pr2_simulator" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="Gazebo Plugins for Personal Robots">
    Gazebo Plugins for various PR2-specific sensors and actuators on the robot.
  </description>
  <author>Sachin Chitta, Stu Glaser, John Hsu</author>
  <license>BSD</license>
  <review notes="2010/01/21" status="Doc reviewed"/>
  <url>http://ros.org/wiki/pr2_gazebo_plugins</url>
  <depend package="gazebo"/>
  <depend package="gazebo_plugins"/>
  <depend package="gazebo_tools"/>
  <depend package="opende"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>  
  <depend package="std_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="cv_bridge"/>
  <depend package="pr2_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="diagnostic_updater"/>
  <depend package="cv_bridge"/>
  <depend package="diagnostic_msgs"/>
  <depend package="angles"/>
  <depend package="pr2_hardware_interface"/>
  <depend package="pr2_controller_manager"/>
  <depend package="pr2_mechanism_model"/>
  <depend package="bullet"/>
  <depend package="urdf"/>
  <depend package="polled_camera"/>
  <depend package="image_transport"/>
  <depend package="dynamic_reconfigure"/>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib"/>
    <gazebo plugin_path="${prefix}/lib"/>
  </export>
  <rosdep name="python-numpy"/>
  <rosdep name="tinyxml"/>
  <rosdep name="opencv2"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="octomap_msgs" path="/trunk/octomap_stacks/octomap_msgs" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="octomap_msgs - conversions and messages for OctoMap">

 octomap_msgs - conversions and messages for <a href="http://octomap.sourceforge.net/">OctoMap</a>

  </description>
  <author>Armin Hornung</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/octomap_msgs</url>
  
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/build/gen/cpp"/>
  </export>

</package><package name="win_pymercurial" path="" repo="win_ros" repo_host="https://github.com/stonier/win_ros">
  <description brief="python mercurial module for windows">

Build script for python (only) mercurial module.

  </description>
  <author>Daniel Stonier</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/rosinstall</url>
  <!-- Indirectly exporting this straight from svn, so don't need it as a ros dependency. -->
  <!-- <depend package="vcstools"/> -->

</package><package name="ecl_mobile_robot" path="/trunk/ecl_navigation/ecl_mobile_robot" repo="ecl_navigation" repo_host="https://embedded-control-library.googlecode.com/svn">
  <description brief="Transforms and functions for mobile robot platforms">

  Contains transforms (e.g. differential drive inverse kinematics)
  for the various types of mobile robot platforms.
  
  </description>
  <author>Daniel Stonier (d.stonier@gmail.com)</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://snorriheim.dnsdojo.com/redmine/wiki/ecl</url>
  <depend package="ecl_build"/>
  <depend package="ecl_config"/>
  <depend package="ecl_errors"/>
  <depend package="ecl_geometry"/>
  <depend package="ecl_linear_algebra"/>
  <depend package="ecl_license"/>
  <depend package="ecl_math"/>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lecl_mobile_robot"/>
  </export>
</package><package name="2dnav_powerbot" path="/trunk/navigation/2dnav_powerbot" repo="ubc-ros-pkg" repo_host="https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg">
    <description>
        Package containing launch files for starting the navigation stack on teh PowerBot robot.
    </description>
    <author>Marius Muja</author>
    <license>BSD</license>
    <review notes="" status="na"/>
    <url>https://bugs.cs.ubc.ca/cgi-bin/twiki/view/LCI/TheSemanticRobotVisionChallenge</url>
    <depend package="amcl"/>
    <depend package="gmapping"/>
    <depend package="powerbot_player"/>
    <depend package="sicktoolbox_wrapper"/>
    <depend package="map_server"/>
    <depend package="move_base"/>
</package><package name="laser_interface" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="Detect laser points in the world.">
      Detector that finds laser points in the world representing clicks.
  </description>
  <author>Hai Nguyen and Travis Deyle. Advisor: Prof. Charlie Kemp, Lab: Healthcare Robotics Lab at Georgia Tech</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>

  <depend package="rospy"/>
  <depend package="std_msgs"/>  
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="visualization_msgs"/>

  <depend package="cv_bridge"/>
  <depend package="opencv2"/>

  <depend package="hrl_opencv"/> <!-- TODO: remove this -->
  <depend package="hrl_lib"/>
</package><package name="bayesian_grasp_planner" path="/stacks/object_manipulation/branches/0.6-branch/bayesian_grasp_planner" repo="object_manipulation" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="bayesian_grasp_planner">

     bayesian_grasp_planner

  </description>
  <author>Kaijen Hsiao and Matei Ciocarlie</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/bayesian_grasp_planner</url>

  <depend package="roscpp"/>
  <depend package="actionlib"/>
  <depend package="object_manipulation_msgs"/>
  <depend package="household_objects_database_msgs"/>
  <depend package="household_objects_database"/>
  <depend package="object_manipulator"/>

</package><package name="hector_quadrotor_teleop" path="/branches/fuerte/hector_quadrotor/hector_quadrotor_teleop" repo="hector_quadrotor" repo_host="https://tu-darmstadt-ros-pkg.googlecode.com/svn">
  <description brief="hector_quadrotor_teleop">

     hector_quadrotor_teleop enables quadrotor flying with a joystick by
     processing joy/Joy messages and translating them to geometry_msgs/Twist.

  </description>
  <author>Johannes Meyer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hector_quadrotor_teleop</url>

  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>

</package><package name="cl_utils" path="/stacks/roslisp_common/trunk/cl_utils" repo="roslisp_common" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="cl_utils">
Common Lisp utility libraries
  </description>
  <author>Bhaskara Marthi</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cl_utils</url>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="pi_tracker" path="/trunk/pi_tracker" repo="pi-robot-ros-pkg" repo_host="http://pi-robot-ros-pkg.googlecode.com/svn">
  <description brief="pi_tracker">

    Skeleton Tracker Teleop Package for the Pi Robot Project

  </description>
  <author>Patrick Goebel</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.ros.org/wiki/pi_tracker</url>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="tf"/>
  <depend package="urdf"/>
  <depend package="rviz"/>
  <depend package="kdl"/>
  <depend package="nite"/>
</package><package name="mrobot_ros_bridge" path="/trunk/rtmros_common/mrobot_ros_bridge" repo="rtm-ros-robotics/rtmros_common" repo_host="https://rtm-ros-robotics.googlecode.com/svn">
  <description brief="mrobot_ros_bridge">

     mrobot_ros_bridge

  </description>
  <author>Kei Okada, Haseru Chen</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/mrobot_ros_bridge</url>

  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>

  <depend package="openhrp3"/>
  <depend package="iis_idl"/>

  <depend package="tf"/>
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>

  <depend package="wiimote"/>

  <!-- for beego navigation -->
  <depend package="move_base"/>
  <depend package="jsk_maps"/>
  <depend package="map_server"/>
  <depend package="amcl"/>
<!--  <depend package="openni_camera"/> -->


</package><package name="rosproxy" path="" repo="multimaster_experimental" repo_host="https://kforge.ros.org/appmanandroid/multimaster_experimental">
  <description brief="rosproxy">

     rosproxy

  </description>
  <author>Ken Conley</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosproxy</url>
  <depend package="rospy"/>
  <depend package="rosgraph"/>  
  <depend package="roslib"/>  
  <depend package="rosservice"/>  
  <depend package="rostopic"/>
  
</package><package name="re_srvs" path="/public/tags/latest/re_srvs" repo="roboearth" repo_host="https://ipvs.informatik.uni-stuttgart.de/roboearth/repos">
  <description brief="RoboEarth's ROS service declarations">

     <p>
     re_srvs contains RoboEarth specific ROS service declarations.
     </p>
     <p>
     This package is part of RoboEarth (EU FP7, grant 248942).
     </p>
  </description>
  <author>Alexander Perzylo</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.ros.org/wiki/re_srvs</url>
  <versioncontrol type="svn" url="https://ipvs.informatik.uni-stuttgart.de/roboearth/repos/release"/>
  <!--<export> <rosdoc external="http://roboearth.org/wiki"/> </export> -->

  <depend package="re_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/srv/cpp"/>
  </export>

</package><package name="kurt_navigation_slam" path="" repo="kurt_apps" repo_host="http://kos.informatik.uni-osnabrueck.de/kurt_apps.git">
  <description brief="XML files for running SLAM with the move_base node on a Kurt robot.">
    This package holds launch files for running the <a href="http://www.ros.org/wiki/move_base">move_base</a> node in
    conjunction with [[gmapping | SLAM]] on a Kurt robot. It is modeled after
    pr2_navigation_slam.
  </description>
  <author>Jochen Sprickerhof</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/kurt_navigation_slam</url>
</package><package name="turtle_cram_demo" path="/demos/turtle_cram_demo" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="turtle_cram_demo">

     turtle_cram_demo

  </description>
  <author>Lorenz Mosenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/turtle_cram_demo</url>
  <depend package="roslisp"/>
  <depend package="cram"/>

</package><package name="dexter" path="/trunk/vanadium_robots/dexter" repo="vanadium-ros-pkg" repo_host="http://vanadium-ros-pkg.googlecode.com/svn">
  <description brief="Drivers and Apps for Dexter, a hexapod"/>
  <author>Michael Ferguson</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/dexter</url>
</package><package name="rosmouse" path="/branches/stable/head_tracking/rosmouse" repo="wu-ros-pkg" repo_host="https://wu-robotics.googlecode.com/svn">
  <description brief="rosmouse">

     rosmouse

  </description>
  <author>Daniel Lazewatsky</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosmouse</url>
  <depend package="geometry_msgs"/>
  <depend package="rospy"/>
  <depend package="headmath"/>
  <depend package="dynamic_reconfigure"/>

  <rosdep name="xlib"/>
</package><package name="ecl_concepts" path="/trunk/ecl_core/ecl_concepts" repo="ecl_core" repo_host="https://embedded-control-library.googlecode.com/svn">
  <description brief="Compile time concept checking.">

     Introduces a compile time concept checking mechanism that can be used
     most commonly to check for required functionality when passing
     template arguments.

  </description>
  <author>Daniel Stonier (d.stonier@gmail.com)</author>
  <license>BSD</license>
  <review notes="" status="doc reviewed"/>
  <url>http://snorriheim.dnsdojo.com/redmine/wiki/ecl</url>
  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>

  <depend package="ecl_license"/>
  <depend package="ecl_build"/>
  <depend package="ecl_config"/>
  <depend package="ecl_type_traits"/>
  <rosbuild2>
    <export>
      <include_dir>${ecl_concepts_SOURCE_DIR}/include</include_dir>
    </export>
    <depend package="ecl_license"/>
    <depend package="ecl_build"/>
    <depend package="ecl_config"/>
    <depend package="ecl_type_traits"/>
  </rosbuild2>
</package><package name="gencam_cu" path="/trunk/gencam_cu" repo="prairiedog" repo_host="http://prairiedog.googlecode.com/svn">
  <description brief="A generic driver for USB camera using OpenCV"/>
  <author>Nikolaus Correll</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="self_test"/>
  <depend package="opencv2"/>
  <depend package="image_transport"/>
  <depend package="compressed_image_transport"/>
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp" lflags="-L${prefix}/lib"/>
  </export>
</package><package name="lkh_solver" path="/trunk/coverage_3d/lkh_solver" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="ROS wrapper for LKH, a TSP solver">

     This package is a simple wrapper for LKH. LKH is a TSP solver based on the Lin-Kernigham heuristic and was created by Keld Helsgaun.
     The wrapper downloads and builds the solver.

  </description>
  <author>Jürgen Hess</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/lkh_solver</url>

</package><package name="visualization_cu" path="/trunk/visualization_cu" repo="prairiedog" repo_host="http://prairiedog.googlecode.com/svn">
  <description>A graphical interface for the CU nodes.</description>
  <author>Michael Otte</author>
  <license>GNU GPL V3</license>
  <review notes="" status="unreviewed"/>
  <url>http://correll.cs.colorado.edu/pmwiki/index.php/Main/Visualization</url>
  <depend package="roscpp"/>
  <depend package="nav_msgs"/>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="tf"/>
  <depend package="message_filters"/>
  <depend package="move_base_msgs"/>
  <depend package="hokuyo_listener_cu"/>
  <depend package="intercom_cu"/>
  
  <cpp cflags="-I${prefix}/src/" lflags="-lglut"/>
</package><package name="neo_bring_up" path="" repo="neo_apps" repo_host="https://github.com/neobotix/neo_apps">
  <description brief="neo_bring_up">

     neo_bring_up

  </description>
  <author>Timo Hackel</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/neo_bring_up</url>

</package><package name="pr2_navigation_perception" path="" repo="pr2_navigation" repo_host="https://kforge.ros.org/pr2navigation/hg">
  <description brief="PR2 navigation-specific sensor configurations.">

     This package holds navigation-specific sensor configuration options and launch files for the PR2.

  </description>
  <author>Eitan Marder-Eppstein</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_navigation_perception</url>
  <depend package="semantic_point_annotator"/>
  <depend package="laser_filters"/>
  <depend package="pr2_machine"/>
  <depend package="topic_tools"/>
  <depend package="pr2_navigation_self_filter"/>
  <depend package="geometry_msgs"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="sensor_msgs"/>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="filters"/>
  <depend package="message_filters"/>
  <depend package="laser_geometry"/>
  <depend package="laser_tilt_controller_filter"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>

  <export>
    <filters plugin="${prefix}/config/pr2_laser_filters/pr2_laser_filters_plugins.xml"/>
  </export>

</package><package name="asctec_msgs" path="" repo="asctec_drivers" repo_host="https://github.com/ccny-ros-pkg/asctec_drivers">
	<description brief="asctec_msgs">
		Common messages for the AscTec AutoPilot
  </description>
  <author>William Morris, Ivan Dryanovski, Steven Bellens, Patrick Bouffard et al.</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/asctec_msgs</url>

  <depend package="roscpp"/>

  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>
</package><package name="cram_test_utilities" path="" repo="cram_core" repo_host="https://github.com/moesenle/cram_core">
  <description brief="CRAM test utilities.">
    Some utilities to make writing unit tests for various cram packages
    easier. This should not depend on any other cram package so package
    specific stuff should not go here.
  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <url>http://ros.org/wiki/cram_test_utilities</url>
  <review notes="" status="unreviewed"/>
  <depend package="sbcl"/>
  <depend package="alexandria"/>
</package><package name="oit_ekf" path="/trunk/OIT_experimental/oit_ekf" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="oit_ekf">

     oit_ekf

  </description>
  <author>David Feil-Seifer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/oit_ekf</url>
  <depend package="roscpp"/>
  <depend package="bfl"/>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="robot_pose_ekf"/>
  <depend package="tf"/>

</package><package name="cl_store" path="" repo="cram_core" repo_host="https://github.com/moesenle/cram_core">
  <description brief="CL-STORE">
      CL-STORE
      http://common-lisp.net/project/cl-store/
  </description>
  <author>Sean Ross</author>
  <license>MIT</license>
  <review notes="" status="unreviewed"/>
</package><package name="tf2_kdl" path="" repo="geometry_experimental" repo_host="https://kforge.ros.org/geometry/experimental">
  <description brief="tf2_kdl">

     tf2_kdl

  </description>
  <author>Wim Meeussen</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/tf2_kdl</url>
  <depend package="tf2_ros"/>
  <depend package="kdl"/>
  <depend package="geometry_msgs"/>

 <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp -I${prefix}/srv/cpp"/>
  </export>

</package><package name="mannequin_application" path="/stacks/pr2_web_apps/trunk/mannequin_application" repo="pr2_web_apps" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="mannequin_application">
A super simple tool for letting a person position the arms manually, by simply pushing the arm to the location that want. Without out this tool, users are often stuck tweaking joint angles in a script, or holding the arm steady while hitting keys to freeze the arm.
  </description>
  <author>Vijay Pradeep, Scott Hassan</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://pr.willowgarage.com/wiki/pr2_mannequin_mode</url>
  <depend package="roslib"/>
  <depend package="rospy"/>
  <depend package="webui"/>
  <depend package="rosweb"/>
  <depend package="std_msgs"/>
  <depend package="pr2_mannequin_mode"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="ethercat_trigger_controllers" path="/stacks/pr2_controllers/trunk/ethercat_trigger_controllers" repo="pr2_controllers" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="Controllers for triggering from the realtime loop">
    Controllers to operate the digital output of the motor controller
    boards and the projector board. This package has not been reviewed and
    should be considered unstable.
  </description>
  <author>Blaise Gassend</author>
  <license>BSD</license>
  <review notes="http://www.ros.org/wiki/ethercat_trigger_controllers/Reviews/Jan_12_2010_Doc_Review" status="Doc reviewed"/>
  <depend package="rospy"/>
  <depend package="pr2_controller_interface"/>
  <depend package="realtime_tools"/>
  <depend package="roscpp"/>
  <depend package="diagnostic_msgs"/>
  <depend package="pluginlib"/>
  <url>http://www.ros.org/wiki/ethercat_trigger_controllers</url>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib/ -L${prefix}/lib -lethercat_trigger_controllers"/>
    <pr2_controller_interface plugin="${prefix}/controller_plugins.xml"/>
  </export>
  <rosdep name="libtool"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="kobuki_udev" path="" repo="kobuki" repo_host="https://github.com/yujinrobot/kobuki">
  <description brief="Utilities for flashing and enabling the usb connection">

     Contains utilities for flashing the Kobuki (usually done at the factory)
     and enabling the device to appear as /dev/kobuki on the user's PC.

  </description>
  <author>Daniel Stonier</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/kobuki_udev</url>
  
  <!-- Ecl -->
  <depend package="ecl_command_line"/>

  <rosdep name="libftdi-dev"/>
  <rosdep name="ftdi-eeprom"/>
</package><package name="collada-dom" path="/3rdparty/collada-dom" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description>
  </description>
  <author>   Copyright 2004-2008 Sony Computer Entertianment Inc. </author>
  <license>  MIT License, refer to dom.txt in the &quot;others&quot; folder.  </license>
<export>
    <cpp cflags="-I${prefix}/build/collada-dom/dom/include/1.4                  -I${prefix}/build/collada-dom/dom/include/                  `rosboost-cfg --cflags`" lflags="-L${prefix}/build/collada-dom/dom/build/linux-1.4                  -lcollada14dom `rosboost-cfg --lflags system`"/>
</export>
</package><package name="neato_teleop_joy" path="" repo="smart-robotics-ros-pkg" repo_host="https://github.com/JBot/smart-robotics-ros-pkg">
  <description brief="neato_teleop_joy">

     neato_teleop_joy

  </description>
  <author>jbot</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/neato_teleop_joy</url>
  <depend package="roscpp"/>
  <depend package="joy"/>

</package><package name="saliency_detection" path="/trunk/saliency_detection" repo="dri-ros-pkg" repo_host="https://svn.3me.tudelft.nl/dri-ros-pkg">
  <description brief="saliency_detection">
	Create saliency maps using one of the following algorithms:
	Hou
	Itti
	Rudinac
  </description>
  <author>Joris van de Weem</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/saliency_detection</url>
  <depend package="sensor_msgs"/>
  <depend package="cv_bridge"/>
  <depend package="roscpp"/>
  <depend package="image_transport"/>
</package><package name="frame_registrar" path="" repo="roboframenet" repo_host="https://kforge.ros.org/appmanandroid/roboframenet">
  <description brief="frame_registrar">
    frame_registrar manages a graph of semantic frames and callbacks.  It contains semantic frames akin to FrameNet but designed for robotics and internally manages a graph of semantic frames and their associated callbacks.  frame_registrar communicates with other nodes by providing interfaces for adding semantic frames (through yaml files), accessing semantic frames and their relatives (given filled lexical units), and registering callbacks for RFNServers (in essence, Action Servers) by binding the callbacks to semantic frames.
  </description>
  <author>Brian Thomas</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/frame_registrar</url>
  <depend package="rospy"/>
  <depend package="roboframenet_msgs"/>


</package><package name="freetail_config" path="/trunk/freetail/freetail_config" repo="swri-ros-pkg" repo_host="http://swri-ros-pkg.googlecode.com/svn">
  <description brief="freetail_config">

     freetail_config

  </description>
  <author>Jnicho</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/freetail_config</url>
  <depend package="std_msgs"/>
  <depend package="arm_navigation_msgs"/>
  <depend package="xacro"/>
  <depend package="visualization_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="control_msgs"/>
  <depend package="actionlib"/>
  <depend package="roscpp"/>
  <depend package="object_manipulation_msgs"/>
  <depend package="freetail_grasp_planning"/>
</package><package name="sr_tactile_sensors" path="" repo="shadow_robot" repo_host="lp:sr-ros-interface">
  <description brief="sr_tactile_sensors">

    An interface to the tactile sensors used in the Shadow Dextrous Hand. Also Contains a virtual set of sensors.

  </description>
  <author>Ugo Cupcic</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sr_tactile_sensors</url>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="sr_robot_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="gazebo_plugins"/>

</package><package name="nbv_utilities" path="/trunk/next_best_view/ros_nbv/nbv_utilities" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="nbv_utilities">

     nbv_utilities

  </description>
  <author>Christian Potthast</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/nbv_utilities</url>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="pr2_laser_snapshotter"/>
  <depend package="pr2_msgs"/>
 <!-- <depend package="nbv_main"/> -->
  <depend package="actionlib"/>
  <depend package="move_base_msgs"/>
  <depend package="tf"/>
  <depend package="move_arm_msgs"/>
  
</package><package name="view_mesh" path="/trunk/stacks/bosch_surface_reconstruction/view_mesh" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <author>Benjamin Pitzer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="tf"/>
  <depend package="surface_modelling_common"/>
  <depend package="rtc"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <export>
    <cpp cflags="-I${prefix}/msg/cpp -I${prefix}/srv/cpp"/>
  </export>
  <rosdep name="libdevil-dev"/>
  <rosdep name="libglew-dev"/>
  <rosdep name="libglui-dev"/>
</package><package name="rtt_nav_msgs" path="" repo="rtt_common_msgs" repo_host="http://git.mech.kuleuven.be/robotics/rtt_common_msgs.git">
  <description brief="rtt_nav_msgs">

    Provides an rtt typekit for ROS nav_msgs messages.

    It allows you to use ROS messages transparently in
    RTT components and applications.

    This package was automatically generated by the
    create_rtt_msgs generator and should not be manually
    modified.

    See the http://ros.org/wiki/nav_msgs documentation
    for the documentation of the ROS messages in this
    typekit.

  </description>
  <author>create_rtt_msgs Generator</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rtt_rosnode</url>
  <depend package="rtt_rosnode"/>
  <depend package="nav_msgs"/>
  <depend package="rtt_std_msgs"/>
  <depend package="rtt_rosgraph_msgs"/>
  <depend package="rtt_geometry_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>


</package><package name="cob_undercarriage_ctrl" path="" repo="cob_driver" repo_host="git://github.com/ipa320/cob_driver">
  <description brief="cob_undercarriage_ctrl">

     cob_undercarriage_ctrl implements a controller for the omnidirectional base of Care-O-bot 3 on joint level. For a given Pltf-Twist the according wheel steering angles and linear wheel velocities are calculated based on the principle of rigid body motion. Each joint is than controlled individually to achieve the computed position and velocity

  </description>
  <author>Christian Connette</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_undercarriage_ctrl</url>

  <!-- Dependencies from other packages or external libs-->
  <depend package="roscpp"/>
  <depend package="nav_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="diagnostic_msgs"/>
  <depend package="tf"/>
  <depend package="cob_srvs"/>
  <depend package="cob_relayboard"/>
  <depend package="cob_utilities"/>
  <depend package="diagnostic_updater"/>
  <depend package="rostest"/>
  <depend package="pr2_controllers_msgs"/>
  
  <!-- Underlying packeges - not needed for build but for execution-->
  <depend package="cob_base_drive_chain"/>

  <!-- As we deviate from the standard ROS Repository-Structure we have to tell ROS where to find header and lib -->
  <export>
    <cpp cflags="-I${prefix}/common/include" lflags="-Wl,-rpath,${prefix}/common/lib -L${prefix}/common/lib -lcob_undercarriage_ctrl"/>
  </export>

</package><package name="test_collision_space" path="/stacks/pr2_arm_navigation_tests/trunk/test_collision_space" repo="pr2_arm_navigation_tests" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="Test collision spaces">
    A visualization tool to check whether collision space code is
    working appropriately
  </description>

  <author>Ioan Sucan/isucan@willowgarage.com</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>

  <depend package="roscpp"/>
  <depend package="roslib"/>

  <depend package="visualization_msgs"/>
  <depend package="planning_models"/>
  <depend package="collision_space"/>
  <depend package="planning_environment"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="landmark_map_server" path="/trunk/cturtle/landmark_map_server" repo="seabee3-ros-pkg" repo_host="http://seabee3-ros-pkg.googlecode.com/svn">
  <description brief="landmark_map_server">

     landmark_map_server

  </description>
  <author>Edward T. Kaszubski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/landmark_map_server</url>
  <depend package="roscpp"/>
  <depend package="localization_defs"/>
  <depend package="yaml_cpp"/>
  <depend package="opencv2"/>
  <depend package="visualization_msgs"/>
  <depend package="base_libs"/>
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp -I${prefix}/srv/cpp" lflags="-L/{prefix}/lib"/>
  </export>
</package><package name="phantom_omni" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="phantom_omni">
     ROS Node for Sensable Phantom Omni devices.
  </description>
  <author>Hai Nguyen, Marc Killpack, Chi-Hung King, Advisor: Prof. Charlie Kemp, Lab: Healthcare Robotics Lab at Georgia Tech</author>
  <license>new BSD</license>
  <review notes="" status="unreviewed"/>

  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="geometry_msgs"/>
  <depend package="tf"/>
  <depend package="hrl_lib"/>

  <rosdep name="libglw1-mesa"/>
  <rosdep name="x11proto-dri2-dev"/>
  <rosdep name="libdrm-dev"/>
  <rosdep name="x11proto-gl-dev"/>
  <rosdep name="libx11-dev"/>
  <rosdep name="libexpat1-dev"/>
  <rosdep name="libxt-dev"/>
  <rosdep name="libmotif-dev"/>
  <rosdep name="x11proto-print-dev"/>
  <rosdep name="freeglut3-dev"/>
  <rosdep name="tcsh"/>
  <rosdep name="libncurses5-dev"/>
</package><package name="soar" path="/trunk/rtcus_cognitive/soar" repo="rtc-us-ros-pkg-trunk" repo_host="https://rtc-us-ros-pkg.svn.sourceforge.net/svnroot/rtc-us-ros-pkg">
  <description brief="soar">
	Includes the required SOAR libraries to write SOAR agents using SML
  </description>
  <author>Tomás Murillo Morales</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/soar</url>
  
  <export>
  	<cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib  -L${prefix}/lib -lClientSML -lElementXML -lConnectionSML -lSoarKernelSML -lElementXML"/>
  </export>
  
  <depend package="roscpp"/>

</package><package name="prmini_apps" path="/trunk/sandbox/prmini/prmini_apps" repo="vanadium-ros-pkg" repo_host="http://vanadium-ros-pkg.googlecode.com/svn">
  <description brief="Applications for PR-MINI">
    Standard applications for demoing PR-MINI.
  </description>
  <author>Michael Ferguson</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/prmini_apps</url>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="pr2_teleop"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="actionlib"/>
</package><package name="door_handle_detector" path="" repo="pr2_doors" repo_host="https://kforge.ros.org/doors/hg">
  <description>
    A node which detects doors and handles from 3D point cloud data.
  </description>

  <author>Radu Bogdan Rusu, Marius</author>
  <license>BSD</license>
  <url>http://pr.willowgarage.com</url>
  <review notes="beta" status="experimental"/>

  <depend package="pr2_machine"/>
  <depend package="ANN_doors"/>

  <depend package="roscpp"/>
  <depend package="tf"/>

  <depend package="kdl"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>

  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="mapping_msgs"/>
  <depend package="door_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="stereo_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="std_srvs"/>

  <depend package="angles"/>
  <depend package="laser_assembler"/>
  <depend package="pr2_doors_common"/>

  <depend package="common_rosdeps"/>
  <rosdep name="eigen"/>

 <export>
    <cpp cflags="-I${prefix}/include"/>
 </export>


  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="robchair_description" path="/stacks/robchair_robot/trunk/robchair_description" repo="robchair_robot" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="robchair_description">

     Description files for the RobChair robot, the smart wheelchair from the ISR UC.

  </description>
  <author>Gonçalo Cabrita</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/robchair_description</url>

</package><package name="hector_ugv_gazebo" path="/trunk/hector_ugv_common/hector_ugv_gazebo" repo="hector_ugv_common" repo_host="https://tu-darmstadt-ros-pkg.googlecode.com/svn">
  <description brief="hector_ugv_gazebo">

     hector_ugv_gazebo

  </description>
  <author>Stefan Kohlbrecher</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hector_ugv_gazebo</url>
  <depend package="hector_ugv_description"/>

</package><package name="esc_ros" path="/trunk/extremum_seeking/esc_ros" repo="dri-ros-pkg" repo_host="https://svn.3me.tudelft.nl/dri-ros-pkg">
  <description brief="esc_ros">

     Common components for ROS-based extremum seeking control

  </description>
  <author>Berk Calli and Wouter Caarls</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/esc_ros</url>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="esc_common"/>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lesc_ros"/>
  </export>

</package><package name="sensor_fusion_comm" path="" repo="ethzasl_sensor_fusion" repo_host="git://github.com/ethz-asl/ethzasl_sensor_fusion">
  <description brief="sensor_fusion_comm">

     This package contains messages, services and action definitions needed by ethzasl_sensor_fusion and nodes communicating with it.  

  </description>
  <author>Stephan Weiss, Markus Achtelik</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sensor_fusion_comm</url>
  <depend package="geometry_msgs"/>
  
  <export>
    <cpp cflags="-I${prefix}/msg/cpp"/>
  </export>


</package><package name="calculateDistanceToWall" path="" repo="euRobotics_orocos_ws" repo_host="https://github.com/bellenss/euRobotics_orocos_ws">
    <description brief="Orocos calculateDistanceToWall Component package">
        This package contains the components of the calculateDistanceToWall package
    </description>
    <!--NOTE: set the license and author before you publish this code-->
    <license>LGPL, BSD</license>
    <author>Tinne De Laet </author>
    <depend package="rtt"/>
    <depend package="ocl"/>
    <depend package="tf"/>                                                                                                                                                                                    
    <depend package="rtt_ros_integration"/>                                                                                                                                                                   
    <depend package="rtt_ros_integration_geometry_msgs"/>  
    <depend package="rtt_ros_integration_sensor_msgs"/>  
    <depend package="geometry_msgs"/>  
    <depend package="std_msgs"/>  
    <depend package="sensor_msgs"/>  
    <depend package="rtt_tf"/>  
    <depend package="polar_scan_matcher"/>  
</package><package name="pybrain" path="/trunk/arrg/ua_experimental/pybrain" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
  <description brief="pybrain">

     pybrain

  </description>
  <author>Antons Rebguns</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pybrain</url>

</package><package name="rosie_torso_action" path="/arm_navigation/rosie_arm_navigation/rosie_torso_action" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="rosie_torso_action">

     rosie_torso_action

  </description>
  <author>Alexis Maldonado</author>
  <license>GPLv3+</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosie_torso_action</url>

  <depend package="rospy"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="pr2_common_action_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="cogman_msgs"/>
</package><package name="hector_laserscan_to_pointcloud" path="/trunk/hector_sandbox/hector_laserscan_to_pointcloud" repo="hector_sandbox" repo_host="https://tu-darmstadt-ros-pkg.googlecode.com/svn">
  <description brief="hector_laserscan_to_pointcloud">

     hector_laserscan_to_pointcloud

  </description>
  <author>stefan</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hector_laserscan_to_pointcloud</url>
  <depend package="roscpp"/>
  <depend package="laser_geometry"/>

</package><package name="UWSim" path="/trunk/underwater_simulation/UWSim" repo="uji-ros-pkg" repo_host="http://uji-ros-pkg.googlecode.com/svn">
  <description brief="UWSim">

     UWSim is an UnderWater SIMulator for marine robotics research and development. UWSim visualizes an underwater virtual scenario that can be configured using standard modeling software. Controllable underwater vehicles, surface vessels and robotic manipulators, as well as simulated sensors, can be added to the scene and accessed externally through ROS interfaces. This allows to easily integrate the visualization tool with existing control architectures.

  </description>
  <author>Mario Prats</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="image_transport"/>
  <depend package="osgOcean"/>
  <depend package="urdf"/>
  <depend package="urdf_parser"/>
  <depend package="underwater_sensor_msgs"/>
  <depend package="resource_retriever"/>
  <rosdep name="libxml++-2.6"/>
  <rosdep name="boost"/>
  <rosdep name="libopenscenegraph"/>
  <rosdep name="opengl"/>

  <url>http://www.irs.uji.es/uwsim/</url>
  <export>
    <cpp cflags="-I${prefix}/src" lflags="-Wl,-rpath,${prefix}/lib  -L${prefix}/lib -luwsim -lGLU"/>
  </export>


</package><package name="sensornet" path="/stacks/lse_sensor_network/trunk/sensornet" repo="lse_sensor_network" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="sensornet">

     This package contains a node for connecting to the LSE SensorNet, a sensor network for monitoring odor and wind environmental data during odor search experiments.

  </description>
  <author>Gonçalo Cabrita and Pedro Sousa</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sensornet</url>
  <depend package="roscpp"/>
  <depend package="cereal_port"/>
  <depend package="lse_sensor_msgs"/>

</package><package name="rosjson" path="/stacks/web_interface/trunk/rosjson" repo="web_interface" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="rosjson">

     rosjson is a Python library for converting ROS messages to JSON
     (JavaScript Object Notation) representation.

  </description>
  <author>Ken Conley/kwc@willowgarage.com</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/rosjson</url>
  <depend package="rospy"/>
  <depend package="roslib"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="laser_scan_publisher_tutorial" path="" repo="navigation_tutorials" repo_host="https://kforge.ros.org/navigation/tutorials">
  <description brief="laser_scan_publisher_tutorial">

     laser_scan_publisher_tutorial

  </description>
  <author>Eitan Marder-Eppstein</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://pr.willowgarage.com/wiki/laser_scan_publisher_tutorial</url>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="colbotcanon" path="/trunk/colbot-ros-pkg/colbotcanon" repo="colbot-ros-pkg" repo_host="http://colbot.googlecode.com/svn">
  <description brief="colbotcanon">
A controller for the canon of the Colbot hobby robot
  </description>
  <author>fpesquet@gmail.com</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/colbotcanon</url>

  <depend package="rosjava"/>
  <depend package="sensor_msgs"/>
</package><package name="simple_grasp_planner" path="/stacks/grasping/simple_grasp_planner" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
<description>Simple Grasp Planer</description>
<author>U. Klank</author>
<license>BSD</license>
<export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lsgp"/>
    <python path="${prefix}/src"/>
</export>
</package><package name="segway_rmp" path="" repo="segway_rmp" repo_host="https://github.com/kent-williams/segway_rmp">
  <author>Kent Williams and Justin Kuehn, adapted from Morgan Quigley</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <depend package="std_msgs"/>
  <!--<depend package="deprecated_msgs"/>-->
  <depend package="geometry_msgs"/>
  <depend package="roscpp"/>
  <depend package="tf"/>
</package><package name="ros_soar" path="/trunk/rtcus_cognitive/ros_soar" repo="rtc-us-ros-pkg-trunk" repo_host="https://rtc-us-ros-pkg.svn.sourceforge.net/svnroot/rtc-us-ros-pkg">
  <description brief="ros_soar">
	Self controlling of an Erratic robot by a SOAR agent
  </description>
  <author>Tomás Murillo Morales</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ros_soar</url>
  
  <depend package="roscpp"/>
  <depend package="soar"/>
  <depend package="erratic_player"/>
  <depend package="sensor_msgs"/>

</package><package name="websocket_gui" path="" repo="websocket_gui" repo_host="git://github.com/ethz-asl/websocket_gui">
  <description brief="websocket_gui">

     A declarative widget library based on ros.js

  </description>
  <author>Benoit Lescot and Stéphane Magnenat</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/websocket_gui</url>
  <depend package="rosbridge"/>

</package><package name="hector_nav_msgs" path="/branches/fuerte/hector_slam/hector_nav_msgs" repo="hector_slam" repo_host="https://tu-darmstadt-ros-pkg.googlecode.com/svn">
  <description brief="hector_nav_msgs contains messages and services used in the hector_slam stack.">

     hector_nav_msgs contains messages and services used in the hector_slam stack.

  </description>
  <author>Stefan Kohlbrecher</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hector_nav_msgs</url>

  <depend package="nav_msgs"/>
  <depend package="geometry_msgs"/>

</package><package name="turtlebot_xtion_top_description" path="" repo="iheart-ros-pkg" repo_host="git://github.com/IHeartRobotics/iheart-ros-pkg">
  <description brief="turtlebot_xtion_top_description">

     turtlebot_xtion_top_description provides a complete 3D model of a TurtleBot with an ASUS Xtion Pro Live camera mounted on top.

  </description>
  <author>Melonee Wise, I Heart Engineering</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/turtlebot_xtion_top_description</url>

  <depend package="urdf"/>
  <depend package="xacro"/>
  <depend package="pluginlib"/>

  <export>
    <urdf base="${prefix}/urdf/turtlebot_xtion.uraf"/>
    <urdf plugin="${prefix}/urdf/xtion.uraf"/>
  </export>
</package><package name="scikits" path="/trunk/arrg/ua_experimental/scikits" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
  <description brief="scikits">

     scikits

  </description>
  <author>Antons Rebguns</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/scikits</url>

</package><package name="re_2dmap_extractor" path="/public/tags/latest/re_2dmap_extractor" repo="roboearth" repo_host="https://ipvs.informatik.uni-stuttgart.de/roboearth/repos">
  <description brief="RoboEarth's 2D map extractor">

     re_2dmap_extractor creates arbitrary 2D maps from 3D Octomaps. Either it 
     takes out a 2D slice at a given height above ground or it creates
     a 2d map from projecting a 3D slice down, depending on the ROS services 
     used. The former 2D map may be used for localization, the latter for 
     navigation.

  </description>
  <author>Alexander Perzylo</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/re_2dmap_extractor</url>

  <depend package="octomap"/>
  <depend package="re_msgs"/>
  <depend package="rosjava_jni"/>

  <export>
    <java classpath="${prefix}/bin"/>
  </export>

</package><package name="interactivespaces-core" path="" repo="interactive-spaces" repo_host="https://code.google.com/p/interactive-spaces">
  <description brief="interactivespaces">
    A Java/ROS based framework for controlling interactive spaces.
  </description>
  <author>
  Keith Hughes/khughes@google.com
  </author>
  <license>Apache License 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://code.google.com/p/interactive-spaces/</url>
  <depend package="rosjava"/>
  <depend package="actionlib_java"/>
  <depend package="interactivespaces_msgs"/>
  <depend package="osgi"/>

  <rosdep name="java"/>
</package><package name="bolt_msgs" path="/trunk/arrg/ua_experimental/bolt_msgs" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
  <description brief="bolt_msg">

     bolt_msg

  </description>
  <author>Antons Rebguns</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/bolt_msg</url>
  <depend package="geometry_msgs"/>

</package><package name="rotoscan_node" path="/trunk/dfki_sks_laser_drivers/rotoscan_node" repo="dfki-sks-ros-pkg" repo_host="https://svn-agbkb.informatik.uni-bremen.de/dfki-sks-ros-pkg">
  <description brief="rotoscan_node">

     Driver for Leuze rotoScan laser rangefinder devices, publishing sensor_msgs/LaserScan messages. Currently supports devices connected via Ethernet and 
     serial port, but could be extended to interface with other models.

  </description>
  <author>Rene Wagner, Felix Kolbe</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rotoscan_node</url>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="timeutils"/>
  <rosdep name="boost"/>

</package><package name="cart_pushing_stage" path="/stacks/cart_pushing/trunk/cart_pushing_stage" repo="cart_pushing" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="cart_pushing_stage">

This package contains launch files for a stage version of the cart pushing nav stack, with fake localization and arm control.

  </description>
  <author>Bhaskara Marthi</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cart_pushing_stage</url>
  <depend package="cart_pushing_executive"/>
  <depend package="stage"/>
  <depend package="fake_localization"/>
  <depend package="map_server"/>
  <depend package="articulate_cart"/>
  <depend package="pr2_machine"/>
  <depend package="cart_state_estimator"/>
  <depend package="rostopic"/>
  <depend package="manipulation_transforms"/>
</package><package name="hector_pose_estimation_rtt" path="/trunk/hector_localization/hector_pose_estimation_rtt" repo="hector_localization" repo_host="https://tu-darmstadt-ros-pkg.googlecode.com/svn">
  <description brief="hector_pose_estimation_rtt">

     A RTT TaskContext that runs hector_pose_estimation_core.

  </description>
  <author>Johannes Meyer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hector_pose_estimation_rtt</url>

  <depend package="hector_pose_estimation_core"/>
  <depend package="rtt_rosnode"/>

  <depend package="rtt_sensor_msgs"/>
  <depend package="rtt_geometry_msgs"/>
  <depend package="rtt_nav_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>

</package><package name="denso_msgs" path="" repo="denso" repo_host="lp:denso">
  <description brief="denso_msgs">

    This package contains some messages used for the denso arm.

  </description>
  <author>Ugo Cupcic / ugo@shadowrobot.com</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/denso_msgs</url>
  <depend package="geometry_msgs"/>
  <depend package="actionlib_msgs"/>

</package><package name="carrot_planner" path="" repo="navigation" repo_host="https://kforge.ros.org/navigation/navigation">
  <description brief="carrot_planner">

     This planner attempts to find a legal place to put a carrot for the robot to follow. It does this by moving back along the vector between the robot and the goal point.

  </description>
  <author>Eitan Marder-Eppstein, Sachin Chitta</author>
  <license>BSD</license>
  <review notes="" status="Doc reviewed"/>
  <url>http://pr.willowgarage.com/wiki/carrot_planner</url>
  <depend package="roscpp"/>
  <depend package="costmap_2d"/>
  <depend package="pluginlib"/>
  <depend package="nav_core"/>
  <depend package="base_local_planner"/>
  <depend package="tf"/>
  <depend package="angles"/>
  <depend package="common_rosdeps"/>
  <rosdep name="eigen"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lcarrot_planner"/>
    <nav_core plugin="${prefix}/bgp_plugin.xml"/>
  </export>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="april_tags_node" path="/trunk/stacks/april/april_tags_node" repo="utexas" repo_host="https://utexas-ros-pkg.googlecode.com/svn">
  <description brief="april_tags_node">

     ROS Wrapper for running the APRIL Tag detection system

  </description>
  <author>Piyush Khandelwal</author>
  <license>Modified BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/apriltags_node</url>

  <depend package="april_tk"/>
  <depend package="april_msgs"/>

</package><package name="osg_utils" path="/trunk/visualization_osg/osg_utils" repo="uji-ros-pkg" repo_host="http://uji-ros-pkg.googlecode.com/svn">
  <description brief="osg_utils">
	A library that provides helper classes and functions for use in OpenSceneGraph visualization frontends
  </description>
  <author>Mario Prats</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/osg_utils</url>

  <depend package="roscpp"/>
  <depend package="rostime"/>
  <depend package="geometry_msgs"/>
  <depend package="tf"/>
  <rosdep name="libopenscenegraph"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -losg_utils"/>
  </export>

</package><package name="guardian_controller" path="/trunk/guardian_controller" repo="guardian-ros-pkg" repo_host="http://guardian-ros-pkg.googlecode.com/svn">
  <description brief="guardian_controller">
  Relate the 4-wheels joints with each motor, apply the control 
  correction in closed loop for the motor and set the command 
  received by the joystick/keyboard teleop node.
  </description>
  <author>Robotnik Automation SLL</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/guardian_controller</url>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="pr2_controller_interface"/>
  <depend package="pluginlib"/>
  <export>
    <pr2_controller_interface plugin="${prefix}/controller_plugins.xml"/>
  </export>

</package><package name="log_gui" path="/trunk/logging/log_gui" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="log_gui">

     log_gui

  </description>
  <author>David Feil-Seifer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/log_gui</url>
  <depend package="roscpp"/>
  <depend package="log_msgs"/>
  <rosdep name="fltk"/>

</package><package name="rosatomic" path="/stacks/ros_realtime/trunk/rosatomic" repo="ros_realtime" repo_host="https://code.ros.org/svn/ros">
  <description brief="C++11-style atomic operations">

     rosatomic provides the C++11-style atomic operations by pulling symbols from the proposed Boost.Atomic
     package into the ros namespace.  Once C++11-style atomics (std::atomic) are available from compilers, rosatomic will
     conditionally use those instead.

  </description>
  <author>Josh Faust</author>
  <license>BSD, Boost</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosatomic</url>
  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="rtt_rospack" path="" repo="rtt_ros_integration" repo_host="http://git.mech.kuleuven.be/robotics/rtt_ros_integration.git">
  <description brief="rtt_rospack">

     rtt_rospack provides an RTT plugin to use rospack to find packages in your ROS_PACKAGE_PATH

  </description>
  <author>Ruben Smits, ruben.smits@mech.kuleuven.be</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rtt_rospack</url>
  <depend package="roslib"/>
  <depend package="rtt"/>

</package><package name="nodelet_tutorial_math" path="/stacks/common_tutorials/trunk/nodelet_tutorial_math" repo="common_tutorials" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="nodelet_tutorial_math">

     nodelet_tutorial_math

  </description>
  <author>Tully Foote</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/nodelet_tutorial_math</url>
  <depend package="nodelet"/>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>

  <export>
    <nodelet plugin="${prefix}/nodelet_math.xml"/>
  </export>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="utter" path="" repo="roboframenet" repo_host="https://kforge.ros.org/appmanandroid/roboframenet">
  <description brief="utter">

     utter is an RFNServer which says the utterance (using sound) given to it by the semantic frame.

  </description>
  <author>Brian Thomas</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/utter</url>
  <depend package="rospy"/>
  <depend package="rfnserver"/>
  <rosdep name="alsa-utils"/>
  <rosdep name="festival"/>

</package><package name="eodev" path="" repo="sr_contrib" repo_host="lp:sr-contrib">
  <description brief="eodev">

     EO is a template-based, ANSI-C++ evolutionary computation library which helps you to write your own stochastic optimization algorithms insanely fast.

  </description>
  <author>Juan Julián Merelo, Maarten Keijzer, Marc Schoenauer, ... packaged for ROS by Ugo Cupcic</author>
  <license>LGPL</license>
  <review notes="" status="3rdparty"/>
  <url>http://eodev.sourceforge.net/</url>
  <export>
    <cpp cflags="-I${prefix}/build/ -I${prefix}/build/eo/src" lflags="-L${prefix}/build/eo/release/lib -Wl,-rpath,${prefix}/build/eo/release/lib "/>
  </export>

</package><package name="sr_spike_logger" path="" repo="sr_contrib" repo_host="lp:sr-contrib">
  <description brief="sr_spike_logger">

     sr_spike_logger

  </description>
  <author>hyflam</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sr_spike_logger</url>
  <depend package="sr_robot_msgs"/>
  <depend package="roscpp"/>

</package><package name="modular_cloud_matcher_experiments" path="" repo="ethzasl_mapping" repo_host="https://github.com/ethz-asl/ros-mapping">
  <description brief="modular_cloud_matcher_experiments">

     Utilities to do experiments using 3D point cloud matcher based on libpointmatcher (http://github.com/ethz-asl/libpointmatcher)

  </description>
  <author>François Pomerleau and Stéphane Magnenat</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/modular_cloud_matcher_experiments</url>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="rosbag"/>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="tf"/>
  <depend package="tf2"/>
  <depend package="tf_conversions"/>
  <depend package="mapping_msgs"/>
  <depend package="libnabo"/>
  <depend package="libpointmatcher"/>
  <depend package="libpointmatcher_ros"/>
  <rosdep name="libargtable2-dev"/>
  <rosdep name="yaml-cpp"/>
  <rosdep name="eigen"/>

</package><package name="openrave_sensors" path="/trunk/openrave_planning/openrave_sensors" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="Connects ROS sensor messages to OpenRAVE">
    Contains openrave plugins that connect send and recieve ROS messages allowing OpenRAVE to communicate with the ROS world better.
  </description>
  <author>Rosen Diankov (rosen.diankov@gmail.com)</author>
  <license>Apache License, Version 2.0</license>
  <export>
    <openrave pluginpath="${prefix}/lib"/>
  </export>
  <depend package="roscpp"/>
  <depend package="openrave"/>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="nav_msgs"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="win_roscpp_tutorials" path="" repo="win_ros" repo_host="https://github.com/stonier/win_ros">
  <catkin/>
  <description brief="Shows the features of ROS step-by-step">
    This package attempts to show the features of ROS step-by-step,
    including using messages, servers, parameters, etc.
    It is a copy of the roscpp_tutorials (because catkin
    won't handle turtlesim in the same package).
  </description>
  <author>Daniel Stonier</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/win_roscpp_tutorials</url>
  <depend package="roscpp"/>
  <depend package="std_srvs"/>
  <depend package="std_msgs"/>
  <export>
    <cpp cflags="-I${prefix}/srv/cpp"/>
  </export>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>

</package><package name="smi540" path="/trunk/stacks/bosch_drivers/smi540" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="smi540">

     smi540

  </description>
  <author>Lukas Marti, Nikhil Deshpande (Maintained by Philip Roan)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/smi540</url>
  <depend package="std_msgs"/>
  <depend package="roscpp"/>
  <depend package="sub20"/>

</package><package name="parallel_util" path="/trunk/jsk_common/parallel_util" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="parallel_util">
    parallel_util is a collection of the utility scripts for parallel processing.
  </description>
  <author>Ryohei Ueda (ueda@jsk.t.u-tokyo.ac.jp) and Rosen Diankov (rosen.diankov@gmail.com)</author>
  <license>Apache License, Version 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/parallel_util</url>
  <export>
    <python path="${prefix}/src"/>
    <rosdoc config="rosdoc.yaml"/>
  </export>
  <depend package="rospy"/>
  <depend package="roslaunch"/>
  <depend package="rosgraph"/>
  <rosdep name="python-meminfo-total"/>
  <rosdep name="python-paramiko"/>
</package><package name="smach_recovery_viewer" path="/trunk/stacks/recovery_smach_visualization/smach_recovery_viewer" repo="bosch-ros-pkg-e" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg-e/code">
  <description brief="smach_recovery_viewer">
    The smach recovery viewer is a GUI that shows the state of hierarchical
    Recovery SMACH state machines. It can visualize the possible transitions
    between states, as well as the currently active state and the
    values of user data that is passed around between states. The
    smach viewer uses the SMACH debugging interface based on
    the <a href="http://www.ros.org/wiki/smach_recovery_msgs">smach
    messages</a> to gather information from running state machines.
  </description>
  <author>Bharath Sankaran and Jon Bohren</author>
  <license>BSD</license>
  <review notes="" status="Doc reviewed"/>
  <url>http://ros.org/wiki/smach_recovery_viewer</url>

  <depend package="smach_recovery_ros"/>
  <depend package="xdot"/>
  <depend package="smach_recovery_msgs"/>
</package><package name="nxt_lejos_msgs" path="/trunk/ros/nxt_lejos/nxt_lejos_msgs" repo="lejos-ros-pkg" repo_host="https://lejos.svn.sourceforge.net/svnroot/lejos">
  <description brief="nxt_lejos_msgs">
     The nxt_lejos_msgs package contains extra messages used by the nxt_lejos
     stack, in addition to the ones in the nxt_msgs package. They are used to
     publish sensor information, control the robot, control individual
     motors, and send tones to the NXT brick.
  </description>
  <author>Lawrie Griffiths and Juan Antonio Brenha Moral</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/nxt_lejos_msgs</url>
</package><package name="wubble_blocks" path="/trunk/arrg/ua_apps/wubble_blocks" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="Blocks World demo of the Wubble robot">
        wubble_blocks
    </description>

    <author>Anh Tran</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/wubble_blocks</url>

    <!-- Core ros packages -->
    <depend package="roscpp"/>
    <depend package="rospy"/>
    <depend package="roslib"/>
    <depend package="std_msgs"/>
    <depend package="geometry_msgs"/>
    <depend package="sensor_msgs"/>
    <depend package="phidgets_ros"/>
    <depend package="dynamixel_controllers"/>

    <!-- Controllers & actions -->
    <depend package="wubble_actions"/>

    <!-- Visualization -->
    <depend package="rviz"/>
    <depend package="object_tracking"/>
</package><package name="museum_guard" path="/trunk/museum_guard" repo="hacdc-ros-pkg" repo_host="http://hacdc-ros-pkg.googlecode.com/svn">
  <description brief="museum_guard">

     museum_guard

  </description>
  <author>andrewha</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/museum_guard</url>
  <depend package="actionlib"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="roslib"/>
  <depend package="std_msgs"/>
  <depend package="actionlib_msgs"/>
  <depend package="move_base_msgs"/>
  <depend package="smach"/>
  <depend package="smach_ros"/>

</package><package name="v4l_cam" path="" repo="v4lstack" repo_host="http://git.code.sf.net/p/v4lstack/code">
  <description brief="luvc">
v4l camera driver, based on the luvcview package. 
This package detects the supported controls of your USB camera and generates a dynamic reconfigure interface.
The control parameters like brightness, ... can be saved and loaded during runtime via the dynamic reconfigure interface.
Tested are the Logitech 9000pro and Logitech sphere. Even the focus/pan tilt can be controlled via the dynamic reconfigure interface.
  </description>
  <author>Markus Bader</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/v4r_cam</url>
  <depend package="roscpp"/>
  <depend package="driver_base"/>
  <depend package="opencv2"/>
  <depend package="image_transport"/>
  <depend package="camera_info_manager"/>
  <depend package="dynamic_reconfigure"/>
</package><package name="clmd5" path="" repo="roll" repo_host="http://code.in.tum.de/git/roll.git">
  <description brief="clmd5">

     clmd5

  </description>
  <author>Kevin M. Rosenberg</author>
  <license/>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/clmd5</url>

</package><package name="piano" path="/trunk/kinect_utils/piano" repo="mit-ros-pkg-trunk" repo_host="https://svn.csail.mit.edu/mit-ros-pkg">
  <description brief="A program to play 'air piano' using the positions of the fingers on one hand">

     The piano package uses finger positions to play a five note piano. 
   The positions of the five fingers are first calibrated, to establish a baseline.
	    Then small deviations from those positions cause notes to be played.

  </description>
  <author>Garratt</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/piano</url>
  <depend package="body_msgs"/>
  <depend package="roscpp"/>

  <rosdep name="libsfmt"/>
</package><package name="portrait_painter" path="/trunk/portrait_bot/portrait_painter" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="portrait_painter">
    Package written for extracting lines out of an image of contours and
    painting those lines on a board, sheet or anything else, afterwards.

  </description>
  <author>Niklas Meinzer, Ina Baumgarten</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/portrait_painter</url>
  
  <depend package="tf"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="ee_cart_imped_action"/>
  <depend package="ee_cart_imped_control"/>
  <depend package="ee_cart_imped_msgs"/>
  <depend package="cv_bridge"/>
  <depend package="sensor_msgs"/>
  <depend package="std_msgs"/>
  <depend package="image_transport"/>
  <depend package="portrait_robot_msgs"/>
  <depend package="opencv2"/>

</package><package name="vfh_recognition" path="/trunk/freetail/vfh_recognition" repo="swri-ros-pkg" repo_host="http://swri-ros-pkg.googlecode.com/svn">
  <description brief="vfh_recognition">

     vfh_recognition

  </description>
  <author>Brian</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/vfh_recognition</url>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
 <depend package="tabletop_object_detector"/>



</package><package name="sia10d_mesh_arm_navigation" path="/trunk/motoman/sia10d_mesh_arm_navigation" repo="swri-ros-pkg" repo_host="http://swri-ros-pkg.googlecode.com/svn">
  <description brief="sia10d_mesh_arm_navigation">

     sia10d_mesh_arm_navigation

  </description>
  <author>Shaun Edwards</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sia10d_mesh_arm_navigation</url>
  <depend package="kinematics_base"/>
  <depend package="planning_environment"/>
  <depend package="arm_kinematics_constraint_aware"/>
  <depend package="ompl_ros_interface"/>
  <depend package="trajectory_filter_server"/>
  <depend package="constraint_aware_spline_smoother"/>
  <depend package="move_arm"/>
  <export>
    <kinematics_base plugin="${prefix}/kinematics_plugins.xml"/>
  </export>
</package><package name="dynamic_graph_bridge" path="" repo="stacks/redundant_manipulator_control" repo_host="git://github.com/laas/redundant_manipulator_control">
  <description brief="Dynamic graph ROS bridge">

     ROS bindings for dynamic graph.

  </description>
  <author>Thomas Moulard</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/dynamic_graph_bridge</url>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -lros_bridge -lros_interpreter -Wl,-rpath,${prefix}/lib"/>
    <rosdoc config="rosdoc.yaml"/>
  </export>


  <rosdep name="boost"/>

  <rosdep name="jrl-mal"/>
  <rosdep name="dynamic-graph"/>
  <rosdep name="sot-core"/>
  <rosdep name="sot-dynamic"/>

  <depend package="std_msgs"/>
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="bullet"/>
  <depend package="tf"/>

  <depend package="realtime_tools"/>

  <depend package="jrl_dynamics_urdf"/>
</package><package name="stereo_image_odom" path="/trunk/cturtle/stereo_image_odom" repo="seabee3-ros-pkg" repo_host="http://seabee3-ros-pkg.googlecode.com/svn">
  <description brief="stereo_image_odom">

     stereo_image_odom

  </description>
  <author>Michael Wei</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/stereo_image_odom</url>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="image_transport"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>

</package><package name="tf_frame_lock" path="/trunk/cturtle/tf_frame_lock" repo="seabee3-ros-pkg" repo_host="http://seabee3-ros-pkg.googlecode.com/svn">
  <description brief="tf_frame_lock">

     tf_frame_lock

  </description>
  <author>Rand</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/tf_frame_lock</url>
  <depend package="base_libs"/>
  <depend package="common_utils"/>

</package><package name="simulated_quadrotor" path="" repo="starmac-ros-pkg" repo_host="https://bitbucket.org/bouffard/starmac-ros-pkg">
  <description brief="simulated_quadrotor">

     This package provides tools to simulate a quadrotor's actuators and sensors to allow for offline
     development and make unit testing possible.

  </description>
  <author>bouffard</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/simulated_quadrotor</url>

  <depend package="rospy"/>
  <depend package="nav_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="flyer_controller"/>
  <depend package="starmac_roslib"/>
  <depend package="tf"/>
  
  <rosdep name="python-numpy"/>
  <rosdep name="python-scipy"/>

</package><package name="cram_designators" path="" repo="cram_core" repo_host="https://github.com/moesenle/cram_core">
  <description brief="Implementation of location, object and action designators.">
      cram_designators defines the protocol for designators and provides an
      implementation for location, object and action designators.
  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <url>http://ros.org/wiki/cram_designators</url>
  <review notes="" status="unreviewed"/>
  <depend package="sbcl"/>
  <depend package="alexandria"/>
  <depend package="cram_utilities"/>
  <depend package="cram_reasoning"/>
  <depend package="trivial_garbage"/>
  <depend package="lisp_unit"/>
</package><package name="rosie_tuck_arms_action" path="/arm_navigation/rosie_arm_navigation/rosie_tuck_arms_action" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="rosie_tuck_arms_action">

     rosie_tuck_arms_action

  </description>
  <author>Alexis Maldonado</author>
  <license>GPLv3+</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosie_tuck_arms_action</url>

  <depend package="rospy"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="pr2_common_action_msgs"/>
  <depend package="cogman_msgs"/>
</package><package name="trivial_features" path="" repo="cram_core" repo_host="https://github.com/moesenle/cram_core">
  <description brief="trivial_features">
      trivial-features
      http://www.cliki.net/trivial-features
  </description>
  <author>Luis Oliveira</author>
  <license>trivial-features</license>
  <review notes="" status="unreviewed"/>
</package><package name="laptop_battery" path="/stacks/lse_battery_drivers/trunk/laptop_battery" repo="lse_battery_drivers" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="laptop_battery">

     laptop_battery

  </description>
  <author>Gonçalo Cabrita</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/laptop_battery</url>
  <depend package="roscpp"/>

</package><package name="ias_arm_kinematics" path="/arm_navigation/rosie_arm_navigation/ias_arm_kinematics" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="ias_arm_kinematics">

     ias_arm_kinematics

  </description>
  <author>David Lu - Alexis Maldonado</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/arm_kinematics</url>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="sensor_msgs"/>
  <depend package="tf_conversions"/>
  <depend package="kdl_parser"/>
  <depend package="kinematics_msgs"/>
</package><package name="rtcus_compositions" path="/trunk/rtcus_mobile_robots/rtcus_compositions" repo="rtc-us-ros-pkg-trunk" repo_host="https://rtc-us-ros-pkg.svn.sourceforge.net/svnroot/rtc-us-ros-pkg">
	<description brief="rtcus_compositions">
		This package contains a c++ generic
		template library to make compsitions and inverse compositions between
		different kinds of geometric datatypes (ie: inverse compose a
		pcl::PointCloud[PointXY] with a Pose). Consider other example, if the
		local frame is moving and dynamic information is avaliable
		a possible
		composition would be (inverse compose pcl::PointCloud[]PointXYdXdY&gt;]
		with a PoseWithTwist). It is designed to be extensible and this use is
		recomendable for
		other generic algorithms.

		Another interesting example is composing other kind of geometrical data. For
		instance composing two Odometry messages. The twist data
		are expresed
		in the child pose frame. So compositions implies some transformations.
		The change of the reference system of some twist information
		is also a
		non-trivial problem.

		The TF package provides a good set of type transformations of different
		kinds of datastructures. The MRPT software provides as well many
		features
		for compositions and inverse compositions of different
		datatypes. This package try to unify all these transformations in a
		generic template
		library. Because of this, this package is absolutely
		open to accept new kinds of transformation software.

	</description>
	<author>Pablo Iñigo Blasco</author>
	<license>BSD</license>
	<review notes="" status="unreviewed"/>
	<url>http://ros.org/wiki/rtcus_compositions</url>

	<export>
		<cpp cflags="-I${prefix}/include -I${prefix}/cfg/cpp -I${prefix}/msg_gen/cpp/include" lflags="-L${prefix}/lib -lrtcus_compositions"/>
	</export>

	<depends package="roscpp"/>
	<depends package="rtus_conversions"/>
	<depend package="sensor_msgs"/>
	<depend package="geometry_msgs"/>
	<depend package="rtcus_nav_msgs"/>
	<depend package="pcl_ros"/>
	<depend package="pcl"/>
	<depend package="mrpt_libs"/>
	<depend package="mrpt_bridge"/>

</package><package name="ocean_battery_driver" path="/stacks/pr2_power_drivers/trunk/ocean_battery_driver" repo="pr2_power_drivers" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="Ocean Server Battery Drivers">This is an interface to the Ocean Server Technology Intelligent Battery and Power System.</description>
  <author>Tully Foote, Curt Meyers</author>
  <license>BSD</license>
  <review notes="Dec 2009" status="Doc reviewed"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="pr2_msgs"/>
  <depend package="diagnostic_updater"/>
  <depend package="diagnostic_msgs"/>
  <rosdep name="wxpython"/>
  <export> 
    <cpp cflags="-I${prefix}/srv/cpp"/>   
  </export> 
  <url>http://www.ros.org/wiki/ocean_battery_driver</url>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="starmac_controller_testing" path="" repo="starmac-ros-pkg" repo_host="https://bitbucket.org/bouffard/starmac-ros-pkg">
  <description brief="starmac_controller_testing">

     starmac_controller_testing

  </description>
  <author>bouffard</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/starmac_controller_testing</url>

  <depend package="starmac_roshlib"/>
  <!-- <depend package="starmac_mpc_controller"/> -->
</package><package name="rl_env" path="/trunk/stacks/reinforcement_learning/rl_env" repo="rl-texplore-ros-pkg" repo_host="http://rl-texplore-ros-pkg.googlecode.com/svn">
  <description brief="rl_env">

     Provides a set of reinforcement learning environments (gridworlds, mountain car, cart pole, stock trading, robot car simulations) for RL agents to learn in. Developed by <a href="http://www.cs.utexas.edu/~todd/">Todd Hester</a> and <a href="http://www.cs.utexas.edu/~pstone/">Peter Stone</a> at the University of Texas at Austin.

  </description>
  <author>Todd Hester</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rl_env</url>
  <depend package="std_msgs"/>
  <depend package="roscpp"/>
  <depend package="rl_msgs"/>
  <depend package="tf"/>
  <depend package="rl_common"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib"/>
  </export>

</package><package name="ar_track_alvar" path="" repo="ar_track_alvar" repo_host="https://bitbucket.org/sniekum/ar_track_alvar.git">
  <description brief="ar_track_alvar">

     ar_track_alvar

  </description>
  <author>Scott Niekum</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ar_track_alvar</url>

  <depend package="std_msgs"/>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="image_transport"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="resource_retriever"/>
  <depend package="cv_bridge"/>
  <depend package="pcl_ros"/>

</package><package name="interactive_camera_pose" path="/trunk/sandbox/interactive_camera_pose" repo="vanadium-ros-pkg" repo_host="http://vanadium-ros-pkg.googlecode.com/svn">
  <description brief="Interactive marker demo for adjusting the pose of a camera."/>
  <author>Michael Ferguson</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/interactive_camera_pose</url>
  <depend package="roscpp"/>
  <depend package="visualization_msgs"/>
  <depend package="interactive_markers"/>
</package><package name="jsk_perception" path="/trunk/jsk_perception" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="jsk_perception">

     jsk_perception

  </description>
  <author>Manabu Saito</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/jsk_perception</url>
  <depend package="rospy"/>
  <depend package="roseus"/>

  <!-- for eusmodel_template_* -->
  <depend package="imagesift"/>

  <!-- for metchtemplate -->
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="cv_bridge"/>
  <depend package="image_geometry"/>
  <depend package="image_transport"/>
  <depend package="driver_base"/>
  <depend package="dynamic_reconfigure"/>

  <!-- for pointcloud -->
  <depend package="pcl"/>
  <depend package="pcl_ros"/>

  <rosdep name="opencv2"/>
</package><package name="gmapping_offline" path="" repo="parsec" repo_host="https://code.google.com/p/parsec">
  <description brief="buildmap">
     Uses GMapping to build a map given a ROS bag file.
  </description>
  <author>Charles DuHadway/ charles.duhadway@us.bosch.com</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url/>
  <depend package="gmapping"/>
  <depend package="hector_nav_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="roscpp"/>
  <depend package="rosbag"/>
  <depend package="std_msgs"/>
  <depend package="tf"/>
</package><package name="icreate" path="/trunk/icreate" repo="cu-ros-pkg" repo_host="http://cu-ros-pkg.googlecode.com/svn">
  <description>A library, utility standalone executables, and ROS node for the iRobot Create</description>
  <author>Xuwen Cao and Morgan Quigley</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <depend package="serial_port"/>
  <depend package="roscpp"/>
  <depend package="joy"/>
  <!-- depend package="robot_msgs"/> -->
  <depend package="deprecated_msgs"/>
  <depend package="tf"/>
  <depend package="turtlesim"/>
  <export>
    <cpp cflags="-I${prefix}" lflags="-L${prefix}/lib -lirobot_create"/>
  </export>
  <url/>
</package><package name="pr2_plugs_actions" path="" repo="pr2_plugs" repo_host="https://kforge.ros.org/plugs/hg">
  <description brief="pr2_plugs_actions">

     pr2_plugs_actions contains actions specific to plugging in the PR2 robot.

  </description>
  <author>Jon Bohren, Patrick Mihelich, Wim Meeussen, and Melonee Wise</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_plugs_actions</url>
  <depend package="actionlib"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="actionlib_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="pr2_controller_manager"/>
  <depend package="sensor_msgs"/>
  <depend package="tf"/>
  <depend package="kdl"/>
  <depend package="tf_conversions"/>
  <depend package="tf2_ros"/>
  <depend package="tf2_geometry_msgs"/>
  <depend package="pr2_msgs"/>
  <depend package="std_srvs"/>
  <depend package="move_base_msgs"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="pr2_common_action_msgs"/>
  <depend package="pr2_plugs_common"/>
  <depend package="pr2_plugs_msgs"/>
  <depend package="stereo_wall_detection"/>
  <depend package="checkerboard_pose_estimation"/>
  <depend package="outlet_pose_estimation"/>
  <depend package="image_transport"/>
  <depend package="joint_trajectory_action_tools"/>
  <depend package="pr2_arm_move_ik"/>
  <depend package="costmap_2d"/>
  <depend package="base_local_planner"/>
  <depend package="pr2_image_snapshot_recorder"/>
  <depend package="smach"/>
  <depend package="smach_ros"/>
  <depend package="cv_bridge"/>

  <rosdep name="opencv2"/>


</package><package name="krypton" path="" repo="krypton_hardware" repo_host="http://git.mech.kuleuven.be/robotics/krypton_hardware.git">
  <description brief="krypton">

    The krypton library allows interaction with any <a href="http://www.nikonmetrology.com/optical__cmm/">Nikon K-Series Optical CMM</a>. It can:
    <ul>
      <li>open / close all necessary connections to the HF controller </li>
      <li>send control commands to the Krypton system </li>
      <li>receive status information from Krypton </li>
      <li>receive measurement data from Krypton </li>
    </ul>

  </description>
  <author>Steven Bellens, steven.bellens@mech.kuleuven.be</author>
  <license>LGPLv2.1 / BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/krypton</url>

  <rosdep name="tinyxml"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -lkrypton -Wl,-rpath,${prefix}/lib"/>
    <rosdoc config="rosdoc.yaml"/>
  </export>
</package><package name="openni_scene" path="/trunk/jsk_openni_kinect/openni_scene" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="openni_scene">

openni_scene broadcasts the OpenNI scene segmented point clouds.

  </description>
  <author>Kei Okada, Youhei Kakiuchi, Tim Field</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/openni_scene</url>

  <depend package="roscpp"/>
  <depend package="roslib"/>
  <depend package="sensor_msgs"/>
  <depend package="pcl_ros"/>
  <depend package="openni"/>
</package><package name="gumstix_memwrite_bma180" path="/trunk/stacks/bosch_drivers/gumstix_memwrite_bma180" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="gumstix_memwrite_bma180">

     gumstix_memwrite_bma180

  </description>
  <author>Nikhil Deshpande (Maintained by Philip Roan)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/gumstix_memwrite_bma180</url>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>

</package><package name="mav_odom_interface" path="" repo="mav_tools" repo_host="https://github.com/ccny-ros-pkg/mav_tools">
  <description brief="mav_odom_interface">

     mav_odom_interface

  </description>
  <author>Ivan Dryanovski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/mav_odom_interface</url>
  <depend package="roscpp"/>
  <depend package="nodelet"/>
  <depend package="tf"/>
  <depend package="std_msgs"/>
  <depend package="mav_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>

  <export>
    <nodelet plugin="${prefix}/odom_interface_nodelet.xml"/>
  </export>

</package><package name="ogre" path="/stacks/visualization_common/trunk/ogre" repo="visualization_common" repo_host="https://code.ros.org/svn/ros-pkg">
<description brief="The Open Source Object-Oriented Graphics Rendering Engine">

<p>
OGRE (Object-Oriented Graphics Rendering Engine) is a scene-oriented, flexible 3D engine written in C++ designed to make it easier and more intuitive for developers to produce applications utilising hardware-accelerated 3D graphics. The class library abstracts all the details of using the underlying system libraries like Direct3D and OpenGL and provides an interface based on world objects and other intuitive classes.
</p>
<p>
Given how fast things move in world of 3D graphics, we will update the Ogre version for bugfixes and new features we determine to be necessary.  This will
likely mean keeping updated to the latest version when possible.
</p>

</description>
<author> Steve 'sinbad' Streeting, Justin Walsh, Brian Johnstone and more.</author>
<license>LGPL</license>
<review notes="" status="3rdparty doc reviewed"/>
<url>http://ogre3d.org</url>
<export>
  <cpp cflags="`PKG_CONFIG_PATH=${prefix}/ogre/lib/pkgconfig:$PKG_CONFIG_PATH pkg-config --cflags OGRE OGRE-RTShaderSystem`" lflags="-Wl,-rpath,${prefix}/ogre/lib -L${prefix}/ogre/lib/OGRE `PKG_CONFIG_PATH=${prefix}/ogre/lib/pkgconfig:$PKG_CONFIG_PATH pkg-config --libs OGRE OGRE-RTShaderSystem`"/>
    <!-- The usage of -dylib_file is a workaround for a bug in Apple's
    installation of libGL.dylib, as explained here:
      http://developer.apple.com/qa/qa2007/qa1567.html
    -->
  <cpp cflags="-I${prefix}/ogre/include -DOGRE_PLUGIN_PATH='\\\&quot;${prefix}/ogre/lib\\\&quot;'" lflags="-F${prefix}/ogre/lib -framework Ogre -framework Carbon -dylib_file /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib:/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib -Wl,-rpath,${prefix}/ogre/lib" os="osx"/>
        
  <doxymaker external="http://ogre3d.org"/>
</export>

<depend package="common_rosdeps"/>
<rosdep name="zziplib"/>
<rosdep name="libxaw"/>
<rosdep name="opengl"/>
<rosdep name="libxxf86vm"/>
<rosdep name="libxrandr"/>
<rosdep name="gtk2"/>
<rosdep name="freeimage"/>
<rosdep name="nvidia-cg"/>
<rosdep name="pkg-config"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="wge100_camera" path="/stacks/wge100_driver/trunk/wge100_camera" repo="wge100_driver" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Driver for the WGE100 camera">
    A ROS node and assorted tools to provide access to the WGE100
    camera used in the forearms and the stereo cameras of the PR2
    robot.
  </description>
  <author>Blaise Gassend, Patrick Mihelich, Eric MacIntosh, David Palchak</author>
  <url>http://www.ros.org/wiki/wge100_camera</url>
  <license>GPL because of list.h; other files released under BSD</license>
  <review notes="Jan 22 2010" status="Doc Reviewed"/>

  <depend package="rostest"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="diagnostic_updater"/>
  <depend package="driver_base"/>
  <depend package="self_test"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="camera_calibration_parsers"/>
  <depend package="timestamp_tools"/>
  <depend package="image_transport"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="karto" path="/stacks/slam_karto/trunk/karto" repo="slam_karto" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="karto">

     This package pulls in the Karto mapping library, and provides a ROS
     wrapper for using it.

  </description>
  <author>SRI International (package maintained by Brian Gerkey)</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/karto</url>
  <depend package="tf"/>
  <depend package="sensor_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="roscpp"/>
  <depend package="rosconsole"/>
  <depend package="nav_msgs"/>
  <depend package="message_filters"/>

  <export>
    <cpp cflags="-I${prefix}/karto/include" lflags="-Wl,-rpath,${prefix}/karto/lib -L${prefix}/karto/lib -lOpenKarto"/>
  </export>

</package><package name="interpolated_ik_motion_planner" path="" repo="arm_navigation_experimental" repo_host="https://kforge.ros.org/armnavigation/experimental">
  <description brief="interpolated_ik_motion_planner">
     The interpolated ik motion planner does Cartesian interpolation: it takes in Cartesian start and end poses, and tries to find consistent joint angles for equally-spaced waypoints along the Cartesian path.
  </description>
  <author>Kaijen Hsiao</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/interpolated_ik_motion_planner</url>
  <depend package="rospy"/>
  <depend package="kinematics_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="arm_navigation_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="trajectory_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/srv/cpp"/>
  </export>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="chomp_motion_planner" path="" repo="arm_navigation_experimental" repo_host="https://kforge.ros.org/armnavigation/experimental">
  <description brief="CHOMP - Covariant Hamiltonian Optimization for Motion Planning">

CHOMP is a motion planner based on trajectory optimization.
It generates smooth, collision-free trajectories. For technical, algorithmic details,
please refer to:

&quot;CHOMP: Gradient Optimization Techniques for Efficient Motion Planning&quot;.
Nathan Ratliff, Matthew Zucker, J. Andrew Bagnell and Siddhartha Srinivasa.
IEEE International Conference on Robotics and Automation, May 2009. 

  </description>
  <author>Mrinal Kalakrishnan / mail@mrinal.net</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/chomp_motion_planner</url>

  <depend package="roscpp"/>
  <depend package="planning_models"/>
  <depend package="planning_environment"/>
  <depend package="arm_navigation_msgs"/>
  <depend package="kdl"/>
  <depend package="kdl_parser"/>
  <depend package="angles"/>
  <depend package="visualization_msgs"/>
  <depend package="tf"/>
  <depend package="distance_field"/>
  <depend package="sensor_msgs"/>
  <depend package="trajectory_msgs"/>
  <depend package="filters"/>
  <depend package="spline_smoother"/>
  <depend package="collision_proximity"/>
  <depend package="constraint_aware_spline_smoother"/>
  <depend package="common_rosdeps"/>

  <rosdep name="eigen"/>

  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/srv/cpp  -I${prefix}/msg/cpp"/>
  </export>


  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="cart_state_estimator" path="/stacks/cart_pushing/trunk/cart_state_estimator" repo="cart_pushing" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="cart_state_estimator">
Estimate state of cart being pushed by robot
  </description>
  <author>Bhaskara Marthi</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cart_state_estimator</url>
  <depend package="tf"/>
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  <depend package="manipulation_transforms"/>
  <depend package="filters"/>
  <depend package="laser_geometry"/>  

  <export>
    <cpp cflags="-I${prefix}/include"/>
    <filters plugin="${prefix}/footprint_filter_plugin.xml"/>
  </export>

</package><package name="rosjava_zeroconf_node" path="" repo="interactive-spaces" repo_host="https://code.google.com/p/interactive-spaces">
  <description brief="rosjava_zeroconf_node">
    Node Zeroconf module for ROS.
  </description>
  <author>Keith Hughes/khughes@google.com</author>
  <license>Apache License 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://code.google.com/p/interactive-spaces/</url>
  
  <depend package="rosjava"/>
  <depend package="osgi_node"/>
  <depend package="rosjava_zeroconf_common"/>

  <rosdep name="java"/>
</package><package name="cob_default_robot_config" path="" repo="cob_robots" repo_host="git://github.com/ipa320/cob_robots">
  <description brief="cob_default_robot_config">

     Default configuration of the different robots supported by the Care-O-bot stacks. Configuration is e.g. preconfigured joint positions.

  </description>
  <author>Florian Weisshardt</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_default_robot_config</url>

</package><package name="semantic_map_collision_environment" path="" repo="cram_highlevel" repo_host="https://github.com/moesenle/cram_highlevel">
  <description brief="semantic_map_collision_environment">

     semantic_map_collision_environment

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/semantic_map_collision_environment</url>
  <depend package="arm_navigation_msgs"/>
  <depend package="roslisp_runtime"/>
  <depend package="cl_json_pl_client"/>
  <depend package="cl_tf"/>
  <depend package="cram_reasoning"/>
  <depend package="visualization_msgs"/>
  <depend package="cram_utilities"/>
  <depend package="cram_roslisp_common"/>

</package><package name="simple_belief" path="" repo="cram_gazebo" repo_host="https://github.com/fairlight1337/cram_gazebo">
  <description brief="simple_belief">

     simple_belief

  </description>
  <author>Jan Winkler</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/simple_belief</url>

  <depend package="roslisp"/>
  <depend package="gazebo_perception_process_module"/>
  <depend package="cram_gazebo_utilities"/>
  <depend package="cram_pr2_knowledge"/>
  <depend package="cram_manipulation_knowledge"/>

</package><package name="corobot_ssc32" path="/trunk/Diamondback/Corobot/corobot_ssc32" repo="roscorobot" repo_host="http://svn.code.sf.net/p/roscorobot/code">
  <description brief="corobot_ssc32">

     A package that interfaces the SSC32 hardware board specific to the Corobot.
     It uses the SSC32_core package made by Steven bellens: steven.bellens@mech.kuleuven.be 

  </description>
  <author>CoroWare/mcormier@coroware.com</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/corobot_ssc32</url>
  <depend package="std_msgs"/>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="corobot_srvs"/>
  <depend package="corobot_msgs"/>
    <export>
        <cpp cflags="-I${prefix}/src" lflags="-Wl,-rpath,${prefix}/lib  -L${prefix}/lib -lcorobot_ssc32"/>
    </export>
</package><package name="dmp" path="" repo="dmp" repo_host="https://bitbucket.org/sniekum/dmp.git">
  <description brief="ml_classifiers">

     ml_classifiers

  </description>
  <author>Scott Niekum</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/dmp</url>
  <depend package="std_msgs"/>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="pluginlib"/>

  <export>
    <ml_classifiers plugin="${prefix}/default_classifiers_plugin.xml"/>
  </export>
  
</package><package name="joint_velocities" path="/trunk/turn_taking/joint_velocities" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="joint_velocities">

     joint_velocities

  </description>
  <author>David Feil-Seifer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/joint_velocities</url>
  <depend package="sensor_msgs"/>

</package><package name="gumstix_memread_bma180" path="/trunk/stacks/bosch_drivers/gumstix_memread_bma180" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="gumstix_memread_bma180">

     gumstix_memread_bma180

  </description>
  <author>Nikhil Deshpande (Maintained by Philip Roan)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/gumstix_memread_bma180</url>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="gumstix_memwrite_bma180"/>

</package><package name="webots_simulator" path="/webots/webots_simulator" repo="webots-ros-pkg" repo_host="http://webots-ros-pkg.svn.sourceforge.net/svnroot/webots-ros-pkg">
  <description brief="webots_simulator">

     webots_simulator

  </description>
  <author>leus</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/webots_simulator</url>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -lros"/>
  </export>

</package><package name="omni_ethercat" path="/drivers/omni_ethercat" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="omni_ethercat">
    Control node for the mecanum wheel robotic base used at
    TUM IAS. It is controlled by four EtherCAT controllers
    which in turn are controlled using the IgH EtherCAT master library.
  </description>
  <author>Ingo Kresse</author>
  <license>GPL,BSD</license>
  <review notes="" status="unreviewed"/>
  <depend package="igh_eml"/>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="tf"/>
  <depend package="diagnostic_updater"/>
  <depend package="rosie_msgs"/>
</package><package name="rqt_gui_cpp" path="" repo="rqt" repo_host="https://kforge.ros.org/visualization/rqt">
  <description brief="Foundation for plugins using roscpp">
    rqt_gui_cpp enables GUI plugins to use the C++ client library for ROS.
  </description>
  <author>Dirk Thomas</author>
  <license>BSD</license>
  <review notes="2012-06-20" status="API cleared"/>
  <url>http://ros.org/wiki/rqt_gui_cpp</url>

  <depend package="qt_gui"/>
  <depend package="qt_gui_cpp"/>
  <depend package="roscpp"/>
  <depend package="nodelet"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lrqt_gui_cpp"/>
    <qt_gui plugin="${prefix}/plugin.xml"/>
  </export>
</package><package name="lse_roomba_2dnav" path="/stacks/lse_roomba_toolbox/trunk/lse_roomba_2dnav" repo="lse_roomba_toolbox" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="lse_roomba_2dnav">

     Parameters and launch files for using the 2D navigation stack on the Roomba robot.

  </description>
  <author>Gonçalo Cabrita and Pedro Sousa</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/lse_roomba_2dnav</url>

</package><package name="rcf_control_protocol" path="/trunk/RCF4ROS/base/rcf_control_protocol" repo="roblab-whge-ros-pkg" repo_host="http://roblab-whge-ros-pkg.googlecode.com/svn">
  <description brief="rcf_control_protocol">

     rcf_control_protocol
     
     This package implements the rcp roomba control protocol.
     
     The RCP Stack sends and receives messages using peer to peer chat
     interfaces such as rcf_skype. Other interfaces could also be
     incorporated.

  </description>
  <author>B. Fabricius</author>
  <license>CreativeCommons BY-NC-SA License</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rcf_control_protocol</url>
  <depend package="roscpp"/>
  <depend package="rcf_base"/>
  <depend package="rcf_skype"/>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lrcp"/>
  </export>  

</package><package name="logitech_usb_webcam" path="/trunk/arrg/ua_drivers/logitech_usb_webcam" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
  <description brief="logitech_usb_webcam">

     logitech_usb_webcam

  </description>
  <author>Antons Rebguns</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/logitech_usb_webcam</url>
  <depend package="usb_cam"/>

</package><package name="meka_arm_navigation" path="/trunk/meka_arm_navigation/meka_arm_navigation" repo="meka-ros" repo_host="http://mekabot.com/meka-ros">
  <description brief="meka_arm_navigation">

     meka_arm_navigation

  </description>
  <author>meka</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/meka_arm_navigation</url>
  <depend package="planning_environment"/>
  <depend package="arm_kinematics_constraint_aware"/>
  <depend package="ompl_ros_interface"/>
  <depend package="trajectory_filter_server"/>
  <depend package="constraint_aware_spline_smoother"/>
  <depend package="move_arm"/>

</package><package name="tf_lister" path="/trunk/stacks/bosch_web_visualization/tf_lister" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="tf_lister">

     tf_lister

  </description>
  <author>Sarah Osentoski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/tf_lister</url>
  <depend package="rospy"/>
  <depend package="tf"/>
</package><package name="uc3m-socialrobots" path="/tags/compressed_rounded_image_transport" repo="uc3m-socialrobots" repo_host="http://uc3m-socialrobots.googlecode.com/svn">
  <description brief="compressed_rounded_image_transport">
  compressed_rounded_image_transport:
  An image_transport plugin for float images.
  </description>
  <author>Arnaud Ramey (arnaud.a.ramey@gmail.com)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/compressed_rounded_image_transport</url>

  <depend package="sensor_msgs"/>
  <depend package="image_transport"/>
  <depend package="cv_bridge"/>
  <depend package="pluginlib"/>
  <depend package="ros_utils"/>

  <export>
    <rosdoc config="rosdoc.yaml"/>
    <image_transport plugin="${prefix}/compressed_rounded_plugins.xml"/>
    <cpp cflags="-I${prefix}/src" lflags="-L${prefix}/lib"/>
  </export>
</package><package name="rtt_rosgraph_msgs" path="" repo="rtt_ros_comm" repo_host="http://git.mech.kuleuven.be/robotics/rtt_ros_comm.git">
  <description brief="rtt_rosgraph_msgs">

    Provides an rtt typekit for ROS rosgraph_msgs messages.

    It allows you to use ROS messages transparently in
		RTT components and applications.

		This package was automatically generated by the
		create_rtt_msgs generator and should not be manually
		modified.

		See the http://ros.org/wiki/rosgraph_msgs documentation
		for the documentation of the ROS messages in this
		typekit.

  </description>
  <author>create_rtt_msgs Generator</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rtt_rosnode</url>
  <depend package="rtt_rosnode"/>
  <depend package="rosgraph_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>


</package><package name="tf_trajectory_visualization" path="/stacks/ias_visualization/tf_trajectory_visualization" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="tf_trajectory_visualization">

     tf_trajectory_visualization

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/tf_trajectory_visualization</url>
  <depend package="tf"/>
  <depend package="visualization_msgs"/>
  <depend package="rospy"/>
  <depend package="geometry_msgs"/>
  <depend package="std_msgs"/>
  <depend package="rosbag"/>

</package><package name="policy_library" path="" repo="usc-clmc-ros-pkg" repo_host="https://github.com/usc-clmc/usc-clmc-ros-pkg">
  <description brief="policy_library">

     policy_library

  </description>
  <author>Peter Pastor</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/policy_library</url>

  <depend package="rosbag"/>
  <depend package="roscpp"/>

  <depend package="usc_utilities"/>
  <depend package="dynamic_movement_primitive"/>
  <depend package="dynamic_movement_primitive_utilities"/>
  <depend package="policy_msgs"/>
  <depend package="bullet"/>
  <depend package="tf"/>
  
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/srv/cpp -I${prefix}/msg/cpp" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lpolicy_library"/>
  </export>
  
</package><package name="r2_controllers_gazebo" path="" repo="nasa_r2_simulator" repo_host="https://bitbucket.org/nasa_ros_pkg/nasa_r2_simulator">
  <description brief="r2_controllers_gazebo">

     r2_controllers_gazebo

  </description>
  <author>Stephen Hart</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/r2_controllers_gazebo</url>

  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="angles"/>
  <depend package="filters"/>
  <depend package="tf"/>

  <depend package="tf_conversions"/>
  <depend package="kdl"/>
  <depend package="kdl_parser"/>
  <depend package="urdf"/>

  <depend package="eigen_conversions"/>
  <!--depend package="eigen" /-->
  <depend package="pluginlib"/>
  <depend package="actionlib"/>

  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="diagnostic_msgs"/>
  <depend package="trajectory_msgs"/>

  <depend package="pr2_controllers_msgs"/>
  <depend package="pr2_controller_interface"/>
  <depend package="pr2_controller_manager"/>
  <depend package="pr2_mechanism_model"/>

  <depend package="control_toolbox"/>
  <depend package="realtime_tools"/>
  <depend package="message_filters"/>
  <depend package="control_msgs"/>
  <!--<depend package="interactive_markers"/>-->

  <depend package="r2_msgs"/>
 
  <export>
    <pr2_controller_interface plugin="${prefix}/controller_plugins.xml"/>
    <python path="${prefix}/nodes"/>
    <python path="${prefix}/src"/>
  </export> 


</package><package name="position_string_msgs" path="/stacks/ias_visualization/position_string_msgs" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="position_string_rviz_plugin">
     Message for visualizing strings at certain positions..
  </description>
  <author>Nico Blodow</author>
  <license>BSD</license>

  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
</package><package name="SafetyLight_sim_server" path="/darpa_arm_sim_servers/SafetyLight_sim_server" repo="darpa_arm_sim_servers" repo_host="http://svn.thearmrobot.com">
  <description brief="SafetyLight_sim_server">

     SafetyLight_sim_server

  </description>
  <author>DARPA ARM GFE Team</author>
  <license>private</license>

  <depend package="roscpp"/>
  <depend package="SafetyLight_msgs"/>

</package><package name="sbpl_arm_planner" path="/sbpl_arm_planning/trunk/sbpl_arm_planner" repo="sbpl_arm_planning" repo_host="https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs">
  <description brief="Motion Planning Research for a Robotic Manipulator">

    Benjamin Cohen - University of Pennsylvania
    Advised by:
    Sachin Chitta - Willow Garage
    Maxim Likhachev - Carnegie Mellon University

  </description>
  <author>Benjamin Cohen/bcohen@seas.upenn.edu</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.ros.org/wiki/sbpl_arm_planner</url>

	<depend package="roscpp"/>
  <depend package="sbpl"/>
  <depend package="sbpl_collision_checking"/>
	<depend package="angles"/>
	<depend package="distance_field"/>

  <!-- sbpl_arm_model -->
  <depend package="kdl"/>
  <depend package="kdl_parser"/>
  <depend package="urdf"/>
  <depend package="pr2_arm_kinematics"/>
	<depend package="tf"/>
  <depend package="planning_scene"/>
  <depend package="bfs3d"/>

  <depend package="sbpl_geometry_utils"/>
  <depend package="planning_models"/>
  <depend package="planning_models_loader"/>
  <depend package="collision_distance_field"/>
  <depend package="geometric_shapes"/>
  <depend package="collision_distance_field_ros"/>

  <rosdep name="eigen"/>

  <export>
      <cpp cflags="-I${prefix}/include  -O3 -g" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lsbpl_arm_planner"/>
  </export>

</package><package name="adc_sub20" path="/trunk/stacks/bosch_drivers/adc_sub20" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="adc_sub20">

     adc_sub20

  </description>
  <author>Nikhil Deshpande (Maintained by Philip Roan)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/adc_sub20</url>
  <depend package="std_msgs"/>
  <depend package="roscpp"/>
  <depend package="sub20"/>

</package><package name="corobot_arm" path="/trunk/Diamondback/Corobot/corobot_arm" repo="roscorobot" repo_host="http://svn.code.sf.net/p/roscorobot/code">
  <description brief="corobot_arm">

	High Level interface to move the arm of the Corobot.

  </description>
  <author>Morgan Cormier/mcormier@coroware.com</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/corobot_arm</url>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="PhidgetServo"/>
  <depend package="corobot_srvs"/>

</package><package name="equilibrium_point_control" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="equilibrium_point_control">

     Core functionality for using Equilibrium Point Control with
     different robots.

  </description>
  <author>Advait Jain, Kelsey Hawkins. Advisor: Prof. Charlie Kemp (Healthcare Robotics Lab)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/equilibrium_point_control</url>
  <depend package="rospy"/>

</package><package name="joy" path="/stacks/joystick_drivers/trunk/joy" repo="joystick_drivers" repo_host="https://code.ros.org/svn/ros-pkg">
  <author>Morgan Quigley, Brian Gerkey, Kevin Watts and Blaise Gassend</author>
  <description brief="ROS driver for a generic Linux joystick.">
    The joy package contains joy_node, a node that interfaces a generic Linux joystick to ROS. This node publishes a &quot;Joy&quot; message, which contains the current state of each one of the joystick's buttons and axes.
  </description>

  <license>BSD</license>
  <url>http://www.ros.org/wiki/joy</url>
  <review notes="reviewed 10-1-2009" status="Doc reviewed"/>
  <depend package="roscpp"/>
  <depend package="diagnostic_updater"/>
  <depend package="sensor_msgs"/>

  <depend package="rosbag"/>
  <export>
    <rosbag migration_rule_file="migration_rules/Joy.bmr"/>
  </export>

  <rosdep name="joystick"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="hrl_clickable_behaviors" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="hrl_clickable_behaviors">

     Contains a working demo of the hrl_clickable_world interface.

  </description>
  <author>Author: Kelsey Hawkins, Advisor: Prof. Charlie Kemp (Healthcare Robotics Lab at Georgia Tech)</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/hrl_clickable_behaviors</url>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="roslib"/>
  <depend package="hrl_table_detect"/>
  <depend package="pr2_grasp_behaviors"/>
  <depend package="hrl_clickable_world"/>
  <depend package="std_srvs"/>
  <depend package="actionlib"/>
  <depend package="move_base_msgs"/>
  <depend package="pr2_approach_table"/>
  <depend package="hrl_move_floor_detect"/>

</package><package name="nbv_arm_planning" path="/trunk/next_best_view/ros_nbv/nbv_arm_planning" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="nbv_arm_planning">

     nbv_arm_planning

  </description>
  <author>Christian Potthast</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/nbv_arm_planning</url>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="tf2"/>
  <depend package="opencv2"/>
  <depend package="sensor_msgs"/>
  <depend package="pcl"/>
  <depend package="eigen"/>
  <depend package="visualization_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="kinematics_msgs"/>
  <depend package="actionlib"/>
  <depend package="move_base_msgs"/>
  <depend package="pr2_msgs"/>
  <depend package="nbv_utilities"/>
<!--  <depend package="nbv_main"/> -->

</package><package name="CB_TCP_RTAI" path="" repo="JKU_Robotic_Stack" repo_host="https://github.com/AaronMR/JKU_Robotic_Stack">
  <description brief="TCP_RTAI">

     TCP_RTAI

  </description>
  <author>aaronmr</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/TCP_RTAI</url>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="nav_msgs"/>
  <depend package="tf"/>
  <depend package="joy"/>
  <depend package="turtlesim"/>


</package><package name="icreate_waypoints" path="" repo="cmr-ros-pkg" repo_host="lp:cmr">
  <description brief="icreate_waypoints">

     icreate_waypoints

  </description>
  <author/>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/icreate_waypoints</url>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="actionlib_msgs"/>
  <depend package="actionlib"/>
  <depend package="geometry_msgs"/>
  <depend package="move_base_msgs"/>
  <depend package="irobot_create_2_1"/>
</package><package name="ias_descriptors_3d" path="/3rdparty/ias_descriptors_3d" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="ias_descriptors_3d">

     Feature descriptor library for 3-D data
     
  </description>
  <author>Daniel Munoz/ dmunoz@willowgarage.com, Dejan Pangercic (patched version)</author>
  <license>BSD</license>
  <url>http://pr.willowgarage.com/wiki/descriptors_3d</url>
  <review notes="" status="unreviewed"/>

  <depend package="roscpp"/>
  <depend package="eigen3"/>
  <depend package="opencv2"/>
  <depend package="fixed_point_cloud_mapping"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath=${prefix}/lib -lias_descriptors_3d"/>
  </export>
</package><package name="polonius_engine" path="/branches/stable/polonius/polonius_engine" repo="wu-ros-pkg" repo_host="https://wu-robotics.googlecode.com/svn">
  <description brief="Polonius Engine">
    The main engine for running the Polonius Wizard of Oz Interface
  </description>
  <author>David V. Lu!!</author>
  <license>BSD</license>
  <url>http://ros.org/wiki/polonius_engine</url>
  <depend package="rospy"/>
  <depend package="smach"/>
  <depend package="smach_ros"/>
  <depend package="polonius_msgs"/>
  <depend package="rostopic"/>
  <depend package="polonius_demo"/>
</package><package name="create_webcam" path="/trunk/create_webcam" repo="ucsb-ros-pkg" repo_host="https://ucsb-ros-pkg.googlecode.com/svn">
  <description brief="create_webcam">

This package enables users to remotely view/transmit webcam images and control an iRobot Create with a joystick.  Webcam images can be viewed locally or they can be compressed and transmitted over the network.  A teleoperation node is included to provide joystick control using the create_node package.  

  </description>
  <author>Paul Filitchkin</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>https://code.google.com/p/ucsb-ros-pkg/wiki/create_webcam</url>
  <depend package="image_transport"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="create_node"/>
  <depend package="joy"/>
  <depend package="create_joy"/>

</package><package name="planner_navigation_actions" path="/trunk/pr2_symbolic_planning/planner_navigation_actions" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="planner_navigation_actions">
    This package contains state and action definitions for the
    continual_planning_executive that interface the navigation stack.
  </description>
  <author>Christian Dornhege</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/planner_navigation_actions</url>
  <depend package="roscpp"/>
  <depend package="pluginlib"/>
  <depend package="move_base_msgs"/>
  <depend package="actionlib"/>
  <depend package="hardcoded_facts"/>
  <depend package="tf"/>
  <depend package="continual_planning_executive"/>
  <depend package="tidyup_utils"/>

  <export>
      <continual_planning_executive plugin="${prefix}/planner_navigation_actions_plugins.xml"/>
  </export>

</package><package name="bfs3d" path="/sbpl_arm_planning/trunk/bfs3d" repo="sbpl_arm_planning" repo_host="https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs">
  <description brief="Motion Planning Research for a Robotic Manipulator">

		Written by Harsh Pandey
		
  </description>
  <author>Benjamin Cohen/bcohen@seas.upenn.edu</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.ros.org/wiki/BFS3D</url>

	<depend package="roscpp"/>

  <export>
      <cpp cflags="-I${prefix}/include  -O3 -g" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lbfs3d"/>
  </export>

</package><package name="skin_demo_movebase" path="/trunk/stacks/bosch_skin/skin_demo_movebase" repo="bosch-ros-pkg-e" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg-e/code">
  <description brief="Touchless teleop of PR2 using the Bosch Skin">

	The skin_demo_movebase package allows users to teleop the PR2's base using the Bosch Skin.

  </description>
  <author>Sebastian Haug</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/skin_demo_movebase</url>
 
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  <depend package="tf"/>
  
  <depend package="skin_driver"/>
</package><package name="simple_sphere_detector" path="/darpa_arm_sim_servers/simple_sphere_detector" repo="darpa_arm_sim_servers" repo_host="http://svn.thearmrobot.com">
  <description brief="SimpleSphereDetector">

     simple_sphere_detector

  </description>
  <author/>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/mimic_arm</url>
  <depend package="roslib"/>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="pcl"/>
  <depend package="opencv2"/>
</package><package name="shell_execution_action_server" path="/trunk/freiburg_tools/shell_execution_action_server" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="Action Server that executes command lines (via shell)">

    This package contains an action server that can be given an command line
    to execute (on the machine it is running as the user it is runnign as). 
    Warning: This is inherently unsafe! You can send &quot;rm -rf ~&quot; or other nasty
    things.

  </description>
  <author>Felix Endres</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/shell_execution_action_server</url>
  <depend package="rospy"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>

</package><package name="automow_teleop" path="" repo="au_automow_apps" repo_host="https://github.com/Auburn-Automow/au_automow_apps">
  <description brief="automow_teleop">

     automow_teleop

  </description>
  <author>Michael Carroll</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/automow_teleop</url>
  <depend package="joy"/>
  <depend package="geometry_msgs"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>
</package><package name="tf2_bullet" path="" repo="geometry_experimental" repo_host="https://kforge.ros.org/geometry/experimental">
  <description brief="tf2_bullet">

     tf2_bullet

  </description>
  <author>Wim Meeussen</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/tf2_bullet</url>
  <depend package="tf2_ros"/>
  <depend package="bullet"/>
  <depend package="geometry_msgs"/>

 <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp -I${prefix}/srv/cpp"/>
  </export>

</package><package name="linksys_access_point" path="/stacks/linux_networking/trunk/linksys_access_point" repo="linux_networking" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="linksys_access_point">
    A ROS node that controls a Linksys access point with
    a Linksys WRT610n-compatible web interface.
  </description>
  <author>Catalin Drula</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/linksys_access_point</url>
  <depend package="rospy"/>
  <depend package="access_point_control"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="ieee80211_channels"/>
</package><package name="kinect_depth_calibration" path="" repo="camera_pose" repo_host="https://kforge.ros.org/calibration/camera_pose">
  <description brief="kinect_depth_calibration">

     kinect_depth_calibration

  </description>
  <author>Eitan Marder-Eppstein</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/kinect_depth_calibration</url>
  <depend package="rospy"/>
  <depend package="roslib"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="stereo_msgs"/>
  <depend package="tf_conversions"/>
  <depend package="tf"/>
  <depend package="kdl"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="cognitive_perception" path="" repo="ias_perception" repo_host="http://code.in.tum.de/git/ias-perception.git">
  <description>
        Cognitive Perception Server

         Perception interface to highlevel planning  (kipla)

  </description>
  <author>Ulrich F Klank</author>
  <license>GPL</license>
  <depend package="roscpp"/>
  <depend package="vision_srvs"/>
  <depend package="sensor_msgs"/>
  <depend package="lo"/>
  <depend package="ann"/>
  <depend package="pluginlib"/>
  <export>
      <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -lcop"/>
      <rosdoc config="cop_doc.yaml"/>
  </export>
</package><package name="eros_cpp_tutorials" path="/trunk/tests/eros_cpp_tutorials" repo="eros" repo_host="https://code.ros.org/svn/eros">
  <description brief="Simple cpp tests for cross-compiling">
    This was primarily made for testing the mingw cross compiles.
  </description>
  <author>Daniel Stonier</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/eros_cpp_tutorials</url>
  <depend package="roscpp"/>
  <depend package="std_srvs"/>
  <depend package="std_msgs"/>
</package><package name="continuous_ops_test_task" path="" repo="continuous_ops" repo_host="https://kforge.ros.org/contops/hg">
  <description brief="continuous_ops_test_task">

     continuous_ops_test_task

  </description>
  <author>Wim Meeussen</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/continuous_ops_test_task</url>
  <depend package="continuous_ops_task_manager"/>
  <depend package="rospy"/>
</package><package name="nbv_move_arm" path="/trunk/next_best_view/ros_nbv/nbv_move_arm" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="nbv_move_arm">

     nbv_move_arm

  </description>
  <author>Christian Potthast</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/nbv_move_arm</url>

  <depend package="roscpp"/>
  <depend package="rosconsole"/>
  <depend package="std_msgs"/>
  <depend package="motion_planning_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="mapping_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="geometric_shapes"/>
  <depend package="planning_models"/>
  <depend package="planning_environment"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="tf_conversions"/>
  <depend package="planning_environment_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="kinematics_msgs"/>
  <depend package="move_arm_msgs"/>
  <depend package="geometric_shapes_msgs"/>
  <depend package="move_arm_head_monitor"/>
  <depend package="geometry_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/msg/cpp"/>
  </export> 

</package><package name="turtlesim" path="/stacks/ros_tutorials/trunk/turtlesim" repo="ros_tutorials" repo_host="https://code.ros.org/svn/ros">
  <description brief="turtlesim">

     turtlesim is a tool made for teaching ROS and ROS-PKGS.

  </description>
  <author>Josh Faust</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/turtlesim</url>

  <rosdep name="libqt4-dev"/>
  <rosdep name="qt4-qmake"/>

  <export>
    <cpp cflags="`PKG_CONFIG_PATH=${prefix}/../../lib/pkgconfig pkg-config --cflags turtlesim`" lflags="`PKG_CONFIG_PATH=${prefix}/../../lib/pkgconfig pkg-config --libs turtlesim`"/>
  </export>

</package><package name="openrave_database" path="/trunk/openrave_planning/openrave_database" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="OpenRAVE Robot/Object Database Generation">
    Uses ROS to parallelize the database generation processes inside OpenRAVE.
  </description>
  <author>Rosen Diankov (rosen.diankov@gmail.com)</author>
  <license>Apache License, Version 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://openrave.org</url>
  <depend package="openrave"/>
  <depend package="parallel_util"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="ihr_opencv" path="" repo="iheart-ros-pkg" repo_host="git://github.com/IHeartRobotics/iheart-ros-pkg">
  <description brief="ihr_demo_1">
    I Heart Robotics ROS OpenCV Demos
  </description>
  <author>I Heart Robotics</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ihr_opencv</url>
  <depend package="sensor_msgs"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="image_transport"/>
  <depend package="ihr_demo_bags"/>
</package><package name="joint_state_muxer" path="" repo="uos_tools" repo_host="http://kos.informatik.uni-osnabrueck.de/uos_tools.git">
  <description brief="joint_state_muxer">

     joint_state_muxer

  </description>
  <author>Martin Günther</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/joint_state_muxer</url>

</package><package name="summit_sbpl_nav" path="/trunk/trunk/summit_sim/summit_sbpl_nav" repo="summit-ros-pkg" repo_host="http://summit-ros-stack.googlecode.com/svn">
  <description brief="summit_sbpl_nav">

     summit_sbpl_nav

  </description>
  <author>Roberto</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/summit_sbpl_nav</url>
  <depend package="roscpp"/>
  <depend package="sbpl"/>
  <depend package="sbpl_lattice_planner"/>

</package><package name="diagnostic_analysis" path="/stacks/diagnostics/trunk/diagnostic_analysis" repo="diagnostics" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Process diagnostics log files for data">
    The diagnostic_analysis package can convert a log of diagnostics data
    into a series of CSV files. Robot logs are recorded with rosbag, and
    can be processed offline using the scripts in this package.
  </description>
  <author>Eric Berger, Kevin Watts</author>
  <license>BSD</license>
  <review notes="2010/01/15" status="Doc reviewed"/>
  <depend package="rosbag"/>
  <depend package="rostest"/>
  <depend package="diagnostic_msgs"/>
  <url>http://www.ros.org/wiki/diagnostics_analysis</url>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="camera1394" path="/stacks/camera1394/trunk" repo="camera1394" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="IEEE 1394 Digital Camera driver">
    ROS driver for devices supporting the IEEE 1394 Digital Camera
    (IIDC) protocol. Supports the ROS image_pipeline, using libdc1394
    for device access.
  </description>
  <author>Jack O'Quin, Ken Tossell, Patrick Beeson,
    Nate Koenig, Andrew Howard,
    Damien Douxchamps, Dan Dennedy
  </author>
  <license>LGPL</license>
  <review notes="2010-06-19" status="Doc reviewed"/>
  <url>http://ros.org/wiki/camera1394</url>

  <depend package="camera_info_manager"/>
  <depend package="diagnostic_updater"/>
  <depend package="driver_base"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="image_transport"/>
  <depend package="nodelet"/>
  <depend package="tf"/>

  <rosdep name="libdc1394-dev"/>

  <export>
    <nodelet plugin="${prefix}/camera1394_nodelet.xml"/>
  </export>

</package><package name="rtcus_navigation_tools" path="/trunk/rtcus_mobile_robots/rtcus_navigation_tools" repo="rtc-us-ros-pkg-trunk" repo_host="https://rtc-us-ros-pkg.svn.sourceforge.net/svnroot/rtc-us-ros-pkg">
	<description brief="rtcus_navigation_tools">

		rtcus_navigation_tools_lib

	</description>
	<author>Pablo Iñigo Blasco</author>
	<license>BSD</license>
	<review notes="" status="unreviewed"/>
	<url>http://ros.org/wiki/rtcus_navigation_tools</url>

	<export>
		<cpp cflags="-I${prefix}/include -I${prefix}/cfg/cpp" lflags="-L${prefix}/lib -lrtcus_navigation_tools"/>
	</export>

	<depend package="rtcus_navigation"/>
	<depend package="rtcus_timing"/>
	<depend package="rtcus_nav_msgs"/>
	<depend package="visualization_msgs"/>

</package><package name="sr_grasp_planner" path="" repo="sr_contrib" repo_host="lp:sr-contrib">
  <description brief="sr_grasp_planner">

    Plans grasps for unknown objects using the Shadow Dextrous Hand. It is still highly
    experimental and can not be used as is.

  </description>
  <author>Ugo Cupcic</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sr_grasp_planner</url>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="eigen"/>
  <depend package="object_manipulation_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="sensor_msgs"/>

</package><package name="map_msgs" path="" repo="map_msgs" repo_host="git://github.com/ethz-asl/map_msgs">
  <description brief="map_msgs">

     This package defines messages commonly used in mapping packages.

  </description>
  <author>Stéphane Magnenat</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/map_msgs</url>
  <depend package="std_msgs"/>  
  <depend package="sensor_msgs"/>  
  <depend package="nav_msgs"/>  

</package><package name="actuator_array_example" path="" repo="gt-ros-pkg.humans" repo_host="https://code.google.com/p/gt-ros-pkg.humans">
  <description brief="actuator_array_example">

     actuator_array_example

  </description>
  <author>Stephen Williams</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/actuator_array_example</url>
  <depend package="roscpp"/>
  <depend package="xacro"/>
  <depend package="gazebo"/>
  <depend package="robot_state_publisher"/>
  <depend package="actuator_array_driver"/>
  <depend package="actuator_array_gazebo_plugin"/>

</package><package name="checkerboard_detector" path="/trunk/jsk_visioncommon/checkerboard_detector" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="Finds checkerboards and returns their 6D poses">
    Uses opencv to find checkboards and compute their 6D poses with respect to the image. Requires the image to be calibrated.
    Parameters:
    display - show the checkerboard detection
    rect%d_size_x - size of checker in x direction
    rect%d_size_y - size of checker in y direction
    grid%d_size_x - number of checkers in x direction
    grid%d_size_y - number of checkers in y direction
    
    There can be more than one grid%d declared, the numbers should grow consecutively starting at 0.
  </description>
  <author>Rosen Diankov (rdiankov@cs.cmu.edu)</author>
  <license>BSD</license>

  <depend package="roscpp"/>
  <depend package="cv_bridge"/>
  <depend package="sensor_msgs"/>
  <depend package="posedetection_msgs"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>

  <rosdep name="opencv2"/>
</package><package name="pr2_navigation_global" path="" repo="pr2_navigation" repo_host="https://kforge.ros.org/pr2navigation/hg">
  <description brief="XML files for running global navigation assuming a static map on a PR2 robot.">

     This package holds XML files for running the <a href="http://www.ros.org/wiki/move_base">move_base</a> node on a PR2 robot. The <a href="http://www.ros.org/wiki/move_base">move_base</a> node is configured to run over a pre-specified static map.

  </description>
  <author>Eitan Marder-Eppstein</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_navigation_global</url>
  <depend package="move_base"/>
  <depend package="amcl"/>
  <depend package="pr2_machine"/>
  <depend package="pr2_navigation_config"/>
  <depend package="pr2_move_base"/>
  <depend package="topic_tools"/>
</package><package name="gsll" path="" repo="cram_core" repo_host="https://github.com/moesenle/cram_core">
  <description brief="GSLL">
      GSLL a GSL wrapper for common lisp
      http://common-lisp.net/project/gsll/
  </description>
  <author/>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>

  <rosdep name="libgsl"/>
  <depend package="gsd"/>
  <depend package="trivial_garbage"/>
  <depend package="cl_utilities"/>
  <depend package="cffi"/>
</package><package name="polling_input_stream" path="" repo="google" repo_host="https://code.google.com/p/rosjava.google/">
  <description brief="polling_input_stream">polling_input_stream</description>
  <author>Damon Kohler</author>
  <license>Apache License 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/polling_input_stream</url>
</package><package name="rfid_nav" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="rfid_nav">

     rfid_nav

  </description>
  <author>Travis</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rfid_nav</url>
  <depend package="pr2_navigation_slam"/>
  <depend package="pr2_navigation_perception"/>
  <depend package="pr2_navigation_teleop"/>
  <depend package="pr2_machine"/>
  <depend package="move_base"/>
  <depend package="sbpl"/>

</package><package name="openfabmap2" path="" repo="cyphy_vis_slam" repo_host="https://cyphy-vis-slam.googlecode.com/hg/cyphy_vis_slam">
  <description brief="openfabmap2">

     openfabmap2

  </description>
  <author>Timothy Morris</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/openfabmap2</url>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="cv_bridge"/>
  <depend package="image_transport"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="driver_base"/>
  <depend package="cyphy_vslam_msgs"/>
</package><package name="rxDev" path="/trunk/rxDev" repo="rxdeveloper-ros-pkg" repo_host="http://rxdeveloper-ros-pkg.googlecode.com/svn">
  <description brief="rxdev">

     rxDeveloper is a graphical tool for creating and editing launchfiles

  </description>
  <author>Filip Müllers</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rxdev</url>
  <depend package="roslib"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="rosgraph"/>
  <depend package="common_rosdeps"/>
  <depend package="rostopic"/>
  <depend package="rosnode"/>
  <rosdep name="qt4"/> 
  <rosdep name="tinyxml"/>
  <rosdep name="yaml-cpp"/>
  
</package><package name="sbl_teleop" path="/trunk/pr2_sbl_experimental/utils/sbl_teleop" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="sbl_teleop">

     sbl_teleop

  </description>
  <author>Edward T. Kaszubski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sbl_teleop</url>
  <depend package="quickdev_cpp"/>
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp -I${prefix}/srv/cpp"/>
  </export>
</package><package name="asctec_hl_firmware" path="" repo="asctec_mav_framework" repo_host="https://github.com/ethz-asl/asctec_mav_framework">
  <description brief="asctec_highlevel firmware">

     Firmware code for the Asctec Autopilot HighLevel Processor 

  </description>
  <author>Markus Achtelik, Michael Achtelik, Stephan Weiss, Laurent Kneip</author>
  <license>sdk.c/sdk.h: BSD; HL SDK, SSDK lib by AscTec</license>
  <review notes="This is unstable and under active development" status="unreviewed"/>
  <url>http://ros.org/wiki/asctec_hl_firmware</url>
</package><package name="ab_filter" path="" repo="mav_tools" repo_host="https://github.com/ccny-ros-pkg/mav_tools">
  <description brief="ab_filter">

     Alpha-beta filters for pose and height messages.

  </description>
  <author>Ivan Dryanovski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ab_filter</url>
  <depend package="roscpp"/>
  <depend package="nodelet"/>
  <depend package="geometry_msgs"/>
  <depend package="mav_msgs"/>
  <depend package="tf"/>

  <export>
    <nodelet plugin="${prefix}/ab_filter_height_nodelet.xml"/>
    <nodelet plugin="${prefix}/ab_filter_pose_nodelet.xml"/>
  </export>

</package><package name="cart_local_planner" path="/stacks/cart_pushing/trunk/cart_local_planner" repo="cart_pushing" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="cart_local_planner">

     cart_local_planner

  </description>
  <author>Jonathan Scholz</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cart_local_planner</url>
  <depend package="base_local_planner"/>
  <depend package="nav_core"/>
  <depend package="costmap_2d"/>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="nav_msgs"/>
  <depend package="pluginlib"/>
  <depend package="cart_pushing_msgs"/>
  <depend package="manipulation_transforms"/>
  <depend package="articulate_cart"/>
  <depend package="costmap_trajectory_checker"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lcart_local_planner"/>
    <nav_core plugin="${prefix}/clp_plugin.xml"/>
  </export>

</package><package name="prosilica_camera" path="/stacks/prosilica_driver/trunk/prosilica_camera" repo="prosilica_driver" repo_host="https://code.ros.org/svn/ros-pkg">
  <description>
  A ROS driver node for AVT/Prosilica Gigabit Ethernet (GigE) cameras.
  </description>
  <author>Patrick Mihelich</author>
  <license>BSD</license>
  <review notes="Jan 22 2010" status="Doc Reviewed"/>

  <depend package="prosilica_gige_sdk"/>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="diagnostic_updater"/>
  <depend package="diagnostic_msgs"/>
  <depend package="image_transport"/>
  <depend package="self_test"/>
  <depend package="driver_base"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="camera_calibration_parsers"/>
  <depend package="polled_camera"/>

  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/srv/cpp" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lprosilica"/>
  </export>

  <url>http://www.ros.org/wiki/prosilica_camera</url>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="pan_tilt_robotis" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="pan_tilt_robotis">
    Code to combine two Robotis servos to form a Pan Tilt Unit (for a
    stereo camera.)
  </description>
  <author>Advait Jain, Advisor: Prof. Charlie Kemp, Lab: Healthcare Robotics Lab at Georgia Tech</author>
  <license>New BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pan_tilt_robotis</url>
  <depend package="rospy"/>
  <depend package="robotis"/>
  <depend package="hrl_lib"/>

</package><package name="esc_perturb" path="/trunk/extremum_seeking/esc_perturb" repo="dri-ros-pkg" repo_host="https://svn.3me.tudelft.nl/dri-ros-pkg">
  <description brief="esc_perturb">

     Perturbation based extremum seeking control

  </description>
  <author>Berk Calli</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/esc_perturb</url>
  <depend package="roscpp"/>
  <depend package="esc_common"/>
  <depend package="esc_ros"/>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lesc_perturb"/>
  </export>
</package><package name="arbitrator" path="" repo="roboframenet" repo_host="https://kforge.ros.org/appmanandroid/roboframenet">
  <description brief="arbitrator">

    arbitrator determines which of several given potential robot actions will be executed on the robot.

  </description>
  <author>Brian Thomas</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/arbitrator</url>
  <depend package="rospy"/>
  <depend package="roboframenet_msgs"/>

</package><package name="pr2_dense_laser_snapshotter" path="" repo="pr2_calibration" repo_host="https://kforge.ros.org/calibration/pr2_calibration">
  <description brief="Generates dense representation of laser data for PR2's tilting laser">
     Stores the data from a series of laser scan messages in a dense representation, allowing
     users to easily perform image-like operations on intensity or range data. This package is
     experimental. Expect APIs to change.
  </description>
  <author>Vijay Pradeep</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.ros.org/wiki/pr2_dense_laser_snapshotter</url>

  <depend package="dense_laser_assembler"/>
  <depend package="pr2_msgs"/>
</package><package name="rtt_krypton_msgs" path="" repo="krypton_hardware" repo_host="http://git.mech.kuleuven.be/robotics/krypton_hardware.git">
  <description brief="rtt_krypton_msgs">

    Provides an rtt typekit for ROS krypton_msgs messages.

    It allows you to use ROS messages transparently in
    RTT components and applications.

    This package was automatically generated by the
    create_rtt_msgs generator and should not be manually
    modified.

    See the http://ros.org/wiki/krypton_msgs documentation
    for the documentation of the ROS messages in this
    typekit.

  </description>
  <author>create_rtt_msgs Generator</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rtt_krypton_msgs</url>
  <depend package="rtt_rosnode"/>
  <depend package="krypton_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>

</package><package name="dynamixel_driver" path="/stacks/dynamixel_motor/trunk/dynamixel_driver" repo="dynamixel_motor" repo_host="https://ua-ros-pkg.googlecode.com/svn">
    <description brief="Python drivers for Robotis Dynamixel servos">
        This package provides low level IO for Robotis Dynamixel servos.
        Fully supports and was tested with AX-12, AX-18, RX-24, RX-28,
        MX-28, RX-64, EX-106 models. Hardware specific constants are
        defined for reading and writing information from/to Dynamixel
        servos. This low level package won't be used directly by most
        ROS users. The higher level dynamixel_controllers and specific
        robot joint controllers make use of this package.
    </description>
    <author>Antons Rebguns, Cody Jorgensen</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/dynamixel_driver</url>
    
    <depend package="rospy"/>
    <depend package="diagnostic_msgs"/>
    
    <rosdep name="python-serial"/>
</package><package name="dynamic_window" path="" repo="uuisrc-ros-pkg" repo_host="https://github.com/cburbridge/uuisrc-ros-pkg">
  <description brief="dynamic_window">

     Dynamic window controller. For more details see      

&quot;Fox, D.; Burgard, W.; Thrun, S., &quot;The dynamic window approach to collision avoidance&quot; Robotics and Automation Magazine, IEEE , vol.4, no.1, pp.23-33, Mar 1997&quot;


  </description>
  <author>&quot;Lorenzo Riano (lorenzo.riano@gmail.com)&quot; </author>
  <license>GNU</license>
  <url> http://www.ros.org/wiki/dynamic_window </url>
  <review notes="" status="unreviewed"/>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="std_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="laser_geometry"/>
  <depend package="pcl"/>

</package><package name="time_series" path="/trunk/arrg/ua_experimental/time_series" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
  <description brief="time_series">

     Algorithms for analyzing multivariate time series, including CAVE (Categorizing and Visualizing Episodes).

  </description>
  <author>Wesley Kerr (packaged for ROS by Daniel Hewlett)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/time_series</url>
  
  <depend package="rosjava_jni"/>
  <depend package="std_msgs"/>
  <depend package="std_srvs"/>

</package><package name="tidyup_tools" path="/trunk/tidyup_robot/tidyup_tools" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="tidyup_tools">

     tidyup_tools

  </description>
  <author>andreas</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/tidyup_tools</url>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="hardcoded_facts"/>
  <depend package="pr2_python"/>
  <depend package="tidyup_arm_services"/>
  <depend package="planner_modules_pr2"/>
  <depend package="sbpl_3dnav_planner"/>

</package><package name="fastrak_mocap_driver" path="/ros/packages/fastrak_mocap_driver" repo="eohan" repo_host="http://tools.pushkar.name/ext">
  <description brief="fastrak_mocap_driver">

     fastrak_mocap_driver

  </description>
  <author>eohan</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/fastrak_mocap_driver</url>
  <depend package="tf"/>

</package><package name="cob_interactive_teleop" path="" repo="cob_command_tools" repo_host="git://github.com/ipa320/cob_command_tools">
    <description brief="cob_interactive_teleop">
        
        COB teleop interactive marker for RViz provided by dcgm-robotics@FIT group.
        
    </description>
    <author>
        Tomas Lokaj, Michal Spanel (spanel@fit.vutbr.cz)
    </author>
    <license>
        LGPL
    </license>
    <review notes="" status="unreviewed"/>
    <url>
        http://ros.org/wiki/cob_interactive_teleop
    </url>
    
    <depend package="roscpp"/>
    <depend package="interactive_markers"/>
    <depend package="rviz"/>
    <depend package="roscpp"/>
    <depend package="visualization_msgs"/>
    <depend package="interactive_markers"/>
    <depend package="std_msgs"/>
    <depend package="tf"/>
    <depend package="geometry_msgs"/>
    <depend package="sensor_msgs"/>
    <depend package="message_filters"/>
    
    <export>
        <rosdoc config="rosdoc.yaml"/>
    </export>
    
</package><package name="roseus_smach" path="/trunk/roseus_smach" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="roseus_roseus">

     roseus_smach

     * Euslisp state machine class. it will be moved.
     * Message publisher for visualizing current state by smach_viewer.
     * Simple pickle dump script for debugging state machine.
     * Execute state machine as a action server.

  </description>
  <author>Manabu Saito</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/roseus_smach</url>
  <depend package="euslisp"/>
  <depend package="roseus"/>
  <depend package="smach_viewer"/>
  <depend package="smach_msgs"/>
  <depend package="actionlib_tutorials"/>

</package><package name="city_flyer_launch" path="" repo="mav_tools" repo_host="https://github.com/ccny-ros-pkg/mav_tools">
  <description brief="city_flyer_launch">

     city_flyer_launch

  </description>
  <author>Ivan Dryanovski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/city_flyer_launch</url>

</package><package name="mav_common" path="" repo="mav_tools" repo_host="https://github.com/ccny-ros-pkg/mav_tools">
  <description brief="mav_common">

     mav_common

  </description>
  <author>Ivan Dryanovski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/mav_common</url>
  <depend package="roscpp"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lcomm_util"/>
  </export>

</package><package name="rosjava_geometry" path="" repo="rosjava_core" repo_host="https://code.google.com/p/rosjava/">
  <description brief="rosjava_geometry">
     rosjava_geometry provides the classes for common geometry operations and representations (e.g. transformations).
  </description>
  <author>Lorenz Moesenlechner</author>
  <license>Apache 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosjava_geometry</url>
</package><package name="Planmodeller" path="" repo="cn-alica-ros-pkg" repo_host="https://code.google.com/p/cn-alica-ros-pkg">
  <description brief="Planmodeller">

     Planmodeller

  </description>
  <author>hendrik</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/Planmodeller</url>

</package><package name="rosapi" path="" repo="rosbridge_suite" repo_host="http://kforge.ros.org/rosbridge/git">
  <description brief="rosapi">

     rosapi

  </description>
  <author>Jon</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosapi</url>
  <depend package="rospy"/>
  <depend package="rosbridge_library"/>

</package><package name="dynamic_tf_publisher" path="/trunk/jsk_coordination_system/dynamic_tf_publisher" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="dynamic_tf_publisher">

     dynamic_tf_publisher

  </description>
  <author>Manabu Saito</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/dynamic_tf_publisher</url>
  <depend package="tf"/>
  <depend package="geometry_msgs"/>

</package><package name="sr_robot_lib" path="" repo="shadow_robot_ethercat" repo_host="lp:sr-ros-interface-ethercat">
  <description brief="sr_robot_lib">

     sr_robot_lib contains the robot library used in the sr_edc_ethercat_drivers. The
     library is used to store the incoming etherCAT messages in an easy to access format,
     and prepare the messages to be send through etherCAT.

  </description>
  <author>Ugo Cupcic / ugo@shadowrobot.com , software@shadowrobot.com</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sr_robot_lib</url>
  <depend package="sr_utilities"/>
  <depend package="sr_hardware_interface"/>
  <depend package="sr_external_dependencies"/>
  <depend package="sr_robot_msgs"/>
  <depend package="sr_ethercat_hand_config"/>
  <depend package="std_srvs"/>
  <depend package="diagnostic_updater"/>
  <depend package="realtime_tools"/>

  <depend package="roscpp"/>
  <depend package="rospy"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -lsr_hand_lib"/>
    <python path="${prefix}/python_lib"/>
  </export>
</package><package name="Staubli" path="/trunk/Staubli" repo="cu-ros-pkg" repo_host="http://cu-ros-pkg.googlecode.com/svn">
  <description brief="staubli">

     This is staubli TX60L package for ROS.

  </description>
  <author>Soonhac Hong</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://code.google.com/p/cu-ros-pkg/</url>
  <depend package="std_msgs"/>
  <depend package="roscpp"/>
  <export>
     <cpp cflags=" -I${prefix}/srv/cpp"/>
  </export>
</package><package name="angles" path="" repo="geometry" repo_host="https://kforge.ros.org/geometry/geometry">
  <description brief="Simple Angular Math Utilities">
      This package provides a set of simple math utilities to work
        with angles. The utilities cover simple things like
        normalizing an angle and conversion between degrees and
        radians. But even if you're trying to calculate things like
        the shortest angular distance between two joinst space
        positions of your robot, but the joint motion is constrained
        by joint limits, this package is what you need. The code in
        this packge is stable and well tested. There are no plans for
        major changes in the near future.
  </description>
  <author>John Hsu, Ioan Sucan</author>
  <license>BSD</license>
  <url>http://ros.org/wiki/angles</url>
  <review notes="2009-09-23" status="doc reviewed"/>
  <export>
    <cpp cflags="-I${prefix}/include" lflags=""/>
  </export>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="bolt_dialog" path="/trunk/arrg/ua_experimental/bolt_dialog" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
  <description brief="bolt_dialog">

     bolt_dialog

  </description>
  <author>Antons Rebguns</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/bolt_dialog</url>
  <depend package="rospy"/>
  <depend package="json_prolog"/>

</package><package name="image_array_viewer" path="/trunk/cturtle/image_array_viewer" repo="seabee3-ros-pkg" repo_host="http://seabee3-ros-pkg.googlecode.com/svn">
  <description brief="image_array_viewer">

     image_array_viewer

  </description>
  <author>Edward</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/image_array_viewer</url>
  <depend package="base_libs"/>
  <depend package="common_utils"/>

</package><package name="simulator_art" path="/trunk/stacks/art_vehicle/simulator_art" repo="utexas-art-ros-pkg" repo_host="http://utexas-art-ros-pkg.googlecode.com/svn">
  <description brief="ART vehicle simulator">

     Simulator for Austin Robot Technology autonomous vehicle.

  </description>
  <author>Jack O'Quin</author>
  <license>GPL</license>
  <review notes="" status="experimental"/>
  <url>http://www.ros.org/wiki/simulator_art</url>

  <depend package="angles"/>
  <depend package="art_common"/>
  <depend package="art_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="roscpp"/>
  <depend package="roslib"/>
  <depend package="sensor_msgs"/>
  <depend package="stage"/>
  <depend package="std_msgs"/>
  <depend package="tf"/>

</package><package name="cl_json_pl_server" path="" repo="cram_highlevel" repo_host="https://github.com/moesenle/cram_highlevel">
  <description brief="cl_json_pl_server">

     cl_json_pl_server

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cl_json_pl_server</url>
  <depend package="roslisp_runtime"/>
  <depend package="cram_reasoning"/>
  <depend package="cl_json_pl_client"/>

</package><package name="openhrp_worlds" path="" repo="stacks/simulator_openhrp" repo_host="git://github.com/laas/simulator_openhrp">
  <description brief="openhrp_worlds">

     openhrp_worlds

  </description>
  <author>Thomas Moulard</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/openhrp_worlds</url>

</package><package name="rxbag_plugins" path="/stacks/visualization/branches/visualization-1.8/rxbag_plugins" repo="visualization" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Visualization plugins for rxbag">

<p>rxbag_plugins contains plugins for the <a href="/wiki/rxbag">rxbag</a> GUI tool.</p>
<p><a href="/wiki/rxbag">rxbag</a> is a graphical framework for analyzing <a href="/wiki/Bags">bag</a> (log) files. rxbag_plugins provide visualizers for <a href="/wiki/Messages">messages</a> of different types.</p>
<p>Some icons from the Silk icon pack are used, which is available from <a href="http://www.famfamfam.com/lab/icons/silk/">famfamfam.com</a>.</p>

  </description>
  <author>Tim Field</author>
  <license>BSD, Creative Commons</license>
  <review notes="" status="Doc reviewed"/>
  <url>http://ros.org/wiki/rxbag_plugins</url>
  <depend package="rospy"/>
  <depend package="roslib"/>
  <depend package="std_msgs"/>
  <depend package="rosbag"/>  
  <depend package="rxbag"/> 
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <export>
    <rxbag plugin="rxbag_plugins.plugins"/>
  </export>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="elektron_navigation" path="" repo="elektron_kinectbot" repo_host="https://github.com/RCPRG-ros-pkg/elektron_kinectbot">
  <description brief="elektron_navigation">

     elektron_navigation

  </description>
  <author>Maciej Stefanczyk</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/elektron_navigation</url>
  <depend package="move_base"/>
  <depend package="gmapping"/>
  <depend package="elektron_bringup"/>
  <depend package="actionlib"/>
  <depend package="rospy"/>
  <depend package="std_msgs"/>
  <depend package="actionlib_msgs"/>
  <depend package="roslib"/>
  <depend package="sound_play"/>

</package><package name="laser_scan_sparsifier" path="" repo="scan_tools" repo_host="https://github.com/ccny-ros-pkg/scan_tools">
  <description brief="laser_scan_sparsifier">

  The laser_scan_sparsifier takes in a LaserScan message and sparsifies it.

  </description>
  <author>Ivan Dryanovski</author>
  <license url="http://www.opensource.org/licenses/BSD-3-Clause">BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/laser_scan_sparsifier</url>
  <depend package="roscpp"/>
  <depend package="nodelet"/>
  <depend package="sensor_msgs"/>
  <depend package="tf"/>

  <export>
    <nodelet plugin="${prefix}/laser_scan_sparsifier_nodelet.xml"/>
  </export>

</package><package name="joint_state_publisher" path="" repo="robot_model_visualization" repo_host="https://kforge.ros.org/robotmodel/visualization">
  <description brief="A node for publishing joint angles">
	A node for publishing joint angles, either through a gui, or with
    default values. 
  </description>
  <author>David Lu!!</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/joint_state_publisher</url>
  <depend package="rospy"/>
  <depend package="sensor_msgs"/>
  <rosdep name="wxpython"/>
</package><package name="pi_face_tracker" path="/trunk/pi_vision/pi_face_tracker" repo="pi-robot-ros-pkg" repo_host="http://pi-robot-ros-pkg.googlecode.com/svn">
  <description brief="pi_face_tracker">

  A ROS node for face tracking or tracking an arbitrarily
  selected patch in a video stream.

  </description>
  <author>Patrick Goebel</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pi_face_tracker</url>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="ros2opencv"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="image_transport"/>
  <depend package="openni_camera"/>
  <depend package="uvc_cam"/>

</package><package name="brics_actuator" path="" repo="cob_common" repo_host="git://github.com/ipa320/cob_common">
  <description brief="brics_actuator">

     brics_actuator

  </description>
  <author>Alexander Bubeck</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/brics_actuator</url>
  <depend package="roslib"/>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>


</package><package name="cffi_ros_utils" path="" repo="cram_physics" repo_host="https://github.com/moesenle/cram_physics">
  <description brief="cffi_ros_utils">

     cffi_ros_utils

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cffi_ros_utils</url>
  <depend package="cffi"/>
  <depend package="split_sequence"/>
  <depend package="roslisp_runtime"/>

</package><package name="voro" path="/trunk/coverage_3d/voro" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="ROS wrapper for voro++, a voronoi library.">

     	This package is a ROS wrapper for voro++, a voronoi cell software library. 
     	The library was created and maintained by Chris Rycroft.
	This package downloads and builds the library and exports as to ROS.	

  </description>
  <author>Juergen Hess</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/voro</url>


  <export>
    <cpp cflags="-I${prefix}/include/" lflags="-L${prefix}/src/ -Wl,-rpath,${prefix}/src/ -lvoro++"/>
  </export>

</package><package name="neo_2dnav_tools" path="" repo="neo_navigation" repo_host="https://github.com/neobotix/neo_navigation">
  <description brief="neo_2dnav_tools">

     neo_2dnav_tools

  </description>
  <author>Timo Hackel</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/neo_2dnav_tools</url>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="tf"/>
</package><package name="ubc_vrs_data_collection" path="/trunk/ubc_vrs/ubc_vrs_data_collection" repo="ubc-ros-pkg" repo_host="https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg">
  <description brief="ubc_vrs_data_collection">

     ubc_vrs_data_collection - Helper scripts to add new data to the database.

  </description>
  <author>David Meger</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ubc_vrs_data_collection</url>
  
  <!--depend package="pr2_laser_snapshotter"/-->
  <depend package="sensor_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="register_image"/>
  <depend package="photo_cam"/>
  <depend package="sensor_msgs"/>
  <depend package="cv_bridge"/>
  <depend package="message_filters"/>
  <depend package="ubc_vrs_utilities"/>
  <depend package="megerLabelSceneCvpr2011"/>
  
</package><package name="pi_description" path="/trunk/pi_description" repo="pi-robot-ros-pkg" repo_host="http://pi-robot-ros-pkg.googlecode.com/svn">
  <description brief="pi_description">

     URDF/Xacro files for Pi Robot

  </description>
  <author>Patrick Goebel</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pi_description</url>
  <depend package="urdf"/>
  <depend package="xacro"/>

</package><package name="engagement_test" path="/trunk/engagement/engagement_test" repo="ros-engagement" repo_host="http://ros-engagement.svn.sourceforge.net/svnroot/ros-engagement">
  <description brief="engagement_test">
     engagement_test is a series of nodes to test the engagement stack.
  </description>
    <author>Aaron Holroyd (aholroyd (at) wpi (dot) edu),
            Brett Ponsler (bponsler (at) wpi (dot) edu)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
    <url>http://sourceforge.net/projects/ros-engagement/</url>
  <depend package="engagement_msgs"/>
  <depend package="engagement_srvs"/>
  <export>
    <cpp cflags="-I${prefix}/srv/cpp -I${prefix}/msg/cpp" lflags="-L${prefix}/lib -lros"/>
  	<rosdoc config="../rosdoc.yaml"/>
  </export>
</package><package name="occupancy_grid_costmap" path="" repo="cram_highlevel" repo_host="https://github.com/moesenle/cram_highlevel">
  <description brief="occupancy_grid_costmap">

     occupancy_grid_costmap

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/occupancy_grid_costmap</url>
  <depend package="cram_designators"/>
  <depend package="location_costmap"/>
  <depend package="nav_msgs"/>
  <depend package="cram_roslisp_common"/>
  <depend package="roslisp_runtime"/>

</package><package name="kobuki_description" path="" repo="kobuki" repo_host="https://github.com/yujinrobot/kobuki">
  <description brief="Description of the Kobuki model">
    <p>
      Provides the model description of Kobuki for simulation and visualisation. The files in this 
      package are parsed and used by a variety of other components. Most users will not interact directly
      with this package.
    </p>
  </description>
  <author>Daniel Stonier, Marcus Liebhardt, 주영훈</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/kobuki_description</url>
  <depend package="urdf"/>
  <depend package="xacro"/>
</package><package name="executive_srvc" path="/trunk/highlevel/executive_srvc" repo="ubc-ros-pkg" repo_host="https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg">
  <description brief="executive_srvc">
      This node contains the executive used during the SRVC contest, responsible for the high level behaviour of the robot.
  </description>
  <author>Marius Muja</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/executive_srvc</url>

  <depend package="rospy"/>
  <depend package="geometry_msgs"/>
  <depend package="navigation_srvs"/>
  <depend package="move_base_msgs"/>
  <depend package="photo_cam"/>
  <depend package="table_object_detector"/>
  <depend package="ptu_controller"/>
  <depend package="launch_manager"/>
  <depend package="actionlib"/>
  <depend package="navigation_goals"/>
  <depend package="artag_register"/>
  <depend package="UBC_VRS_utils"/>

</package><package name="music_maker" path="/branches/stable/music/music_maker" repo="wu-ros-pkg" repo_host="https://wu-robotics.googlecode.com/svn">
  <description brief="Music Maker">
    Publishes custom song messages
  </description>
  <author>David V. Lu!!</author>
  <license>BSD</license>
  <url>http://ros.org/wiki/music_maker</url>
  <depend package="music_msgs"/>
  <depend package="rospy"/>

</package><package name="ecl_formatters" path="/trunk/ecl_core/ecl_formatters" repo="ecl_core" repo_host="https://embedded-control-library.googlecode.com/svn">
  <description brief="Formatting contexts to input-output streams.">

   The formatters here simply format various input types to a specified
   text format. They can be used with most streaming types (including both
   ecl and stl streams).

  </description>
  <author>Daniel Stonier (d.stonier@gmail.com)</author>
  <license>BSD</license>
  <review notes="" status="api cleared"/>
  <url>http://snorriheim.dnsdojo.com/redmine/wiki/ecl</url>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lecl_formatters"/>
  </export>
  <depend package="ecl_license"/>
  <depend package="ecl_build"/>
  <depend package="ecl_config"/>
  <depend package="ecl_exceptions"/>
  <depend package="ecl_converters"/>
  <rosbuild2>
    <export>
      <include_dir>${ecl_formatters_SOURCE_DIR}/include</include_dir>
      <lib>ecl_formatters</lib>
    </export>
    <depend package="ecl_license"/>
    <depend package="ecl_build"/>
    <depend package="ecl_config"/>
    <depend package="ecl_exceptions"/>
    <depend package="ecl_converters"/>
  </rosbuild2>
</package><package name="mesh_registration" path="/trunk/stacks/bosch_registration/mesh_registration" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <author>Benjamin Pitzer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <depend package="roscpp"/>
  <depend package="opencv2"/>
  <depend package="rtc"/>
  <depend package="openmesh"/>
  <depend package="rosbag"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="tf"/>
  <depend package="pcl"/>
  <depend package="bullet"/>
  <depend package="cv_bridge"/>
  <depend package="features_2d"/>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -lmesh_registration"/>
  </export>
  <rosdep name="libann"/>
</package><package name="generic_dashboard" path="/branches/stable/wu_ros_tools/generic_dashboard" repo="wu-ros-pkg" repo_host="https://wu-robotics.googlecode.com/svn">
  <description brief="Generic Dashboard Library">
    A library for creating PR2 or Turtlebot-like Dashboards for other types of robots.
  </description>
  <author>David V. Lu!!</author>
  <license>BSD</license>
  <url>http://ros.org/wiki/generic_dashboard</url>
  <depend package="rxtools"/>
  <depend package="robot_monitor"/>
  <depend package="std_msgs"/>
  <depend package="std_srvs"/>
  <depend package="rospy"/>
  <depend package="roslib"/>

</package><package name="rtcus_kinect_skeleton_tracker" path="/branches/rtcus_kinect_skeleton_tracker" repo="rtc-us-ros-pkg-branches" repo_host="https://rtc-us-ros-pkg.svn.sourceforge.net/svnroot/rtc-us-ros-pkg">
	<description brief="rtcus_kinect_skeleton_tracker">

		rtcus_kinect_skeleton_tracker

  </description>
	<author>Pablo Iñigo Blasco</author>
	<license>BSD</license>
	<review notes="" status="unreviewed"/>
	<url>http://ros.org/wiki/rtcus_kinect_skeleton_tracker</url>

	<depend package="roscpp"/>
	<depend package="rospy"/>
	<depend package="std_msgs"/>
	<depend package="geometry_msgs"/>
	<depend package="nav_msgs"/>
	<depend package="tf"/>
	<depend package="urdf"/>
	<depend package="rviz"/>
	<depend package="kdl"/>
	<depend package="nite"/>

</package><package name="zenither" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="Code to control an Animatics Smart Servo. We use the Animatics servos to control Festo linear actuators.">
  </description>
  <author>Cressel Anderson, Advait Jain, Hai Nguyen, Advisor: Prof. Charlie Kemp, Lab: Healthcare Robotics Lab at Georgia Tech</author>
  <license>New BSD</license>
  <depend package="rospy"/>
  <depend package="hrl_lib"/>
  <depend package="hrl_msgs"/>
  <depend package="hrl_srvs"/>
  <depend package="std_srvs"/>
  <depend package="tf"/>

  <sysdepend os="ubuntu" package="python-numpy" version="8.04-hardy"/>

</package><package name="pr2_gripper_grasp_controller" path="/stacks/pr2_object_manipulation/branches/0.6-branch/manipulation/pr2_gripper_grasp_controller" repo="pr2_object_manipulation" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_gripper_grasp_controller">

    Implementation of the hand posture grasp controller for the PR2
    gripper.

  </description>
  <author>Matei Ciocarlie</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_gripper_grasp_controller</url>

  <depend package="actionlib"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="object_manipulation_msgs"/>
  <depend package="sensor_msgs"/>

</package><package name="seabee3_mission_control" path="/trunk/cturtle/seabee3_mission_control" repo="seabee3-ros-pkg" repo_host="http://seabee3-ros-pkg.googlecode.com/svn">
  <description brief="seabee3_mission_control">

     seabee3_mission_control

  </description>
  <author>Michael Montalbo</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/seabee3_mission_control</url>
  <depend package="roscpp"/>
  <depend package="seabee3_driver"/>
  <depend package="seabee3_driver_base"/>
  <depend package="geometry_msgs"/>
  <depend package="landmark_finder"/>
  <depend package="landmark_map_server"/>
  <depend package="localization_defs"/>
  <depend package="waypoint_controller"/>

</package><package name="nav_msgs" path="/stacks/common_msgs/trunk/nav_msgs" repo="common_msgs" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Messages for the navigation stack">

    nav_msgs defines the common messages used to interact with the
<a href="http://ros.org/wiki/navigation">navigation</a> stack.

  </description>
  <author>Tully Foote</author>
  <license>BSD</license>
  <review notes="http://www.ros.org/wiki/nav_msgs/Reviews/2009-09-30_Doc_Review" status="doc reviewed"/>
  <url>http://ros.org/wiki/nav_msgs</url>

  <depend package="geometry_msgs"/>

  <export>
    <cpp cflags="`PKG_CONFIG_PATH=${prefix}/../../lib/pkgconfig pkg-config --cflags nav_msgs`" lflags="`PKG_CONFIG_PATH=${prefix}/../../lib/pkgconfig pkg-config --libs nav_msgs`"/>
  </export>

</package><package name="capture" path="/trunk/resources/capture" repo="ubc-ros-pkg" repo_host="https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg">
    <description brief="capture">
        Capture is a tool for periodic image capturing with digital Canon cameras. It is licensed under GPL  and it was developed for Linux. Although there were some attempts to port the underlying libptp to MacOS, i do not know if this effort was successful. 
    </description>

    <author/>
    <license/>
    <review notes="" status="3rdparty"/>
    <url/>

    <depend package="libptp2"/>

    <rosdep name="libreadline"/>
    <rosdep name="gtk2"/>

</package><package name="sbpl_doors" path="/sbpl_door_planning/trunk/sbpl_doors" repo="sbpl_door_planning" repo_host="https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs">
  <description brief="sbpl_doors"> sbpl_doors </description>
  <author>Steven Gray</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>Coming soon...</url>

  <depend package="roscpp"/>
  <depend package="sbpl"/>
  <depend package="sbpl_door_planner"/>
  <depend package="costmap_2d"/>
  <depend package="door_msgs"/>
  <depend package="pr2_doors_actions"/>
  <depend package="pr2_doors_common"/>  
  <depend package="pose_base_controller"/>
  <depend package="move_base_msgs"/>
  <depend package="pr2_common_action_msgs"/>
  <depend package="kdl"/>
  <depend package="eigen"/>
  <depend package="actionlib"/> 
  <depend package="move_arm_msgs"/> 
  <depend package="pr2_controller_manager"/>

  
  
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lsbpl_doors"/>
  </export>

</package><package name="corobot_srvs" path="/trunk/Diamondback/Corobot/corobot_srvs" repo="roscorobot" repo_host="http://svn.code.sf.net/p/roscorobot/code">
  <description brief="corobot_srvs">

     Package reuniting the Corobot's specific services.

  </description>
  <author>Morgan Cormier/mcormier@coroware.com</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/corobot_srvs</url>
  <depend package="roscpp"/>

</package><package name="semantic_label_3d" path="" repo="scene_labelling_rgbd" repo_host="https://github.com/aa755/scene_labelling_rgbd">
  <description brief="semantic_label_3d">

     This labels a kinect pointcloud with semantic labels like wall, chair, table, computer, monitor, printer etc.
     It also contains tools to segment , label and transform pointclouds. See url for more details

  </description>
  <author> Abhishek Anand, Hema Koppula, Dave Kotfis </author>
  <review notes="" status="unreviewed"/>
  <url>http://pr.cs.cornell.edu/sceneunderstanding/</url>
  <depend package="pcl_ros"/>
  <depend package="pcl"/>
  <depend package="eigen"/>
  <depend package="pcl_visualization"/>
  <depend package="rospy"/>
  <depend package="roscpp"/>
 <depend package="octomap_ros"/>
  <depend package="opencv2"/>

  <export>
    <cpp cflags="-I${prefix}/src/includes"/>
  </export>
 <!-- 
temporarily removed:

 <depend package="stereo_msgs"/>

 <depend package="point_cloud_mapping"/>

 <depend package="cloud_geometry"/>
 <depend package="cloud_io"/>
 <depend package="cloud_kdtree"/>
 <depend package="sample_consensus"/>
 <depend package="descriptors_3d"/>
-  <depend package="tf"/>
 <depend package="octomap_ros"/>
-  <depend package="tf2"/>
-  <depend package="pcl"/>
-  <depend package="eigen"/>
-  <depend package="pcl_ros"/>
-  <depend package="cv_bridge"/>
-  <depend package="sensor_msgs"/>
-  <depend package="geometry_msgs"/>
-  <depend package="image_geometry"/>
-  <depend package="pcl_ros"/>
  <depend package="flann"/>
  <depend package="cminpack"/>

 -->
</package><package name="ecl_command_line" path="/trunk/ecl_core/ecl_command_line" repo="ecl_core" repo_host="https://embedded-control-library.googlecode.com/svn">
  <description brief="Command line argument passing by TCLAP">
     Embeds the TCLAP library inside the ecl. This is a very convenient
     command line parser in templatised c++.
  </description>
  <author>Daniel Stonier (d.stonier@gmail.com)</author>
  <license>BSD</license>
  <review notes="" status="doc reviewed"/>
  <url>http://tclap.sourceforge.net/manual.html</url>
  <depend package="ecl_license"/>
  <depend package="ecl_build"/>
  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>
  <rosbuild2>
    <export>
      <include_dir>${ecl_command_line_SOURCE_DIR}/include</include_dir>
    </export>
    <depend package="ecl_license"/>
    <depend package="ecl_build"/>
  </rosbuild2>
</package><package name="camera_application" path="/stacks/pr2_web_apps/trunk/camera_application" repo="pr2_web_apps" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="Camera Application">
A web application to view camera images.
  </description>
  <author>Tim Field</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://pr.willowgarage.com/wiki/camera_application</url>
  <depend package="roslib"/>
  <depend package="rospy"/>
  <depend package="webui"/>
  <depend package="rosweb"/>
  <depend package="std_msgs"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="interactivespaces-system" path="" repo="interactive-spaces" repo_host="https://code.google.com/p/interactive-spaces">
  <description brief="interactivespaces.system">
Interactive Spaces system components.
  </description>
  <author>
  Keith Hughes/khughes@google.com</author>
  <license>Apache License 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://code.google.com/p/interactive-spaces/</url>
  
  <depend package="rosjava"/>
  <depend package="actionlib_java"/>
  <depend package="interactivespaces_msgs"/>
  <depend package="interactivespaces"/>
  
  <depend package="osgi"/>
  <depend package="osgi_master"/>
  
  <depend package="rosjava_zeroconf_common"/>
  <depend package="rosjava_zeroconf_master"/>
  <depend package="rosjava_zeroconf_node"/>

  <rosdep name="java"/>
</package><package name="wpdps1" path="" repo="wpdros" repo_host="https://github.com/wpd/wpdros">
  <description brief="wpdps1">

     wpdps1

  </description>
  <author>Patrick Doyle</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/wpdps1</url>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="move_base_msgs"/>
  <depend package="actionlib"/>
  <depend package="pr2_tuck_arms_action"/>
  <depend package="pr2_common_action_msgs"/>
</package><package name="triangulate_point_cloud" path="" repo="cram_physics" repo_host="https://github.com/moesenle/cram_physics">
  <description brief="triangulate_point_cloud">

     triangulate_point_cloud

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/triangulate_point_cloud</url>
  <depend package="roscpp"/>
  <depend package="pcl"/>
  <depend package="arm_navigation_msgs"/>
  <depend package="sensor_msgs"/>

</package><package name="wubble2_arm_navigation" path="/trunk/arrg/ua_experimental/wubble2_arm_navigation" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
  <description brief="wubble2_arm_navigation">

     wubble2_arm_navigation

  </description>
  <author>Antons Rebguns</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/wubble2_arm_navigation</url>
  <depend package="planning_environment"/>
  <depend package="arm_kinematics_constraint_aware"/>
  <depend package="ompl_ros_interface"/>
  <depend package="trajectory_filter_server"/>
  <depend package="constraint_aware_spline_smoother"/>
  <depend package="move_arm"/>

</package><package name="user_tracker" path="" repo="haikalpribadi-ros-pkg" repo_host="https://github.com/haikalpribadi/haikalpribadi-ros-pkg">
  <description brief="User Tracker using Kinect">

     User tracking using the skeletal tracker from openni_tracker ROS package. It returns the coordinates of specific [requested] joints of the user relative within the sight of the camera. It also contains a node to manipulate the tilt angle of the Kinect camera manually and automatically.

  </description>
  <author>Haikal Pribadi (haikal.pribadi@gmail.com)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/user_tracker</url>
  <depend package="std_msgs"/>
  <depend package="roscpp"/>
  <depend package="openni_tracker"/>
  <depend package="kinect_aux"/>

</package><package name="robotiq" path="/branches/fuerte/industrial/robotiq" repo="industrial" repo_host="https://swri-ros-pkg.googlecode.com/svn">
  <description brief="robotiq">

     robotiq

  </description>
  <author>Shaun Edwards</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/robotiq</url>

</package><package name="robotis" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="robotis">
    This package is designed to operate, query, and control Robotis
    Dynamixel 'smart' Servos using a USB2Dynamixel adaptor.  It has
    been tested on the RX-28 and RX-64 servo variants.
  </description>
  <author>Travis Deyle, Advait Jain, Marc Killpack, Advisor: Prof. Charlie Kemp, Lab: Healthcare Robotics Lab at Georgia Tech</author>
  <license>New BSD</license>

  <sysdepend os="ubuntu" package="python-serial" version="8.04-hardy"/>
  <depend package="std_srvs"/>
  <depend package="tf"/>
  <export>
    <cpp cflags="-I${prefix}/msg/cpp"/>
  </export>


</package><package name="stanford_parser_msgs" path="" repo="roboframenet" repo_host="https://kforge.ros.org/appmanandroid/roboframenet">
  <description brief="stanford_parser_msgs">

    stanford_parser_msgs contains common messages used within stanford_parser and stanford_parser_ros, along with the message interfaces that these packages use.  Further, stanford_parser_msgs contains Python libraries for unflattening the parse trees contained in the Parse message.

  </description>
  <author>Brian Thomas</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/stanford_parser_msgs</url>

</package><package name="srs_symbolic_grounding" path="" repo="srs_public" repo_host="git://github.com/ipa320/srs_public">
	<description brief="srs_symbolic_grounding">

	This package provide symbol grounding services for the DM.

	</description>
	<author>Beisheng Liu</author>
	<license>BSD</license>
	<review notes="" status="unreviewed"/>
	<url>http://ros.org/wiki/srs_symbolic_grounding</url>
	<depend package="std_msgs"/>
	<depend package="rospy"/>
	<depend package="tf"/>
	<depend package="geometry_msgs"/>
	<depend package="nav_msgs"/>
	<depend package="map_server"/>
	<depend package="srs_msgs"/>
	
	
	

</package><package name="WAMinterface" path="/trunk/WAM/WAMinterface" repo="ubc-ros-pkg" repo_host="https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg">
<description>ROS wrapper for Barrett low-level controllers (which are contained in BarrettWAM) and inverse kinematics library. The current version of this package includes interfacing of quintic trajectory control functions with BarrettWAM (takes care of PrepQuintic and PrepQuintic2 functions in BarrettWAM). </description>
<author>Kaijen Hsiao/kaijenhsiao@gmail.com, AJung Moon(Quintic Trj Interfacing)/ajmoon@interchange.ubc.ca</author>
<license>BSD</license>
<url>http://caris.mech.ubc.ca/</url>
<depend package="roscpp"/>
<depend package="rospy"/>
<depend package="std_srvs"/>
<depend package="std_msgs"/>
<depend package="BarrettWAM"/>
<export>
	<cpp cflags="-I${prefix}/WAMinterfacelib -I${prefix}/wamik" lflags="-L${prefix}/WAMinterfacelib/lib -L${prefix}/WAMinversekinematics/ -lwamif -lwamik"/>
	<python path="${prefix}/WAMinterfacelib/socketwamif"/>
	<python path="${prefix}/ROS"/>
	<python path="${prefix}/src"/>
	<python path="${prefix}/WAMinversekinematics/SOlib"/>
</export>
</package><package name="head_monitor_msgs" path="" repo="arm_navigation_experimental" repo_host="https://kforge.ros.org/armnavigation/experimental">
  <description brief="head_monitor_msgs">

     head_monitor_msgs

  </description>
  <author>Gil Jones</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/head_monitor_msgs</url>
  <depend package="actionlib_msgs"/>
  <depend package="arm_navigation_msgs"/>

</package><package name="touchosc_layout_manager" path="" repo="rososc_utilities" repo_host="https://github.com/Auburn-Automow/rososc_utilities">
  <description brief="touchosc_layout_manager">

     touchosc_layout_manager

  </description>
  <author>William Woodall</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/touchosc_layout_manager</url>
  <depend package="rospy"/>
  <depend package="roslib"/>
  <depend package="pytouchosc"/>
  <depend package="rosgui"/>
  
  <rosdep name="python-pyside"/>

</package><package name="cmd_vel_safety_filter" path="" repo="parsec" repo_host="https://code.google.com/p/parsec">
  <description brief="cmd_vel_safety_filter">

     cmd_vel_safety_filter

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>Apache 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cmd_vel_safety_filter</url>
  <depend package="roscpp"/>
  <depend package="laser_geometry"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="ros_check"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
</package><package name="sick_ldmrs" path="" repo="csiro-asl-ros-pkg" repo_host="lp:csiro-asl-ros-pkg">
  <description brief="Driver for Sick LD-MRS">

     Driver node for Sick LD-MRS

  </description>
  <author>Brett Grandbois, Fred Pauling</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://www.ros.org/wiki/sick_ldmrs</url>
  <depend package="std_msgs"/>
  <depend package="rospy"/>
  <depend package="roslib"/>
  <depend package="rostest"/>
  <depend package="sensor_msgs"/>
  <depend package="std_msgs"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="driver_base"/>
  <rosdep name="python-numpy"/>
  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>

</package><package name="rosbridge_library" path="" repo="rosbridge_suite" repo_host="http://kforge.ros.org/rosbridge/git">
  <description brief="rosbridge_library">

     rosbridge_library

  </description>
  <author>Jonathan Mace</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosbridge_library</url>
  <depend package="rospy"/>
  <depend package="rostopic"/>
  <depend package="rosservice"/>

  <rosdep name="python-imaging"/>
</package><package name="openraveros" path="/trunk/openrave_planning/openraveros" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="OpenRAVE Services through ROS">
    Main openrave server that provides a session interface.
  </description>
  <author>Rosen Diankov (rosen.diankov@gmail.com)</author>
  <license>Apache License, Version 2.0</license>
  <export>
    <openrave pluginpath="${prefix}/lib"/>
  </export>
  <depend package="roscpp"/>
<!--  <depend package="roscpp_sessions"/> -->
  <depend package="openrave"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <url>http://www.ros.org/wiki/openraveros</url>
</package><package name="continuous_ops_executive" path="" repo="continuous_ops" repo_host="https://kforge.ros.org/contops/hg">
  <description brief="continuous_ops_executive">

     continuous_ops_executive

  </description>
  <author>Wim Meeussen</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/continuous_ops_executive</url>
  <depend package="rospy"/>
  <depend package="roslib"/>
  <depend package="smach"/>
  <depend package="smach_ros"/>
  <depend package="std_msgs"/>
  <depend package="pr2_plugs_msgs"/>
  <depend package="continuous_ops_msgs"/>
  <depend package="pr2_msgs"/>
  <depend package="actionlib_msgs"/>

</package><package name="plumesim" path="/stacks/simulator_plumesim/trunk/plumesim" repo="simulator_plumesim" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="plumesim">

     PlumeSim is an odor plume simulator for ROS. It is able to generate plumes for simulations or to real robots. Current plume sources include gaussian and meadering models, plumesim log files and CFD Fluent log files.

  </description>
  <author>Gonçalo Cabrita and Pedro Sousa</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/plumesim</url>
  <depend package="roscpp"/>
  <depend package="visualization_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="lse_sensor_msgs"/>

</package><package name="tf_conversions" path="" repo="geometry" repo_host="https://kforge.ros.org/geometry/geometry">
  <description brief="Transform Library Conversions">

   This package contains a set of conversion functions to convert
common tf datatypes (point, vector, pose, etc) into semantically
identical datatypes used by other libraries. The conversion functions
make it easier for users of the transform library (tf) to work with
the datatype of their choice. Currently this package has support for
the Kinematics and Dynamics Library (KDL) and the Eigen matrix
library. This package is stable, and will get integrated into tf in
the next major release cycle (see roadmap).

  </description>
  <author>Tully Foote</author>
  <license>BSD</license>
  <review notes="" status="Doc reviewed"/>
  <url>http://www.ros.org/wiki/tf_conversions</url>

  <depend package="tf"/>
  <depend package="kdl"/>
  <depend package="eigen"/>
  <depend package="geometry_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -ltf_conversions"/>
    <rosdoc config="rosdoc.yaml"/>
  </export>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="dynamic_reconfigure" path="" repo="dynamic_reconfigure" repo_host="https://kforge.ros.org/common/dynamicreconfig">
  <description brief="Dynamically reconfigure parameters">
    This package provides a class to facilitate dynamic node
    reconfiguration. This package is still under development, and should be
    considered unstable except for features that are explicitely marked as
    stable in the documentation.
  </description>
  <author>Blaise Gassend, Tim Field, Ze'ev Klapow</author>
  <license>BSD</license>
  <review note="Jan 18 2010, rosparam and Python     client API only." status="Doc Reviewed"/>
  <url>http://www.ros.org/wiki/dynamic_reconfigure</url>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="rosservice"/>
  <rosdep name="wxpython"/>
  <export>
      <rosdoc config="rosdoc.yaml"/>
      <rosbuild cmake_directory="${prefix}/cmake"/>
      <cpp cflags="`rosboost-cfg --cflags` -I${prefix}/include -I${prefix}/msg/cpp -I${prefix}/srv/cpp" lflags="`rosboost-cfg --lflags thread` -Wl,-rpath,${prefix}/lib -L${prefix}/lib -ldynamic_reconfigure_config_init_mutex"/>
  </export>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
  <rosbuild2>
    <depend package="rospy"/>
    <depend package="roscpp"/>
    <depend package="rosservice"/>
    <depend package="std_msgs"/>
    <export>
      <include_dir>${dynamic_reconfigure_PACKAGE_DIR}/include</include_dir>
      <lib>dynamic_reconfigure_config_init_mutex</lib>
    </export>
    <cfgs> cfg/Test.cfg </cfgs>
    <msgs>
      msg/BoolParameter.msg      
      msg/Config.msg	    
      msg/IntParameter.msg	  
      msg/SensorLevels.msg
      msg/ConfigDescription.msg  
      msg/DoubleParameter.msg  
      msg/ParamDescription.msg  
      msg/StrParameter.msg
    </msgs>
    <srvs>
      srv/Reconfigure.srv
    </srvs>
  </rosbuild2>
</package><package name="rovio_teleop" path="" repo="iheart-ros-pkg" repo_host="git://github.com/IHeartRobotics/iheart-ros-pkg">
  <description brief="rovio_teleop">

     The rovio_teleop package maps joystick commands to velocity commands. Joystick buttons are used to control the position of the head.

  </description>
  <author>I Heart Robotics</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rovio_teleop</url>
  <depend package="std_msgs"/>
  <depend package="roscpp"/>
  <depend package="joy"/>
  <depend package="geometry_msgs"/>
  <depend package="rovio_common"/>
</package><package name="cyphy_vslam_msgs" path="" repo="cyphy_vis_slam" repo_host="https://cyphy-vis-slam.googlecode.com/hg/cyphy_vis_slam">
  <description brief="cyphy_vslam_msgs">

     cyphy_vslam_msgs provides messages to support communication between nodes
     in the visual slam package.  These messages are designed to provide common      datatypes between switchable nodes in a visual slam application.

  </description>
  <author>Liz Murphy (liz.murphy@qut.edu.au&gt;</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cyphy_vslam_msgs</url>

</package><package name="ueye" path="" repo="ueye" repo_host="https://bitbucket.org/kmhallen/ueye">
  <description brief="ueye">
    Driver for IDS Imaging uEye cameras.
  </description>
  <author>Kevin Hallenbeck</author>
  <license>BSD</license>
  <url>http://ros.org/wiki/ueye</url>
  <depend package="roscpp"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="std_msgs"/>
  <depend package="image_transport"/>
  <depend package="camera_calibration_parsers"/>
  <depend package="cv_bridge"/>
  <depend package="opencv2"/>
</package><package name="camera_interpolation" path="/trunk/cturtle/camera_interpolation" repo="seabee3-ros-pkg" repo_host="http://seabee3-ros-pkg.googlecode.com/svn">
  <description brief="camera_interpolation">

     camera_interpolation

  </description>
  <author>Noah</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/camera_interpolation</url>
  <depend package="roscpp"/>
  <depend package="opencv2"/>
  <depend package="sensor_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lcamera_interpolation"/>
  </export>

</package><package name="calibration" path="/trunk/calibration" repo="ubc-ros-pkg" repo_host="https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg">
  <description brief="calibration">

     calibration

  </description>
  <author/>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/calibration</url>

</package><package name="tour_guide_executive" path="" repo="cwru-ros-pkg" repo_host="http://github.com/cwru-robotics/cwru-ros-pkg">
  <description brief="tour_guide_executive">

     tour_guide_executive

  </description>
  <author>Jesse</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/tour_guide_executive</url>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="rospy"/>
  <depend package="tf"/>
  <depend package="cwru_nav"/>

</package><package name="rosjava_benchmarks" path="" repo="rosjava_core" repo_host="https://code.google.com/p/rosjava/">
  <description brief="rosjava_benchmarks">
     rosjava_benchmarks contains benchmarks.
  </description>
  <author>Damon Kohler</author>
  <license>Apache 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosjava_benchmarks</url>

  <depend package="rospy"/>
  <depend package="std_msgs"/>
  <depend package="tf"/>

</package><package name="irb_5400_arm_navigation" path="/trunk/abb/irb_5400_arm_navigation" repo="swri-ros-pkg" repo_host="http://swri-ros-pkg.googlecode.com/svn">
  <description brief="irb_5400_arm_navigation">

     irb_5400_arm_navigation

  </description>
  <author>Shaun M. Edwards</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/irb_5400_arm_navigation</url>
  <depend package="planning_environment"/>
  <depend package="kinematics_base"/>
  <depend package="arm_kinematics_constraint_aware"/>
  <depend package="ompl_ros_interface"/>
  <depend package="trajectory_filter_server"/>
  <depend package="constraint_aware_spline_smoother"/>
  <depend package="move_arm"/>

</package><package name="interactivespaces-launcher-bootstrap" path="" repo="interactive-spaces" repo_host="https://code.google.com/p/interactive-spaces">
  <description brief="interactivespaces.launcher.bootstrap">
The bootsrapper for Interactive Spaces masters and controllers.
  </description>
  <author>Keith Hughes/khughes@google.com</author>
  <license>Apache License 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://code.google.com/p/interactive-spaces/</url>

  <rosdep name="java"/>
</package><package name="srs_knowledge" path="" repo="srs_public" repo_host="git://github.com/ipa320/srs_public">
  <description brief="srs_knowledge">

     srs_knowledge is a ros package handling the task planning at the symbolic level in the srs project. 

  </description>
  <author>Ze Ji</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/srs_knowledge</url>
  <depend package="roslib"/>
  <depend package="rosjava_jni"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="geometry_msgs"/>
  <depend package="std_msgs"/>
  <depend package="srs_msgs"/>
  <!-- depend package="srs_jena"/-->
  <depend package="srs_pellet"/>
  <depend package="srs_symbolic_grounding"/>
  <depend package="tfjava"/>
  <!--depend package="srs_object_database"/-->
  <depend package="srs_object_database_msgs"/>
  <!-- depend package="apache_xmlrpc" /-->
  <!-- depend package="apache_commons_util" /-->

</package><package name="ecl_config" path="/trunk/ecl_lite/ecl_config" repo="ecl_lite" repo_host="https://embedded-control-library.googlecode.com/svn">
  <description brief="System configuration macros, types and sniffer functions.">

     These tools inspect and describe your system with macros, types 
     and functions.

  </description>
  <author>Daniel Stonier (d.stonier@gmail.com)</author>
  <license>BSD</license>
  <review notes="" status="doc reviewed"/>
  <url>http://snorriheim.dnsdojo.com/redmine/wiki/ecl</url>
  
  <export>
    <cpp cflags="-I${prefix}/include"/>
    <rosdoc config="rosdoc.yaml"/>
  </export>
  
  <depend package="ecl_license"/>
  <depend package="ecl_build"/>
  <rosbuild2>
    <export>
      <include_dir>${ecl_config_SOURCE_DIR}/include</include_dir>
    </export>
    <depend package="ecl_license"/>
    <depend package="ecl_build"/>
  </rosbuild2>
</package><package name="p2os_urdf" path="/trunk/p2os/p2os_urdf" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description>URDF file descriptions for P2OS/ARCOS robots</description>
  <author>David Feil-Seifer (dfseifer@usc.edu)</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <depend package="urdf"/>
  <depend package="xacro"/>
	<depend package="robot_state_publisher"/>
  <url/>
</package><package name="qt_build" path="" repo="qt_ros" repo_host="https://github.com/stonier/qt_ros">
  <catkin/>
  <description brief="Resources for building qt-ros applications">
     
	Currently just maintains a cmake api for simplifying the building
	of qt apps within the ros framework.
	
  </description>
  <author>Daniel Stonier</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/qt_build</url>

  <!-- 
  <depend package="roslang"/>
  <export>
    <roslang cmake="${prefix}/qt-ros.cmake"/>
  </export>
  -->

</package><package name="network_detector" path="/stacks/linux_networking/trunk/network_detector" repo="linux_networking" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="network_detector">

     A ROS node that watches a given network interface and publishes
     whether it is both UP and RUNNING (indicating that a cable is
     plugged into it and communication is happening, for instance) or
     not.

  </description>
  <author>Dave Hershberger</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/detect_running_network_interface</url>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
</package><package name="ecl_statistics" path="/trunk/ecl_core/ecl_statistics" repo="ecl_core" repo_host="https://embedded-control-library.googlecode.com/svn">
  <description brief="Statistical methods for control systems">

     Common statistical structures and algorithms for control systems.

  </description>
  <author>Daniel Stonier (d.stonier@gmail.com)</author>
  <license>BSD</license>
  <review notes="" status="doc reviewed"/>
  <url>http://snorriheim.dnsdojo.com/redmine/wiki/ecl</url>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lecl_statistics"/>
  </export>
  <depend package="ecl_license"/>
  <depend package="ecl_build"/>
  <depend package="ecl_config"/>
  <depend package="ecl_linear_algebra"/>

</package><package name="choreonoid" path="/trunk/rtmros_common/choreonoid" repo="rtm-ros-robotics/rtmros_common" repo_host="https://rtm-ros-robotics.googlecode.com/svn">
  <description brief="choreonoid">

     choreonoid

This program has been developed by Shin'ichiro Nakaoka and Choreonoid Development Team, AIST.

This program is free software; you can redistribute it and/or modify it under the terms of
the GNU Lesser General Public License as published by the Free Software Foundation; either 
version 2.1 of the License, or (at your option) any later version.

This package is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
See the GNU Lesser General Public License for more details.

The source and some binary packages of this program also include the following third-party 
libraries:

* Eigen (http://eigen.tuxfamily.org/)
* IJG JPEG Library (http://www.ijg.org/)
* libpng (http://www.libpng.org/pub/png/libpng.html)
* LibYAML (http://pyyaml.org/wiki/LibYAML)
* OPCODE (http://www.codercorner.com/Opcode.htm)
* zlib (http://zlib.net/)

These libraries are used and redistributed under the terms of their licenses. Please see
the corresponding directories in the source package or their official web sites to see the
details of their licenses.

This program also depends on a lot of other external libraries, which are linked into this
program during the execution. Some binary packages of this program may include the binaries
of the following libraries:

* Qt (http://qt.nokia.com/)
* OpenSceneGraph (http://www.openscenegraph.org)
* Boost C++ Libraries (http://www.boost.org/)

Please see their official web sites to see the details of their licenses.

  </description>
  <author>Shin'ichiro Nakaoka and Choreonoid Development Team, AIST.</author>
  <license>LGPL 2.1</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/choreonoid</url>

  <rosdep name="doxygen"/>
  <rosdep name="graphviz"/>
  <rosdep name="zlib"/>
  <rosdep name="libjpeg"/>
  <rosdep name="libpng12-dev"/>
  <rosdep name="libopenscenegraph"/>
  <rosdep name="libsimage-dev"/>
  <rosdep name="yaml"/>
  <rosdep name="libqt4-dev"/>
  <rosdep name="libqt4-opengl"/>
  <rosdep name="wx-common"/>
  <rosdep name="libqhull"/>
  <rosdep name="qhull-bin"/>

</package><package name="astromech_emo" path="/astromech_emo" repo="astromech-ros" repo_host="https://astromech-ros.svn.sourceforge.net/svnroot/astromech-ros">
  <description brief="astromech_emo">

     astromech_emo: Package to maintain the &quot;emotional state&quot; of an Astromech unit

  </description>
  <author/>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/astromech_emo</url>

  <depend package="astromech_msg"/>
  <depend package="sound_play"/>

</package><package name="kurt_gazebo" path="" repo="kurt_driver" repo_host="http://kos.informatik.uni-osnabrueck.de/kurt_driver.git">
  <description brief="launch files for starting up Kurt in Gazebo">

     This package contains launch files for starting up Kurt in the Gazebo simulator.

  </description>
  <author>Martin Günther</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/kurt_gazebo</url>

  <depend package="gazebo_worlds"/>
  <depend package="uos_gazebo_worlds"/>
  <depend package="kurt_description"/>

</package><package name="rostweet_msgs" path="/trunk/rostweet/rostweet_msgs" repo="uji-ros-pkg" repo_host="http://uji-ros-pkg.googlecode.com/svn">
  <description brief="rostweet_msgs">

     ROS messages for rostweet

  </description>
  <author>Mario Prats</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rostweet_msgs</url>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>

</package><package name="maximus_position" path="" repo="smart-robotics-ros-pkg" repo_host="https://github.com/JBot/smart-robotics-ros-pkg">
  <description brief="maximus_position">

     maximus_position

  </description>
  <author>Joffrey</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/maximus_position</url>
  <depend package="geometry_msgs"/>
  <depend package="std_msgs"/>
  <depend package="roscpp"/>
  <depend package="nav_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="tf"/>
  <depend package="joy"/>
  <depend package="move_base_msgs"/>
  <depend package="actionlib"/>

</package><package name="neo_description_mpo_500" path="" repo="neo_common" repo_host="https://github.com/neobotix/neo_common">
  <description brief="neo_description_mpo_500">

     neo_description_mpo_500

  </description>
  <author>Timo Hackel</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/neo_description_mpo_500</url>
  <depend package="convex_decomposition"/>
  <depend package="ivcon"/>
  <depend package="urdf"/>
  <depend package="xacro"/>
  <depend package="gazebo"/>
  <depend package="gazebo_tools"/>
  <depend package="fake_localization"/>
  <depend package="erratic_gazebo_plugins"/>
  <depend package="map_server"/>
  <depend package="gazebo_worlds"/>
  <depend package="robot_state_publisher"/>
  <depend package="laser_filters"/>
  <depend package="robot_self_filter"/>
  <depend package="pr2_gazebo_plugins"/>
  <depend package="point_cloud_converter"/>
  <depend package="erratic_gazebo_plugins"/>

</package><package name="wifi_sniffer" path="/trunk/low_cost_localization/wifi_sniffer" repo="stanford-ros-pkg" repo_host="https://stanford-ros-pkg.googlecode.com/svn">
  <description brief="wifi_sniffer">
    Sniffs for nearby wifi access points and publishes the ssid and signal
    strengths.
  </description>
  <author>Morgan Quigley</author>
  <license>GPL, as some of this package is derived from the Linux wireless tools</license>
  <rosdep name="wireless-tools"/>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="visualization_msgs"/>
  <depend package="std_msgs"/>
  <depend package="laser_geometry"/>
  <depend package="nav_msgs"/>
  <depend package="move_base_msgs"/>
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp" lflags="-L${prefix}/lib -lwifi_sniffer -Wl,-rpath,${prefix}/lib"/>
  </export>
</package><package name="webui" path="/stacks/web_interface/trunk/webui" repo="web_interface" repo_host="https://code.ros.org/svn/wg-ros-pkg">
<description brief="PR2 Web UI">
A web interface to install and launch applications for the PR2.
</description>
<author>Scott Hassan/hassan@willowgarage.com</author>
<license>BSD</license>
<review notes="" status="experimental"/>
<url>http://ros.org/wiki/webui</url>
  <depend package="roslib"/>
  <depend package="rospy"/>
  <depend package="rosservice"/>
  <depend package="launchman"/>
  <depend package="pyclearsilver"/>
  <depend package="std_msgs"/>
  <depend package="std_srvs"/>
  <depend package="diagnostic_msgs"/>
  <depend package="rosweb"/>
  <depend package="web_msgs"/>
<!--
  Removing these runtime dependencies, because users of the
  webui don't necessarily want to run this specific version of 
  the Apache server; they might even want to use a different
  webserver all together.

  <rosdep name="apache2-mpm-prefork"/>
  <rosdep name="libapache2-mod-python"/>
-->
  <rosdep name="python-clearsilver"/>

  <export>
    <rosweb plugin="webui.diagnostics"/>
  </export>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="base_libs" path="/trunk/cturtle/base_libs" repo="seabee3-ros-pkg" repo_host="http://seabee3-ros-pkg.googlecode.com/svn">
  <description brief="base_libs">

     base_libs

  </description>
  <author>Edward T. Kaszubski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/base_libs</url>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="std_srvs"/>
  <depend package="opencv2"/>
  <depend package="image_geometry"/>
  <depend package="cv_bridge"/>
  <depend package="image_transport"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="driver_base"/>
  <depend package="geometry_msgs"/>
  <depend package="tf"/>
  <depend package="joy"/>
  <depend package="common_utils"/>
  <depend package="nodelet"/>
  <depend package="pluginlib"/>
  
  <export>
    <nodelet plugin="${prefix}/nodelet_plugins.xml"/>
    <cpp cflags="-std=c++0x -I${prefix}/include -I${prefix}/msg/cpp -I${prefix}/srv/cpp" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lbase_libs"/>
  </export>

</package><package name="rcf_com_spherePTZ" path="/trunk/RCF4ROS/com/rcf_com_spherePTZ" repo="roblab-whge-ros-pkg" repo_host="http://roblab-whge-ros-pkg.googlecode.com/svn">
  <description brief="rcf_com_spherePTZ">

     This package controls the quickcam-driver.

  </description>
  <author>B. Fabricius</author>
  <license>CreativeCommons BY-NC-SA License</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rcf_com_spherePTZ</url>
  <depend package="roscpp"/>
  <depend package="rcf_control_protocol"/>
  <depend package="logitech_libwebcam"/>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lspherePTZ_com"/>
  </export>

</package><package name="task_monitor" path="" repo="usc-clmc-ros-pkg" repo_host="https://github.com/usc-clmc/usc-clmc-ros-pkg">
  <description brief="task_monitor">

     task_monitor

  </description>
  <author>Peter Pastor</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/task_monitor</url>

  <depend package="roscpp"/>
  <depend package="roslib"/>

  <depend package="task_recorder2_msgs"/>
  <depend package="task_recorder2_utilities"/>

  <depend package="usc_utilities"/>
  <depend package="sensor_msgs"/>
  <depend package="angles"/>

  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/srv_gen/cpp/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -ltask_monitor"/>
  </export>

</package><package name="stereocamera-v4l2-ros-pkg" path="" repo="stereocamera-v4l2-ros-pkg" repo_host="https://launchpad.net/stereocamera-v4l2-ros-pkg">
  <description brief="stereocamera-v4l2-ros-pkg">

     ROS driver for V4L2 based stereo camera

  </description>
  <author>Bob Mottram</author>
  <license>GPL</license>
  <version>1.00</version>
  <review notes="" status="unreviewed"/>
  <url>http://launchpad.net/stereocamera-v4l2-ros-pkg</url>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="image_transport"/>
  <depend package="compressed_image_transport"/>
  <depend package="driver_base"/>
  <depend package="camera_calibration_parsers"/>
  <depend package="camera_info_manager"/>
</package><package name="automow_navigation" path="" repo="au_automow_apps" repo_host="https://github.com/Auburn-Automow/au_automow_apps">
  <description brief="automow_navigation">

     automow_navigation

  </description>
  <author>Michael Carroll</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/automow_navigation</url>

  <depend package="move_base_msgs"/>
  <depend package="actionlib"/>
  <depend package="rospy"/>

</package><package name="face_finder" path="/trunk/portrait_bot/face_finder" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
	<description brief="This package supplies the portrait_bot stack with both a face extraction and portrait taking tool and a gui.">

	face_finder

	</description>
	<author>Nikolaus Mayer, Christian Schilling</author>
	<license>BSD</license>
	<review notes="" status="unreviewed"/>
	<url>http://ros.org/wiki/face_finder</url>

	<rosdep name="qt4"/>

	<depend package="roscpp"/>
	<depend package="std_msgs"/>
	<depend package="sensor_msgs"/>
	<depend package="geometry_msgs"/>
	<depend package="opencv2"/>
	<depend package="tf"/>
	<depend package="cv_bridge"/>

	<depend package="image_geometry"/>
	<depend package="people_msgs"/>
	<depend package="pcl"/>
	<depend package="laser_assembler"/>
	<depend package="image_transport"/>
	<depend package="compressed_image_transport"/>
	<depend package="pr2_msgs"/>
	<depend package="pcl_ros"/>
	<depend package="actionlib"/>
	<depend package="pr2_controllers_msgs"/>
	<depend package="face_detector"/>
	
	<depend package="portrait_robot_msgs"/>

</package><package name="mock_objects" path="" repo="pandora-auth-ros-pkg" repo_host="https://github.com/pandora-auth-ros-pkg/pandora-auth-ros-pkg">
  <description brief="mock_objects">
		
     Mock objects for representing subscribers, service servers and action libs, used for testing.

  </description>
  <author>Miltiadis Allamanis, Marina Stamatiadou, Pelagia Sykoudi</author>
  <license>MIT</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/mockObjects</url>
  <depend package="roscpp"/>
  <depend package="gmock"/>  
  <depend package="actionlib"/> 
  <depend package="actionlib_msgs"/>  
  
   <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -llibgmock -llibgtest"/>
  </export>

</package><package name="rosweb" path="/stacks/web_interface/trunk/rosweb" repo="web_interface" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="rosweb">

     rosweb is a temporary package to replace the original rosweb in the ROS
     repository.  It is placed in the sandbox while development is ongoing, so
     we are not gated on ROS stack releases.  When the server is more stable,
     it will be moved to the ROS repository and replace the old rosweb.

  </description>
  <author>Scott Hassan, Rob Wheeler, Nate Koenig</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/rosweb</url>
  <depend package="roslib"/>
  <depend package="rospy"/>
  <depend package="rosservice"/>
  <depend package="rosjson"/>
  <depend package="std_msgs"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="continuous_ops_web" path="" repo="continuous_ops" repo_host="https://kforge.ros.org/contops/hg">
  <description brief="continuous_ops_web">

     continuous_ops_web

  </description>
  <author>Eitan Marder-Eppstein</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/continuous_ops_web</url>
  <depend package="webui"/>
  <depend package="roslib"/>
  <depend package="rospy"/>
  <depend package="continuous_ops_msgs"/>
  <depend package="pr2_base_recovery"/>
</package><package name="hrl_pr2_gains" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="hrl_pr2_gains">

     hrl_pr2_gains

  </description>
  <author>Advait Jain </author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hrl_pr2_gains</url>
  <depend package="pr2_controller_configuration"/>
  <depend package="robot_mechanism_controllers"/>

  <depend package="rospy"/>

</package><package name="win_empy" path="" repo="win_ros" repo_host="https://github.com/stonier/win_ros">
  <description brief="python empy module for windows">

Build script for python expressions module.

  </description>
  <author>Daniel Stonier</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/rosinstall</url>
  <!-- Indirectly exporting this straight from svn, so don't need it as a ros dependency. -->
  <!-- <depend package="vcstools"/> -->

</package><package name="logger" path="/trunk/logging/logger" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="logger">

     logger

  </description>
  <author>David Feil-Seifer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/logger</url>
  <depend package="rosrecord"/>
  <depend package="roscpp"/>
  <depend package="log_msgs"/>

</package><package name="pr2_object_manipulation_msgs" path="/stacks/pr2_object_manipulation/branches/0.6-branch/manipulation/pr2_object_manipulation_msgs" repo="pr2_object_manipulation" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_im_msgs">

     pr2_im_msgs

  </description>
  <author>Matei Ciocarlie</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_im_msgs</url>


  <depend package="geometry_msgs"/>
  <depend package="object_manipulation_msgs"/>

</package><package name="joint_limit_avoidance" path="" repo="itasc_tasks" repo_host="http://git.mech.kuleuven.be/robotics/itasc_tasks.git">
	<description brief="joint_limit_avoidance">
		This package contains a task to stay away from joint limits
        Part of the iTaSC-Skill framework, itasc_tasks
	</description>
	<author>Dominick Vanthienen, Tinne De Laet, Gunther Struyf</author>
	<license>BSD, LGPL</license>
	<review notes="" status="unreviewed"/>
	<url>http://www.orocos.org/itasc</url>
	<depend package="itasc_core"/>
	<rosdep name="eigen"/>
	<depend package="rtt"/>
	<depend package="ocl"/>
	<depend package="orocos_kdl"/>
	<depend package="kdl_typekit"/>
	<depend package="kdl_parser"/>
</package><package name="interactivespaces-master" path="" repo="interactive-spaces" repo_host="https://code.google.com/p/interactive-spaces">
  <description brief="interactivespaces.master">
The master node for an Interactive Spaces system.
  </description>
  <author>Keith Hughes/khughes@google.com</author>
  <license>Apache License 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://code.google.com/p/interactive-spaces/</url>
  
  <depend package="rosjava"/>
  <depend package="interactivespaces_msgs"/>
  <depend package="osgi_master"/>
  <depend package="interactivespaces"/>
  <depend package="interactivespaces.database"/>
  <depend package="interactivespaces.service.scheduler"/>
  <depend package="interactivespaces.service.alert"/>

  <rosdep name="java"/>
</package><package name="cl_transforms" path="/stacks/roslisp_common/trunk/cl_transforms" repo="roslisp_common" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="cl_transforms">

     cl_transforms

  </description>
  <author>Bhaskara Marthi, Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cl_transforms</url>
  
  <!-- Temporary for cl dependencies -->
  <depend package="cl_utils"/> 

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="cob_calibration_executive" path="" repo="cob_calibration" repo_host="git://github.com/ipa320/cob_calibration">
  <description brief="cob_calibration_executive">

     The cob_calibration_executive package provides scripts to prepare Care-O-bot
     and to collect samples for the calibration steps.

  </description>
  <author>Sebastian Haug</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_calibration_executive</url>

  <depend package="rospy"/>
  <depend package="tf"/>
  
  <depend package="sensor_msgs"/> 
  <depend package="kinematics_msgs"/>
  <depend package="geometry_msgs"/>
 
  <depend package="cob_script_server"/>
  <depend package="cob_default_robot_config"/>
  
  <depend package="cob_calibration_srvs"/>

</package><package name="cotesys_ros_grasping" path="/simulation/cotesys_ros_grasping" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="cotesys_ros_grasping">

     cotesys_ros_grasping

  </description>
  <author>Gil Jones</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cotesys_ros_grasping</url>

  <depend package="move_arm"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="collision_environment_msgs"/>
  <depend package="pr2_msgs"/>
  <depend package="motion_planning_msgs"/>
  <depend package="table_objects"/>
  <depend package="mapping_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/msg/cpp"/>
  </export>


</package><package name="pfilter" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="pfilter">

    A general particle filter implementation written in Python.  Modeled off Probabilistic Robotics.

  </description>
  <author>Travis Deyle, Hai Nguyen, Advisor: Prof. Charlie Kemp, Lab: Healthcare Robotics Lab at Georgia Tech</author>
  <license>BSD</license>
  <url>http://ros.org/wiki/pfilter</url>
  <depend package="rospy"/>

</package><package name="adl_pr2_log" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="adls">

  </description>
  <author>Aaron King</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/adls</url>
  <depend package="tf"/>
  <depend package="hrl_lib"/>
  <depend package="rospy"/>
</package><package name="r2_gazebo" path="" repo="nasa_r2_simulator" repo_host="https://bitbucket.org/nasa_ros_pkg/nasa_r2_simulator">
  <description brief="r2_gazebo">

     r2_gazebo

  </description>
  <author>Stephen Hart</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/r2_gazebo</url>
  <depend package="std_msgs"/>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="urdf"/>
  <depend package="kdl_parser"/>
  <depend package="gazebo_msgs"/>
  <depend package="r2_msgs"/>
  <depend package="gazebo"/>
  <export>
    <gazebo gazebo_media_path="${prefix}"/>
  </export> 
</package><package name="libptp" path="/trunk/OCR4ROS/libptp" repo="roblab-whge-ros-pkg" repo_host="http://roblab-whge-ros-pkg.googlecode.com/svn">
  <description brief="libptp">

     Provides a package to communicate with cameras.

  </description>
  <author>Modified by B. Möller</author>
  <license>CreativeCommons BY-NC-SA License</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/libptp</url>
  <depend package="roscpp"/>
  <export>
    <cpp cflags="-I/usr/local/include" lflags="-Wl,-rpath,/usr/local/lib -L/usr/local/lib -lptp2 "/>
  </export>

</package><package name="joint_trajectory_action" path="/stacks/pr2_controllers/trunk/joint_trajectory_action" repo="pr2_controllers" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="joint_trajectory_action">

     The joint_trajectory_action is a node that exposes an action interface
     to a joint trajectory controller.

  </description>
  <author>Stuart Glaser</author>
  <license>BSD</license>
  <review notes="http://www.ros.org/wiki/joint_trajectory_action/Reviews/2010-01-12_Doc_Review" status="Doc reviewed"/>
  <url>http://ros.org/wiki/joint_trajectory_action</url>

  <depend package="roscpp"/>
  <depend package="trajectory_msgs"/>
  <depend package="actionlib_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="actionlib"/>

  <export>
    <cpp cflags="-I${prefix}/msg/cpp"/>
  </export>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="keyboard_smooth" path="/trunk/stacks/drink_serving/keyboard_smooth" repo="bosch-ros-pkg-e" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg-e/code">
  <description brief="keyboard_smooth">

     keyboard_smooth

  </description>
  <author>Nikhil Deshpande</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/keyboard_smooth</url>
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  <depend package="joy"/>

</package><package name="cereal_port" path="/stacks/serial_communication/trunk/cereal_port" repo="serial_communication" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="cereal_port">

     Simple C++ serial port class for ROS.

  </description>
  <author>Gonçalo Cabrita and Pedro Sousa</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cereal_port</url>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lcereal_port"/>
  </export>
  <depend package="roscpp"/>

</package><package name="halfsteps_pattern_generator" path="" repo="stacks/humanoid_walk" repo_host="git://github.com/laas/humanoid_walk">
  <description brief="Half-steps based pattern generator">

    This packages provides a pattern generator based on half-steps for
    dimensionality reduction.

    It generates feet, center of mass and ZMP trajectories for
    humanoids robots from a set of 2d footprints.

  </description>
  <author>Nicolas Perrin, Thomas Moulard/thomas.moulard@gmail.com</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/halfsteps_pattern_generator</url>

  <depend package="common_rosdeps"/>
  <depend package="rospy"/>
  <rosdep name="boost"/>
  <rosdep name="eigen"/>

  <depend package="bullet"/>

  <depend package="walk_interfaces"/>
  <depend package="walk_msgs"/>

  <depend package="visualization_msgs"/>

  <depend package="angles"/>

</package><package name="joystick_remapper" path="/trunk/arrg/ua_drivers/joystick_remapper" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
	<description brief="Remaps joystick buttons and axes.">
		This node can be used to remap the buttons and axes of a joystick to
		get them into a standard form that other nodes can then use
		independently of which joystick is actually being used.
  </description>
  <author>Blaise Gassend</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/joystick_remapper</url>
  <depend package="joy"/>
  <depend package="rospy"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="b21_teleop" path="/branches/stable/rwi/b21_teleop" repo="wu-ros-pkg" repo_host="https://wu-robotics.googlecode.com/svn">
  <description brief="Teleop Controller for B21">
    Teleop Controller for B21
  </description>
  <author>David V. Lu!!</author>
  <license>BSD</license>
  <url>http://ros.org/wiki/b21_teleop</url>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="roscpp"/>
  <depend package="joy"/>
</package><package name="perception_tools" path="/trunk/industrial_experimental/perception_tools" repo="swri-ros-pkg" repo_host="http://swri-ros-pkg.googlecode.com/svn">
  <description brief="perception_tools">

     perception_tools

  </description>
  <author>Jnicho</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/perception_tools</url>
  <depend package="sensor_msgs"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <depend package="tf"/>
  <depend package="tf_conversions"/>
  <depend package="visualization_msgs"/>
  <depend package="arm_navigation_msgs"/>
  <depend package="tabletop_object_detector"/>
  <export>
  	<rosbuild cmake_directory="${prefix}/cmake"/>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -lperceptiontools"/>    
  </export>

</package><package name="katana" path="" repo="katana_driver" repo_host="http://kos.informatik.uni-osnabrueck.de/katana_driver.git">
  <description brief="Driver for the Neuronics Katana 450 arm">

    <p>
    This package provides ROS interfaces to the Neuronics Katana 450 arm.
    It wraps the <a href="/wiki/kni">KNI</a> library for low-level communication
    with the Katana arm.
    </p>

    <p>
    GPL license due to the KNI library.
    </p>

  </description>
  <author>Martin Günther</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/katana</url>
  <depend package="roscpp"/>
  <depend package="roslib"/>
  <depend package="kni"/>
  <depend package="geometry_msgs"/>
  <depend package="std_srvs"/>

  <!-- for JointStatePublisher -->
  <depend package="sensor_msgs"/>

  <!-- for JointTrajectoryActionController -->
  <depend package="actionlib"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="control_msgs"/>
  <depend package="trajectory_msgs"/>
  <depend package="urdf"/>

  <!-- for KNIKinematics -->
  <depend package="kinematics_msgs"/>
  <depend package="tf"/>
  <rosdep name="armadillo"/>

  <!-- for katana_gripper_grasp_controller -->
  <depend package="object_manipulation_msgs"/>

  <!-- for JointMovementActionController -->
  <depend package="katana_msgs"/>

  <!-- for JointMovementActionController -->
  <depend package="arm_navigation_msgs"/>

</package><package name="control_toolbox" path="/stacks/pr2_controllers/trunk/control_toolbox" repo="pr2_controllers" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="Control Toolbox">
    The control toolbox contains modules that are useful across all controllers.
  </description>
  <author>Melonee Wise, Sachin Chitta, John Hsu</author>
  <license>BSD</license>
  <review notes="http://www.ros.org/wiki/control_toolbox/Reviews/2010-01-12_Doc_Review" status="Doc reviewed"/>
  <url>http://ros.org/wiki/control_toolbox</url>

  <rosdep name="tinyxml"/>

  <depend package="rosconsole"/>
  <depend package="tf"/>
  <depend package="roscpp"/>
  <depend package="angles"/>
  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/include/control_toolbox/eigen2" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lcontrol_toolbox"/>
  </export>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="camera1394v2" path="" repo="flyatar" repo_host="http://github.com/peterpolidoro/Flyatar">
  <description brief="IEEE 1394 Digital Camera driver">

    This is a ROS driver for devices supporting the IEEE 1394 Digital
    Camera (IIDC) protocol. It supports the ROS image_pipeline, using
    libdc1394 for device access.

  </description>
  <author>Patrick Beeson, Nate Koenig, Andrew Howard,
    Damien Douxchamps, Dan Dennedy, Jack O'Quin</author>
  <license>GPL</license>
  <review notes="2010-05-27" status="API reviewed"/>
  <url>http://ros.org/wiki/camera1394</url>
  <depend package="image_transport"/>
  <depend package="tf"/>
  <depend package="camera_info_manager"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="driver_base"/>
  <depend package="image_proc"/>
  <rosdep name="libdc1394-dev"/>

</package><package name="rtt_actionlib_msgs" path="" repo="rtt_common_msgs" repo_host="http://git.mech.kuleuven.be/robotics/rtt_common_msgs.git">
  <description brief="rtt_actionlib_msgs">

    Provides an rtt typekit for ROS actionlib_msgs messages.

    It allows you to use ROS messages transparently in
    RTT components and applications.

    This package was automatically generated by the
    create_rtt_msgs generator and should not be manually
    modified.

    See the http://ros.org/wiki/actionlib_msgs documentation
    for the documentation of the ROS messages in this
    typekit.

  </description>
  <author>create_rtt_msgs Generator</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rtt_rosnode</url>
  <depend package="rtt_rosnode"/>
  <depend package="actionlib_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>


</package><package name="roar_msgs" path="/roar_stack/trunk/roar_msgs" repo="roar_stack" repo_host="https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs">
  <description brief="roar_msgs">

   Message package for the ROAR stack

  </description>
  <author>Joe Romano</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/roar_msgs</url>
  <depend package="actionlib_msgs"/>
  <depend package="rospy"/>
  <depend package="roscpp"/>

</package><package name="cob_camera_sensors" path="" repo="cob_driver" repo_host="git://github.com/ipa320/cob_driver">
  <description brief="cob_camera_sensors">
  
	For more information read the readme.htm file located in <i>cob_driver/cob_camera_sensors</i>.
	
  </description>
  <author>Jan Fischer</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_camera_sensors</url>

  <depend package="roscpp"/>
  <!--depend package="rostest"/-->
  <depend package="sensor_msgs"/>
  <!--depend package="opencv2"/-->
  <!--depend package="image_transport"/-->
  <!--depend package="polled_camera"/-->
  <!--depend package="prosilica_camera"/-->
  <!--depend package="cv_bridge"/-->
  <!--depend package="cob_vision_utils"/-->
  <!--depend package="libmesasr"/-->
  <!--depend package="nodelet"/-->
  <!--depend package="pcl"/-->
  <!--depend package="pcl_ros"/-->
  <!--depend package="image_proc"/-->


  <!--rosdep name="tinyxml"/-->
  <!--rosdep name="libdc1394-dev"/-->
  <!--rosdep name="glut"/-->
  <!--rosdep name="libusb-dev"/-->

</package><package name="walk_msgs" path="" repo="stacks/humanoid_walk" repo_host="git://github.com/laas/humanoid_walk">
  <description brief="Humanoids Walking ROS Interface">

    ROS Interfaces used to generated humanoid robots walking
    movements.

  </description>
  <author>Thomas Moulard</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/walk_msgs</url>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -lwalk_msgs"/>
  </export>

  <depend package="roscpp"/>
  <depend package="rospy"/>

  <depend package="common_rosdeps"/>
  <depend package="bullet"/>

  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>

  <depend package="walk_interfaces"/>

  <depend package="visualization_msgs"/>
  <depend package="angles"/>

  <rosdep name="boost"/>
  <rosdep name="eigen"/>
</package><package name="mavconn_asctec" path="" repo="mavlink-ros-pkg" repo_host="https://github.com/pixhawk/mavlink-ros-pkg">
  <description brief="mavconn_asctec">

     mavconn_asctec

  </description>
  <author/>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/mavconn_asctec</url>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="asctec_hl_comm"/>
  <depend package="mav_status"/>
</package><package name="albany_common" path="/trunk/albany_robots/albany_common" repo="albany-ros-pkg" repo_host="http://albany-ros-pkg.googlecode.com/svn">
  <description brief="Common files for the ILS Social Robotics Lab">
    Description and launch files for common hardware in the ILS Social Robotics Lab.
  </description>
  <author>Michael E. Ferguson</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/albany_common</url>

  <depend package="rospy"/>
  <depend package="usb_cam"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>

</package><package name="cram_gazebo_utilities" path="" repo="cram_gazebo" repo_host="https://github.com/fairlight1337/cram_gazebo">
  <description brief="cram_gazebo_utilities">
    
    cram_gazebo_utilities
    
  </description>
  <author>Jan Winkler</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cram_gazebo_utilities</url>
  
</package><package name="kdl" path="" repo="orocos_kinematics_dynamics" repo_host="http://git.mech.kuleuven.be/robotics/orocos_kinematics_dynamics.git">
<description brief="The Kinematics and Dynamics Library (latest)">

This package contains a recent version of the Kinematics and Dynamics
Library (KDL), distributed by the Orocos Project. It is a meta-package that depends on orocos_kdl which contains the c++ version and python_orocos_kdl which contains the generated python bindings 

</description>
<author>Ruben Smits, Erwin Aertbelien, Orocos Developers</author>
<license>LGPL</license>
<review notes="" status="reviewed"/>
<url>http://www.orocos.org/kdl</url>

<depend package="orocos_kdl"/>
<depend package="python_orocos_kdl"/>


</package><package name="online_results" path="/trunk/recognition/online_results" repo="ubc-ros-pkg" repo_host="https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg">
  <description brief="online_results">
      This package is used for displaying the online results during the contest. This image is published on the /online_results topic.
  </description>
  <author>Dave Meger</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/online_results</url>
  
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="sensor_msgs"/>
  <depend package="recognition_msgs"/>
  <depend package="image_transport"/>
  

</package><package name="ssf_core" path="" repo="ethzasl_sensor_fusion" repo_host="git://github.com/ethz-asl/ethzasl_sensor_fusion">
  <description brief="ssf_core">

     Single Sensor Fusion (SSF) framework containing the core filter functions including full state propagation and shell for update sensor modules

  </description>
  <author>Stephan Weiss, Markus Achtelik</author>
  <license>BSD</license>
  <review notes="under active development" status="unreviewed"/>
  <url>http://ros.org/wiki/ethzasl_sensor_fusion/ssf_core</url>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="sensor_fusion_comm"/>

  <rosdep name="eigen"/>

  <export>
    <cpp cflags="`pkg-config --cflags eigen3` -I${prefix}/include -I${prefix}/cfg/cpp" lflags="-L${prefix}/lib -lssf_core"/>
  </export>
</package><package name="drive_base_action" path="/highlevel/drive_base_action" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="drive_base_action">

     drive_base_action

  </description>
  <author>Thomas Ruehr</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/drive_base_action</url>
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  <depend package="tf"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="move_base_msgs"/>

</package><package name="cob_mapping_slam" path="" repo="cob_navigation" repo_host="git://github.com/ipa320/cob_navigation">
  <description brief="cob_mapping_slam">

     cob_mapping_slam holds launch files for running SLAM using the <a href="http://ros.org/wiki/gmapping">gmapping</a> package.

  </description>
  <author>Matthias Gruhler</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_mapping_slam</url>

  <depend package="gmapping"/>
  <depend package="cob_navigation_config"/>

</package><package name="busbot_gazebo" path="/trunk/stacks/drink_serving/busbot_gazebo" repo="bosch-ros-pkg-e" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg-e/code">
  <description brief="busbot_gazebo">

     busbot_gazebo

  </description>
  <author>Nate Koenig, Ben Pitzer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/busbot_gazebo</url>

</package><package name="actionlib_msgs" path="/stacks/common_msgs/trunk/actionlib_msgs" repo="common_msgs" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Messages for actionlib">
     actionlib_msgs defines the common messages to interact with an
     action server and an action client.  For full documentation of
     the actionlib API see
     the <a href="http://www.ros.org/wiki/actionlib">actionlib</a>
     package.
  </description>
  <author>Vijay Pradeep</author>
  <license>BSD</license>
  <review notes="http://www.ros.org/wiki/actionlib_msgs/Reviews/2009-09-30_Doc_Review" status="doc reviewed"/>
  <url>http://ros.org/wiki/actionlib_msgs</url>
  <export>
    <cpp cflags="`PKG_CONFIG_PATH=${prefix}/../../lib/pkgconfig pkg-config --cflags actionlib_msgs`" lflags="`PKG_CONFIG_PATH=${prefix}/../../lib/pkgconfig pkg-config --libs actionlib_msgs`"/>
  </export>

</package><package name="remote_lab_examples" path="/trunk/stacks/remote_lab/remote_lab_examples" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <catkin/>
  <description brief="remote_lab_examples">
    mostly old wviz examples are moved in here
  </description>
  <author>Halit Bener Suay</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/remote_lab_examples</url>
</package><package name="cob_3d_mapping_pipeline_fake" path="" repo="cob_environment_perception" repo_host="git://github.com/ipa320/cob_environment_perception">
  <description brief="cob_3d_mapping_pipeline_fake">

     Fake mapping pipeline that publishes a point and a geometry map of ipa-kitchen

  </description>
  <author>Georg Arbeiter</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_3d_mapping_pipeline_fake</url>
  
  <depend package="actionlib"/>
  <depend package="rosbag"/>
  <depend package="cob_3d_mapping_msgs"/>

</package><package name="manyears_ros" path="" repo="introlab-ros-pkg" repo_host="https://github.com/introlab/introlab-ros-pkg">
<description brief="manyears">
ManyEars IntRoLab package.
</description>
<author>Vincent R</author>
<license>BSD</license>
<review notes="" status="unreviewed"/>
<depend package="roscpp"/>
<depend package="std_msgs"/>
<depend package="geometry_msgs"/>
<depend package="tf"/>
<!--depend package="topic_filters_manager"/-->
<depend package="manyears"/>
<export>
<cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp -I${prefix}/srv/cpp" lflags="-L${prefix}/lib"/>
</export>
</package><package name="engagement_msgs" path="/trunk/engagement/engagement_msgs" repo="ros-engagement" repo_host="http://ros-engagement.svn.sourceforge.net/svnroot/ros-engagement">
	<description brief="engagement_msgs">
		engagement_msgs is a package which collects the messages for the enagement stack.
    </description>
    <author>Aaron Holroyd (aholroyd (at) wpi (dot) edu),
            Brett Ponsler (bponsler (at) wpi (dot) edu)</author>
	<license>BSD</license>
	<review notes="" status="unreviewed"/>
    <url>http://sourceforge.net/projects/ros-engagement/</url>
	<export>
		<cpp cflags="-I${prefix}/srv/cpp -I${prefix}/msg/cpp"/>
  		<rosdoc config="../rosdoc.yaml"/>
	</export>

        <depend package="bml_msgs"/>
</package><package name="twitcurl" path="/trunk/rostweet/twitcurl" repo="uji-ros-pkg" repo_host="http://uji-ros-pkg.googlecode.com/svn">
  <description brief="twitcurl">

This package contains a recent version of the twitcurl library (http://code.google.com/p/twitcurl/).
This ROS package does not intend to modify twitcurl
in any way, it simply provides a convenient way to download and
compile the library, because twitcurl is not available from an OS package
manager. However, this package might contain some temporary patches to
twitcurl while they are being applied upstream, or while a permanent fix
for a problem is being discussed by the twitcurl community.

  </description>
  <author>Mario Prats</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/twitcurl</url>
  <depend package="roscpp"/>
  <rosdep name="curl"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib  -L${prefix}/lib -ltwit -lcurl"/>
  </export>

</package><package name="assisted_teleop" path="" repo="navigation_experimental" repo_host="https://kforge.ros.org/navigation/experimental">
  <description brief="assisted_teleop">

     assisted_teleop

  </description>
  <author>Tully Foote</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/assisted_teleop</url>
  <depend package="tf"/>
  <depend package="costmap_2d"/>
  <depend package="roscpp"/>
  <depend package="roslib"/>
  <depend package="geometry_msgs"/>
  <depend package="move_base_msgs"/>
  <depend package="actionlib"/>
  <depend package="message_filters"/>
  <depend package="base_local_planner"/>
  <depend package="angles"/>
  <depend package="pluginlib"/>
  <depend package="sensor_msgs"/>
  <depend package="filters"/>

  <rosdep name="eigen"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
  <export>
  <cpp cflags="-I${prefix}/include `rosboost-cfg --cflags`" lflags=""/>
  <filters plugin="${prefix}/filter_plugins.xml"/>
  </export>
</package><package name="schunk_gui" path="" repo="uuisrc-ros-pkg" repo_host="https://github.com/cburbridge/uuisrc-ros-pkg">
  <description brief="A gui for the manipulator">
	A node for displaying the SCHUNK status flags, and allowing slider control of the joint velocities / positions.
  </description>
  <author>Chris Burbridge</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>

  <depend package="rospy"/>
  <depend package="metralabs_ros"/>
  <depend package="sensor_msgs"/>
  <depend package="tf"/>
  <rosdep name="wxpython"/>

</package><package name="pr2_interactive_object_detection" path="/stacks/pr2_tabletop_manipulation_apps/branches/0.4-branch/pr2_interactive_object_detection" repo="pr2_tabletop_manipulation_apps" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_interactive_object_detection">

     A package that allows a remote user to request and assist
     the detection, recognition and pose estimation of tabletop objects,
     primarily using an rviz display.

  </description>
  <author>David Gossow</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_interactive_object_detection</url>

  <depend package="roscpp"/>
  <depend package="rviz"/>
  <depend package="tf"/>
  <depend package="tabletop_object_detector"/>
  <depend package="household_objects_database"/>
  <depend package="object_manipulator"/>
  <depend package="sensor_msgs"/>
  <depend package="stereo_msgs"/>
  <depend package="object_recognition_gui"/>
  <depend package="object_segmentation_gui"/>
  <depend package="actionlib_msgs"/>
  <depend package="rgbd_assembler"/>
  
  <export>
    <rviz plugin="${prefix}/lib/rviz_plugin.yaml"/>
  </export>

</package><package name="jlo" path="" repo="ias_perception" repo_host="http://code.in.tum.de/git/ias-perception.git">
<description>Located Object Server</description>
<author>Ulrich F Klank</author>
<license>GPL</license>
<depend package="lo"/>
<depend package="roscpp"/>
<depend package="vision_srvs"/>
<depend package="tf"/>
<export>
	<cpp cflags="-I${prefix}/srv/cpp -I${prefix}/msg/cpp"/>
</export>
</package><package name="adept_common" path="/trunk/adept/adept_common" repo="swri-ros-pkg" repo_host="http://swri-ros-pkg.googlecode.com/svn">
  <description brief="adept_common">

     adept_common

  </description>
  <author>root</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/adept_common</url>
  <depend package="std_msgs"/>
  <depend package="roscpp"/>
  <depend package="actionlib"/>
  <depend package="trajectory_msgs"/>
  <depend package="actionlib_msgs"/>
  <depend package="control_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="simple_message"/>
  <depend package="urdf"/>

  <export>
    <cpp cflags="-I${prefix}/include/"/>
  </export>

</package><package name="nao_dashboard" path="/trunk/humanoid_stacks/nao_viz/nao_dashboard" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="Nao Dashboard">
     nao_dashboard is a GUI for monitoring the state of a Nao robot. 
     It is a port of pr2_dashboard and shows status information like
     battery status, joint temperatures, and joint stiffness, as well
     as integrating ROS tools like rxconsole and robot_monitor. 
  </description>
  <author>Stefan Osswald</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/nao_dashboard</url>
  <depend package="rxtools"/>
  <depend package="robot_monitor"/>
  <depend package="rospy"/>
  <depend package="roslib"/>
  <depend package="roscpp"/>
  <depend package="pluginlib"/>
  <depend package="actionlib"/>
  <depend package="diagnostic_aggregator"/>
  <depend package="diagnostic_msgs"/>
  <depend package="std_srvs"/>
  <depend package="std_msgs"/>                        
  <depend package="nao_msgs"/>                        
  <export> 
    <diagnostic_aggregator plugin="${prefix}/nao_analyzer_plugins.xml"/>
  </export>

</package><package name="art_common" path="/trunk/stacks/art_vehicle/art_common" repo="utexas-art-ros-pkg" repo_host="http://utexas-art-ros-pkg.googlecode.com/svn">
  <description brief="ART vehicle common headers">

     Common headers and utilities for the Austin Robot Technology
     automomous vehicle.

  </description>
  <author>Austin Robot Technology</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://www.ros.org/wiki/art_common</url>

  <depend package="angles"/>
  <depend package="art_msgs"/>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="dynamic_reconfigure"/>

  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>

</package><package name="hrpsys_ros_bridge" path="/trunk/rtmros_common/hrpsys_ros_bridge" repo="rtm-ros-robotics/rtmros_common" repo_host="https://rtm-ros-robotics.googlecode.com/svn">
  <description brief="hrpsys and ROS bridge software, launch script and examples">

Summary: If you use real robot, start [robot]_ros_bridge.launch. For simulation environment, start [robot].launch. This script usually contains test code with the sample client program.

[robot]_ros_bridge.launch : This file launches ros bridge software for specifi robot type. When you use real robot, launch this script after the robot started up (usually the script is named [robot]_startup.launch under the robot specific package), when you use the simulation, you do not have to call this sript, but use the [robot].launch file.

[robot].launch : This file start the simulated robot in OpenHRP3 and the ROS bridge software. This script contains test tag to start sammple (EusLisp) client program

[robot]_nosim.launch : This file is non dynamics version of [robot].launch

Following scripts are only for internal usage:

[robot]_startup.launch : This file start simulation robot in OpenHRP3 software.

[robot]_startup_nosim.launch : This file start simulated robot in OpenHRP3 software with out forward dynamics calculation.

hrpsys_ros_bridge.launch : hrpsys and ROS bridge software core launch script, this script is usually included from other script.



  </description>
  <author>Kei Okada</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hrprtc_ros_bridge</url>

  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>

  <depend package="hrpsys"/>

  <!-- seq state ros bridge -->
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="robot_state_publisher"/>
  <depend package="actionlib"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="tf"/>

  <!-- image ros bridge -->
  <depend package="camera_info_manager"/>
  <depend package="image_transport"/>
  <depend package="dynamic_reconfigure"/>

  <!-- dashboard -->
  <depend package="robot_monitor"/>
  <depend package="pr2_dashboard"/>

  <!-- models -->
  <depend package="roseus"/>
  <depend package="euscollada"/>
  <depend package="choreonoid"/>
  <depend package="collada_robots"/>

  <!-- examples -->
  <depend package="rviz"/>
  <depend package="jsk_perception"/>
  <depend package="image_view2"/>
  <depend package="pr2eus"/>
</package><package name="map_store" path="" repo="map_store" repo_host="https://kforge.ros.org/mapstore/hg">
  <description brief="map store">

     Storage manager for OccupancyGrid maps.  Supports naming the most
     recent map, getting a list of map names, and publishing a
     specific map.

  </description>
  <author>Dave Hershberger</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/map_store</url>
  <depend package="roscpp"/>
  <depend package="mongo_ros"/>
  <depend package="nav_msgs"/>
</package><package name="qt_tutorials" path="" repo="qt_ros" repo_host="https://github.com/stonier/qt_ros">
  <catkin/>
  <description brief="Example qt tutorials, styled on roscpp_tutorials">

     Example qt programs, generated from code similar to that used by the 
     roscreate-qt-pkg script and styled on roscpp_tutorials.

  </description>
  <author>Daniel Stonier</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/qt_tutorials</url>
  
  <depend package="qt_build"/>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <rosdep name="libqt4-dev"/>
  
</package><package name="cob_linear_nav" path="" repo="cob_navigation" repo_host="git://github.com/ipa320/cob_navigation">
  <description brief="cob_linear_nav">

     cob_linear_nav provides a simple navigation instrument driving on a linear path from current position to goal without any planning or obstacle avoidance capabilites.
     Obstacle avoidance should be carried out in other package, e.g. <a href="http://ros.org/wiki/cob_collision_velocity_filter">cob_collision_velocity_filter</a>.

  </description>
  <author>Philipp Koehler</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_linear_nav</url>
  
  <depend package="roscpp"/>
  <depend package="move_base_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="actionlib"/>
  <depend package="tf"/>
  
</package><package name="session_tutorials" path="/trunk/openrave_planning/session_tutorials" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="session_tutorials">

     session_tutorials

  </description>
  <author>Rosen Diankov / rdiankov at cs.cmu.edu</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://pr.willowgarage.com/wiki/session_tutorials</url>
  <depend package="roscpp"/>
  <depend package="roscpp_sessions"/>
</package><package name="tf_smart_throttle" path="" repo="rosbridge_suite" repo_host="http://kforge.ros.org/rosbridge/git">
  <description brief="tf_smart_throttle">

     tf_smart_throttle

  </description>
  <author>bener</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/tf_smart_throttle</url>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="roslib"/>
  <depend package="tf"/>

</package><package name="mdl_slm" path="" repo="csiro-asl-ros-pkg" repo_host="lp:csiro-asl-ros-pkg">
  <description brief="mdlslm">

     mdl Laser scanner driver

  </description>
  <author>David Haddon</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <depend package="std_msgs"/>
  <depend package="rospy"/>
  <depend package="roslib"/>
  <depend package="rostest"/>
  <depend package="sensor_msgs"/>
</package><package name="denso_arm" path="" repo="denso" repo_host="lp:denso">
  <description brief="denso_arm">

    This is a package to control the Denso arm through ROS (http://www.densorobotics.com).

  </description>
  <author>Ugo Cupcic / Dan Greenwald / ugo@shadowrobot.com</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/denso_arm</url>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="actionlib"/>
  <depend package="denso_msgs"/>
  <depend package="tf"/>
  <depend package="sr_utilities"/>

</package><package name="aaai_lfd_demo_executive" path="/trunk/stacks/aaai_lfd_demo/aaai_lfd_demo_executive" repo="bosch-ros-pkg-e" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg-e/code">
  <description brief="aaai_lfd_demo_executive">

     Package that contains the high level plan for the Breakfast Task

  </description>
  <author>Benjamin Pitzer (Maintained by Sarah Osentoski)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/aaai_lfd_demo_executive</url>

  <depend package="rospy"/>
  <depend package="openloop_object_manipulation"/>
  <depend package="rl_2dnav"/>
  
</package><package name="task_recorder2_utilities" path="" repo="usc-clmc-ros-pkg" repo_host="https://github.com/usc-clmc/usc-clmc-ros-pkg">
  <description brief="task_recorder2_utilities">

     task_recorder2_utilities

  </description>
  <author>Peter Pastor</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/task_recorder2_utilities</url>

  <depend package="roscpp"/>
  <depend package="task_recorder2_msgs"/>
  <depend package="usc_utilities"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -ltask_recorder2_utilities"/>
  </export>
  
</package><package name="phspline_generator" path="" repo="pkganeshpk" repo_host="https://bitbucket.org/pkganeshpk/phspline_planner">
  <description brief="phspline_generator">

     phspline_generator

  </description>
  <author>srik</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/phspline_generator</url>
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="tf"/>

  <depend package="tinyxml"/>
   <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lphspline_generator"/>
  </export>


</package><package name="object_segmentation_gui" path="/stacks/tabletop_object_perception/branches/0.4-branch/object_segmentation_gui" repo="tabletop_object_perception" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="object_segmentation_gui">

     A package for interactive object segmentation.

  </description>
  <author>David Gossow</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/object_segmentation_gui</url>

  <depend package="rviz"/>
  <depend package="ogre_tools"/>
  <depend package="actionlib"/>
  <depend package="tf"/>
  <depend package="actionlib_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="stereo_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="roscpp"/>
  <depend package="tabletop_object_detector"/>
  <depend package="active_realtime_segmentation"/>
  <depend package="rviz_interaction_tools"/>
  
  <depend package="image_transport"/>
  <depend package="rgbd_assembler"/>

  <export>
    <cpp cflags="-I${prefix}/include `rosboost-cfg --cflags`" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lros `rosboost-cfg --lflags thread,signals`"/>
    <rviz plugin="${prefix}/lib/rviz_plugin.yaml"/>
  </export>

</package><package name="katana_interpolated_ik_motion_planner" path="" repo="katana_manipulation" repo_host="http://kos.informatik.uni-osnabrueck.de/katana_manipulation.git">
  <description brief="Interpolated IK motion planner for the Neuronics Katana arm">

    This package contains an interpolated IK motion planner for the Katana
    robot arm. It is based on the package interpolated_ik_motion_planner by
    Kaijen Hsiao.

  </description>
  <author>Henning Deeken</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/katana_interpolated_ik_motion_planner</url>
  <depend package="rospy"/>
  <depend package="kinematics_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="motion_planning_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="trajectory_msgs"/>
  <depend package="planning_environment_msgs"/>
  <depend package="interpolated_ik_motion_planner"/>

</package><package name="camera_calibration_standalone" path="/calibration/camera_calibration_standalone" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description>
    Simple tools for stereo camera calibration (to be deprecated by dcam/ost from ros-pkg).
  </description>

  <author>Radu Bogdan Rusu (rusu@cs.tum.edu)</author>
  <license>BSD</license>
  <review notes="beta" status="experimental"/>

  <depend package="roscpp"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
</package><package name="jsk_tools" path="/trunk/jsk_common/jsk_tools" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="A collection of utlities/scripts for working with jsk packages"><![CDATA[

Includes emacs scripts, ros tool alias generator, and launch doc generator.
   
  ]]></description>
  <author>Ryohei Ueda (ueda@jsk.t.u-tokyo.ac.jp), Rosen Diankov (rosen.diankov@gmail.com)</author>
  <license>Apache License 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/jsk_tools</url>
  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>

  <depend package="mjpeg_server"/>

  <!-- rosdep name="glc" / -->
  <rosdep name="vlc"/>
  <rosdep name="ffmpeg"/>
  <rosdep name="arista"/>
  <rosdep name="ffmpeg2theora"/>
  <rosdep name="recordmydesktop"/>
  <rosdep name="wkhtmltopdf"/>
  <rosdep name="gifsicle"/>
  <rosdep name="python-sphinx"/>
</package><package name="cwru_jaus" path="" repo="cwru-ros-pkg" repo_host="http://github.com/cwru-robotics/cwru-ros-pkg">
  <description brief="jaus">

     cwru_jaus

  </description>
  <author>Eric Perko, Beom Koh</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/jaus</url>
  <depend package="roscpp"/>
  <depend package="cwru_base"/>
  <depend package="actionlib_msgs"/>
  <depend package="cwru_nav"/>
  <depend package="std_msgs"/> 
  <depend package="nav_msgs"/>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="actionlib"/>
  <depend package="tf"/>
  <depend package="cwru_goal_planner"/>

</package><package name="lse_miniq_stage" path="/stacks/lse_miniq_robot/trunk/lse_miniq_stage" repo="lse_miniq_robot" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="lse_miniq_stage">

     This package contains ROS launch files and Stage world files for starting miniQ robots in simulation.

  </description>
  <author>Gonçalo Cabrita</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/lse_miniq_stage</url>

</package><package name="pr2_rosruby_tools" path="" repo="rosruby_pr2" repo_host="https://github.com/OTL/rosruby_pr2">
  <description brief="rosruby_pr2">

     rosruby_pr2

  </description>
  <author>Takashi Ogura</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosruby_pr2</url>
  <depend package="rosruby"/>
  <depend package="rosruby_actionlib"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="geometry_msgs"/>

</package><package name="rvision" path="/trunk/rvision" repo="cmu-ros-pkg" repo_host="https://cmu-ros-pkg.svn.sourceforge.net/svnroot/cmu-ros-pkg">
  <description brief="Rosen Vision Functions">
    Various functions for vision processing.
    If using Matlab, make sure to extract one of the OpenTSTOOL archives and build the package.
  </description>
  <author>Rosen Diankov (rdiankov@cs.cmu.edu)</author>
  <license>The Apache License 2.0</license>
  <export>
    <cpp cflags="-I${prefix}/srv/cpp"/>
    <python path="${prefix}/src/python"/>
    <python path="${prefix}/src"/>
  </export>
  <depend package="rospy"/>
  <depend package="ann2"/>
</package><package name="skill_library" path="" repo="usc-clmc-ros-pkg" repo_host="https://github.com/usc-clmc/usc-clmc-ros-pkg">
  <description brief="skill_library">

     skill_library

  </description>
  <author>Peter Pastor</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/skill_library</url>

  <depend package="roscpp"/>
  <depend package="rosbag"/>

  <depend package="task_msgs"/>
  <depend package="usc_utilities"/>

  <depend package="dynamic_movement_primitive"/>
  <depend package="dynamic_movement_primitive_utilities"/>

  <depend package="robot_info"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lskill_library_client"/>
  </export>
    
</package><package name="teleop_wii" path="/utils/teleop_wii" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="teleop_wii">
     Wiimote teleop control for base control (uses the nunchuk). The hat of
     the nunchuck controls forward/sideways, roll controls turning. Z is the
     deadman's control.
  </description>
  <author>Ingo Kresse</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <depend package="geometry_msgs"/>
  <depend package="joy"/>
  <depend package="roscpp"/>
<sysdepend os="debian" package="libcwiid1-dev" version="lenny/sid"/>
</package><package name="rosfawkes" path="" repo="rosfawkes" repo_host="git://git.fawkesrobotics.org/rosfawkes.git">
  <description brief="rosfawkes">
     This package integrates Fawkes into ROS.
  </description>
  <author>Tim Niemueller</author>
  <license>GPLv2+</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.fawkesrobotics.org/documentation/rosfawkes</url>
  <depend package="roscpp"/>
  <export>
    <cpp cflags="-I${prefix}/fawkes/src -I${prefix}/src -I${prefix}/fawkes/src/libs -I${prefix}/src/libs" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib"/>
  </export>
</package><package name="ros_epic_fail" path="/stacks/ros_experimental/trunk/ros_epic_fail" repo="ros_experimental" repo_host="https://code.ros.org/svn/ros">
  <description brief="ros_epic_fail">
    Experimental package to create bag failures of test failures on the build server.
  </description>
  <author>Tony Pratkanis</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ros_epic_fail</url>

  <depend package="rospy"/>
  <depend package="roslib"/>
  <depend package="rostest"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="flirtlib_ros" path="" repo="flirtlib_features" repo_host="https://kforge.ros.org/startuploc/git">
  <description brief="flirtlib_ros">

ROS wrapper for FLIRTLib 3rd party package    

  </description>
  <author>Bhaskara Marthi</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/flirtlib_ros</url>
  <depend package="occupancy_grid_utils"/>
  <depend package="tf"/>
  <depend package="roscpp"/>
  <depend package="interactive_markers"/>
  <depend package="mongo_ros"/>
  <depend package="actionlib"/>
  <depend package="sensor_msgs"/>
  <depend package="move_base_msgs"/>
  <depend package="std_srvs"/>
  <rosdep name="flirtlib"/>
  
</package><package name="stomp_ros_interface" path="" repo="usc-clmc-ros-pkg" repo_host="https://github.com/usc-clmc/usc-clmc-ros-pkg">
  <description brief="stomp_ros_interface">

     stomp_ros_interface

  </description>
  <author>Mrinal Kalakrishnan</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/stomp_ros_interface</url>
  <depend package="stomp"/>
  <depend package="arm_navigation_msgs"/>
  <depend package="distance_field"/>
  <depend package="planning_environment"/>
  <depend package="learnable_cost_function"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -lstomp_ros_interface -Wl,-rpath,${prefix}/lib"/>
  </export>


</package><package name="elektron_monitor" path="" repo="elektron_robot" repo_host="https://github.com/RCPRG-ros-pkg/elektron_robot">
  <description brief="elektron_monitor">

     elektron_monitor

  </description>
  <author>Maciej Stefanczyk</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/elektron_monitor</url>

  <depend package="rospy"/>
  <depend package="diagnostic_msgs"/>
  <depend package="sound_play"/>
  
</package><package name="roslisp_runtime" path="/stacks/roslisp_support/trunk/roslisp_runtime" repo="roslisp_support" repo_host="https://code.ros.org/svn/ros">
  <description brief="roslisp runtime dependencies">

     roslisp runtime dependencies. This package enables SBCL to be installed separately from the main ros stack, where roslisp is located.

  </description>
  <author>Bhaskara Marthi</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/roslisp_runtime</url>
  <depend package="roslisp"/>
  <depend package="sbcl"/>
  <depend package="rospack"/>
  <depend package="std_msgs"/>
  <depend package="std_srvs"/>

  <rosdep name="rospack"/>
  <rosdep name="ros_comm"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="feature_extractor_fpfh" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="feature_extractor">

     feature_extractor_fpfh

  </description>
  <author>Hai Nguyen</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/feature_extractor</url>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>
  <!--<depend package="pcl_visualization"/>-->
  <depend package="eigen"/>
  <depend package="sensor_msgs"/>
  <depend package="message_filters"/>
  <!--<depend package="eigen3"/> 
  <rosdep name="wxwidgets"/> -->

</package><package name="auv_nav" path="/trunk/hwu_osl_software/auv_nav" repo="hwu-osl-ros-pkg" repo_host="http://hwu-osl-ros-pkg.googlecode.com/svn">
  <description brief="A basic navigator node for an AUV.">

    This simple navigator node serves as an example of hybrid use of Heriot-Watt Unversity's internal OceanSHELL/ALI messages for sensor data, and ROS messages for the higher levels.  

  </description>
  <author>Joel Cartwright</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>TODO</url>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="nav_msgs"/>
  <depend package="tf"/>
  <depend package="osl_core"/>
  <depend package="auv_msgs"/>

</package><package name="rtcus_nav_msgs" path="/trunk/rtcus_mobile_robots/rtcus_nav_msgs" repo="rtc-us-ros-pkg-trunk" repo_host="https://rtc-us-ros-pkg.svn.sourceforge.net/svnroot/rtc-us-ros-pkg">
	<description brief="rtcus_nav_msgs">

Defines a set of common of navigation msgs. This is not a substitution of the ros common package nav_msgs but a complementation of it.

	</description>
	<author>Pablo Iñigo Blasco</author>
	<license>BSD</license>
	<review notes="" status="unreviewed"/>
	<url>http://ros.org/wiki/rtcus_nav_msgs</url>
	<export>
		<cpp cflags="-I${prefix}/include -I${prefix}/cfg/cpp -I${prefix}/msg_gen/cpp/include" lflags="-L${prefix}/lib"/>
	</export>
	<depend package="geometry_msgs"/>
</package><package name="comp_cop" path="/tags/latest/comp_cop" repo="knowrob" repo_host="http://code.in.tum.de/pubsvn/knowrob">
  <description brief="comp_cop">

     Interface between KnowRob and the CoP cognitive perception system
     that allows to query for objects to perceive and listens on the
     cop_answers topic for results, also for results of object perception
     triggered by someone else.

     The results are asserted in the knowledge base and made available for reasoning.

  </description>
  <author>Moritz Tenorth</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/comp_cop</url>
  <depend package="rosjava_jni"/>
  <depend package="vision_srvs"/>
  <depend package="ias_knowledge_base"/>
  <depend package="jpl"/>

  <export>
    <java classpath="${prefix}/bin:${prefix}/lib/apache-mime4j-0.6.jar:${prefix}/lib/commons-codec-1.3.jar:${prefix}/lib/commons-logging-1.1.1.jar:${prefix}/lib/google-api-translate-java-0.92.jar:${prefix}/lib/httpclient-4.0.1.jar:${prefix}/lib/httpcore-4.0.1.jar:${prefix}/lib/httpmime-4.0.1.jar:${prefix}/lib/xmlrpc-1.1.1.jar"/>
    <rosdoc config="rosdoc.yaml"/>
  </export>

</package><package name="b21_description" path="/branches/stable/rwi/b21_description" repo="wu-ros-pkg" repo_host="https://wu-robotics.googlecode.com/svn">
  <description brief="b21_description">

     b21_description

  </description>
  <author>David V. Lu!!</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/b21_description</url>
  <depend package="urdf"/>

</package><package name="cob_gazebo_worlds" path="" repo="cob_environments" repo_host="git://github.com/ipa320/cob_environments">
  <description brief="cob_gazebo_worlds">

     This package provides some worlds for gazebo simulation.

  </description>
  <author>Florian Weisshardt</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_gazebo_worlds</url>

  <depend package="xacro"/>
  <depend package="convex_decomposition"/>
  <depend package="ivcon"/>
  <depend package="ogre_tools"/>
  <depend package="gazebo"/>
  <depend package="gazebo_tools"/>
  <depend package="gazebo_plugins"/>

  <export>
    <gazebo gazebo_media_path="${prefix}"/>
  </export>

</package><package name="stage" path="/stacks/stage/trunk" repo="stage" repo_host="https://code.ros.org/svn/ros-pkg">
<description brief="Stage">

<p>
This package contains the <a href="http://rtv.github.com/Stage/">Stage robot simulator</a>, from the <a href="http://playerstage.sf.net">Player Project</a>.
This package provides the latest development version of Stage (git://github.com/rtv/Stage.git). See also the <a href="http://github.com/rtv/Stage">Stage project page at GitHub</a>.
</p>
<p>
This package also provides stageros, a ROS node that uses Stage.
</p>

</description>
<author>Richard Vaughan, with contributions from many others. See web page for a full credits list.</author>
<license>GPL</license>
<review notes="" status="Doc reviewed"/>
<url>http://playerstage.sourceforge.net/doc/Stage-3.2.1</url>
<versioncontrol type="svn" url="https://playerstage.svn.sourceforge.net/svnroot/playerstage/code/stage/branches/stage-ros"/>

  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="tf"/>

  <export> 
    <cpp cflags="`PKG_CONFIG_PATH=${prefix}/lib64/pkgconfig:${prefix}/lib/pkgconfig:$PKG_CONFIG_PATH pkg-config --cflags stage`" lflags="`PKG_CONFIG_PATH=${prefix}/lib64/pkgconfig:${prefix}/lib/pkgconfig:$PKG_CONFIG_PATH pkg-config --libs stage`"/> 
    <rosdoc external="http://playerstage.sourceforge.net/doc/Stage-3.2.1/namespaces.html"/>
  </export> 

<rosdep name="autoconf"/>
<rosdep name="automake"/>
<rosdep name="libtool"/>
<rosdep name="gtk2"/>
<rosdep name="fltk"/>
<rosdep name="pkg-config"/>
<rosdep name="libjpeg"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="roomba_stage" path="" repo="navigation_tutorials" repo_host="https://kforge.ros.org/navigation/tutorials">
  <description brief="roomba_stage">

     roomba_stage

  </description>
  <author>Gonçalo Cabrita</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/roomba_stage</url>

</package><package name="lasertracker" path="/trunk/colbot-ros-pkg/lasertracker" repo="colbot-ros-pkg" repo_host="http://colbot.googlecode.com/svn">
  <description brief="lasertracker">

     A tracker for laser pointer dot in images

  </description>
  <author>Frederic Pesquet</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <depend package="opencv2"/>
  <depend package="cv_bridge"/>
  <depend package="sensor_msgs"/>
  <depend package="image_transport"/>
  <depend package="geometry_msgs"/>
  <depend package="rosqwerk"/>

</package><package name="elektron_bringup" path="" repo="elektron_robot" repo_host="https://github.com/RCPRG-ros-pkg/elektron_robot">
  <description brief="elektron_bringup">

     elektron_bringup

  </description>
  <author>Maciej Stefanczyk</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/elektron_bringup</url>
  <depend package="LMS1xx"/>
  <depend package="elektron_base"/>
  <depend package="elektron_sensors"/>
  <depend package="elektron_monitor"/>
  <depend package="diagnostic_aggregator"/>
  <depend package="topic_tools"/>

</package><package name="pgr_camera_driver" path="" repo="ccny_drivers" repo_host="http://robotics.ccny.cuny.edu/git/ccny-ros-pkg/ccny_drivers.git">
	<description brief="pgr_camera_driver">
		A ROS node to provide access to Point Grey Research cameras, using the
		FlyCapture2 SDK API
		Acknowledgement: This package is based largely on the prosilica_camera package,
		by Patrick Mihelich (http://www.ros.org/wiki/prosilica_camera).
		Originally developed by Patrick Bouffard.
		Reason for branching from original package: 
		<ol>
		    <li>For better calibration purposes (with ROS camera_calibration pkg) it needs to use the camera_info_manager package. See example launch files.</li>
		    <li>Adding support for color cameras</li>
		</ol>
	</description>
	<author> Mantained by Carlos Jaramillo (Original Author: Patrick Bouffard)</author>
	<license>BSD</license>
	<review notes="Unstable (W.I.P.)" status="unreviewed"/>
	<url>http://ros.org/wiki/pgr_camera_driver</url>
	<depend package="roscpp"/>
	<depend package="std_msgs"/>
	<depend package="sensor_msgs"/>
	<depend package="diagnostic_updater"/>
	<depend package="diagnostic_msgs"/>
	<depend package="image_transport"/>
	<depend package="self_test"/>
	<depend package="driver_base"/>
	<depend package="dynamic_reconfigure"/>
	<depend package="camera_calibration_parsers"/>
	<depend package="camera_info_manager"/>
	<depend package="polled_camera"/>
	<export>
		<rosdoc config="rosdoc.yaml"/>
	</export>
</package><package name="rosbridge_launch" path="" repo="rosbridge_suite" repo_host="http://kforge.ros.org/rosbridge/git">
  <description brief="rosbridge_launch">

     rosbridge_launch

  </description>
  <author>jon</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosbridge_launch</url>
  <depend package="rosapi"/>
  <depend package="roswww"/>
  <depend package="rosbridge_server"/>
  <depend package="tf_smart_throttle"/>

</package><package name="pddl_planner_viewer" path="/trunk/pddl/pddl_planner_viewer" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="a viewer of pddl_planner">
    a viewer of pddl_planner.
  </description>
  <author>Ryohei Ueda (ueda@jsk.t.u-tokyo.ac.jp)</author>
  <license>Apache License 2.0</license>
  <depend package="pddl_msgs"/>
</package><package name="roswww" path="" repo="rosbridge_suite" repo_host="http://kforge.ros.org/rosbridge/git">
  <description brief="roswww">

     roswww

  </description>
  <author>Jonathan Mace</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/roswww</url>
  
  <depend package="rospy"/>

</package><package name="s3000_laser" path="/trunk/s3000_laser" repo="s3000_laser" repo_host="https://sick-s3000-ros-pkg.googlecode.com/svn">
  <description brief="SICK S3000 laser driver">

	This driver controls the SICK S3000 safety laser scanner interpreting its data output.
	The driver is very basic and assumes the S3000 has already been configured to continuously output
	its measured data on the RS422 data lines.

  </description>
  <author>Robotnik Automation</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/s3000_laser</url>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="driver_base"/>
  <depend package="self_test"/>
  <depend package="diagnostic_updater"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="tf"/>
  <depend package="std_srvs"/>
  <export>
        <cpp cflags="-I${prefix}/include -I${prefix}/msg_gen/cpp/include"/>
  </export>


</package><package name="cylindrical_marker_finder" path="/trunk/cylindrical_marker_finder" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="cylindrical_marker_finder">

     cylindrical_marker_finder

  </description>
  <author>Aaron St.Clair</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cylindrical_marker_finder</url>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="laser_geometry"/>
  <depend package="visualization_msgs"/>
  <depend package="tf"/>
  <depend package="roscpp"/>
  <depend package="rospy"/> 
  <export>
    <cpp cflags="-I${prefix}/msg/cpp -I${prefix}/srv/cpp"/>
  </export>

</package><package name="wam_teleop" path="/trunk/wam_common/wam_teleop" repo="barrett-ros-pkg" repo_host="http://web.barrett.com/svn/barrett-ros-pkg">
  <description brief="wam_teleop">

     This package contains a joystick and keyboard teleoperation for the Barrett WAM and BarrettHand.

  </description>
  <author>Barrett Technology Inc., Kyle Maroney</author>
  <license>BSD</license>
  <url>http://ros.org/wiki/wam_teleop</url>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="std_srvs"/>
  <depend package="joy"/>
  <depend package="wam_srvs"/>
  <depend package="wam_msgs"/>

</package><package name="turtlebot_arm_description" path="" repo="turtlebot_arm" repo_host="https://kforge.ros.org/turtlebot/turtlebot_arm">
  <description brief="turtlebot_arm_description">

     turtlebot_arm_description contains URDF files and meshes for the TurtleBot arm.

  </description>
  <author>Melonee Wise</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/turtlebot_arm_description</url>
  <depend package="urdf"/>
  <depend package="xacro"/>
  <depend package="turtlebot_description"/>

</package><package name="gazebo_plugins" path="/stacks/simulator_gazebo/trunk/gazebo_plugins" repo="simulator_gazebo" repo_host="https://code.ros.org/svn/ros-pkg">
  <description>Robot-Independent Gazebo plugins.</description>
  <author>Sachin Chitta, Stu Glaser, John Hsu</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/gazebo_plugins</url>
  <depend package="gazebo"/>
  <depend package="gazebo_msgs"/>
  <depend package="roscpp"/>
  <depend package="rospy"/>  
  <depend package="nodelet"/>  
  <depend package="angles"/>
  <depend package="std_srvs"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="bullet"/>
  <depend package="urdf"/>
  <depend package="tf"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="driver_base"/>
  <depend package="rosgraph_msgs"/>
  <depend package="trajectory_msgs"/>
  <depend package="pcl_ros"/>
  <depend package="image_transport"/>
  <export>
    <cpp cflags="-I${prefix}/cfg/cpp -I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib"/>
    <gazebo gazebo_media_path="${prefix}" plugin_path="${prefix}/lib"/>
  </export>
  <rosdep name="python-numpy"/>
  <rosdep name="tinyxml"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="cob_android_settings" path="" repo="cob_android" repo_host="git://github.com/ipa320/cob_android">
  <description brief="cob_android_settings">

     cob_android_settings

  </description>
  <author>Benjamin Maidel</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_android_settings</url>

</package><package name="point_map" path="/trunk/OIT/point_map" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="point_map">

     point_map

  </description>
  <author>David Feil-Seifer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/point_map</url>
  <depend package="yaml_cpp"/>
  <depend package="roscpp"/>
  <depend package="nav_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/srv/cpp"/>
  </export>


</package><package name="nxt_teleop" path="" repo="foote-nxt" repo_host="https://nxt.foote-ros-pkg.googlecode.com/hg/">
  <description brief="nxt_teleop">

     nxt_teleop provides keyboard and joystick interfaces for some of nxt robots provided in the nxt_robots stack.

  </description>
  <author>Wim Meeussen</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/nxt_teleop</url>
  <depend package="nxt_ros"/>
  <depend package="geometry_msgs"/>
  <depend package="joy"/>

</package><package name="kinematic_model_estimation" path="/branches/kinematic_model_estimation" repo="rtc-us-ros-pkg-branches" repo_host="https://rtc-us-ros-pkg.svn.sourceforge.net/svnroot/rtc-us-ros-pkg">
  <description brief="kinematic_model_estimation">

     kinematic_model_estimation

  </description>
  <author>Pablo Iñigo Blasco</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/kinematic_model_estimation</url>
  <depend package="kdl"/>
  <depend package="rospy"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="urdf"/>
  <depend package="deap"/>
  <depend package="tf_conversions"/>
</package><package name="manifest_cleaner" path="/branches/stable/wu_ros_tools/manifest_cleaner" repo="wu-ros-pkg" repo_host="https://wu-robotics.googlecode.com/svn">
  <description brief="Tool for examining package and stack manifests">
    Tool for examining package and stack manifests. Currently only can output statistics, doesn't actually clean. 
  </description>
  <author>David V. Lu!!</author>
  <license>BSD</license>
  <url>http://ros.org/wiki/manifest_cleaner</url>
  <depend package="rospy"/>
  <depend package="rospack"/>
</package><package name="rosmultimaster_test" path="/stacks/wu_utils/trunk/rosmultimaster_test" repo="wu-ros-pkg" repo_host="https://wu-ros-pkg.svn.sourceforge.net/svnroot/wu-ros-pkg">
  <description brief="rosmultimaster_test">
	A test package for rosmultimaster.

  </description>
  <author>Marshall Strother/ mcstrother@gmail.com</author>
  <license>BSD</license>
  <review notes="reviewed and tested by mcstrother on 8/6/2009" status="unreviewed"/>
  <url>http://pr.willowgarage.com/wiki/rosmultimaster</url>
  <depend package="rospy"/>
  <depend package="std_msgs"/>
  <depend package="std_srvs"/>
  <depend package="rosmultimaster"/>
</package><package name="dock_detect" path="" repo="cyphy_legacy" repo_host="http://launchpad.net/cyphy">
  <description brief="dock_detect">

    Package to detect the location of the Guiabot's triangular dock. 
	LineFit - fits line segments to the 2D laser scan 

  </description>
  <author>Liz Murphy</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/dock_detect</url>
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="tf"/>
  <depend package="eigen"/>

</package><package name="cob_command_gui" path="" repo="cob_command_tools" repo_host="git://github.com/ipa320/cob_command_tools">
  <description brief="cob_command_gui">

     This package provides a simple GUI for operating Care-O-bot.

  </description>
  <author>Florian Weisshardt</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.ros.org/wiki/cob_command_gui</url>

  <depend package="rospy"/>
  <depend package="cob_script_server"/>
  <depend package="cob_relayboard"/>
  
  <python path="${prefix}/ros/src"/>

</package><package name="robotino_navigation" path="/robotino-ros-pkg/trunk/robotino/robotino_navigation" repo="robotino-ros-pkg" repo_host="http://svn.openrobotino.org">
  <description brief="robotino_navigation">
This package contains launch and config files to launch Robotino with 
certain configurations for tasks such as mapping and navigation.
  </description>
  <author>indorewala@servicerobotics.eu</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/robotino_navigation</url>
  <depend package="robotino_node"/>

</package><package name="lcp_proxy" path="/trunk/ros/nxt_lejos_ros/lcp_proxy" repo="lejos-ros-pkg" repo_host="https://lejos.svn.sourceforge.net/svnroot/lejos">
  <description brief="lcp_proxy">

     lcp_proxy

  </description>
  <author>lawrie</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/lcp_proxy</url>
  <depend package="rosjava"/>
  <depend package="rosjava"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="nxt_msgs"/>
  <depend package="nxt_lejos_ros_msgs"/>
  <depend package="turtlesim"/>
  <depend package="tf"/>

  <export>
	    <rosjava-src location="src"/> 
	   	<rosjava-pathelement artifactId="org.lejos.ros.nodes.LCPProxy" built="true" groupId="org.lejos.ros" location="target/" version="0.0.1"/>
		<rosjava-pathelement built="true" location="build/"/>
    	<rosjava-pathelement location="/home/lawrie/workspace/snapshot/lib/pc/pccomm.jar"/>
     	<rosjava-pathelement location="/home/lawrie/workspace/snapshot/lib/pc/3rdparty/bluecove-gpl.jar"/>
    	<rosjava-pathelement location="/home/lawrie/workspace/snapshot/lib/pc/3rdparty/bluecove.jar"/>	    	<rosjava-pathelement location="/home/lawrie/ros_workspace/nxt_lejos_ros/NXTLoader/lib/yamlbeans-1.06.jar"/>
  </export>
</package><package name="network_control_tests" path="/stacks/linux_networking/trunk/network_control_tests" repo="linux_networking" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="network_control_tests">
    Test suite for the packages that are part of the &quot;WiFi Test Setup&quot; project:
    network_monitor_udp, network_traffic_control, hostapd_access_point, linksys_access_point,
    ddwrt_access_point.
  </description>
  <author>Catalin Drula</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/network_control_tests</url>
  <depend package="network_monitor_udp"/>
  <depend package="network_traffic_control"/>
  <depend package="hostapd_access_point"/>
  <depend package="linksys_access_point"/>
  <depend package="ddwrt_access_point"/>
  <depend package="access_point_control"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="rostest"/>
</package><package name="R1_teleop_joy" path="" repo="JKU_Robotic_Stack" repo_host="https://github.com/AaronMR/JKU_Robotic_Stack">
  <description brief="R1_teleop_joy">

     R1_teleop_joy

  </description>
  <author>aaronmr</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/R1_teleop_joy</url>
  <depend package="roscpp"/>
  <depend package="joy"/>
  <depend package="geometry_msgs"/>

</package><package name="cram_language" path="" repo="cram_core" repo_host="https://github.com/moesenle/cram_core">
  <description brief="The CRAM plan language.">
    The CRAM plan language is the core of the CRAM framework. It
    provides the basic functionality to write flexible and robust
    robot control programs.
  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <url>http://ros.org/wiki/cram_language</url>
  <review notes="" status="unreviewed"/>
  <depend package="alexandria"/>
  <depend package="trivial_garbage"/>
  <depend package="cram_utilities"/>
  <depend package="cram_test_utilities"/>
  <depend package="synchronization_tools"/>
</package><package name="katana_msgs" path="" repo="katana_driver" repo_host="http://kos.informatik.uni-osnabrueck.de/katana_driver.git">
  <description brief="katana_msgs contains messages specific to the Katana arm">

     This package contains messages specific to the Neuronics Katana arm.

  </description>
  <author>Martin Günther</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/katana_msgs</url>
  <depend package="sensor_msgs"/>
  <depend package="actionlib_msgs"/>

</package><package name="mesh_segmentation" path="/trunk/stacks/bosch_texture_reconstruction/mesh_segmentation" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <author>Benjamin Pitzer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <depend package="roscpp"/>
  <depend package="rtc"/>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -lmesh_segmentation"/>
  </export>
</package><package name="worldmodel_ops" path="" repo="worldmodel" repo_host="https://kforge.ros.org/worldmodel/hg">
  <description brief="worldmodel_ops">

     worldmodel_ops

  </description>
  <author>Austin Hendrix</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/worldmodel_ops</url>
  <depend package="continuous_ops_task_manager"/>

</package><package name="turtlebot_kinect" path="/trunk/clearpath_turtlebot/turtlebot_kinect" repo="clearpath-ros-pkg" repo_host="http://clearpath-ros-pkg.googlecode.com/svn">
  <description brief="turtlebot_kinect">

     This package contains launch files which run some of the demos from the clearpath_kinect stack on the TurtleBot platform.

  </description>
  <author>Sean Anderson</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/turtlebot_kinect</url>

  <depend package="openni_camera"/>
  <depend package="clearpath_tools"/>
  <depend package="clearpath_kinect_demo"/>

</package><package name="c3_hlac" path="" repo="isi-ros-pkg" repo_host="http://github.com/kanezaki/isi-ros-pkg">
  <description brief="c3_hlac">

     C3-HLAC feature extraction from RGB point cloud.

  </description>
  <author>Asako Kanezaki</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/c3_hlac</url>
  <depend package="roscpp"/>
  <depend package="pcl"/>
  <depend package="c3_hlac_core"/>
  <export>
    <cpp cflags="-I${prefix}/include/" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lc3_hlac"/>
  </export>

</package><package name="ADEPT_VIPER_S650_arm_navigation" path="/trunk/adept/ADEPT_VIPER_S650_arm_navigation" repo="swri-ros-pkg" repo_host="http://swri-ros-pkg.googlecode.com/svn">
  <description brief="ADEPT_VIPER_S650_arm_navigation">

     ADEPT_VIPER_S650_arm_navigation

  </description>
  <author>Shaun Edwards</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ADEPT_VIPER_S650_arm_navigation</url>
  <depend package="planning_environment"/>
  <depend package="arm_kinematics_constraint_aware"/>
  <depend package="ompl_ros_interface"/>
  <depend package="trajectory_filter_server"/>
  <depend package="constraint_aware_spline_smoother"/>
  <depend package="move_arm"/>

</package><package name="google_geotiff" path="" repo="google" repo_host="https://code.google.com/p/rosjava.google/">
  <description brief="     hector_geotiff provides a node that can be used to save occupancy grid map, robot trajectory and object of interest data to RoboCup Rescue compliant GeoTiff images">

     hector_geotiff provides a node that can be used to save occupancy grid map, robot trajectory and object of interest data to RoboCup Rescue compliant GeoTiff images 

  </description>
  <author>Stefan Kohlbrecher</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hector_geotiff</url>
  <depend package="nav_msgs"/>
  <depend package="std_msgs"/>
  <depend package="roscpp"/>
  <depend package="hector_map_tools"/>
  <depend package="hector_nav_msgs"/>
  <depend package="pluginlib"/>

  <rosdep name="qt4"/>

  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>
</package><package name="artoolkit" path="" repo="ccny_vision" repo_host="http://robotics.ccny.cuny.edu/git/ccny-ros-pkg/ccny_vision.git">
	<description brief="artoolkit">
	     Artoolkit Library
	</description>
	<author>Gautier Dumonteil</author>
	<license>GPL</license>
	<review notes="" status="3rdparty"/>
	<url>http://www.ros.org/wiki/artoolkit</url>
	<versioncontrol type="svn" url="https://artoolkit.svn.sourceforge.net/svnroot/artoolkit/trunk"/>
	<export>
  		<cpp cflags="-I${prefix}/include/ -I${prefix}/include/AR/sys" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lAR -lARgsub -lARMulti -lARvideo"/>
	</export>
</package><package name="pp_explorer" path="/stacks/odor_search/trunk/pp_explorer" repo="odor_search" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="pp_explorer">

     Particle plume exploration algorithm.

  </description>
  <author>Gonçalo Cabrita and Pedro Sousa</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pp_explorer</url>
  <depend package="roscpp"/>
  <depend package="lse_sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="std_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="move_base_msgs"/>
  <depend package="pcl_ros"/>
  <depend package="tf"/>
  <depend package="visualization_msgs"/>
  <depend package="angles"/>
  <depend package="wifi_comm"/>

</package><package name="rosalyn" path="/trunk/albany_robots/rosalyn" repo="albany-ros-pkg" repo_host="http://albany-ros-pkg.googlecode.com/svn">
  <description brief="rosalyn">
    Configuration and launch files for ROSalyn.
  </description>
  <author>Michael E. Ferguson</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosalyn</url>

  <depend package="rospy"/>
  <depend package="irobot_create_2_1"/>
  <depend package="arbotix_python"/>
</package><package name="vosch" path="" repo="mapping" repo_host="http://code.in.tum.de/git/mapping.git">
  <description brief="vosch">

     VOSCH feature extraction from RGB point cloud.

  </description>
  <author>Asako Kanezaki</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/vosch</url>
  <depend package="roscpp"/>
  <depend package="pcl_cloud_algos"/>
  <depend package="c3_hlac"/>
  <export>
    <cpp cflags="-I${prefix}/include/"/>
  </export>

</package><package name="arbotix_python" path="/trunk/arbotix/arbotix_python" repo="vanadium-ros-pkg" repo_host="http://vanadium-ros-pkg.googlecode.com/svn">
  <description brief="Drivers for the ArbotiX">
    Bindings and low-level controllers for ArbotiX-powered robots.
  </description>
  <author>Michael Ferguson</author>
  <license>BSD</license>

  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/arbotix_python</url>

  <rosdep name="python-serial"/>

  <depend package="rospy"/>
  <depend package="tf"/>
  <depend package="arbotix_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="diagnostic_msgs"/>
  <depend package="control_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="std_srvs"/>
  <depend package="actionlib"/>
</package><package name="omnix" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="omnix">

     omnix

  </description>
  <author>Alexander J Trevor</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/omnix</url>
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  <depend package="tf"/>
  <depend package="joy"/>
  <depend package="sensor_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="message_filters"/>
  <depend package="actionlib"/>
  <depend package="move_base_msgs"/>
  <depend package="laser_geometry"/>
</package><package name="pr2_msgs" path="/stacks/pr2_common/trunk/pr2_msgs" repo="pr2_common" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="PR2 Messages">

    Messages for representing PR2 state, such as battery information and the PR2 fingertip sensors.

  </description>
  <author>Eric Berger and many others</author>
  <license>BSD</license>
  <review notes="2010/01/18" status="Doc reviewed"/>
  <url>http://ros.org/wiki/pr2_msgs</url>

  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>

  <depend package="rostest"/>
  <depend package="rosbag"/>
  
</package><package name="simple_arm_server" path="/trunk/simple_arms/simple_arm_server" repo="vanadium-ros-pkg" repo_host="http://vanadium-ros-pkg.googlecode.com/svn">
  <description brief="simple_arm_server"/>
  <author>Michael Ferguson</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/simple_arm_server</url>
  <depend package="rospy"/>
  <depend package="actionlib"/>

  <!-- messages -->
  <depend package="arm_navigation_msgs"/>
  <depend package="trajectory_msgs"/>
  <depend package="kinematics_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="control_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="std_srvs"/>

  <depend package="tf"/>
</package><package name="proximity_sensor_tf" path="/trunk/stacks/bosch_proximity_sensor/proximity_sensor_tf" repo="bosch-ros-pkg" repo_host="http://svn.code.sf.net/p/bosch-ros-pkg/code">
  <description brief="proximity_sensor_tf">

     proximity_sensor_tf

  </description>
  <author>Adrian Funk (Maintained by Philip Roan)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/proximity_sensor_tf</url>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="proximity_sensor_driver"/>

</package><package name="dynamic_graph_actionlib" path="" repo="stacks/redundant_manipulator_control" repo_host="git://github.com/laas/redundant_manipulator_control">
  <description brief="Actionlib support for dynamic-graph">

     Actionlib allows the execution of complex robotics tasks such as
     door opening. Dynamic-graph allows the implementation of flexible
     robot controllers. This package makes the link between this
     supervision level and a dynamic-graph based robot controller.

  </description>
  <author>Thomas Moulard</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/dynamic_graph_actionlib</url>

  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>

  <depend package="roscpp"/>
  <depend package="rospy"/>

  <depend package="actionlib_msgs"/>

  <depend package="walk_interfaces"/>

  <depend package="dynamic_graph_bridge"/>
</package><package name="skeleton_markers" path="/trunk/skeleton_markers" repo="pi-robot-ros-pkg" repo_host="http://pi-robot-ros-pkg.googlecode.com/svn">
  <description brief="skeleton_markers">
    Skeleton Markers: Publish a list of joint markers for viewing in RViz
  </description>
  <author>Patrick Goebel</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/skeleton_markers</url>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="visualization_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="openni_camera"/>
  <depend package="openni_tracker"/>
  <depend package="nite"/>
</package><package name="twist_recovery" path="" repo="navigation_experimental" repo_host="https://kforge.ros.org/navigation/experimental">
  <description brief="twist_recovery">

     twist_recovery

  </description>
  <author>Bhaskara Marthi</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/twist_recovery</url>
  <depend package="nav_core"/>
  <depend package="costmap_2d"/>
  <depend package="geometry_msgs"/>
  <depend package="pluginlib"/>
  <depend package="base_local_planner"/>

  <export>
    <nav_core plugin="${prefix}/twist_plugin.xml"/>
  </export>
  
</package><package name="pocketsphinx" path="/trunk/rharmony/pocketsphinx" repo="albany-ros-pkg" repo_host="http://albany-ros-pkg.googlecode.com/svn">
  <description brief="A simple wrapper around pocketsphinx speech recognizer.">
    A simple wrapper around the pocket sphinx speech recognizer, using gstreamer. 
  </description>
  <author>Michael Ferguson</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pocketsphinx</url>
  <depend package="rospy"/>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/><!-- only needed for demo -->
  <depend package="std_srvs"/>
  <rosdep name="gstreamer_pocketsphinx"/>
</package><package name="teleop_head" path="/stacks/pr2_common_alpha/trunk/teleop_head" repo="pr2_common_alpha" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="Contains executable for teleoperation of PR2 head">
  Teleop head keyboard moves the head from keyboard commands. Used in 
  pr2_head_cart. Only works on PR2 head.
  </description>
  <author>Kevin Watts</author>
  <license>BSD</license>
  <review notes="" status="na"/>
  <depend package="joy"/>
  <depend package="sensor_msgs"/>
  <depend package="trajectory_msgs"/>
  <depend package="roscpp"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="cob_skill_api" path="" repo="cob_scenario_states" repo_host="git://github.com/ipa320/cob_scenario_states">
  <description brief="cob_skill_api">

     cob_skill_api

  </description>
  <author>Alexander Bubeck</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_skill_api</url>
  <depend package="rospy"/>
  <depend package="smach"/>

</package><package name="door_perception_msgs" path="/trunk/dynamic_door_manipulation/door_perception_msgs" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="Door related msgs/srvs">
    This package contains the definitions for communicating about doors
  </description>
  <author>Felix Endres</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/door_perception_msgs</url>
  <depend package="std_msgs"/>

</package><package name="stereo_synchronizer" path="/trunk/stereo_synchronizer" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="stereo_synchronizer">

     stereo_synchronizer

  </description>
  <author>yohei kakiuchi, JSK</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/stereo_synchronizer</url>
  <depend package="sensor_msgs"/>
  <depend package="image_transport"/>

</package><package name="odometry_publisher_tutorial" path="" repo="navigation_tutorials" repo_host="https://kforge.ros.org/navigation/tutorials">
  <description brief="odometry_publisher_tutorial">

     odometry_publisher_tutorial

  </description>
  <author>Eitan Marder-Eppstein</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/odometry_publisher_tutorial</url>
  <depend package="roscpp"/>
  <depend package="nav_msgs"/>
  <depend package="tf"/>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="sick_tim3xx" path="" repo="sick_tim3xx" repo_host="http://kos.informatik.uni-osnabrueck.de/sick_tim3xx.git">
  <description brief="A driver for the SICK TiM 3xx laser scanner">

     A ROS driver for the SICK TiM 3xx series of laser scanners. Currently, the
     only supported scanner is the TiM310.

  </description>
  <author>Jochen Sprickerhof, Martin Günther</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sick_tim3xx</url>

  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="driver_base"/>

  <rosdep name="libusb1.0"/>
</package><package name="sr_object_manipulation_launch" path="" repo="sr_object_manipulation" repo_host="lp:sr-manipulation">
  <description brief="sr_object_manipulation_launch">

     sr_object_manipulation_launch

  </description>
  <author>Ugo Cupcic</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sr_object_manipulation_launch</url>
  <depend package="robot_self_filter"/>
  <depend package="household_objects_database"/>
  <depend package="collision_map"/>
  <depend package="object_manipulation_msgs"/>
  <depend package="actionlib_msgs"/>
</package><package name="base_planner_cu" path="/trunk/base_planner_cu" repo="prairiedog" repo_host="http://prairiedog.googlecode.com/svn">
  <description>A 2D Path Planning System</description>
  <author>Michael Otte</author>
  <license>GNU GPL V3</license>
  <review notes="" status="unreviewed"/>
  <url>http://correll.cs.colorado.edu/pmwiki/index.php/Main/PlanningSystemBase/</url>
  <depend package="roscpp"/>
  <depend package="nav_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="mapper_cu"/>
  <depend package="localization_cu"/>
</package><package name="kurtana_pole_joint_commander" path="" repo="kurtana_robot" repo_host="http://kos.informatik.uni-osnabrueck.de/kurtana_robot.git">
  <description brief="kurtana_pole_joint_commander">

     kurtana_pole_joint_commander

  </description>
  <author>Martin Günther</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/kurtana_pole_joint_commander</url>
  <depend package="roscpp"/>
  <depend package="dynamic_reconfigure"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
</package><package name="bfl_boost" path="/branches/fuerte/hector_common/bfl_boost" repo="hector_common" repo_host="https://tu-darmstadt-ros-pkg.googlecode.com/svn">
  <description brief="The Bayesian Filtering Library (latest) with Boost matrix class">

    This package contains a recent version of the Bayesian Filtering
    Library (BFL), distributed by the Orocos Project. Compared to the original bfl package by Klaas Gadeyne et. al., bfl_boost downloads the current 0.8 source release from the Orocos BFL website and applies a small patch to avoid copying of vectors and matrices when accessing its elements.
    The package name bfl_boost emphasizes the fact that the Boost uBLAS library is used as underlying matrix library.

  </description>
  <author>Klaas Gadeyne, Wim Meeussen, Tinne Delaet and many others. See web page for a full contributor list. Boost patch added by Johannes Meyer.</author>
  <license>LGPL</license>
  <url>http://www.orocos.org/bfl</url>
  <export>
    <cpp cflags="-I${prefix}/install/include" lflags="-Wl,-rpath,${prefix}/install/lib  -L${prefix}/install/lib -lorocos-bfl"/>
    <doxymaker external="http://orocos.org/bfl"/>
  </export>

</package><package name="object_manipulator" path="/stacks/object_manipulation/branches/0.6-branch/object_manipulator" repo="object_manipulation" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="object_manipulator">

     Core functionality for pickup and place tasks. Services Pickup
     and Place action goals.

  </description>
  <author>Matei Ciocarlie and Kaijen Hsiao</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/object_manipulator</url>

  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="tf"/>
  <depend package="std_srvs"/>
  <depend package="actionlib"/>
  <depend package="object_manipulation_msgs"/>  
  <depend package="sensor_msgs"/>
  <depend package="kinematics_msgs"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="arm_navigation_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="interpolated_ik_motion_planner"/>
  <depend package="pr2_mechanism_msgs"/>
  <depend package="eigen_conversions"/>
  <depend package="planning_environment"/>
  <depend package="arm_kinematics_constraint_aware"/>

  <depend package="common_rosdeps"/>

  <!--depend package="profiling"/-->

  <export>
    <cpp cflags="`pkg-config --cflags eigen3` -I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lobject_manipulator_tools -lobject_manipulator_grasp_execution -lobject_manipulator_place_execution"/>
  </export>
</package><package name="libpointmatcher_ros" path="" repo="ethzasl_mapping" repo_host="https://github.com/ethz-asl/ros-mapping">
  <description brief="libpointmatcher_ros">

     Bridge between libpointmatcher and ROS.

  </description>
  <author>Stéphane Magnenat</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/libpointmatcher_ros</url>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="tf"/>
  <depend package="tf_conversions"/>
  <depend package="eigen_conversions"/>
  <depend package="libpointmatcher"/>
  <depend package="libnabo"/>
  <rosdep name="eigen"/>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lpointmatcher_ros"/>
  </export>
</package><package name="neo_gazebo_plugins" path="" repo="neo_common" repo_host="https://github.com/neobotix/neo_common">
    <description brief="neo_gazebo_plugins">
	contains a gazebo mecanum controller
    </description>

    neo_gazebo_plugins

    <author>Timo Hackel</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/neo_gazebo_plugins</url>

    <review notes="" status="unreviewed"/>
    <depend package="roscpp"/>
    <depend package="gazebo"/>
    <depend package="gazebo_plugins"/>

    <export>
        <gazebo plugin_path="${prefix}/lib"/>
    </export>
</package><package name="manipulation_transforms" path="/stacks/cart_pushing/trunk/manipulation_transforms" repo="cart_pushing" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="manipulation_transforms">

    manipulation_transforms: a library for mapping poses and twists back and forth
    between an object and the one or more effectors in rigid contact with it.  Can
    be used for querying object position and velocity from effector actions, and 
    for achieving desired object trajectories with the effectors.  This will probably
    see use mainly for 2-arm manipulation tasks like cart pushing.

  </description>
  <author>Jonathan Scholz</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/manipulation_transforms</url>
  <depend package="roscpp"/>
  <depend package="bullet"/>
  <depend package="kdl"/>
  <depend package="tf"/>
  <depend package="tf_conversions"/>
  <depend package="geometry_msgs"/>
  <depend package="std_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/msg/cpp -I${prefix}/srv/cpp" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lmanipulation_transforms"/>
  </export>

  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>

</package><package name="parsec_odometry" path="" repo="parsec" repo_host="https://code.google.com/p/parsec">
  <description brief="parsec_odometry">

     parsec_odometry

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>Apache 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/parsec_odometry</url>
  <depend package="roscpp"/>
  <depend package="pcl"/>
  <depend package="pcl_ros"/>  
  <depend package="laser_geometry"/>
  <depend package="tf"/>
  <depend package="parsec_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="eigen"/>

</package><package name="joint_motion" path="" repo="itasc_tasks" repo_host="http://git.mech.kuleuven.be/robotics/itasc_tasks.git">
    <description brief="Cartesian Motion">
        This package contains a cartesian motion task.
	    Part of the iTaSC-Skill framework, itasc_tasks.
    </description>
    <license>BSD,LGPL</license>
    <author>Dominick Vanthienen</author>
    <url>http://www.orocos.org/itasc</url>
    <depend package="rtt"/>
    <rosdep name="eigen"/>
    <depend package="orocos_kdl"/>
    <depend package="ocl"/>
    <depend package="itasc_core"/>
</package><package name="stereo_webcam" path="" repo="stereo_webcam" repo_host="https://github.com/mkoval/stereo_webcam">
	<description>
		Hardware and software synchronized cameras using physically modified
		PS3 EyeToy cameras.
	</description>
	<author>Michael Koval/koval.michael@gmail.com</author>
	<license>BSD</license>
	<review notes="" status="unreviewed"/>
	<depend package="camera_info_manager"/>
	<depend package="cv_bridge"/>
	<depend package="dynamic_reconfigure"/>
	<depend package="image_transport"/>
	<depend package="opencv2"/>
	<depend package="sensor_msgs"/>
</package><package name="joint_spline_trajectory_generator" path="" repo="orocos_controllers" repo_host="https://github.com/RCPRG-ros-pkg/orocos_controllers">
  <description brief="joint_spline_trajectory_generator">

     joint_spline_trajectory_generator

  </description>
  <author>Konrad Banachowicz</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/joint_spline_trajectory_generator</url>
  <depend package="rtt"/>
  <depend package="ocl"/>
  <depend package="rtt_trajectory_msgs"/>
  <depend package="kdl"/>
</package><package name="srs_arm_navigation_tests" path="" repo="srs_public" repo_host="git://github.com/ipa320/srs_public">
  <description brief="srs_arm_navigation_tests">

This package contains scripts for testing srs_arm_manipulation.

  </description>
  <author>Zdenek Materna/imaterna@fit.vutbr.cz</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/srs_arm_navigation_tests</url>


  <depend package="srs_assisted_arm_navigation_msgs"/>
  <depend package="srs_assisted_grasping_msgs"/>
  <depend package="actionlib_msgs"/>
  <depend package="smach"/>
  <depend package="smach_ros"/>
  <depend package="cob_object_detection_msgs"/>
  <depend package="srs_grasping"/>
  <depend package="srs_object_database_msgs"/>
  <!--depend package="srs_object_database"/-->
  <!--depend package="srs_knowledge"/-->
  <depend package="arm_navigation_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="tf"/>
  <depend package="srs_env_model"/>
  <depend package="srs_env_model_percp"/>
  <depend package="std_msgs"/>
  <depend package="srs_interaction_primitives"/>
  <depend package="srs_states"/>
  
  <export>
    <rosdoc config="rosdoc.yaml"/>
  </export>

</package><package name="cob_hardware_config" path="" repo="cob_robots" repo_host="git://github.com/ipa320/cob_robots">
  <description brief="cob_hardware_config">

     This package contains configuration for each robot instance (e.g. cob3-1, cob3-2,...). There is a directory for each robot with configuration about urdf and hardware/device configurations.

  </description>
  <author>Florian Weisshardt</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_hardware_config</url>

  <depend package="cob_calibration_data"/>
  <depend package="cob_description"/>
  <depend package="raw_description"/>
  <depend package="schunk_description"/>
  <depend package="ur5_description"/>

</package><package name="pr2_pose" path="" repo="pr2_photoshoot" repo_host="https://kforge.ros.org/pr2_photoshoot/pr2_photoshoot">
  <description brief="pr2_pose">

     pr2_pose

  </description>
  <author>Austin Hendrix</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_pose</url>
  <depend package="rospy"/>
  <depend package="actionlib"/>

  <depend package="sensor_msgs"/>
  <depend package="trajectory_msgs"/>
  <depend package="pr2_controllers_msgs"/>

</package><package name="wamros" path="" repo="WAMros" repo_host="https://github.com/LASA-ros-pkg/WAMros">
  <description brief="wamros">
  Wraps the Barrett WAM btclient library for ROS.  Currently position
  control only.
  </description>
  <author>Grollman, D'Halluin, Daniel and Stober - EPFL-LASA</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/wamros</url>
  <depend package="roscpp"/>
  <depend package="std_srvs"/>
  <depend package="wam_msgs"/>
  <depend package="rospy"/> <!-- For teleoperation code. -->
  <depend package="rosbag"/>
 </package><package name="rosie_move_base" path="/stacks/ias_nav/rosie_move_base" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="rosie_move_base">

     rosie_move_base

  </description>
  <author>Lorenz Moesenlechner</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <depend package="move_base"/>

</package><package name="cob_generic_states" path="" repo="cob_scenario_states" repo_host="git://github.com/ipa320/cob_scenario_states">
  <description brief="cob_generic_states">

     This package provides a set of generic states using [[cob_script_server]] and [[smach]] which can be used in multiple scenarios.

  </description>
  <author>Florian Weisshardt</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_generic_states</url>

  <depend package="rospy"/>
  <depend package="smach"/>
  <depend package="smach_ros"/>
  
  <depend package="actionlib_msgs"/>
  <depend package="tf"/>
  <depend package="kinematics_msgs"/>
  
  <depend package="cob_script_server"/>
  <depend package="cob_object_detection_msgs"/>
  <depend package="cob_object_detection_fake"/>
  
  <!-- this dependencies should better be in a separate msgs package to reduce dependencies-->
  <!--depend package="cob_mmcontroller"-->

</package><package name="logitech_libwebcam" path="/trunk/RCF4ROS/devices/logitech_libwebcam" repo="roblab-whge-ros-pkg" repo_host="http://roblab-whge-ros-pkg.googlecode.com/svn">
  <description brief="logitech_libwebcam">

     This package makes the Logitech libwebcam available for ROS.

  </description>
  <author>Logitech, Maintained by B. Fabricius</author>
  <license>CreativeCommons BY-NC-SA License</license>
  <review notes="" status="3rdparty"/>
  <url>http://ros.org/wiki/logitech_libwebcam</url>
  <rosdep name="libxml2-dev"/>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lwebcam "/>
  </export>  
</package><package name="demo1_sung" path="/trunk/cturtle/demo1/demo1_sung" repo="seabee3-ros-pkg" repo_host="http://seabee3-ros-pkg.googlecode.com/svn">
  <description brief="demo1_sung">

     demo1_sung

  </description>
  <author>Kaylyn Sung</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/demo1_sung</url>
  <depend package="roscpp"/>
  <depend package="base_libs"/>

</package><package name="cortex_stream" path="/trunk/cortex_stream" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="cortex_stream">
     A ROS interface for the Motion Analysis (Cortex) Motion Capture System's Network Stream
  </description>
  <author>Daniel Maier</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cortex_stream</url>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="tf"/>
  <depend package="visualization_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="eigen"/>
  <depend package="eigen_conversions"/>

</package><package name="neo_platformctrl_mecanum" path="" repo="neo_driver" repo_host="https://github.com/neobotix/neo_driver">
  <description brief="neo_platformctrl_mecanum">

     neo_platformctrl_mecanum

  </description>
  <author>Timo Hackel</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/neo_platformctrl_mecanum</url>

  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="trajectory_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="tf"/>
  <export>
    <cpp cflags="-I${prefix}/common/include -I${prefix}/ros/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lneo_platformctrl_mecanum"/>
  </export>


</package><package name="wam_msgs" path="/trunk/wam_common/wam_msgs" repo="barrett-ros-pkg" repo_host="http://web.barrett.com/svn/barrett-ros-pkg">
  <description brief="wam_msgs">

     This Package contains WAM / BarrettHand specific messages.

  </description>
  <author>Barrett Technology Inc., Kyle Maroney</author>
  <license>BSD</license>
  <url>http://ros.org/wiki/wam_msgs</url>

</package><package name="rtt_visualization_msgs" path="" repo="rtt_common_msgs" repo_host="http://git.mech.kuleuven.be/robotics/rtt_common_msgs.git">
  <description brief="rtt_visualization_msgs">

    Provides an rtt typekit for ROS visualization_msgs messages.

    It allows you to use ROS messages transparently in
    RTT components and applications.

    This package was automatically generated by the
    create_rtt_msgs generator and should not be manually
    modified.

    See the http://ros.org/wiki/visualization_msgs documentation
    for the documentation of the ROS messages in this
    typekit.

  </description>
  <author>create_rtt_msgs Generator</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rtt_rosnode</url>
  <depend package="rtt_rosnode"/>
  <depend package="visualization_msgs"/>
  <depend package="rtt_std_msgs"/>
  <depend package="rtt_rosgraph_msgs"/>
  <depend package="rtt_geometry_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>


</package><package name="accompany_example_publish_subscribe" path="" repo="accompany" repo_host="git://github.com/ipa320/accompany">
  <description brief="accompany_example_publish_subscribe">

     accompany_example_publish_subscribe is an example package that implements a publishing component, i.e. a component that permanently provides a data stream, and a subribing component that constantly receives this data stream.

  </description>
  <author>Richard Bormann</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/accompany_example_publish_subscribe</url>

  <depend package="roscpp"/>
  <depend package="std_msgs"/> 

</package><package name="python_tutorial" path="/ros/packages/python_tutorial" repo="eohan" repo_host="http://tools.pushkar.name/ext">
  <description brief="python_tutorial">

     python_tutorial

  </description>
  <author>eohan</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/python_tutorial</url>
  <depend package="std_msgs"/>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="rosbag"/>
  <depend package="tf"/>
  <depend package="kdl"/>
</package><package name="kingfisher_bringup" path="/trunk/clearpath_kingfisher/kingfisher_bringup" repo="clearpath-ros-pkg" repo_host="http://clearpath-ros-pkg.googlecode.com/svn">
  <description brief="kingfisher_bringup">
    This package provides launch files which bring up the Kingfisher
    base platform and sensors in recommended configurations.
  </description>
  <author>Mike Purvis</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/kingfisher_bringup</url>
  <depend package="clearpath_bringup"/>
  <depends pkg="clearpath_base"/>
</package><package name="irobotron_description" path="/trunk/irobotron_description" repo="hacdc-ros-pkg" repo_host="http://hacdc-ros-pkg.googlecode.com/svn">
    <description brief="URDF for IROBOTRON">
	Derived from Jeff Rousseau's irobot_create_description ROS package, modified to include a torso and camera.
    </description>
    <author>Andrew Harris</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/irobotron_description</url>

    <depend package="urdf"/>
    <depend package="xacro"/>
    <depend package="gazebo"/>
    <depend package="gazebo_tools"/>
    <depend package="fake_localization"/>
    <depend package="erratic_gazebo_plugins"/>

    <export>
        <gazebo gazebo_media_path="${prefix}"/>
    </export>

</package><package name="door_msgs" path="" repo="pr2_doors" repo_host="https://kforge.ros.org/doors/hg">
  <description brief="door_msgs">
    Messages for door opening
  </description>
  <author>Wim Meeussen</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://pr.willowgarage.com/wiki</url>
  <depend package="geometry_msgs"/>
  <depend package="actionlib_msgs"/>
  <export>
    <cpp cflags=""/>
  </export>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="pythonmodules" path="" repo="flyatar" repo_host="http://github.com/peterpolidoro/Flyatar">
  <description brief="pythonmodules">

     pythonmodules

  </description>
  <author>XYFly</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pythonmodules</url>
  <depend package="rospy"/>

</package><package name="nav_core" path="" repo="navigation" repo_host="https://kforge.ros.org/navigation/navigation">
  <description brief="nav_core">

This package provides common interfaces for navigation specific robot actions. Currently, this package provides the BaseGlobalPlanner, BaseLocalPlanner, and RecoveryBehavior interfaces, which can be used to build actions that can easily swap their planner, local controller, or recovery behavior for new versions adhering to the same interface.

  </description>
  <author>Eitan Marder-Eppstein</author>
  <license>BSD</license>
  <review notes="" status="Doc reviewed"/>
  <url>http://ros.org/wiki/nav_core</url>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="costmap_2d"/>
  <depend package="tf"/>
  <export>
    <cpp cflags="-I${prefix}/include"/>
  </export>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="capabilities_msgs" path="/trunk/capabilities/capabilities_msgs" repo="vanadium-ros-pkg" repo_host="http://vanadium-ros-pkg.googlecode.com/svn">
  <description brief="Messages for the capabilties system">
    Provides message and service definitions for a ROS capabilities system.
  </description>
  <author>Michael Ferguson</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/capabilities_msgs</url>
</package><package name="schunk_kinematics" path="" repo="uuisrc-ros-pkg" repo_host="https://github.com/cburbridge/uuisrc-ros-pkg">
  <description brief="schunk_kinematics">

     Schunk arm kinematics
     
     This is essentially David Lu's kinematics node with the addition of 
     inverse velocity kinematics.

  </description>
  <author>David Lu!! // Chris Burbridge</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <depend package="roscpp"/>
  <depend package="tf"/>
  <depend package="sensor_msgs"/>
  <depend package="tf_conversions"/>
  <depend package="kdl_parser"/>
  <depend package="kinematics_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="motion_planning_msgs"/>

</package><package name="kobuki_comms" path="" repo="kobuki" repo_host="https://github.com/yujinrobot/kobuki">
  <description brief="Kobuki message and service types">
    <p>
      Custom messages and services for the Kobuki packages.
    </p> 
  </description>
  <author>Daniel Stonier, 주영훈</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://www.ros.org/wiki/kobuki_comms</url>
  <export>
    <cpp cflags="-I${prefix}/msg_gen/cpp/include -I${prefix}/srv_gen/cpp/include"/>
  </export>
</package><package name="cyphy_mk_ui" path="" repo="cyphy_legacy" repo_host="http://launchpad.net/cyphy">
  <description brief="cyphy_mk_ui">

     cyphy_mk_ui

  </description>
  <author>Inkyu Sa</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cyphy_mk_ui</url>


  <rosdep name="qt4"/>

  <!-- rosbuild1 -->
  <depend package="qt_build"/>
  <depend package="roscpp"/>
  <depend package="geometry_msgs"/>
  
  <rosbuild2>
    <depend package="qt_build"/>
    <depend package="roscpp"/>
  </rosbuild2>
  
</package><package name="rosjava_tutorial_pubsub" path="" repo="rosjava_core" repo_host="https://code.google.com/p/rosjava/">
  <description brief="rosjava_tutorial_pubsub">
     rosjava_tutorial_pubsub is a simple example project.
  </description>
  <author>Damon Kohler</author>
  <license>Apache 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosjava_tutorial_pubsub</url>
</package><package name="ompl_ros_interface" path="" repo="arm_navigation" repo_host="https://kforge.ros.org/armnavigation/armnavigation">
  <description brief="ompl_ros_interface">

     ompl_ros_interface

  </description>
  <author>Sachin Chitta</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ompl_ros_interface</url>

  <depend package="sensor_msgs"/>
  <depend package="planning_models"/>
  <depend package="planning_environment"/>
  <depend package="arm_navigation_msgs"/>

  <depend package="kinematics_base"/>
  <depend package="pluginlib"/>

  <rosdep name="ompl"/>

  <export>
    <cpp cflags="-I${prefix}/msg/cpp -I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lompl_ros_interface `rosboost-cfg --lflags thread`"/>
  </export>


</package><package name="cyton_node" path="/trunk/rtcus_applications/cyton_node" repo="rtc-us-ros-pkg-trunk" repo_host="https://rtc-us-ros-pkg.svn.sourceforge.net/svnroot/rtc-us-ros-pkg">
  <description brief="cython_node">

     cython_node

  </description>
  <author>Pablo Iñigo Blasco</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cython_node</url>
  <depend package="cyton_driver"/>
  <depend package="rospy"/>
  <depend package="tf"/>
  <depend package="kdl"/>
  <depend package="sensor_msgs"/>

</package><package name="manipulation_worlds" path="/stacks/pr2_object_manipulation/branches/0.6-branch/applications/manipulation_worlds" repo="pr2_object_manipulation" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="manipulation_worlds">

     manipulation_worlds

  </description>
  <author>Matei Ciocarlie</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/manipulation_worlds</url>

  <depend package="gazebo"/>
  <depend package="gazebo_worlds"/>
  <depend package="pr2_gazebo"/>
  <depend package="pr2_description"/>
  <depend package="pr2_controller_configuration_gazebo"/>

  <export>
    <gazebo gazebo_media_path="${prefix}"/>
  </export>
</package><package name="jsk_pr2_accessories" path="/trunk/jsk_pr2_accessories" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="jsk_pr2_accessories">

     jsk_pr2_accessories

  </description>
  <author>Haseru Chen, Masahiko Osada</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/jsk_pr2_accessories</url>

</package><package name="zeroconf_avahi" path="" repo="zeroconf_implementations" repo_host="https://github.com/stonier/zeroconf_implementations">
  <description brief="zeroconf services on avahi for ros">

     Provides zeroconf services on avahi for ros systems.
     This is a c++ implementation.

  </description>
  <author>Daniel Stonier</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/zeroconf_avahi</url>
  
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="roslib"/>
  <depend package="std_msgs"/>
  <depend package="zeroconf_comms"/>
  
  <rosdep name="libavahi-core-dev"/>
  <rosdep name="libavahi-client-dev"/>
  <rosdep name="avahi-daemon"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lzeroconf_avahi"/>
  </export>

</package><package name="esc_test" path="/trunk/extremum_seeking/esc_test" repo="dri-ros-pkg" repo_host="https://svn.3me.tudelft.nl/dri-ros-pkg">
  <description brief="esc_test">

     Testing node for extremum seeking control

  </description>
  <author>Wouter Caarls</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/esc_test</url>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="esc_ros"/>

</package><package name="openni" path="" repo="openni_kinect" repo_host="https://kforge.ros.org/openni/openni_ros">
  <description brief="openni">

     Wrapper package for the 'openni-dev' rosdep. This package is deprecated
     in Fuerte; compile directly against the system dependency instead. See
     the wiki docs for migration instructions.

  </description>
  <author>Wim Meeussen</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/openni</url>

  <export>
    <cpp cflags="-I/usr/include/openni" lflags="-lOpenNI -lusb-1.0"/>
  </export>

  <rosdep name="openni-dev"/>

</package><package name="riq_hand_cli" path="/stacks/riq_hand/trunk/riq_hand_cli" repo="riq_hand" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="riq_hand_cli">

     riq_hand_cli

  </description>
  <author>Derek King</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/riq_hand_cli</url>
  <depend package="rospy"/>
  <depend package="riq_msgs"/>

</package><package name="phidgets_py_api" path="/trunk/arrg/ua_drivers/phidgets_py_api" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
  <description brief="The Phidgets Python API">

    This package contains the Official Phidgets Python API.

  </description>
  <author>Phidgets, Inc.</author>
  <license>Creative Commons Attribution 2.5 Canada License</license>
  <url>http://www.phidgets.com/programming_resources.php</url>
  <depend package="phidgetspp_c_api"/>
</package><package name="summit_xl_description" path="/trunk/trunk/summit_xl_sim_fuerte/summit_xl_description" repo="summit-xl-ros-stack" repo_host="http://summit-xl-ros-stack.googlecode.com/svn">
  <description brief="summit_xl_description">

     summit_xl_description

  </description>
  <author>Roberto</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/summit_xl_description</url>
  <depend package="roscpp"/>
  <depend package="std_srvs"/>
  <depend package="std_msgs"/>
  <depend package="tf"/>

</package><package name="stargazer_cu" path="/trunk/stargazer_cu" repo="prairiedog" repo_host="http://prairiedog.googlecode.com/svn">
  <description brief="stargazer_cu">

     indoor global positioning system for use with stargazer sensor

  </description>
  <author>common</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://correll.cs.colorado.edu/pmwiki/index.php/Main/PositioningSystemBase</url>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="geometry_msgs"/>

</package><package name="nelson" path="/trunk/albany_robots/nelson" repo="albany-ros-pkg" repo_host="http://albany-ros-pkg.googlecode.com/svn">
  <description brief="nelson">
    Configuration and launch files for Nelson
  </description>
  <author>Michael Ferguson</author>
  <license>BSD</license>

  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/nelson</url>

  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="social_msgs"/>
  <depend package="arbotix_python"/>
  <depend package="arbotix_msgs"/>
  <depend package="tf"/>
  <depend package="irobot_create_2_1"/>

</package><package name="pr2_description" path="/stacks/pr2_common/trunk/pr2_description" repo="pr2_common" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_description">

  This package contains the description (mechanical, kinematic, visual,
  etc.) of the PR2 robot.  The files in this package are parsed and used by
  a variety of other components.  Most users will not interact directly
  with this package.

  </description>
  <author>John Hsu, Eric Berger</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_description</url>
  <depend package="convex_decomposition"/>
  <depend package="ivcon"/>
  <depend package="urdf"/> <!-- Testing -->
  <depend package="xacro"/> <!-- Testing -->
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="armadillo_calibration" path="/trunk/swri_demos/armadillo_calibration" repo="swri-ros-pkg" repo_host="http://swri-ros-pkg.googlecode.com/svn">
  <description brief="armadillo_calibration">

     armadillo_calibration

  </description>
  <author>Michael Ferguson</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/armadillo_calibration</url>
  <depend package="armadillo"/>
  <!--<depend package="calibration_estimation"/-->
  <!--<depend package="calibration_launch"/-->

</package><package name="rosjava_bootstrap" path="" repo="rosjava_core" repo_host="https://code.google.com/p/rosjava/">
  <description brief="rosjava_bootstrap">
    rosjava_bootstrap provides classes required for message generation.
  </description>
  <author>Ken Conley, Damon Kohler (damonkohler@google.com)</author>
  <license>Apache 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosjava_bootstrap</url>
</package><package name="ccny_asctec_firmware" path="" repo="asctec_drivers" repo_host="https://github.com/ccny-ros-pkg/asctec_drivers">
  <description brief="ccny_asctec_firmware">

     Firmware for the Asctec Autopilot HighLevel Processor, in part based on asctec_hl_firmware by Achtelik et al. For the older (pre-2012) version of the asctec HL/LL SDK.

  </description>
  <author>Ivan Dryanovski, Roberto G. Valenti</author>
  <license>sdk.c/sdk.h: BSD; HL SDK, SSDK lib by AscTec</license>
  <review notes="Under active development" status="unreviewed"/>
  <url>http://ros.org/wiki/ccny_asctec_firmware</url>
</package><package name="hippo_teleop" path="/trunk/sandbox/hippo_teleop" repo="vanadium-ros-pkg" repo_host="http://vanadium-ros-pkg.googlecode.com/svn">
  <description brief="hippo_teleop">

     hippo_teleop

  </description>
  <author>Melonee Wise, Michael Ferguson</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hippo_teleop</url>
  <depend package="joy"/>
  <depend package="geometry_msgs"/>
  <depend package="roscpp"/>

</package><package name="humanoid_recognizers" path="/trunk/humanoid/humanoid_recognizers" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="humanoid_recognizers">

     humanoid_recognizers

  </description>
  <author>Edward T. Kaszubski ( ekaszubski@gmail.com )</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/humanoid_recognizers</url>
  <depend package="quickdev_cpp"/>
  <depend package="nodelet"/>
  <depend package="humanoid_models"/>
  <depend package="visualization_msgs"/>
  <depend package="kdl"/>
  <depend package="kdl_parser"/>
  <depend package="tf_conversions"/>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -lhumanoid_recognizers"/>
    <nodelet plugin="${prefix}/nodelets/nodelet_plugins.xml"/>
  </export>
</package><package name="life_test" path="/stacks/wg_hardware_test/trunk/life_test" repo="wg_hardware_test" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="Runs life/burn-in tests on PR2 components and robots">
    This package contains the scripts needed to run burn in and life tests on PR2 components.

    Use Test Manager to run tests:
    roscd life_test
    ./test_manager.py
  </description>
  <author>Kevin Watts</author>
  <review notes="" status="na"/>
  <license>BSD</license>
  <url>http://www.ros.org/wiki/life_test</url>
  <depend package="pr2_component_descriptions"/>
  <depend package="pr2_controller_configuration"/>
  <depend package="pr2_etherCAT"/>
  <depend package="pr2_power_board"/>
  <depend package="pr2_mechanism_controllers"/>
  <depend package="robot_mechanism_controllers"/>
  <depend package="pr2_controller_manager"/>
  <depend package="pr2_bringup"/>
  <depend package="runtime_monitor"/>
  <depend package="wg_invent_client"/>
  <depend package="diagnostic_msgs"/>
  <depend package="roslaunch_caller"/>
  <depend package="pr2_mechanism_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="robot_state_publisher"/>
  <depend package="wge100_camera"/>
  <depend package="rospy"/>
  <depend package="sensor_msgs"/>
  <depend package="std_srvs"/>
  <depend package="hokuyo_node"/>
  <depend package="joint_qualification_controllers"/>
  <depend package="ectools"/>
  <depend package="pr2_camera_synchronizer"/>
  <depend package="pr2_drive_life_test"/>
  <depend package="robot_monitor"/>
  <depend package="pr2_teleop"/>
  <depend package="joy"/>
  <depend package="pr2_hardware_test_monitor"/>
  <depend package="pr2_self_test_msgs"/>
  <depend package="rosbag"/>
  <depend package="pr2_transmission_check"/>
  
  <!-- Unit test -->
  <depend package="rostopic"/>

  <!-- Arm planning stuff -->
  <depend package="planning_environment"/>
  <depend package="collision_free_arm_trajectory_controller"/>
  <depend package="trajectory_filter_server"/>
  <depend package="pr2_arm_navigation_actions"/>
  <depend package="joint_trajectory_action"/>
  <depend package="arm_navigation_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/msg/cpp"/>
  </export>
  <rosdep name="wxwidgets"/>
  <rosdep name="wxpython"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="pr2_dashboard_aggregator" path="/stacks/pr2_common/trunk/pr2_dashboard_aggregator" repo="pr2_common" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_dashboard_aggregator">
    A simple script that aggregates all of the topics that a &quot;pr2_dashboard&quot; app might be interested in.
  </description>
  <author>Rob Wheeler</author>
  <license>BSD</license>
  <review notes="" status="Doc Reviewed"/>
  <url>http://ros.org/wiki/pr2_dashboard_aggregator</url>
  <depend package="rospy"/>
  <depend package="std_msgs"/>
  <depend package="pr2_msgs"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="transport_test" path="/trunk/hwu_osl_common/transport_test" repo="hwu-osl-ros-pkg" repo_host="http://hwu-osl-ros-pkg.googlecode.com/svn">
  <description brief="transport_test">

     transport_test

  </description>
  <author>Joel Cartwright</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/transport_test</url>
  <depend package="roscpp"/>
  <depend package="nav_msgs"/>
  <depend package="nodelet"/>

  <export>
    <nodelet plugin="${prefix}/transport_test.xml"/>
  </export>
  
</package><package name="lwpr" path="" repo="usc-clmc-ros-pkg" repo_host="https://github.com/usc-clmc/usc-clmc-ros-pkg">
  <description brief="lwpr">

     lwpr

  </description>
  <author>Peter Pastor</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/lwpr</url>
  
  <depend package="roscpp"/>
  <depend package="lwpr_lib"/>
  <depend package="usc_utilities"/>
    
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -llwpr"/>
  </export>
  
</package><package name="rosh_geometry" path="" repo="rosh_robot_plugins" repo_host="https://kforge.ros.org/rosh/rosh_robot_hg">
  <description brief="ROSH geometry plugin">

     ROSH plugin for the geometry stack, including tf.

  </description>
  <author>Ken Conley</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosh_geometry</url>
  <depend package="roslib"/>
  <depend package="rospy"/>
  <depend package="tf"/>
  <depend package="geometry_msgs"/>
  <depend package="rosh"/>

</package><package name="robot_emotions" path="/trunk/robot_emotions" repo="hacdc-ros-pkg" repo_host="http://hacdc-ros-pkg.googlecode.com/svn">
  <description brief="robot_emotions">

     This node maps robot state to robot emotion.

  </description>
  <author>andrewha</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/robot_emotions</url>
  <depend package="std_msgs"/>
  <depend package="rospy"/>
  <depend package="roscpp"/>
  <depend package="irobot_create_2_1"/>

</package><package name="label_scene_3D" path="/trunk/recognition/label_scene_3D" repo="ubc-ros-pkg" repo_host="https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg">
  <description brief="label_scene_3D">

     label_scene_3D - This module performs scene labeling infernce. Based on a number of classifier responses and the scene geometry, finds the set of objects that's most likely to be present.

  </description>
  <author>Scott Helmer, David Meger and Marius Muja</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/label_scene_3D</url>

  <depend package="opencv2"/>
  <depend package="UBC_VRS_utils"/>


</package><package name="color_picker" path="/trunk/OIT/color_picker" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="color_picker">

     color_picker

  </description>
  <author>David Feil-Seifer</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/color_picker</url>
  <depend package="roscpp"/>
  <depend package="sensor_msgs"/>
  <depend package="cv_bridge"/>
  <depend package="opencv2"/>

</package><package name="guardian_description" path="/trunk/guardian_description" repo="guardian-ros-pkg" repo_host="http://guardian-ros-pkg.googlecode.com/svn">
  <description brief="guardian_description">
  This stack contains the urdf, meshes, and other elements 
  needed in the visual and physical description of the robot.
  </description>
  <author>Robotnik Automation SLL</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/guardian_description</url>
  <depend package="gazebo"/>
  <export>
	<gazebo gazebo_media_path="${prefix}"/>
  </export>

</package><package name="cob_image_capture" path="" repo="cob_calibration" repo_host="git://github.com/ipa320/cob_calibration">
  <description brief="cob_image_capture">

     This package implements a image capture node which subscribes to one or more
     image topics and dumps jpg files to the filesystem every time the capture()
     service is called.

  </description>
  <author>Sebastian Haug</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_image_capture</url>

  <depend package="cv_bridge"/>
  <depend package="sensor_msgs"/>
  <depend package="message_filters"/>

  <depend package="cob_calibration_srvs"/>

  <rosdep name="opencv2"/>
</package><package name="android_benchmarks" path="" repo="android_core" repo_host="https://code.google.com/p/rosjava.android/">
  <description brief="android_tutorial_pubsub">
     android_tutorial_pubsub
  </description>
  <author>Damon Kohler</author>
  <license>Apache 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/android_tutorial_pubsub</url>
</package><package name="bayes_filter_ros" path="" repo="turbo-ros-pkg" repo_host="https://github.com/tu-rbo/turbo-ros-pkg">
  <description brief="Bayes++, the Bayesian Filtering Library">

    bayes_filter (Bayes++) is an open source library of C++ classes. These classes represent and implement a wide variety of numerical algorithms for Bayesian Filtering of discrete systems. The classes provide tested and consistent numerical methods and the class hierarchy explicitly represents the variety of filtering algorithms and system model types

  </description>
  <author>Miquel Massot</author>
  <license>Copyright (c) 2003,2004,2005 Michael Stevens, Copyright (c) 2002 Michael Stevens and Australian Centre for Field Robotics</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/bayes_filter</url>

  <export>
    <cpp cflags="-I${prefix}/src/" lflags="-L${prefix}/lib -Wl,-rpath,${prefix}/lib -lBayesFilter -llapack"/>
    <!-- lflags="-l${prefix}/lib/libBayesFilter.a"/> -->
  </export>

</package><package name="pr2_2dnav_gazebo" path="/stacks/wg_robots_gazebo/trunk/pr2_2dnav_gazebo" repo="wg_robots_gazebo" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description>A clone of  2-D navigation stack \b rosstage using a 3D simulation environment.</description>
  <author>John Hsu</author>
  <license>BSD</license>
  <review notes="" status="NA"/>
  <url>http://pr.willowgarage.com/wiki/Simulator</url>
  <depend package="std_msgs"/>
  <depend package="move_base"/>
  <depend package="map_server"/>
  <depend package="amcl"/>
  <depend package="fake_localization"/>
  <depend package="pr2_gazebo"/>
  <depend package="pr2_gazebo_plugins"/>
  <depend package="gazebo_plugins"/>
  <depend package="gazebo_worlds"/>
  <depend package="gazebo_tools"/>
  <depend package="rviz"/>
  <depend package="pr2_navigation_perception"/>
  <depend package="pr2_navigation_teleop"/>
  <depend package="pr2_navigation_global"/>
  <depend package="pr2_machine"/>
  <depend package="pr2_tuckarm"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="reem_controller_plugin" path="" repo="reem_plugins" repo_host="https://github.com/pal-robotics/reem_plugins">
  <description brief="reem_controller_plugin">

     Reem controller plugin

  </description>
  <author>Jose Capriles</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <depend package="gazebo"/>
  <depend package="nav_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="sensor_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/include" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib"/>
    <gazebo plugin_path="${prefix}/lib"/>
  </export>

</package><package name="misc_behaviors" path="" repo="gt-ros-pkg.hrl" repo_host="https://code.google.com/p/gt-ros-pkg.hrl">
  <description brief="misc_behaviors">
     Misc. PR2 behaviors that are either actionlib, ROS service, or just smach-ready.
  </description>
  <author>Travis Deyle</author>
  <license>BSD</license>
  <url>http://ros.org/wiki/misc_behaviors</url>
  <depend package="rospy"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="smach"/>
  <depend package="smach_ros"/>
  <depend package="pr2_controllers_msgs"/>
  <depend package="trajectory_msgs"/>
</package><package name="roseus" path="/trunk/roseus" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="An EusLisp implementation of ROS using roscpp">EusLisp implementation for Robot Operating System.</description>
  <author>Kei Okada (k-okada@jsk.t.u-tokyo.ac.jp)</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <depend package="roslang"/>
  <depend package="roscpp"/>
  <depend package="rospack"/>
  <depend package="euslisp"/>
  <depend package="actionlib"/>
  <depend package="actionlib_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="bullet"/>
  <depend package="tf"/>
  <depend package="geometry_msgs"/>
  <depend package="std_msgs"/>
  <depend package="std_srvs"/>
  <depend package="sensor_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="actionlib_tutorials"/> <!-- for test-fibonacci.test -->
  <rosdep name="coreutils"/> <!-- for md5sum -->
  <export>
    <roslang cmake="${prefix}/cmake/roseus.cmake"/>
  </export>
  <url>http://pr.willowgarage.com/wiki/roseus</url>
  <export>
    <cpp cflags="-I${prefix}/msg/cpp"/>
  </export>
</package><package name="social_msgs" path="/trunk/albany_robots/social_msgs" repo="albany-ros-pkg" repo_host="http://albany-ros-pkg.googlecode.com/svn">
  <description brief="social_msgs">
    A collection of message and server prototypes for social robotics. 
  </description>
  <author>Michael E. Ferguson</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/social_msgs</url>

  <depend package="std_msgs"/>
  <depend package="rospy"/>
  <depend package="roscpp"/>

  <export>
    <cpp cflags="-I${prefix}/msg/cpp -I{prefix}/srv/cpp"/>
  </export>

</package><package name="pr2_make_a_map_app" path="" repo="pr2_make_a_map_app" repo_host="https://kforge.ros.org/pr2apps/pr2_make_a_maphg">
  <description brief="Make A Map for the PR2">
   Make maps using the PR2 robot.
  </description>
  <author>Tony Pratkanis</author>
  <license>BSD</license>
  <url>http://ros.org/wiki/make_a_map</url>
  <review notes="" status="na"/>
  <depend package="pr2_position_scripts"/>
  <depend package="gmapping"/>
  <depend package="tf"/>
  <depend package="mongodb"/>
  <depend package="topic_tools"/>
  <depend package="map_store"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="indomptable_arm_navigation" path="" repo="smart-robotics-ros-pkg" repo_host="https://github.com/JBot/smart-robotics-ros-pkg">
  <description brief="indomptable_arm_navigation">

     indomptable_arm_navigation

  </description>
  <author>Jbot</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/indomptable_arm_navigation</url>
  <depend package="planning_environment"/>
  <depend package="arm_kinematics_constraint_aware"/>
  <depend package="ompl_ros_interface"/>
  <depend package="trajectory_filter_server"/>
  <depend package="constraint_aware_spline_smoother"/>
  <depend package="move_arm"/>

</package><package name="neato_node" path="/trunk/neato_robot/neato_node" repo="albany-ros-pkg" repo_host="http://albany-ros-pkg.googlecode.com/svn">
  <description brief="A node wrapper for the neato_driver package">
    This package contains a node that connects to the Neato Robotics XV-11. It enables control of motors through a geometry_msgs/Twist topic and publishes laser scans and odometry.
  </description>
  <author>Michael Ferguson</author>
  <email>ferguson@cs.albany.edu</email>
  <license>BSD</license>

  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/neato_node</url>

  <depend package="neato_driver"/>
  <depend package="rospy"/>
  <depend package="sensor_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="tf"/>
</package><package name="state_manager" path="" repo="pandora-auth-ros-pkg" repo_host="https://github.com/pandora-auth-ros-pkg/pandora-auth-ros-pkg">
  <description brief="state_manager">

     A simple State Manager

  </description>
  <author>Allamanis Miltiadis, Marina Stamadiadou</author>
  <license>MIT</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/stateManager</url>
  <depend package="roscpp"/>
  <depend package="state_manager_communications"/>
  <depend package="diagnostic_updater"/>
  <export>
    <cpp cflags="-I${prefix}/include" lflags="-L${prefix}/lib"/>
  </export>

</package><package name="tour_guide_base" path="" repo="cwru-ros-pkg" repo_host="http://github.com/cwru-robotics/cwru-ros-pkg">
  <description brief="tour_guide_base">

     tour_guide_base

  </description>
  <author>Jesse</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/tour_guide_base</url>

</package><package name="parsec_pinger" path="" repo="parsec" repo_host="https://code.google.com/p/parsec">
  <description brief="parsec_pinger">

     parsec_pinger

  </description>
  <author>Lorenz Mosenlechner</author>
  <license>Apache 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/parsec_pinger</url>
  <depend package="roscpp"/>
  <depend package="std_msgs"/>

</package><package name="hrp4_pan_tilt" path="/trunk/jsk_android_apps_api9/hrp4_pan_tilt" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="hrp4_pan_tilt">

     hrp4_pan_tilt

  </description>
  <author>Manabu Saito</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hrp4_pan_tilt</url>

  <depend package="hrpsys"/>

</package><package name="cob_interpolated_ik_motion_planner" path="" repo="cob_manipulation" repo_host="git://github.com/ipa320/cob_manipulation">
  <description brief="cob_interpolated_ik_motion_planner">
    Overlay version of interpolated_ik_motion_planner for Care-O-bot
  </description>
  <author>Kaijen Hsiao</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_interpolated_ik_motion_planner</url>
  <depend package="rospy"/>
  <depend package="kinematics_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="arm_navigation_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="trajectory_msgs"/>

  <export>
    <cpp cflags="-I${prefix}/srv/cpp"/>
  </export>

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package><package name="hector_mapping" path="/branches/fuerte/hector_slam/hector_mapping" repo="hector_slam" repo_host="https://tu-darmstadt-ros-pkg.googlecode.com/svn">
  <description brief="hector_mapping is a SLAM approach that can be used without odometry as well as on platforms that exhibit roll/pitch motion (of the sensor, the platform or both).">
hector_mapping is a SLAM approach that can be used without odometry as well as on platforms that exhibit roll/pitch motion (of the sensor, the platform or both). It leverages the high update rate of modern LIDAR systems like the Hokuyo UTM-30LX and provides 2D pose estimates at scan rate of the sensors (40Hz for the UTM-30LX). While the system does not provide explicit loop closing ability, it is sufficiently accurate for many real world scenarios. The system has successfully been used on Unmanned Ground Robots, Unmanned Surface Vehicles, Handheld Mapping Devices and logged data from quadrotor UAVs.

  </description>
  <author>Stefan Kohlbrecher</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.ros.org/wiki/hector_mapping</url>
  <depend package="roscpp"/>
  <depend package="nav_msgs"/>
  <depend package="visualization_msgs"/>
  <depend package="tf"/>
  <depend package="message_filters"/>
  <depend package="laser_geometry"/>
  <depend package="tf_conversions"/>

  <rosdep name="eigen"/>

</package><package name="move_pr2" path="/trunk/gestures/move_pr2" repo="ubc-ros-pkg" repo_host="https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg">
  <description brief="move_pr2">

     move_pr2

  </description>
  <author>caris</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/move_pr2</url>
  <depend package="geometry_msgs"/>
  <depend package="roscpp"/>

</package></pkgs>