- 'brief': 'Console logging library for roscpp'
  'description': 'ROS console output library.'
  'name': 'rosconsole'
  'repo': 'ros_comm'
- 'brief': 'waypoint_controller'
  'description': "\n\n     waypoint_controller\n\n  "
  'name': 'waypoint_controller'
  'repo': 'seabee3-ros-pkg'
- 'brief': 'neo_watchdogs'
  'description': "\n\n     neo_watchdogs\n\n  "
  'name': 'neo_watchdogs'
  'repo': 'neo_driver'
- 'brief': 'Ros embedded development python tools.'
  'description': "\n\n  <p>\n  Provides python tools to aid in embedded development\
    \ with the ros.\n  </p>\n  \n  "
  'name': 'eros_python_tools'
  'repo': 'eros'
- 'brief': 'parsec_simulation_stage'
  'description': "\n\n     parsec_simulation_stage\n\n  "
  'name': 'parsec_simulation_stage'
  'repo': 'parsec'
- 'brief': 'hrl_object_fetching'
  'description': "\n\n     hrl_object_fetching\n\n  "
  'name': 'hrl_object_fetching'
  'repo': 'gt-ros-pkg'
- 'brief': 'schunk_bringup'
  'description': "\n\n     schunk_bringup\n\n  "
  'name': 'schunk_bringup'
  'repo': 'schunk_robots'
- 'brief': ''
  'description': 'A simple SwissRanger viewer'
  'name': 'swissranger_visualizer'
  'repo': 'tum-ros-pkg'
- 'brief': 'test_bond'
  'description': "\n\n     Contains tests for [[bond]], including tests for [[bondpy]]\
    \ and [[bondcpp]].\n\n  "
  'name': 'test_bond'
  'repo': 'bond_core'
- 'brief': ''
  'description': ''
  'name': 'view_meshset3d'
  'repo': 'bosch-ros-pkg'
- 'brief': 'Move multiple robots in kaleidoscopic patterns.'
  'description': "\nThis node allow a group of robots to be moved in kaleidoscopic\
    \ patterns to achieve primitive robot ballet.\n  "
  'name': 'robot_kaleidoscope'
  'repo': 'wg-ros-pkg'
- 'brief': 'pr2_build_map_gazebo_demo'
  'description': "\n\n     Map building example in simulation.\n\n  "
  'name': 'pr2_build_map_gazebo_demo'
  'repo': 'wg-ros-pkg'
- 'brief': 'rovio_common'
  'description': "\n\n     rovio_common contains common messages and services related\
    \ to the Rovio stack\n\n  "
  'name': 'rovio_common'
  'repo': 'iheart-ros-pkg'
- 'brief': 'pr2_tabletop_manipulation_launch'
  'description': "\n\n    Launch files for starting the manipulation pipeline, complete\
    \ with\n    sensor processing for manipulation, on the PR2 robot.\n\n  "
  'name': 'pr2_tabletop_manipulation_launch'
  'repo': 'wg-ros-pkg'
- 'brief': 'block_swat'
  'description': "\n        block_swat\n    "
  'name': 'block_swat'
  'repo': 'ua-ros-pkg'
- 'brief': 'pr2_move_base'
  'description': "\n\n     pr2_move_base\n\n  "
  'name': 'pr2_move_base'
  'repo': 'pr2_navigation'
- 'brief': 'Runs an optimization to estimate the PR2''s kinematic parameters'
  'description': "\n     Runs an optimization to estimate the PR2's kinematic parameters.\
    \ This package is\n     still experimental. Expect APIs to change.\n  "
  'name': 'pr2_calibration_estimation'
  'repo': 'pr2_calibration'
- 'brief': 'Orocos/RTT component specification and code generation tool'
  'description': "\n        orogen offers a specification interface for components\
    \ developped in the\n        Orocos Realtime Toolkit. Moreover, it generates the\
    \ specified modules,\n        thus offering an easy and fast development process.\n\
    \    "
  'name': 'orogen'
  'repo': 'orocos_toolchain'
- 'brief': 'detect_cans_in_fridge_201202'
  'description': "\n\n     detect_cans_in_fridge_201202\n\n  "
  'name': 'detect_cans_in_fridge_201202'
  'repo': 'jsk-ros-pkg'
- 'brief': 'wxPython SWIG interface files'
  'description': '

    Interface files used with SWIG to allow use of custom C++ widgets with wxPython
    code.


    These interface files were pulled from wxPython 2.8.1, because at the time that
    was the target version (since we were using Ubuntu Feisty).  We will probably
    continue to use these interface files until they no longer work for some reason.


    The ideal situation would be if these were installed in system installs along
    with wxPython, but unfortunately they are not.


    '
  'name': 'wxPython_swig_interface'
  'repo': 'rx'
- 'brief': ''
  'description': 'Barrett low-level controllers (stock btclient)'
  'name': 'BarrettWAM'
  'repo': 'ubc-ros-pkg'
- 'brief': 'test_topic_tools'
  'description': "\n\n     test_topic_tools\n\n  "
  'name': 'test_topic_tools'
  'repo': 'ros_comm'
- 'brief': 'matlab'
  'description': "\n\n     provides flags and tools for compiling matlab mex libraries\n\
    \n  "
  'name': 'matlab'
  'repo': 'usc-ros-pkg'
- 'brief': 'test_matlab_basic_ros'
  'description': "\n\n     A basic MEX test that uses a SharedMemorySubscriber and\
    \ a system() call to connect to a fully-functional ROS node run in another process\n\
    \     and fetch a serialized message from that process. See test_matlab_full_ros\
    \ for the implementation of the other ROS node\n\n  "
  'name': 'test_matlab_basic_ros'
  'repo': 'usc-ros-pkg'
- 'brief': 'book_stacking'
  'description': "\n\n     book_stacking\n\n  "
  'name': 'book_stacking'
  'repo': 'gt-ros-pkg'
- 'brief': 'LWR'
  'description': "\n\n     LWR FRI components\n\n  "
  'name': 'lwr_fri'
  'repo': 'lwr_hardware'
- 'brief': 'Gazebo Plugins for DarmSim'
  'description': "\n    Gazebo Plugins for Darm Sim.\n  "
  'name': 're2darmGazeboPlugins'
  'repo': 'darpa_arm_sim_servers'
- 'brief': 'Simple GUI for viewing and controlling the state of an actuator array'
  'description': "\n\n     This package provides a simple GUI for viewing and controlling\
    \ the state of an actuator array.\n     The joint names to be controlled are read\
    \ from the parameter server. Joint limits are extracted\n     from the &quot;robot_description.&quot;\
    \ \n\n  "
  'name': 'actuator_array_gui'
  'repo': 'gt-ros-pkg'
- 'brief': 'cob_collision_velocity_filter'
  'description': "\n\n     cob_collision_velocity_filter\n\n  "
  'name': 'cob_collision_velocity_filter'
  'repo': 'cob_driver'
- 'brief': 'velodyne_calibration'
  'description': "\n\n     velodyne_calibration\n\n  "
  'name': 'velodyne_calibration'
  'repo': 'utexas-art-ros-pkg'
- 'brief': 'pr2_3dnav'
  'description': "\n    This application for the PR2 launches the navigation stack\
    \ for the arm and allows you to move the arms using collision free motion planning\n\
    \  "
  'name': 'pr2_3dnav'
  'repo': 'wg-ros-pkg'
- 'brief': 'extrinsic_calibration'
  'description': "\n\n    Calibration of 3D transform of a depth sensor given two\
    \ sets of TFs, one from the odometry and one from the sensor pose.\n\tUses modular_cloud_matcher\
    \ to provide the sensor pose using ICP.\n\n  "
  'name': 'extrinsic_calibration'
  'repo': 'ethzasl_mapping'
- 'brief': 'semantic_model_web_interface'
  'description': "\n\n     semantic_model_web_interface\n\n  "
  'name': 'semantic_model_web_interface'
  'repo': 'worldmodel'
- 'brief': 'usbi2c'
  'description': "\n\n     A package for use with USB to I2C Communication Module,\
    \ used to communicate with sonar sensors\n     See http://www.robot-electronics.co.uk/htm/usb_i2c_tech.htm\n\
    \n  "
  'name': 'usbi2c-ros-pkg'
  'repo': 'usbi2c-ros-pkg'
- 'brief': 'SSC32_core'
  'description': "\n\n     SSC32_core: A library to interface a SSC32 hardware board\n\
    \n  "
  'name': 'SSC32_core'
  'repo': 'rtc-us-ros-pkg-branches'
- 'brief': 'point_head_process_module'
  'description': "\n\n     point_head_process_module\n\n  "
  'name': 'point_head_process_module'
  'repo': 'cram_pr2'
- 'brief': 'image_scaler'
  'description': "\n\n     image_scaler\n\n  "
  'name': 'image_scaler'
  'repo': 'seabee3-ros-pkg'
- 'brief': 'A generic package for computing Arm Kinematics based on KDL'
  'description': "\n\n    A generic package for computing both forward and backward\
    \ kinematics for arms.\n    Developed as an alternative to pr2_arm_kinematics\
    \ for people not using the PR2.\n\n    This package is a fork of urdf_tools/arm_kinematics.\
    \ It adds\n    mechanisms to configure some of the KDL solver parameters and thus\n\
    \    allows for greater flexibility.\n\n\n  "
  'name': 'kdl_arm_kinematics'
  'repo': 'cram_physics'
- 'brief': 'find_object_actions'
  'description': "\n\n     find_object_actions\n\n  "
  'name': 'find_object_actions'
  'repo': 'wg-ros-pkg'
- 'brief': 'polonius_interface'
  'description': "\n\n     polonius_interface\n\n  "
  'name': 'polonius_interface'
  'repo': 'wu-ros-pkg'
- 'brief': 'tidyup_msgs'
  'description': "\n    Messages used in the TidyUp project.\n  "
  'name': 'tidyup_msgs'
  'repo': 'alufr-ros-pkg'
- 'brief': 'action_sequencer'
  'description': "\n\n     action_sequencer\n\n  "
  'name': 'action_sequencer'
  'repo': 'brown-experimental'
- 'brief': 'BrownJoyControlBase'
  'description': "\n\n     BrownJoyControlBase\n\n  "
  'name': 'BrownJoyControlBase'
  'repo': 'brown-experimental'
- 'brief': 'test_controllers'
  'description': "\n\n     test_controllers\n\n  "
  'name': 'test_controllers'
  'repo': 'brown-experimental'
- 'brief': 'world_db_model_demo'
  'description': "\n\n     world_db_model_demo\n\n  "
  'name': 'world_db_model_demo'
  'repo': 'wg-ros-pkg'
- 'brief': 'theora_imagem_transport'
  'description': "\n\n     theora_imagem_transport\n\n  "
  'name': 'theora_imagem_transport'
  'repo': 'ethzasl_message_transport'
- 'brief': 'URDF/YAML definition, bringup info for Mini Maxwell'
  'description': ''
  'name': 'mini_max_defs'
  'repo': 'vanadium-ros-pkg'
- 'brief': 'tabletop_pushing'
  'description': "\n\n     tabletop_pushing\n\n  "
  'name': 'visual_servo'
  'repo': 'gt-ros-pkg'
- 'brief': 'resources for putting together the windows ros-sdk'
  'description': "\n\n     Scripts and microsoft visual studio solutions for packaging\
    \ and testing the sdk.\n\n  "
  'name': 'win_sdk'
  'repo': 'win_ros'
- 'brief': 'ADEPT_VIPER_S650_arm_navigation'
  'description': "\n\n     ADEPT_VIPER_S650_arm_navigation\n\n  "
  'name': 'ADEPT_VIPER_S650_ikfast_arm_navigation'
  'repo': 'swri-ros-pkg'
- 'brief': 'hector_roscpp_introspection'
  'description': "\n\n     hector_roscpp_introspection enables introspection of ROS\
    \ message types in roscpp.\n     Introspection is useful when message data is\
    \ going to be exported to or imported from\n     other data formats or applications.\n\
    \n  "
  'name': 'hector_roscpp_introspection'
  'repo': 'tu-darmstadt-ros-pkg'
- 'brief': 'model_create'
  'description': "\n\n     model_create\n\n  "
  'name': 'model_create'
  'repo': 'brown-experimental'
- 'brief': 'ros2opencv'
  'description': "\n\n     This package defines a base class for other packages in\
    \ the\n     pi_vision stack for converting ROS image topics to OpenCV\n     format,\
    \ displaying the image + markers, etc.\n\n  "
  'name': 'ros2opencv'
  'repo': 'pi-robot-ros-pkg'
- 'brief': 'filtered_odom'
  'description': "\n\n     filtered_odom\n\n  "
  'name': 'filtered_odom'
  'repo': 'seabee3-ros-pkg'
- 'brief': 'ias_maps'
  'description': "\n\n     ias_maps\n\n  "
  'name': 'ias_maps'
  'repo': 'tum-ros-pkg'
- 'brief': 'Build recipe for cross-compiling the apache runtime'
  'description': "\n\n\tThis provides a source package for compiling the apache runtime.\n\
    \tOrdinarily this is not useful as you would install via your system's\n\tinstallation\
    \ method (e.g. apt-get for ubuntu), but for cross-compiling \n    it provides\
    \ the recipe needed to make a toolchain ros-ready.\n\n  "
  'name': 'eros_apr'
  'repo': 'eros'
- 'brief': 'WAM_server'
  'description': "\n\n     WAM_server\n\n  "
  'name': 'WAM_sim_server'
  'repo': 'darpa_arm_sim_servers'
- 'brief': 'flyatar_manual'
  'description': "\n\n     flyatar_manual\n\n  "
  'name': 'flyatar_manual'
  'repo': 'flyatar'
- 'brief': 'PR2 Arms Teleoperator'
  'description': "\n\n     First attempt at a basic, individual joint teleoperator\
    \ for the PR2 Simulator's arms\n\n  "
  'name': 'pr2_tuckarm_brown'
  'repo': 'brown-experimental'
- 'brief': 'map_annotation'
  'description': "\n\n     map_annotation\n\n  "
  'name': 'map_annotation'
  'repo': 'cram_highlevel'
- 'brief': 'joypad talk'
  'description': "\n\n     joy_talk publishes std_msgs/String by joypad buttons.\n\
    \     you can use this for several perpose.\n\n  "
  'name': 'joy_talk'
  'repo': 'otl-ros-pkg'
- 'brief': 'phippi'
  'description': "\n\n     phippi\n\n  "
  'name': 'phippi'
  'repo': 'TYROS'
- 'brief': 'cob_object_detection_msgs'
  'description': "\n\n     cob_object_detection_msgs\n\n  "
  'name': 'cob_object_detection_msgs'
  'repo': 'cob_object_perception'
- 'brief': 'reem_machine'
  'description': "\n     This package contains the xxx.machine files that describe\
    \ the different hosts a node can be spawned on.\n  "
  'name': 'reem_machine'
  'repo': 'reem_common'
- 'brief': 'rosie_arm_kinematics_test'
  'description': "\n\n     rosie_arm_kinematics_test\n\n  "
  'name': 'rosie_arm_kinematics_test'
  'repo': 'tum-ros-pkg'
- 'brief': 'jtalk'
  'description': "\n\n     jtalk\n\n  "
  'name': 'jtalk'
  'repo': 'jsk-ros-pkg'
- 'brief': 'soem_core'
  'description': "\n\n     SOEM is an open source EtherCAT master library written\
    \ in c. Its\n     primary target is Linux but can be adapted to other OS and\n\
    \     embedded systems. (http://developer.berlios.de/projects/soem/)\n\n     This\
    \ package contains the original soem c code provided by the Technische Universiteit\
    \ Eindhoven.\n\n  "
  'name': 'soem_core'
  'repo': 'soem'
- 'brief': 'SBPL 3D Collision Checking Library'
  'description': "\n\n    Benjamin Cohen - University of Pennsylvania\n    Advised\
    \ by:\n    Maxim Likhachev - Carnegie Mellon University\n\n  "
  'name': 'sbpl_collision_checking'
  'repo': 'sbpl_arm_planning'
- 'brief': 'Integrated graphical user interface for ROS'
  'description': "\n\n     rosgui provides the infrastructure for an integrated graphical\
    \ user interface based on Qt.\n     It is extensible with Python- and C++-based\
    \ plugins (implemented in separate packages) which can contribute arbitrary widgets.\n\
    \     The dependencies of either rosgui_pyqt or rosgui_pyside are required to\
    \ run rosgui.\n\n  "
  'name': 'rosgui'
  'repo': 'ros_gui'
- 'brief': 'cob3_3_arm_navigation'
  'description': "\n\n     cob3_3_arm_navigation\n\n  "
  'name': 'cob3_3_arm_navigation'
  'repo': 'cob_manipulation'
- 'brief': 'parsec_msgs'
  'description': "\n\n     parsec_msgs\n\n  "
  'name': 'parsec_msgs'
  'repo': 'parsec'
- 'brief': 'urdf_parser_python'
  'description': "\n\n    Python implementation of the urdf_parser package.  Provides\
    \ tools for reading the URDF specification into Python objects.\n\n  "
  'name': 'urdf_parser_python'
  'repo': 'gt-ros-pkg'
- 'brief': 'Visualization Messages'
  'description': "\n\n<p>\nvisualization_msgs is a set of messages used by higher\
    \ level packages, such as <a href=\"/wiki/rviz\">rviz</a>, that deal in visualization-specific\
    \ data.\n</p>\n<p>\nThe main messages in visualization_msgs is <tt>visualization_msgs/Marker</tt>.\
    \  The marker message is used to send visualization &quot;markers&quot; such as\
    \ boxes, spheres, arrows, lines, etc. to a visualization environment such as <a\
    \ href=\"http:///www.ros.org/wiki/rviz\">rviz</a>.  See the rviz tutorial <a href=\"\
    http://www.ros.org/wiki/rviz/Tutorials\">rviz tutorials</a> for more information.\n\
    </p>\n  "
  'name': 'visualization_msgs'
  'repo': 'ros-pkg'
- 'brief': 'cl_bullet'
  'description': "\n\n     A Common Lisp wrapper of the bullet physics engine\n\n\
    \  "
  'name': 'cl_bullet'
  'repo': 'cram_physics'
- 'brief': 'nxt_robot_kit_test'
  'description': "\n\n     nxt_robot_kit_test provides a simple birkc with sensors\
    \ attached to get a feel for ROS and NXT.\n\n  "
  'name': 'nxt_robot_kit_test'
  'repo': 'foote-nxt'
- 'brief': 'map_tiler'
  'description': "\n\n     rosweb plugin to serve map tiles as jpeg\n\n  "
  'name': 'map_tiler'
  'repo': 'wg-ros-pkg'
- 'brief': 'pointcloud_snapshot_service'
  'description': "\n\n     pointcloud_snapshot_service\n\n  "
  'name': 'pointcloud_snapshot_service'
  'repo': 'bosch-ros-pkg'
- 'brief': 'simmechanics_tutorial'
  'description': "\n\n     simmechanics_tutorial\n\n  "
  'name': 'simmechanics_tutorial'
  'repo': 'wu-ros-pkg'
- 'brief': 'kinect_utils'
  'description': "\n\n     This packages contains a node that processes the 3D point\
    \ cloud provided by the kinect sensor to identify walls, obstacles, and the position\
    \ and orientation of the sensor inside a corridor. The node generates a trajectory\
    \ to navigate down the corridor.\n\n\n  "
  'name': 'kinect_utils'
  'repo': 'tuc-ros-pkg'
- 'brief': ''
  'description': 'Cognitive Perception Server'
  'name': 'vision_srvs'
  'repo': 'ias_common'
- 'brief': 'ds_master_executive'
  'description': "\n\n     drink_executive\n\n  "
  'name': 'ds_master_executive'
  'repo': 'bosch-ros-pkg'
- 'brief': 'Code for some URDF Tutorials'
  'description': "\n    Support code for the step by step URDF tutorials on ROS.org\n\
    \  "
  'name': 'urdf_tutorial'
  'repo': 'robot_model_tutorials'
- 'brief': 'sbpl_two_arm_planner'
  'description': "\n\n     sbpl_two_arm_planner\n\n  "
  'name': 'sbpl_two_arm_planner'
  'repo': 'sbpl_arm_planning'
- 'brief': 'ce_social'
  'description': "\n     Social I/O\n     \n     This API communicatates with that\
    \ bad ass of twitter.com.\n     It provides a simple &quot;submit&quot; and &quot;read&quot;\
    \ path which makes\n     it easier to post messages for every application using\
    \ this\n     thing.\n     \n     Facebook, MySpace and Co to come.\n\n\n  "
  'name': 'socialize'
  'repo': 'vmi-ros-pkg'
- 'brief': 'android_image_transport_tutorial'
  'description': "\n    android_image_transport_tutorial\n  "
  'name': 'android_tutorial_image_transport'
  'repo': 'android_core'
- 'brief': 'pursuit'
  'description': "\n\n     pursuit\n\n  "
  'name': 'pursuit'
  'repo': 'cmr-ros-pkg'
- 'brief': 'test_rosmsg'
  'description': "\n\n     Test package for rosmsg\n\n  "
  'name': 'test_rosmsg'
  'repo': 'ros_comm'
- 'brief': 'hrl_cvblobslib'
  'description': "\n\n     hrl_cvblobslib\n\n  "
  'name': 'hrl_cvblobslib'
  'repo': 'gt-ros-pkg'
- 'brief': 'Tele-operation nodes and utilities for ROS.'
  'description': "\n\n    This package provides ROS nodes and utilities related to\
    \ tele-operation.\n\n    The teleop_source_ros node determines and publishes the\
    \ state of a given\n    teleop source device (e.g. a keyboard, a joystick, etc.).\n\
    \n    The teleop_sink_twist_ros node subscribes to the state of a given teleop\n\
    \    source device (e.g. keyboard, joystick, etc.), and converts this state\n\
    \    into a generic twist message, which is then published.\n\n    The twist.sh\
    \ utility simply publishes twist values to a given twist topic.\n\n  "
  'name': 'teleop_ros'
  'repo': 'generic_teleop'
- 'brief': 'Dynamic graph initialization scripts.'
  'description': "\n\n    FIXME\n\n  "
  'name': 'sot-openhrp-scripts'
  'repo': 'jrl-ros-pkg'
- 'brief': 'w2_arm_navigation_tests'
  'description': "\n     w2_arm_navigation_tests\n  "
  'name': 'w2_arm_navigation_tests'
  'repo': 'ua-ros-pkg'
- 'brief': 'python_orocos_kdl'
  'description': "\n\n     python_orocos_kdl\n\n  "
  'name': 'python_orocos_kdl'
  'repo': 'orocos_kinematics_dynamics'
- 'brief': 'opencv_ros_bridge_tutorial'
  'description': "\n\n     opencv_ros_bridge_tutorial\n\n  "
  'name': 'opencv_ros_bridge_tutorial'
  'repo': 'rtm-ros-robotics/agentsystem_ros_tutorials'
- 'brief': 'pipeline_finder'
  'description': "\n\n     pipeline_finder\n\n  "
  'name': 'pipeline_finder'
  'repo': 'seabee3-ros-pkg'
- 'brief': 'sim_clock'
  'description': "\n\n     sim_clock\n\n  "
  'name': 'sim_clock'
  'repo': 'hwu-osl-ros-pkg'
- 'brief': 'ART vehicle pilot'
  'description': "\n\n     Servo coordination for the ART autonomous vehicle.\n\n\
    \  "
  'name': 'art_pilot'
  'repo': 'utexas-art-ros-pkg'
- 'brief': ''
  'description': "\n    pcl_detectors contains several 3D detectors that are based\
    \ on PCL, but in\n    addition require extra packages as dependencies.\n  "
  'name': 'pcl_detectors'
  'repo': 'wg-ros-pkg'
- 'brief': 'nodemon_py'
  'description': "\n\n     nodemon_py\n\n  "
  'name': 'nodemon_py'
  'repo': 'node_monitoring'
- 'brief': 'cwru_nav'
  'description': "\n\n     cwru_nav\n\n  "
  'name': 'cwru_nav'
  'repo': 'cwru-ros-pkg'
- 'brief': 'URDF to TAO conversion for Stanford_WBC'
  'description': "\n  "
  'name': 'wbc_urdf'
  'repo': 'whole_body_control'
- 'brief': 'ua_overhead_cam'
  'description': "\n\n        ua_overhead_cam\n\n    "
  'name': 'ua_overhead_cam'
  'repo': 'ua-ros-pkg'
- 'brief': 'read_text'
  'description': "\n\n     Detect and recognize text from indoor environment.  \n\n\
    \  "
  'name': 'read_text'
  'repo': 'literate_pr2'
- 'brief': 'rgbd_assembler'
  'description': "\n\n    Upon a request, this service collects the necessary \n \
    \   sensory data to transfer the colour information from \n    the wide field\
    \ to the narrow field camera image. \n\n    Since the narrow field cameras of\
    \ the PR2 are monochrome,\n    this can be useful for any algorithm that does,\
    \ e.g., \n    segmentation or recognition based partially on colour information.\n\
    \n  "
  'name': 'rgbd_assembler'
  'repo': 'wg-ros-pkg'
- 'brief': 'person_data'
  'description': "\n   Tools for collecting and managing data for the indoor person\
    \ detection and tracking dataset.\n\n  "
  'name': 'person_data'
  'repo': 'wg-ros-pkg'
- 'brief': 'turtlebot_description'
  'description': "\n\n     turtlebot_description provides a complete 3D model of the\
    \ TurtleBot for simulation and visualization. The files in this package are parsed\
    \ and used by a variety of other components. Most users will not interact directly\
    \ with this package.\n  "
  'name': 'turtlebot_description'
  'repo': 'turtlebot'
- 'brief': 'active_grasping'
  'description': "\n\n     active_grasper\n\n  "
  'name': 'active_grasping'
  'repo': 'wg-ros-pkg'
- 'brief': 'Basic controllers for ArbotiX connected devices'
  'description': "\n    Extends the arbotix_node package with a number of more sophisticated\
    \ ROS wrappers for common devices. \n  "
  'name': 'arbotix_controllers'
  'repo': 'vanadium-ros-pkg'
- 'brief': 'recovery_tutorials'
  'description': "\n\n     Tutorials scripts on how to use smach with recovery behaviors\n\
    \n  "
  'name': 'recovery_tutorials'
  'repo': 'bosch-ros-pkg'
- 'brief': 'turtlebot_arm_bringup'
  'description': "\n     turtlebot_arm_bringup provides launch files for starting\
    \ the drivers for the TurtleBot arm.\n  "
  'name': 'turtlebot_arm_bringup'
  'repo': 'turtlebot_arm'
- 'brief': 'maxwell_calibration'
  'description': "\n    Launch and configuration files for calibrating Maxwell using\
    \ the new generic calibration stack (based on the previous pr2_calibration).\n\
    \  "
  'name': 'maxwell_calibration'
  'repo': 'vanadium-ros-pkg'
- 'brief': 'test_LARK'
  'description': "\n\n     test_LARK\n\n  "
  'name': 'test_LARK'
  'repo': 'wg-ros-pkg'
- 'brief': 'wrappers and tools for generically handling motion planners'
  'description': "\n "
  'name': 'mpglue'
  'repo': 'wg-ros-pkg'
- 'brief': 'imu_um6'
  'description': "\nThis package is a ROS driver for the CH Robotics UM6 IMU\n  "
  'name': 'imu_um6'
  'repo': 'aptima-ros-pkg'
- 'brief': 'point_cloud_python'
  'description': "\n\n     Python code for unpacking PointCloud2 messages\n\n  "
  'name': 'point_cloud_python'
  'repo': 'wg-ros-pkg'
- 'brief': 'chameleon_firmware'
  'description': "\n\n     chameleon_firmware\n\n  "
  'name': 'chameleon_firmware'
  'repo': 'clearpath-ros-pkg'
- 'brief': 'Moving Object'
  'description': "\n        This package contains a Moving Object, which is an itasc\
    \ object\n\tPart of the iTaSC-Skill framework, itasc_robots_objects.\n    "
  'name': 'moving_object'
  'repo': 'itasc_robots_objects'
- 'brief': 'Webots ROS joystick interface'
  'description': "\n    This sample ROS node is actually a Webots robot controller\
    \ that launches the\n    ROS joy node and subscribes to its 'joy' topic to read\
    \ the input from a\n    joystick. This input is used to drive a simulated robot\
    \ in Webots.\n\n    It is a good starting point to implement an interface between\
    \ Webots and ROS\n    for controlling simulated robots in Webots from ROS nodes.\n\
    \  "
  'name': 'webots_joystick'
  'repo': 'webots-ros-pkg'
- 'brief': 'lwr_dashboard'
  'description': "\n\n    lwr_dashboard\n\n  "
  'name': 'lwr_dashboard'
  'repo': 'lwr_gui'
- 'brief': 'cob_generic_can'
  'description': "\n\n     The package cob_generic_can provides an interface for nodes\
    \ on a can-bus and examplary wrappers for two PeakSys-can-libs. When a can-bus-device\
    \ is generated (for an example see base_dirve_chain) you can use generic_can to\
    \ create as many itfs as there will be components communicating via this can-bus.\
    \ Assign type of the can communication device (e.g. usb-to-can or can-card of\
    \ a specific vendor) and can-address of the target device. This package comes\
    \ with wrappers for PeakSys and PeakSysUSB adapters.\n\n  "
  'name': 'cob_generic_can'
  'repo': 'cob_driver'
- 'brief': ''
  'description': "\n  A simple performance test of the serialization/deserialization\
    \ scheme, so we can get some decent numbers to target optimization efforts.\n\
    \  "
  'name': 'test_roscpp_serialization_perf'
  'repo': 'ros_comm'
- 'brief': 'simulator_bridge'
  'description': "\n\n     simulator_bridge\n\n  "
  'name': 'simulator_bridge'
  'repo': 'wu-ros-pkg'
- 'brief': 'Tools to create GPR based inverse dynamics models'
  'description': "\n\n     Motion generation for GPR based inverse dynamics models.\
    \ Motion visualization and convenience tools for bag file handling.\n\n  "
  'name': 'inverse_dynamics_tools'
  'repo': 'wg-ros-pkg'
- 'brief': 'navigation_task'
  'description': "\n\n     navigation_task\n\n  "
  'name': 'navigation_task'
  'repo': 'continuous_ops'
- 'brief': 'app_manager_android'
  'description': "\n\n     Code to assist using app_manager with Android.\n\n  "
  'name': 'app_manager_android'
  'repo': 'multimaster_experimental'
- 'brief': 'driver for Schunk(formerly Amtec) pan-tilt unit'
  'description': 'A driver for the Schunk(formerly Amtec) pan-tilt unit. Provides
    a library, ROS wrapper, test program and ROS node for sweeping the unit. '
  'name': 'amtec'
  'repo': 'bosch-ros-pkg'
- 'brief': 'tvmet'
  'description': "\n\n     tvmet\n\n  "
  'name': 'tvmet'
  'repo': 'rtm-ros-robotics/rtmros_common'
- 'brief': 'Controller for the Simulationenvironment'
  'description': "\n\n     Controller for the ImmoBot, the inmobile robots, aka movable\
    \ parts.\n\n  "
  'name': 'vo_actioncomponents'
  'repo': 'vmi-ros-pkg'
- 'brief': 'lwr'
  'description': "\n\n     lwr\n\n  "
  'name': 'lwr'
  'repo': 'wg-ros-pkg'
- 'brief': 'vision_gradient_templates'
  'description': "\n\n     vision_gradient_templates  This package is to develop fast\
    \ gradient templates for objects -- basically a fast but more flexible HOG feature.\n\
    \t Started Jan. 27, 2010.\n\n  "
  'name': 'vision_gradient_templates'
  'repo': 'wg-ros-pkg'
- 'brief': 'Source for the WGE100 Ethernet camera'
  'description': "\n    Source for the WGE100 Ethernet camera: Verilog source for\
    \ the\n    FPGA, Forth source for the camera firmware.  Intended for camera\n\
    \    developers.  Note that a built binary from this package is checked\n    in\
    \ under wge100_camera/firmware_images/\n  "
  'name': 'wge100_camera_firmware'
  'repo': 'ros-pkg'
- 'brief': 'rtcus_kinect_gestures'
  'description': "\n\n     Gestures interpreter using Microsoft's Kinect. Basic implementations\
    \ of the DTW, HMM and GMM methods are provided.\n     Gesture signal accomodation\
    \ implemented.\n\n  "
  'name': 'rtcus_kinect_gestures'
  'repo': 'rtc-us-ros-pkg-trunk'
- 'brief': 'sbl_launch'
  'description': "\n\n     sbl_launch\n\n  "
  'name': 'sbl_launch'
  'repo': 'usc-ros-pkg'
- 'brief': 'robot_learning_language'
  'description': "\n    The Robot Learning Language: Extensions of the CRAM Plan Language\
    \ to integrate experience-based learning into CRAM plans\n  "
  'name': 'robot_learning_language'
  'repo': 'roll'
- 'brief': 'android_camera_tutorial'
  'description': "\n     android_camera_tutorial\n  "
  'name': 'android_tutorial_camera'
  'repo': 'android_core'
- 'brief': 'seabee3_mission_control'
  'description': "\n\n     seabee3_mission_control\n\n  "
  'name': 'seabee3_mission_control'
  'repo': 'seabee3-ros-pkg'
- 'brief': ''
  'description': 'Launch files for door opening in Gazebo.'
  'name': 'pr2_doors_gazebo_demo'
  'repo': 'wg-ros-pkg'
- 'brief': 'm3_gazebo_plugins'
  'description': "\n\n     m3_gazebo_plugins\n\n  "
  'name': 'm3_gazebo_plugins'
  'repo': 'wg-ros-pkg'
- 'brief': 'robotino_grappler_description'
  'description': "\n\nurdf, xacro and mesh files for robotino's grappler\n\n  "
  'name': 'robotino_grappler_description'
  'repo': 'robotino-ros-pkg'
- 'brief': 'loop back simulation for pr2 realtime controllers'
  'description': "\n    controller manager that does a very simple simulation of joints:\n\
    \    It just &quot;loops back&quot; effort to joint velocity / position.\n  "
  'name': 'loopback_controller_manager'
  'repo': 'tum-ros-pkg'
- 'brief': 'laser_scan_matcher'
  'description': "\n\n     An incremental laser scan matcher, using Andrea Censi's\
    \ Canonical Scan Matcher implementation.\n     More about CSM: http://www.cds.caltech.edu/~andrea/research/sw/csm.html\n\
    \n  "
  'name': 'laser_scan_matcher'
  'repo': 'scan_tools'
- 'brief': 'arm_navigation_tutorials'
  'description': "\n\n     arm_navigation_tutorials\n\n  "
  'name': 'arm_navigation_tutorials'
  'repo': 'gt-ros-pkg'
- 'brief': 'PR2 Dashboard'
  'description': "\n    \n      pr2_dashboard is a GUI for debugging and controlling\
    \ low-level state of the PR2.  It shows things like battery status and breaker\
    \ states, as well as integrating tools like rxconsole and robot_monitor.\n   \
    \ \n    "
  'name': 'pr2_dashboard'
  'repo': 'wg-ros-pkg'
- 'brief': 'Web Bags'
  'description': "\n    A web interface to view bags through the web.\n  "
  'name': 'web_bags_core'
  'repo': 'wg-ros-pkg'
- 'brief': 'sensor_msgs'
  'description': "\n\n    This package defines messages for commonly used sensors,\
    \ including\ncameras and scanning laser rangefinders.\n\n  "
  'name': 'sensor_msgs'
  'repo': 'ros-pkg'
- 'brief': 'Realtime tools'
  'description': "\n    This package contains a set of tools that can be used from\
    \ a hard\n    realtime thread, without breaking the realtime behavior.  The\n\
    \    tools currently only provides the realtime publisher, which makes\n    it\
    \ possible to publish messages to a ROS topic from a realtime\n    thread. We\
    \ plan to add a basic implementation of a realtime\n    buffer, to make it possible\
    \ to get data from a (non-realtime)\n    topic callback into tha realtime loop.\
    \ Once the lockfree buffer is\n    created, the realtime publisher will start\
    \ using it, which will\n    result in major API changes for the realtime publisher\
    \ (removal of\n    all lock methods).\n  "
  'name': 'realtime_tools'
  'repo': 'pr2_mechanism'
- 'brief': 'grasp_evaluation_msgs'
  'description': "\n      Contains the messages and services required for evaluating\
    \ a potential grasp on a grasp planner.\n  "
  'name': 'grasp_evaluation_msgs'
  'repo': 'wg-ros-pkg'
- 'brief': 'pr2_2dnav_explore'
  'description': "\n\n     pr2_2dnav_explore\n\n  "
  'name': 'pr2_2dnav_explore'
  'repo': 'wg-ros-pkg'
- 'brief': 'hiro_ros_bridge'
  'description': "\n\n     hiro_ros_bridge\n\n  "
  'name': 'hironx_ros_bridge'
  'repo': 'rtm-ros-robotics/rtmros_common'
- 'brief': 'odor_bar'
  'description': "\n\n     Odor bar node. Publishes a group of visualization_msgs/Marker\
    \ as a bar for visually monitoring odor concentrations in rviz.\n\n  "
  'name': 'odor_bar'
  'repo': 'odor_tools'
- 'brief': ''
  'description': 'A Java-based knowledge base for cognitive robotic applications'
  'name': 'oro_server'
  'repo': 'tum-ros-pkg'
- 'brief': 'move_arm_tutorials'
  'description': "\n\n     move_arm_tutorials\n\n  "
  'name': 'move_arm_tutorials'
  'repo': 'gt-ros-pkg'
- 'brief': 'Multi-Object Tracking Software for Robotics and Biology'
  'description': "\n        SwisTrack is a powerful tool for tracking robots, humans,\
    \ animals and\n        objects using a camera or a recorded video as input source.\
    \ It uses\n        OpenCV library for fast image processing and contains interfaces\
    \ for\n        USB, FireWire and GigE cameras, as well as AVI files.\n    "
  'name': 'swistrack'
  'repo': 'ua-ros-pkg'
- 'brief': 'texai_face_finder'
  'description': "\n\n     face_finder\n\n  "
  'name': 'texai_face_finder'
  'repo': 'wg-ros-pkg'
- 'brief': 'rosie_2dnav_gazebo'
  'description': "\n\n     rosie_2dnav_gazebo\n\n  "
  'name': 'rosie_2dnav_gazebo'
  'repo': 'tum-ros-pkg'
- 'brief': 'Kinematics solvers for low-DOF, overhead arms.'
  'description': "\n    Kinematics solvers for low-DOF, overhead arms.\n  "
  'name': 'overhead_kinematics'
  'repo': 'vanadium-ros-pkg'
- 'brief': 'mesh_label_node'
  'description': "\n\n     mesh_label_node\n\n  "
  'name': 'mesh_label_node'
  'repo': 'tum-ros-pkg'
- 'brief': 'move_arm_goal'
  'description': "\n\n     move_arm_goal\n\n  "
  'name': 'move_arm_goal'
  'repo': 'uuisrc-ros-pkg'
- 'brief': 'Get joint angles from detcted corners in a snapshot'
  'description': "\n     Computes joint angles associated with a specific set of detected\
    \ checkerboard corners.\n     This package is experimental and unstable.\n   \
    \  Expect its APIs to change.\n  "
  'name': 'laser_joint_processor'
  'repo': 'pr2_calibration'
- 'brief': 'wg_invent_assembly_check'
  'description': "\n\n     wg_invent_assembly_check\n\n  "
  'name': 'wg_invent_assembly_check'
  'repo': 'wg-ros-pkg'
- 'brief': 'sogp'
  'description': "\nUses Sparse Online Gaussian Processes for multi-dimensional function\
    \ regression.\n\n  "
  'name': 'sogp'
  'repo': 'brown-experimental'
- 'brief': 'Player'
  'description': "\n        This package contains Player, from the Player Project\n\
    \        (http://playerstage.sf.net). This package does not modify Player in any\n\
    \        way; it simply provides a convenient way to download and compile the\n\
    \        headers and libraries in a way that can be managed by the ROS dependency\n\
    \        system.\n    "
  'name': 'player'
  'repo': 'erratic_robot'
- 'brief': 'A set of robot models'
  'description': "\n    A set of robot models that can be instantiated from a parsed\
    \ URDF file.\n  "
  'name': 'planning_models'
  'repo': 'arm_navigation'
- 'brief': 'starmac_kinect_obstacle_avoidance'
  'description': "\n\n    starmac_kinect_obstacle_avoidance\n\n  "
  'name': 'starmac_kinect_obstacle_avoidance'
  'repo': 'starmac-ros-pkg'
- 'brief': 'nxt_robot_mindstorms2_quickstart'
  'description': "\n\nThis is the &quot;quickstart&quot; robot design specified in\
    \ the Lego Mindstorms 2.0 NXT (8547) kit user guide.  I am unsure what robot.ldr,\
    \ robot.lxf, and robot.urdf do, so they remain unchanged from nxt_robot_sensor_car.\
    \  However, the robot appears to do fine with teleoperation as-is.  Sensors are\
    \ attached as recommended in the user guide.\n\n(Many thanks to Melonee Wise for\
    \ the nxt_robot_sensor_car node, which I modified to create this node.)\n\n  "
  'name': 'nxt_robot_mindstorms2_quickstart'
  'repo': 'brown-experimental'
- 'brief': 'simple_message'
  'description': "\n\n     simple_message\n\n  "
  'name': 'simple_message'
  'repo': 'swri-ros-pkg'
- 'brief': 'gridmap_2d'
  'description': "\n\n     gridmap_2d - a simple 2D gridmap structure, based on OpenCV's\
    \ cv::Mat\n\n  "
  'name': 'gridmap_2d'
  'repo': 'alufr-ros-pkg'
- 'brief': 'wviz_scene_manager'
  'description': 'A node maintains the scene state for web based visualization (wviz).'
  'name': 'wviz_scene_manager'
  'repo': 'bosch-ros-pkg'
- 'brief': 'cob_trajectory_controller'
  'description': "\n\n     cob_trajectory_controller\n\n  "
  'name': 'cob_trajectory_controller'
  'repo': 'cob_driver'
- 'brief': 'proximity_sensor_visualize'
  'description': "\n\n     proximity_sensor_visualize\n\n  "
  'name': 'proximity_sensor_visualize'
  'repo': 'bosch-ros-pkg'
- 'brief': 'Utilities for monitoring status of PR2 during hardware testing'
  'description': "\n    Test monitoring utilities for runtime monitoring of PR2 component\
    \ testing.\n  "
  'name': 'pr2_hardware_test_monitor'
  'repo': 'wg-ros-pkg'
- 'brief': 'hrpsys'
  'description': "\n\n    Basic RT components and utilities to control robots using\
    \ OpenRTM\n\n  "
  'name': 'hrpsys'
  'repo': 'rtm-ros-robotics/rtmros_common'
- 'brief': 'Build dense laser range and intensity clouds'
  'description': "\n    Stores streaming data from a laser sensor in a\n    dense\
    \ representation. This allows the user to do 'image-like'\n    processing on the\
    \ data, and can also be used for very fast approx\n    neighborhood searches.\
    \  This package is still experimental and unstable.\n    Expect its APIs to change.\n\
    \  "
  'name': 'dense_laser_assembler'
  'repo': 'pr2_calibration'
- 'brief': 'A few simple serial port classes'
  'description': '

    These are used all over the place for talking to hardware. These implementations
    are certainly suboptimal, but they do seem to work.

    '
  'name': 'serial_port'
  'repo': 'wg-ros-pkg'
- 'brief': 'robotino_local_move'
  'description': "\nImplements an actionlib client and server node to move Robotino\
    \ with pre-defined goals.\n  "
  'name': 'robotino_local_move'
  'repo': 'robotino-ros-pkg'
- 'brief': 'surveyor'
  'description': "\n\n     Surveyor is a driver for the Surveyor Vision System camera.\n\
    \n  "
  'name': 'surveyor'
  'repo': 'surveyor'
- 'brief': 'metralabs_ros'
  'description': "\n\n     An interface to the MetraLabs Scitos G5 mobile robot with\
    \ a Schunk Manipulator.\n     \n\n  "
  'name': 'metralabs_ros'
  'repo': 'uuisrc-ros-pkg'
- 'brief': 'DARPA ARM PROJECT Track C Mechanism Controller Library'
  'description': "\n  "
  'name': 'SimGazeboControllers'
  'repo': 'darpa_arm_sim_servers'
- 'brief': 'DPM'
  'description': "\n        Python implementation of Pedro Felzenszwalb's deformable\
    \ part models detector.\n    "
  'name': 'DPM'
  'repo': 'ubc-ros-pkg'
- 'brief': 'soccer_application'
  'description': "\n  "
  'name': 'soccer_application'
  'repo': 'wg-ros-pkg'
- 'brief': 'jsk_2011_07_pr2_semantic'
  'description': "\n\n     jsk_2011_07_pr2_semantic\n\n  "
  'name': 'jsk_2011_07_pr2_semantic'
  'repo': 'jsk-ros-pkg'
- 'brief': 'follower'
  'description': "\n\n     Follower for the turtlebot. Follows humans and robots around\n\
    \     by following the centroid of a box points infront of the\n     turtlebot.\n\
    \n  "
  'name': 'turtlebot_follower'
  'repo': 'turtlebot_apps'
- 'brief': 'quad_pose_ekf'
  'description': "\n\n     quad_pose_ekf\n\n  "
  'name': 'quad_pose_ekf'
  'repo': 'ccny_experimental'
- 'brief': 'Cross platform framework for inter-process mechanisms'
  'description': "\n\n  Interprocess mechanisms vary greatly across platforms - sysv,\
    \ posix, win32, there\n  are more than a few. This package provides an infrastructure\
    \ to allow for developing \n  cross platform c++ wrappers around the lower level\
    \ c api's that handle these \n  mechanisms. These make it not only easier to utilise\
    \ such mechanisms, but allow it \n  to be done consistently across platforms.\n\
    \n  "
  'name': 'ecl_ipc'
  'repo': 'ecl_core'
- 'brief': 'rosie_tuck_arms_action'
  'description': "\n\n     rosie_tuck_arms_action\n\n  "
  'name': 'rosie_tuck_arms_action'
  'repo': 'tum-ros-pkg'
- 'brief': 'tod_test'
  'description': "\n  Test system for tod_detecting package. \n  "
  'name': 'tod_test'
  'repo': 'wg-ros-pkg'
- 'brief': 'multi_table_states'
  'description': "\n\n     multi_table_states\n\n  "
  'name': 'multi_table_actions'
  'repo': 'wg-ros-pkg'
- 'brief': 'Filters a trajectory to have at most 16 segments'
  'description': "\n\n     <p>\n     This filter removes the smallest segments from\
    \ a trajectory until at most\n     MAX_NUM_POINTS (currently 16) are left. The\
    \ reason for doing this is that\n     the Katana arm only supports trajectories\
    \ with at most MAX_NUM_POINTS.\n     </p>\n\n     <p>\n     All desired velocities\
    \ and accelerations are removed from the trajectory.\n     This works if this\
    \ filter is used in conjunction with the\n     JointTrajectoryActionController\
    \ from the <a href=\"/wiki/katana\">katana</a>\n     package, because it recomputes\
    \ splines for velocities and accelerations\n     anyway. It would not work with\
    \ PR2's JointTrajectoryActionController,\n     which only computes linear segments\
    \ if the velocities are missing.\n     </p>\n\n     <p>\n     Also, this filter\
    \ does not check if the resulting trajectory is collision-free,\n     although\
    \ it should.\n     </p>\n\n  "
  'name': 'katana_trajectory_filter'
  'repo': 'uos-ros-pkg'
- 'brief': 'pr2_block_builder'
  'description': "\n\n     pr2_block_builder\n\n  "
  'name': 'pr2_block_builder'
  'repo': 'brown-experimental'
- 'brief': 'position_tracker'
  'description': "\n     position_tracker\n  "
  'name': 'position_tracker'
  'repo': 'brown-experimental'
- 'brief': 'pcl_split'
  'description': "\n\n     pcl_split\n\n  "
  'name': 'pcl_split'
  'repo': 'brown-experimental'
- 'brief': 'URDF description for the Wubble Robot'
  'description': "\n\n     wubble_description\n\n    "
  'name': 'wubble_description'
  'repo': 'ua-ros-pkg'
- 'brief': 'gscam'
  'description': "\nA ROS camera driver that uses gstreamer to connect to devices\
    \ such as webcams.\n  "
  'name': 'gscam'
  'repo': 'brown-ros-pkg'
- 'brief': 'uvc_camera'
  'description': "\n\n     A collection of node(let)s that stream images from USB\
    \ cameras (UVC)\n     and provide CameraInfo messages to consumers. Includes a\n\
    \     two-camera node that provides rough synchronization\n     for stereo vision.\n\
    \n     Currently uses the base driver from Morgan Quigley's uvc_cam package.\n\
    \n  "
  'name': 'uvc_camera'
  'repo': 'umd-ros-pkg'
- 'brief': 'foo_boost_python'
  'description': "\n\n     foo_boost_python - tutorial on using boost python to wrap\
    \ cpp.\n\n  "
  'name': 'foo_boost_python'
  'repo': 'wg-ros-pkg'
- 'brief': 'hrl_pr2_experiments'
  'description': "\n\n     Human Factors and Aging / Healthcare Robotics Lab joint\
    \ venture.\n\n  "
  'name': 'hrl_hfa_2011'
  'repo': 'gt-ros-pkg'
- 'brief': 'bagproc_thumbnails'
  'description': "\n\n     bagproc_thumbnails\n\n  "
  'name': 'bagproc_thumbnails'
  'repo': 'wg-ros-pkg'
- 'brief': 'semanticmodel'
  'description': "\n\n    Perceptual pipeline for object-based semantic world modeling.\n\
    \n  "
  'name': 'semanticmodel'
  'repo': 'worldmodel'
- 'brief': 'seabee3_physics'
  'description': "\n\n     seabee3_physics\n\n  "
  'name': 'seabee3_physics'
  'repo': 'seabee3-ros-pkg'
- 'brief': 'A base class for an ActuatorArrayDriver node'
  'description': "\n    <p>\t\n\tThis package contains a base class for an Actuator\
    \ Array Driver. This is intended for use with chains of R/C Servos or other\n\t\
    similar devices where position (and velocity) commands are sent at irregular intervals,\
    \ as opposed to the tight, real-time\n\tcontrol loop of the <a href=\"http://www.ros.org/wiki/pr2_controller_manager\"\
    >PR2 Controller Manager</a> system. \n    </p>\n    <p>\n    This base class performs\
    \ some standard functionality, such as parsing joint limits out of the robot_description,\
    \ subscribing to \n    a 'command' topic, publishing on the 'joint_states' topic,\
    \ and setting up a 'stop' and 'home' service call. This is designed to \n    work\
    \ as a stand-alone driver for controlling/tele-operating a chain of servos, or\
    \ in conjunction with the \n    <a href=\"http://www.ros.org/wiki/actuator_array_joint_trajectory_action\"\
    >Actuator Array Joint Trajectory Action</a>. However, this is \n    provided as\
    \ a convenience only, and is not required for successful operation with the Actuator\
    \ Array Joint Trajectory Action.\n    </p>\n  "
  'name': 'actuator_array_driver'
  'repo': 'gt-ros-pkg'
- 'brief': 'pr2_pose_saver'
  'description': "\n\n    Simple util for taking snapshots of pr2 body positions,\
    \ and loading them back up \n\n  "
  'name': 'pr2_pose_saver'
  'repo': 'wg-ros-pkg'
- 'brief': ''
  'description': "\n    FAST \n  "
  'name': 'fast_detector'
  'repo': 'wg-ros-pkg'
- 'brief': 'collvoid_simple_global_planner'
  'description': "\n\n     collvoid_simple_global_planner\n\n  "
  'name': 'collvoid_simple_global_planner'
  'repo': 'multi_robot_collision_avoidance'
- 'brief': 'ar_localizer'
  'description': "\n\n     ar_localizer\n\n  "
  'name': 'ar_localizer'
  'repo': 'brown-experimental'
- 'brief': 'mod_srdl'
  'description': "\n    Implementation of the Semantic Robot Description Language\
    \ (SRDL) that\n    provides model and reasoning tools to match prerequisites of\
    \ actions\n    to the capabilities of a robot.\n  "
  'name': 'mod_srdl'
  'repo': 'knowrob'
- 'brief': 'test_rosparam'
  'description': "\n\n     Tests for the rosparam tool\n\n  "
  'name': 'test_rosparam'
  'repo': 'ros_comm'
- 'brief': 'cwru_goal_planner'
  'description': "\n\n     cwru_goal_planner\n\n  "
  'name': 'cwru_goal_planner'
  'repo': 'cwru-ros-pkg'
- 'brief': 'access_point_control'
  'description': "\n    Defines an API for access point control based on \n    dynamic_reconfigure.\
    \ Other packages must\n    implement the API for various access-point models:\
    \ \n    for example: hostapd_access_point for hostapd-based control or\n    linksys_access_point\
    \ for Linksys router web interface.\n  "
  'name': 'access_point_control'
  'repo': 'ros-pkg'
- 'brief': 'message for pddl planner'
  'description': "\n   message for pddl planner\n  "
  'name': 'pddl_msgs'
  'repo': 'jsk-ros-pkg'
- 'brief': 'Assimp'
  'description': "\nOpen Asset Import Library (Short name: Assimp) is a free library\
    \ to\nimport various well-known 3D model formats into applications. The\nlibrary\
    \ has been designed for maximum stability and\nefficiency. Written in C++, it\
    \ is licensed under the BSD license. The\nAPI is provided for both C and C++.\
    \ Wrappers for Python and D are\navailable, more bindings are in development.\
    \ The library loads models\nin a straightforward in-memory format that can be\
    \ easily read and\nprocessed by applications. Various post processing steps can\
    \ be\nexecuted on the imported data to optimize it for a particular purpose.\n\
    \  "
  'name': 'assimp'
  'repo': 'assimp'
- 'brief': 'FTmeas_controller'
  'description': "\n\n     based on 'netft_example_controllers'\n\n     Provides simple\
    \ access to force-torque data provided by netft_ethercat_hardware plugin.\n\n\
    \     This also provides a convientent way to make sure that\n     netft_ethercat_hardware\
    \ plug-in is actually loaded and working.\n\n  "
  'name': 'FTmeas_controller'
  'repo': 'wg-ros-pkg'
- 'brief': 'busbot_filter'
  'description': "\n\n    A simple LaserScan to LaserScan filter that removes ranges\
    \ of beams from the scan. \n\n  "
  'name': 'busbot_filter'
  'repo': 'bosch-ros-pkg'
- 'brief': 'cob_gripper_grasp_controller_sdh'
  'description': "\n\n     cob_gripper_grasp_controller_sdh\n     Implementation of\
    \ the GraspHandPostureExecution Action for the Schunk SDH hand to use the object_manipulator\
    \ package.\n\n  "
  'name': 'cob_gripper_grasp_controller_sdh'
  'repo': 'cob_manipulation'
- 'brief': ''
  'description': "\n    The highlevel controllers for the door domain\n  "
  'name': 'pr2_doors_actions'
  'repo': 'pr2_doors'
- 'brief': 'proxemic_recognizers'
  'description': "\n\n     proxemic_recognizers\n\n  "
  'name': 'proxemic_recognizers'
  'repo': 'usc-ros-pkg'
- 'brief': 'Teleoperated the PR2'
  'description': "\n  This package contains launch files for starting joystick or\n\
    \  keyboard-based teleoperation (remote control) of the PR2.\n  "
  'name': 'teleop'
  'repo': 'vmi-ros-pkg'
- 'brief': 'checkerboard_detector'
  'description': "\n\n     checkerboard_detector node that finds a NxM checkerboard\
    \ in an image, and uses a corresponding camera_info message to return a transform\
    \ to that checkerboard from the camera frame\n\n  "
  'name': 'checkerboard'
  'repo': 'usc-ros-pkg'
- 'brief': 'proximity_sensor_fake_data'
  'description': "\n\n     proximity_sensor_fake_data\n\n  "
  'name': 'proximity_sensor_fake_data'
  'repo': 'bosch-ros-pkg'
- 'brief': 'learning_image_geometry'
  'description': "\n\n     learning_image_geometry\n\n  "
  'name': 'learning_image_geometry'
  'repo': 'rtc-us-ros-pkg-branches'
- 'brief': 'ORO Chatter'
  'description': "ORO Chatter listen to human inputs from\nthe web_hri ROS node, and\
    \ try to answer question/execute commands with the\nNaive Natural Language module\
    \ of ORO.\n  "
  'name': 'oro_chatter'
  'repo': 'tum-ros-pkg'
- 'brief': 'skype_bridge'
  'description': "\n\n     Actions, services and a frontend for interacting with Skype\
    \ through ROS\n\n  "
  'name': 'skype_bridge'
  'repo': 'wu-ros-pkg'
- 'brief': 'ar_pose_ekf'
  'description': "\n\n      ar_pose_ekf: Orocos component which fuses marker pose\
    \ estimates from different cameras. The component uses a \n      <a href=\"http://www.orocos.org/bfl\"\
    >BFL (Bayesian Filter Library)</a> Extended Kalman Filter\n      to merge the\
    \ different estimates. \n\n      Input node: <a href=\"http://www.ros.org/doc/api/ar_pose/html/msg/ARMarker.html\"\
    >ar_pose::ARMarker message</a>\n      Output nodes: <a href=\"http://www.ros.org/doc/api/ar_pose/html/msg/ARMarker.html\"\
    >ar_pose::ARMarker message</a>\n                   - <a href=\"http://www.ros.org/doc/api/visualization_msgs/html/msg/Marker.html\"\
    >visualization_msgs::Marker message</a>\n\n      Connection between the Orocos\
    \ and ROS framework is done using the \n      <a href=\"http://ros.org/wiki/orocos_toolchain_ros\"\
    >Orocos ROS integration stack</a>.\n\n  "
  'name': 'ar_pose_ekf'
  'repo': 'camera_pose_estimation'
- 'brief': 'proxemic_models'
  'description': "\n\n     proxemic_models\n\n  "
  'name': 'proxemic_models'
  'repo': 'usc-ros-pkg'
- 'brief': 'Eigen'
  'description': "\n    This package contains version 3 of the Eigen C++ template\n\
    \    library for linear algebra. It automatically downloads, extracts\n    a tarball.\
    \ For each major release of the Eigen\n    library, the tarball will get updated.\
    \ This ROS package does not\n    intend to modify Eigen in any way, it simply\
    \ provides a convenient\n    way to download and compile the Eigen library. When\
    \ Eigen becomes\n    available from the major OS package managers, this ROS package\
    \ is\n    likely to be replaced by a system dependency.\n\n    This package contains\
    \ Eigen3 with EIGEN2_SUPPORT enabled.  In\n    future versions EIGEN2_SUPPORT\
    \ will be removed. \n  "
  'name': 'eigen'
  'repo': 'eigen'
- 'brief': 'turtlebot_teleop'
  'description': "\n\n     Provides teleoperation using joysticks or keyboard. \n\n\
    \  "
  'name': 'turtlebot_teleop'
  'repo': 'turtlebot_apps'
- 'brief': 'HRP-2 optimized dynamics'
  'description': "\n\n    FIXME\n\n  "
  'name': 'hrp2-dynamics'
  'repo': 'jrl-ros-pkg'
- 'brief': 'Active Realtime Segmentation'
  'description': "\n    This package implements a real-time active 3D scene segmentation.\
    \ \n    It is based on an implementation of Belief Propagation on the GPU.\n  "
  'name': 'active_realtime_segmentation'
  'repo': 'wg-ros-pkg'
- 'brief': 'cffi'
  'description': "\n      CFFI - The Common Foreign Function Interface\n      http://common-lisp.net/project/cffi/\n\
    \  "
  'name': 'cffi'
  'repo': 'cram_pl'
- 'brief': 'rflex'
  'description': "\n    ROS adaptations of the RFLEX driver. \n  "
  'name': 'rflex'
  'repo': 'wu-ros-pkg'
- 'brief': 'test_crosspackage'
  'description': "\n    This is a general purpose test package for placing things\
    \ relevant\n    to other tests where we want to verify that they work when going\n\
    \    cross package.  In particular, test_rosrecord, test_roslib, and\n    test_rosbagmigration.\n\
    \  "
  'name': 'test_crosspackage'
  'repo': 'ros_comm'
- 'brief': 'schunk_bringup_sim'
  'description': "\n\n     schunk_bringup_sim\n\n  "
  'name': 'schunk_bringup_sim'
  'repo': 'schunk_simulation'
- 'brief': 'Open Motion Planning Library (OMPL)'
  'description': "\n    A library of sampling-based motion planning algorithms\n  "
  'name': 'ompl'
  'repo': 'arm_navigation'
- 'brief': 'Cram based executive for the TUM Rosie robot.'
  'description': "\n  "
  'name': 'rosie_executive'
  'repo': 'cram_rosie'
- 'brief': 'pr2_arm_move_ik'
  'description': "\n\n    Move the pr2 arm using inverse kinematics\n\n  "
  'name': 'pr2_arm_move_ik'
  'repo': 'wg-ros-pkg'
- 'brief': 'stage_message_interface'
  'description': "\n\n     stage_message_interface\n\n  "
  'name': 'stage_message_interface'
  'repo': 'flyatar'
- 'brief': 'iTaSC_core'
  'description': "\n    iTaSC core functionallity of the iTaSC-Skill framework\n  "
  'name': 'itasc_core'
  'repo': 'itasc_core'
- 'brief': 'segway_rmp200_demos'
  'description': "\n\n     segway_rmp200_demos\n\n  "
  'name': 'segway_rmp_demos'
  'repo': 'segway-rmp-ros-pkg'
- 'brief': 'continual_planning_navigation_bringup'
  'description': "\n      This package contains launch files for a simple demo application\
    \ that\n      uses continual planning.\n  "
  'name': 'continual_planning_navigation_bringup'
  'repo': 'alufr-ros-pkg'
- 'brief': 'Orocos geometric_semantics_orocos_typekit Component package'
  'description': "\n        This package contains the components of the geometric_semantics_orocos_typekit\
    \ package\n    "
  'name': 'geometric_semantics_orocos_typekit'
  'repo': 'geometric_relations_semantics'
- 'brief': 'stereo_msgs'
  'description': "\n\n     stereo_msgs contains messages specific to stereo processing,\
    \ such as disparity images.\n\n  "
  'name': 'stereo_msgs'
  'repo': 'ros-pkg'
- 'brief': 'pi_meshes'
  'description': "\n\n     pi_meshes\n\n  "
  'name': 'pi_meshes'
  'repo': 'pi-robot-ros-pkg'
- 'brief': 'aaai_lfd_mixed_manipulator'
  'description': "\n\n     Object Manipulation for Breakfast Objects - Uses both the\
    \ openloop manipulation and the manipulation stack\n     \n\n  "
  'name': 'aaai_lfd_mixed_manipulator'
  'repo': 'bosch-ros-pkg'
- 'brief': 'roscpp_serialization'
  'description': "\n\nroscpp_serialization contains the code for serialization as\
    \ described in\n<a href=\"http://www.ros.org/wiki/roscpp/Overview/MessagesSerializationAndAdaptingTypes\"\
    >MessagesSerializationAndAdaptingTypes</a>.\n\nThis package is a component of\
    \ <a href=\"http://www.ros.org/wiki/roscpp\">roscpp</a>.\n\n  "
  'name': 'roscpp_serialization'
  'repo': 'ros_comm'
- 'brief': 'kinect_exp_logger'
  'description': "\n\n     kinect_exp_logger\n\n  "
  'name': 'kinect_exp_logger'
  'repo': 'ethzasl_mapping'
- 'brief': 'deictic_recognizers'
  'description': "\n\n     deictic_recognizers\n\n  "
  'name': 'deictic_recognizers'
  'repo': 'usc-ros-pkg'
- 'brief': 'Playstation 3 SIXAXIS or DUAL SHOCK 3 joystick driver.'
  'description': "\n\tDriver for the Sony PlayStation 3 SIXAXIS or DUAL SHOCK 3 joysticks.\
    \ In\n\tits current state, this driver is not compatible with the use of other\n\
    \tBluetooth HID devices. The driver listens for a connection on the HID ports,\n\
    \tstarts the joystick streaming data, and passes the data to the Linux\n\tuinput\
    \ device so that it shows up as a normal joystick.\n\t"
  'name': 'ps3joy'
  'repo': 'ros-pkg'
- 'brief': 'Diagnostics for etherCAT chains'
  'description': "\nMonitors etherCAT chains for packet drops, allows users to localize\
    \ a dropped packet or link.\n  "
  'name': 'ethercat_monitor'
  'repo': 'wg-ros-pkg'
- 'brief': 'roslisp tutorials'
  'description': 'Examples to demonstrate usage of roslisp'
  'name': 'roslisp_tutorials'
  'repo': 'roslisp_support'
- 'brief': 'rfid_people_following'
  'description': "\n    RFID people following\n  "
  'name': 'rfid_people_following'
  'repo': 'gt-ros-pkg'
- 'brief': 'auv_sim'
  'description': "\n\n     auv_sim\n\n  "
  'name': 'auv_sim'
  'repo': 'hwu-osl-ros-pkg'
- 'brief': 'robotino_node'
  'description': "\nImplements a node which reads sensor data from Robotino and broadcasts\
    \ it. \nIt also implements a few services.\n  "
  'name': 'robotino_node'
  'repo': 'robotino-ros-pkg'
- 'brief': 'Launch files and configuration files needed to run the calibration pipeline
    on PR2'
  'description': "\n     Launch files and configuration files needed to run the calibration\
    \ pipeline on PR2. This package is\n     still experimental. Expect large changes\
    \ tp occur.\n  "
  'name': 'pr2_calibration_launch'
  'repo': 'pr2_calibration'
- 'brief': 'people_dataset_msgs'
  'description': "\n\n     people_dataset_msgs\n\n  "
  'name': 'people_dataset_msgs'
  'repo': 'wg-ros-pkg'
- 'brief': 'A 2D Costmap'
  'description': "\n  This package provides an implementation of a 2D costmap that\
    \ takes in sensor\n  data from the world, builds a 2D or 3D occupancy grid of\
    \ the data (depending\n  on whether a voxel based implementation is used), and\
    \ inflates costs in a\n  2D costmap based on the occupancy grid and a user specified\
    \ inflation radius.\n  This package also provides support for map_server based\
    \ initialization of a\n  costmap, rolling window based costmaps, and parameter\
    \ based subscription to\n  and configuration of sensor topics.\n"
  'name': 'costmap_2d'
  'repo': 'navigation'
- 'brief': 'Plugin for steering a robot'
  'description': "\n\n     rosgui_robot_steering provides a rosgui plugin for steering\
    \ a robot using twist messages.\n\n  "
  'name': 'rosgui_robot_steering'
  'repo': 'ros_gui'
- 'brief': 'rviz_shows_cop'
  'description': "\n     rviz_shows_cop\n  "
  'name': 'cop_rviz_plugin'
  'repo': 'tum-ros-pkg'
- 'brief': 'Environment Information Provider'
  'description': "\n     The Environment (ce_environment) package is a package,\n\
    \     which provides information about the environment including\n     weather,\
    \ conditions, forcast, daylight etc.\n     \n     In a cognitive environment you\
    \ can reuse these information\n     and adapt your robots to it.\n     \n  "
  'name': 'ce_environment'
  'repo': 'vmi-ros-pkg'
- 'brief': 'test_rosnode'
  'description': "\n\n     Tests for the rosnode package and command-line tool.\n\n\
    \  "
  'name': 'test_rosnode'
  'repo': 'ros_comm'
- 'brief': 'thea'
  'description': "\n      Owl parser and reasoner library for swi-prolog.\n\n    \
    \  Taken from: http://www.semanticweb.gr/TheaOWLLib/\n  "
  'name': 'thea'
  'repo': 'knowrob'
- 'brief': 'robotino_kinect_registration'
  'description': "\n  "
  'name': 'robotino_kinect_registration'
  'repo': 'robotino-ros-pkg'
- 'brief': 'ride_stage'
  'description': "\n    Runs the RIDE user interface on several simulated robots\n\
    \  "
  'name': 'ride_stage'
  'repo': 'wu-ros-pkg'
- 'brief': 'ppl_detection'
  'description': "\n\n     People detection using the Microsoft Kinect\n\n  "
  'name': 'ppl_detection'
  'repo': 'astar-ros-pkg'
- 'brief': ''
  'description': "\n    Convert between sensor_msgs::PointCloud and the sensor_msgs::PointCloud2\
    \ formats.\n  "
  'name': 'point_cloud_converter'
  'repo': 'ros-pkg'
- 'brief': 'tf_workshop_demo'
  'description': "\n\n     tf_workshop_demo\n\n  "
  'name': 'tf_workshop_demo'
  'repo': 'wg-ros-pkg'
- 'brief': 'map_filter'
  'description': "\n\n     map_filter\n\n  "
  'name': 'map_filter'
  'repo': 'brown-experimental'
- 'brief': 'simon_game'
  'description': "\n\n     simon_game is used to control the Simon-like game hardware\n\
    \     (lights and buttons)\n\n  "
  'name': 'simon_game'
  'repo': 'darpa_arm_sim_servers'
- 'brief': 'Teleop configuration for the PR2 while running navigation.'
  'description': "\n     This package holds a special teleop configuration for the\
    \ PR2 robot that\n     should be used when running applications that use autonomous\
    \ navigation.\n  "
  'name': 'pr2_navigation_teleop'
  'repo': 'pr2_navigation'
- 'brief': 'Tools for creating and using plugins with ROS'
  'description': "\n\nThe pluginlib package provides tools for writing and dynamically\
    \ loading plugins using the ROS build infrastructure. To work, these tools require\
    \ plugin providers to register their plugins in the manifest.xml of their package.\
    \ \n\nPluginlib includes parts of Poco from pocoproject.org\n  "
  'name': 'pluginlib'
  'repo': 'pluginlib'
- 'brief': 'oit_msgs'
  'description': "\n  "
  'name': 'oit_msgs'
  'repo': 'usc-ros-pkg'
- 'brief': 'Foundation for plugins using roscpp'
  'description': "\n\n     rosgui_roscpp enables rosgui plugins to use the C++ client\
    \ library for ROS.\n\n  "
  'name': 'rosgui_roscpp'
  'repo': 'ros_gui'
- 'brief': 'stop_server'
  'description': "\n\n     stop_server is an RFNServer which halts all activity. \
    \ It does this through the executor's preemption, which stops the previous activity.\
    \  In this sense, the actual code in this package does very little, but the stop\
    \ server itself allows for an escape from other activities.\n\n  "
  'name': 'stop_server'
  'repo': 'roboframenet'
- 'brief': ''
  'description': "\n    <p>\n      PCL (Point Cloud Library) Visualization: a library\
    \ for PointCloud2\n      visualizations. Includes C++ API for visualizing pcl::PointCloud\
    \ data,\n      as well as tools for visualizing PointCloud2 messages and PCD files.\
    \  \n    </p>\n  "
  'name': 'pcl_visualization'
  'repo': 'ros-pkg'
- 'brief': 'object_graph'
  'description': "\n\n     object_graph\n\n  "
  'name': 'object_graph'
  'repo': 'ubc-ros-pkg'
- 'brief': 'motor_halt_scheduler_trace'
  'description': "\n\n    Collects a trace of scheduler activity, inserting a mark\
    \ each time the\n    motors halt.\n\n  "
  'name': 'motor_halt_scheduler_trace'
  'repo': 'wg-ros-pkg'
- 'brief': 'cop_collision_interface'
  'description': "\n\n     cop_collision_interface\n\n  "
  'name': 'cop_collision_interface'
  'repo': 'ias_perception'
- 'brief': 'maximus_sensors'
  'description': "\n\n     maximus_sensors\n\n  "
  'name': 'maximus_sensors'
  'repo': 'smart-robotics-ros-pkg'
- 'brief': 'object_manipulation_msgs'
  'description': "\n\n    Generic messages for pickup and place functionality. The\
    \ messages\n    contained here define a complete interface for pickup and place\n\
    \    tasks. \n\n    Note that for some of the general services and actions defined\n\
    \    here, robot-specific implementations might exist elsewhere and be\n    used\
    \ at run time.\n\n  "
  'name': 'object_manipulation_msgs'
  'repo': 'wg-ros-pkg'
- 'brief': 'rve_interfaces'
  'description': "\n\n     rve_interfaces\n\n  "
  'name': 'rve_interfaces'
  'repo': 'visualization_engine'
- 'brief': 'bond'
  'description': "\n\n     A bond allows two processes, A and B, to know when the\
    \ other has\n     terminated, either cleanly or by crashing.  The bond remains\n\
    \     connected until it is either broken explicitly or until a\n     heartbeat\
    \ times out.\n\n  "
  'name': 'bond'
  'repo': 'bond_core'
- 'brief': 'scout_ndirect'
  'description': "\n\n     Wraper for the Ndirect library, allowing control of a Scout\
    \ robot on ROS.\n\n  "
  'name': 'scout_ndirect'
  'repo': 'scout_robot'
- 'brief': 'empty_pointcloud'
  'description': "\n\n     empty_pointcloud\n\n  "
  'name': 'empty_pointcloud'
  'repo': 'uuisrc-ros-pkg'
- 'brief': 'object_recognition_server'
  'description': "\n\n     object_recognition_server\n\n  "
  'name': 'object_recognition_server'
  'repo': 'object_recognition'
- 'brief': 'Static map server'
  'description': "\n\n     Provides the function to up- and download from the client.\
    \ \n\n  "
  'name': 'rcf_mod_map_compress'
  'repo': 'roblab-whge-ros-pkg'
- 'brief': 'arbotix_firmware'
  'description': 'Firmware source code for ArbotiX ROS bindings.'
  'name': 'arbotix_firmware'
  'repo': 'vanadium-ros-pkg'
- 'brief': 'hector_geotiff'
  'description': "\n\n     hector_geotiff\n\n  "
  'name': 'hector_geotiff'
  'repo': 'tu-darmstadt-ros-pkg'
- 'brief': 'Generating Engagement Behaviors in Human-Robot Interaction'
  'description': "\n    Human-robot engagement generation package developed at Worcester\
    \ Polytechnic\n    Institute by Aaron Holroyd et al. <br/>Currently contains the\
    \ \n    <b>generation node</b> that is responsible for generating \n    <u>directed\
    \ gaze</u>, <u>mutual facial gaze</u>, <u>adjacency \n    pairs</u>, and <u>backchannels</u>\
    \ during an interaction.\n  "
  'name': 'engagement_generation'
  'repo': 'ros-engagement'
- 'brief': 'cob_light'
  'description': "\n\n     This package contains scripts to operate the LED lights\
    \ on Care-O-bot.\n\n  "
  'name': 'cob_light'
  'repo': 'cob_driver'
- 'brief': 'vfh_recognizer_fs_test'
  'description': "\n\n     vfh_recognizer_fs_test\n\n  "
  'name': 'vfh_recognizer_fs_test'
  'repo': 'wg-ros-pkg'
- 'brief': 'rcf_com_lms100'
  'description': "\n\n     rcf_com_lms100\n     \n     ROS driver for the sick lms100\
    \ laser scanner. The driver is part of the rcf4ros\n     communication layer.\n\
    \     \n     Adapted from driver code for the sick lms400 laser scanner.\n\n  "
  'name': 'lms100'
  'repo': 'roblab-whge-ros-pkg'
- 'brief': 'cob_robot_calibration_est'
  'description': "\n\n     cob_robot_calibration_est\n\n  "
  'name': 'cob_robot_calibration_est'
  'repo': 'cob_calibration'
- 'brief': 'ROS integration tests'
  'description': "\n    ROS high-level (language-neutral) integration test framework.\n\
    \  "
  'name': 'test_ros'
  'repo': 'ros_comm'
- 'brief': 'RViz plugin tutorials'
  'description': "\n\n     Tutorials showing how to write plugins for RViz.\n\n  "
  'name': 'rviz_plugin_tutorials'
  'repo': 'ros-pkg'
- 'brief': 'roslaunch_parse_tester'
  'description': "\nRoslaunch parse tester can check a launch file, package with launch\
    \ files, or collection of launch files for parsing and loading. \n  "
  'name': 'roslaunch_parse_tester'
  'repo': 'wg-ros-pkg'
- 'brief': 'mrpt_ekf_slam_3d'
  'description': "\n\n     mrpt_ekf_slam_3d\n\n  "
  'name': 'mrpt_ekf_slam_3d'
  'repo': 'mrpt-ros-pkg'
- 'brief': 'domains'
  'description': "\n      A collection of PDDL, PDDL/M domains and problems mainly\
    \ from the International Planning Competition (IPC).\n  "
  'name': 'planner_benchmarks'
  'repo': 'alufr-ros-pkg'
- 'brief': 'Kuka LWR'
  'description': "\n        This package contains itasc robot component for a KUKA\
    \ LWR\n\t    Part of the iTaSC-Skill framework, itasc_robots_objects\n    "
  'name': 'kuka_lwr'
  'repo': 'itasc_robots_objects'
- 'brief': 'turtlebot_block_manipulation'
  'description': "\n\n     turtlebot_block_manipulation contains a demo allowing the\
    \ TurtleBot arm to manipulate small blocks on a level surface using interactive\
    \ markers.\n\n  "
  'name': 'turtlebot_block_manipulation'
  'repo': 'turtlebot_arm'
- 'brief': 'message_sampler'
  'description': "\n\n     message_sampler\n\n  "
  'name': 'message_sampler'
  'repo': 'scene_labelling_rgbd'
- 'brief': 'mod_tf'
  'description': "\n\n     mod_tf\n\n  "
  'name': 'tf_prolog'
  'repo': 'knowrob'
- 'brief': 'Node to manage synchronization of the pr2 cameras and     the texture
    projector.'
  'description': "\n    <p>\n    The PR2 is equipped with a texture projector that\
    \ can be used to\n    project a texture onto featureless surfaces, allowing their\n\
    \    three-dimensional structure to be determined using stereoscopy. The\n   \
    \ projector operates in a pulsed mode, producing brief (2ms) pulses of\n    light.\
    \ Cameras that want to see the texture must expose during the\n    projector pulse;\
    \ other cameras should be expose while the projector is\n    off.\n    </p>\n\
    \    \n    <p>\n      This package contains the pr2_projector_synchronizer node.\
    \ Based on its dynamically reconfigurable parameters, this node controls the projector\
    \ pulsing, and sets up triggering of the WGE100 cameras. \n    </p>\n  "
  'name': 'pr2_camera_synchronizer'
  'repo': 'pr2_robot'
- 'brief': 'armadillo_arm_navigation'
  'description': "\n\n     armadillo_arm_navigation\n\n  "
  'name': 'armadillo_arm_navigation'
  'repo': 'swri-ros-pkg'
- 'brief': 'ias_mechanism_controllers'
  'description': "\n    Mechanism controllers for ias related stuff\n  "
  'name': 'ias_mechanism_controllers'
  'repo': 'tum-ros-pkg'
- 'brief': 'stage_msgs'
  'description': "\n\n     stage_msgs\n\n  "
  'name': 'stage_msgs'
  'repo': 'wg-ros-pkg'
- 'brief': 'camera_self_filter'
  'description': "\n\n     camera_self_filter\n\n  "
  'name': 'camera_self_filter'
  'repo': 'bosch-ros-pkg'
- 'brief': 'infinity_pedals'
  'description': "\n\n     infinity_pedals\n\n  "
  'name': 'infinity_pedals'
  'repo': 'wg-ros-pkg'
- 'brief': ''
  'description': "\n    A chamfer matching library, using both edge distance and orientation.\n\
    \  "
  'name': 'chamfer_matching'
  'repo': 'wg-ros-pkg'
- 'brief': 'test_matlab_full_ros'
  'description': "\n\n     This is an example of how to create a bridge between matlab\
    \ and ROS (necessary due to incompatibilities between log4cxx/rosconsole and matlab).\n\
    \n     Connects to SharedMemoryStorage using a SharedMemoryPublisher; connects\
    \ to a ROS topic (geometry_msgs::Vector3); publishes the value of the\n     Vector3\
    \ to SharedMemoryStorage and quits. This node is called by the test_matlab example.\n\
    \n  "
  'name': 'test_matlab_full_ros'
  'repo': 'usc-ros-pkg'
- 'brief': 'nite'
  'description': "\n\n    This is a meta package to pull in the dependencies for NITE\
    \ and\n    export the necessary build flags.\n\n  "
  'name': 'nite'
  'repo': 'openni_kinect'
- 'brief': 'laser_scan_splitter'
  'description': "\n\n  The laser_scan_splitter takes in a LaserScan message and splits\
    \ it into a number of other LaserScan messages. Each of the resulting laser scans\
    \ can be assigned an arbitrary coordinate frame, and is published on a separate\
    \ topic.\n\n  "
  'name': 'laser_scan_splitter'
  'repo': 'scan_tools'
- 'brief': 'Tool for generating ROS Wiki documentation'
  'description': "\n    Creates CS/NodeAPI clearsilver documentation from source code\
    \ files. Typical usage: rosrun roswiki_node roswiki src/*\n  "
  'name': 'roswiki_node'
  'repo': 'wu-ros-pkg'
- 'brief': ''
  'description': "\n    <p>\n      DP_PTU47 controls a DirectedPerception Pan-Tilt-Unit\
    \ (PTU-47). The driver provides an easily accessible service for position commands.\n\
    \    </p>\n  "
  'name': 'dp_ptu47_pan_tilt_stage'
  'repo': 'wg-ros-pkg'
- 'brief': 'move_arm_head_monitor'
  'description': "\n\n     A node that provides monitoring capability for robot arms\
    \ by continuously pointing the head at the location in space where an arm will\
    \ be in the future.\n\n  "
  'name': 'move_arm_head_monitor'
  'repo': 'arm_navigation_experimental'
- 'brief': 'kinematics_tests'
  'description': "\n\n    This package contains some programs to test the inverse\
    \ kinematics implemented\n    in sr_kinematics.\n\n  "
  'name': 'kinematics_tests'
  'repo': 'shadow_robot'
- 'brief': 'Implements the legendary bash roscd in the windows shell'
  'description': "\n\n  Some quick magic to implement roscd in cmd.exe. This is called\
    \ from \n  winshell.bat (see win_env).\n\n  "
  'name': 'win_roscd'
  'repo': 'win_ros'
- 'brief': 'small'
  'description': "\n\n     SMALL is a C++ library defining and implementing common\
    \ geometric and \n     mathematical functionality required for robotics applications.\n\
    \     SMALL consists of two major parts: a linear algebra library \n     (matrices\
    \ and vectors) and a spatial math library (poses and transformations).\n\t It\
    \ is just a collection of C++ headers and not a binary library.\n\n  "
  'name': 'small'
  'repo': 'csiro-asl-ros-pkg'
- 'brief': 'hbrc_demo'
  'description': "\n\n     Pi Robot demo for the HBRC meeting\n\n  "
  'name': 'hbrc_demo'
  'repo': 'pi-robot-ros-pkg'
- 'brief': 'pr2_tabletop_manipulation_gazebo_demo'
  'description': "\n\n     Tests pr2_tabletop_manipulation in gazebo simulation.\n\
    \     Uses the grasping pipeline and runs through a single pick and place routine.\n\
    \n  "
  'name': 'pr2_tabletop_manipulation_gazebo_demo'
  'repo': 'wg-ros-pkg'
- 'brief': 'pr2_gripper_action'
  'description': "\n\n  The pr2_gripper_action provides an action interface for using\
    \ the\n  gripper. Users can specify what position to move to (while limiting the\n\
    \  force) and the action will report success when the position is reached or\n\
    \  failure when the gripper cannot move any longer.\n\n  "
  'name': 'pr2_gripper_action'
  'repo': 'wg-ros-pkg'
- 'brief': 'fast_plane_detector'
  'description': "\n\n     fast_plane_detector\n\n  "
  'name': 'fast_plane_detection'
  'repo': 'wg-ros-pkg'
- 'brief': 'nao2pr2'
  'description': "\n  A node for converting the commands for the nao into pr2 commands.\
    \ \n\n  "
  'name': 'nao2pr2'
  'repo': 'brown-experimental'
- 'brief': 'segway_omni'
  'description': "\n      A package for commanding omnidirectional Segway bases.\n\
    \  "
  'name': 'hrl_segway_omni'
  'repo': 'gt-ros-pkg'
- 'brief': 'cob_sound'
  'description': "\n\n     This package implements a sound play module using text2wave\
    \ and aplay through python.\n\n  "
  'name': 'cob_sound'
  'repo': 'cob_driver'
- 'brief': 'pr2_controllers_msgs'
  'description': "\n\n     Messages, services, and actions used in the pr2_controllers\
    \ stack.\n\n  "
  'name': 'pr2_controllers_msgs'
  'repo': 'wg-ros-pkg'
- 'brief': 'tf2_geometry_msgs'
  'description': "\n\n     tf2_geometry_msgs\n\n  "
  'name': 'tf2_geometry_msgs'
  'repo': 'geometry_experimental'
- 'brief': 'Filters for removing the background from sensor data'
  'description': "\n\n     Currently only includes a simple filter for filtering floor\
    \ points out of PointCloud data.\n\n    "
  'name': 'background_filters'
  'repo': 'ua-ros-pkg'
- 'brief': 'pr2_arm_navigation_perception'
  'description': "\n    This package contains launch file for launching the perception\
    \ components of the pr2_arm_navigation stack. The perception components allow\
    \ you to build a collision space representation of the world. \n  "
  'name': 'pr2_arm_navigation_perception'
  'repo': 'wg-ros-pkg'
- 'brief': 'turtle_teleop'
  'description': "\n\n     turtle_teleop is a simple package to demonstrate how to\
    \ write a teleoperation node in ROS using the turtlesim.\n\n  "
  'name': 'turtle_teleop'
  'repo': 'ros-pkg'
- 'brief': 'c3d'
  'description': "\n    A package for reading in c3d motion capture files. \n  "
  'name': 'c3d'
  'repo': 'wu-ros-pkg'
- 'brief': ''
  'description': "\n    A collection of sample consensus models developed at IAS@TUM\n\
    \  "
  'name': 'pcl_ias_sample_consensus'
  'repo': 'mapping'
- 'brief': 'Tele-operation source which uses a joystick as input.'
  'description': "\n\n    This package provides header files and a library which implement\
    \ a\n    tele-operation source which uses a joystick as input.\n\n  "
  'name': 'teleop_source_joystick'
  'repo': 'generic_teleop'
- 'brief': 'cob_footprint_observer'
  'description': "\n\n     cob_footprint_observer\n\n  "
  'name': 'cob_footprint_observer'
  'repo': 'cob_driver'
- 'brief': 'omclock'
  'description': "\n\n    clock for overhead_map\n\n  "
  'name': 'omclock'
  'repo': 'brown-experimental'
- 'brief': 'Controllers for the PR2'
  'description': "\n    The pr2_mechanism_controllers package contains realtime\n\
    \    controllers that are meant for specific mechanisms of the PR2.\n  "
  'name': 'pr2_mechanism_controllers'
  'repo': 'wg-ros-pkg'
- 'brief': 'vp_numbers'
  'description': "\n\tThis package contains basic operators for integers and floats\
    \ that are especially useful\n\tto learn and understand ROS. The following operations\
    \ are covered by this node:\n\t* Addition\n\t* Subtraction\n\t* Multiplication\n\
    \t* Division\n\t* Average\n\t* Median\n\t* Number (Generates a fixed number)\n\
    \t* Random (Generates a random number)\n\t* if-else\n\t* for-loop\n\t* Converter\
    \ (float to int and vice versa)\n\t* Converter (32 bit to 64 bit and vice versa)\n\
    \tAdditionally, the package contains the &quot;vp_package.xml&quot; file which\
    \ is used by the \n\tvisual programming editor for ROS (package visualprogramming).\
    \ In case the vp_common stack is\n\tnot installed in the stacks root folder (/opt/ros/diamondback/stacks/)\
    \ please modify the\n\tsource argument in the &quot;vp_package.xml&quot; file.\n\
    \  "
  'name': 'vp_numbers'
  'repo': 'vmi-ros-pkg'
- 'brief': 'An experiment in learning path schemas'
  'description': "\n\n     path_learning_experiment\n\n    "
  'name': 'path_learning_experiment'
  'repo': 'ua-ros-pkg'
- 'brief': 'sbpl_arm_planner_interface'
  'description': "\n\n    sbpl_arm_planner_interface\n\n  "
  'name': 'sbpl_arm_planner_interface'
  'repo': 'sbpl_arm_planning'
- 'brief': 'skin_dashboard'
  'description': "\n\n     skin_dashboard\n\n  "
  'name': 'skin_dashboard'
  'repo': 'bosch-ros-pkg'
- 'brief': 'openni_unstable'
  'description': "\n\n     openni_unstable\n\n  "
  'name': 'openni_unstable'
  'repo': 'usc-ros-pkg'
- 'brief': 'A collection of memory allocators'
  'description': "\n  \n    Contains aligned allocation functions, as well as an STL-compatible\
    \ AlignedAllocator class.\n\n  "
  'name': 'allocators'
  'repo': 'ros_realtime'
- 'brief': 'task_recorder_test'
  'description': "\n\n     task_recorder_test\n\n  "
  'name': 'task_recorder_test'
  'repo': 'wg-ros-pkg'
- 'brief': 'reem_arm_navigation_actions'
  'description': ''
  'name': 'reem_arm_navigation_actions'
  'repo': 'reem_arm_navigation'
- 'brief': 'pr2_joint_limit_verification'
  'description': "\n\n     pr2_joint_limit_verification\n\n  "
  'name': 'pr2_joint_limit_verification'
  'repo': 'wg-ros-pkg'
- 'brief': 'rviz_interaction_tools'
  'description': "\n\n     Various tools for realizing 3D user interfaces in rviz,\n\
    \     e.g. for scene segmentation, object recognition or\n     grasping.\n\n  "
  'name': 'rviz_interaction_tools'
  'repo': 'wg-ros-pkg'
- 'brief': 'ubc_vrs_result_analysis'
  'description': "\n\n     ubc_vrs_result_analysis\n\n  "
  'name': 'ubc_vrs_result_analysis'
  'repo': 'ubc-ros-pkg'
- 'brief': 'R1_launch'
  'description': "\n\n     R1_launch\n\n  "
  'name': 'R1_launch'
  'repo': 'JKU_Robotic_Stack'
- 'brief': 'trajectory_msgs'
  'description': "\n\n     trajectory_msgs\n\n  "
  'name': 'trajectory_msgs'
  'repo': 'ros-pkg'
- 'brief': 'hrl_pr2_arms'
  'description': "\n\n     Python class to control the PR2. Can also use this arm\
    \ with\n     Equilibrium Point Control.\n  "
  'name': 'hrl_pr2_arms'
  'repo': 'gt-ros-pkg'
- 'brief': 'krypton RTT bindings'
  'description': "\n\n      This package contains the krypton RTT bindings, in order\
    \ to easily read out and modify all Krypton structs in the Taskbrowser.\n\n  "
  'name': 'krypton_typekit'
  'repo': 'krypton_hardware'
- 'brief': 'app_manager'
  'description': "\n\n     app_manager\n\n  "
  'name': 'app_manager'
  'repo': 'multimaster_experimental'
- 'brief': 'cmvision'
  'description': "\n\n    Node for the Color Machine Vision Project, used for fast\
    \ color blob detection\n  "
  'name': 'cmvision'
  'repo': 'wg-ros-pkg'
- 'brief': 'DPPanTiltCompat'
  'description': "\n\n     DPPanTiltCompat\n\n  "
  'name': 'DPPanTiltCompat'
  'repo': 'darpa_arm_sim_servers'
- 'brief': 'hrl_camera'
  'description': "\n     hrl_camera\n  "
  'name': 'hrl_camera'
  'repo': 'gt-ros-pkg'
- 'brief': 'asctec_proc'
  'description': "\n\n     The asctec_proc package is a bridge between the asctec_autopilot\
    \ software and hardware-independent MAV tools.\n\n  "
  'name': 'asctec_proc'
  'repo': 'asctec_drivers'
- 'brief': 'pr2_arm_navigation_config'
  'description': "\n\n     pr2_arm_navigation_config\n\n  "
  'name': 'pr2_arm_navigation_config'
  'repo': 'wg-ros-pkg'
- 'brief': 'irobot_test'
  'description': "\n\n     irobot_test\n\n  "
  'name': 'irobot_test'
  'repo': 'brown-experimental'
- 'brief': 'R1_teleop_key'
  'description': "\n\n     R1_teleop_key\n\n  "
  'name': 'R1_teleop_key'
  'repo': 'JKU_Robotic_Stack'
- 'brief': '2009_humanoids_epc_pull'
  'description': "\n        This package contains code associated with the following\n\
    \        publication: \n        Pulling Open Novel Doors and Drawers with Equilibrium\
    \ Point Control.\n        Advait Jain and Charles C. Kemp. IEEE-RAS International\
    \ Conference on\n        Humanoid Robots (Humanoids), 2009.\n    "
  'name': '2009_humanoids_epc_pull'
  'repo': 'gt-ros-pkg'
- 'brief': 'Interface to the HighLevel Processor of the Ascending Technologies helicopters'
  'description': "\n\n     Interfaces to the &quot;HighLevel&quot; Processor of the\
    \ Ascending Technologies helicopters where fast IMU datafusion with arbitrary\
    \ external position input and position control is executed at 1 kHz. \n     Furthermore,\
    \ all relevant data as IMU, GPS and status can be accessed at configurable rates\
    \ and baudrates.\n\n  "
  'name': 'asctec_hl_interface'
  'repo': 'asctec_mav_framework'
- 'brief': 'riq_hand_ethercat_hardware'
  'description': "\n\n     riq_hand_ethercat_hardware\n\n  "
  'name': 'riq_hand_ethercat_hardware'
  'repo': 'wg-ros-pkg'
- 'brief': 'nxt_lejos_map_server'
  'description': "\n     The nxt_lejos_map_server package will publish leJOS line\
    \ maps\n     as occupancy grid maps so that they can be used by rviz and\n   \
    \  the ROS navigation stack. Currently it publishes line maps as\n     markers\
    \ that can be shown in rviz.\n  "
  'name': 'nxt_lejos_map_server'
  'repo': 'lejos-ros-pkg'
- 'brief': 'wg_flirtlib'
  'description': "\n    Launch files and data for using flirtlib in willow garage\
    \ map\n  "
  'name': 'wg_flirtlib'
  'repo': 'flirtlib_features'
- 'brief': 'people_msgs'
  'description': "\n\n     Messages used by nodes in the people stack.\n\n  "
  'name': 'people_msgs'
  'repo': 'wg-ros-pkg'
- 'brief': 'pcl_to_octree'
  'description': "\n\n<p>\n     pcl_to_octree - a package to convert the PointCloud\
    \ format to octree format\n</p>\n  "
  'name': 'pcl_to_octree'
  'repo': 'mapping'
- 'brief': 'Parameters for local navigation'
  'description': "\n\n     A set of parameters that work fine with the PR2 at University\
    \ of Ulster. Based on\n     code from Travis Deyle.\n\n  "
  'name': 'good_pr2_local_nav'
  'repo': 'uuisrc-pr2-pkgs'
- 'brief': 'The Phidgets C API'
  'description': '


    This package contains the Official Phidgets C API


    '
  'name': 'phidgetspp_c_api'
  'repo': 'foote-phidget'
- 'brief': 'tod'
  'description': "\n\n\t\ttod - Textured object detection for the\n\t\tmasses (or\
    \ atleast those with Robots).\n\n  "
  'name': 'tod'
  'repo': 'wg-ros-pkg'
- 'brief': 'acado'
  'description': "\n\n     <a href=\"http://www.acadotoolkit.org/\">ACADO toolkit</a>\
    \ is a software environment and algorithm collection for automatic control and\
    \ dynamic optimization. It provides a general framework for using a great variety\
    \ of algorithms for direct optimal control, including model predictive control,\
    \ state and parameter estimation and robust optimization. ACADO Toolkit is implemented\
    \ as self-contained C++ code and comes along with user-friendly Matlab interfaces.\
    \ The object-oriented design allows for convenient coupling of existing optimization\
    \ packages and for extending it with user-written optimization routines.\n\n  "
  'name': 'acado'
  'repo': 'optimization'
- 'brief': 'VNC stream to ROS Image Topic'
  'description': "\n     This package allows to publish a VNC stream to a specified\
    \ image topic.\n  "
  'name': 'vnc_image_client'
  'repo': 'vmi-ros-pkg'
- 'brief': 'imu_filter'
  'description': "\n\n     imu_filter\n\n  "
  'name': 'imu_filter'
  'repo': 'imu_filter'
- 'brief': 'object_mapping'
  'description': "\n\n     object_mapping\n\n  "
  'name': 'object_mapping'
  'repo': 'wg-ros-pkg'
- 'brief': 'turtlebot_rndmwalk'
  'description': "\n\n     A small demo application to get your TurtleBot moving around\
    \ autonomously. The random behaviour of the robot causes it to switch between\
    \ driving left, straight and right. After detecting an obstacle, the robot will\
    \ stop and turn for a random period of time before attempting to continue motion.\n\
    \n  "
  'name': 'turtlebot_rndmwalk'
  'repo': 'clearpath-ros-pkg'
- 'brief': 'RangeTests'
  'description': "\n\n     Range Tests Specific for the PANDORA\n\n  "
  'name': 'RangeTests'
  'repo': 'pandora-auth-ros-pkg'
- 'brief': 'testMarkers'
  'description': "\n\n     testMarkers\n\n  "
  'name': 'testMarkers'
  'repo': 'rtc-us-ros-pkg-branches'
- 'brief': 'two_lwr_bringup'
  'description': "\n\n     two_lwr_bringup\n\n  "
  'name': 'two_lwr_bringup'
  'repo': 'two_lwr_robot'
- 'brief': 'pcl_cv_bridge'
  'description': "\n\n     pcl_cv_bridge\n\n  "
  'name': 'pcl_cv_bridge'
  'repo': 'wg-ros-pkg'
- 'brief': 'ffha: pddl planner'
  'description': "\nhttp://ipc.informatik.uni-freiburg.de/Planners\n\nCopyright 2002\
    \ Albert Ludwigs University Freiburg Institute of\nComputer Science\n\nCopyright\
    \ 2008 Emil Keyder, Hector Geffner\n\nMost of the code in this program comes from\
    \ from Jorg Hoffmanns\nMetric-FF planner. Additions are due to Emil Keyder and\
    \ Hector\nGeffner. The code as a whole is distributed under the GPL license. See\n\
    the file gpl.txt for more information.\n\nContact emilkeyder@gmail.com with bug\
    \ reports or questions.\n\n  "
  'name': 'ffha'
  'repo': 'jsk-ros-pkg'
- 'brief': 'multi_table_detector'
  'description': "\n    Performs segmentation of point clouds to detect tables, objects\
    \ on the tables, and good manipulation poses around the tables\n  "
  'name': 'multi_table_detector'
  'repo': 'wg-ros-pkg'
- 'brief': 'Tools and utilities useful for c++ programming'
  'description': "\n\n     Includes various supporting tools and utilities for c++\
    \ programming.\n\n  "
  'name': 'ecl_utilities'
  'repo': 'ecl_core'
- 'brief': 'arwen'
  'description': "\nSimple program to convert swiss ranger data to ROS depth maps\n\
    \  "
  'name': 'arwen'
  'repo': 'brown-experimental'
- 'brief': 'trajectory_filter_server'
  'description': "\n  This package contains a server that advertises a ROS service\
    \ over which joint trajectories can be filtered. Internally, it creates and uses\
    \ a chain of filters that can filter joint trajectories. The filters are configured\
    \ using a yaml configuration file. \n  "
  'name': 'trajectory_filter_server'
  'repo': 'arm_navigation'
- 'brief': 'asebaros'
  'description': "\n    Bridge to access an ASEBA network from ROS.\n    For more\
    \ information about aseba, see: http://mobots.epfl.ch/aseba.html\n  "
  'name': 'asebaros'
  'repo': 'ethzasl_aseba'
- 'brief': 'rosprolog'
  'description': "\n    Script to execute prolog and set the prolog library paths\n\
    \    to other ros prolog packages.\n  "
  'name': 'rosprolog'
  'repo': 'knowrob'
- 'brief': 'otl_battery_checker'
  'description': "\n\n     otl_battery_checker is check PC's battery and publish it.\n\
    \     this program uses ACPI information of linux /proc/acpi/battery files.\n\n\
    \  "
  'name': 'otl_battery_checker'
  'repo': 'otl-ros-pkg'
- 'brief': 'jaus_adapter'
  'description': "\n\n     jaus_adapter\n\n  "
  'name': 'jaus_adapter'
  'repo': 'seabee3-ros-pkg'
- 'brief': 'brief_descriptor'
  'description': "\n\n     brief_descriptor\n\n  "
  'name': 'brief_descriptor'
  'repo': 'wg-ros-pkg'
- 'brief': 'roseus_tutorials'
  'description': "\n\n     roseus_tutorials\n\n  "
  'name': 'roseus_tutorials'
  'repo': 'jsk-ros-pkg'
- 'brief': 'cob_gazebo'
  'description': "\n\n    Launch scpipts for 3D simulation of Care-O-bot in gazebo\
    \ simulator.\n\n  "
  'name': 'cob_gazebo'
  'repo': 'cob_simulation'
- 'brief': 'ride_karulf_thesis'
  'description': "\n\n     ride_karulf_thesis\n\n  "
  'name': 'ride_karulf_thesis'
  'repo': 'wu-ros-pkg'
- 'brief': 'rfnserver'
  'description': "\n\n    rfnserver (aka, RFNServer, or RoboFrameNet Server) is a\
    \ class which provides bindings to RoboFrameNet for the purpose of adding semantic\
    \ frames, adding lexical units, and registering callbacks to semantic frames.\n\
    \n  "
  'name': 'rfnserver'
  'repo': 'roboframenet'
- 'brief': 'Build recipe to install code sourcery''s g++ lite toolchain for arm-gnueabi'
  'description': "\n\n     Installer script for code sourcery's g++ lite arm-none-linux-gnueabi\
    \ toolchain.\n     As this downloads a binary version of the toolchain, it only\
    \ works on \n     x86. To work for amd64, need to automate a download and compile\
    \ of the toolchain's source.\n     for 64 bit machines.\n\n  "
  'name': 'code_sourcery_arm_gnueabi'
  'repo': 'eros'
- 'brief': 'pr2_gripper_sensor_controller'
  'description': "\n\n     The pr2_gripper_sensor_controller package is a real-time\
    \ controller that integrates signals from the PR2 hand-mounted accelerometer and\
    \ finger-mounted pressure sensors with motor control of the gripper joint to do\
    \ highly responsive sensing and low-latency closed-loop control.\n\n  "
  'name': 'pr2_gripper_sensor_controller'
  'repo': 'wg-ros-pkg'
- 'brief': 'trajectory_sampling_gui'
  'description': "\n\n     trajectory_sampling_gui\n\n  "
  'name': 'trajectory_sampling_gui'
  'repo': 'alufr-ros-pkg'
- 'brief': 'nxt_lejos_speech_control'
  'description': "\n\n     nxt_lejos_speech_control\n\n  "
  'name': 'nxt_lejos_speech_control'
  'repo': 'lejos-ros-pkg'
- 'brief': 'sbpl_dynamic_planner'
  'description': "\n\n  An anytime planner for dynamic environments. It takes in a\
    \ start, goal, static costmap, and predicted dynamic obstacle trajectories. It\
    \ returns a safe path (x,y,theta) if one exists.\n\n  "
  'name': 'sbpl_dynamic_planner'
  'repo': 'sbpl_dynamic_env'
- 'brief': 'xsens_node'
  'description': "\n\n     xsens_node\n\n  "
  'name': 'xsens_node'
  'repo': 'seabee3-ros-pkg'
- 'brief': 'kurt_teleop'
  'description': "\n\n     kurt_teleop\n\n  "
  'name': 'kurt_teleop'
  'repo': 'uos-ros-pkg'
- 'brief': 'test_roswtf'
  'description': "\n\n     test_roswtf\n\n  "
  'name': 'test_roswtf'
  'repo': 'ros_comm'
- 'brief': 'Smach'
  'description': "\n    SMACH, which stands for 'state machine', is a task-level\n\
    \    architecture for rapidly creating complex robot behavior. At its\n    core,\
    \ SMACH is a ROS-independent Python library to build\n    hierarchical state machines.\
    \  SMACH is a new library that takes\n    advantage of very old concepts in order\
    \ to quickly create robust\n    robot behavior with maintainable and modular code.\n\
    \  "
  'name': 'smach'
  'repo': 'executive_smach'
- 'brief': 'rosdeb'
  'description': "\n\n     <p>\n     Tools for creating debian packages from ROS stacks,\
    \ plus managing a debian repository.\n     </p>     \n     <p>\n     rosdeb includes\
    \ the BeautifulSoup library, which is released under the Python license.\n   \
    \  </p>\n\n  "
  'name': 'rosdeb'
  'repo': 'ros_release'
- 'brief': ''
  'description': 'Cluster kill'
  'name': 'ckill'
  'repo': 'wg-ros-pkg'
- 'brief': 'bosch-ros-pkg maps'
  'description': "\n     Maps supporting bosch-ros-pkg\n  "
  'name': 'bosch_maps'
  'repo': 'bosch-ros-pkg'
- 'brief': 'WDLS Priorities Velocity Solver'
  'description': "\n        This package contains the components of the WDLSPriorVelSolver\
    \ package.\n\tPart of the iTaSC-Skill framework, itasc_solvers.\n    "
  'name': 'wdls_prior_vel_solver'
  'repo': 'itasc_solvers'
- 'brief': 'sap_pkg'
  'description': "\n\n     sap_pkg\n\n  "
  'name': 'saap_pkg'
  'repo': 'auction_methods_stack'
- 'brief': 'sr_tests'
  'description': "\n\n     sr_tests\n\n  "
  'name': 'sr_tests'
  'repo': 'shadow_robot'
- 'brief': 'pr2_arm_teleop_skin'
  'description': "\n\n     pr2_arm_teleop_skin\n\n  "
  'name': 'pr2_arm_teleop_skin'
  'repo': 'bosch-ros-pkg'
- 'brief': 'scene_generic'
  'description': "\n\n     scene_generic\n\n  "
  'name': 'scene_generic'
  'repo': 'scene_labelling_rgbd'
- 'brief': 'libptp2'
  'description': "\n        libptp2 is a library used to communicate with PTP devices\
    \ like still\n        imaging cameras or MP3 players (KODAK mc3). You can download\
    \ files\n        or tweak camera properties using ptpcam program boundled with\
    \ libptp2.\n    "
  'name': 'libptp2'
  'repo': 'ubc-ros-pkg'
- 'brief': 'A ROS system dependency manager'
  'description': "\n\nrosdep attempts to help you manage the external dependencies\
    \ of ROS. Because\nthe ROS codebase is so wide-ranging, these dependencies can\
    \ be hard to map onto\nyour system. For example, what packages do you need in\
    \ order to get the OpenGL\nheaders on Ubuntu? (answer: libgl1-mesa-dev and libglu1-mesa-dev).\
    \ These\npackage names can sometimes be unfriendly, and, much more seriously,\
    \ they\nusually vary slightly from one operating system or Linux distribution\
    \ to\nanother (e.g., Debian/Ubuntu versus Fedora), and can even vary between\n\
    different versions of the same distribution. Enter rosdep.\n\nThe commandline\
    \ API has been reviewed and will remain stable.  The\ninternal code API is subject\
    \ to change in future releases.\n\nThe yaml format is stable. There may be a few\
    \ extensions to the\nsyntax, but all changes will keep backwards compatability.\n\
    \n   "
  'name': 'rosdep'
  'repo': 'rosdep'
- 'brief': 'Provides Gazebo plugins to simulate the Katana arm'
  'description': "\n\n     This package provides Gazebo plugins to simulate the Katana\
    \ arm.\n\n  "
  'name': 'katana_gazebo_plugins'
  'repo': 'uos-ros-pkg'
- 'brief': 'kingfisher_teleop'
  'description': "\n    This package contains launch files which enable simple \n\
    \    teleoperation of the Clearpath Robotics Kingfisher.\n  "
  'name': 'kingfisher_teleop'
  'repo': 'clearpath-ros-pkg'
- 'brief': 'rosserial_xbee'
  'description': "\n\n     rosserial_xbee provides tools to do point to multipoint\
    \ communication\n     between rosserial nodes connected to an xbee.  All of the\
    \ nodes\n     communicate back to a master xbee connected to a computer running\n\
    \     ROS.  This software currently only works with Series 1 Xbees.\n     \n \
    \    This pkg includes python code from the python-xbee project:\n     http://code.google.com/p/python-xbee/\n\
    \     \n  "
  'name': 'rosserial_xbee'
  'repo': 'rosserial'
- 'brief': 'policy_improvement_utilities'
  'description': "\n\n     policy_improvement_utilities\n\n  "
  'name': 'policy_improvement_utilities'
  'repo': 'wg-ros-pkg'
- 'brief': 'roswiki'
  'description': "\n\n     Package for managing macros and other related code for\
    \ the ROS.org wiki\n\n  "
  'name': 'roswiki'
  'repo': 'rosorg'
- 'brief': 'pr2_camera_hammer'
  'description': "\n\n     pr2_camera_hammer\n\n  "
  'name': 'pr2_camera_hammer'
  'repo': 'wg-ros-pkg'
- 'brief': 'Explore demos'
  'description': 'Demos for explore package in bosch-ros-pkg'
  'name': 'explore_stage'
  'repo': 'bosch-ros-pkg'
- 'brief': 'cwru_sim_stage'
  'description': "\n\n     cwru_sim_stage\n\n  "
  'name': 'cwru_sim_stage'
  'repo': 'cwru-ros-pkg'
- 'brief': 'ROS driver for the Sub20 device from XDIMAX.'
  'description': "\n\n     The driver enables communication with a XDIMAX SUB20 device\
    \ via USB. The sub20 sources are downloaded from XDIMAX during build.\n\n  "
  'name': 'sub20'
  'repo': 'bosch-ros-pkg'
- 'brief': 'powerbot'
  'description': "\n      Powerbot URDF definitions.\n  "
  'name': 'powerbot_defs'
  'repo': 'ubc-ros-pkg'
- 'brief': 'Wubble robot hardware'
  'description': "\n\n        wubble_robot\n\n    "
  'name': 'wubble_robot'
  'repo': 'ua-ros-pkg'
- 'brief': 'generic_controllers'
  'description': "\n\n     generic_controllers\n\n  "
  'name': 'generic_controllers'
  'repo': 'seabee3-ros-pkg'
- 'brief': 'flyatar_calibration'
  'description': "\n\n     flyatar_calibration\n\n  "
  'name': 'flyatar_calibration'
  'repo': 'flyatar'
- 'brief': 'Controllers for Wubble Robot'
  'description': "\n        Controllers for Wubble Robot (head pan/tilt, laser tilt,\
    \ etc.)\n    "
  'name': 'wubble_controllers'
  'repo': 'ua-ros-pkg'
- 'brief': 'ADEPT_VIPER_S650_arm_navigation'
  'description': "\n\n     ADEPT_VIPER_S650_arm_navigation\n\n  "
  'name': 'ADEPT_VIPER_S650_arm_navigation'
  'repo': 'swri-ros-pkg'
- 'brief': 'Libraries and examples for ROSserial usage on Arduino/AVR Platforms'
  'description': ''
  'name': 'rosserial_arduino'
  'repo': 'rosserial'
- 'brief': 'longhorn_arm_navigation'
  'description': "\n\n     longhorn_arm_navigation\n\n  "
  'name': 'longhorn_arm_navigation'
  'repo': 'swri-ros-pkg'
- 'brief': 'Ackermann steering Qt tele-operation'
  'description': "\n\n     Qt tele-operation interface for driving a vehicle with\
    \ Ackermann\n     steering under human control.\n\n  "
  'name': 'ackermann_qt'
  'repo': 'utexas-art-ros-pkg'
- 'brief': 'cv_markers'
  'description': "\n\n     cv_markers\n\n  "
  'name': 'cv_markers'
  'repo': 'ros-pkg'
- 'brief': 'cob_base_drive_chain'
  'description': "\n\n     This package contains classes that are able to control\
    \ the platform of the Care-O-Bot. This means to establish a CAN communication\
    \ to drive and steering motors of the platform and later send motion commands\
    \ and receive motor information.\n\n  "
  'name': 'cob_base_drive_chain'
  'repo': 'cob_driver'
- 'brief': 'hesitation'
  'description': "\nThis package manages the sequence of quintic trajectory splines\
    \ used to successfully execute a reach-retract motion, and exhibit empirically\
    \ verified anthropomorphic hesitation gestures in the midst of the reach-retract\
    \ motion. For more information on hesitation gestures, visit: http://caris.mech.ubc.ca/?pageid=4.2\n\
    \  "
  'name': 'hesitation'
  'repo': 'ubc-ros-pkg'
- 'brief': 'corobot_phidgetIK'
  'description': "\n\n     this package is an interface to the device Phidget interface\
    \ Kit 8/8/8 for CoroWare's robot Corobot. \n\n  "
  'name': 'corobot_phidgetIK'
  'repo': 'roscorobot'
- 'brief': 'test_rosjava_jni'
  'description': 'Tests for rosjava'
  'name': 'test_rosjava_jni'
  'repo': 'client_rosjava_jni'
- 'brief': 'single_joint_position_action'
  'description': "\n\n  The single joint position action is a node that provides an\
    \ action\n  interface for commanding a trajectory to move a joint to a particular\n\
    \  position. The action reports success when the joint reaches the desired\n \
    \ position.\n\n  "
  'name': 'single_joint_position_action'
  'repo': 'wg-ros-pkg'
- 'brief': 'haptic_fb_controller'
  'description': "\n\n     This package contains the controller for the PR2 arm that\
    \ allows model-mediated haptic feedback\n     Arm controller is a Jtranspose controller.\n\
    \n  "
  'name': 'haptic_fb_controller'
  'repo': 'wg-ros-pkg'
- 'brief': 'openrtm'
  'description': "\n\n     openrtm\n\n  "
  'name': 'openrtm'
  'repo': 'rtm-ros-robotics/rtmros_common'
- 'brief': 'nxt_lxf2urdf'
  'description': "\n\n     nxt_lxf2urdf converts a <a href=\"http://ldd.lego.com/\"\
    >LEGO\n     Digital Design file (*.lxf)</a> \n     to <a href=\"http://ros.org/wiki/urdf\"\
    >urdf </a>.  nxt_lxf2urdf\n     needs a (*.lxf) and a (*.ldr) file for completing\
    \ the conversion\n     from lxf to urdf.  It also has the ldraw.xml file that\
    \ is in the\n     assests folder of the LEGO Digital Designer which has been\n\
    \     modified to add more parts.\n\n  "
  'name': 'nxt_lxf2urdf'
  'repo': 'foote-nxt'
- 'brief': 'Main robot execution loop'
  'description': "\nMain loop that runs the robot.\n  "
  'name': 'pr2_etherCAT'
  'repo': 'pr2_robot'
- 'brief': 'Care-O-bot Dashboard'
  'description': "\n    \n      cob_dashboard is a modified version of [[pr2_dashboard]].\n\
    \    \n    "
  'name': 'cob_dashboard'
  'repo': 'cob_command_tools'
- 'brief': 'handle_detection'
  'description': "\n\n     fridge_handle_detector\n\n  "
  'name': 'ds_pr2_fridge_handle_detector'
  'repo': 'bosch-ros-pkg'
- 'brief': ''
  'description': 'ROS nodes for image segmentation.'
  'name': 'image_segmentation'
  'repo': 'wg-ros-pkg'
- 'brief': 'rosspawn_gui'
  'description': "\n    GUI application for rosspawn, based on Fawkes' Plugin GUI.\n\
    \  "
  'name': 'rosspawn_gui'
  'repo': 'rosspawn_gui'
- 'brief': 'cyphy_kbd'
  'description': "\n\n     cyphy_kbd\n\n  "
  'name': 'cyphy_kbd'
  'repo': 'cyphy'
- 'brief': 'Ogre Tools'
  'description': "\n    \n    Internal package, shared code for use by the visualization\
    \ stack, nav_view, and the simulation stack.  No supported/stable API is exported.\n\
    \    \n    "
  'name': 'ogre_tools_qt'
  'repo': 'visualization_experimental'
- 'brief': 'Messages for automatic topic configuration using rosserial.'
  'description': "\n     Messages for automatic topic configuration using rosserial.\n\
    \  "
  'name': 'rosserial_msgs'
  'repo': 'rosserial'
- 'brief': 'Monitors network quality using udp packets.'
  'description': "\n    Facilities to monitor a network connection by sending UDP\
    \ packets from\n    a client to a server, which bounces them back to the client.\
    \ The client\n    collects statistics on latency and loss. The server is a C standalone\
    \ utility\n    or a ROS node. The client can be a ROS node, a standalone utility\
    \ or a python class.\n  "
  'name': 'network_monitor_udp'
  'repo': 'ros-pkg'
- 'brief': 'ias_semantic_map'
  'description': "\n\n    Semantic maps of different kitchens of the IAS group at\
    \ TUM, created from 3D laser scans,\n    represented as OWL file, plus additional\
    \ predicates for manipulating the map and reasoning on it.\n\n  "
  'name': 'ias_semantic_map'
  'repo': 'knowrob'
- 'brief': 'The Kinematics and Dynamics Library (latest)'
  'description': "\n\nThis package contains a recent version of the Kinematics and\
    \ Dynamics\nLibrary (KDL), distributed by the Orocos Project. \n\n"
  'name': 'orocos_kdl'
  'repo': 'orocos_kinematics_dynamics'
- 'brief': 'hrl_hokuyo'
  'description': "\n  Python class that uses hokuyo_node from ros-pkg to get scans\
    \ from\n  UTMs and player to get scans from URGs.\n  "
  'name': 'hrl_hokuyo'
  'repo': 'gt-ros-pkg'
- 'brief': 'database_interface'
  'description': "\n\n    Provides an easy to use and general interface between a\
    \ SQL\n    database and object-oriented C++ code, making it easy to\n    encapsulate\
    \ the conceptual &quot;objects&quot; contained in the database as\n    C++ classes.\n\
    \n  "
  'name': 'database_interface'
  'repo': 'wg-ros-pkg'
- 'brief': 'ihr_demo_bags'
  'description': "\n    Bag files used in Demos\n  "
  'name': 'ihr_demo_bags'
  'repo': 'iheart-ros-pkg'
- 'brief': 'otl_web'
  'description': "\n\n    otl_web is web interface for manipulation of otl robots.\n\
    \n  "
  'name': 'otl_web'
  'repo': 'otl-ros-pkg'
- 'brief': 'headmath'
  'description': "\n\n     headmath\n\n  "
  'name': 'headmath'
  'repo': 'wu-ros-pkg'
- 'brief': 'rbrief'
  'description': "\n\n\t\trbrief\n\n  "
  'name': 'rbrief'
  'repo': 'wg-ros-pkg'
- 'brief': 'pcl_to_scan'
  'description': "\n\n     Pointcloud utilities to simulate laser readings. \n\n  "
  'name': 'pcl_to_scan'
  'repo': 'elektron_kinectbot'
- 'brief': 'A kinematics plugin for the Katana 450 arm based on OpenRave IK and urdf-based
    FK'
  'description': "\n\n    <p>\n      This package provides an plugin implementation\
    \ of the kinematics_base interface to establish constraint aware kinematics services.\n\
    \      The plugin combines the OpenRave IK service from the orroplanning package\
    \ and the generic urdf-based FK from the arm_kinematics package. To provide constraint_aware\
    \ services the plugin must be used with the arm_kinematics_constraint_aware node\
    \ of the respective package.\n    </p>\n\n    <p>\n      Additionally, the non_constraint_aware_ik_adapter\
    \ node provides the\n      <a href=\"/doc/api/kinematics_msgs/html/srv/GetConstraintAwarePositionIK.html\"\
    >get_constraint_aware_ik</a>\n      service. It just strips away all the constraint\
    \ aware stuff and calls a normal (non-constraint aware)\n      <a href=\"/doc/api/kinematics_msgs/html/srv/GetPositionIK.html\"\
    >get_ik</a> service instead.\n    </p>\n\n    <p>\n      Normally, get_constraint_aware_ik\
    \ checks the space of potential IK solutions (from get_ik) for a\n      solution\
    \ that obeys all constraints (i.e., a solution that is not in self-collision or\
    \ in collision\n      with the environment). That only really makes sense for\
    \ a redundant (&gt;6 DoF) robot arm. Since the\n      Katana only has 5 DoF, we\
    \ only get at most one IK solution, so there is nothing to filter.\n    </p>\n\
    \n    <p>\n      If we return a solution that violates constraints - for instance,\
    \ that is in self-collision - then\n      move_arm will abort with an error code.\
    \  But if the solution is valid, everything should work.\n    </p>\n\n  "
  'name': 'katana_kinematics_constraint_aware'
  'repo': 'uos-ros-pkg'
- 'brief': 'ROSH Process Launcher'
  'description': "\n\nroshlaunch is a temporary package for redesigning roslaunch\
    \ to have better programmatic APIs for libraries like rosh.\n\n  "
  'name': 'roshlaunch'
  'repo': 'rosh_core'
- 'brief': 'interaction_controller'
  'description': "\n\n     This package contains the controller for the PR2 arm that\
    \ allows some kind of weired interaction with a robot\n\n  "
  'name': 'interaction_controller'
  'repo': 'wg-ros-pkg'
- 'brief': 'HRP-2 10 optimized dynamics'
  'description': "\n\n    FIXME\n\n  "
  'name': 'hrp2-10-optimized'
  'repo': 'jrl-ros-pkg'
- 'brief': 'test_rosgraph'
  'description': "\n\n     Test suite for rosgraph\n\n  "
  'name': 'test_rosgraph'
  'repo': 'ros_comm'
- 'brief': 'pi_kinect'
  'description': "\n\n     pi_kinect\n\n  "
  'name': 'pi_kinect'
  'repo': 'pi-robot-ros-pkg'
- 'brief': 'Extracts checkerboard corners from a dense laser snapshot'
  'description': "\n     Extracts checkerboard corners from a dense laser snapshot.\n\
    \     This package is experimental and unstable. Expect its APIs to change.\n\
    \  "
  'name': 'laser_cb_detector'
  'repo': 'pr2_calibration'
- 'brief': 'location_costmap'
  'description': "\n\n     location_costmap\n\n  "
  'name': 'location_costmap'
  'repo': 'cram_highlevel'
- 'brief': 'roboard_gui'
  'description': "\n\n     GUI programs for the roboard stack.\n\n  "
  'name': 'roboard_gui'
  'repo': 'veltrop-ros-pkg'
- 'brief': 'Orocos component library'
  'description': "\n        This package contains standard components for the Orocos\
    \ Toolchain\n    "
  'name': 'ocl'
  'repo': 'orocos_toolchain'
- 'brief': 'Doorway Planning Research'
  'description': "\n\n  "
  'name': 'sbpl_door_planner'
  'repo': 'sbpl_door_planning'
- 'brief': 'face_detector'
  'description': "\n    Face detection in images.\n  "
  'name': 'face_detector'
  'repo': 'wg-ros-pkg'
- 'brief': 'world_db_pcl_detectors'
  'description': "\n\n     world_db_pcl_detectors\n\n  "
  'name': 'world_db_pcl_detectors'
  'repo': 'wg-ros-pkg'
- 'brief': 'model_completion'
  'description': "\n     model_completion\n  "
  'name': 'model_completion'
  'repo': 'tum-ros-pkg'
- 'brief': 'armadillo_2wd'
  'description': "\n    Definitions, applications, and launch files for the Vanadium\
    \ Armadillo mobile manipulator.\n  "
  'name': 'armadillo_2wd'
  'repo': 'vanadium-ros-pkg'
- 'brief': ''
  'description': 'Reads a poind clound and parameter describing the gripper and

    selects a valid hand position'
  'name': 'pc_grasp_position'
  'repo': 'tum-ros-pkg'
- 'brief': ''
  'description': 'Gazebo 3D simulation PR2 examples.'
  'name': 'pr2_gazebo_wg'
  'repo': 'wg-ros-pkg'
- 'brief': 'REEM upper-body motion planners setup'
  'description': ''
  'name': 'reem_arm_navigation_planning'
  'repo': 'reem_arm_navigation'
- 'brief': 'recognition_msgs'
  'description': "\n      This package contains messages used by the recognition stack.\n\
    \  "
  'name': 'recognition_msgs'
  'repo': 'ubc-ros-pkg'
- 'brief': 'Convex Mesh Generation Library'
  'description': "\n\n<p>\n<tt>convex_decomposition</tt> contains the Convex Mesh\
    \ Generation Library, by John Ratcliff.  This library is used to auto-generate\
    \ convex decomposed meshes for\ncollision and visualization of robot links.  \n\
    </p>\n<p>\nWe are using the latest and the only version available.  We plan on\
    \ deprecating this package\nonce we find a better alternative.  \n</p>\n<p>\n\
    The Convex Mesh Generation Library is not provided by\nany of the major OS package\
    \ managers, and this version provided\nhere contains patches required for compilation.\n\
    These patches have not been submitted back as there\nappears to be no available\
    \ revision control.\n</p>\n\n"
  'name': 'convex_decomposition'
  'repo': 'robot_model'
- 'brief': 'cpl_superpixels'
  'description': "\n\n     cpl_superpixels\n\n  "
  'name': 'cpl_superpixels'
  'repo': 'gt-ros-pkg'
- 'brief': 'geometric_shapes'
  'description': "\n    The geometric shapes package provides implementations of basic\
    \ geometric primitives. It can be used for collision checking, ray intersection\
    \ and other operations with geoemtric primitives. \n  "
  'name': 'geometric_shapes'
  'repo': 'arm_navigation'
- 'brief': 'cart_interp'
  'description': "\n\n     cart_interp\n\n  "
  'name': 'cart_interp'
  'repo': 'stanford-ros-pkg'
- 'brief': 'kr360_controller'
  'description': "\n\n     kr360_controller\n\n  "
  'name': 'kr360_controller'
  'repo': 'vmi-ros-pkg'
- 'brief': 'hrl_move_floor_detect'
  'description': "\n\n     hrl_move_floor_detect\n\n  "
  'name': 'hrl_move_floor_detect'
  'repo': 'gt-ros-pkg'
- 'brief': 'Stl/Eigen style containers with a few memory debugging techniques.'
  'description': "\n    <p>\n\tThe containers included here are intended to extend\
    \ the stl containers.\n\tIn all cases, these implementations are designed to implement\n\
    \tc++ conveniences and safety where speed is not sacrificed. \n   </p>\n   <p>\t\
    \n\tAlso includes techniques for memory debugging of common problems such\n\t\
    as buffer overruns.\n   </p>\n\n  "
  'name': 'ecl_containers'
  'repo': 'ecl_core'
- 'brief': 'test_nodelet'
  'description': "\n\n    A package for nodelet unit tests\n\n  "
  'name': 'test_nodelet'
  'repo': 'nodelet_core'
- 'brief': 'costmap_trajectory_checker'
  'description': "\n\n     costmap_trajectory_checker\n\n  "
  'name': 'costmap_trajectory_checker'
  'repo': 'wg-ros-pkg'
- 'brief': 'pr2_calib_proximity_sensor'
  'description': "\n\n     pr2_calib_proximity_sensor\n\n  "
  'name': 'pr2_calib_proximity_sensor'
  'repo': 'bosch-ros-pkg'
- 'brief': 'reem_teleop_coordinator'
  'description': "\n    The reem_teleop_coordinator_node controls the information\
    \ flow between the target end point poses, IK calculations, \n    self-collision\
    \ checking and the final output of target joint positions.\n  "
  'name': 'reem_teleop_coordinator'
  'repo': 'reem_teleop'
- 'brief': 'teleop_twist_keyboard'
  'description': "\nSimple keyboard teleoping for Twist based robots.\n  "
  'name': 'teleop_twist_keyboard'
  'repo': 'brown-ros-pkg'
- 'brief': 'A set of useful tools to interact with the Nao.'
  'description': 'Currently, nao_tools includes a node that allows control of the
    text-to-speech module over the terminal. The volume and language can also be set
    from this node.'
  'name': 'nao_tools'
  'repo': 'wpi-rail-ros-pkg'
- 'brief': 'wifibot'
  'description': "\n\n     wifibot\n\n  "
  'name': 'wifibot'
  'repo': 'wifibot'
- 'brief': 'rosfalcon'
  'description': "\n\n     rosfalcon\n\n  "
  'name': 'cyphy_rosfalcon'
  'repo': 'cyphy'
- 'brief': 'pr2_handy_tools'
  'description': "\n\n    This package contains a few handy tools for general work\
    \ on the PR2.\n    \n    One is a simple node to print joint states for the left\
    \ or right arm.\n    \n    The other is a tool for sending a point-head goal to\
    \ the robot... \n    it is currently half-baked, but improvements are always welcome!\
    \ :)\n\n  "
  'name': 'pr2_handy_tools'
  'repo': 'wg-ros-pkg'
- 'brief': 'photo_cam'
  'description': "\n      A ROS node for remote capturing pictures using a consumer\
    \ digital camera that supports remote capture. For a list of cameras supporting\
    \ remote control see: http://www.gphoto.org/doc/remote/\n  "
  'name': 'photo_cam'
  'repo': 'ubc-ros-pkg'
- 'brief': 'cljlo, a jlo interface for common lisp'
  'description': "\n  "
  'name': 'cljlo'
  'repo': 'cram_highlevel'
- 'brief': 'Manipulation algorithms/filters.'
  'description': "\n\n  Deploys various manipulation algorithms, currently just \n\
    \  feedforward filters (interpolations). \n\n  "
  'name': 'ecl_manipulators'
  'repo': 'ecl_manipulation'
- 'brief': 'Trike Robot Utilities'
  'description': "\n    Configuration and launch files for Trike.\n  "
  'name': 'trike'
  'repo': 'albany-ros-pkg'
- 'brief': 'humanoid_models'
  'description': "\n\n     humanoid_models\n\n  "
  'name': 'humanoid_models'
  'repo': 'usc-ros-pkg'
- 'brief': 'turtlebot_kinect_arm_calibration'
  'description': "\n\n     turtlebot_kinect_arm_calibration allows calibration of\
    \ a kinect to a TurtleBot arm, including a kinect on-board and off-board the TurtleBot\
    \ for more precise manipulation.\n\n  "
  'name': 'turtlebot_kinect_arm_calibration'
  'repo': 'turtlebot_arm'
- 'brief': 'EtherCAT Master Library'
  'description': '


    This is an implementation of the EtherCAT master protocol for the PR2 robot based
    on the work done at Flanders'' Mechatronics Technology Centre.


    '
  'name': 'eml'
  'repo': 'wg-ros-pkg'
- 'brief': 'Ackermann steering HKS tele-operation'
  'description': "\n\n     HKS game controller tele-operation interface for driving\
    \ a\n     vehicle with Ackermann steering under human control.\n\n  "
  'name': 'ackermann_hks'
  'repo': 'utexas-art-ros-pkg'
- 'brief': 'Simple joypad remote control module for an AUV.'
  'description': "\n\n     This node allows the control of real or simulated AUVs\
    \ by sending 6 axis vehicle force messages based on input received from a Linux\
    \ compatible joy pad with dual analogue sticks. Only 4/5 axes are actually controllable:\
    \ x, y, z, and yaw by default, and pitch on a button press. Tested with Logitech\
    \ joypads. TODO: Change to accept ROS joystick message as input rather than reading\
    \ direct from joystick.\n  "
  'name': 'auv_joy'
  'repo': 'hwu-osl-ros-pkg'
- 'brief': 'dmp_motion_controller'
  'description': "\n\n     dmp_motion_controller\n\n  "
  'name': 'dmp_motion_controller'
  'repo': 'wg-ros-pkg'
- 'brief': 'timeutils'
  'description': "\n\n     timeutils contains utility code related to time(stamps)\
    \ on *NIX.\n\n  "
  'name': 'timeutils'
  'repo': 'dfki-sks-ros-pkg'
- 'brief': 'pr2 workshop for pr2 beta program'
  'description': "\n    pr2 workshop for pr2 beta program\n  "
  'name': '2010_05_pr2_workshop'
  'repo': 'jsk-ros-pkg'
- 'brief': 'pr2_biolab_gazebo_demo'
  'description': "\n\n     pr2_biolab_gazebo_demo\n\n  "
  'name': 'pr2_biolab_gazebo_demo'
  'repo': 'viaflo_pipette'
- 'brief': 'irobot_create_2_1'
  'description': "\n irobot_create_2_1 is a ROS driver for the iRobot iCreate.\n  "
  'name': 'irobot_create_2_1'
  'repo': 'brown-ros-pkg'
- 'brief': 'saliency_attention'
  'description': "\n\n     attention\n\n  "
  'name': 'saliency_attention'
  'repo': 'ubc-ros-pkg'
- 'brief': 'release toolchain'
  'description': "\n\n     Release toolchain for ROS.\n\n  "
  'name': 'release'
  'repo': 'ros_release'
- 'brief': 'seabee3_teleop'
  'description': "\n\n     seabee3_teleop\n\n  "
  'name': 'seabee3_teleop'
  'repo': 'seabee3-ros-pkg'
- 'brief': 'rosnode command-line tool'
  'description': "\n\nrosnode is a command-line tool for displaying debug information\
    \ about ROS <a href=\"http://www.ros.org/wiki/Nodes\">Nodes</a>, including publications,\
    \ subscriptions and connections. It also contains an experimental library for\
    \ retrieving node information. This library is intended for internal use only.\
    \ \n\n  "
  'name': 'rosnode'
  'repo': 'ros_comm'
- 'brief': 'Orocos krypton Component'
  'description': "\n\n    Krypton OROCOS component using the <a href=\"http://www.ros.org/wiki/krypton\"\
    >krypton</a> library to communicate with and retrieve measurement data from the\
    \ Krypton system. The component is linked with a FileDescriptorActivity which\
    \ allows monitoring of multiple sockets without blocking. As soon as one of the\
    \ sockets gets updates, the updateHook() is executed.\n    Usage:\n    <ul>\n\
    \      <li>Connect your computer with the HF-controller using a fixed IP in the\
    \ range 192.168.254.x (default HF-controller IP is 192.168.254.254)</li>\n   \
    \   <li>Define your project in the DMM software and do file &gt; export as init\
    \ file</li>\n      <li>Launch the component: rosrun krypton_component runkrypton.sh</li>\n\
    \    </ul>\n    All available data is streamed directly to /krypton/ctrl_msg and\
    \ /krypton/data_msgs\n\n  "
  'name': 'krypton_component'
  'repo': 'krypton_hardware'
- 'brief': 'wavelet2d'
  'description': "\n\n     wavelet2d\n\n  "
  'name': 'wavelet2d'
  'repo': 'wg-ros-pkg'
- 'brief': 'pr2_cockpit_msgs'
  'description': "\n\n     pr2_cockpit_msgs\n\n  "
  'name': 'pr2_cockpit_msgs'
  'repo': 'wg-ros-pkg'
- 'brief': 'Monitor diagnostics on a robot'
  'description': "\n    The runtime monitor displays raw diagnostics data in an easy\
    \ to read GUI.\n  "
  'name': 'runtime_monitor'
  'repo': 'ros-pkg'
- 'brief': 'oro_joint_trajectory_action'
  'description': "\n\n     oro_joint_trajectory_action\n\n  "
  'name': 'oro_joint_trajectory_action'
  'repo': 'orocos_controllers'
- 'brief': 'RL control for pole balancing'
  'description': "\n\n     Reinforcement learning controller for 1D and 2D pole balancing.\
    \ Based on Policy Gradient RL techniques. Includes a OpenCV visual marker tracker\
    \ for pole balancing. \n\n  "
  'name': 'pr2_balance'
  'repo': 'wg-ros-pkg'
- 'brief': 'cob_calibration_srvs'
  'description': "\n\n     cob_calibration_srvs\n\n  "
  'name': 'cob_calibration_srvs'
  'repo': 'cob_calibration'
- 'brief': 'Geometry Library similar to EusLisp coordinates'
  'description': "\n\n    egeometry is a Geometry Library similar to EusLisp coordinates.\n\
    \    This library is useful for EusLisp users.\n\n  "
  'name': 'egeometry'
  'repo': 'otl-ros-pkg'
- 'brief': 'trajectory_playback'
  'description': "\n\n     trajectory_playback\n\n  "
  'name': 'trajectory_playback'
  'repo': 'wg-ros-pkg'
- 'brief': 'next_best_view'
  'description': "\n\n     next_best_view\n\n  "
  'name': 'next_best_view'
  'repo': 'mapping'
- 'brief': 'sr_move_arm'
  'description': "\n\n    This is an actionlib server wrapup around the shadow arm.\
    \ It's goal is to move\n    the arm, given a goal. It also contains a reactive\
    \ grasp / reactive approach action\n    server. This server computes dynamic checks\
    \ during the approach phase, during\n    the grasping, during the lifting of the\
    \ object, as well as when placing the object\n    on the table.\n\n  "
  'name': 'sr_move_arm'
  'repo': 'shadow_robot'
- 'brief': 'sortbot'
  'description': "\n    AWESUM\n  "
  'name': 'sortbot'
  'repo': 'stanford-ros-pkg'
- 'brief': 'ART road map'
  'description': "\n\n     ART autonomous vehicle road map.\n\n  "
  'name': 'art_map'
  'repo': 'utexas-art-ros-pkg'
- 'brief': 'kelsey_sandbox'
  'description': "\n\n     kelsey_sandbox\n\n  "
  'name': 'kelsey_sandbox'
  'repo': 'gt-ros-pkg'
- 'brief': 'Smach Recovery'
  'description': "\n    SMACH RECOVERY, which stands for 'state machine recovery',\
    \ is a task-level architecture for rapidly creating complex robot behavior. At\
    \ its core, SMACH RECOVERY is a ROS-independent Python library to build hierarchical\
    \ state machines.  SMACH RECOVERY is a new library that is built on top of the\
    \ SMACH library and retains a majority of the original functionality. This package\
    \ also contains the additional functionality of recovery from task failures.\n\
    \  "
  'name': 'smach_recovery'
  'repo': 'bosch-ros-pkg'
- 'brief': 'SR4000_sim_camera'
  'description': "\n\n     SR4000_sim_camera\n\n  "
  'name': 'SR4000_sim_server'
  'repo': 'darpa_arm_sim_servers'
- 'brief': 'roscpp_traits'
  'description': "\n\nroscpp_traits contains the message traits code as described\
    \ in\n<a href=\"http://www.ros.org/wiki/roscpp/Overview/MessagesTraits\">MessagesTraits</a>.\n\
    \nThis package is a component of <a href=\"http://www.ros.org/wiki/roscpp\">roscpp</a>.\n\
    \n  "
  'name': 'roscpp_traits'
  'repo': 'ros_comm'
- 'brief': 'priority_mux'
  'description': "\n\n     priority_mux\n\n  "
  'name': 'priority_mux'
  'repo': 'parsec'
- 'brief': 'tff_controller'
  'description': "\n\n     tff_controller\n\n  "
  'name': 'tff_controller'
  'repo': 'pr2_doors'
- 'brief': 'hrl_pr2_lib'
  'description': "\n\n      Collection of small useful utilities for interlab use\
    \ of\n      the PR2.\n\n  "
  'name': 'hrl_pr2_lib'
  'repo': 'gt-ros-pkg'
- 'brief': 'step_navigator_nomap'
  'description': "\n\n     step_navigator_nomap\n\n  "
  'name': 'step_navigator_nomap'
  'repo': 'brown-experimental'
- 'brief': 'Filters for processing laser scans'
  'description': '


    Assorted filters designed to operate on 2D planar laser scanners,

    which use the sensor_msgs/LaserScan type.


    '
  'name': 'laser_filters'
  'repo': 'ros-pkg'
- 'brief': 'Produces diagnostics from pr2_controller_manager for joints and controllers'
  'description': "\nThe `pr2_mechanism_diagnostics` node subscribes to `mechanism_statistics`\
    \ and publishes diagnostics data for joints and controllers on `/diagnostics`.\
    \ \n  "
  'name': 'pr2_mechanism_diagnostics'
  'repo': 'pr2_mechanism'
- 'brief': 'logitech_usb_webcam'
  'description': "\n\n     logitech_usb_webcam\n\n  "
  'name': 'logitech_usb_webcam'
  'repo': 'ua-ros-pkg'
- 'brief': 'actiondetection'
  'description': "\n\n     actiondetection\n\n  "
  'name': 'actiondetection'
  'repo': 'wg-ros-pkg'
- 'brief': 'pr2_grasp_adjust'
  'description': "\n  \n    The pr2_grasp_adjust package provides an interface for\
    \ finding grasp poses near a given input pose.\n\n    The api includes a service\
    \ server and an action server.\n\n  "
  'name': 'pr2_grasp_adjust'
  'repo': 'wg-ros-pkg'
- 'brief': 'rtt_geometry_msgs'
  'description': "\n\n    Provides an rtt typekit for ROS geometry_msgs messages.\n\
    \n    It allows you to use ROS messages transparently in\n    RTT components and\
    \ applications.\n\n    This package was automatically generated by the\n    create_rtt_msgs\
    \ generator and should not be manually\n    modified.\n\n    See the http://ros.org/wiki/geometry_msgs\
    \ documentation\n    for the documentation of the ROS messages in this\n    typekit.\n\
    \n  "
  'name': 'rtt_geometry_msgs'
  'repo': 'rtt_common_msgs'
- 'brief': 'Documentation generator for the ecl'
  'description': "\n\n     Generates documentation and graphs for the ecl - powered\n\
    \     by rosdoc under the hood.\n\n  "
  'name': 'ecl_doc'
  'repo': 'ecl_tools'
- 'brief': 'cl_libsvm'
  'description': "\n\n     cl_libsvm\n\n  "
  'name': 'cl_libsvm'
  'repo': 'roll'
- 'brief': 'lcm_mavlink_ros'
  'description': "\n\n     lcm_mavlink_ros\n\n  "
  'name': 'lcm_mavlink_ros'
  'repo': 'mavlink-ros-pkg'
- 'brief': 'pcl_tests'
  'description': "\n\n     pcl_tests - some simple tests for saving point clouds\n\
    \n  "
  'name': 'pcl_tests'
  'repo': 'uuisrc-ros-pkg'
- 'brief': 'Geometry tools and functions'
  'description': "\n\n     Any tools relating to mathematical geometry. \n     Primarily\
    \ featuring polynomials and interpolations.\n     \n  "
  'name': 'ecl_geometry'
  'repo': 'ecl_core'
- 'brief': 'camera_calibration_with_circles'
  'description': "\n\n     camera_calibration_with_circles\n\n  "
  'name': 'camera_calibration_with_circles'
  'repo': 'wg-ros-pkg'
- 'brief': 'roscpp_simple'
  'description': "\n\n     provides the basic functionality of ROS message serialization\
    \ without depending on rosconsole (for applications that are not compatible with\
    \ log4cxx/rosconsole)\n\n  "
  'name': 'roscpp_simple'
  'repo': 'usc-ros-pkg'
- 'brief': 'objects_of_daily_use_finder'
  'description': "\n\n     objects_of_daily_use_finder\n\n  "
  'name': 'objects_of_daily_use_finder'
  'repo': 'tum-ros-pkg'
- 'brief': 'cob_simulated_tactile_sensors'
  'description': "\n\n     This package provides simulated tactile sensors for the\
    \ Schunk Dextrous\n     Hand (SDH) which is mounted on the Care-O-bot arm. The\
    \ node subscribes to\n     the Gazebo bumper topics of the SDH. It transforms\
    \ the Gazebo feedback to\n     the &quot;tactile_data&quot; topic to provide the\
    \ same tactile sensor interface as\n     the schunk_sdh package.\n     \n    \
    \ The following parameters can be set:\n     * cells_x: The number of patches\
    \ on the tactile sensor in the direction\n                perpendicular to the\
    \ finger. Defaults to 6.\n     * cells_y: The number of patches on the tactile\
    \ sensor along the direction\n                of the finger. Defaults to 14.\n\
    \     * output_range: The maximum output value of one patch. Defaults to 3500.\n\
    \     * sensitivity: The change of output in one patch per Newton. Defaults to\n\
    \                    350. The sensitivity can be approximated by the following\n\
    \                    formula: S = output_range / (measurement_range * cell_area)\n\
    \                    - The measurement range of the tactile pads is 250 kPa (from\n\
    \                      the data sheet).\n                    - The output range\
    \ can be determined by experiment from the\n                      real SDH. It\
    \ is about 3500.\n                    - The cell area is the size of one patch.\
    \ Length and width\n                      of the area are determined by dividing\
    \ the length/width\n                      of the collision surface by the number\
    \ of cells in the\n                      respective direction.\n             \
    \         Important: In most cases this is NOT the cell area that is\n       \
    \                          given in the data sheet!\n     * filter_length: The\
    \ length of the moving average filter which smoothes\n                      the\
    \ values from simulation. Defaults to 10.\n     \n     The node subscribes to\
    \ the following topics to receive data from the\n     simulation:\n     * finger_12/state\n\
    \     * finger_13/state\n     * thumb_2/state\n     * thumb_3/state\n     * finger_22/state\n\
    \     * finger_23/state\n     \n     The node publishes the processed data on\
    \ the following topic:\n     * tactile_data\n     \n     The simulated bumper\
    \ must obtain the collision data in the link that the\n     sensor is attached\
    \ to. This is achieved by setting the &quot;frameName&quot; property\n     in\
    \ the gazebo_ros_bumper controller.\n\n  "
  'name': 'cob_simulated_tactile_sensors'
  'repo': 'cob_simulation'
- 'brief': 'pointcloud_registration'
  'description': "\n\n     pointcloud_registration: This package implements registration\
    \ of point clouds. \n     It also contains an additional feature called Spin Image\
    \ Local.\n \n     Based on original code written by Radu Rusu (rusu@willowgarage.com)\n\
    \     Contact Persons:\n     1. Hozefa Indorewala: \th.indorewala@jacobs-university.de\n\
    \     2. Dejan Pangercic: \tdejan.pangercic@cs.tum.edu\n     3. Zoltan-Csaba Marton:\
    \ \tmarton@cs.tum.edu\n     4. Nico Blodow:\t\tblodow@cs.tum.edu\n\n  "
  'name': 'pointcloud_registration'
  'repo': 'mapping'
- 'brief': 'odom_filter'
  'description': "\n    The odom_filter node tracks Odometry messages and uses the\n\
    \    accumulated data to update location estimates issued by the\n    Perfesser\
    \ node.  In the Bayesian lingo, think of this as updating\n    the priors.\n  "
  'name': 'odom_filter'
  'repo': 'brown-experimental'
- 'brief': 'clsql'
  'description': "\n\n     clsql\n\n  "
  'name': 'clsql'
  'repo': 'roll'
- 'brief': 'compressed_imagem_transport'
  'description': "\n\n     compressed_imagem_transport\n\n  "
  'name': 'compressed_imagem_transport'
  'repo': 'ethzasl_message_transport'
- 'brief': 'xsens_mti'
  'description': "\n\n     Library to communicate with the Xsens MTI Measurement Unit.\n\
    \n     The library contains different methods, of which, to the outside, only\
    \ the decodeIMU() method is important. Calling this method will update the IMUdata\
    \ struct. This struct gives you access to the accelerometer, gyroscope and filtered\
    \ Euler angle data. In order for the IMU reading to work, the MTI has to be configured\
    \ to output accelerometer, gyroscope and XYZ Euler angles data.\n\n  "
  'name': 'xsens_mti'
  'repo': 'xsens_hardware'
- 'brief': 'projected_light'
  'description': "\n    Out-of-the-box solution for projected stereo using\n    a\
    \ Videre STOC camera and a regular wall projector.\n  "
  'name': 'ias_projected_light'
  'repo': 'mapping'
- 'brief': 'Joint Qualification Controllers'
  'description': "\nControllers used in PR2 hardware testing. For testing counterbalance\
    \ of PR2, and for internal WG use.\n  "
  'name': 'joint_qualification_controllers'
  'repo': 'wg-ros-pkg'
- 'brief': 'pi_ecto'
  'description': "\n\n     pi_ecto\n\n  "
  'name': 'pi_ecto'
  'repo': 'pi-robot-ros-pkg'
- 'brief': 'mod_vis'
  'description': "\n\n     Visualization module for the Prolog knowledge base.\n\n\
    \     Instances in the knowledge base can be pushed to the visualization\n   \
    \  canvas, are then drawn and can be further inspected.\n\n     Currently supported:\
    \ Action sequences, linked to the resp. human pose\n     sequence, as well as\
    \ most objects that are relevant in the IAS kitchen.\n\n  "
  'name': 'mod_vis'
  'repo': 'knowrob'
- 'brief': 'rve_qt'
  'description': "\n\n     rve_qt\n\n  "
  'name': 'rve_qt'
  'repo': 'visualization_engine'
- 'brief': 'desc_match'
  'description': "\n\n     desc_match\n\n  "
  'name': 'desc_match'
  'repo': 'wg-ros-pkg'
- 'brief': 'EVaRT client'
  'description': "\n\n    EVa Real-Time Software(tm) - EVaRT(tm) - provides a user\
    \ with a\n    simple and powerful interface to the Motion Analysis(tm) motion\n\
    \    capture hardware. Under a single software environment you can set\n    up,\
    \ calibrate, capture motion in real-time, capture motion for\n    post processing,\
    \ edit and save data in the format of your choice.\n\n    The evart-stream package\
    \ contains a network server that connects\n    to the EVaRT(tm) motion capture\
    \ software through the official\n    SDK. It then listen to the network for data\
    \ streaming requests.\n\n    evart-client (this package) is a library with a programming\n\
    \    interface that can control the evart-stream server. It also\n    contains\
    \ a very basic debugging client that can understand simple\n    commands from\
    \ the standard input and send them to the server.\n\n  "
  'name': 'evart-client'
  'repo': 'stacks/motion_analysis_mocap'
- 'brief': 'test_rostopic'
  'description': "\n\n     Tests for rostopic \n\n  "
  'name': 'test_rostopic'
  'repo': 'ros_comm'
- 'brief': 'Basic sensors for ArbotiX connected devices'
  'description': "\n    Extends the arbotix_node package with a number of more sophisticated\
    \ ROS wrappers for common devices. \n  "
  'name': 'arbotix_sensors'
  'repo': 'vanadium-ros-pkg'
- 'brief': 'tod_training'
  'description': "\n\n\t\ttod_training\n\n  "
  'name': 'tod_training'
  'repo': 'wg-ros-pkg'
- 'brief': 'auv_msgs'
  'description': "\n\n     auv_msgs\n\n  "
  'name': 'auv_msgs'
  'repo': 'hwu-osl-ros-pkg'
- 'brief': 'aques_talk'
  'description': "\n\n     aques_talk\n     r829 for old version\n\n  "
  'name': 'aques_talk'
  'repo': 'jsk-ros-pkg'
- 'brief': 'Enable dynamic textures in Gazebo.'
  'description': "\n    This Gazebo plugin enables dynamic textures. The texture can\
    \ be set via an image topic or by passing a path to an image file.\n  "
  'name': 'gazebo_video_plugin'
  'repo': 'vmi-ros-pkg'
- 'brief': 'tfd_modules'
  'description': "\n      This package contains the symbolic temporal planner Temporal\
    \ Fast Downward with a modular interface (TFD/M).\n  "
  'name': 'tfd_modules'
  'repo': 'alufr-ros-pkg'
- 'brief': 'rosmaster_sd'
  'description': "\n\n     ROS <a href=\"http://ros.org/wiki/Master\">Master</a> implementation.\n\
    \n  "
  'name': 'rosmaster_sd'
  'repo': 'multimaster-ros-pkg'
- 'brief': 'collvoid_controller'
  'description': "\n\n     collvoid_controller\n\n  "
  'name': 'collvoid_controller'
  'repo': 'multi_robot_collision_avoidance'
- 'brief': 'sr_robot_msgs'
  'description': "\n\n     sr_robot_msgs contains some messages used in the shadow_robot\
    \ stack.\n\n  "
  'name': 'sr_robot_msgs'
  'repo': 'shadow_robot'
- 'brief': 'maximus_setup_tf'
  'description': "\n\n     maximus_setup_tf\n\n  "
  'name': 'maximus_setup_tf'
  'repo': 'smart-robotics-ros-pkg'
- 'brief': 'ncd_parser'
  'description': "\n\n     The ncd_parser package reads in .alog data files from the\
    \ New College Dataset and broadcasts scan and odometry messages to ROS.\n\n  "
  'name': 'ncd_parser'
  'repo': 'scan_tools'
- 'brief': 'ROS bag migration tools'
  'description': "\n  Deprecated. For rosbag migration, see the rosbag package.\n\
    \  "
  'name': 'rosbagmigration'
  'repo': 'ros_comm'
- 'brief': 'game_faces'
  'description': "\n\n     game_faces\n\n  "
  'name': 'game_faces'
  'repo': 'ua-ros-pkg'
- 'brief': 'cob_people_detection'
  'description': "\n    Face detection in images.\n\n    openni_tracker broadcasts\
    \ the OpenNI skeleton frames using tf.\n  "
  'name': 'cob_people_detection'
  'repo': 'cob_people_perception'
- 'brief': 'neo_description_mp_500'
  'description': "\n\n     neo_description_mp_500\n\n  "
  'name': 'neo_description_mp_500'
  'repo': 'neo_common'
- 'brief': 'URDF descriptions of KURT robots'
  'description': "\n\n     This package contains URDF descriptions of the KURT robots.\
    \ The complete\n     robots are available in the directory &quot;robots/&quot;.\
    \ Each robot consists of\n     a base and a top (see those two directories). Usually,\
    \ a top is made up\n     from several parts (see directory &quot;parts/&quot;),\
    \ such as a laser scanner.\n\n  "
  'name': 'kurt_description'
  'repo': 'uos-ros-pkg'
- 'brief': 'openvgr'
  'description': "\n\n     openvgr\n\nThis program has been developed by Task-Vision\
    \ Research Group, AIST.\nPlease see their official web sites to see the details\
    \ of their licenses.\n\n  "
  'name': 'openvgr'
  'repo': 'rtm-ros-robotics/rtmros_common'
- 'brief': 'Improved AR-markers using a Kinect'
  'description': "\n    This package extends the ar_pose package to handle point clouds\
    \ + images generated from the kinect for improved AR marker localization.\n  "
  'name': 'ar_kinect'
  'repo': 'albany-ros-pkg'
- 'brief': 'mrw_robot_agent'
  'description': "\n\n     mrw_robot_agent\n\n  "
  'name': 'mrw_robot_agent'
  'repo': 'rtc-us-ros-pkg-trunk'
- 'brief': 'Hardware-independent MAV messages'
  'description': "\n\n     mav_msgs\n\n  "
  'name': 'mav_msgs'
  'repo': 'mav_tools'
- 'brief': 'batchdetector'
  'description': "\n\n    This package contains a variety of nodes that distribute\
    \ requests for detection and for\n    collecting the responses from detectors.\
    \ The code for these nodes is found in \n    src/batchdetector/nodes.\n    \n\
    \    Collator collects hypotheses generated by a set of detectors, and outputs\
    \ images\n    with bounding boxes from this collection. This node is geared towards\
    \ producing results\n    for the SRVC.\n    \n    Dispatcher listens for new scenes\
    \ that are ready for processing and sends messages that \n    dictate which detectors\
    \ are run on the scenes. Currently it simply sends out messages to all\n    detectors.\n\
    \n  "
  'name': 'batchdetector'
  'repo': 'ubc-ros-pkg'
- 'brief': 'explore_wg'
  'description': "\n\n     explore_wg\n\n  "
  'name': 'explore_wg'
  'repo': 'wg-ros-pkg'
- 'brief': 'step_nav'
  'description': "\n    SUPERSEDED BY GNAV\n  "
  'name': 'step_nav'
  'repo': 'brown-experimental'
- 'brief': 'triclops_msgs'
  'description': "\n\n     triclops_msgs\n\n  "
  'name': 'triclops_msgs'
  'repo': 'darpa_arm_msgs'
- 'brief': 'Converts a JointMovement to a JointTrajectory for the Katana arm'
  'description': "\n\n    Provides a node that converts a katana_msgs/JointMovement\
    \ to a pr2_controllers_msgs/JointTrajectory.\n    When running on real hardware,\
    \ the katana package provides a JointMovement action. This node only\n    needs\
    \ to be run when running on the Gazebo simulator.\n\n  "
  'name': 'katana_joint_movement_adapter'
  'repo': 'uos-ros-pkg'
- 'brief': 'smart_arm_affordance'
  'description': "\n        smart_arm_affordance\n    "
  'name': 'smart_arm_affordance'
  'repo': 'ua-ros-pkg'
- 'brief': 'Control interface for Shadow hardware'
  'description': "\n    sr_control_gui is a graphic application which integrates anything\
    \ needed by the end-user to control the hand.\n  "
  'name': 'sr_control_gui'
  'repo': 'shadow_robot'
- 'brief': 'aaai_lfd_demo_launch'
  'description': "\n\n     Launches original demo\n\n  "
  'name': 'aaai_lfd_demo_launch'
  'repo': 'bosch-ros-pkg'
- 'brief': 'veltrobot_gui'
  'description': "\n\n     GUI programs for the veltrobot stack.\n\n  "
  'name': 'veltrobot_gui'
  'repo': 'veltrop-ros-pkg'
- 'brief': 'Displays aggregated robot diagnostics'
  'description': "\n    This is a patched version of robot_monitor which includes\
    \ a usability\n    <a href=\"https://code.ros.org/trac/ros-pkg/ticket/5123\">patch</a>\n\
    \    that is awaiting its integration into the Fuerte release.\n  "
  'name': 'ias_robot_monitor'
  'repo': 'tum-ros-pkg'
- 'brief': 'world_db_core'
  'description': "\n    world_db_core contains the basic functionality of world_db_model,\n\
    \    such as recording of topics and creating a bag index in a SQLite\n    database,\
    \ playback and instantiation of previously recorded bags\n    and the management\
    \ of detector plugins.\n  "
  'name': 'world_db_core'
  'repo': 'wg-ros-pkg'
- 'brief': 'pr2_led_detector'
  'description': "\n\n     pr2_led_detector\n\n  "
  'name': 'pr2_led_detector'
  'repo': 'wg-ros-pkg'
- 'brief': 'wamros'
  'description': "\n  Wraps the Barrett WAM btclient library for ROS.  Currently position\n\
    \  control only.\n  "
  'name': 'wamros'
  'repo': 'WAMros'
- 'brief': 'ultraspeech'
  'description': "\n\n     ultraspeech\n\n  "
  'name': 'ultraspeech'
  'repo': 'ua-ros-pkg'
- 'brief': 'pi_tb_description'
  'description': "\n\n     Modifications of the TurtleBot to include a pan and tilt\
    \ head.\n\n  "
  'name': 'pi_tb_description'
  'repo': 'pi-robot-ros-pkg'
- 'brief': 'sr_edc_launch'
  'description': "\n\n     Package with launch files to start the needed nodes for\
    \ the Shadow Robot Palm EDC.\n\n  "
  'name': 'sr_edc_launch'
  'repo': 'shadow_robot_etherCAT'
- 'brief': ''
  'description': ''
  'name': 'ledwiz'
  'repo': 'wg-ros-pkg'
- 'brief': 'state_manager'
  'description': "\n\n     A simple State Manager\n\n  "
  'name': 'state_manager'
  'repo': 'pandora-auth-ros-pkg'
- 'brief': 'ddwrt_access_point'
  'description': "\n    A ROS node that controls a Linksys WRT610Nv2 access point\
    \ with\n    a dd-wrt firmware. Other access points models/dd-wrt versions\n  \
    \  may be compatible as long as the web interface is identical.\n  "
  'name': 'ddwrt_access_point'
  'repo': 'ros-pkg'
- 'brief': 'R1_Odom'
  'description': "\n\n     R1_Odom\n\n  "
  'name': 'R1_Odom'
  'repo': 'JKU_Robotic_Stack'
- 'brief': 'pi_head_tracking_tutorial'
  'description': "\n     Head Tracking Tutorial for the Pi Robot Project\n  "
  'name': 'pi_head_tracking_tutorial'
  'repo': 'pi-robot-ros-pkg'
- 'brief': 'smach_recovery_msgs'
  'description': "\n    This package contains a set of messages that are used in the\n\
    \    internal debugging interface of a SMACH recovery state\n    machine. The\
    \ <a href=\"http://www.ros.org/wiki/smach_recovery_viewer\">smach recovery\n \
    \   viewer</a> uses this debugging interface to visualize complete\n    hierarchical\
    \ state machines.\n  "
  'name': 'smach_recovery_msgs'
  'repo': 'bosch-ros-pkg'
- 'brief': 'Shows the features of ROS step-by-step'
  'description': "\n    This package attempts to show the features of ROS python API\
    \ step-by-step,\n    including using messages, servers, parameters, etc. These\
    \ tutorials are compatible with the nodes in roscpp_tutorial.\n  "
  'name': 'rospy_tutorials'
  'repo': 'ros_tutorials'
- 'brief': 'mrpt_ekf_slam_2d'
  'description': "\n\n     mrpt_ekf_slam_2d\n\n  "
  'name': 'mrpt_ekf_slam_2d'
  'repo': 'mrpt-ros-pkg'
- 'brief': 'obstacle_avoidance'
  'description': "\n\n     obstacle_avoidance\n\n  "
  'name': 'obstacle_avoidance'
  'repo': 'usc-ros-pkg'
- 'brief': 'trajectory_execution_monitor'
  'description': "\n\n     trajectory_execution_monitor\n\n  "
  'name': 'trajectory_execution_monitor'
  'repo': 'arm_navigation_experimental'
- 'brief': 'launcher'
  'description': "\nROS Service that can launch ROS launch files\n  "
  'name': 'launcher'
  'repo': 'brown-experimental'
- 'brief': 'engine9'
  'description': "\n\n     engine9: Bayesian Network Library\n\n  "
  'name': 'engine9'
  'repo': 'wg-ros-pkg'
- 'brief': 'URDF to COLLADA converter'
  'description': "\n\n    This package contains a tool to convert Unified Robot Description\
    \ Format (URDF) documents into COLLAborative Design Activity (COLLADA) documents.\n\
    \n    Implements robot-specific COLLADA extensions as defined by\n    http://openrave.programmingvision.com/index.php/Started:COLLADA\n\
    \  "
  'name': 'collada_urdf'
  'repo': 'robot_model'
- 'brief': 'semantic_framer'
  'description': "\n    semantic_framer manages lexical units and fits parsed sentences\
    \ to them.  The semantic framer manages lexical units, akin to FrameNet but designed\
    \ for robotics, which are accessible by a given verb.  The semantic framer communicates\
    \ with other nodes by providing interfaces for adding lexical units (through yaml\
    \ files) and for filling lexical units (given a parse).\n  "
  'name': 'semantic_framer'
  'repo': 'roboframenet'
- 'brief': 'odom_calibration'
  'description': "\n\n     odom_calibration\n\n  "
  'name': 'odom_calibration'
  'repo': 'brown-experimental'
- 'brief': 'vlr'
  'description': "\n\n     vlr\n\n  "
  'name': 'vlr'
  'repo': 'bosch-ros-pkg'
- 'brief': 'pr2_arms_kdl'
  'description': "\n\n     pr2_arms_kdl\n\n  "
  'name': 'pr2_arms_kdl'
  'repo': 'gt-ros-pkg'
- 'brief': 'cob_manipulator'
  'description': "\n\n     cob_manipulator\n\n  "
  'name': 'cob_manipulator'
  'repo': 'cob_manipulation'
- 'brief': 'playsound_recovery'
  'description': "\n\n     playsound_recovery\n\n  "
  'name': 'playsound_recovery'
  'repo': 'cwru-ros-pkg'
- 'brief': 'laser_to_pointcloud'
  'description': "\n\n     laser_to_pointcloud\n\n  "
  'name': 'laser_to_pointcloud'
  'repo': 'uuisrc-ros-pkg'
- 'brief': 'dmp_motion_learner'
  'description': "\n\n     dmp_motion_learner\n\n  "
  'name': 'dmp_motion_learner'
  'repo': 'wg-ros-pkg'
- 'brief': ''
  'description': "\n    VSLAM applications (visual odometry, visual SLAM, stereo and\
    \ monocular)\n  "
  'name': 'vslam_system'
  'repo': 'ros-pkg'
- 'brief': 'joint_normalization_filters'
  'description': "\n    This package implements a set of filters that can deal with\
    \ wrapping or unwrapping continuous joints.\n  "
  'name': 'joint_normalization_filters'
  'repo': 'arm_navigation'
- 'brief': 'indomptable_ai'
  'description': "\n\n     indomptable_ai\n\n  "
  'name': 'indomptable_ai'
  'repo': 'smart-robotics-ros-pkg'
- 'brief': 'navigation_srvs'
  'description': "\n      This package contains definitions of services used by the\
    \ different navigation algorithms used in the SRVC contest.\n  "
  'name': 'navigation_srvs'
  'repo': 'ubc-ros-pkg'
- 'brief': 'MobileRobots'' Advanced Robot Interface for Applications (ARIA) C++ library'
  'description': '


    This package contains MobileRobots'' ARIA C++ library (software development toolkit
    or SDK)

    for all MobileRobots'' ActivMedia platforms.

    ARIA can dynamically control your robot''s velocity, heading, relative heading
    and

    other motion parameters either through simple low-level commands or

    through its high-level Actions infrastructure.

    ARIA also receives odometric position estimates, sonar readings and

    all other current operating data sent by the robot platform.


    '
  'name': 'Aria'
  'repo': 'amor-ros-pkg'
- 'brief': 'laser_tilt_controller_filter'
  'description': "\n\n     laser_tilt_controller_filter\n\n  "
  'name': 'laser_tilt_controller_filter'
  'repo': 'pr2_navigation'
- 'brief': 'srldb'
  'description': "\n\n     Statistical relational learning package developed in the\
    \ IAS group at TUM.\n\n  "
  'name': 'srldb'
  'repo': 'knowrob'
- 'brief': 'kr360'
  'description': "\n     KUKA KR360-2 Robot Arm\n     \n     Experimental Model for\
    \ discret and continous controllers. \n     \n     See http://www.kuka-robotics.com/germany/de/products/industrial_robots/heavy/kr360_2\
    \ for details.\n     \n  "
  'name': 'kr360'
  'repo': 'vmi-ros-pkg'
- 'brief': 'pr2_finder'
  'description': "\n\n     pr2_finder\n\n  "
  'name': 'pr2_finder'
  'repo': 'usc-ros-pkg'
- 'brief': 'Slam algorithms for mobile robot navigation'
  'description': "\n\n\tSlam structures and mechanisms for various algorithms. A level\
    \ of \n\tgenericity is the focus here - where elements are common to many\n\t\
    slam algorithms, they're pulled into this package library.\n\n  "
  'name': 'ecl_slam'
  'repo': 'ecl_navigation'
- 'brief': 'power_msgs'
  'description': "\n\n     power_msgs\n\n  "
  'name': 'power_msgs'
  'repo': 'umd-ros-pkg'
- 'brief': 'tag_seeking_controller'
  'description': "\n\n     tag_seeking_controller\n\n  "
  'name': 'tag_seeking_controller'
  'repo': 'brown-experimental'
- 'brief': 'nxt_ros'
  'description': "\n     The nxt_ros package provides the bindings between the NXT\
    \ world\n     and the ROS world.  This package will create a ROS topic for each\n\
    \     NXT sensor, and publish the sensor's data on this topic. The\n     package\
    \ also creates a topic for each NXT motor, which allows you\n     to command the\
    \ motor from ROS. The nxt_ros bindings talk directly\n     to the NXT brick, either\
    \ over USB or over Bluetooth (note that\n     the Bluetooth connection is currently\
    \ too slow to be very\n     useful).  Binding an NXT robot to ROS only requires\
    \ a single\n     configuration file.\n  "
  'name': 'nxt_ros'
  'repo': 'foote-nxt'
- 'brief': 'vr920_tracker'
  'description': "\n\n     This listens to the vr920 driver and publishes ros messages\
    \ for the head positon.\n\n  "
  'name': 'vr920_tracker'
  'repo': 'veltrop-ros-pkg'
- 'brief': 'batman_mesh_info'
  'description': "\n\n     batman_mesh_info\n\n  "
  'name': 'batman_mesh_info'
  'repo': 'brown-experimental'
- 'brief': 'image_letterboxer'
  'description': "\n     enlarges an image by adding black bars around image\n  "
  'name': 'image_letterboxer'
  'repo': 'usc-ros-pkg'
- 'brief': 'Messages used for robot calibration of Care-O-bot'
  'description': "\n     This package is a stripped down fork of the electric version\
    \ of \n     calibration_msgs. It defines messages for storing calibration \n \
    \    samples to be used in full robot calibration procedures.\n  "
  'name': 'cob_calibration_msgs'
  'repo': 'cob_calibration'
- 'brief': 'Read out WAX acceleration sensors.'
  'description': "\n     ROS node for reading out the acceleration values of <a href=\"\
    http://axivity.com/devices/wireless/\">WAX sensors</a>.<br/>\n     <br/>\n   \
    \  The wax_sensor.py node reads all incoming data packets from the WAX receiver\
    \ and creates automatically topics for every sensor (by deviceId).<br/>\n    \
    \ The acceleration values are published as geometry_msgs/Vector3Stamped and are\
    \ normalized to 1 g = 9.81 m/s^2.<br/>\n     <br/>\n     We acknowledge and are\
    \ grateful for the WAX sensor nodes provided by the <a href=\"http://www.ncl.ac.uk/culturelab/\"\
    >Culture Lab</a> at Newcastle University and the <a href=\"http://www.side.ac.uk/\"\
    >SiDE</a> research project.\n  "
  'name': 'wax_sensor'
  'repo': 'vmi-ros-pkg'
- 'brief': 'corobot_joystick'
  'description': "\n\n     Package that permits to control the Corobot with a joystick.\
    \ \n\n  "
  'name': 'corobot_joystick'
  'repo': 'roscorobot'
- 'brief': 'PR2 Pendulum Simulation Example'
  'description': 'Sample pendulum simulations using ROS-Gazebo plugins that demonstrate
    PR2 joint control.'
  'name': 'pr2_examples_gazebo'
  'repo': 'wg-ros-pkg'
- 'brief': 'NetIO 230B Switch'
  'description': "\n     InfraTec Modules: You can switch objects in your infrastructure.\n\
    \     Currently just a IPSwitch, more to come.\n     \n  "
  'name': 'driver_netio'
  'repo': 'vmi-ros-pkg'
- 'brief': 'sbpl_arm_planner_interface'
  'description': "\n\n    sbpl_arm_planner_interface\n\n  "
  'name': 'sbpl_arm_planner_interface_ros'
  'repo': 'sbpl_arm_planning'
- 'brief': 'tfjava'
  'description': "\n\n     tfjava\n\n  "
  'name': 'tfjava'
  'repo': 'client_rosjava_jni'
- 'brief': 'push_grasp_planner'
  'description': "\n\n     push_grasp_planner\n\n  "
  'name': 'push_grasp_planner'
  'repo': 'wg-ros-pkg'
- 'brief': 'demo1_gerow'
  'description': "\n\n     demo1_gerow\n\n  "
  'name': 'demo1_gerow'
  'repo': 'seabee3-ros-pkg'
- 'brief': 'flyatar_experiments'
  'description': "\n\n     flyatar_experiments\n\n  "
  'name': 'flyatar_experiments'
  'repo': 'flyatar'
- 'brief': ''
  'description': "\n    `image_geometry` contains C++ and Python libraries for interpreting\
    \ images\n    geometrically. It interfaces the calibration parameters in sensor_msgs/CameraInfo\n\
    \    messages with OpenCV functions such as image rectification, much as cv_bridge\n\
    \    interfaces ROS sensor_msgs/Image with OpenCV data types.\n  "
  'name': 'image_geometry'
  'repo': 'ros-pkg'
- 'brief': 'pr2_led_servo'
  'description': "\n\n     pr2_led_servo\n\n  "
  'name': 'pr2_led_servo'
  'repo': 'wg-ros-pkg'
- 'brief': 'starmac_msgs'
  'description': "\n\n     starmac_msgs\n\n  "
  'name': 'starmac_msgs'
  'repo': 'starmac-ros-pkg'
- 'brief': 'arm_navigation_experimental_tools'
  'description': "\n\n     arm_navigation_experimental_tools\n\n  "
  'name': 'arm_navigation_experimental_tools'
  'repo': 'arm_navigation_experimental'
- 'brief': 'sample_app'
  'description': "\n    Sample Application\n  "
  'name': 'sample_application'
  'repo': 'wg-ros-pkg'
- 'brief': 'floor_assistance'
  'description': "\n\n     floor_assistance\n\n  "
  'name': 'floor_assistance'
  'repo': 'ccny_experimental'
- 'brief': ''
  'description': 'Swissranger driver services. Should be moved later together with
    other services.'
  'name': 'swissranger_srv'
  'repo': 'tum-ros-pkg'
- 'brief': 'rec_templates'
  'description': "\n\n     rec_templates\n\n  "
  'name': 'rec_templates'
  'repo': 'wg-ros-pkg'
- 'brief': 'Unit and regression tests for diagnsotic_aggregator'
  'description': "\n    Basic diagnostic_aggregator tests are  in the <b>diagnostic_aggregator</b>\
    \ package, but any unit or regression tests that require new nodes, or new Analyzers\
    \ go here.\n  "
  'name': 'test_diagnostic_aggregator'
  'repo': 'ros-pkg'
- 'brief': 'image_gui'
  'description': "\n\n     image_gui\n\n  "
  'name': 'image_gui'
  'repo': 'flyatar'
- 'brief': 'camera_pose_toolkits'
  'description': "\n\n     The camera_pose_toolkits is a set of tools built around\
    \ camera_pose_calibration package that allows the user to easily add new camera\
    \ frame to existed tf tree. \n\n     We assume that the target tf tree already\
    \ has (at least) one camera frame (let's call it urdf camera frame). The new camera\
    \ frame has to be rigidly mounted on one of the frames in the tf tree, but there\
    \ can be joints between the urdf camera frame and the frame on which the new camera\
    \ is mounted. This package will find out the static transform between the new\
    \ camera frame and its mounting frame. The package will publish that transform\
    \ to tf. It can also convert that transform into a xml snippet and insert it into\
    \ the existed urdf description file. \n\n  "
  'name': 'camera_pose_toolkits'
  'repo': 'camera_pose'
- 'brief': 'roomba_stage'
  'description': "\n\n     Stage world files for the Roomba robot. Also includes 2dnav\
    \ launch files. An example for multiple roombas running in Stage with multiple\
    \ move_bases running is also present.\n\n  "
  'name': 'lse_roomba_stage'
  'repo': 'lse_roomba_toolbox'
- 'brief': 'recyclerbot'
  'description': "\n\n     recyclerbot\n\n  "
  'name': 'recyclerbot'
  'repo': 'stanford-ros-pkg'
- 'brief': ''
  'description': "\n    Launch scripts for simulating the PR2 in <a href=\"http://ros.org/wiki/gazebo\"\
    >gazebo</a>.\n    The simulation equivalent of pr2.launch is found here.\n   \
    \ pr2_fingertip_pressure_contact_translator produces the same ROS topics as fingertip_pressure\
    \ package for simulated PR2.\n"
  'name': 'pr2_gazebo'
  'repo': 'wg-ros-pkg'
- 'brief': 'tf_relay'
  'description': "\n\n     tf_relay\n\n  "
  'name': 'tf_relay'
  'repo': 'tum-ros-pkg'
- 'brief': 'TestExecution_msgs'
  'description': "\n\n     TestExecution_msgs\n\n  "
  'name': 'TestExecution_msgs'
  'repo': 'darpa_arm_msgs'
- 'brief': 'rcf_com_lms100'
  'description': "\n\n     rcf_com_lms100\n     \n     ROS driver for the sick lms100\
    \ laser scanner. The Driver is part of the rcf4ros\n     communication layer.\n\
    \     \n     Adapted from driver code for the sick lms400 laser scanner.\n\n  "
  'name': 'rcf_com_lms100'
  'repo': 'roblab-whge-ros-pkg'
- 'brief': 'demo1_tasha'
  'description': "\n\n     demo1_tasha\n\n  "
  'name': 'demo1_tasha'
  'repo': 'seabee3-ros-pkg'
- 'brief': 'cob_hokuyo'
  'description': "\n\n     This Package is simply a Care-O-bot specific setup for\
    \ the hokuyo scanner.\n\n  "
  'name': 'cob_hokuyo'
  'repo': 'cob_driver'
- 'brief': 'Package to parse urdf in to kdl tree'
  'description': "\n\n   The Kinematics and Dynamics Library (KDL) defines a tree\
    \ structure\n   to represent the kinematic and dynamic parameters of a robot\n\
    \   mechanism. <tt>kdl_parser</tt> provides tools to construct a KDL\n   tree\
    \ from an XML robot representation in either the URDf format or\n   the Collada\
    \ format.\n\n  "
  'name': 'kdl_parser'
  'repo': 'robot_model'
- 'brief': 'laser_slam_mapper'
  'description': "\n\nA mapper that builds a 2d topological map using the output from\
    \ the slam algorithm in the laser_slam package.\n\n  "
  'name': 'laser_slam_mapper'
  'repo': 'wg-ros-pkg'
- 'brief': 'PR2JoyControl'
  'description': "\n\n     PR2JoyControl\n\n  "
  'name': 'PR2JoyControl'
  'repo': 'brown-experimental'
- 'brief': 'Tutorials on commanding OpenRAVE through ROS'
  'description': "\n    There are two ways to start the server.\n\n<p>1. Through the\
    \ command line:</p>\n\n<b>roslaunch openraveros_tutorials openrave.launch</b>\n\
    \n<p>2. Through python code shown in openraverosserver.py</p>\n\n<b>rosrun openraveros_tutorials\
    \ openraverosserver.py</b>\n\n<p>Once the ROSServer is started, veriy that the\
    \ services are indeed advertised:</p>\n\n<b>rosservice list</b>\n\n<p>Then either\
    \ launch the C++ or python code to tell openrave to load a scene:</p>\n\n<b>rosrun\
    \ openraveros_tutorials loadscene</b><br/>\n\n<b>rosrun openraveros_tutorials\
    \ loadscene.py</b>\n\n  "
  'name': 'openraveros_tutorials'
  'repo': 'jsk-ros-pkg'
- 'brief': 'babel'
  'description': "\n      Babel\n      http://common-lisp.net/project/babel/\n  "
  'name': 'babel'
  'repo': 'cram_pl'
- 'brief': 'Dynamics bindings for dynamic-graph.'
  'description': "\n\n    FIXME\n\n  "
  'name': 'sot-dynamic'
  'repo': 'jrl-ros-pkg'
- 'brief': 'tf_test'
  'description': "\n\n     tf_test\n\n  "
  'name': 'tf_test'
  'repo': 'brown-experimental'
- 'brief': 'demo1_dhruv'
  'description': "\n\n     demo1_dhruv\n\n  "
  'name': 'demo1_dhruv'
  'repo': 'seabee3-ros-pkg'
- 'brief': 'surface_reconstruction'
  'description': "\n\n   Surface reconstruction method (to be named) for PCL.\n\n\
    \  "
  'name': 'surface_reconstruction'
  'repo': 'wg-ros-pkg'
- 'brief': 'om_msgs'
  'description': "\n\n     om_msgs is the set of messages used for overhead_map.\n\
    \n  "
  'name': 'om_msgs'
  'repo': 'brown-experimental'
- 'brief': ''
  'description': "\n    Convert Player actarray messages to ROS.\n  "
  'name': 'player_log_actarray'
  'repo': 'tum-ros-pkg'
- 'brief': 'mainMotorControl_communications'
  'description': "\n\n     The mainMotorControl_communications defines main motor\
    \ control messages and services\n\n  "
  'name': 'mainMotorControl_communications'
  'repo': 'pandora-auth-ros-pkg'
- 'brief': 'hrl_srvs'
  'description': "\n    ROS services that the Healthcare Robotics Lab, Georgia Tech\
    \ often\n    uses.\n  "
  'name': 'hrl_srvs'
  'repo': 'gt-ros-pkg'
- 'brief': 'photographer'
  'description': "\n    The high-level controller for the robot photographer.\n  "
  'name': 'photographer'
  'repo': 'wg-ros-pkg'
- 'brief': 'neo_srbdrive'
  'description': "\n\n     neo_srbdrive\n\n  "
  'name': 'neo_srbdrive'
  'repo': 'neo_driver'
- 'brief': 'A generic driver for digital cameras based on gphoto2'
  'description': ''
  'name': 'photo'
  'repo': 'bosch-ros-pkg'
- 'brief': 'joint_trajectory_action_tools'
  'description': "\n\n     joint_trajectory_action_tools\n\n  "
  'name': 'joint_trajectory_action_tools'
  'repo': 'wg-ros-pkg'
- 'brief': 'python_xbee'
  'description': "\n\n     python_xbee\n\n  "
  'name': 'python_xbee'
  'repo': 'vmi-ros-pkg'
- 'brief': 'pr2eus'
  'description': "\n\n     pr2eus\n\n  "
  'name': 'pr2eus'
  'repo': 'jsk-ros-pkg'
- 'brief': 'rosserial_adk_demo'
  'description': "\n\n     rosserial_adk_demo contains example firmware for use with\
    \ the \n     Android ADK and rosserial_android.  \n\n  "
  'name': 'rosserial_adk_demo'
  'repo': 'rosserial_android'
- 'brief': 'PhidgetMotor'
  'description': "\n\n     A service to control the robot drive motors using the \n\
    \    Phidget HC Motor Control\n\n    This package depends on the Phidgets client\
    \ library being\n    installed manually from\n    http://www.phidgets.com/downloads/libraries/libphidget_2.1.8.20111028.tar.gz\n\
    \    and then the Python module from\n    http://www.phidgets.com/downloads/libraries/PhidgetsPython_2.1.8.20111028.zip\n\
    \n  "
  'name': 'PhidgetMotor'
  'repo': 'roscorobot'
- 'brief': 'Send images from sensor_msgs/Image to v4l2 compatible video device.'
  'description': "\n    The <b>image_sink</b> writes sensor_msgs/Image to a v4l2 compatible\
    \ video device.<br/>\n    <br/>\n    The included virtual loopback video device\
    \ <b>v4l2loopback</b> is a kernel module\n    which creates /dev/videoX devices\
    \ that can be written to and read from\n    at the same time.<br/>\n    <br/>\n\
    \    The combination of the image_sink and the loopback device allows to view\
    \ ROS images\n    in every v4l2 compatible image capture application e. g. Skype\
    \ or VLC Media Player.\n  "
  'name': 'image_sink'
  'repo': 'vmi-ros-pkg'
- 'brief': 'meshset3d_tools'
  'description': "\n\n     meshset3d_tools\n\n  "
  'name': 'meshset3d_tools'
  'repo': 'bosch-ros-pkg'
- 'brief': 'mod_dialog'
  'description': "\n\n    Simple dialog module to talk to KnowRob using natural language\n\
    \    queries and responses.\n\n  "
  'name': 'mod_dialog'
  'repo': 'tum-ros-pkg'
- 'brief': 'rtt_ros_integration_example'
  'description': "\n\n    rtt_ros_integration_example provides a very basic example.\
    \ A HelloRobot component with two input and two output ports is created. You can\
    \ use 'rostopic echo/pub' to read from and write to them, e.g: rostopic pub /string_in\
    \ std_msgs/String 'Hi, HelloRobot component'\n\n  "
  'name': 'rtt_ros_integration_example'
  'repo': 'rtt_ros_integration'
- 'brief': 'germandeli_crawler'
  'description': "\nGermandeli_crawler will download structure and the images of the\
    \ site www.germandeli.com\n\n===============START=========================\nTo\
    \ run the crawler execute the following command:\n&quot;python3.1 start_extracting.py\
    \ absolute_path_to_target_data_dir&quot;\n\n===============ABOUT=========================\n\
    The script first extracts the structure of the site in the structure.xml file\
    \ in the data directory. \nIt than follows this file to do the actual extraction\
    \ of the images. The images are stored in the data \ndirectory in subfolders,\
    \ which follow the structure of the site. Additionally some  information \n(like\
    \ product description, link, id, etc.) is added for every product in the structure.xml\
    \ file and \neach page is marked as traced, so if the script is interrupted it\
    \ can continue the crawling, when it is started again.\n  "
  'name': 'germandeli_crawler'
  'repo': 'tum-ros-pkg'
- 'brief': 'ipswitch4ros'
  'description': "\n\n     ipswitch4ros\n\n  "
  'name': 'ipswitch4ros'
  'repo': 'vmi-ros-pkg'
- 'brief': 'people_tracking_filter'
  'description': "\n\n     tracker\n\n  "
  'name': 'people_tracking_filter'
  'repo': 'wg-ros-pkg'
- 'brief': 'schunk_hardware_config'
  'description': "\n\n     schunk_hardware_config\n\n  "
  'name': 'schunk_hardware_config'
  'repo': 'schunk_robots'
- 'brief': '.'
  'description': "\n        This package contains code associated with the following\
    \ publication:\n        The Complex Structure of Simple Devices: A Survey of Trajectories\
    \ and Forces that Open Doors and Drawers.\n        Advait Jain, Hai Nguyen, Mrinal\
    \ Rath, Jason Okerman and Charles C. Kemp. IEEE RAS and EMBS International Conference\
    \ on Biomedical Robotics and Biomechatronics (BioRob) 2010\n  "
  'name': '2010_biorob_everyday_mechanics'
  'repo': 'gt-ros-pkg'
- 'brief': 'cram_roslisp_common'
  'description': "\n\n     cram_roslisp_common\n\n  "
  'name': 'cram_roslisp_common'
  'repo': 'cram_highlevel'
- 'brief': 'XML files for running SLAM with the move_base node on a PR2 robot.'
  'description': "\n    This package holds launch files for running the <a href=\"\
    http://www.ros.org/wiki/move_base\">move_base</a> node in conjunction with [[gmapping\
    \ | SLAM]] on a PR2 robot.\n  "
  'name': 'pr2_navigation_slam'
  'repo': 'pr2_navigation'
- 'brief': 'Hand tweak camera extrinsics. (unstable)'
  'description': "\n     Provides a tool to make small changes to the location of\
    \ a monocular camera or stereocamera attached to the robot. This package is still\
    \ an unstable and experimental package.  The interface is a work in progress that\
    \ will be changing.\n  "
  'name': 'camera_offsetter'
  'repo': 'ros-pkg'
- 'brief': 'Driver for the GeViCAM camera'
  'description': "\n    A ROS node and assorted tools to provide access to the GeViCAM\
    \ stereo camera of the PR2 robot.\n  "
  'name': 'gevicam_camera'
  'repo': 'wg-ros-pkg'
- 'brief': 'hyp_filter'
  'description': "\n\tA node that filters hypothesis generated by a detector based\
    \ on the \n\tprecision-recall curve for that particluar class and/or algorithm.\
    \ \n\tIt is responsible for assigning a confidence score to each detection \n\t\
    hypothesis which can be used to compare detection confidences across \n\talgorithms\
    \ and classes.   \n  "
  'name': 'hyp_filter'
  'repo': 'ubc-ros-pkg'
- 'brief': 'demo_tracker'
  'description': "\n\n    Skeleton Tracker Teleop Package for the Pi Robot Project\n\
    \n  "
  'name': 'demo_tracker'
  'repo': 'pi-robot-ros-pkg'
- 'brief': 'neo_can'
  'description': "\n\n     neo_can\n\n  "
  'name': 'neo_can'
  'repo': 'neo_driver'
- 'brief': 'Global navigation for the PR2 robot at Willow Garage.'
  'description': "\n\n     This application allows the PR2 robot to navigate autonomously\
    \ in the Willow Garage office environment.\n\n  "
  'name': 'wg_pr2_2dnav'
  'repo': 'wg-ros-pkg'
- 'brief': 'barcode_from_picture'
  'description': "\n\n     barcode_from_picture turns images (with sufficient texture)\
    \ that humans enjoy \n     into trackable planar homography patterns that the\
    \ robot can recognize what it is and \n     where it is.  \n\n  "
  'name': 'barcode_from_picture'
  'repo': 'wg-ros-pkg'
- 'brief': 'link_position'
  'description': "\n\n     link_position\n\n  "
  'name': 'link_position'
  'repo': 'brown-experimental'
- 'brief': 'pr2_teleop_general_jsk_patch'
  'description': "\n\n     pr2_teleop_general_jsk_patch\n\n  "
  'name': 'pr2_teleop_general_jsk_patch'
  'repo': 'jsk-ros-pkg'
- 'brief': 'sbpl_lattice_planner_3d - an extended sbpl_lattice_planner which performs
    collision checks in 3D'
  'description': "\n\n     This package provides an extended sbpl_lattice_planner\
    \ to perform 3D collision checks against the robot's full kinematic configuration.\
    \ It should serve as a drop-in replacement as global planner in the navigation\
    \ stack, to be used with pose_follower_3d as local planner. The 3D collision map\
    \ is usually sent out from octomap_server. \n\n  "
  'name': 'sbpl_lattice_planner_layer_3d'
  'repo': 'wg-ros-pkg'
- 'brief': 'planar_tracker'
  'description': "\n\n     planar_tracker\n\n  "
  'name': 'planar_tracker'
  'repo': 'brown-experimental'
- 'brief': 'pr2_pick_and_place_tutorial'
  'description': "\n\n     pr2_pick_and_place_tutorial\n\n  "
  'name': 'pr2_pick_and_place_tutorial'
  'repo': 'wg-ros-pkg'
- 'brief': 'pi_arm_navigation'
  'description': "\n\n     Single 4-dof arm + gripper\n\n  "
  'name': 'pi_arm_navigation'
  'repo': 'pi-robot-ros-pkg'
- 'brief': 'forearm_camera_ik'
  'description': "\n\n    Forearm camera IK via particle swarm optimization.  There\
    \ is a\n    'fitness' function that can easily be tweaked to prefer accuracy\n\
    \    in one dimension to others.  By default pitch and yaw are favored\n    over\
    \ position, and roll is ignored completely.\n\n    This package is a HACK and\
    \ will be superceded by a more general IK\n    toolkit.\n  "
  'name': 'forearm_camera_ik'
  'repo': 'wg-ros-pkg'
- 'brief': 'rosie_description'
  'description': "\n\n     URDF definitions of the ROSIE platform used at TU Muenchen.\n\
    \n  "
  'name': 'rosie_description'
  'repo': 'tum-ros-pkg'
- 'brief': 'Joint torque visualization in rviz'
  'description': "\n    \n    This package provides visual feedback of the current\
    \ joint motor torques using marker displays in rviz.\n\n  "
  'name': 'dynamics_markers'
  'repo': 'wg-ros-pkg'
- 'brief': 'windsonic'
  'description': "\n\n     A ROS node to provide access to Gill Instruments Windsonic,\
    \ an ultrasonic wind sensor.\n\n  "
  'name': 'windsonic'
  'repo': 'lse_anemometer_drivers'
- 'brief': 'schunk_arm_kinematics_constraint_aware'
  'description': "\n\n     schunk_arm_kinematics_constraint_aware\n\n  "
  'name': 'schunk_arm_kinematics_constraint_aware'
  'repo': 'uuisrc-ros-pkg'
- 'brief': 'drinkserving_webinterface'
  'description': "\n\n     drinkserving_webinterface\n\n  "
  'name': 'ds_webinterface'
  'repo': 'bosch-ros-pkg'
- 'brief': 'laser_proj'
  'description': "\n\n     laser_proj\n\n  "
  'name': 'laser_proj'
  'repo': 'ccny_experimental'
- 'brief': 'Dynamic graph PR-2 package'
  'description': "\n\n    PR-2 real-time controller for dynamic-graph.\n\n    Gather\
    \ dedicated dynamic-graph entities, humanoid robot python\n    classs definition\
    \ and PR-2 real-time controller.\n\n  "
  'name': 'sot_pr2'
  'repo': 'stacks/redundant_manipulator_control'
- 'brief': 'genmsg'
  'description': "\n\n     Standalone Python library for generating ROS message and\
    \ service data structures in\n     Python, C++, LISP, and other languages.\n\n\
    \  "
  'name': 'genmsg'
  'repo': 'genmsg'
- 'brief': 'Cognitive Plants Interaction'
  'description': "\n     Botanicalls Cognitive Plants\n     \n     New interaction\
    \ module.\n     \n  "
  'name': 'ce_plants'
  'repo': 'vmi-ros-pkg'
- 'brief': 'geometric_semantics_examples'
  'description': "\n\n      <a href=\"http://www.ros.org/wiki/geometric_semantics_examples\"\
    >geometric_semantics_examples</a> groups some examples showing how the <a href=\"\
    http://www.ros.org/wiki/geometric_semantics\">geometric_semantics</a> can be used\
    \ to provide semantic checking for the geometric relations between rigid bodies\
    \ in your application.\n\n  "
  'name': 'geometric_semantics_examples'
  'repo': 'geometric_relations_semantics'
- 'brief': 'Action libraries for various controllers of the Wubble robot'
  'description': "\n        wubble_actions\n    "
  'name': 'wubble_actions'
  'repo': 'ua-ros-pkg'
- 'brief': 'Hue Blob'
  'description': "\n\n     Stereo tracking of a color blob.\n\n     Based on the hueblob\
    \ LAAS robotics component by Anthony Mallet.\n\n  "
  'name': 'hueblob'
  'repo': 'stacks/hueblob'
- 'brief': 'rfid_nav2'
  'description': "\n\n     rfid_nav2: A snapshot of rfid_nav used for RFID experiments.\n\
    \n  "
  'name': 'rfid_nav2'
  'repo': 'gt-ros-pkg'
- 'brief': 'ros_rt_wmp_msgs'
  'description': "\n\n     ros_rt_wmp_msgs\n\n  "
  'name': 'ros_rt_wmp_msgs'
  'repo': 'unizar-rt-wmp-ros-pkg'
- 'brief': 'coordination_client'
  'description': "\n\n     coordination_client\n\n  "
  'name': 'coordination_client'
  'repo': 'brown-experimental'
- 'brief': 'cob_utilities'
  'description': "\n\n    Deprecated\n    &quot;cob_utilities&quot; subsumes a number\
    \ of classes, which are used in the original COb3 software. E.g. &quot;IniFile.h&quot;\
    \ supports the original inifile structure of Care-O-bot 3. &quot;MathSup.h&quot;\
    \ provides some basic functions like conversion from degree to radion or norming\
    \ of angles within +/- PI. The package is currently used while the drivers are\
    \ ported to ROS and Orocos respectively. Midterm it shall be removed and the ROS\
    \ structures shall be used for reading parameters during initialization. So, don't\
    \ use this package in new code!\n\n  "
  'name': 'cob_utilities'
  'repo': 'cob_driver'
- 'brief': 'vfh_recognizer_db_test'
  'description': "\n\n     vfh_recognizer_db_test\n\n  "
  'name': 'vfh_recognizer_db_test'
  'repo': 'wg-ros-pkg'
- 'brief': 'rosmaster'
  'description': "\n\n     ROS <a href=\"http://ros.org/wiki/Master\">Master</a> implementation.\n\
    \n  "
  'name': 'rosmaster'
  'repo': 'ros_comm'
- 'brief': 'ride_agent'
  'description': "\n     RIDE Agent\n  "
  'name': 'ride_agent'
  'repo': 'wu-ros-pkg'
- 'brief': 'aruco_pose'
  'description': 'Marker tracking using aruco.'
  'name': 'aruco_pose'
  'repo': 'tum-ros-pkg'
- 'brief': 'diagnostic_annotate'
  'description': "\n\n     diagnostic_annotate\n\n  "
  'name': 'diagnostic_annotate'
  'repo': 'wg-ros-pkg'
- 'brief': 'sbpl_two_arm_planner_interface'
  'description': "\n\n    sbpl_two_arm_planner_interface\n\n  "
  'name': 'sbpl_two_arm_interface'
  'repo': 'sbpl_arm_planning'
- 'brief': 'Some scripts to automate browsing the ROS universe'
  'description': "\nA few scripts to generate and manipulate lists of all available\
    \ ROS packages.\n  "
  'name': 'rosbrowse'
  'repo': 'rosorg'
- 'brief': 'rcf_com_ocr4ros'
  'description': "\n\n     rcf_com_ocr4ros\n\n\tProvides doorplate information in\
    \ the rcf.\n\n  "
  'name': 'rcf_com_ocr4ros'
  'repo': 'roblab-whge-ros-pkg'
- 'brief': 'task_manager'
  'description': "\n\n     task_manager\n\n  "
  'name': 'task_manager'
  'repo': 'wg-ros-pkg'
- 'brief': 'tabletop_msgs'
  'description': "\n\n     tabletop_msgs\n\n  "
  'name': 'tabletop_msgs'
  'repo': 'wg-ros-pkg'
- 'brief': 'ViSP, the Visual Servoing Platform'
  'description': "\n    ViSP, standing for Visual Servoing Platform, is unique. This\
    \ software\n    is a complete cross-platform solution that allows prototyping\
    \ and\n    developing applications in visual tracking and visual servoing.\n\n\
    \    ViSP can be useful in robotics, computer vision, augmented reality and\n\
    \    computer animation.\n\n    This package is based on the original visp package\
    \ from Steven\n    Bellens.\n  "
  'name': 'visp'
  'repo': 'stacks/vision_visp'
- 'brief': 'Dense image descriptor'
  'description': "\n\n    Daisy is a dense image descriptor package from Vincent Lepetit's\
    \ lab.  See the url for more info.\n\n  "
  'name': 'daisy'
  'repo': 'wg-ros-pkg'
- 'brief': '3D Meshes and URDF for Hokuyo URG Laser'
  'description': "\n\n     hokuyo_urg_description\n\n    "
  'name': 'hokuyo_urg_description'
  'repo': 'ua-ros-pkg'
- 'brief': 'lidar_tracking'
  'description': "\n\nA very simple (and not very robust) node for tracking dynamic\
    \ obstacles using lidar. \n\n  "
  'name': 'lidar_tracking'
  'repo': 'sbpl_dynamic_env'
- 'brief': 'opencv_tests'
  'description': "\n\n     opencv_tests\n\n  "
  'name': 'opencv_tests'
  'repo': 'ros-pkg'
- 'brief': 'deap'
  'description': "\n     This package is a wrapper of the &quot;Distributed evolutionary\
    \ algorithms in python&quot; designed and developed by Fran\xE7ois-Michel De Rainville,\
    \ F\xE9lix-Antoine Fortin and Marc-Andr\xE9 Gardner.\n\nIt is useful to research\
    \ about evolutive robotics or as a mechanism to solve optimization problems.\n\
    \  "
  'name': 'deap'
  'repo': 'rtc-us-ros-pkg-trunk'
- 'brief': 'mtrace_tools'
  'description': "\n\n     mtrace_tools\n\n  "
  'name': 'mtrace_tools'
  'repo': 'wg-ros-pkg'
- 'brief': 'continuous_ops_msgs'
  'description': "\n\n     continuous_ops_msgs\n\n  "
  'name': 'continuous_ops_msgs'
  'repo': 'continuous_ops'
- 'brief': 'functional_m3n'
  'description': "\n<p>\n    Implementation of Max-Margin Markov Networks using functional\
    \ gradient boosting\n    as described in Munoz et al., &quot;Contextual Classification\
    \ with Functional Max-Margin\n    Markov Networks&quot;, CVPR 2009.\n</p>\n<p>\n\
    The learning component of this package is under BSD License.  The inference/classification\
    \ \ncomponent can either use the Graph Boost Library (Boost Software License)\
    \ or another \n3rd party library (from Vladimir Kolmogorov) which has a &quot;research-only&quot;\
    \ license.\n</p>\n  "
  'name': 'functional_m3n'
  'repo': 'wg-ros-pkg'
- 'brief': 'safe_teleop_stage'
  'description': "\n     Demo of safe_teleop in stage\n  "
  'name': 'safe_teleop_stage'
  'repo': 'bosch-ros-pkg'
- 'brief': 'sift_detector'
  'description': "\n\n     This package contains the object detector based upon sift\
    \ matching, most of the \n     code residing in src/sift_detector/nodes\n    \
    \ \n     sift_driver contains the functions to train sift detector nodes and to\
    \ run these \n     nodes. This module is primiarly an interface between the sift-detector\
    \ and ros. \n     The node itself contains a set of detectors (one for each category)\
    \ and listens \n     for detection_request messages and returns hypothesis messages.\n\
    \     \n     srvc_matcher actually does the detection and the detection with the\
    \ help help of the \n     other modules. It is possible to disentangle this and\
    \ use it seperately from ros.\n     \n      bin/keypoints is binary for the sift\
    \ feature extractor, whose code we cannot release.\n  "
  'name': 'sift_detector'
  'repo': 'ubc-ros-pkg'
- 'brief': 'cwru_vision'
  'description': "\n\n     cwru_vision\n\n  "
  'name': 'cwru_vision'
  'repo': 'cwru-ros-pkg'
- 'brief': 'rtt_ros_integration_nav_msgs'
  'description': "\n    \n    Provides all rtt typekits for ROS nav_msgs\n    \n  "
  'name': 'rtt_ros_integration_nav_msgs'
  'repo': 'orocos_toolchain_ros'
- 'brief': 'rosbridge'
  'description': "\nrosbridge allows dynamic socket and web-socket based access to\
    \ the full capabilities of ROS. A lightweight binding to Javascript for websocket-capable\
    \ web browsers is included (ros.js), but access from any language supporting sockets\
    \ and JSON is easy.\n  "
  'name': 'rosbridge'
  'repo': 'brown-ros-pkg'
- 'brief': 'sim_contact_translator'
  'description': "\n\n     sim_contact_translator\n\n  "
  'name': 'sim_contact_translator'
  'repo': 'wg-ros-pkg'
- 'brief': 'planning_environment'
  'description': "\n\n    Define the robot model and collision environment based on\
    \ ROS\n    parameters. \n\n  "
  'name': 'planning_environment'
  'repo': 'arm_navigation'
- 'brief': 'Common messages for Dynamixel motors'
  'description': "\n        Common messages used throughout dynamixel_motor stack.\n\
    \    "
  'name': 'dynamixel_msgs'
  'repo': 'dynamixel_motor'
- 'brief': 'dock_marker_server'
  'description': "\n\n     dock_marker_server\n\n  "
  'name': 'dock_marker_server'
  'repo': 'cyphy'
- 'brief': 'rve_pluginloader'
  'description': "\n\n     rve_pluginloader\n\n  "
  'name': 'rve_pluginloader'
  'repo': 'visualization_engine'
- 'brief': 'cob_vision_msgs'
  'description': "\n\n     cob_vision_msgs\n\n  "
  'name': 'cob_people_detection_msgs'
  'repo': 'cob_people_perception'
- 'brief': 'rtt_std_msgs'
  'description': "\n\n    Provides an rtt typekit for ROS std_msgs messages.\n\n \
    \   It allows you to use ROS messages transparently in\n    RTT components and\
    \ applications.\n\n    This package was automatically generated by the\n    create_rtt_msgs\
    \ generator and should not be manually\n    modified.\n\n    See the http://ros.org/wiki/std_msgs\
    \ documentation\n    for the documentation of the ROS messages in this\n    typekit.\n\
    \n  "
  'name': 'rtt_std_msgs'
  'repo': 'rtt_ros_comm'
- 'brief': 'json_prolog'
  'description': "\n    json_prolog provides an interface to SWI prolog through ROS\n\
    \    services. It is implemented in Java by using rosjava and JPL.\n  "
  'name': 'json_prolog'
  'repo': 'knowrob'
- 'brief': 'pr2_arm_navigation_kinematics'
  'description': "\n\n     pr2_arm_navigation_kinematics\n\n  "
  'name': 'pr2_arm_navigation_kinematics'
  'repo': 'wg-ros-pkg'
- 'brief': 'Iteratively Closest Point library'
  'description': "\n     <p>\n     ICP, an open-source implementation of the iteratively\
    \ closest point library.\n     </p>\n\n     <p>\n     ROS wrapper for the implementation\
    \ of the \n     Iteratively Closest Point algorithm, originally\n     implemented\
    \ by Per Bergstrom, released under BSD.\n     It uses a kd-Tree library, originally\
    \ \n     implemented by Guy Shechter, released under BSD.\n     </p>\n\n     <p>\n\
    \     http://www.mathworks.com/matlabcentral/fileexchange/16766\n     </p>\n \
    \    <p>\n     http://www.mathworks.com/matlabcentral/fileexchange/4586-k-d-tree\n\
    \     </p>\n  "
  'name': 'icp'
  'repo': 'alufr-ros-pkg'
- 'brief': 'Mesa Imaging Swissranger 3000/4000 driver'
  'description': "\n\n    This is a port of the older ROS driver for SR3K that used\
    \ the\n    libusb API.  This driver uses the newer libmesasr API (&gt;= 1.0)\n\
    \    that can be found at http://www.mesa-imaging.ch/drivers.php.  This\n    node\
    \ is designed to work with the ROS image_pipeline with minimal\n    dependencies.\
    \  \n\n    Note: A compile time flag at the top of include/sr4k.h is\n    currently\
    \ used to switch back and forth between supporting SR3000\n    and SR4000 devices.\n\
    \  "
  'name': 'sr4k'
  'repo': 'cornell-ros-pkg'
- 'brief': 'Common functionality for plugins'
  'description': "\n\n     rosgui_py_common provides common functionality for rosgui\
    \ plugins written in Python.\n\n  "
  'name': 'rosgui_py_common'
  'repo': 'ros_gui'
- 'brief': 'EtherCAT Hardware'
  'description': '

    Package for creating a hardware interface to the robot using the EtherCAT motor
    controller/driver

    '
  'name': 'ethercat_hardware'
  'repo': 'wg-ros-pkg'
- 'brief': 'imu_integrator'
  'description': "\n\n     imu_integrator\n\n  "
  'name': 'imu_integrator'
  'repo': 'seabee3-ros-pkg'
- 'brief': 'ua_audio_fft'
  'description': "\n\n     ua_audio_fft\n\n  "
  'name': 'ua_audio_fft'
  'repo': 'ua-ros-pkg'
- 'brief': 'Cross platform api for low level time functions.'
  'description': "\n\n     Provides a portable set of time functions that are especially\
    \ useful for \n     porting other code or being wrapped by higher level c++ classes.\n\
    \n  "
  'name': 'ecl_time_lite'
  'repo': 'ecl_lite'
- 'brief': ''
  'description': 'Intersect polygons'
  'name': 'intersect_polys'
  'repo': 'tum-ros-pkg'
- 'brief': 'Inverse dynamics model for the PR2'
  'description': "\n\n      This package provides a Newton-Euler based model using\
    \ the Stanford Whole-Body Control (WBC) package and tools to create a nonparametric\
    \ regression model using Gaussion Process Regression.\n\n  "
  'name': 'inverse_dynamics_solver'
  'repo': 'wg-ros-pkg'
- 'brief': 'lse_roomba_tf_setup'
  'description': "\n\n     Typical tf setups for the Erratics used in LSE. Includes\
    \ setups with the Hokuyo laser and the LSE two nostril MOX nose.\n\n  "
  'name': 'lse_roomba_tf_setup'
  'repo': 'lse_roomba_toolbox'
- 'brief': 'pose_graph'
  'description': "\nThe pose_graph and associated data structures.\n  "
  'name': 'pose_graph'
  'repo': 'ros-pkg'
- 'brief': 'Messages for dynamic obstacles'
  'description': "\n\n  "
  'name': 'dynamic_obs_msgs'
  'repo': 'sbpl_dynamic_env'
- 'brief': 'correct_drift'
  'description': "\n      Package that tries to correct from drift of the map frame\
    \ when integrating multiview data.\n  "
  'name': 'correct_drift'
  'repo': 'ubc-ros-pkg'
- 'brief': 'mod_semantic_map'
  'description': "\n\n     mod_semantic_map\n\n     Node and tools to generate the\
    \ OWL description of the semantic map\n     from ROS messages\n\n  "
  'name': 'mod_semantic_map'
  'repo': 'tum-ros-pkg'
- 'brief': 'gps_common'
  'description': "\n\n    GPS messages and common routines for use in GPS drivers\n\
    \n  "
  'name': 'gps_common'
  'repo': 'umd-ros-pkg'
- 'brief': 'parsec_navigation'
  'description': "\n\n     parsec_navigation\n\n  "
  'name': 'parsec_navigation'
  'repo': 'parsec'
- 'brief': 'ros-rt-wmp'
  'description': "\n\n     ros-rt-wmp\n\n  "
  'name': 'ros_rt_wmp'
  'repo': 'unizar-rt-wmp-ros-pkg'
- 'brief': 'ias_prolog_addons'
  'description': "\n      Some utilities for Prolog:\n      * Interface to the Weka\
    \ and Mallet machine learning libraries, whose algorithms can be applied to instances\
    \ in KnowRob (in classifiers.pl)\n      * jython-interface for Prolog (in jython.pl,\
    \ deprecated for internal use)\n      * Several small utility scripts (in util.pl)\n\
    \      * Methods for computing different semantic similarity values (comp_similarity.pl)\n\
    \n  "
  'name': 'ias_prolog_addons'
  'repo': 'knowrob'
- 'brief': 'android_sensors_driver'
  'description': "\n\n     android_sensors_driver\n\n  "
  'name': 'android_sensors_driver'
  'repo': 'android_sensors_driver'
- 'brief': 'turtlebot_calibration'
  'description': "\n\n     turtlebot_calibration\n\n  "
  'name': 'turtlebot_calibration'
  'repo': 'turtlebot_apps'
- 'brief': 'tele_mobile'
  'description': "\n      A package for teleoperation controls of segway, zenither,\
    \ and dynamixel servos.\n  "
  'name': 'tele_mobile'
  'repo': 'gt-ros-pkg'
- 'brief': 'skin_driver'
  'description': "\n\n     skin_driver\n\n  "
  'name': 'skin_driver'
  'repo': 'bosch-ros-pkg'
- 'brief': 'tfdump'
  'description': "\n\n     tfdump\n\n  "
  'name': 'tfdump'
  'repo': 'usc-ros-pkg'
- 'brief': 'rtt_ros_integration_std_msgs'
  'description': "\n    \n    Provides all rtt typekits for ROS std_msgs\n    \n  "
  'name': 'rtt_ros_integration_std_msgs'
  'repo': 'orocos_toolchain_ros'
- 'brief': 'Launch files for data collection.'
  'description': "\n    This package contains a collection of launch files that can\
    \ be helpful in configuring\n    the calibration stack to run on your robot.\n\
    \  "
  'name': 'calibration_launch'
  'repo': 'calibration'
- 'brief': 'rfid_explore_room'
  'description': "\n\n     rfid_explore_room\n\n  "
  'name': 'rfid_explore_room'
  'repo': 'gt-ros-pkg'
- 'brief': 'The Bayesian Filtering Library (latest) with Eigen matrix class'
  'description': "\n\n    This package contains a recent version of the Bayesian Filtering\n\
    \    Library (BFL), distributed by the Orocos Project.\n\n  "
  'name': 'bfl_eigen'
  'repo': 'tu-darmstadt-ros-pkg'
- 'brief': 'knowrob_actions'
  'description': "\n\n     knowrob_actions\n\n  "
  'name': 'knowrob_actions'
  'repo': 'knowrob'
- 'brief': 'EPOS Maxon Controller using OpenRAVE and Orocos'
  'description': "\n    Robot controller communicating with EPOS controllers through\
    \ the CAN network using Orocos RTT and OCL. Uses OpenRAVE for kinematics and other\
    \ information.\n  "
  'name': 'maxondrivers'
  'repo': 'cmu-ros-pkg'
- 'brief': 'turtlebot_follower_rfn'
  'description': "\n\n    turtlebot_follower_rfn is an RFNServer which listens for\
    \ requests to follow.  When a request comes in, turtlebot_follower_rfn launches\
    \ the turtlebot follower application.  When a preempt request comes, it shuts\
    \ down the same.\n\n  "
  'name': 'turtlebot_follower_rfn'
  'repo': 'roboframenet'
- 'brief': 'android_tutorial_teleop'
  'description': "\n     android_tutorial_teleop\n  "
  'name': 'android_tutorial_teleop'
  'repo': 'android_core'
- 'brief': 'object_recognition_core'
  'description': "\n     The core modules for object recognition\n  "
  'name': 'object_recognition_core'
  'repo': 'object_recognition'
- 'brief': 'busbot_description'
  'description': "\n\n     busbot_description provides a complete 3D model of the\
    \ BusBot for simulation and visualization. The files in this package are parsed\
    \ and used by a variety of other components. Most users will not interact directly\
    \ with this package.\n  "
  'name': 'busbot_description'
  'repo': 'bosch-ros-pkg'
- 'brief': 'tyros_cam'
  'description': "\n\n     tyros_cam\n\n  "
  'name': 'tyros_camera'
  'repo': 'TYROS'
- 'brief': 'Localization with AR Markers'
  'description': "\n    Localizes a robot against a map being broadcast in TF. \n\
    \  "
  'name': 'locator'
  'repo': 'albany-ros-pkg'
- 'brief': 'ias_robot_defs'
  'description': "\n\n     URDF definitions of the platforms used at TU Muenchen.\n\
    \n  "
  'name': 'ias_robot_defs'
  'repo': 'tum-ros-pkg'
- 'brief': 'teleop_ps3_application'
  'description': "\n\tThis application provides remote control for a PR2 via a Playstation\
    \ 3 controller.\n  "
  'name': 'teleop_ps3_application'
  'repo': 'wg-ros-pkg'
- 'brief': 'Driver for the Sick 3000 Laserscanner'
  'description': "\n\n\tThis driver was developed from Player drivers for the Sick\
    \ 300 for a robotics lab in the \n\tAutonomous Intelligent Systems Department\
    \ at Bonn University.\n\n  "
  'name': 'sicks300'
  'repo': 'ais-bonn-ros-pkg'
- 'brief': 'A general arm planning and control interface'
  'description': "\n\nThe move_arm package provides an implementation of a action\
    \ (see the <a href=\"http://www.ros.org/wiki/actionlib\">actionlib</a> package)\
    \ that, given a goal in the world, will attempt to reach it with a robot arm.\
    \ The move_arm node links together a planner, trajectory monitor and trajectory\
    \ controller to acheive its goal. It supports any planner that provides a GetMotionPlan\
    \ interface and any controller that provides services for setting, querying and\
    \ canceling trajectories. The node is designed to be modular and so uses ROS services\
    \ for planning, control and IK and does minimal computation within the node itself.\
    \ \n\n  "
  'name': 'move_arm'
  'repo': 'arm_navigation'
- 'brief': 'ir_finder'
  'description': "\n\n     ir_finder\n\n  "
  'name': 'ir_finder'
  'repo': 'usc-ros-pkg'
- 'brief': 'kurt_navigation_global'
  'description': "\n\n     kurt_navigation_global\n\n  "
  'name': 'kurt_navigation_global'
  'repo': 'uos-ros-pkg'
- 'brief': 'scene_server'
  'description': "\n\n     Scene server is a data storage node that allows numerous\
    \ visual processing algorithms \n     such as object recognizers and 3D spatial\
    \ reasoning nodes to run on the same set of data.\n     \n     The function of\
    \ scene server is to synchronize incoming sensor information, serve this information\n\
    \     to various processing nodes, and finally to correlate the results of each\
    \ of these nodes in a consistent\n     format to be viewed by the remainder of\
    \ the system.     \n\n  "
  'name': 'scene_server'
  'repo': 'ubc-ros-pkg'
- 'brief': 'omdc'
  'description': "\n    overhead_map display controller\n\n  "
  'name': 'omdc'
  'repo': 'brown-experimental'
- 'brief': 'isolated_point_filter'
  'description': "\n\n     isolated_point_filter\n\n  "
  'name': 'isolated_point_filter'
  'repo': 'wg-ros-pkg'
- 'brief': 'Velodyne HDL-64E 3D LIDAR messages'
  'description': "\n\n     ROS message definitions for Velodyne HDL-64E and HDL-64E\
    \ S2 3D LIDARs.\n\n  "
  'name': 'velodyne_msgs'
  'repo': 'utexas-art-ros-pkg'
- 'brief': 'rectangle_finder'
  'description': "\n\n     rectangle_finder\n\n  "
  'name': 'rectangle_finder'
  'repo': 'seabee3-ros-pkg'
- 'brief': 'PR2 Transmission Simulation Example Demonstrating Spring Link'
  'description': 'PR2 Transmission Simulation Example Demonstrating Spring Link'
  'name': 'pr2_spring_transmission_example'
  'repo': 'wg-ros-pkg'
- 'brief': 'remote_simulator'
  'description': "\n\n     remote_simulator: this package contains the code to launch\
    \ the remote (morse and gazebo) simulator \n\n  "
  'name': 'remote_simulation'
  'repo': 'euRobotics_orocos_ws'
- 'brief': 'libseabee3_beestem'
  'description': "\n\n     libseabee3_beeste\n\n  "
  'name': 'libseabee3_beestem'
  'repo': 'seabee3-ros-pkg'
- 'brief': 'pr2_camera_tele'
  'description': "\n\n     pr2_camera_tele\n\n  "
  'name': 'pr2_camera_tele'
  'repo': 'brown-experimental'
- 'brief': 'Local navigation for the Wubble robot.'
  'description': "\n        This application allows the Wubble to navigate autonomously\
    \ in an odometric frame.\n    "
  'name': 'wubble_2dnav_local'
  'repo': 'ua-ros-pkg'
- 'brief': 'PR2-specific move_base configuration'
  'description': "\n  This package holds common configuration files for running the\
    \ <a href=\"http://www.ros.org/wiki/move_base\">move_base</a> node on the PR2\
    \ robot.\n  "
  'name': 'pr2_navigation_config'
  'repo': 'pr2_navigation'
- 'brief': 'cuda_tests'
  'description': "\n\n     Simple CUDA tests to demonstrate that CUDA works in a ROS\
    \ node\n\n  "
  'name': 'cuda_tests'
  'repo': 'umd-ros-pkg'
- 'brief': 'cob_goco'
  'description': "\n\n     cob_goco\n\n  "
  'name': 'cob_goco'
  'repo': 'cob_common'
- 'brief': 'p2os_driver'
  'description': "\n     P2OS driver for ros\n  "
  'name': 'p2os_driver'
  'repo': 'usc-ros-pkg'
- 'brief': ''
  'description': ''
  'name': 'bmtk'
  'repo': 'bosch-ros-pkg'
- 'brief': 'pr2_teleop_general'
  'description': "\n\n     pr2_teleop_general\n\n  "
  'name': 'pr2_teleop_general'
  'repo': 'pr2_apps'
- 'brief': 'multi_table_demo'
  'description': "\n\n     multi_table_demo\n\n  "
  'name': 'multi_table_demo'
  'repo': 'wg-ros-pkg'
- 'brief': 'marker_tutorials'
  'description': "\n\n     interactive_marker_tutorials\n\n  "
  'name': 'interactive_marker_tutorials'
  'repo': 'ros-pkg'
- 'brief': 'approximate_time_synchronizer'
  'description': "\n\n     approximate_time_synchronizer\n\n  "
  'name': 'approximate_time_synchronizer'
  'repo': 'wg-ros-pkg'
- 'brief': 'cob_experimentation_days'
  'description': "\n\n     cob_experimentation_days\n\n  "
  'name': 'cob_experimentation_days'
  'repo': 'cob_scenarios'
- 'brief': ''
  'description': "\n  A simple viewer for ROS image topics with draw-on features\n\
    \  "
  'name': 'image_view2'
  'repo': 'jsk-ros-pkg'
- 'brief': 'Manipulation demo with OpenRAVE using PA-10 arm'
  'description': "\n  "
  'name': 'pa10demo'
  'repo': 'cmu-ros-pkg'
- 'brief': 'knowrob_common'
  'description': "\n\n     knowrob_common\n\n  "
  'name': 'knowrob_common'
  'repo': 'knowrob'
- 'brief': 'rfid_nav'
  'description': "\n\n     rfid_nav\n\n  "
  'name': 'rfid_nav'
  'repo': 'gt-ros-pkg'
- 'brief': 'Arduino based transceiver for HomeEasy EU equipment'
  'description': "\n     Currently implemented:<br/>\n     <ul>\n     \t<li>Receiver\
    \ for AnBan RF codes (dimming)</li>\n     </ul>\n     The transciever should implement\
    \ a fully functional reciever and \n     transmitter for 433MHz systems. \n  "
  'name': 'homeeasy_transciever'
  'repo': 'vmi-ros-pkg'
- 'brief': 'block_build_manager'
  'description': "\n\n     block_build_manager\n\n  "
  'name': 'block_build_manager'
  'repo': 'brown-experimental'
- 'brief': 'kinect_config'
  'description': "\n\n     kinect_config\n\n  "
  'name': 'kinect_config'
  'repo': 'usc-ros-pkg'
- 'brief': 'A package that holds Willow Garage maps'
  'description': "\n\n     Holds maps of Willow Garage that can be used for a number\
    \ of different applications.\n\n  "
  'name': 'willow_maps'
  'repo': 'wg-ros-pkg'
- 'brief': 'Driver for the Neuronics Katana 450 arm'
  'description': "\n\n    <p>\n    This package provides ROS interfaces to the Neuronics\
    \ Katana 450 arm.\n    It wraps the <a href=\"/wiki/kni\">KNI</a> library for\
    \ low-level communication\n    with the Katana arm.\n    </p>\n\n    <p>\n   \
    \ GPL license due to the KNI library.\n    </p>\n\n  "
  'name': 'katana'
  'repo': 'uos-ros-pkg'
- 'brief': 'hrl_cody_arms'
  'description': "\n\n        Control Meka Arms that HRL has on its robot Cody.\n\n\
    \    "
  'name': 'hrl_cody_arms'
  'repo': 'gt-ros-pkg'
- 'brief': 'OctoMap -  A  probabilistic, flexible, and compact 3D mapping library
    for robotic systems.'
  'description': "\n\n     <p>The <a href=\"http://octomap.sourceforge.net/\">OctoMap\
    \ library</a> implements a 3D occupancy grid mapping approach, \n     providing\
    \ data structures and mapping algorithms. The map implementation is based on an\
    \ octree.</p>\n     <p>This package contains the latest release from the OctoMap\
    \ repository, providing a convenient way to download and compile the library in\
    \ a way that can be managed by the ROS dependency system.</p>\n     <p>More details\
    \ are available at <a href=\"http://octomap.sourceforge.net/\">http://octomap.sourceforge.net/</a>.</p>\n\
    \n  "
  'name': 'octomap'
  'repo': 'alufr-ros-pkg'
- 'brief': 'block_build_msgs'
  'description': "\n\n     block_build_msgs\n\n  "
  'name': 'block_build_msgs'
  'repo': 'brown-experimental'
- 'brief': 'bag_player'
  'description': "\n\n     bag_player\n\n  "
  'name': 'bag_player'
  'repo': 'wg-ros-pkg'
- 'brief': 'guardian_description'
  'description': "\n  This stack contains the urdf, meshes, and other elements \n\
    \  needed in the visual and physical description of the robot.\n  "
  'name': 'guardian_description'
  'repo': 'guardian-ros-pkg'
- 'brief': 'libphidgets'
  'description': "\n\n     This package wraps the libphidgets to use it as a ros dependency\n\
    \n  "
  'name': 'libphidgets'
  'repo': 'cob_extern'
- 'brief': 'geometric_semantics_msgs_conversions'
  'description': "\n\n     <a href=\"http://www.ros.org/wiki/geometric_semantics_msgs_conversions\"\
    >geometric_semantics_msgs_conversions</a> provides support conversions between\
    \ <a href=\"http://www.ros.org/wiki/geometric_semantics_msgs\">geometric_semantics_msgs</a>\
    \ and the C++ <a href=\"http://www.ros.org/wiki/geometric_semantics\">geometric_semantics</a>\
    \ types defined on the <a href=\"http://www.ros.org/wiki/geometric_semantics\"\
    >geometric_semantics</a> package.\n\n  "
  'name': 'geometric_semantics_msgs_conversions'
  'repo': 'geometric_relations_semantics'
- 'brief': 'dance_bags'
  'description': "\n\n     dance_bags\n\n  "
  'name': 'dance_bags'
  'repo': 'wg-ros-pkg'
- 'brief': ''
  'description': 'Robot-Independent Gazebo plugins.'
  'name': 'gazebo_plugins'
  'repo': 'ros-pkg'
- 'brief': 'Visualization Library for the SBPL Arm Planner'
  'description': "\n\n    Visualize Arm \n\n  "
  'name': 'visualize_arm'
  'repo': 'sbpl_arm_planning'
- 'brief': 'sklearn'
  'description': "\n\n     sklearn\n\n  "
  'name': 'sklearn'
  'repo': 'ua-ros-pkg'
- 'brief': 'COLLADA Robot Repository'
  'description': "\n    COLLADA 1.5 Robot Models Repository\n\n    This repository\
    \ is associated with the Open Robotics Automation Virtual Environment (OpenRAVE).\
    \ The open and view them, install OpenRAVE and execute:\n    \n    openrave XXX.zae\n\
    \    \n    The robots are augmented with information as described by the &quot;OpenRAVE&quot;\
    \ profile here:\n    http://openrave.programmingvision.com/index.php/Started:COLLADA\n\
    \    \n    *.zae files are zip archives which contain the raw collada 1.5 xml\
    \ (dae).\n  "
  'name': 'collada_robots'
  'repo': 'jsk-ros-pkg'
- 'brief': 'ml_lib'
  'description': "\n\n     ml_lib\n\n  "
  'name': 'ml_lib'
  'repo': 'gt-ros-pkg'
- 'brief': ''
  'description': "\n    Common definitions for frames in SBA, VSLAM.\n  "
  'name': 'frame_common'
  'repo': 'ros-pkg'
- 'brief': 'rtt_rosnode'
  'description': "\n\n     rtt_rosnode provides an RTT plugin to add a ROS node to\
    \ the RTT process, and the necessary template files and cmake macros for automatic\
    \ rtt typekit and transport generation from ROS msg files\n\n  "
  'name': 'rtt_rosnode'
  'repo': 'rtt_ros_integration'
- 'brief': 'manyears'
  'description': "\n\n     ManyEars library\n\n  "
  'name': 'manyears'
  'repo': 'introlab-ros-pkg'
- 'brief': 'PLS200'
  'description': "\n\n     PLS200\n\n  "
  'name': 'Laser_PLS200'
  'repo': 'JKU_Robotic_Stack'
- 'brief': 'Collision space'
  'description': "\n    This package can be used to build a collision representation\
    \ of the world around the robot. \n  "
  'name': 'collision_space'
  'repo': 'arm_navigation'
- 'brief': 'ic2020_loop'
  'description': "\n\n     ic2020_loop\n\n  "
  'name': 'ic2020_loop'
  'repo': 'ic2020'
- 'brief': 'bilibot_navigation'
  'description': "\n\n     bilibot_navigation\n\n  "
  'name': 'bilibot_navigation'
  'repo': 'bilibot-ros-pkg'
- 'brief': 'gt_pr2'
  'description': "\n\n     gt_pr2\n\n  "
  'name': 'gt_pr2'
  'repo': 'gt-ros-pkg'
- 'brief': 'hrl_tilting_hokuyo'
  'description': "\n    Python code to use a Robotis servo to tilt a Hokuyo to get\
    \ 3D point clouds.\n  "
  'name': 'hrl_tilting_hokuyo'
  'repo': 'gt-ros-pkg'
- 'brief': 'move_action_server'
  'description': "\n\n     move_action_server is an RFNServer which instructs robots\
    \ to move forwards and backwards and pivot left and right.\n\n  "
  'name': 'move_action_server'
  'repo': 'roboframenet'
- 'brief': 'explore_hrl'
  'description': "\n\n     explore_hrl\n\n  "
  'name': 'explore_hrl'
  'repo': 'gt-ros-pkg'
- 'brief': 'pr2_laser_follow_behavior'
  'description': "\n      A example for how the laser pointer interface works the\
    \ PR2.  In this\n      demo behavior, the PR2 tracks the detected point using\
    \ its pan-tilt then\n      navigates towards it when the user double clicks the\
    \ selected point.\n  "
  'name': 'pr2_laser_follow_behavior'
  'repo': 'gt-ros-pkg'
- 'brief': ''
  'description': '


    The Robot Pose EKF package is used to estimate the 3D pose of a robot, based on
    (partial) pose measurements coming from different sources. It uses an extended
    Kalman filter with a 6D model (3D position and 3D orientation) to combine measurements
    from wheel odometry, IMU sensor and visual odometry. The basic idea is to offer
    loosely coupled integration with different sensors, where sensor signals are received
    as ROS messages.


    '
  'name': 'robot_pose_ekf'
  'repo': 'navigation'
- 'brief': 'coordination_server_follower'
  'description': "\n\n     coordination_server_follower\n\n  "
  'name': 'coordination_server_follower'
  'repo': 'brown-experimental'
- 'brief': 'mesh_teleop2'
  'description': "\n\n     mesh_teleop2\n\n  "
  'name': 'mesh_teleop2_client'
  'repo': 'brown-experimental'
- 'brief': 'hector_slam_launch'
  'description': "\n\n     hector_slam_launch contains logfiles for launching hector_slam\
    \ with different robot systems/setups/postprocessing scenarios\n\n  "
  'name': 'hector_slam_launch'
  'repo': 'tu-darmstadt-ros-pkg'
- 'brief': 'Navigation stuff for use with the Neato XV-11'
  'description': "\n    This package contains configuration and launch files for using\
    \ the navigation stack with the Neato XV-11 robot. \n  "
  'name': '2dnav_neato'
  'repo': 'albany-ros-pkg'
- 'brief': 'cob_2dnav'
  'description': "\n\n     This Package provides launch files for running Care-O-bot\
    \ with the ROS navigation stack.\n\n  "
  'name': 'cob_2dnav'
  'repo': 'cob_navigation'
- 'brief': 'neo_2dnav_mp_500'
  'description': "\n\n     neo_2dnav_mp_500\n\n  "
  'name': 'neo_2dnav_mp_500'
  'repo': 'neo_navigation'
- 'brief': ''
  'description': "A node and utilities for webcams supporting the uvcvideo driver\
    \ (e.g. Logitech cameras and many others).\n\n  It is based on the uvc_cam package\
    \ from Morgan Quigley http://www.ros.org/browse/details.php?name=uvc_cam\n  Changed\
    \ major sender parts to fit the whiteboard robot needs from VMI, TU Muenchen.\n\
    \n  Package is GPL since some of its code is adapted from GPL programs such as\
    \ guvcview"
  'name': 'dynamic_uvc_cam'
  'repo': 'vmi-ros-pkg'
- 'brief': 'pymongo'
  'description': "\n\n     3rd party package that pulls the Pymongo python interface\
    \ to MongoDB.\n\n  "
  'name': 'pymongo'
  'repo': 'warehousewg'
- 'brief': 'rtcus_timing'
  'description': "\n\tA cpp library for performance analysis. It makes possible timing\
    \ code sections and publishing them on a topic. \n  "
  'name': 'rtcus_timing'
  'repo': 'rtc-us-ros-pkg-trunk'
- 'brief': 'velodyne_image_generation'
  'description': "\n\n    Converts point cloud data into an image.\n\n  "
  'name': 'velodyne_image'
  'repo': 'utexas-art-ros-pkg'
- 'brief': 'pr2eus_openrave'
  'description': "\n\n     pr2eus_openrave\n\n  "
  'name': 'pr2eus_openrave'
  'repo': 'jsk-ros-pkg'
- 'brief': 'slam_experiments'
  'description': "\n\n     slam_experiments\n\n  "
  'name': 'slam_experiments'
  'repo': 'albany-ros-pkg'
- 'brief': 'safe_teleop_base'
  'description': "\n     This package provides automatic collision avoidance and is\
    \ intended to be used for safer teleoperation of a robot base.\n  "
  'name': 'safe_teleop_base'
  'repo': 'bosch-ros-pkg'
- 'brief': 'ART vehicle imaging tools'
  'description': "\n\n     Visual imaging tools for the Austin Robot Technology autonomous\
    \ vehicle.\n\n  "
  'name': 'art_image'
  'repo': 'utexas-art-ros-pkg'
- 'brief': ''
  'description': 'A graphical interface for the CU nodes.'
  'name': 'cmd_line_control_cu'
  'repo': 'prairiedog'
- 'brief': 'pr2_sbl_launch'
  'description': "\n\n     pr2_sbl_launch\n\n  "
  'name': 'pr2_sbl_launch'
  'repo': 'usc-ros-pkg'
- 'brief': 'Directed Perception ptu46 pan/tilt driver'
  'description': "\n     Driver for the Directed Perception ptu46 pan/tilt driver,\
    \ forked from player\n  "
  'name': 'ptu46'
  'repo': 'wu-ros-pkg'
- 'brief': 'rfid_artoolkit'
  'description': "\n\n     rfid_artoolkit\n\n  "
  'name': 'rfid_artoolkit'
  'repo': 'gt-ros-pkg'
- 'brief': 'ar_manipulation'
  'description': "\n\n     ar_manipulation\n\n  "
  'name': 'ar_manipulation'
  'repo': 'gt-ros-pkg'
- 'brief': 'simple_armstack_goals'
  'description': "\n\n     simple_armstack_goals\n\n  "
  'name': 'simple_armstack_goals'
  'repo': 'wpdros'
- 'brief': 'seabee3_demo'
  'description': "\n\n     seabee3_demo\n\n  "
  'name': 'seabee3_demo'
  'repo': 'seabee3-ros-pkg'
- 'brief': 'cl_bullet_vis'
  'description': "\n\n     cl_bullet_vis\n\n  "
  'name': 'cl_bullet_vis'
  'repo': 'cram_physics'
- 'brief': 'rtt_trajectory_msgs'
  'description': "\n\n    Provides an rtt typekit for ROS trajectory_msgs messages.\n\
    \n    It allows you to use ROS messages transparently in\n    RTT components and\
    \ applications.\n\n    This package was automatically generated by the\n    create_rtt_msgs\
    \ generator and should not be manually\n    modified.\n\n    See the http://ros.org/wiki/trajectory_msgs\
    \ documentation\n    for the documentation of the ROS messages in this\n    typekit.\n\
    \n  "
  'name': 'rtt_trajectory_msgs'
  'repo': 'rtt_common_msgs'
- 'brief': 'reactive_trajectory_controller'
  'description': "\n\n    reactive_trajectory_controller\n\n  "
  'name': 'reactive_trajectory_controller'
  'repo': 'bosch-ros-pkg'
- 'brief': 'A simple package to display text on a phidget LCD'
  'description': "\n\n    This package provides a way to display text to the text\
    \ LCD phidget.  \n\n  "
  'name': 'phidget_text'
  'repo': 'foote-phidget'
- 'brief': 'collision_space_ccd'
  'description': "\n\n     collision_space_ccd\n\n  "
  'name': 'collision_space_ccd'
  'repo': 'arm_navigation_experimental'
- 'brief': 'yarp_to_ros_image'
  'description': "\n     Converts Yarp to ROS image (through openCV image). \n   \
    \  Provides launch files for getting images from:\n     a)cameras on Icub robot\
    \ and\n     b)simulated camera source.\n  "
  'name': 'yarp_to_ros_image'
  'repo': 'tum-ros-pkg'
- 'brief': 'grid_utils'
  'description': "\n\nUtilities for dealing with occupancy grids, represented as nav_msgs::OccupancyGrid\
    \ objects, including coordinate conversions, shortest paths, ray tracing, and\
    \ constructing from laser scans.\n\n  "
  'name': 'occupancy_grid_utils'
  'repo': 'occupancy_grid_utils'
- 'brief': 'Creates executables to start python scripts in windows'
  'description': "\n\n    Windows python scripts aren't recognised as executables,\
    \ so alot of the ros\n    build logic will fail when trying to call python scripts\
    \ because they \n    utilise the bash logic at the top of the script.\n     \n\
    \tThis remedies the problem by creating an executable for each that calls\n\t\
    the relevant python script.\n\n  "
  'name': 'win_py2exe'
  'repo': 'win_ros'
- 'brief': 'Gazebo simulation environments for Wubble World'
  'description': "\n\n     wubble_environments\n\n    "
  'name': 'wubble_environments'
  'repo': 'ua-ros-pkg'
- 'brief': 'seabee3_machines'
  'description': "\n\n     seabee3_machines\n\n  "
  'name': 'seabee3_machines'
  'repo': 'seabee3-ros-pkg'
- 'brief': 'clearpath_base'
  'description': "\n     The base drivers needed to connect with the onboard system\
    \ for all Clearpath Robotics platforms.\n  "
  'name': 'clearpath_base'
  'repo': 'clearpath-ros-pkg'
- 'brief': 'job_generation'
  'description': "\n\n    job_generation\n\n  "
  'name': 'job_generation'
  'repo': 'ros_release'
- 'brief': 'demos and tests for the zeroconf_avahi library'
  'description': "\n\n     Has several demos and launch-tests for the avahi based\
    \ zero-configuration.\n\n  "
  'name': 'zeroconf_avahi_demos'
  'repo': 'zeroconf_implementations'
- 'brief': 'serializer'
  'description': "\n  \n     ROS Package for the Serializer microcontroller made by\
    \ the Robotics Connection\n     \n  "
  'name': 'serializer'
  'repo': 'pi-robot-ros-pkg'
- 'brief': 'NMPT (Nick''s Machine Perception Toolbox)'
  'description': "\n\n        This package contains Nick's Machine Perception Toolbox\
    \ (NMPT)\n\n    "
  'name': 'nmpt'
  'repo': 'ua-ros-pkg'
- 'brief': 'Definitions and launch files for Maxwell Lite'
  'description': "\n    Maxwell Lite is a custom mobile manipulator, this package\
    \ contains his configuration and launch files.\n  "
  'name': 'maxlite_defs'
  'repo': 'vanadium-ros-pkg'
- 'brief': 'ros_vrpn_client'
  'description': "\n     ROS node which is a client for Virtual Reality Peripheral\n\
    \     Networks and publishes a TF frame and TransformStamped for\n     tracked\
    \ bodies.\n\n     Tested with the Optitrak motion capture system from NaturalPoint.\n\
    \  "
  'name': 'ros_vrpn_client'
  'repo': 'gt-ros-pkg'
- 'brief': 'sr_mechanism_controllers'
  'description': "\n\n     The sr_mechanism_controllers package contains different\
    \ types of\n     controllers for the etherCAT hand:(fake) calibration controllers,\n\
    \     position controllers, velocity controllers, force controllers, ...\n\n  "
  'name': 'sr_mechanism_controllers'
  'repo': 'shadow_robot'
- 'brief': 'smart_arm_kinematics'
  'description': "\n         smart_arm_kinematics\n    "
  'name': 'smart_arm_kinematics'
  'repo': 'ua-ros-pkg'
- 'brief': 'fake_servo'
  'description': "\n\n     fake_servo\n\n  "
  'name': 'fake_servo'
  'repo': 'orocos_controllers'
- 'brief': 'p2os_launch'
  'description': "\n\n     This package contains launch and config files designed\
    \ for use with the p2os stack.\n\n  "
  'name': 'p2os_launch'
  'repo': 'usc-ros-pkg'
- 'brief': ''
  'description': "\n    Calonder feature descriptors.\n  "
  'name': 'calonder_descriptor'
  'repo': 'wg-ros-pkg'
- 'brief': 'rosgraph command-line tool'
  'description': "\n\n<p>\nrosgraph contains the rosgraph command-line tool, which\
    \ prints information about the ROS Computation Graph. It also provides an internal\
    \ library that is used by the graphical version of this tool, <tt>rxgraph</tt>.\n\
    </p>\n  "
  'name': 'rosgraph'
  'repo': 'ros_comm'
- 'brief': 'cwru_teleop'
  'description': "\n\n     cwru_teleop\n\n  "
  'name': 'cwru_teleop'
  'repo': 'cwru-ros-pkg'
- 'brief': 'reem_bringup'
  'description': "\n\n     Launch files and scripts needed to bring up the ROS nodes\
    \ of a REEM robot.\n\n  "
  'name': 'reem_bringup'
  'repo': 'reem_robot'
- 'brief': 'Controls status indicator light for Test Manager'
  'description': "\nControls Delcom USB indicator light with the status of Test Manager.\n\
    \  "
  'name': 'wgtest_status_indicator'
  'repo': 'wg-ros-pkg'
- 'brief': 'multirobot_coordination'
  'description': "\n\n     multirobot_coordination\n\n  "
  'name': 'multirobot_coordination'
  'repo': 'brown-experimental'
- 'brief': 'static_transform_broadcaster'
  'description': "\n\n     static_transform_broadcaster\n\n  "
  'name': 'static_transform_broadcaster'
  'repo': 'wg-ros-pkg'
- 'brief': 'tf2_visualization'
  'description': "\n\n     tf2_visualization\n\n  "
  'name': 'tf2_visualization'
  'repo': 'geometry_visualization'
- 'brief': 'ic2020_render'
  'description': "\n\n     ic2020_render\n\n  "
  'name': 'ic2020_render'
  'repo': 'ic2020'
- 'brief': 'utexas-ros-nao-kinect'
  'description': "\n\n     Gets the ground truth for the naos using a kinect sensor\n\
    \n  "
  'name': 'ground_truth'
  'repo': 'utexas-ros-pkg'
- 'brief': 'P2OS Dashboard'
  'description': "\n    \n      p2os_dashboard is a GUI for debugging and controlling\
    \ low-level state of the P2OS.  It shows things like battery status and breaker\
    \ states, as well as integrating tools like rxconsole and robot_monitor.\n   \
    \ \n    "
  'name': 'p2os_dashboard'
  'repo': 'usc-ros-pkg'
- 'brief': 'projector_calibration'
  'description': "\n\n     projector_calibration\n\n  "
  'name': 'projector_calibration'
  'repo': 'stanford-ros-pkg'
- 'brief': 'vicon_bridge'
  'description': "\n\n     This is a driver providing data from VICON motion capture\
    \ systems. It is based on the vicon_mocap package from the starmac stacks. \n\
    \     Additionally, it can handle multiple subjects / segments and allows to calibrate\
    \ an origin of the vehicle(s) as this is somehow tedious with the VICON Tracker.\n\
    \n  "
  'name': 'vicon_bridge'
  'repo': 'ethzasl_drivers'
- 'brief': 'openarms'
  'description': "\n    Concepts, ideas, and experiments on low-cost manipulator design\
    \ and control.\n  "
  'name': 'openarms'
  'repo': 'stanford-ros-pkg'
- 'brief': 'nxt_robot_gryo_car'
  'description': "\n     The nxt_robot_gyro_car package provides a starting nxt robot.\
    \ For instructions on building\n     the nxt robot load the gyro_car.lxf into\
    \ the LEGO Digital Designer \n     <a href=\"http://ldd.lego.com/\">(ldd.lego.com)</a>\
    \ and select the building guide mode. This robot \n     uses the <a href=\"http://mindstorms.lego.com/en-us/Products/Ultrasonic+Sensor/9846.aspx\"\
    > nxt lego ultrasonic sensor</a>,\n     the <a href=\"http://www.hitechnic.com/cgi-bin/commerce.cgi?preadd=action&amp;key=NGY1044\"\
    > hitechnic gryo sensor</a>,\n     and the <a href=\"http://www.hitechnic.com/cgi-bin/commerce.cgi?preadd=action&amp;key=NAC1040\"\
    > hitechnic acclerometer sensor</a>.\n\n  "
  'name': 'nxt_robot_gyro_car'
  'repo': 'foote-nxt'
- 'brief': 'wbc_m3_ctrl'
  'description': "\n    This package is based on the RTAI control code for Dreamer,\
    \ the\n    Meka M3 humanoid torso of the Human-Centered Robotics Group at the\n\
    \    University of Texas at Austin. http://www.me.utexas.edu/~hcrl/\n  "
  'name': 'wbc_m3_ctrl'
  'repo': 'whole_body_control'
- 'brief': 'Plugin for plotting numeric values'
  'description': "\n\n     rosgui_plot provides a rosgui plugin for visualizing numeric\
    \ values in a 2D plot using PyQwt5.\n\n  "
  'name': 'rosgui_plot'
  'repo': 'ros_gui'
- 'brief': 'Position Scripts for the PR2'
  'description': "\n    This package contains a number of scripts to set various components\
    \ of the PR2. They are used in the apps to improve usablity.\n  "
  'name': 'pr2_position_scripts'
  'repo': 'pr2_apps'
- 'brief': 'detect_pose'
  'description': "\n\n     detect_pose\n\n  "
  'name': 'detect_pose'
  'repo': 'usc-ros-pkg'
- 'brief': ''
  'description': 'A library for accessing SwissRanger cameras though the use of libusbSR'
  'name': 'composite_swissranger'
  'repo': 'tum-ros-pkg'
- 'brief': 'desire_description'
  'description': "\n\n  This package contains the description (mechanical, kinematic,\
    \ visual,\n  etc.) of the Desire robot. The files in this package are parsed and\
    \ used by\n  a variety of other components. Most users will not interact directly\n\
    \  with this package.\n\n  "
  'name': 'desire_description'
  'repo': 'cob_common'
- 'brief': 'face_reinterpret'
  'description': "\n\n     face_reinterpret\n\n  "
  'name': 'face_reinterpret'
  'repo': 'gt-ros-pkg'
- 'brief': 'mprdf'
  'description': "\n\n     Motion Planning Robot Descripotion Format (MPRDF)\n   \
    \  Attempt to consolidate all things motion planning specific.\n\n  "
  'name': 'mprdf'
  'repo': 'wg-ros-pkg'
- 'brief': 'Plugin for calling arbitrary services'
  'description': "\n\n     rosgui_publisher provides a rosgui plugin for calling arbitrary\
    \ services.\n\n  "
  'name': 'rosgui_service_caller'
  'repo': 'ros_gui'
- 'brief': 'serial_reader'
  'description': "\n\n     serial_reader\n\n  "
  'name': 'serial_reader'
  'repo': 'ccny_experimental'
- 'brief': ''
  'description': 'Launch scripts for working with our simulated robot platforms.'
  'name': 'ias_gazebo'
  'repo': 'tum-ros-pkg'
- 'brief': 'Ruby toolkit'
  'description': "\n    This library is a collection of useful Ruby classes\n  "
  'name': 'utilrb'
  'repo': 'orocos_toolchain'
- 'brief': 'rosjava'
  'description': "\n    An implementation of ROS in pure-Java with Android support.\n\
    \  "
  'name': 'rosjava'
  'repo': 'rosjava_core'
- 'brief': 'driver for KURT robots'
  'description': "\n\n     This package contains a driver for KURT mobile robot bases\
    \ and for their laser rotation units.\n\n  "
  'name': 'kurt_base'
  'repo': 'uos-ros-pkg'
- 'brief': 'cob_srvs'
  'description': "\n\n     This Package contains Care-O-bot specific service definitions.\n\
    \n  "
  'name': 'cob_srvs'
  'repo': 'cob_common'
- 'brief': 'pr2_gripper_sensor_action'
  'description': "\n\n  The pr2_gripper_sensor_action package provides an action interface\
    \ for talking to the pr2_gripper_sensor_controller real-time controller.\n\n \
    \ It provides several different actions for getting high-level sensor information\
    \ from the PR2 palm-mounted accelerometers, fingertip pressure arrays, and gripper\
    \ motor/encoder, as well as several sensor-based gripper control actions that\
    \ respond with low-latency in real-time.\n\n  "
  'name': 'pr2_gripper_sensor_action'
  'repo': 'wg-ros-pkg'
- 'brief': 'veltrobot_msgs'
  'description': "\n\n     Common messages used throughout the Veltrobot system.\n\
    \n  "
  'name': 'veltrobot_msgs'
  'repo': 'veltrop-ros-pkg'
- 'brief': 'grasping_classifier'
  'description': "\n    Classifier for grasping points using image and point cloud\
    \ features.\n  "
  'name': 'grasping_classifier'
  'repo': 'wg-ros-pkg'
- 'brief': 'pi_pcl'
  'description': "\n\n     pi_pcl\n\n  "
  'name': 'pi_pcl'
  'repo': 'pi-robot-ros-pkg'
- 'brief': 'cob_webportal'
  'description': "\n\n     This package contain special launch files used by the web\
    \ interface \n\n  "
  'name': 'cob_webportal'
  'repo': 'cob_web'
- 'brief': ''
  'description': "\n    Detects planar structures (e.g., walls) from stereo cameras\
    \ point clouds (usually generated using a texture projector).\n  "
  'name': 'stereo_wall_detection'
  'repo': 'pr2_plugs'
- 'brief': 'Benchmark GPU vs CPU stereo implementations'
  'description': "\n    stereo_test loads bag files of stereo data into memory, and\
    \ then processes them with both a normal stereo_image_proc::Processor and a GPU\
    \ version in stereo_image_proc_gpu.\n  "
  'name': 'stereo_benchmark_gpu'
  'repo': 'wg-ros-pkg'
- 'brief': 'SnapMapICP'
  'description': "\n\n     SnapMapICP\n\n  "
  'name': 'SnapMapICP'
  'repo': 'tum-ros-pkg'
- 'brief': 'semantic_map_collision_environment'
  'description': "\n\n     semantic_map_collision_environment\n\n  "
  'name': 'semantic_map_collision_environment'
  'repo': 'cram_highlevel'
- 'brief': 'gui'
  'description': "\n\n     The PANDORA GUI package\n\n  "
  'name': 'gui'
  'repo': 'pandora-auth-ros-pkg'
- 'brief': 'Driver package for the Nao humanoid robot.'
  'description': "\n    <p>\n     Driver package for the Nao robot, providing access\
    \ to walking commands, \n     joint angles, and sensor data (odometry, IMU, ...).\n\
    \     The most-current version is\n     compatible with the Nao API version 1.6\
    \ or newer, connecting to a real or simulated Nao\n     by wrapping Aldebaran\
    \ Robotics' NaoQI API in Python. This requires \n     the &quot;lib&quot; directory\
    \ of the Aldebaran SDK to be in your PYTHONPATH\n     environment variable.\n\
    \   </p>\n  "
  'name': 'nao_driver'
  'repo': 'alufr-ros-pkg'
- 'brief': 'karto_scan_matcher'
  'description': "\n\nA C++ library that wraps Karto's laser scan matcher\n\n  "
  'name': 'karto_scan_matcher'
  'repo': 'ros-pkg'
- 'brief': 'presenter'
  'description': "\n    ROS slide presentation program.\n  "
  'name': 'presenter'
  'repo': 'presenter'
- 'brief': 'nodelet_tutorial_math'
  'description': "\n\n     nodelet_tutorial_math\n\n  "
  'name': 'nodelet_tutorial_math'
  'repo': 'ros-pkg'
- 'brief': 'C++ containers for maps in robotic navigation'
  'description': "\n\n\tThese establish some c++ style containers for maps\n\tused\
    \ in robotic navigation.\n\t\n  "
  'name': 'ecl_maps'
  'repo': 'ecl_navigation'
- 'brief': 'pointcloud_transport'
  'description': "\n\n     pointcloud_transport\n\n  "
  'name': 'pointcloud_transport'
  'repo': 'ethzasl_message_transport'
- 'brief': 'clearpath_bringup'
  'description': "\n    The clearpath_bringup package provides a simple warn node.\n\
    \  "
  'name': 'clearpath_bringup'
  'repo': 'clearpath-ros-pkg'
- 'brief': 'Aggregation nodes for a laser rangefinder'
  'description': "\n    Provides nodes to assemble point clouds from either LaserScan\
    \ or PointCloud messages\n  "
  'name': 'laser_assembler'
  'repo': 'ros-pkg'
- 'brief': 'simple_trajectory'
  'description': "\n\n     simple_trajectory\n\n  "
  'name': 'simple_trajectory'
  'repo': 'brown-experimental'
- 'brief': 'Tests roscpp templated serialization and message generation'
  'description': "\n    Set of tests to test templated serialization, message generation,\
    \ and using messages with custom allocators\n\n  "
  'name': 'test_roscpp_serialization'
  'repo': 'ros_comm'
- 'brief': 'Message/Service definitions for the ArbotiX'
  'description': "\n    Messages and Services definitions for the ArbotiX.\n  "
  'name': 'arbotix_msgs'
  'repo': 'vanadium-ros-pkg'
- 'brief': ' Messages and services for humanoid robot navigation'
  'description': "\n\n     Messages and services for humanoid robot navigation\n\n\
    \  "
  'name': 'humanoid_nav_msgs'
  'repo': 'alufr-ros-pkg'
- 'brief': 'pr2_calibration_launch'
  'description': "\n\n     pr2_calibration_launch\n\n  "
  'name': 'pr2_calibration_launch_old'
  'repo': 'wg-ros-pkg'
- 'brief': 'haptic_fb_controller_plane'
  'description': "\n\n     haptic_fb_controller_plane\n\n  "
  'name': 'haptic_fb_controller_plane'
  'repo': 'wg-ros-pkg'
- 'brief': 'Elementary math constants and functions'
  'description': "\n\n    This package provides simple support to cmath, filling in\
    \ holes\n    or redefining in a c++ formulation where desirable.\n\n  "
  'name': 'ecl_math'
  'repo': 'ecl_core'
- 'brief': ''
  'description': "\n    People Detection Library \n  "
  'name': 'people_detector_2d_laser'
  'repo': 'tum-ros-pkg'
- 'brief': 'TIChronos'
  'description': "\n\n     TIChronos\n\n  "
  'name': 'TI-BluetoothLE'
  'repo': 'TYROS'
- 'brief': 'JRL humanoid robot pattern generator'
  'description': "\n\n    FIXME\n\n  "
  'name': 'jrl-walkgen'
  'repo': 'jrl-ros-pkg'
- 'brief': 'make/cmake utilities to assist 3rd party builds'
  'description': "\n\n     This includes both makefiles and cmake macro libraries\
    \ to assist in the build\n     of 3rd party packages for use with a toolchain.\n\
    \n  "
  'name': 'eros_build'
  'repo': 'eros'
- 'brief': 'geometric_semantics_kdl'
  'description': "\n\n    This package provides support for <a href=\"http://www.ros.org/wiki/orocos_kdl\"\
    >orocos_kdl</a> types on top of the <a href=\"http://www.ros.org/wiki/geometric_semantics\"\
    >geometric_semantics</a> package (for instance KDL::Frame to represent the relative\
    \ pose of two rigid bodies).\n\n  "
  'name': 'geometric_semantics_kdl'
  'repo': 'geometric_relations_semantics'
- 'brief': 'pr2_omni_teleop'
  'description': "\n    Integrated package that allows PR2 teleoperation with force\
    \ feedback using two Phantom Omni devices\n    and the stereo_anaglyph viewer.\
    \ \n  "
  'name': 'pr2_omni_teleop'
  'repo': 'gt-ros-pkg'
- 'brief': 'eurobot_obstacles'
  'description': "\n\n     eurobot_obstacles\n\n  "
  'name': 'eurobot_obstacles'
  'repo': 'smart-robotics-ros-pkg'
- 'brief': 'starmac_roshlib'
  'description': "\n\n     starmac_roshlib is intended to house any generic rosh-related\
    \ code bits used by rosh\n     scripts.\n\n  "
  'name': 'starmac_roshlib'
  'repo': 'starmac-ros-pkg'
- 'brief': 'pr2_base'
  'description': "\nA collection of nodes that multiple apps depend on at runtime.\
    \  Eventually, many of these nodes will migrate into pr2_bringup/pr2.launch\n\
    \  "
  'name': 'pr2_base_application'
  'repo': 'wg-ros-pkg'
- 'brief': 'pr2_gripper_reactive_approach'
  'description': "\n\n     Executes a grasp with the PR2 gripper, starting from the\n\
    \     pre-grasp stage and using the tactile sensors to correct for\n     unexpected\
    \ contacts encountered along the way.\n\n  "
  'name': 'pr2_gripper_reactive_approach'
  'repo': 'wg-ros-pkg'
- 'brief': 'robotino_grappler_node'
  'description': "\n  \n  "
  'name': 'robotino_grappler_node'
  'repo': 'robotino-ros-pkg'
- 'brief': 'dd-wrt wifi ap'
  'description': "\n     Access to the DD-WRT wifi\n  "
  'name': 'wifi_ddwrt'
  'repo': 'wg-ros-pkg'
- 'brief': 'pointing_markers'
  'description': "\n\n     pointing_markers\n\n  "
  'name': 'pointing_markers'
  'repo': 'irvs-ros-pkg'
- 'brief': 'wm_imu_arm_tracker'
  'description': "\n\n     wm_imu_arm_tracker\n\n  "
  'name': 'wm_imu_arm_tracker'
  'repo': 'penn_lightweight_teleop'
- 'brief': 'ias_kitchen_defs'
  'description': "\n\n    URDF definitions of the kitchen lab used at IAS@TUM.\n\n\
    \  "
  'name': 'ias_kitchen_defs'
  'repo': 'tum-ros-pkg'
- 'brief': 'Simple implementation of roscpp'
  'description': "\n    roscpplight is a simple implementation of a part of the ROS\
    \ communication layer, allowing a component to publish and subscribe to ROS messages.\n\
    \    The purpose is to provide a library for interfacing simple nodes e.g. sensors,\
    \ actuators or other robot control systems to ROS with a minimum set of dependencies\
    \ and threading model constraints.\n    The current version is a test of the concept\
    \ and thus not meant for serious use.\n    It uses boost asio for network communication\
    \ to improve portability.\n    XmlRpc++ has been used for convenience, but a different\
    \ xmlrpc implementation would improve the threading constraints.\n  "
  'name': 'roscpplight'
  'repo': 'eros'
- 'brief': 'lse_xsens_mti'
  'description': "\n\n     Xsens MTi node. The existing xsens_mti node is distributed\
    \ in the form of a library and requires the MTi to be set to a determined configuration\
    \ to work. We had some old code laying around so we just ported it to ROS. This\
    \ sends the MTi to configuration mode at start and sets it to the propper mode\
    \ of operation.\n\n  "
  'name': 'lse_xsens_mti'
  'repo': 'lse_imu_drivers'
- 'brief': 'rosqwerk'
  'description': "\n     ROS node to control Qwerk board (servos, motors, etc.) from\
    \ Charmed Labs (http://www.charmedlabs.com)\n  "
  'name': 'rosqwerk'
  'repo': 'colbot-ros-pkg'
- 'brief': 'Tele-operation messages.'
  'description': "\n\n    This package provides tele-operation message types.\n\n\
    \  "
  'name': 'teleop_msgs'
  'repo': 'generic_teleop'
- 'brief': 'Library for polled camera drivers'
  'description': "\n\n     polled_camera contains a service and C++ helper classes\
    \ for implementing a polled\n     camera driver node and requesting images from\
    \ it. The package is currently for\n     internal use as the API is still under\
    \ development.\n\n  "
  'name': 'polled_camera'
  'repo': 'ros-pkg'
- 'brief': 'ros_check'
  'description': "\n\n    Macros for checking condititions in C++ and printing a nice\
    \ stack\n    trace in case of failure.\n\n  "
  'name': 'ros_check'
  'repo': 'parsec'
- 'brief': 'room_explore'
  'description': "\n\n     room_explore\n\n  "
  'name': 'room_explore'
  'repo': 'gt-ros-pkg'
- 'brief': 'geometric_semantics_tf_msgs_conversions'
  'description': "\n\n     <a href=\"http://www.ros.org/wiki/geometric_semantics_tf_msgs_conversions\"\
    >geometric_semantics_tf_msgs_conversions</a> provides support conversions between\
    \ <a href=\"http://www.ros.org/wiki/geometric_semantics_tf_msgs\">geometric_semantics_tf_msgs</a>\
    \ and the C++ <a href=\"http://www.ros.org/wiki/geometric_semantics_tf\">geometric_semantics_tf</a>\
    \ types defined on the <a href=\"http://www.ros.org/wiki/geometric_semantics_tf\"\
    >geometric_semantics_tf</a> package.\n\n  "
  'name': 'geometric_semantics_tf_msgs_conversions'
  'repo': 'geometric_relations_semantics'
- 'brief': 'SimRobot'
  'description': "\n\n     SimRobot\n\n  "
  'name': 'SimRobot'
  'repo': 'darpa_arm_sim_servers'
- 'brief': 'c++ extensions for threaded programming'
  'description': "\n\n     This package provides the c++ extensions for a variety\
    \ of threaded programming tools. These\n     are usually different on different\
    \ platforms, so the architecture for a cross-platform framework\n     is also\
    \ implemented.\n\n  "
  'name': 'ecl_threads'
  'repo': 'ecl_core'
- 'brief': 'topological_roadmap'
  'description': "\nDefines a topological roadmap, which overlays a graph of waypoints\
    \ over a topological graph as defined in the topological_map_2d package.\n  "
  'name': 'topological_roadmap'
  'repo': 'wg-ros-pkg'
- 'brief': 'katana_openrave_test'
  'description': "\n\n     katana_openrave_test\n\n  "
  'name': 'katana_openrave_test'
  'repo': 'uos-ros-pkg'
- 'brief': 'turtlebot_sounds'
  'description': "\n\n     Play a single fixed sound file when chirp.launch is launched,\
    \ at full volume.\n\n  "
  'name': 'turtlebot_sounds'
  'repo': 'turtlebot_apps'
- 'brief': 'policy_improvement_loop'
  'description': "\n\n     policy_improvement_loop\n\n  "
  'name': 'policy_improvement_loop'
  'repo': 'wg-ros-pkg'
- 'brief': 'ROS Python client library'
  'description': "\n\n<p>\n    rospy is a pure Python client library for ROS. The\
    \ rospy client\n    API enables Python programmers to quickly interface with\n\
    \    ROS <a href=\"http://ros.org/wiki/Topics\">Topics</a>, <a href=\"http://ros.org/wiki/Services\"\
    >Services</a>,\n    and <a href=\"http://ros.org/wiki/Parameter Server\">Parameters</a>.\
    \ The\n    design of rospy favors implementation speed (i.e. developer time)\n\
    \    over runtime performance so that algorithms can be quickly\n    prototyped\
    \ and tested within ROS. It is also ideal for\n    non-critical-path code, such\
    \ as configuration and initialization\n    code. Many of the ROS tools are written\
    \ in rospy to take advantage\n    of the type introspection capabilities.\n</p>\n\
    <p>\n    Many of the ROS tools, such\n    as <a href=\"http://ros.org/wiki/rostopic\"\
    >rostopic</a>\n    and <a href=\"http://ros.org/wiki/rosservice\">rosservice</a>,\
    \ are\n    built on top of rospy.\n</p>\n\n  "
  'name': 'rospy'
  'repo': 'ros_comm'
- 'brief': 'NaoJoyControl'
  'description': "\n\n     NaoJoyControl - a ROS node to control Aldebaran Nao using\
    \ a joystick or \n     a joystick-like controller (e.g. XBOX controller)\n   \
    \  \n     Please see README for details and documentation\n\n  "
  'name': 'NaoJoyControl'
  'repo': 'brown-experimental'
- 'brief': 'Shows the features of ROS step-by-step'
  'description': "\n    This package attempts to show the features of ROS step-by-step,\n\
    \    including using messages, servers, parameters, etc.\n  "
  'name': 'roscpp_tutorials'
  'repo': 'ros_tutorials'
- 'brief': 'face_detector_mono'
  'description': "\n    Detects faces in 2D images using Haar-like features and cascade\
    \ classifier.\n    Based on facedetect.cpp from openCV.\n  "
  'name': 'face_detector_mono'
  'repo': 'tum-ros-pkg'
- 'brief': 'kitting'
  'description': "\n\n     kitting\n\n  "
  'name': 'kitting'
  'repo': 'wg-ros-pkg'
- 'brief': 'Walk tools'
  'description': "\n\n     Gathers tools providing useful computations when dealing\
    \ with\n     walking trajectory generation.\n\n  "
  'name': 'walk_tools'
  'repo': 'stacks/humanoid_walk'
- 'brief': 'hector_xacro_tools provides common xacro macros useful for a wide variety
    of urdf models, like macros for commonly needed inertia tensors.'
  'description': "\n\n     hector_xacro_tools\n\n  "
  'name': 'hector_xacro_tools'
  'repo': 'tu-darmstadt-ros-pkg'
- 'brief': 'pygeoip'
  'description': 'pygeoip'
  'name': 'pygeoip'
  'repo': 'wg-ros-pkg'
- 'brief': 'pr2_arm_kinematics_constraint_aware'
  'description': "\n    pr2_arm_kinematics_constraint_aware\n  "
  'name': 'pr2_arm_kinematics_constraint_aware'
  'repo': 'wg-ros-pkg'
- 'brief': 'opende'
  'description': "\n\n    <p>\n    This package contains the <a href=\"http://opende.sf.net\"\
    >Open Dynamics Engine</a> (ODE).  \n    This package compiles a wg branch of ODE\
    \ which is intended to be based on\n    a pre-1.0 unreleased version of ODE from\
    \ trunk with some additional custom patches such as\n    threaded island computations,\
    \ addes a few more parameter settings API for quickstep,\n    untruncated hinge\
    \ joint angles and possible additional minor bug fixes.\n    </p>\n    <p>\n \
    \   The opende package pulls in and builds the <a href=\"http://threadpool.sourceforge.net\"\
    >Threadpool Library</a> by Philipp Henkel for internal use.\n    Threadpool uses\
    \ the Boost Software License.\n    </p>\n\n  "
  'name': 'opende'
  'repo': 'ros-pkg'
- 'brief': 'A service for plotting data with matplotlib'
  'description': "\n\n    Creates static plots that can be saved to a file or displayed.\
    \ Basically a static version of rxplot.    \n\n    "
  'name': 'plotter'
  'repo': 'ua-ros-pkg'
- 'brief': 'visp_hand2eye_calib'
  'description': "\n\n     visp_hand2eye_calib\n\n  "
  'name': 'visp_hand2eye_calibration'
  'repo': 'stacks/vision_visp'
- 'brief': 'publish_line_map'
  'description': "\n\n     publish_line_map\n\n  "
  'name': 'publish_line_map'
  'repo': 'lejos-ros-pkg'
- 'brief': 'zeroconf'
  'description': 'Zero Configuration tools for ROS'
  'name': 'zeroconf'
  'repo': 'iheart-ros-pkg'
- 'brief': 'rosmsg and rossrv command-line tools'
  'description': "\n\n     rosmsg contains two command-line tools: <tt>rosmsg</tt>\
    \ and <tt>rossrv</tt>. <tt>rosmsg</tt> is a command-line tool for displaying information\
    \ about <a href=\"http://www.ros.org/wiki/msg\">ROS Message types</a>. <tt>rossrv</tt>\
    \ is a command-line tool for displaying information about <a href=\"http://www.ros.org/wiki/srv\"\
    >ROS Service types</a>. \n\n  "
  'name': 'rosmsg'
  'repo': 'ros_comm'
- 'brief': 'Generalized Graph Optimizer (G2O)'
  'description': "\n\n    A general system for graph optimization.\n\n  "
  'name': 'g2o'
  'repo': 'ros-pkg'
- 'brief': 'nmea_gps_driver'
  'description': "\n\tPackage to parse NMEA strings and publish standard ROS GPS messages.\
    \ This package does not require the GPSD deamon.\n  "
  'name': 'nmea_gps_driver'
  'repo': 'nmea_gps_driver'
- 'brief': 'log_msgs'
  'description': "\n\n     log_msgs\n\n  "
  'name': 'log_msgs'
  'repo': 'usc-ros-pkg'
- 'brief': 'rcommander'
  'description': "\n     rcommander\n  "
  'name': 'rcommander'
  'repo': 'rcommander'
- 'brief': 'demo_synchronizer'
  'description': "\n\n     demo_synchronizer\n\n  "
  'name': 'demo_synchronizer'
  'repo': 'wg-ros-pkg'
- 'brief': 'audio_capture'
  'description': "\n    Transports audio from a source to a destination. Audio sources\
    \ can come\n    from a microphone or file. The destination can play the audio\
    \ or save it\n    to an mp3 file.\n\n  "
  'name': 'audio_capture'
  'repo': 'audio_common'
- 'brief': 'CMU''s ipc library'
  'description': "\n     CMU IPC provides flexible, efficient message passing between\
    \ processes.\n  "
  'name': 'ipc'
  'repo': 'wu-ros-pkg'
- 'brief': 'pr2_navigation_process_module'
  'description': "\n\n     pr2_navigation_process_module\n\n  "
  'name': 'pr2_navigation_process_module'
  'repo': 'cram_pr2'
- 'brief': 'schunk_default_config'
  'description': "\n\n     schunk_default_config\n\n  "
  'name': 'schunk_default_config'
  'repo': 'schunk_robots'
- 'brief': 'Static multi map server'
  'description': "\n\n    multi_map_server provides the <tt>map_server</tt> ROS <a\
    \ href=\"http://www.ros.org/wiki/Nodes\">Node</a>, which offers map data as a\
    \ ROS <a href=\"http://www.ros.org/wiki/Services\">Service</a>. It also provides\
    \ the <tt>map_saver</tt> command-line utility, which allows dynamically generated\
    \ maps to be saved to file.\n\n  "
  'name': 'multi_map_server'
  'repo': 'jsk-ros-pkg'
- 'brief': 'summit_controller'
  'description': "\n\n     summit_controller\n\n  "
  'name': 'summit_controller'
  'repo': 'summit-ros-pkg'
- 'brief': 'artoolkitplus'
  'description': "\n     Latest version of ARToolKitPlus from https://launchpad.net/artoolkitplus\n\
    \  "
  'name': 'artoolkitplus'
  'repo': 'vmi-ros-pkg'
- 'brief': 'Python Clearsilver'
  'description': '

    A bunch of libraries to interface clearsilver with python and many databases.

    '
  'name': 'pyclearsilver'
  'repo': 'wg-ros-pkg'
- 'brief': 'oro_conatroller_manager'
  'description': "\n\n     oro_conatroller_manager\n\n  "
  'name': 'oro_controllers_manager'
  'repo': 'orocos_controllers'
- 'brief': 'rovio'
  'description': "\n    Rovio drivers. Allow for moving the bot and camera and gathering\
    \ localization, odometry, and Obstacle detection Data.\n\n  "
  'name': 'rovio'
  'repo': 'cornell-ros-pkg'
- 'brief': 'Holds the action description and relevant messages for the move_base package'
  'description': "\n\n     Holds the action description and relevant messages for\
    \ the move_base package\n\n  "
  'name': 'move_base_msgs'
  'repo': 'navigation'
- 'brief': 'Code for some URDF Tutorials'
  'description': "\n    Support code for the step by step URDF tutorials on ROS.org\n\
    \  "
  'name': 'R1_urdf'
  'repo': 'JKU_Robotic_Stack'
- 'brief': 'canon_vbc50i'
  'description': "\n\n     canon_vbc50i\n\n  "
  'name': 'canon_vbc50i'
  'repo': 'ethzasl_drivers'
- 'brief': 'slam_exporter'
  'description': "\n\n     slam_exporter\n\n  "
  'name': 'slam_exporter'
  'repo': 'uos-ros-pkg'
- 'brief': 'guiabot_action'
  'description': "\n\n\tguiabot_action provides docking capability for the guiabot\
    \ onto mobile robots triangular dock\n\n  "
  'name': 'guiabot_action'
  'repo': 'cyphy'
- 'brief': 'projector'
  'description': "\n\n     projector\n\n  "
  'name': 'projector'
  'repo': 'stanford-ros-pkg'
- 'brief': 'android_honeycomb_mr2'
  'description': "\n\n    android_honeycomb_mr2\n\n  "
  'name': 'android_honeycomb_mr2'
  'repo': 'android_core'
- 'brief': 'rl_experiment'
  'description': "\n\n     A package to run RL experiments using the rl_agent and\
    \ rl_env packages, by directly calling agents and environments without using the\
    \ rl_msgs interface. Developed by <a href=\"http://www.cs.utexas.edu/~todd/\"\
    >Todd Hester</a> and <a href=\"http://www.cs.utexas.edu/~pstone/\">Peter Stone</a>\
    \ at the University of Texas at Austin.\n\n  "
  'name': 'rl_experiment'
  'repo': 'rl-texplore-ros-pkg'
- 'brief': 'generic routing tools'
  'description': "\n    Tools for directing, throttling, selecting, and otherwise\
    \ messing with \n    ROS topics at a meta level. None of the programs in this\
    \ package actually\n    know about the topics whose streams they are altering;\
    \ instead, these \n    tools deal with messages as generic binary blobs. This\
    \ means they can be\n    applied to any ROS topic.\n  "
  'name': 'topic_tools'
  'repo': 'ros_comm'
- 'brief': 'rosserial_adk_demo_msgs'
  'description': "\n\n     rosserial_adk_demo_msgs\n\n  "
  'name': 'rosserial_adk_demo_msgs'
  'repo': 'rosserial_android'
- 'brief': 'Velodyne ring compression obstacle detection'
  'description': "\n\n    Identify obstacles in Velodyne HDL-64E 3D LIDAR data using\
    \ a ring\n    compression algorithm.\n\n  "
  'name': 'velodyne_ringcomp'
  'repo': 'utexas-art-ros-pkg'
- 'brief': 'dmp_motion_controller_test'
  'description': "\n\n     dmp_motion_controller_test\n\n  "
  'name': 'dmp_motion_controller_test'
  'repo': 'wg-ros-pkg'
- 'brief': 'auction_srvs'
  'description': "\n\n     auction_srvs\n\n  "
  'name': 'auction_srvs'
  'repo': 'auction_methods_stack'
- 'brief': 'rl_msgs'
  'description': "\n    Provides the set of ROS messages to be passed between reinforcement\
    \ learning (RL) agent nodes and environment nodes. Developed by <a href=\"http://www.cs.utexas.edu/~mquinlan/\"\
    >Michael Quinlan</a>, <a href=\"http://www.cs.utexas.edu/~todd/\">Todd Hester</a>,\
    \ and <a href=\"http://www.cs.utexas.edu/~pstone/\">Peter Stone</a> at the University\
    \ of Texas at Austin.\n  "
  'name': 'rl_msgs'
  'repo': 'rl-texplore-ros-pkg'
- 'brief': ''
  'description': 'Test 2dnav stack in 3d sim.'
  'name': 'test_pr2_2dnav_gazebo'
  'repo': 'wg-ros-pkg'
- 'brief': 'starmac_gui'
  'description': "\n\n    starmac_gui\n\n  "
  'name': 'starmac_gui'
  'repo': 'starmac-ros-pkg'
- 'brief': 'EposGateway'
  'description': "\n\tA ROS EPOS Gateway\n  "
  'name': 'EposGateway'
  'repo': 'pandora-auth-ros-pkg'
- 'brief': 'basic_utils'
  'description': "\n\n     basic_utils - A collection of general-purpose functions.\n\
    \n  "
  'name': 'basic_utils'
  'repo': 'wu-ros-pkg'
- 'brief': 'sr_unplug_connector'
  'description': "\n\n     Unplugs different kinds of connector with the Shadow Hand\
    \ attached to\n     a Denso Arm.\n\n  "
  'name': 'sr_unplug_connector'
  'repo': 'shadow_robot'
- 'brief': 'libxsens'
  'description': "\n\n     libxsens\n\n  "
  'name': 'libxsens'
  'repo': 'seabee3-ros-pkg'
- 'brief': 'designators_ros'
  'description': "\n\n     designators_ros\n\n  "
  'name': 'designators_ros'
  'repo': 'cram_highlevel'
- 'brief': 'pr2_camera_self_filter'
  'description': "\n\n     pr2_camera_self_filter\n\n  "
  'name': 'pr2_camera_self_filter'
  'repo': 'bosch-ros-pkg'
- 'brief': 'Inverse dynamics model for the PR2'
  'description': "\n\n      This package provides tools to create a nonparametric\
    \ inverse dynamics model for the PR2 using Gaussion Process Regression. Interfaces\
    \ to the KDL and Stanford WBC Newton-Euler ID models are included as are tools\
    \ for motion generation.\n\n  "
  'name': 'inverse_dynamics'
  'repo': 'wg-ros-pkg'
- 'brief': 'pr2_addons'
  'description': "\nA collection of nodes that multiple apps depend on at runtime.\
    \  Eventually, many of these nodes will migrate into pr2_bringup/pr2.launch\n\
    \  "
  'name': 'ias_pr2_addons_application'
  'repo': 'tum-ros-pkg'
- 'brief': 'libcvd'
  'description': "\n\n     This package wraps the libcvd to use it as a ros dependency\n\
    \n  "
  'name': 'libcvd'
  'repo': 'cob_object_perception'
- 'brief': 'LMS1xx'
  'description': "\n\n     Driver for SICK LMS1xx.\n\n  "
  'name': 'LMS1xx'
  'repo': 'RCPRG_laser_drivers'
- 'brief': 'app suite for the ecl_core'
  'description': "\n\n     This includes a suite of programs demo'ing various aspects\
    \ of the\n     ecl_core. It also includes various benchmarking and utility programs\
    \ for\n     use primarily with embedded systems.\n\n  "
  'name': 'ecl_core_apps'
  'repo': 'ecl_core'
- 'brief': 'vocabulary_tree'
  'description': "\n\n    A generic implementation of the vocabulary tree image retrieval\
    \ approach of\n    Nister and Stewenius. Can be used with any feature and distance\
    \ metric.\n\n  "
  'name': 'vocabulary_tree'
  'repo': 'ros-pkg'
- 'brief': 'openinvent'
  'description': "\n\n     openinvent\n\n  "
  'name': 'openinvent'
  'repo': 'rtm-ros-robotics/rtmros_common'
- 'brief': 'nxt_lejos_ros_msgs'
  'description': "\n\n     nxt_lejos_ros_msgs\n\n  "
  'name': 'nxt_lejos_ros_msgs'
  'repo': 'lejos-ros-pkg'
- 'brief': 'navigation'
  'description': "\n    Navigation Application\n  "
  'name': 'navigation_application'
  'repo': 'wg-ros-pkg'
- 'brief': 'hector_quadrotor_gazebo'
  'description': "\n\n     hector_quadrotor_gazebo provides a quadrotor model usable\
    \ in gazebo simulation. It can be commanded using geometry_msgs/Twist messages.\n\
    \n  "
  'name': 'hector_quadrotor_gazebo'
  'repo': 'tu-darmstadt-ros-pkg'
- 'brief': 'lwr_markers'
  'description': "\n\n     lwr_markers\n\n  "
  'name': 'lwr_markers'
  'repo': 'lwr_gui'
- 'brief': 'roslisp_testing'
  'description': "\n    Contains common utilities for writing unit and integration\
    \ tests.\n  "
  'name': 'roslisp_testing'
  'repo': 'roslisp_support'
- 'brief': 'policy_improvement'
  'description': "\n\n     policy_improvement\n\n  "
  'name': 'policy_improvement'
  'repo': 'wg-ros-pkg'
- 'brief': 'image_stream'
  'description': "\n\n     rosweb plugin to serve images as streams (MJPEG, Theora,\
    \ FLV, etc)\n\n  "
  'name': 'image_stream'
  'repo': 'wg-ros-pkg'
- 'brief': ''
  'description': "\n    Pose estimation from images and point clouds\n  "
  'name': 'posest'
  'repo': 'ros-pkg'
- 'brief': 'pr2_doors_executive'
  'description': "\n\n     pr2_doors_executive\n\n  "
  'name': 'pr2_doors_executive'
  'repo': 'pr2_doors'
- 'brief': 'flysim_tf'
  'description': "\n\n     flysim_tf demonstrates how to write a tf broadcaster and\
    \ listener with the flysim. The tutle_tf_listener commands robot to follow fly\
    \ around as you drive fly using the keyboard.\n\n  "
  'name': 'flysim_tf'
  'repo': 'flyatar'
- 'brief': 'collision_checking'
  'description': "\n    The collision_checking library is a full-fledged collision\
    \ checking library that also provides advanced capabilities including proximity\
    \ distance and continuous collision detection (CCD). \n  "
  'name': 'collision_checking'
  'repo': 'arm_navigation_experimental'
- 'brief': 'seabee3_launch'
  'description': "\n\n     seabee3_launch\n\n  "
  'name': 'seabee3_launch'
  'repo': 'seabee3-ros-pkg'
- 'brief': 'color_table'
  'description': "\n\n     Simple utility to construct a color lookup table from a\
    \ ROS bag file.\n\n  "
  'name': 'color_table'
  'repo': 'utexas-ros-pkg'
- 'brief': 'SLAM-based navigation for the Wubble robot.'
  'description': "\n        This application allows the Wubble to navigate autonomously\
    \ while also building a map of its environment as it drives along.\n    "
  'name': 'wubble_2dnav_slam'
  'repo': 'ua-ros-pkg'
- 'brief': 'PR2 Recharge Application'
  'description': "\nA web application to make a PR2 plug itself into a standard wall\
    \ outlet.\n  "
  'name': 'pr2_recharge_application'
  'repo': 'wg-ros-pkg'
- 'brief': 'screenrun'
  'description': "\n      screenrun is a small tool that pushes commands into a screen\
    \ window.\n      Use \\015 after a command for ENTER, i.e. executing it.\n  "
  'name': 'screenrun'
  'repo': 'alufr-ros-pkg'
- 'brief': 'cob_powercube_chain'
  'description': "\n\n  This packages provides a configurable driver of a chain \n\
    \  of Schunk powercubes. The powercube chain is configured \n  through parameters.\
    \ Most users will not directly interact \n  with this package but with the corresponding\
    \ launch files \n  in other packages, e.g. cob_tray, cob_torso, ... \n\n  "
  'name': 'schunk_powercube_chain'
  'repo': 'schunk_modular_robotics'
- 'brief': 'freenect'
  'description': "\n    Downloads, patches and compiles a libfreenect fork (originally\
    \ written by Hector Martin).\n  "
  'name': 'freenect'
  'repo': 'cyphy'
- 'brief': 'quickdev_examples'
  'description': "\n\n     A group of examples using tools from quickdev_cpp\n\n  "
  'name': 'quickdev_examples'
  'repo': 'usc-ros-pkg'
- 'brief': 'kt2_pr2_defs'
  'description': "\n  "
  'name': 'kt2_pr2_defs'
  'repo': 'wg-ros-pkg'
- 'brief': 'fall_school_executive'
  'description': "\n\n     fall_school_executive\n\n  "
  'name': 'fall_school_executive'
  'repo': 'tum-ros-pkg'
- 'brief': 'reem_description'
  'description': "\n    This package contains the description (mechanical, kinematic,\
    \ visual, etc.) of the REEM robot.\n  "
  'name': 'reem_description'
  'repo': 'reem_common'
- 'brief': 'pr2_props'
  'description': "\n\n     pr2_props is a package designed to be the first step towards\
    \ replacing your real (or imaginary) friends with a robot. Robot gives you mad\
    \ props yo.\n\n  "
  'name': 'pr2_props'
  'repo': 'pr2_props_stack'
- 'brief': 'Smach'
  'description': "\n    SMACH, which stands for 'state machine', is a task-level\n\
    \    architecture for rapidly creating complex robot behavior. At its\n    core,\
    \ SMACH is a ROS-independent Python library to build\n    hierarchical state machines.\
    \  SMACH is a new library that takes\n    advantage of very old concepts in order\
    \ to quickly create robust\n    robot behavior with maintainable and modular code.\n\
    \  "
  'name': 'asmach'
  'repo': 'ros-pkg'
- 'brief': 'Plugin for displaying images'
  'description': "\n\n     rosgui_image_view provides a rosgui plugin for displaying\
    \ images using image_transport.\n\n  "
  'name': 'rosgui_image_view'
  'repo': 'ros_gui'
- 'brief': 'Virtual Driver Bridge'
  'description': "\n\n     Virtual Office Driver\n\n     Driversystem to pull information\
    \ out of the ros system\n     and feed em into the gazebo model\n\n  "
  'name': 'vo_interface'
  'repo': 'vmi-ros-pkg'
- 'brief': 'stereo_object_recognition'
  'description': "\n\n     stereo_object_recognition\n\n  "
  'name': 'stereo_object_recognition'
  'repo': 'wg-ros-pkg'
- 'brief': 'irobot_create_cu'
  'description': "\n\n     This builds on the Brown irobot create package\n\n  "
  'name': 'irobot_create_cu'
  'repo': 'prairiedog'
- 'brief': 'odometry_to_tf'
  'description': "\n\n     odometry_to_tf translates a nav_msgs/Odometry or geometry_msgs/PoseStamped\
    \ message to tf.\n     The transform is divided into three subtransforms with\
    \ intermediate frames for the footprint and the stabilized base frame (without\
    \ roll and pitch).\n\n  "
  'name': 'odometry_to_tf'
  'repo': 'tu-darmstadt-ros-pkg'
- 'brief': 'Robot Self Filtering'
  'description': "\n    Utilities for filtering the robot out of sensor data\n  "
  'name': 'openrave_robot_filter'
  'repo': 'jsk-ros-pkg'
- 'brief': 'PR2 Tuck Arms'
  'description': "\n\n     Tucks the arms of the PR2 robot into a safe position for\
    \ moving the base of the robot.\n     This also moves the arms out of the view\
    \ of the tilting laser scanner, as much as possible.\n\n  "
  'name': 'pr2_tuckarm'
  'repo': 'pr2_apps'
- 'brief': 'move_slow_and_clear'
  'description': "\n\n     move_slow_and_clear\n\n  "
  'name': 'move_slow_and_clear'
  'repo': 'navigation'
- 'brief': 'urdf_python'
  'description': "\n\n     urdf_python\n\n  "
  'name': 'urdf_python'
  'repo': 'wu-ros-pkg'
- 'brief': 'wviz_tf_manager'
  'description': 'A node that buffers tf messages and publishes only changes.'
  'name': 'wviz_tf_manager'
  'repo': 'bosch-ros-pkg'
- 'brief': 'starmac_kinect'
  'description': "\n\n    State estimation and obstacle detection using 3D sensor\
    \ output.\n\n  "
  'name': 'starmac_kinect'
  'repo': 'starmac-ros-pkg'
- 'brief': 'collada_parser'
  'description': "\n    This package contains a C++ parser for the Collada robot\n\
    \    description format. The parser reads a Collada XML robot\n    description,\
    \ and creates a C++ URDF model. Although it is possible\n    to directly use this\
    \ parser when working with Collada robot\n    descriptions, the preferred user\
    \ API is found in the urdf package.\n  "
  'name': 'collada_parser'
  'repo': 'robot_model'
- 'brief': 'pi_speech_tutorial'
  'description': "\n\n     ROS Tutorial for using pocketsphinx and TTS\n\n  "
  'name': 'pi_speech_tutorial'
  'repo': 'pi-robot-ros-pkg'
- 'brief': 'ping'
  'description': 'A node to measure roundtrip delays.'
  'name': 'ping'
  'repo': 'bosch-ros-pkg'
- 'brief': 'polar_scan_matcher'
  'description': "\n\n    A wrapper around Polar Scan Matcher by Albert Diosi and\
    \ Lindsay Kleeman, used for laser scan registration.\n\n  "
  'name': 'polar_scan_matcher'
  'repo': 'scan_tools'
- 'brief': 'wifi_comm'
  'description': "\n\n     Multi robot communication library and discovery node. Needs\
    \ foreign_relay and olsrd to work.\n\n  "
  'name': 'wifi_comm'
  'repo': 'lse_communication'
- 'brief': 'uvc_stereo'
  'description': "\n\n    Deprecated. Please use stereo_node or StereoNodelet in\n\
    \    package uvc_camera.\n\n  "
  'name': 'uvc_stereo'
  'repo': 'umd-ros-pkg'
- 'brief': 'powerbot'
  'description': "\n      Package containing launch files for starting the hardware\
    \ nodes on the PowerBot robot.\n  "
  'name': 'powerbot'
  'repo': 'ubc-ros-pkg'
- 'brief': 'pose_estimation'
  'description': "\n\n     PoseEstimation\n\n  "
  'name': 'pose_estimation'
  'repo': 'ccny_experimental'
- 'brief': 'vcglib'
  'description': "\n\n     vcglib\n\n  "
  'name': 'vcglib'
  'repo': 'bosch-ros-pkg'
- 'brief': 'sr_dremmeling_wall'
  'description': "\n\n    This is a package used to dremmel a colored part of a white\
    \ wall, using the denso arm\n    with a dremmel attached to it. This is a demo\
    \ only.\n\n  "
  'name': 'sr_dremmeling_wall'
  'repo': 'shadow_robot'
- 'brief': 'Orocos rtt_ros_param Component package'
  'description': "\n        This package contains the components of the rtt_ros_param\
    \ package\n    "
  'name': 'rtt_ros_param'
  'repo': 'orocos_toolchain_ros'
- 'brief': 'head_traj_general'
  'description': "\n\n     head_traj_general\n\n  "
  'name': 'head_traj_general'
  'repo': 'usc-ros-pkg'
- 'brief': 'katana_object_manipulator'
  'description': "\n\n     katana_object_manipulator\n\n  "
  'name': 'katana_object_manipulator'
  'repo': 'uos-ros-pkg'
- 'brief': 'feeling_controller'
  'description': "\n\n     feeling_controller\n\n  "
  'name': 'feeling_controller'
  'repo': 'wg-ros-pkg'
- 'brief': 'imu_monitor'
  'description': "\n\nThis package contains a single node that monitors the drift\
    \ of the IMU\ngyroscopes. The results are published to the '/diagnostics' topic\
    \ and\nare aggregated in the PR2 dashboard. \n\n  "
  'name': 'imu_monitor'
  'repo': 'pr2_robot'
- 'brief': 'hrl_phri_2011'
  'description': "\n\n    pHRI 2011 paper work.\n\n  "
  'name': 'hrl_phri_2011'
  'repo': 'gt-ros-pkg'
- 'brief': 'vr920'
  'description': "\n\n     wrapper package for vusix vr920 drivers\n\n  "
  'name': 'vr920'
  'repo': 'veltrop-ros-pkg'
- 'brief': 'GMapping'
  'description': '


    This package contains GMapping, from OpenSlam, and a ROS wrapper. The gmapping
    package provides laser-based SLAM (Simultaneous Localization and Mapping), as
    a ROS node called slam_gmapping. Using slam_gmapping, you can create a 2-D occupancy
    grid map (like a building floorplan) from laser and pose data collected by a mobile
    robot.


    This package uses r39 from GMapping SVN repsitory at openslam.org, with

    minor patches applied to support newer versions of GCC and OSX.


    '
  'name': 'gmapping'
  'repo': 'ros-pkg'
- 'brief': 'dmp_motion_gui'
  'description': "\n\n     dmp_motion_gui\n\n  "
  'name': 'dmp_motion_gui'
  'repo': 'wg-ros-pkg'
- 'brief': 'proximity_sensor_dashboard'
  'description': "\n\n     proximity_sensor_dashboard\n\n  "
  'name': 'proximity_sensor_dashboard'
  'repo': 'bosch-ros-pkg'
- 'brief': 'dmp_motion_generation'
  'description': "\n\n    This package contains an implementation of the Dynamic Movement\n\
    \    Primitive (DMP) framework, originally developped by Auke Ijspeert\n    and\
    \ Stefan Schaal, and modified by Heiko Hoffmann and Peter Pastor.\n\n  "
  'name': 'dmp_motion_generation'
  'repo': 'wg-ros-pkg'
- 'brief': 'Uses EtherCAT Master Library for various tools'
  'description': "\n    <b>ectools</b> uses the EtherCAT Master Library to make various\
    \ tools for the testing of PR2 electrical components.\n  "
  'name': 'ectools'
  'repo': 'wg-ros-pkg'
- 'brief': 'starmac_templates'
  'description': "\n\n     Templates/examples for various things, e.g. a C++ nodelet.\n\
    \n  "
  'name': 'starmac_templates'
  'repo': 'starmac-ros-pkg'
- 'brief': 'resources to enable hudson build farm execution for ros on windows'
  'description': "\n\n  This stack is now being used to execute a hudson build farm\
    \ job to test/build ros on \n  a windows platform. This package provides resources\
    \ relevant to that.\n\n  "
  'name': 'win_hudson'
  'repo': 'win_ros'
- 'brief': 'recovery'
  'description': "\n   This recovery package contains extenstions for the SMACH recovery\
    \ library to enable oracle based recovery and shared autonomy interaction. State\
    \ machines built on the existing smach architecture are vunerable to system failures.\
    \ This smach recovery wrapper asserts a recovery behaviour on smach recovery state\
    \ machines.\n\n  "
  'name': 'recovery'
  'repo': 'bosch-ros-pkg'
- 'brief': 'euslisp'
  'description': "\n\n     euslisp and irteus\n\n  "
  'name': 'euslisp'
  'repo': 'jsk-ros-pkg'
- 'brief': 'vrmagic_multi_driver'
  'description': "\n    A node to provide access to VRmagic multi-sensor cameras.\
    \ This driver is not feature complete and was only tested with a stereo configuration.\n\
    \  "
  'name': 'vrmagic_multi_driver'
  'repo': 'tu-darmstadt-ros-pkg'
- 'brief': 'dpm_detector'
  'description': "\n    Deformable Part Models object detector. This package contains\
    \ a slightly patched version that runs in Octave and a ROS wrapper that allows\
    \ it to run in the rein.\n  "
  'name': 'dpm_detector'
  'repo': 'wg-ros-pkg'
- 'brief': 'Scripts and tools for the app manager'
  'description': "\n    Scripts and tools for running the application manager on the\
    \ PR2.\n  "
  'name': 'pr2_app_manager'
  'repo': 'pr2_apps'
- 'brief': 'A Lua client library for ROS'
  'description': "\n    This package is a Lua client library for ROS. It allows connecting\
    \ to a\n    rosmaster instance and to develop ROS packages in Lua.\n  "
  'name': 'roslua'
  'repo': 'roslua'
- 'brief': 'app_manager_tutorial'
  'description': "\n\n     app_manager_tutorial\n\n  "
  'name': 'app_manager_tutorial'
  'repo': 'multimaster_experimental'
- 'brief': 'reaper'
  'description': "\n\n     Reaper provides a nodes that periodically unregisters dead\
    \ nodes from the ROS master.\n\n  "
  'name': 'reaper'
  'repo': 'ros_experimental'
- 'brief': 'Messages for geometric primatives'
  'description': "\n\n    geometry_msgs provides messages for common geometric primatives\n\
    \    such as points, vectors, and poses. These primatives are designed\n    to\
    \ provide a common data type and facilitate interoperability\n    throughout the\
    \ system.\n\n  "
  'name': 'geometry_msgs'
  'repo': 'ros-pkg'
- 'brief': 'articulation_perception'
  'description': "\nThis package provides a detector for cabinet fronts from dense\
    \ depth images (as produced by Microsoft's Kinect sensor or the PR2's projected\
    \ texture stereo system). The basic approach is to segment each image into planes\
    \ and to search for the rectangle with the maximum support. \n  "
  'name': 'articulation_perception'
  'repo': 'alufr-ros-pkg'
- 'brief': 'zbar'
  'description': "\n    ZBar is an open source software suite for reading bar codes\
    \ from various sources, such as video streams, image files and raw intensity sensors.\
    \ It supports many popular symbologies (types of bar codes) including EAN-13/UPC-A,\
    \ UPC-E, EAN-8, Code 128, Code 39, Interleaved 2 of 5 and QR Code.\n  "
  'name': 'zbar'
  'repo': 'tum-ros-pkg'
- 'brief': 'indomptable_vision'
  'description': "\n\n     indomptable_vision\n\n  "
  'name': 'indomptable_vision'
  'repo': 'smart-robotics-ros-pkg'
- 'brief': 'astromech_msgs'
  'description': "\n\n     astromech_msgs: Common messages for the astromech-ros stack\n\
    \n  "
  'name': 'astromech_msgs'
  'repo': 'astromech-ros'
- 'brief': 'visual_annotation'
  'description': "\n\n     visual_annotation\n\n  "
  'name': 'ubc_vrs_annotation_tools'
  'repo': 'ubc-ros-pkg'
- 'brief': 'hector_pose_estimation_rtt'
  'description': "\n\n     A RTT TaskContext that runs hector_pose_estimation_core.\n\
    \n  "
  'name': 'hector_pose_estimation_rtt'
  'repo': 'tu-darmstadt-ros-pkg'
- 'brief': 'android_tutorial_pubsub'
  'description': "\n\n     android_tutorial_pubsub\n\n  "
  'name': 'android_tutorial_pubsub'
  'repo': 'android_core'
- 'brief': 'rospackwtf'
  'description': "\n\n     rospackwtf\n\n  "
  'name': 'rospackwtf'
  'repo': 'ros_experimental'
- 'brief': 'ardrone_brown'
  'description': "\n\n     A driver for the Parrot AR Drone developed by Brown University.\
    \  It includes furll ROS support for both motion control and video.\n\n  "
  'name': 'ardrone_brown'
  'repo': 'brown-experimental'
- 'brief': 'RPC Interface Code Generation'
  'description': "\n\n     Generates easy to use proxy classes and base classes which\
    \ wrap rve_rpc method calls.\n\n  "
  'name': 'rve_interface_gen'
  'repo': 'visualization_engine'
- 'brief': 'cob_default_env_config'
  'description': "\n\n     cob_default_env_config\n\n  "
  'name': 'cob_default_env_config'
  'repo': 'cob_environments'
- 'brief': 'imagem_transport'
  'description': "\n\n     imagem_transport (the m is here to avoid the confusion\
    \ with the\n\t image_transport package)\n\n  "
  'name': 'imagem_transport'
  'repo': 'ethzasl_message_transport'
- 'brief': 'rosjs_pr2interaction'
  'description': "\n\n     rosjs_pr2interaction\n\n  "
  'name': 'rosjs_pr2interaction'
  'repo': 'bosch-ros-pkg'
- 'brief': 'rotate_recovery'
  'description': "\n\n     This package provides a recovery behavior for the navigation\
    \ stack that attempts to clear space by performing a 360 degree rotation of the\
    \ robot.\n\n  "
  'name': 'rotate_recovery'
  'repo': 'navigation'
- 'brief': 'oit_models'
  'description': "\n\n     oit_models\n\n  "
  'name': 'oit_models'
  'repo': 'usc-ros-pkg'
- 'brief': 'Support library for the Roboard.'
  'description': '

    This library allows hardware access to the Roboard.

    '
  'name': 'roboard_roboio'
  'repo': 'veltrop-ros-pkg'
- 'brief': 'hrl_rfid'
  'description': "\n    UHF RFID (Ultra-High Frequency Radio Frequency Identification)\n\
    \    reader based on ThingMagic Mercury5e (M5e) and Mercury5e-Compact\n    (M5e-C)\
    \ modules.  ThingMagic's highly-capable Gen2 UHF RFID\n    modules interact with\
    \ low-cost &quot;smart labels&quot; (tags) at distances\n    up to 6 meters depending\
    \ on choice of antennas (distances over 100\n    meters possible using highly-directive\
    \ antennas!) even without\n    line-of-sight visibility, as RF penetrates most\
    \ non-conducting\n    materials.  The reader can simultaneously query for hundreds\
    \ of\n    tags in the environment at once or query for presence / absence of\n\
    \    a individual tag among a sea of others.  A stand-alone Python\n    library\
    \ is provided as well as ROS wrappers.\n  "
  'name': 'hrl_rfid'
  'repo': 'gt-ros-pkg'
- 'brief': 'Katana Tele-Operation Package'
  'description': "\n\n    <p>\n    This package provides tele-operation nodes to control\
    \ the Neuronics Katana 450 arm via keyboard commands or with a playstation 3 controller.\n\
    \    </p>\n\n    <p>\n    GPL license\n    </p>\n\n  "
  'name': 'katana_teleop'
  'repo': 'uos-ros-pkg'
- 'brief': 'compressed_rounded_image_transport'
  'description': "\n  compressed_rounded_image_transport:\n  An image_transport plugin\
    \ for float images.\n  "
  'name': 'uc3m-socialrobots'
  'repo': 'uc3m-socialrobots'
- 'brief': 'NAOcontrol'
  'description': "\n     NAOcontrol provides message types to be used by NAO control\
    \ nodes. \n  "
  'name': 'NAOcontrol'
  'repo': 'brown-experimental'
- 'brief': 'Joystick teleop demo of the Wubble robot'
  'description': "\n        wubble_teleop\n    "
  'name': 'wubble_teleop'
  'repo': 'ua-ros-pkg'
- 'brief': 'rtt_stereo_msgs'
  'description': "\n\n    Provides an rtt typekit for ROS stereo_msgs messages.\n\n\
    \    It allows you to use ROS messages transparently in\n    RTT components and\
    \ applications.\n\n    This package was automatically generated by the\n    create_rtt_msgs\
    \ generator and should not be manually\n    modified.\n\n    See the http://ros.org/wiki/stereo_msgs\
    \ documentation\n    for the documentation of the ROS messages in this\n    typekit.\n\
    \n  "
  'name': 'rtt_stereo_msgs'
  'repo': 'rtt_common_msgs'
- 'brief': ''
  'description': 'Start a PR2 arm in 3D simulation environment.'
  'name': 'pr2_arm_gazebo'
  'repo': 'wg-ros-pkg'
- 'brief': 'arduino'
  'description': "\n\n     arduino\n\n  "
  'name': 'arduino'
  'repo': 'wg-ros-pkg'
- 'brief': 'Definitions for the PR-MINI platform'
  'description': "\n    Definitions for the PR-MINI platform.\n  "
  'name': 'prmini_defs'
  'repo': 'vanadium-ros-pkg'
- 'brief': ''
  'description': "\n    toro\n  "
  'name': 'toro'
  'repo': 'wg-ros-pkg'
- 'brief': 'plays an audio stream captured by audio_capture'
  'description': "\n\nA minimal node which plays an audio stream captured by the audio_capture\
    \ node.\n\n  "
  'name': 'ua_audio_play'
  'repo': 'ua-ros-pkg'
- 'brief': 'pr2_image_snapshot_recorder'
  'description': "\n\n     pr2_image_snapshot_recorder\n\n  "
  'name': 'pr2_image_snapshot_recorder'
  'repo': 'pr2_plugs'
- 'brief': 'pi_face_tracker'
  'description': "\n\n  A ROS node for face tracking or tracking an arbitrarily\n\
    \  selected patch in a video stream.\n\n  "
  'name': 'pi_face_tracker'
  'repo': 'pi-robot-ros-pkg'
- 'brief': 'Collection of ROS GUI tools and libraries'
  'description': "\n    \n<p>\nrxtools is two things.  First it is a library of GUI\
    \ widgets, written in wxWidgets, that can be embedded in other applications. Second,\
    \ it is a set of GUI applications that view and manage ROS state. These GUI applications\
    \ include <tt>rxconsole</tt> and <tt>rxplot</tt>.\n</p>\n    \n<p>\nPieces of\
    \ rxtools use some icons from the <a href=\"http://www.famfamfam.com/lab/icons/silk/\"\
    >Silk icon pack from famfamfam</a>. These icons have a separate Creative Commons\
    \ Attribution 2.5 License. The source code for the software in this package is\
    \ BSD.\n</p>\n\n    "
  'name': 'rxtools'
  'repo': 'rx'
- 'brief': 'srh_mtrace'
  'description': "\n\n     srh_mtrace\n\n  "
  'name': 'srh_mtrace'
  'repo': 'wg-ros-pkg'
- 'brief': 'pr2_transmission_check'
  'description': "\n\n     pr2_transmission_check\n\n  "
  'name': 'pr2_transmission_check'
  'repo': 'wg-ros-pkg'
- 'brief': 'wpa_supplicant for multi_interface_roam'
  'description': "\n     A version of wpa_supplicant that has been modified to work\
    \ with\n     multi_interface_roam.\n  "
  'name': 'wpa_supplicant'
  'repo': 'ros-pkg'
- 'brief': 'bosch_kitchen_defs'
  'description': "\n\n     bosch_kitchen_defs\n\n  "
  'name': 'bosch_kitchen_defs'
  'repo': 'bosch-ros-pkg'
- 'brief': 'Virtual Office Meshes'
  'description': "\n\n     The Virtual Office from the Cognitive Environment. Contains\
    \ the modelfiles and meshes\n     for the environment.\n\n  "
  'name': 'vo_virtualoffice'
  'repo': 'vmi-ros-pkg'
- 'brief': 'ROSH demo scripts'
  'description': "\n\n  "
  'name': 'rosh_demo'
  'repo': 'wg-ros-pkg'
- 'brief': 'A generic package for computing Arm Kinematics'
  'description': "\n    A generic package for computing both forward and backward\
    \ kinematics for arms.\n    Developed as an alternative to pr2_arm_kinematics\
    \ for people not using the PR2. \n  "
  'name': 'arm_kinematics'
  'repo': 'wu-ros-pkg'
- 'brief': 'tactile_sensor_model'
  'description': "\n\n     tactile_sensor_model\n\n  "
  'name': 'tactile_sensor_model'
  'repo': 'wg-ros-pkg'
- 'brief': 'intercom_cu'
  'description': "\n\n     provides inter-robot communication.\n\n  "
  'name': 'intercom_cu'
  'repo': 'prairiedog'
- 'brief': ''
  'description': 'A demo of  2-D navigation.'
  'name': '2dnav_stage'
  'repo': 'wg-ros-pkg'
- 'brief': ''
  'description': 'Package for basic physics tests'
  'name': 'gazebo_benchmarks'
  'repo': 'wg-ros-pkg'
- 'brief': 'pfilter'
  'description': "\n\n    A general particle filter implementation written in Python.\
    \  Modeled off Probabilistic Robotics.\n\n  "
  'name': 'pfilter'
  'repo': 'gt-ros-pkg'
- 'brief': 'state_machine_actions'
  'description': "\n\n     state_machine_actions\n\n  "
  'name': 'state_machine_actions'
  'repo': 'wg-ros-pkg'
- 'brief': 'ROS Sensor Teleop'
  'description': "\n  \t This package contains Android App and robot side .app file.\n\
    \         You must use App Chooser for using this Android App.\n  "
  'name': 'otl_android_roomba_app'
  'repo': 'otl-ros-pkg'
- 'brief': 'ubc_vrs_utilities'
  'description': "\n\n    ubc_vrs_utilities - Support functions that have been used\
    \ to create the dataset and helper functions to access the data and geometry.\n\
    \n  "
  'name': 'ubc_vrs_utilities'
  'repo': 'ubc-ros-pkg'
- 'brief': 'Streaming of OptiTrack mocap data to tf'
  'description': "\n    <p>\n    This package contains a node that translates motion\
    \ capture data from an OptiTrack rig to tf transforms.\n    The node receives\
    \ the binary packages that are streamed by the Arena software,\n    decodes them\
    \ and broadcasts the poses of rigid bodies as tf transforms.\n    </p>\n    <p>\n\
    \    Currently, this node supports the NatNet streaming protocol v1.4.\n    </p>\n\
    \    <p>\n    Copyright (c) 2010, University of Bonn, Computer Science Institute\
    \ VI<br/>\n    All rights reserved.\n    </p>\n  "
  'name': 'mocap_optitrack'
  'repo': 'ais-bonn-ros-pkg'
- 'brief': '2dnav_otl_roomba'
  'description': "\n\n     2dnav_otl_roomba\n\n  "
  'name': '2dnav_otl_roomba'
  'repo': 'otl-ros-pkg'
- 'brief': 'step_navigator'
  'description': "\n\n     step_navigator\n\n  "
  'name': 'step_navigator'
  'repo': 'brown-experimental'
- 'brief': 'pacman_controller'
  'description': "\n\n     pacman_controller\n\n  "
  'name': 'pacman_controller'
  'repo': 'multi_robot_collision_avoidance'
- 'brief': 'geometric_semantics_tf_msgs'
  'description': "\n\n     <a href=\"http://www.ros.org/wiki/geometric_semantics_tf_msgs\"\
    >geometric_semantics_tf_msgs</a> provides ROS messages matching the C++ types\
    \ defined on the <a href=\"http://www.ros.org/wiki/geometric_semantics_tf\">geometric_semantics_tf</a>\
    \ package, in order to support semantic support for <a href=\"http://www.ros.org/wiki/tf\"\
    >tf</a>types during message based communication.\n\n  "
  'name': 'geometric_semantics_tf_msgs'
  'repo': 'geometric_relations_semantics'
- 'brief': 'kurt_navigation_config'
  'description': "\n\n     kurt_navigation_config\n\n  "
  'name': 'kurt_navigation_config'
  'repo': 'uos-ros-pkg'
- 'brief': 'Allows a metered copying of Kinect output to an alternate topic.'
  'description': ''
  'name': 'camera_turnpike'
  'repo': 'albany-ros-pkg'
- 'brief': 'Fan Controller (IR Interface)'
  'description': "\n     Fan Controller and IR Interface\n  "
  'name': 'ce_fan'
  'repo': 'vmi-ros-pkg'
- 'brief': 'cob_script_server'
  'description': "\n\n     The cob_script_server package provides a simple interface\
    \ to operate Care-O-bot. It can be used via the python API or the actionlib interface.\n\
    \n  "
  'name': 'cob_script_server'
  'repo': 'cob_command_tools'
- 'brief': 'wpd_arm_nav'
  'description': "\n\n     wpd_arm_nav\n\n  "
  'name': 'wpd_arm_nav'
  'repo': 'wpdros'
- 'brief': 'rtcus_kinect_reactive_navigation'
  'description': "\n\n     rtcus_kinect_reactive_navigation\n\n  "
  'name': 'rtcus_kinect_reactive_navigation'
  'repo': 'rtc-us-ros-pkg-branches'
- 'brief': 'Node to rotate an image stream.'
  'description': "\n    <p>\n      Contains a node that rotates an image stream in\
    \ a way that minimizes\n      the angle between a vector in some arbitrary frame\
    \ and a vector in the\n      camera frame. The frame of the outgoing image is\
    \ published by the node.\n    </p>\n    <p>\n      This node is intended to allow\
    \ camera images to be visualized in an\n      orientation that is more intuitive\
    \ than the hardware-constrained\n      orientation of the physical camera. This\
    \ is particularly helpful, for\n      example, to show images from the PR2's forearm\
    \ cameras with a\n      consistent up direction, despite the fact that the forearms\
    \ need to\n      rotate in arbitrary ways during manipulation.\n    </p>\n   \
    \ <p>\n      It is not recommended to use the output from this node for further\n\
    \      computation, as it interpolates the source image, introduces black\n  \
    \    borders, and does not output a camera_info.\n    </p>\n  "
  'name': 'image_rotate'
  'repo': 'ros-pkg'
- 'brief': 'visual_pose_estimation'
  'description': "\n\n     visual_pose_estimation\n\n  "
  'name': 'visual_pose_estimation'
  'repo': 'pr2_plugs'
- 'brief': 'sr_friction_compensation'
  'description': "\n\n     sr_friction_compensation computes the friction compensation\
    \ map by slowly moving a joint\n     through its range and measuring the necessary\
    \ force.\n\n  "
  'name': 'sr_friction_compensation'
  'repo': 'shadow_robot'
- 'brief': 'potential_fields'
  'description': "\n\n     potential_fields\n\n  "
  'name': 'potential_fields'
  'repo': 'uuisrc-ros-pkg'
- 'brief': 'cwru_wsn_steering'
  'description': "\n\n     cwru_wsn_steering\n\n  "
  'name': 'cwru_wsn_steering'
  'repo': 'cwru-ros-pkg'
- 'brief': 'Message types for zeroconf publication and discovery'
  'description': "\n\n     Since we have different zeroconf implementations, the zeroconf\
    \ message types are\n     gathered here.\n\n  "
  'name': 'zeroconf_comms'
  'repo': 'zeroconf_implementations'
- 'brief': 'wam_msgs'
  'description': "\n\n     wam_msgs: Messages for the WAMros node.  These are compiled\n\
    \     separately to allow for using the messages on a system where the\n     main\
    \ node may not itself compile.  I.e, one without Xenomai or\n     btclient.\n\n\
    \   msgs: JointAngles, a variable length float64 array\n         WamStatus, an\
    \ enumed int\n   srvs: ActivePassive, a variable length binary array\n       \
    \  MoveToPos, a JointAngle\n\n  "
  'name': 'wam_msgs'
  'repo': 'WAMros'
- 'brief': 'bumblebee2'
  'description': "\n     bumblebee2 package is based on camera1394 package.\n    \
    \ When bumblebee2.launch is run, left and right mono image which is formatted\
    \ by sensor_msgs/image will be published. \n  "
  'name': 'bumblebee2'
  'repo': 'cu-ros-pkg'
- 'brief': 'openloop_object_manipulation'
  'description': "\n\n     Open Loop Object Manipulation for Breakfast Objects\n\n\
    \  "
  'name': 'openloop_object_manipulation'
  'repo': 'bosch-ros-pkg'
- 'brief': 'hector_pose_estimation'
  'description': "\n\n     hector_pose_estimation provides the hector_pose_estimation\
    \ node and the hector_pose_estimation nodelet.\n\n  "
  'name': 'hector_pose_estimation'
  'repo': 'tu-darmstadt-ros-pkg'
- 'brief': 'rtmbuild'
  'description': "\n\n     rtmbuild\n\n  "
  'name': 'rtmbuild'
  'repo': 'rtm-ros-robotics/rtmros_common'
- 'brief': 'octreelib'
  'description': "\n\n     The octreelib contains an octree implementation that is\
    \ templated for coordinate and value type. \n     It features fast sampling and\
    \ value aggregation on many resolutions in parallel.\n     The implementation\
    \ is specifically suited for fast volume queries of integral or extremum values.\n\
    \n  "
  'name': 'octreelib'
  'repo': 'ais-bonn-ros-pkg'
- 'brief': 'tf_recorder_plugin'
  'description': "\n    This plugin records all tf messages in the world_db_model\
    \ database\n    and provides an service interface to get a former value of a\n\
    \    transform. For use in world_db_model plugins, it also provides a\n    C++\
    \ method.\n  "
  'name': 'tf_recorder_plugin'
  'repo': 'wg-ros-pkg'
- 'brief': 'object_tracker'
  'description': "\n\n     object_tracker\n\n  "
  'name': 'object_tracker'
  'repo': 'tu-darmstadt-ros-pkg'
- 'brief': 'value_learner'
  'description': "\n\n     value_learner\n\n  "
  'name': 'value_learner'
  'repo': 'wg-ros-pkg'
- 'brief': 'find_object_msgs'
  'description': "\n\n     find_object_msgs\n\n  "
  'name': 'find_object_msgs'
  'repo': 'wg-ros-pkg'
- 'brief': 'cob_sick_s300'
  'description': "\n\n     This package published a laser scan message out of a Sick\
    \ S300 laser scanner.\n\n  "
  'name': 'cob_sick_s300'
  'repo': 'cob_driver'
- 'brief': 'The designators class and protocol.'
  'description': "\n    This package contains the designators class and defines the\n\
    \    protocol to work with designators.\n  "
  'name': 'designators'
  'repo': 'cram_pl'
- 'brief': 'pose_corrector'
  'description': "\n    This package performs object pose refinement by using ICP\
    \ and/or optimization\n    over a beam-based sensor model. For scenarios with\
    \ large amounts of clutter, occlusion,\n    and pose uncertainty, this package\
    \ offers functionality for performing\n    random restarts with different evaluation\
    \ functions, including a\n    segmentation-aided beam-based sensor model.\n\n\
    \  "
  'name': 'pose_corrector'
  'repo': 'wg-ros-pkg'
- 'brief': 'ar_panel'
  'description': "\n\n     ar_panel\n\n  "
  'name': 'ar_panel'
  'repo': 'wg-ros-pkg'
- 'brief': 'm3_controller_configuration'
  'description': "\n\n     m3_controller_configuration\n\n  "
  'name': 'm3_controller_configuration'
  'repo': 'wg-ros-pkg'
- 'brief': 'cart_planner_executive'
  'description': "\n\n     cart_planner_executive\n\n  "
  'name': 'cart_pushing_executive'
  'repo': 'wg-ros-pkg'
- 'brief': 'The GBBopen Blackboard System'
  'description': "\n\n     gbbopen\n\n    "
  'name': 'gbbopen'
  'repo': 'ua-ros-pkg'
- 'brief': 'flirtlib'
  'description': "\nPulls in the 3rd party flirtlib package\n  "
  'name': 'flirtlib'
  'repo': 'flirtlib_features'
- 'brief': 'PressureSensor_msgs'
  'description': "\n\n     PressureSensor_msgs\n\n  "
  'name': 'PressureSensor_msgs'
  'repo': 'darpa_arm_msgs'
- 'brief': 'pr2_bringup_gazebo_demo'
  'description': "\n    This package contains a simulator-based demo of the PR2 robot\
    \ executing its calibration sequence. During this sequence, all the joints move\
    \ in order to trigger the optical flags that define the reference position of\
    \ the joint.\n  "
  'name': 'pr2_bringup_gazebo_demo'
  'repo': 'wg-ros-pkg'
- 'brief': 'uffi'
  'description': "\n\n     uffi\n\n  "
  'name': 'uffi'
  'repo': 'roll'
- 'brief': 'camera_calibration'
  'description': "\n\n     camera_calibration allows easy calibration of monocular\
    \ or stereo\n     cameras using a checkerboard calibration target.\n\n  "
  'name': 'camera_calibration'
  'repo': 'ros-pkg'
- 'brief': ''
  'description': "\n    Controls a rotating Directed Perception PTU D47 unit via a\
    \ serial interface and triggers the acquisition of PointCloud messages.\n  "
  'name': 'rotating_unit'
  'repo': 'tum-ros-pkg'
- 'brief': 'pr2_arm_navigation_tutorials'
  'description': "\n    This package contains code for tutorials that work with the\
    \ arm navigation stack.\n  "
  'name': 'pr2_arm_navigation_tutorials'
  'repo': 'wg-ros-pkg'
- 'brief': 'collvoid_local_planner'
  'description': "\n\n\n\n  "
  'name': 'collvoid_local_planner'
  'repo': 'multi_robot_collision_avoidance'
- 'brief': 'pr2_block_builder_msgs'
  'description': "\n\n     pr2_block_builder_msgs\n\n  "
  'name': 'pr2_block_builder_msgs'
  'repo': 'brown-experimental'
- 'brief': 'comp_objclusters'
  'description': "\n\n     comp_objclusters\n\n     Methods for inferring the most\
    \ likely object class a point cluster\n     belongs to.\n\n     Input:  a list\
    \ of lo IDs and the identifier of the desired object class\n     Output: the list\
    \ of lo IDs, ordered by the probability that the resp. cluster\n             belongs\
    \ to the desired object class\n\n  "
  'name': 'comp_objclusters'
  'repo': 'tum-ros-pkg'
- 'brief': 'youbot_teleop'
  'description': "\n\n     youbot_teleop\n\n  "
  'name': 'youbot_teleop'
  'repo': 'euRobotics_orocos_ws'
- 'brief': 'cpu_overload'
  'description': "\n\n     cpu_overload\n\n  "
  'name': 'cpu_overload'
  'repo': 'wg-ros-pkg'
- 'brief': 'PR2 controller plugin for Stanford_WBC.'
  'description': "\n    This package contains an adaptation of the Stanford Whole-Body\n\
    \    Control Framework (WBC) for PR2. It relies mainly on the\n    joint-space\
    \ dynamic model which is part of WBC. There is a &quot;pump&quot;\n    controller\
    \ plugin which sends robot state from real-time to\n    user-space and the torque\
    \ commands back from user-space into the\n    real-time controller. For simpler\
    \ WBC operations, it would\n    (probably) be possible to run the entire WBC servo\
    \ within the\n    plugin, but tests in late 2009 (which were based on a very\n\
    \    complete set of WBC functionality) failed in this respect because\n    they\
    \ were too slow to fit within the 1kHz RT control loop on PR2.\n  "
  'name': 'wbc_pr2_ctrl'
  'repo': 'whole_body_control'
- 'brief': 'JRL mathematical tools'
  'description': "\n\n    FIXME\n\n  "
  'name': 'jrl-mathtools'
  'repo': 'jrl-ros-pkg'
- 'brief': 'rosservice command-line tool'
  'description': "\n\nrosservice contains the rosservice command-line tool for listing\
    \ and querying ROS <a href=\"http://www.ros.org/wiki/Services\">Services</a>.\
    \ It also contains a Python library for retrieving information about Services\
    \ and dynamically invoking them. The Python library is experimental and is for\
    \ internal-use only.\n\n  "
  'name': 'rosservice'
  'repo': 'ros_comm'
- 'brief': 'flyer_common'
  'description': "\n\n     Libraries and scripts specific to starmac_flyer. Launch\
    \ files.\n\n  "
  'name': 'flyer_common'
  'repo': 'starmac-ros-pkg'
- 'brief': 'touch_display_interface'
  'description': "\n\n     touch_display_interface\n\n  "
  'name': 'touch_display_interface'
  'repo': 'vmi-ros-pkg'
- 'brief': 'icreate_nav'
  'description': "\n\n     icreate_nav\n\n  "
  'name': 'icreate_nav'
  'repo': 'brown-experimental'
- 'brief': 'kdl_lua'
  'description': "\n\n     kdl_lua, contains the kdl pretty printing lua module kdlpp.lua\n\
    \n  "
  'name': 'kdl_lua'
  'repo': 'rtt_geometry'
- 'brief': 'kinect_slam'
  'description': "\n    (On-line/real-time) SLAM on the kinect camera.\n  "
  'name': 'kinect_slam'
  'repo': 'wg-ros-pkg'
- 'brief': 'hogman'
  'description': "\n\tWrapper package for HOGMAN (hierarchical graph optimization),\
    \ only minimal set of files\n  "
  'name': 'hogman_minimal'
  'repo': 'alufr-ros-pkg'
- 'brief': 'ias_semantic_map'
  'description': "\n\n    Semantic maps of different kitchens at Bosch RTC Palo Alto,\
    \ created from 3D laser scans,\n    represented as OWL file, plus additional predicates\
    \ for manipulating the map and reasoning on it.\n\n  "
  'name': 'bosch_semantic_map'
  'repo': 'knowrob'
- 'brief': 'marker_tutorials'
  'description': "\n\n     marker_tutorials\n\n  "
  'name': 'visualization_marker_tutorials'
  'repo': 'ros-pkg'
- 'brief': 'fiducial_common'
  'description': "\n\n     fiducial_common\n\n  "
  'name': 'fiducial_common'
  'repo': 'wg-ros-pkg'
- 'brief': 'stanford_parser_ros'
  'description': "\n    stanford_parser_ros wraps the parse tree and dependency functionality\
    \ of the Stanford Parser and Stanford Dependencies Parser (with parse tree and\
    \ dependencies outputs) for ROS.  It receives a string (a command sentence) and\
    \ returns a Parse, which consists of a flattened parse tree and a list of dependencies\
    \ (such as direct object, indirect object, etc.).\n  "
  'name': 'stanford_parser_ros'
  'repo': 'roboframenet'
- 'brief': 'gpsd_viewer'
  'description': "\nMap Viewer for GPS position data provided by gpsd_client\n  "
  'name': 'gpsd_viewer'
  'repo': 'ccny_ground_station'
- 'brief': 'range_image'
  'description': "\n    <p>\n      Some experimantal PCL/range image stuff.\n    </p>\n\
    \  "
  'name': 'range_image_tests'
  'repo': 'wg-ros-pkg'
- 'brief': 'pluginlib_tutorials'
  'description': "\n\n     pluginlib_tutorials\n\n  "
  'name': 'pluginlib_tutorials'
  'repo': 'ros-pkg'
- 'brief': 'Search-based Planning Library (SBPL)'
  'description': "\n    A library of search-based planning algorithms\n\n  "
  'name': 'sbpl'
  'repo': 'arm_navigation'
- 'brief': 'display_parsec_time_offsets'
  'description': "\n\n     display_parsec_time_offsets\n\n  "
  'name': 'display_parsec_time_offsets'
  'repo': 'parsec'
- 'brief': 'ias_drawer_executive'
  'description': "\n\n     ias_drawer_executive\n     opens drawers in the ias kitchen.\n\
    \     the robot is driven to a hardcoded location that is know for each drawer.\n\
    \     the right hand goes to a hardcoded joint state so that we see the ar toolkit\
    \ marker on the drawer handle in the forearm camera.\n     ik is then used to\
    \ grasp at the marker, and the drawer is opened with some trajectory exploration,\
    \ following the line of least resistance so to say.\n\n  "
  'name': 'ias_drawer_executive'
  'repo': 'tum-ros-pkg'
- 'brief': 'pr2_power_data_analysis'
  'description': "\n\n     pr2_power_data_analysis\n\n  "
  'name': 'pr2_power_data_analysis'
  'repo': 'wg-ros-pkg'
- 'brief': 'polonius_msgs'
  'description': "\n\n     polonius_msgs\n\n  "
  'name': 'polonius_msgs'
  'repo': 'wu-ros-pkg'
- 'brief': 'testExportPython'
  'description': "\n\n     testExportPython\n\n  "
  'name': 'testExportPython'
  'repo': 'rtc-us-ros-pkg-branches'
- 'brief': 'parsec_calibration'
  'description': "\n\n     parsec_calibration\n\n  "
  'name': 'parsec_calibration'
  'repo': 'parsec'
- 'brief': 'triangle_mesh_msgs'
  'description': "\n     Messages for Triangle Meshes\n  "
  'name': 'triangle_mesh_msgs'
  'repo': 'ias_common'
- 'brief': ''
  'description': "\nTeleoperation of a robot from keyboard and joystick.\n  "
  'name': 'teleop_base'
  'repo': 'wg-ros-pkg'
- 'brief': 'haptic_device_msgs'
  'description': "\n\n    This package provides message types for interfacing with\
    \ a haptic device over ROS.\n    By separating this package from packages that\
    \ do actual haptic rendering, I hope to minimize dependency issues from external\
    \ haptics libraries.\n\n  "
  'name': 'haptic_device_msgs'
  'repo': 'wg-ros-pkg'
- 'brief': 'Humanoids Walking C++ Interface'
  'description': "\n\n    C++ Interfaces used to generated humanoid robots walking\n\
    \    movements.\n\n    Provides the definition of the following structures:\n\
    \    <ul>\n      <li>footprints (2d, 3d),</li>\n      <li>trajectories (2d, 3d),</li>\n\
    \      <li>2d points, 3d points, 2d frames, 3d frames as homogeneous\n\tmatrices,</li>\n\
    \      <li>pattern generator (2d, 3d): an algorithm which produces\n      feet,\
    \ ZMP and center of mass trajectories from a stack of time\n      parametrized\
    \ footprints.</li>\n    </ul>\n\n    It also defines how of to store walking trajectories\
    \ using the\n    YAML format.\n\n  "
  'name': 'walk_interfaces'
  'repo': 'stacks/humanoid_walk'
- 'brief': 'tekniker_telepresence'
  'description': "\n\n     tekniker_telepresence\n\n  "
  'name': 'tekniker_telepresence'
  'repo': 'tekniker_telepresence'
- 'brief': 'rosie_arm_kinematics'
  'description': "\n\n     rosie_arm_kinematics\n\n  "
  'name': 'rosie_arm_kinematics'
  'repo': 'tum-ros-pkg'
- 'brief': 'simon_says'
  'description': "\n\n     simon_says\n\n  "
  'name': 'simon_says'
  'repo': 'usc-ros-pkg'
- 'brief': 'Online object tracker relying on visual servoing.'
  'description': "\n\n    visp_tracker wraps the ViSP moving edge tracker provided\
    \ by the\n    ViSP visual servoing library into a ROS package.\n\n    This computer\
    \ vision algorithm computes the pose (i.e. position and\n    orientation) of an\
    \ object in an image. It is fast enough to allow\n    object online tracking using\
    \ a camera.\n\n  "
  'name': 'visp_tracker'
  'repo': 'stacks/vision_visp'
- 'brief': 'Error mechanisms for debugging.'
  'description': "\n\n    This library provides lean and mean error mechanisms. \n\
    \    It includes c style error functions as well as a few \n    useful macros.\
    \ For higher level mechanisms, \n\trefer to ecl_exceptions.\n\n  "
  'name': 'ecl_errors'
  'repo': 'ecl_lite'
- 'brief': 'rind'
  'description': 'Robot/ROS Status Indicator'
  'name': 'rind'
  'repo': 'iheart-ros-pkg'
- 'brief': 'rve_msgs'
  'description': "\n\n     rve_msgs\n\n  "
  'name': 'rve_msgs'
  'repo': 'visualization_engine'
- 'brief': 'XML files for running global navigation assuming a static map on a Wubble
    robot.'
  'description': "\n        This package holds XML files for running the <a href=\"\
    http://www.ros.org/wiki/move_base\">move_base</a> node on a Wubble robot. The\
    \ <a href=\"http://www.ros.org/wiki/move_base\">move_base</a> node is configured\
    \ to run over a pre-specified static map.\n    "
  'name': 'wubble_navigation_global'
  'repo': 'ua-ros-pkg'
- 'brief': 'rosshell'
  'description': "\n\n     rosshell \n\n  "
  'name': 'rosshell'
  'repo': 'ivs-ros-pkg'
- 'brief': 'hrl_arm_move_behaviors'
  'description': "\n\n     hrl_arm_move_behaviors\n\n  "
  'name': 'hrl_rfh_summer_2011'
  'repo': 'gt-ros-pkg'
- 'brief': 'A simple viewer for depth images generated by OpenNI devices.'
  'description': ''
  'name': 'depth_viewer'
  'repo': 'vanadium-ros-pkg'
- 'brief': 'Access analog inputs and digital outputs on the Arduino.'
  'description': "\n\n     The PMAD (power management and distribution) node provides\
    \ access\n     to digital outputs and analog inputs on an Arduino.\n\n  "
  'name': 'pmad'
  'repo': 'ajh-ros-pkg'
- 'brief': 'Plugin for publishing arbitrary messages'
  'description': "\n\n     rosgui_publisher provides a rosgui plugin for publishing\
    \ arbitrary messages with fixed or computed field values.\n\n  "
  'name': 'rosgui_publisher'
  'repo': 'ros_gui'
- 'brief': 'pr2_base_recovery'
  'description': "\n\n     pr2_base_recovery\n\n  "
  'name': 'pr2_base_recovery'
  'repo': 'continuous_ops'
- 'brief': ''
  'description': 'ROS connector for ORO server'
  'name': 'oro_ros'
  'repo': 'tum-ros-pkg'
- 'brief': 'Build recipe for cross-compiling zlib'
  'description': "\n\n\tThis provides a source package for compiling zlib (needed\
    \ by boost).\n\t\n\tOrdinarily this is not useful as you would install via your\
    \ system's\n\tinstallation method (e.g. apt-get for ubuntu), but for cross-compiling\
    \ \n    it provides the recipe needed to make a toolchain ros-ready.\n\n  "
  'name': 'eros_zlib'
  'repo': 'eros'
- 'brief': 'Driver for the WGE100 camera'
  'description': "\n    A ROS node and assorted tools to provide access to the WGE100\n\
    \    camera used in the forearms and the stereo cameras of the PR2\n    robot.\n\
    \  "
  'name': 'wge100_camera'
  'repo': 'ros-pkg'
- 'brief': 'neo_srb_ir'
  'description': "\n\n     neo_srb_ir\n\n  "
  'name': 'neo_srb_ir'
  'repo': 'neo_driver'
- 'brief': ''
  'description': 'test_client'
  'name': 'test_client'
  'repo': 'tum-ros-pkg'
- 'brief': 'KalmanFilter'
  'description': "\n\n     KalmanFilter\n\n  "
  'name': 'KalmanFilter'
  'repo': 'ccny_experimental'
- 'brief': 'cpp_common'
  'description': "\n\ncpp_common contains C++ code for doing things that are not necessarily\
    \ ROS\nrelated, but are useful for multiple packages. This includes things like\n\
    the ROS_DEPRECATED and ROS_FORCE_INLINE macros, as well as code for getting\n\
    backtraces. \n\nThis package is a component of <a href=\"http://www.ros.org/wiki/roscpp\"\
    >roscpp</a>.\n\n  "
  'name': 'cpp_common'
  'repo': 'ros_comm'
- 'brief': 'Experiments with a live torso.'
  'description': ''
  'name': 'live_torso'
  'repo': 'vanadium-ros-pkg'
- 'brief': 'Example launch files for navigation in stage.'
  'description': "\n  This package holds example launch files for running the ROS\
    \ navigation stack in stage.\n  "
  'name': 'navigation_stage'
  'repo': 'navigation_tutorials'
- 'brief': 'LARK'
  'description': "\n\n     lark\n\n  "
  'name': 'larks'
  'repo': 'wg-ros-pkg'
- 'brief': 'Allows avr processor to directly publish or subscribe to ros topics'
  'description': "\n\navr_bridge allows the AVR processors to directly publish or\
    \ subscribe to \nROS  topics.  This allows everything from Arduinos to custom\
    \ robot \nboards to be first class ROS components.\n\n  "
  'name': 'avr_bridge'
  'repo': 'rutgers-ros-pkg'
- 'brief': 'meshset_texture_reconstruction'
  'description': "\n\n     meshset_texture_reconstruction\n\n  "
  'name': 'meshset_texture_generator'
  'repo': 'bosch-ros-pkg'
- 'brief': 'pr2_power_cord_tester'
  'description': "\n\n     pr2_power_cord_tester\n\n  "
  'name': 'pr2_power_cord_tester'
  'repo': 'wg-ros-pkg'
- 'brief': 'Gazebo Tools for Personal Robots'
  'description': "\n    Gazebo tools for working with 3D simulator in the ROS environment:\n\
    \    urdf2gazebo parser, spawn/remove robots in simulation, \n  "
  'name': 'gazebo_tools'
  'repo': 'ros-pkg'
- 'brief': 'player_interface'
  'description': "\n\tPlayer proxies into ROS\n\t\n  "
  'name': 'player_interface'
  'repo': 'uuisrc-ros-pkg'
- 'brief': 'neato_teleop_joy'
  'description': "\n\n     neato_teleop_joy\n\n  "
  'name': 'neato_teleop_joy'
  'repo': 'smart-robotics-ros-pkg'
- 'brief': 'simple_Jtranspose_controller'
  'description': "\n\n     simple_Jtranspose_controller\n\n  "
  'name': 'simple_Jtranspose_controller'
  'repo': 'wg-ros-pkg'
- 'brief': 'Hokuyo laser rangefinder drivers'
  'description': 'A ROS node to provide access to SCIP 2.0-compliant Hokuyo laser
    range finders (including 04LX).'
  'name': 'hokuyo_node'
  'repo': 'ros-pkg'
- 'brief': 'nxt_lejos_lcp_proxy'
  'description': "\n     The nxt_lejos_lcp_proxy package acts as a controller for\
    \ leJOS NXT robots.\n     It uses a YAML file to describe the robot configuration.\
    \ It publishes\n     tf, odometry and pose data, and sensor data for all sensors\
    \ in the\n     robot configuration. It supports several ways of driving the robot,\
    \ \n     and its individual motors. It supports everything required by the ROS\n\
    \     navigation stack.\n  "
  'name': 'nxt_lejos_lcp_proxy'
  'repo': 'lejos-ros-pkg'
- 'brief': 'tuckarms_application'
  'description': "\n\n     Web application for tucking the arms of the PR2 robot via\
    \ the web interface.\n\n  "
  'name': 'tuckarms_application'
  'repo': 'wg-ros-pkg'
- 'brief': 'osmgpsmap'
  'description': "\n     osmgpsmap\n  "
  'name': 'osmgpsmap'
  'repo': 'ccny_ground_station'
- 'brief': 'triclops'
  'description': "\n        PtGrey triclops library\n    "
  'name': 'triclops'
  'repo': 'ubc-ros-pkg'
- 'brief': 'pybonjour'
  'description': "\n\n     pybonjour\n\n  "
  'name': 'pybonjour'
  'repo': 'multimaster-ros-pkg'
- 'brief': 'cmake modules for popular platform configurations'
  'description': "\n\n  eros_platforms is a library of preconfigured cmake modules\n\
    \  for popular platform/cpu configurations.\n\n  "
  'name': 'eros_platforms'
  'repo': 'eros'
- 'brief': 'pr2_read_text'
  'description': "\n\n     (PR2 only) package for PR2 reading text as shown in the\
    \ video.\n\n  "
  'name': 'pr2_read_text'
  'repo': 'literate_pr2'
- 'brief': 'Entry point for using OpenNI cameras in ROS'
  'description': "\n\n     Launch files to open an OpenNI device and load all nodelets\
    \ to\n     convert raw depth/RGB/IR streams to depth images, disparity\n     images,\
    \ and (registered) point clouds.\n\n  "
  'name': 'openni_launch'
  'repo': 'openni_kinect'
- 'brief': 'mocap_msgs'
  'description': "\n\n     Messages for motion capture, in particular, phase_space\n\
    \n  "
  'name': 'mocap_msgs'
  'repo': 'wg-ros-pkg'
- 'brief': 'pr2_dashboard_aggregator'
  'description': "\n    A simple script that aggregates all of the topics that a &quot;pr2_dashboard&quot;\
    \ app might be interested in.\n  "
  'name': 'pr2_dashboard_aggregator'
  'repo': 'wg-ros-pkg'
- 'brief': 'srh_calibration_controllers'
  'description': "\n\n     The srh_calibration_controllers package contains the controllers\n\
    \     used to bring all the joints in the PR2 to a calibrated state.\n\n  "
  'name': 'srh_calibration_controllers'
  'repo': 'wg-ros-pkg'
- 'brief': 'Common messages and services used in LfD algorithms.'
  'description': "\n \tlfd_common contains a set of service and message definitions\
    \ used in Learning for Demonstration algorithms.\n \t"
  'name': 'lfd_common'
  'repo': 'wpi-rail-ros-pkg'
- 'brief': 'oculesics_controllers'
  'description': "\n\n     oculesics_controllers\n\n  "
  'name': 'oculesics_controllers'
  'repo': 'usc-ros-pkg'
- 'brief': 'BHand_msgs'
  'description': "\n\n     BHand_msgs\n\n  "
  'name': 'BHand_msgs'
  'repo': 'darpa_arm_msgs'
- 'brief': 'PyQt startup script'
  'description': "\n\n     rosgui_pyqt only contains the PyQt specific startup script\
    \ for rosgui.\n\n  "
  'name': 'rosgui_pyqt'
  'repo': 'ros_gui'
- 'brief': 'navigation_goals'
  'description': "\n      This package contains several nodes that generate the goals\
    \ that the robot should explore inside an environment.\n  "
  'name': 'navigation_goals'
  'repo': 'ubc-ros-pkg'
- 'brief': 'netft_rdt_driver'
  'description': "\n\n     Driver for NetFT sensor that uses Raw Data Transfer (RDT)\
    \ protocol.\n\n  "
  'name': 'netft_rdt_driver'
  'repo': 'wg-ros-pkg'
- 'brief': 'pr2_arm_navigation_planning'
  'description': "\n\n     pr2_arm_navigation_planning\n\n  "
  'name': 'pr2_arm_navigation_planning'
  'repo': 'wg-ros-pkg'
- 'brief': ''
  'description': "\n    A collection of point cloud related tools.\n  "
  'name': 'pcl_cloud_tools'
  'repo': 'mapping'
- 'brief': 'ANN'
  'description': "\n\n    ANN is a library written in C++, which supports data structures\
    \ and\n    algorithms for both exact and approximate nearest neighbor searching\
    \ in\n    arbitrarily high dimensions.\n\n    In the nearest neighbor problem\
    \ a set of data points in d-dimensional\n    space is given. These points are\
    \ preprocessed into a data structure, so\n    that given any query point q, the\
    \ nearest or generally k nearest points of\n    P to q can be reported efficiently.\
    \ The distance between two points can be\n    defined in many ways. ANN assumes\
    \ that distances are measured using any\n    class of distance functions called\
    \ Minkowski metrics. These include the\n    well known Euclidean distance, Manhattan\
    \ distance, and max distance.\n\n    Based on our own experience, ANN performs\
    \ quite efficiently for point sets\n    ranging in size from thousands to hundreds\
    \ of thousands, and in dimensions\n    as high as 20. (For applications in significantly\
    \ higher dimensions, the\n    results are rather spotty, but you might try it\
    \ anyway.)\n\n    The library implements a number of different data structures,\
    \ based on\n    kd-trees and box-decomposition trees, and employs a couple of\
    \ different\n    search strategies.\n\n    The library also comes with test programs\
    \ for measuring the quality of\n    performance of ANN on any particular data\
    \ sets, as well as programs for\n    visualizing the structure of the geometric\
    \ data structures. \n\n  "
  'name': 'ann'
  'repo': 'ias_perception'
- 'brief': 'leader_follower_v1'
  'description': "\n\n     leader_follower_v1\n\n  "
  'name': 'leader_follower_v1'
  'repo': 'brown-experimental'
- 'brief': 'pi_lib'
  'description': "\n\n    Pi Robot Library - Helper functions for the Pi Robot Project\n\
    \n  "
  'name': 'pi_lib'
  'repo': 'pi-robot-ros-pkg'
- 'brief': 'constraint_aware_spline_smoother'
  'description': "\n    This package contains filters for joint trajectories. The\
    \ filters can take into account constraints. However, the current set of filters\
    \ only take collision constraints into account, i.e. they will apply only the\
    \ smoothing that does not violate collision constraints.\n  "
  'name': 'constraint_aware_spline_smoother'
  'repo': 'arm_navigation'
- 'brief': 'nxt_lejos_bumper_car'
  'description': "\n\n     nxt_lejos_bumper_car\n\n  "
  'name': 'nxt_lejos_bumper_car'
  'repo': 'lejos-ros-pkg'
- 'brief': 'A Java ROS client library'
  'description': "\n    <p> \n        rosjava is a partial implementation of the ROS\
    \ NodeHandle API for Java. The current implementation works by calling roscpp\
    \ behind the scenes using JNI, although the intention is to eventually rewrite\
    \ it in pure Java. The interfaces in the &quot;ros&quot; package are intended\
    \ to be independent of the implementation, so that this change can be made transparently\
    \ when the pure Java implementation has been written.\n    </p>\n    <p>\n   \
    \     rosjava is currently in an early alpha state; the core functionality it\
    \ provides has been fairly well tested, but many more advanced features are missing.\
    \ Its API has not yet been reviewed, and is likely to change in the future. \n\
    \    </p>\n\t<p>\n\t\trosjava is currently maintained by Nicholas Butko. Contact\
    \ nbutko at ucsd dot edu with issues and fixes. \n\t</p>\n  "
  'name': 'rosjava_jni'
  'repo': 'client_rosjava_jni'
- 'brief': 'pr2_message_teleop'
  'description': "\n\n     pr2_message_teleop\n\n  "
  'name': 'pr2_message_teleop'
  'repo': 'brown-experimental'
- 'brief': 'cv_bridge_redesign'
  'description': "\n\n     Sandbox package for exploring a redesign of the cv_bridge\
    \ C++ API.\n     Do not use this package; the new API is included in cv_bridge\n\
    \     proper as of Diamondback.\n\n  "
  'name': 'cv_bridge_redesign'
  'repo': 'wg-ros-pkg'
- 'brief': 'collision_proximity_planner'
  'description': "\n\n     collision_proximity_planner\n\n  "
  'name': 'collision_proximity_planner'
  'repo': 'arm_navigation_experimental'
- 'brief': 'ce_common'
  'description': "\n\n     ce_common\n\n  "
  'name': 'ce_common'
  'repo': 'vmi-ros-pkg'
- 'brief': 'virtual_scanner'
  'description': "\n    Create virtually scanned PointCloud2 datasets from wireframe/surface\
    \ models.\n  "
  'name': 'virtual_scanner'
  'repo': 'wg-ros-pkg'
- 'brief': ''
  'description': "\n   Door functions package\n  "
  'name': 'pr2_doors_common'
  'repo': 'pr2_doors'
- 'brief': ''
  'description': "\n\n\n  "
  'name': 'veltrobot_nao'
  'repo': 'veltrop-ros-pkg'
- 'brief': 'schunk_description'
  'description': "\n\n  This package contains the description (mechanical, kinematic,\
    \ visual,\n  etc.) of different schunk components. The files in this package are\
    \ parsed and used by\n  a variety of other components. Most users will not interact\
    \ directly\n  with this package.\n\n  "
  'name': 'schunk_description'
  'repo': 'schunk_modular_robotics'
- 'brief': 'table_objects'
  'description': "\n  "
  'name': 'table_objects'
  'repo': 'tum-ros-pkg'
- 'brief': 'object_completion'
  'description': "\n    This package takes as an input a segmented point cloud and\
    \ the \n    current viewpoint of the camera and creates a complete point cloud\
    \ in \n    which the occluded object backside is filled in. Additionally, a \n\
    \    watertight mesh of this completed point cloud can be created.\n\n    An example\
    \ ros node is provided with the package as well as an example \n    on how to\
    \ use this package stand-alone.\n  "
  'name': 'object_completion'
  'repo': 'wg-ros-pkg'
- 'brief': 'asctec_ctrl'
  'description': "\n\n     asctec_ctrl\n\n  "
  'name': 'asctec_ctrl'
  'repo': 'ccny_experimental'
- 'brief': 'pictorial_2D_barcode'
  'description': "\n\n     pictorial_2D_barcode\nGiven a rectified image from a calibrated\
    \ video camera (there's an app for that), using a calibration pattern next to\
    \ a sufficiently textured image, the user can select the image and this application\
    \ will find sufficiently robust keypoints (to view angle and discriminative) to\
    \ allow a run time app to find that image, and use the image as both a run time\
    \ homography pattern as well as reproducing the image with an embedded numerical\
    \ code.\n  "
  'name': 'pictorial_2D_barcode'
  'repo': 'wg-ros-pkg'
- 'brief': 'pr2_nav_pcontroller'
  'description': "\n\n     pr2_nav_pcontroller\n\n  "
  'name': 'pr2_nav_pcontroller'
  'repo': 'tum-ros-pkg'
- 'brief': 'launch_manager'
  'description': "\n      This package containg a launch manager node capable of starting\
    \ and stopping launch files on teh fly. In the SRVC contest this was used to switch\
    \ from a local navigation stack to a global navigation stack.\n  "
  'name': 'launch_manager'
  'repo': 'ubc-ros-pkg'
- 'brief': 'seabee3_dashboard'
  'description': "\n\n     seabee3_dashboard\n\n  "
  'name': 'seabee3_dashboard'
  'repo': 'seabee3-ros-pkg'
- 'brief': 'fmk'
  'description': "\n\n     fmk\n\n  "
  'name': 'fmk_ros_bridge'
  'repo': 'rtm-ros-robotics/rtmros_common'
- 'brief': 'surf'
  'description': "\n\n     surf\n\n  "
  'name': 'surf'
  'repo': 'uuisrc-ros-pkg'
- 'brief': 'neo_base_drive_can'
  'description': "\n\n     neo_base_drive_can\n\n  "
  'name': 'neo_base_drive_can'
  'repo': 'neo_driver'
- 'brief': 'fr_tools'
  'description': "\n\n     fr_tools - small collection of various helpful tools\n\n\
    \  "
  'name': 'fr_tools'
  'repo': 'alufr-ros-pkg'
- 'brief': 'pr2_controller_configuration_gazebo'
  'description': "\n\n  A copy of the pr2_controller_configuration package, for use\
    \ in \n  the PR2 simulator.  We maintain two copies to allow for controller\n\
    \  gains to be set differently between hardware and simulation.\n\n  "
  'name': 'pr2_controller_configuration_gazebo'
  'repo': 'wg-ros-pkg'
- 'brief': 'fake_tracking'
  'description': "\n\nA fake tracker which polls the simulator for the locations of\
    \ other robots (dynamic obstacles)\n\n  "
  'name': 'fake_tracking'
  'repo': 'sbpl_dynamic_env'
- 'brief': 'cob_bringup'
  'description': "\n\n     This package launches all nodes for operating either a\
    \ real Care-O-bot or a simulated one.\n\n  "
  'name': 'cob_bringup'
  'repo': 'cob_robots'
- 'brief': ''
  'description': "\n    Python bindings for toro\n  "
  'name': 'pytoro'
  'repo': 'wg-ros-pkg'
- 'brief': 'service_optimizer'
  'description': "\n\n     service_optimizer\n\n  "
  'name': 'service_optimizer'
  'repo': 'wg-ros-pkg'
- 'brief': ''
  'description': "\n    LIBSVM is a Support Vector Machine implementation (http://www.csie.ntu.edu.tw/~cjlin/libsvm/)\n\
    \  "
  'name': 'libsvm'
  'repo': 'tum-ros-pkg'
- 'brief': ''
  'description': 'Launch files for pluggin in in Gazebo.'
  'name': 'pr2_plugs_gazebo_demo'
  'repo': 'wg-ros-pkg'
- 'brief': 'Controller gains for the simulated REEM robot.'
  'description': ''
  'name': 'reem_controller_configuration_gazebo'
  'repo': 'reem_simulation'
- 'brief': 'knem'
  'description': "\n\n    KNEM is a Linux kernel module enabling high-performance\
    \ intra-node MPI\n    communication for large messages. KNEM works on all Linux\
    \ kernel since 2.6.15\n    and offers support for asynchronous and vectorial data\
    \ transfers as well as\n    offloading memory copies on to Intel I/OAT hardware.\n\
    \  "
  'name': 'knem'
  'repo': 'wg-ros-pkg'
- 'brief': 'nolan'
  'description': "\nSimple PID based follower. Follows ARTags. Actuates on /cmd_vel\
    \ at speeds appropriate to a small robot.\n  "
  'name': 'nolan'
  'repo': 'brown-experimental'
- 'brief': 'smach_recovery_ros'
  'description': "\n    The smach_recovery_ros package contains extensions for the\
    \ smach_recovery library to\n    integrate it tightly with ROS.  For example,\
    \ smach_recovery-ROS can call\n    ROS services, listen to ROS topics, and integrate\n\
    \    with <a href=\"http://www.ros.org/wiki/actionlib\">actionlib</a>\n    both\
    \ as a client, and a provider of action servers.  smach_recovery is a\n    new\
    \ library that takes advantage of very old concepts in order to\n    quickly create\
    \ robust robot behavior with maintainable and modular\n    code.\n  "
  'name': 'smach_recovery_ros'
  'repo': 'bosch-ros-pkg'
- 'brief': 'pr2_block_placer'
  'description': "\n\n     pr2_block_placer\n\n  "
  'name': 'pr2_block_placer'
  'repo': 'brown-experimental'
- 'brief': 'fcl'
  'description': "\n\n     fcl\n\n  "
  'name': 'fcl'
  'repo': 'fcl_ros'
- 'brief': 'webots_simulator'
  'description': "\n\n     webots_simulator\n\n  "
  'name': 'webots_simulator'
  'repo': 'webots-ros-pkg'
- 'brief': 'parsec_parception'
  'description': "\n\n     parsec_perception\n\n  "
  'name': 'parsec_perception'
  'repo': 'parsec'
- 'brief': 'Driver for the Neato XV-11'
  'description': "\n\n    This is a generic drivers for the Neato XV-11 Robotic Vacuum.\n\
    \n    ROS Bindings can be found in the neato_node package.\n\n  "
  'name': 'neato_driver'
  'repo': 'albany-ros-pkg'
- 'brief': 'pr2_arm_state_estimation'
  'description': "\n\n    This package uses Bosch MEMS sensors to estimate the pose\
    \ of the PR2's arm. The cost of accelerometers and gyroscopes has dropped to a\
    \ point where they have become ubiquitous sensors, as seen by their presence in\
    \ mobile phones and video game controllers. It is possible to use these sensors\
    \ to estimate the joint positions of a robotic manipulator. This allows the joint\
    \ angle sensor to be decoupled from the physical joint axis or actuator axis.\
    \ In turn, this allows for a truly redundant measurement mechanism for safety\
    \ as well as for new, lower-cost manipulator designs.\n\n    Currently only the\
    \ left arm is supported, and the sensors must be placed in specific locations\
    \ and orientations.\n\n  "
  'name': 'pr2_arm_state_estimation'
  'repo': 'bosch-ros-pkg'
- 'brief': 'pr2_skill_crane'
  'description': "\n\n     pr2_skill_crane\n\n  "
  'name': 'pr2_skill_crane'
  'repo': 'wg-ros-pkg'
- 'brief': 'interactive_waypoint_markers'
  'description': "\n\n     interactive_waypoint_markers\n\n  "
  'name': 'interactive_waypoint_markers'
  'repo': 'parsec'
- 'brief': 'Bumblebee2_sim_server'
  'description': "\n\n     Bumblebee2_sim_server\n\n  "
  'name': 'Bumblebee2_sim_server'
  'repo': 'darpa_arm_sim_servers'
- 'brief': 'articulation_structure'
  'description': "\n\n     articulation_structure\n\n  "
  'name': 'articulation_structure'
  'repo': 'alufr-ros-pkg'
- 'brief': 'hrl_opencv'
  'description': "\n     Helper functions for use with OpenCV.\n  "
  'name': 'hrl_opencv'
  'repo': 'gt-ros-pkg'
- 'brief': 'my3dscan'
  'description': "\n\n     Creates a 3D scan.\n\n  "
  'name': 'my3dscan'
  'repo': 'roblab-whge-ros-pkg'
- 'brief': 'seabee3_driver'
  'description': "\n\n     seabee3_driver\n\n  "
  'name': 'seabee3_driver'
  'repo': 'seabee3-ros-pkg'
- 'brief': 'rtt_ros_integration'
  'description': "\n\n     rtt_ros_integration provides an RTT plugin to add a ROS\
    \ node to the RTT process, and the necessary template files and cmake macros for\
    \ automatic rtt typekit and transport generation from ROS msg files\n\n  "
  'name': 'rtt_ros_integration'
  'repo': 'orocos_toolchain_ros'
- 'brief': 'quad_pose_est'
  'description': "\n\n     quad_pose_est\n\n  "
  'name': 'quad_pose_est'
  'repo': 'ccny_experimental'
- 'brief': 'cyton_demo'
  'description': "\n\n     cyton_demo\n\n  "
  'name': 'cyton_demo'
  'repo': 'rtc-us-ros-pkg-branches'
- 'brief': 'ompl_ros_interface_helper'
  'description': "\n\n     ompl_ros_interface_helper\n\n  "
  'name': 'ompl_ros_interface_helper'
  'repo': 'wg-ros-pkg'
- 'brief': 'Nodes for relaying to a foreign master.'
  'description': "\n    The foreign_relay node is designed for use with multiple robots\
    \ running\n    separate masters. It is like a relay, except that it additionally\n\
    \    registers its topic on a foreign master. The unreliable_relay node is like\
    \ \n    relay in topic_tools except that it requests an unreliable transport.\n\
    \  "
  'name': 'foreign_relay'
  'repo': 'multimaster_experimental'
- 'brief': 'robotino_msgs'
  'description': "\nThis package defines certain custom messages for Robotino.\n  "
  'name': 'robotino_msgs'
  'repo': 'robotino-ros-pkg'
- 'brief': 'coverage_controller'
  'description': "\n\n     coverage_controller\n\n  "
  'name': 'coverage_controller'
  'repo': 'brown-experimental'
- 'brief': 'A common interface definition for lower level control routines.'
  'description': "\n  "
  'name': 'process_modules'
  'repo': 'cram_pl'
- 'brief': 'nodelet_topic_tools'
  'description': "\n    This package contains common nodelet tools such as a mux,\
    \ demux and throttle.\n  "
  'name': 'nodelet_topic_tools'
  'repo': 'nodelet_core'
- 'brief': '3d_nav_gazebo - Simulation package for 3d_navigation'
  'description': "\n\n     This package provides the launch files and configuration\
    \ to run 3d_navigation in gazebo.\n\n  "
  'name': '3d_nav_gazebo'
  'repo': 'wg-ros-pkg'
- 'brief': 'libsvm3'
  'description': "\n     libsvm3\n  "
  'name': 'libsvm3'
  'repo': 'gt-ros-pkg'
- 'brief': 'NaoSim'
  'description': "\n\n     NaoSim is a package for simulating the nao in ros using\
    \ aldebaran's naoqi and choreagraphe software. Check out the README for details.\n\
    \n  "
  'name': 'NaoSim'
  'repo': 'brown-experimental'
- 'brief': 'Simple templated exceptions.'
  'description': "\n\n     Template based exceptions - these are simple and practical\n\
    \     and avoid the proliferation of exception types. Although not\n     syntatactically\
    \ ideal, it is convenient and eminently practical.\n\n  "
  'name': 'ecl_exceptions'
  'repo': 'ecl_core'
- 'brief': 'Execution trace for CRAM.'
  'description': "\n    The execution trace provides facilities for tracing and all\
    \ state changes\n    during plan execution, serializing this episode information\
    \ and accessing\n    it in various ways.\n  "
  'name': 'cram_execution_trace'
  'repo': 'cram_pl'
- 'brief': 'split-sequence'
  'description': "\n    http://www.cliki.net/SPLIT-SEQUENCE\n  "
  'name': 'split_sequence'
  'repo': 'cram_pl'
- 'brief': 'meshset_texture_blender'
  'description': "\n\n     meshset_texture_blender\n\n  "
  'name': 'meshset_texture_blender'
  'repo': 'bosch-ros-pkg'
- 'brief': 'features_2d'
  'description': "\n\n     features_2d\n\n  "
  'name': 'features_2d'
  'repo': 'wg-ros-pkg'
- 'brief': 'gsnav'
  'description': "\n\n     gsnav\n\n  "
  'name': 'gnav'
  'repo': 'brown-experimental'
- 'brief': 'stereo-anaglyph'
  'description': "\n     Display images from stereo pairs in red-cyan anaglyph mode.\n\
    \  "
  'name': 'stereo_anaglyph'
  'repo': 'gt-ros-pkg'
- 'brief': 'libLMS1xx'
  'description': "\n\n     Library for communicating with SICK LMS1xx.\n\n  "
  'name': 'libLMS1xx'
  'repo': 'RCPRG_laser_drivers'
- 'brief': 'vp_strings'
  'description': "\n\tThis package contains basic operators for string that are especially\
    \ useful\n\tto learn and understand ROS. The following operations are covered\
    \ by this node:\n\t* Concatenate\n\t* Substitute\n\t* Split\n\t* StringToNumber\
    \ (Float and Int)\n\t* NumberToString (Float and Int)\n\t* Compare\n\t* For-loop\n\
    \t* StringGen (Generates a fixed string\n\tAdditionally, the package contains\
    \ the &quot;vp_package.xml&quot; file which is used by the \n\tvisual programming\
    \ editor for ROS (package visualprogramming). In case the vp_common stack is\n\
    \tnot installed in the stacks root folder (/opt/ros/diamondback/stacks/) please\
    \ modify the\n\tsource argument in the &quot;vp_package.xml&quot; file.\n  "
  'name': 'vp_strings'
  'repo': 'vmi-ros-pkg'
- 'brief': ''
  'description': 'A ROS node to control camera triggering via motor board digitial_out.'
  'name': 'camera_trigger_test'
  'repo': 'wg-ros-pkg'
- 'brief': 'libm5api'
  'description': "\n\n     This package wraps the libm5api to use it as a ros dependency\n\
    \n  "
  'name': 'libm5api'
  'repo': 'cob_extern'
- 'brief': 'location_memorizer'
  'description': "\n\n    location_memorizer is an RFNServer which remembers locations\
    \ and their corresponding names when instructed.\n\n  "
  'name': 'location_memorizer'
  'repo': 'roboframenet'
- 'brief': 'ROS wrapper for leptonica.'
  'description': "\n\n     ROS wrapper for leptonica.\n\n  "
  'name': 'leptonica'
  'repo': 'bosch-ros-pkg'
- 'brief': 'laser_avoid'
  'description': "\n\n     laser_avoid\n\n  "
  'name': 'laser_avoid'
  'repo': 'elektron_kinectbot'
- 'brief': 'sharedmem_transport'
  'description': "\n\n     sharedmem_transport\n\n  "
  'name': 'sharedmem_transport'
  'repo': 'ethzasl_message_transport'
- 'brief': 'a package that provide a cop Sensor plugin'
  'description': "\n     a package to provide a Sensor plugin for cop\n  "
  'name': 'cop_sr4_plugins'
  'repo': 'ias_perception'
- 'brief': 'master browser app for android'
  'description': "\n\n     Uses jmdns to do zeroconf discovery of various ros\n  \
    \   style services (ros, concert, app managers).\n\n  "
  'name': 'zeroconf_android_master_browser'
  'repo': 'zeroconf_android'
- 'brief': 'rve_common_transformers'
  'description': "\n\n     rve_common_transformers\n\n  "
  'name': 'rve_common_transformers'
  'repo': 'visualization_engine'
- 'brief': '3D Meshes and URDF for the CrustCrawler SmartArm'
  'description': "\n        3D Meshes and URDF description for the CrustCrawler Smart\
    \ Robotic Arm.\n    "
  'name': 'smart_arm_description'
  'repo': 'ua-ros-pkg'
- 'brief': 'pi_tb'
  'description': "\n     TurtleBot modified to have a pan and tilt head and a 4-dof\
    \ arm + gripper\n  "
  'name': 'pi_tb'
  'repo': 'pi-robot-ros-pkg'
- 'brief': 'A ROS wrapper for libsunflower.sourceforge.net'
  'description': "\n    Libsunflower contains mobile robotic programming abstractions\n\
    \    developed at the Autonomous Systems Lab of the Swiss Federal\n    Institute\
    \ of Technology. It is written in C++ and provides a\n    framework of classes\
    \ and utilities for common tasks and patterns\n    in mobile robotics. As a concrete\
    \ application of those\n    abstractions, libsunflower contains obstacle avoidance\
    \ code.\n  "
  'name': 'libsunflower'
  'repo': 'wg-ros-pkg'
- 'brief': 'iRobot Turtlebot ROS driver node'
  'description': "\n\n     ROS bindings for the Turtlebot/Roomba driver.\n\n     This\
    \ is based on otl_roomba driver by OTL, ported to use\n     turtlebot_driver instead.\
    \  This also contains a 'bonus' feature from\n     the turtlebot driver by Xuwen\
    \ Cao and Morgan Quigley.\n     \n  "
  'name': 'busbot_node'
  'repo': 'bosch-ros-pkg'
- 'brief': 'rtt_diagnostic_msgs'
  'description': "\n\n    Provides an rtt typekit for ROS diagnostic_msgs messages.\n\
    \n    It allows you to use ROS messages transparently in\n    RTT components and\
    \ applications.\n\n    This package was automatically generated by the\n    create_rtt_msgs\
    \ generator and should not be manually\n    modified.\n\n    See the http://ros.org/wiki/diagnostic_msgs\
    \ documentation\n    for the documentation of the ROS messages in this\n    typekit.\n\
    \n  "
  'name': 'rtt_diagnostic_msgs'
  'repo': 'rtt_common_msgs'
- 'brief': 'URDF Xml robot description parser.'
  'description': "\n    This package contains a C++ parser for the Unified Robot Description\n\
    \    Format (URDF), which is an XML format for representing a robot model. \n\
    \    The code API of the parser has been through our review process and will remain\n\
    \    backwards compatible in future releases.\n  "
  'name': 'urdf'
  'repo': 'robot_model'
- 'brief': 'keyboard_smooth_safe'
  'description': "\n\n     keyboard_smooth_safe\n\n  "
  'name': 'keyboard_smooth_safe'
  'repo': 'bosch-ros-pkg'
- 'brief': 'two_lwr_machine'
  'description': "\n\n     two_lwr_machine\n\n  "
  'name': 'two_lwr_machine'
  'repo': 'two_lwr_robot'
- 'brief': 'Licensing details for the embedded control libraries'
  'description': "\n\n     Maintains the ecl licenses and also provides an install\n\
    \     target for deploying licenses with the ecl libraries.\n\n  "
  'name': 'ecl_license'
  'repo': 'ecl_tools'
- 'brief': 'HRP-2 14 model information'
  'description': "\n\n    FIXME\n\n  "
  'name': 'hrp2-14'
  'repo': 'jrl-ros-pkg'
- 'brief': 'Messages and services for the Stanford Whole-Body Controller.'
  'description': "\n  "
  'name': 'wbc_msgs'
  'repo': 'whole_body_control'
- 'brief': 'HRP-2 10 model information'
  'description': "\n\n    FIXME\n\n  "
  'name': 'hrp2-10'
  'repo': 'jrl-ros-pkg'
- 'brief': 'motor_resetter'
  'description': "\n\n     motor_resetter\n\n  "
  'name': 'motor_resetter'
  'repo': 'continuous_ops'
- 'brief': 'forearm_teleop'
  'description': "\n\n     forearm_teleop\n\n  "
  'name': 'forearm_teleop'
  'repo': 'wg-ros-pkg'
- 'brief': ''
  'description': "\n  A ROS driver node for AVT/Prosilica Gigabit Ethernet (GigE)\
    \ cameras.\n  "
  'name': 'prosilica_camera'
  'repo': 'ros-pkg'
- 'brief': 'follow_person'
  'description': "\n\n     follow_person\n\n  "
  'name': 'follow_person'
  'repo': 'wg-ros-pkg'
- 'brief': 'busbot_bringup'
  'description': "\n\n     busbot_bringup provides roslaunch scripts for starting\
    \ the BusBot base functionality. \n\n  "
  'name': 'busbot_bringup'
  'repo': 'bosch-ros-pkg'
- 'brief': 'dynamixel'
  'description': "\n\n     Provides a package to control dynamixels.\n\n  "
  'name': 'dynamixel'
  'repo': 'roblab-whge-ros-pkg'
- 'brief': 'object_tracking'
  'description': "\n\n        object_tracking\n\n    "
  'name': 'object_tracking'
  'repo': 'ua-ros-pkg'
- 'brief': 'Log4cpp maintained by Orocos developers'
  'description': "\n\t\t\tThis version of log4cpp deviates from the official release\n\
    \t\t\tby adding custom category factories. Orocos requires this for\n\t\t\tsetting\
    \ up real-time logging.\n    "
  'name': 'log4cpp'
  'repo': 'orocos_toolchain'
- 'brief': 'arm_navigation_msgs'
  'description': "\n\n     arm_navigation_msgs\n\n  "
  'name': 'arm_navigation_msgs'
  'repo': 'arm_navigation'
- 'brief': 'Generic tele-operation framework.'
  'description': "\n\n    This package provides header files and a library which implement\
    \ a\n    framework for managing generic tele-operation source (e.g. keyboard,\n\
    \    joystick, etc.) and sink (e.g. mobile robot base, pan-tilt unit, etc.)\n\
    \    devices.\n\n    Structures are provided which describe the state of tele-operation\
    \ source\n    devices.  Using these structures, a simple interface class is provided\n\
    \    which defines low-level interactions with source devices.  Each type of\n\
    \    tele-operation source device must implement this interface in order to\n\
    \    be accessible to the framework.  This interface can also be used to\n   \
    \ interact with tele-operation source devices.  An adapter class is also\n   \
    \ provided which allows high-level interaction with tele-operation source\n  \
    \  devices.\n\n  "
  'name': 'teleop_framework'
  'repo': 'generic_teleop'
- 'brief': 'probabilistic_grasp_planner'
  'description': "\n    Takes potentially found models and clusters in a scene, and\
    \ plans\n    grasps which are robust to positioning and model uncertainty.\n  "
  'name': 'probabilistic_grasp_planner'
  'repo': 'wg-ros-pkg'
- 'brief': 'interactive_marker_client'
  'description': "\n\n     interactive_marker_client\n\n  "
  'name': 'interactive_marker_client'
  'repo': 'bosch-ros-pkg'
- 'brief': 'A C++ XML-RPC library'
  'description': "\n\nXmlRpc++ is a C++ implementation of the XML-RPC protocol. This\
    \ version is \nheavily modified from the package available on SourceForge in order\
    \ to \nsupport roscpp's threading model. As such, we are maintaining our\nown\
    \ fork. \n\n"
  'name': 'xmlrpcpp'
  'repo': 'ros_comm'
- 'brief': 'position_string_rviz_plugin'
  'description': "\n     Message for visualizing strings at certain positions..\n\
    \  "
  'name': 'position_string_msgs'
  'repo': 'tum-ros-pkg'
- 'brief': 'rcf_com_iowarrior'
  'description': "\n\n     This package provides functions to communicate with a relay-card.\n\
    \n  "
  'name': 'rcf_com_iowarrior'
  'repo': 'roblab-whge-ros-pkg'
- 'brief': 'tod_rein'
  'description': "\n\n     tod_rein is a rein plugin interface for the textured_object_detion\
    \ library.\n\n  "
  'name': 'tod_rein'
  'repo': 'wg-ros-pkg'
- 'brief': 'features_2d_ros'
  'description': "\n\n     features_2d_ros\n\n  "
  'name': 'features_2d_ros'
  'repo': 'wg-ros-pkg'
- 'brief': 'Tutorial code for Mini Maxwell Platform'
  'description': ''
  'name': 'mini_max_tutorials'
  'repo': 'vanadium-ros-pkg'
- 'brief': 'ias_pr2_2dnav'
  'description': "\n\n     ias_pr2_2dnav\n\n  "
  'name': 'ias_pr2_2dnav'
  'repo': 'tum-ros-pkg'
- 'brief': 'robotino_local_planner'
  'description': "\n  "
  'name': 'robotino_local_planner'
  'repo': 'robotino-ros-pkg'
- 'brief': 'ce_phidgets'
  'description': "\n     Phidget Interface Kit\n  "
  'name': 'ce_phidgets'
  'repo': 'vmi-ros-pkg'
- 'brief': 'block_builder'
  'description': "\n\n     block_builder\n\n  "
  'name': 'block_builder'
  'repo': 'brown-experimental'
- 'brief': 'ANN'
  'description': "\n\n    ANN is a library written in C++, which supports data structures\
    \ and\n    algorithms for both exact and approximate nearest neighbor searching\
    \ in\n    arbitrarily high dimensions.\n\n    In the nearest neighbor problem\
    \ a set of data points in d-dimensional\n    space is given. These points are\
    \ preprocessed into a data structure, so\n    that given any query point q, the\
    \ nearest or generally k nearest points of\n    P to q can be reported efficiently.\
    \ The distance between two points can be\n    defined in many ways. ANN assumes\
    \ that distances are measured using any\n    class of distance functions called\
    \ Minkowski metrics. These include the\n    well known Euclidean distance, Manhattan\
    \ distance, and max distance.\n\n    Based on our own experience, ANN performs\
    \ quite efficiently for point sets\n    ranging in size from thousands to hundreds\
    \ of thousands, and in dimensions\n    as high as 20. (For applications in significantly\
    \ higher dimensions, the\n    results are rather spotty, but you might try it\
    \ anyway.)\n\n    The library implements a number of different data structures,\
    \ based on\n    kd-trees and box-decomposition trees, and employs a couple of\
    \ different\n    search strategies.\n\n    The library also comes with test programs\
    \ for measuring the quality of\n    performance of ANN on any particular data\
    \ sets, as well as programs for\n    visualizing the structure of the geometric\
    \ data structures. \n\n  "
  'name': 'ANN_doors'
  'repo': 'pr2_doors'
- 'brief': 'katana_openrave_grasp_planner'
  'description': "\n\n     katana_openrave_grasp_planner\n\n  "
  'name': 'katana_openrave_grasp_planner'
  'repo': 'uos-ros-pkg'
- 'brief': 'cr_capture'
  'description': "\n\n     cr_capture\n\n  "
  'name': 'cr_capture'
  'repo': 'jsk-ros-pkg'
- 'brief': 'tirt_viewer'
  'description': "\n\n     tirt_viewer\n\n  "
  'name': 'tirt_viewer'
  'repo': 'wg-ros-pkg'
- 'brief': 'kinect_launch'
  'description': "\n\n     kinect_launch\n\n  "
  'name': 'kinect_launch'
  'repo': 'brown-experimental'
- 'brief': 'contact_model'
  'description': "\n\n     contact_model\n\n  "
  'name': 'contact_model'
  'repo': 'wg-ros-pkg'
- 'brief': 'Finds checkerboards and returns their 6D poses'
  'description': "\n    Uses opencv to find checkboards and compute their 6D poses\
    \ with respect to the image. Requires the image to be calibrated.\n    Parameters:\n\
    \    display - show the checkerboard detection\n    rect%d_size_x - size of checker\
    \ in x direction\n    rect%d_size_y - size of checker in y direction\n    grid%d_size_x\
    \ - number of checkers in x direction\n    grid%d_size_y - number of checkers\
    \ in y direction\n    \n    There can be more than one grid%d declared, the numbers\
    \ should grow consecutively starting at 0.\n  "
  'name': 'checkerboard_detector2'
  'repo': 'alufr-ros-pkg'
- 'brief': 'Embedded version of ros'' opencv package'
  'description': "\n\n    This is the trimmed down version of ros' opencv we use for\
    \ embedded boards.\n\n    Warning: this conflicts with ros' opencv2 package which\
    \ builds the kitchen sink.\n\n  "
  'name': 'eros_opencv'
  'repo': 'eros'
- 'brief': 'OrocosMsgPkg'
  'description': "\n\n     OrocosMsgPkg\t1) contains self-defined msgs-types which\
    \ are used by Orocos\n\t\t\t2) contains a ROS-node that reads start_time from\
    \ a message and writes this to another message\n\n  "
  'name': 'OrocosMsgPkg'
  'repo': 'wg-ros-pkg'
- 'brief': ''
  'description': 'Stereo and single image rectification and disparity processing.'
  'name': 'stereo_image_proc_gpu'
  'repo': 'wg-ros-pkg'
- 'brief': 'task_fsm'
  'description': "\n\n     task_fsm\n\n  "
  'name': 'task_fsm'
  'repo': 'seabee3-ros-pkg'
- 'brief': 'kinect_teleop'
  'description': "\n\n     kinect_teleop\n\n  "
  'name': 'kinect_teleop'
  'repo': 'alufr-ros-pkg'
- 'brief': 'ds_turtle_2dnav'
  'description': "\n\n     ds_turtle_2dnav\n\n  "
  'name': 'ds_turtle_2dnav'
  'repo': 'bosch-ros-pkg'
- 'brief': 'pr2_interactive_segmentation'
  'description': "\n     pr2_interactive_segmentation segments objects in the cluttered\
    \ scenes by interacting with \n     the objects and tracking of 2D features.\n\
    \  "
  'name': 'pr2_interactive_segmentation'
  'repo': 'bosch-ros-pkg'
- 'brief': 'Drivers and Apps for Dexter, a hexapod'
  'description': ''
  'name': 'dexter'
  'repo': 'vanadium-ros-pkg'
- 'brief': 'clear_costmap_recovery'
  'description': "\n\n     This package provides a recovery behavior for the navigation\
    \ stack that attempts to clear space by reverting the costmaps used by the navigation\
    \ stack to the static map outside of a given area.\n\n  "
  'name': 'clear_costmap_recovery'
  'repo': 'navigation'
- 'brief': 'OpenRAVE Plugin for ROS Planning'
  'description': "\n    Contains robot ik solvers, planners, and commonly used functions\
    \ that integrate with the ROS framework.\n  "
  'name': 'orrosplanning'
  'repo': 'jsk-ros-pkg'
- 'brief': 'flyer_controller'
  'description': "\n\n    Control and teleoperation. High-level control manager and\
    \ individual control modes.\n\n  "
  'name': 'flyer_controller'
  'repo': 'starmac-ros-pkg'
- 'brief': 'GMM_classify'
  'description': "\n\n     GMM_classify\n\n  "
  'name': 'GMM_classify'
  'repo': 'usc-ros-pkg'
- 'brief': 'Driver for Videre Stereo cameras'
  'description': "\n        This driver supports both regular and STOC Videre Stereo\
    \ cameras. It exposes standard ROS interface for\n        cameras and publishes\
    \ camera_info and image_raw topics pair for both left and right imager of the\
    \ stereo\n        camera. This set of topics can change depending on the selected\
    \ processing mode (STOC devices only). Most\n        of the configuration can\
    \ be done while driver is running via dynamic_reconfigure GUI.\n    "
  'name': 'videre_stereo_cam'
  'repo': 'ua-ros-pkg'
- 'brief': 'pi_robot'
  'description': "\n\n     The Pi Robot Project\n\n  "
  'name': 'pi_robot1'
  'repo': 'pi-robot-ros-pkg'
- 'brief': 'ART vehicle tele-operation'
  'description': "\n\n     Tele-operation scripts for driving the ART autonomous vehicle\n\
    \     under human control.\n\n  "
  'name': 'art_teleop'
  'repo': 'utexas-art-ros-pkg'
- 'brief': 'multi_robot_visualization'
  'description': "\n\n     multi_robot_visualization\n\n  "
  'name': 'multi_robot_visualization'
  'repo': 'tum-ros-pkg'
- 'brief': 'Navigation stack configuration for Erratic robot'
  'description': "\n        This package contains configuration and launch files necessary\
    \ to run\n        ROS navigation stack on the Erratic robot.\n    "
  'name': 'erratic_navigation'
  'repo': 'erratic_robot'
- 'brief': 'ROS driver for a generic Linux joystick.'
  'description': "\n    The joy package contains joy_node, a node that interfaces\
    \ a generic Linux joystick to ROS. This node publishes a &quot;Joy&quot; message,\
    \ which contains the current state of each one of the joystick's buttons and axes.\n\
    \  "
  'name': 'joy'
  'repo': 'ros-pkg'
- 'brief': 'pose_model'
  'description': "\n\n     pose_model\n\n  "
  'name': 'pose_model'
  'repo': 'usc-ros-pkg'
- 'brief': 'libvml'
  'description': "\n\n     libvml\n\n  "
  'name': 'libvml'
  'repo': 'seabee3-ros-pkg'
- 'brief': 'nxt_assisted_teleop'
  'description': "\n\n     nxt_assisted_teleop\n\n  "
  'name': 'nxt_assisted_teleop'
  'repo': 'foote-nxt'
- 'brief': 'gazebo_test'
  'description': "\n\n     gazebo_test\n\n  "
  'name': 'gazebo_test'
  'repo': 'otl-ros-pkg'
- 'brief': 'pose_graph'
  'description': "\n    Pose Plotting tools\n  "
  'name': 'pose_plot'
  'repo': 'ccny_experimental'
- 'brief': 'turtlebot_navigation'
  'description': "\n\n     turtlebot_navigation\n\n  "
  'name': 'turtlebot_navigation'
  'repo': 'turtlebot_apps'
- 'brief': 'A very basic navigator simulator node for AUVs.'
  'description': "\n\n\tThis node produces very rough simulated navigation status\
    \ of an AUV based on the vehicle force requests it receives. It simulates neither\
    \ the hydrodynamics nor acceleration of the vehicle, but may serve as a good enough\
    \ approximation for testing most pilot functionality and higher level nodes. It\
    \ should not be used for tuning vehicle PID controllers.\n\n  "
  'name': 'auv_nav_sim'
  'repo': 'hwu-osl-ros-pkg'
- 'brief': 'sr_object_manipulation_smach'
  'description': "\n\n     sr_object_manipulation_smach\n\n  "
  'name': 'sr_object_manipulation_smach'
  'repo': 'sr_object_manipulation'
- 'brief': 'otl_gesture_roomba'
  'description': "\n\n     otl_gesture_roomba converts gesture msgs to roomba command\
    \ msgs.\n\n  "
  'name': 'otl_gesture_roomba'
  'repo': 'otl-ros-pkg'
- 'brief': 'Remaps data from and to the Shadow Robot hardware'
  'description': "\n\n     Contains different remappers to remap data coming from\
    \ an\n     actuator such as the cyberglove (Immersion) to Shadow Robot's\n   \
    \  hand. It also contains remapper to remap data coming from the\n     Shadow\
    \ hand to an other mechanism such as the cybergrasp\n     (Immersion).\n\n  "
  'name': 'sr_remappers'
  'repo': 'shadow_robot'
- 'brief': 'actionlib_tutorials'
  'description': "\n    This package provides detailed tutorials for using actions.\n\
    \n\n  "
  'name': 'actionlib_tutorials'
  'repo': 'ros-pkg'
- 'brief': 'task_recorder'
  'description': "\n\n     task_recorder\n\n  "
  'name': 'task_recorder'
  'repo': 'wg-ros-pkg'
- 'brief': 'iRobot Turtlebot ROS driver node'
  'description': "\n\n     ROS bindings for the Turtlebot/Roomba driver.\n\n     This\
    \ is based on otl_roomba driver by OTL, ported to use\n     turtlebot_driver instead.\
    \  This also contains a 'bonus' feature from\n     the turtlebot driver by Xuwen\
    \ Cao and Morgan Quigley.\n     \n  "
  'name': 'turtlebot_node'
  'repo': 'turtlebot'
- 'brief': 'hudson'
  'description': "\n\n     Python library for calling Hudson's REST-like API.\n\n\
    \  "
  'name': 'hudson'
  'repo': 'ros_release'
- 'brief': 'rl_common'
  'description': "\n\n     Common files required for RL agents and environments. Including\
    \ the interface defining agents and environments. Developed by <a href=\"http://www.cs.utexas.edu/~todd/\"\
    >Todd Hester</a> and <a href=\"http://www.cs.utexas.edu/~pstone/\">Peter Stone</a>\
    \ at the University of Texas at Austin.\n\n  "
  'name': 'rl_common'
  'repo': 'rl-texplore-ros-pkg'
- 'brief': 'turtle_actionlib'
  'description': "\n\n     turtle_actionlib demonstrates how to write an action server\
    \ and client with the turtlesim. The shape_server provides and action interface\
    \ for drawing regular polygons with the turtlesim. \n\n  "
  'name': 'turtle_actionlib'
  'repo': 'ros-pkg'
- 'brief': 'pr2_manipulation_process_module'
  'description': "\n\n     pr2_manipulation_process_module\n\n  "
  'name': 'pr2_manipulation_process_module'
  'repo': 'cram_pr2'
- 'brief': 'NXTLoader'
  'description': "\n\t\tNXTLoader\n\t"
  'name': 'lejosKinect'
  'repo': 'lejos-ros-pkg'
- 'brief': 'graspable_features'
  'description': "\n\n     graspable_features will be used to decide local graspable\
    \ features given user's click-and-drag operation on the stereo image.\n\n  "
  'name': 'graspable_features'
  'repo': 'wg-ros-pkg'
- 'brief': 'Example configuration and launch file for dynamixel_motor stack'
  'description': "\n        Example configuration and launch file for dynamixel_motor\
    \ stack.\n    "
  'name': 'dynamixel_tutorials'
  'repo': 'dynamixel_motor'
- 'brief': ''
  'description': "\n     Launch files for the perception components of the reem_arm_navigation\
    \ stack.\n     The perception components allow you to build a collision space\
    \ representation of the world.\n  "
  'name': 'reem_arm_navigation_perception'
  'repo': 'reem_arm_navigation'
- 'brief': 'tilting_servo'
  'description': "\n\n     A Dynamixel servo driver for tilting servo using in tilting\
    \ laser scanners or any other continuous tilting mechanism.\n\n  "
  'name': 'tilting_servo'
  'repo': 'astar-ros-pkg'
- 'brief': 'openhrp3'
  'description': "\n\n   OpenHRP3 : Robot software platform\n\nhttp://www.openrtp.jp/openhrp3/en/index.html\n\
    \nhttp://code.google.com/p/openhrp-aist-grx/\n\n  "
  'name': 'openhrp3'
  'repo': 'rtm-ros-robotics/rtmros_common'
- 'brief': 'corobot_teleop'
  'description': "\n\n     Teleoperation package that permits to control the Corobot.\
    \ It also permits to connect to a distant Corobot.\n     Data such as Camera,\
    \ sensor (IR, encoder, batterie life) values can be read.\n\n  "
  'name': 'corobot_teleop'
  'repo': 'roscorobot'
- 'brief': 'Computes euclidean distance transforms (EDT) of a 3-D voxel grid'
  'description': "\n\nThis package contains algorithms that can compute the\nEuclidean\
    \ Distance Transform (EDT) of a 3-D voxel grid. The input to these algorithms\
    \ is\nan array of points (which could represent the positions of obstacles in\
    \ the world). \nThe EDT provides a voxel grid in which in which each cell contains\
    \ the distance to the\nclosest obstacle. The VoxelGrid class can also be used\
    \ as a generic, templatized container for a discretized 3-D voxel grid.\n\n  "
  'name': 'distance_field'
  'repo': 'arm_navigation_experimental'
- 'brief': 'Fast and convenient type converters'
  'description': "\n\n     Some fast/convenient type converters, mostly for char strings\
    \ or strings.\n     These are not really fully fleshed out, alot of them could\
    \ use the addition for\n     the whole range of fundamental types (e.g. all integers,\
    \ not just int, unsigned int).\n     \n     They will come as the need arises.\n\
    \n  "
  'name': 'ecl_converters'
  'repo': 'ecl_core'
- 'brief': 'wouse'
  'description': "\n\n    The wouse package is software for the &quot;Wince-mouse&quot;:\
    \ optical mouse components mounted to a pair of glasses such that the mouse reports\
    \ the movement of the skin near the temples.  This device was developed under\
    \ the Robots for Humanity project to act as a reliable, wearable run-stop for\
    \ persons with severe physical disabilities.\n\n  "
  'name': 'wouse'
  'repo': 'gt-ros-pkg'
- 'brief': 'Tests scripts and I/O of qualification'
  'description': "\n  Regression and unit tests for nodes in qualification:\n   *\
    \ run_selftest.py\n  "
  'name': 'test_pr2_self_test'
  'repo': 'wg-ros-pkg'
- 'brief': ''
  'description': "\n    Block PCG, using block Jacobi preconditioner\n  "
  'name': 'bpcg'
  'repo': 'ros-pkg'
- 'brief': 'interactive_markers'
  'description': "\n\n     Interactive markers allow you to add a 3D user interface\n\
    \     to your application, which can be accessed from tools like RViz.\n\n  "
  'name': 'interactive_markers'
  'repo': 'ros-pkg'
- 'brief': 'marker_detector_tbot'
  'description': "\n\n     marker_detector_tbot\n\n  "
  'name': 'marker_detector_tbot'
  'repo': 'bosch-ros-pkg'
- 'brief': 'rfid_pf'
  'description': "\n\n     rfid_pf\n\n  "
  'name': 'rfid_pf'
  'repo': 'gt-ros-pkg'
- 'brief': 'arm_file_control'
  'description': "\n     Scripts to read tfs to file and to read in cartesian coodrinates\
    \ from a file and replay them \n\n\n  "
  'name': 'arm_file_control'
  'repo': 'bosch-ros-pkg'
- 'brief': 'Pattern generator bindings for dynamic-graph.'
  'description': "\n\n    FIXME\n\n  "
  'name': 'sot-pattern-generator'
  'repo': 'jrl-ros-pkg'
- 'brief': 'guardian_joystick_teleop'
  'description': "\n  Allows to use a joystick with the guardian_controller, sending\
    \ \n  the messages received through the joystick input, correctly \n  adapted,\
    \ to the &quot;guardian_controller/command&quot; topic.\n  "
  'name': 'guardian_joystick_teleop'
  'repo': 'guardian-ros-pkg'
- 'brief': 'ic2020_toro'
  'description': "\n\n     ic2020_toro\n\n  "
  'name': 'ic2020_toro'
  'repo': 'ic2020'
- 'brief': ''
  'description': "\n\n<p>\n\tTools for representing and updating surfels -- small\
    \ circular surface\n\tpatches\n</p>\n\n  "
  'name': 'surfel_reconstruction'
  'repo': 'wg-ros-pkg'
- 'brief': 'Projects laser readings into a point cloud, based on a set of recorded
    joint angles'
  'description': "\n     Projects laser readings into a point cloud, based on a set\
    \ of recorded joint angles\n     This package is experimental and unstable.\n\
    \     Expect its APIs to change.\n  "
  'name': 'laser_joint_projector'
  'repo': 'pr2_calibration'
- 'brief': 'event_based_haptics'
  'description': "\n\n     event_based_haptics\n\n  "
  'name': 'event_based_haptics'
  'repo': 'penn_lightweight_teleop'
- 'brief': 'tour_guide_vision'
  'description': "\n\n     tour_guide_vision\n\n  "
  'name': 'tour_guide_vision'
  'repo': 'cwru-ros-pkg'
- 'brief': 'collider - collision avoidance for tabletop manipulation using octomap'
  'description': "\n\n    collider - collision avoidance for tabletop manipulation\
    \ using octomap\n\n  "
  'name': 'collider'
  'repo': 'arm_navigation_experimental'
- 'brief': 'C++ interface class for controllers'
  'description': "\n   This package specifies the interface to a realtime controller.\
    \ A\n   controller that implements this interface can be executed by the\n   \
    \ <a href=\"http://www.ros.org/wiki/pr2_controller_manager\">controller\n  manager</a>\
    \ in the real time control loop. The package basically\n  contains the C++ controller\
    \ base class that all controllers need to\n  inherit from.\n  "
  'name': 'pr2_controller_interface'
  'repo': 'pr2_mechanism'
- 'brief': 'Build recipe for cross-compiling a minimal boost for embedded systems'
  'description': "\n\n\tThis provides a source package for compiling a minimal boost\
    \ ideally\n\ttargetting embedded systems.\n\t\n\tOrdinarily this is not useful\
    \ as you would install via your system's\n\tinstallation method (e.g. apt-get\
    \ for ubuntu), but for cross-compiling \n    it provides the recipe needed to\
    \ make a toolchain ros-ready.\n\n  "
  'name': 'eros_boost'
  'repo': 'eros'
- 'brief': 'sr_utilities'
  'description': "\n\n     sr_utilities\n\n  "
  'name': 'sr_utilities'
  'repo': 'shadow_robot'
- 'brief': 'demo_markers'
  'description': "\n    Skeleton Markers: Publish a list of joint markers for viewing\
    \ in RViz\n  "
  'name': 'demo_markers'
  'repo': 'pi-robot-ros-pkg'
- 'brief': 'remote_counter'
  'description': "\n\t\tA simple implementation of remote counters.\n\n  "
  'name': 'remote_counter'
  'repo': 'pandora-auth-ros-pkg'
- 'brief': 'SIA20D_Mesh_arm_navigation'
  'description': "\n\n     SIA20D_Mesh_arm_navigation\n\n  "
  'name': 'SIA20D_Mesh_arm_navigation'
  'repo': 'swri-ros-pkg'
- 'brief': 'kdl_parser_python'
  'description': "\n\n    Provides utilities for parsing the objects given by the\
    \ urdf_parser_python package into PyKDL trees.\n\n  "
  'name': 'kdl_parser_python'
  'repo': 'gt-ros-pkg'
- 'brief': 'Open Robotics Automation Virtual Environment'
  'description': "\nIn order to use, please add the following line in your bashrc:<br/>\n\
    \n<b>source `rospack find openrave`/openrave.bash</b>\n\n  "
  'name': 'openrave'
  'repo': 'jsk-ros-pkg'
- 'brief': 'bilibot_dashboard'
  'description': "\n\n     bilibot_dashboard\n\n  "
  'name': 'bilibot_dashboard'
  'repo': 'bilibot-ros-pkg'
- 'brief': 'ART vehicle observers'
  'description': "\n\n    Road obstacle observers for the ART autonomous vehicle.\n\
    \n  "
  'name': 'art_observers'
  'repo': 'utexas-art-ros-pkg'
- 'brief': 'point_cloud_filters'
  'description': "\n\n        point_cloud_filters\n\n    "
  'name': 'point_cloud_filters'
  'repo': 'ua-ros-pkg'
- 'brief': 'irobot_create_rustic'
  'description': "\n     Brown University V 104 of irobot create, 2009.\n     By Gheric\
    \ Speiginer and Keenan Black\n    \n     Modified by Michael Otte at University\
    \ of Colorado 2010 to work with ROS V 1.0 under the name irobot_create_rustic\n\
    \     \n  "
  'name': 'irobot_create_rustic'
  'repo': 'prairiedog'
- 'brief': 'pr2_gripper and_wrist_roll_sensor_controller'
  'description': "\n\n     The pr2_gripper_sensor_controller package is a real-time\
    \ controller that integrates signals from the PR2 hand-mounted accelerometer and\
    \ finger-mounted pressure sensors with motor control of the gripper joint to do\
    \ highly responsive sensing and low-latency closed-loop control.\n\n  "
  'name': 'pr2_gripper_and_wrist_roll_sensor_controller'
  'repo': 'penn_lightweight_teleop'
- 'brief': 'discreteMove_0_0_1'
  'description': "\nProvides a services with three discrete actions: left(1), forward(2),\
    \ and right(3).\n  "
  'name': 'discreteMove_0_0_1'
  'repo': 'brown-experimental'
- 'brief': 'A general arm planning and control interface'
  'description': "\n\nThe move_arm package provides an implementation of a action\
    \ (see the <a href=\"http://www.ros.org/wiki/actionlib\">actionlib</a> package)\
    \ that, given a goal in the world, will attempt to reach it with a robot arm.\
    \ The move_arm node links together a planner, trajectory monitor and trajectory\
    \ controller to acheive its goal. It supports any planner that provides a GetMotionPlan\
    \ interface and any controller that provides services for setting, querying and\
    \ canceling trajectories. The node is designed to be modular and so uses ROS services\
    \ for planning, control and IK and does minimal computation within the node itself.\
    \ \n\n  "
  'name': 'move_arm_warehouse'
  'repo': 'arm_navigation_experimental'
- 'brief': 'position_string_rviz_plugin_no_msgs'
  'description': "\n     rviz plugin for visualizing strings at given positions..\n\
    \  "
  'name': 'position_string_rviz_plugin'
  'repo': 'tum-ros-pkg'
- 'brief': 'Example application to get inverse kinematics of the WAM'
  'description': "\n\n     darm_example_ik\n\n  "
  'name': 're2darmSimExampleIK'
  'repo': 'darpa_arm_sim_servers'
- 'brief': 'REEM Ogre Mesh Files'
  'description': ''
  'name': 'reem_ogre'
  'repo': 'reem_simulation'
- 'brief': 'Launch files and configuration files for filtering REEM upper body motion
    plans'
  'description': ''
  'name': 'reem_arm_navigation_filtering'
  'repo': 'reem_arm_navigation'
- 'brief': 'pr2_oculesics_adapters'
  'description': "\n\n     pr2_oculesics_adapters\n\n  "
  'name': 'pr2_oculesics_adapters'
  'repo': 'usc-ros-pkg'
- 'brief': 'simple_occupancy_grid'
  'description': "\n\n     simple_occupancy_grid\n\n  "
  'name': 'simple_occupancy_grid'
  'repo': 'gt-ros-pkg'
- 'brief': 'A set of tools for using ROS from within realtime systems'
  'description': "\n\n    rosrt provides classes for interfacing with ROS from within\
    \ realtime systems, such as realtime-safe Publisher and Subscriber classes.\n\n\
    \  "
  'name': 'rosrt'
  'repo': 'ros_realtime'
- 'brief': 'astromech_reason'
  'description': "\n\n     astromech_reason\n\n  "
  'name': 'astromech_reason'
  'repo': 'astromech-ros'
- 'brief': 'geometry utility library'
  'description': "\n     Conversions and common functions of geometric data\n  "
  'name': 'geometry_util'
  'repo': 'wu-ros-pkg'
- 'brief': 'cob_robot_calibration'
  'description': "\n\n     cob_robot_calibration\n\n  "
  'name': 'cob_robot_calibration'
  'repo': 'cob_calibration'
- 'brief': 'The IgH EtherCAT master library'
  'description': "\nThis package compiles the user space library only, so no need\
    \ to worry about\nkernel headers.\n  "
  'name': 'igh_eml'
  'repo': 'tum-ros-pkg'
- 'brief': 'ros_apache2'
  'description': "\n\n     ros_apache2\n\n  "
  'name': 'ros_apache2'
  'repo': 'wg-ros-pkg'
- 'brief': 'stage_action_server'
  'description': "\n\n     stage_action_server\n\n  "
  'name': 'stage_action_server'
  'repo': 'flyatar'
- 'brief': 'fakeMsg'
  'description': "\n\n     fakeMsg\n\n  "
  'name': 'fakeMsg'
  'repo': 'brown-experimental'
- 'brief': 'coordination_server'
  'description': "\n\n     coordination_server\n\n  "
  'name': 'coordination_server'
  'repo': 'brown-experimental'
- 'brief': 'Mitsubishi PA10 Drivers and Controllers'
  'description': "\n    Contains a server to communicate with the ROS network and\
    \ move the PA10.\n    The server uses openrave-core to extract the PA-10 kinematics\
    \ and tool information.\n\n    First the PA10 driver and libraries must be installed.\
    \ Unfortunately the libraries are proprietary, so cannot be distributed with this\
    \ controller.\n  "
  'name': 'pa10controller'
  'repo': 'cmu-ros-pkg'
- 'brief': 'rve_render_client'
  'description': "\n\n     rve_render_client\n\n  "
  'name': 'rve_render_client'
  'repo': 'visualization_engine'
- 'brief': 'cythonRobotDescription'
  'description': "\n\n     cythonRobotDescription\n\n  "
  'name': 'cytonRobotDescription'
  'repo': 'rtc-us-ros-pkg-trunk'
- 'brief': 'fiducial'
  'description': "\n\n  fiducial is a set of tools for easily\n  using fiducial markers\
    \ in code and in ROS. \n  It currently supports... checker-boards. \n  It will\
    \ support... 2d barcodes. \n  It will never support(directly)... ARTag.\n\n  "
  'name': 'fiducial'
  'repo': 'wg-ros-pkg'
- 'brief': 'joint_group_position_controller'
  'description': "\n\n     joint_group_position_controller\n\n  "
  'name': 'joint_group_position_controller'
  'repo': 'reem_controllers'
- 'brief': 'fake_voice_recog is fake voice recognizer'
  'description': "\n\n    fake_voice_recog can recognize volume of voice.\n\n  "
  'name': 'fake_voice_recog'
  'repo': 'otl-ros-pkg'
- 'brief': 'wgtest_data_loader'
  'description': "\n\n     wgtest_data_loader\n\n  "
  'name': 'wgtest_data_loader'
  'repo': 'wg-ros-pkg'
- 'brief': 'sap_pkg'
  'description': "\n\n     sap_pkg\n\n  "
  'name': 'k-saap_pkg'
  'repo': 'auction_methods_stack'
- 'brief': 'flyatar_avatar'
  'description': "\n\n     flyatar_avatar\n\n  "
  'name': 'flyatar_avatar'
  'repo': 'flyatar'
- 'brief': 'husky_bringup'
  'description': "\n\n     This package provides a launch file to bring up the Husky\n\
    \     hardware interface in a way that will be accessible and\n     usable by\
    \ the other software in husky_teleop and husky_kinect.\n\n     In the future,\
    \ a script will be provided to allow this to\n     be controlled by the service\
    \ command and launched on startup\n     of your machine.\n\n  "
  'name': 'husky_bringup'
  'repo': 'clearpath-ros-pkg'
- 'brief': 'eband_local_planner'
  'description': "\n\n     The eband_local_planner package implements a plugin to\
    \ the base_local_planner. It implements the Elastic Band method on the SE2 manifold.\n\
    \n  "
  'name': 'eband_local_planner'
  'repo': 'navigation_experimental'
- 'brief': 'handle_detection'
  'description': "\n\n     handle_detection\n\n  "
  'name': 'handle_detection'
  'repo': 'mapping'
- 'brief': 'iRobot Create ROS driver node'
  'description': "\n\n     ROS bindings for the Create/Roomba driver.\n\n     This\
    \ is based on otl_roomba driver by OTL, ported to use\n     create_driver instead.\
    \  This also contains a 'bonus' feature from\n     the turtlebot driver by Xuwen\
    \ Cao and Morgan Quigley.\n\n     Forked from turtlebot project to make generic\
    \ Create driver\n     \n  "
  'name': 'create_node'
  'repo': 'bilibot-ros-pkg'
- 'brief': 'Messages for passing pose/object detection results'
  'description': "\n\n    posedetection_msgs provides messages and services to facilitate\
    \ passing pose detection results and features.\n\n  "
  'name': 'posedetection_msgs'
  'repo': 'jsk-ros-pkg'
- 'brief': 'cob_touch'
  'description': "\n\n     cob_touch\n\n  "
  'name': 'cob_touch'
  'repo': 'cob_driver'
- 'brief': 'nao_teleop'
  'description': "\n\n     nao_teleop\n\n  "
  'name': 'nao_teleop'
  'repo': 'alufr-ros-pkg'
- 'brief': 'A simple package for rfid phidget'
  'description': "\n\nThis package provides a way to display text to the rfid phidget.\
    \  \n\n"
  'name': 'phidget_rfid'
  'repo': 'foote-phidget'
- 'brief': 'openmpi_devel'
  'description': "\n\n    The Open MPI Project is an open source MPI-2 implementation\
    \ that is developed\n    and maintained by a consortium of academic, research,\
    \ and industry partners.\n    Open MPI is therefore able to combine the expertise,\
    \ technologies, and\n    resources from all across the High Performance Computing\
    \ community in order to\n    build the best MPI library available. Open MPI offers\
    \ advantages for system and\n    software vendors, application developers and\
    \ computer science researchers.\n\n  "
  'name': 'openmpi_devel'
  'repo': 'wg-ros-pkg'
- 'brief': 'openrave_actionlib'
  'description': "\n    Bindings between openrave's controller interface and ROS's\
    \ action lib interface for controlling robots.\n  "
  'name': 'openrave_actionlib'
  'repo': 'jsk-ros-pkg'
- 'brief': 'octomap_server - map server for the OctoMap 3D maps'
  'description': "\n\n     octomap_server loads a 3D map (as Octree-based OctoMap)\
    \ and distributes it to other nodes in a compact binary format. \n\t See octomap_saver\
    \ on how to request or save a map file. A visualization of the occupied cells\
    \ is sent as MarkerArray.\n\n  "
  'name': 'octomap_server'
  'repo': 'alufr-ros-pkg'
- 'brief': 'ptu_controller'
  'description': "\n      This package contains a node that controls the PTU-46-17.5\
    \ pan-tilt unit from Directed Perceptions. It uses the ptu46 driver from Player\
    \ with slight modifications.\n  "
  'name': 'ptu_controller'
  'repo': 'ubc-ros-pkg'
- 'brief': 'rfid_hardware'
  'description': "\n\n     rfid_hardware\n\n  "
  'name': 'rfid_hardware'
  'repo': 'gt-ros-pkg'
- 'brief': 'kuka_fri'
  'description': "\n    control node for the KUKA lightweight arm, using the\n   \
    \ Fast Research Interface (FRI) over UDP.\n  "
  'name': 'kuka_fri'
  'repo': 'tum-ros-pkg'
- 'brief': 'Geometric Tools'
  'description': "\n\n    Geometric Tools is a library gathering algorithms for real-time\n\
    \    computer graphics and physics, mathematics, geometry, numerical\n    analysis,\
    \ and image analysis.\n\n  "
  'name': 'geometric_tools'
  'repo': 'stacks/geometric_tools'
- 'brief': 'cpp11'
  'description': "\n\n     cpp11\n\n  "
  'name': 'cpp11'
  'repo': 'usc-ros-pkg'
- 'brief': 'vision_communications'
  'description': "\n\n     The vision_communications package provides messages and\
    \ services for Vision\n\n  "
  'name': 'vision_communications'
  'repo': 'pandora-auth-ros-pkg'
- 'brief': 'rve_transformer'
  'description': "\n\n     rve_transformer\n\n  "
  'name': 'rve_transformer'
  'repo': 'visualization_engine'
- 'brief': 'haptic_points'
  'description': "\n\n     Experimental work for haptic rendering of point clouds\n\
    \n  "
  'name': 'hviz'
  'repo': 'wg-ros-pkg'
- 'brief': 'cljlo_utils'
  'description': "\n\n     cljlo_utils\n\n  "
  'name': 'cljlo_utils'
  'repo': 'cram_highlevel'
- 'brief': 'city_turtle'
  'description': "\n\n     city_turtle\n\n  "
  'name': 'city_turtle'
  'repo': 'ccny_experimental'
- 'brief': 'iTaSC_pr2'
  'description': "\n\t    This package contains the itasc robot component for a PR2\n\
    \        This is part of the iTaSC-Skill framework, itasc_robots_objects\t\n\t"
  'name': 'itasc_pr2'
  'repo': 'itasc_robots_objects'
- 'brief': 'pcl_registration_experimental'
  'description': "\n    Register point clouds (new experimental stuff).\n  "
  'name': 'pcl_registration_experimental'
  'repo': 'wg-ros-pkg'
- 'brief': 'A topic-based rpc mechanism'
  'description': "\n\n     rve_rpc provides a rpc (remote procedure call) mechanism\
    \ similar to services, but using topics for communication.\n\n  "
  'name': 'rve_rpc'
  'repo': 'visualization_engine'
- 'brief': 'cython_driver'
  'description': "\n\n     cyton_driver\n\n  "
  'name': 'cyton_driver'
  'repo': 'rtc-us-ros-pkg-trunk'
- 'brief': 'type introspection library for C++'
  'description': "\n      This library offers an introspection mechanism for C/C++\
    \ value-types. I.e.\n      it offers a way to represent types, and to manipulate\
    \ in-memory values\n      that are instances of those types.\n\n      A Ruby binding\
    \ is included, which gives a fast and transparent\n      modification of C/C++\
    \ in-memory types from Ruby, and an associated\n      interface to call C functions\
    \ from shared libraries.\n  "
  'name': 'typelib'
  'repo': 'orocos_toolchain'
- 'brief': 'Launch files for simulating and controlling a Pioneer 5-DOF robotic arm'
  'description': "\n\n     Launch files for simulating and controlling a Pioneer 5-DOF\
    \ robotic arm.\n\n  "
  'name': 'pioneer_arm_launch'
  'repo': 'gt-ros-pkg'
- 'brief': 'test_rostime'
  'description': "\n\n     test_rostime\n\n  "
  'name': 'test_rostime'
  'repo': 'ros_comm'
- 'brief': 'robot_setup_tf'
  'description': "\n\n     robot_setup_tf\n\n  "
  'name': 'robot_setup_tf_tutorial'
  'repo': 'navigation_tutorials'
- 'brief': 'rxbag visualization plugins for calibration'
  'description': "\n  "
  'name': 'pr2_calibration_rxbag_plugins'
  'repo': 'wg-ros-pkg'
- 'brief': 'rl_2dnav'
  'description': "\n\n     The remote lab 2D navigation package provides an interface\
    \ to navigate between a number of fixed positions. \n\n  "
  'name': 'rl_2dnav'
  'repo': 'bosch-ros-pkg'
- 'brief': 'icreate_navigation'
  'description': "\n  Launch files and configuration to launch the navigation stack\
    \ on the irobot_create.\n  "
  'name': 'icreate_navigation'
  'repo': 'cmr-ros-pkg'
- 'brief': ''
  'description': 'Single image rectification and color processing.'
  'name': 'image_proc'
  'repo': 'ros-pkg'
- 'brief': 'rosworldwind'
  'description': "\n\t\t<p>\n\tThe rosworldwind adapter provides an interface to be\
    \ able to\n\tuse the NASA World Wind technology and ROS.\n\t\t</p>\n\t"
  'name': 'rosworldwind'
  'repo': 'rosworldwind'
- 'brief': 'pr2_computer_performance'
  'description': "\n\n     pr2_computer_performance\n\n  "
  'name': 'pr2_computer_performance'
  'repo': 'wg-ros-pkg'
- 'brief': 'parallel_quickstep'
  'description': "\n    <p>\n      Parallel implementation of quickstep, configurable\
    \ for CUDA, OpenCL and OpenMP.\n    </p>\n     <p>\n       The package by default\
    \ is compiled with CPU quickstep.  To enable GPU capabilities, overlay this package\
    \ and recompile\n       with CUDA drivers installed.\n     </p>\n  "
  'name': 'parallel_quickstep'
  'repo': 'ros-pkg'
- 'brief': 'ROS Process Launcher'
  'description': "\n\nroslaunch is a tool for easily launching multiple ROS <a href=\"\
    http://ros.org/wiki/Nodes\">nodes</a> locally and remotely via SSH, as well as\
    \ setting parameters on the <a href=\"http://ros.org/wiki/Parameter Server\">Parameter\
    \ Server</a>. It includes options to automatically respawn processes that have\
    \ already died. roslaunch takes in one or more XML configuration files (with the\
    \ <tt>.launch</tt> extension) that specify the parameters to set and nodes to\
    \ launch, as well as the machines that they should be run on. \n\n  "
  'name': 'roslaunch'
  'repo': 'ros_comm'
- 'brief': 'vcstools'
  'description': "\n\n     Python libraries for manipulation version control software\
    \ systems (e.g. SVN, Git, Hg) in a uniform manner.\n\n  "
  'name': 'vcstools'
  'repo': 'ros_release'
- 'brief': 'aaai_object_detection'
  'description': "\n\n     aaai_object_detection\n\n  "
  'name': 'aaai_object_detection'
  'repo': 'bosch-ros-pkg'
- 'brief': 'gui_communications'
  'description': "\n\n   \tCommunications Requirements for PANDORA GUI\n\n  "
  'name': 'gui_communications'
  'repo': 'pandora-auth-ros-pkg'
- 'brief': 'cob_tray_sensors'
  'description': "\n\n     cob_tray_sensors\n\n  "
  'name': 'cob_tray_sensors'
  'repo': 'cob_driver'
- 'brief': 'UA Wizard of Oz experiments with Charlie robot'
  'description': "\n\n     ua_woz_experiment\n\n  "
  'name': 'ua_woz_experiment'
  'repo': 'ua-ros-pkg'
- 'brief': 'felz_detector'
  'description': "\n     A ROS node that wraps DPM(Deformable Parts Model) detector\
    \ code. One node is responsible for publishing \n     hypothesis of one particular\
    \ class. It used the model trained using DPM training code in the DPM node.  \
    \  \n  "
  'name': 'felz_detector'
  'repo': 'ubc-ros-pkg'
- 'brief': 'sr_movements'
  'description': "\n\n    Contains a node which can be used to take the hand through\
    \ a series of movements (perfect for tuning\n    controllers for example).\n\n\
    \  "
  'name': 'sr_movements'
  'repo': 'shadow_robot'
- 'brief': 'katana_tabletop_manipulation_launch'
  'description': "\n\n     katana_tabletop_manipulation_launch\n\n  "
  'name': 'katana_tabletop_manipulation_launch'
  'repo': 'uos-ros-pkg'
- 'brief': 'ART vehicle servo device drivers'
  'description': "\n\n     ROS nodes for the ART autonomous vehicle servo devices.\n\
    \n  "
  'name': 'art_servo'
  'repo': 'utexas-art-ros-pkg'
- 'brief': 'tritech_micron'
  'description': "\n\n     tritech_micron\n\n  "
  'name': 'tritech_micron'
  'repo': 'seabee3-ros-pkg'
- 'brief': 'wb_robot_tracking'
  'description': "\n\n     wb_robot_tracking\n\n  "
  'name': 'wb_robot_tracking'
  'repo': 'vmi-ros-pkg'
- 'brief': 'color_blob_finder'
  'description': "\n\n     color_blob_finder\n\n  "
  'name': 'color_blob_finder'
  'repo': 'usc-ros-pkg'
- 'brief': 'Computes SIFT Features'
  'description': "\n    For every image, computes its sift features and send a new\
    \ message with the image, its intrinsic parameters, and the features.\n    Parameters\
    \ include:\n    display - shows the image on the local computer\n  "
  'name': 'imagesift'
  'repo': 'jsk-ros-pkg'
- 'brief': 'SSC32py controls servos attached to a SSC-32 controller'
  'description': "\n    SSC32py provides a library to interact with the SSC32 controller\
    \ by Lynxmotion.  \n    \n\tIt is based strongly on the Robotis library by Healthcare\
    \ Robotics Lab at Georgia Tech,\n\tand provides a full server that will listen\
    \ to angle commands and publish the current\n\tstate of servos attached to the\
    \ SSC-32\n  "
  'name': 'ssc32py'
  'repo': 'mk-ros-pkg'
- 'brief': 'veltrobot_teleop'
  'description': "\n\n     Control robots with the keyboard, Sony PS3 six axis controller,\
    \ or \n     Microsoft XBox Kinect.\n\n  "
  'name': 'veltrobot_teleop'
  'repo': 'veltrop-ros-pkg'
- 'brief': 'Robot Contact Point Description Format interfaces'
  'description': "\n\n    Robot Contact Point Description Format interfaces definition.\n\
    \n    Define the model structure (contacts and model) as C++ classes.\n\n  "
  'name': 'rcpdf_interface'
  'repo': 'stacks/robot_contact_point'
- 'brief': ''
  'description': "\n  A simple viewer for ROS image topics. Includes a specialized\
    \ viewer\n  for stereo + disparity images.\n  "
  'name': 'image_view'
  'repo': 'ros-pkg'
- 'brief': 'tf_to_pose'
  'description': "\n\n     tf_to_pose\n\n  "
  'name': 'tf_to_pose'
  'repo': 'usc-ros-pkg'
- 'brief': 'Orocos youbot_controller Component package'
  'description': "\n\n        This package contains the components of the youbot_controller\
    \ package\n\n    "
  'name': 'youbot_controller'
  'repo': 'euRobotics_orocos_ws'
- 'brief': 'veltrobot_data'
  'description': "\n\n     This package has no code.  It contains launchers, config\
    \ data, \n     and pose/motion data for the packages in the veltrop-ros-pkg\n\
    \     repository.  Also contains code to import poses from Kondo's\n     Heart2Heart\
    \ software.\n\n  "
  'name': 'veltrobot_data'
  'repo': 'veltrop-ros-pkg'
- 'brief': 'tidyup_grasp_actions'
  'description': "\n    This package contains state and action definitions for the\n\
    \    continual_planning_executive that interface the tidyup grasping application.\n\
    \  "
  'name': 'tidyup_grasp_actions'
  'repo': 'alufr-ros-pkg'
- 'brief': 'local_app_manager'
  'description': "\n\n     local_app_manager\n\n  "
  'name': 'local_app_manager'
  'repo': 'jsk-ros-pkg'
- 'brief': 'nav_pcontroller'
  'description': "\n\n     simple P-Controller for a holonomic robot base.\n\n  "
  'name': 'navp_action'
  'repo': 'ias_common'
- 'brief': 'pointcloud to laserscan'
  'description': "\n\n     Converts a 3D Point Cloud into a 2D laser scan.  This is\
    \ useful for making devices like the Kinect appear like a laser scanner for 2D-based\
    \ algorithms (e.g. laser-based SLAM).\n\n  "
  'name': 'pointcloud_to_laserscan'
  'repo': 'turtlebot'
- 'brief': 'glados'
  'description': "\n\n     GLaDOS Robot Package\n\n  "
  'name': 'glados'
  'repo': 'UCLA-robomagellan'
- 'brief': 'astromech_cam'
  'description': "\n\n     astromech_cam: Nodes to access and display cameras. Camera\
    \ access\n     is handled by OpenCV.\n\n  "
  'name': 'astromech_sense'
  'repo': 'astromech-ros'
- 'brief': 'A fast interpolated navigation function'
  'description': "\n\nnavfn provides a fast interpolated navigation function that\
    \ can be used to create plans for a mobile base. The planner assumes a circular\
    \ robot and operates on a costmap to find a minimum cost plan from a start point\
    \ to an end point in a grid. The navigation function is computed with Dijkstra's\
    \ algorithm, but support for an A* heuristic may also be added in the near future.\
    \ navfn also provides a ROS wrapper for the navfn planner that adheres to the\
    \ nav_core::BaseGlobalPlanner interface specified in <a href=\"http://ros.org/wiki/nav_core\"\
    >nav_core</a>.\n\n "
  'name': 'navfn'
  'repo': 'navigation'
- 'brief': 'two_lwr_defs'
  'description': "\n\n     two_lwr_defs\n\n  "
  'name': 'two_lwr_defs'
  'repo': 'two_lwr_robot'
- 'brief': 'stanford_parser'
  'description': "\n    stanford_parser contains parts of the Stanford Parser necessary\
    \ for stanford_parser_ros.  For the full Stanford Parser source, please see: http://nlp.stanford.edu/software/lex-parser.shtml\n\
    \  "
  'name': 'stanford_parser'
  'repo': 'roboframenet'
- 'brief': 'hector_sensors_gazebo'
  'description': "\n\n     hector_sensors_gazebo depends on the necessary plugins\
    \ for using the sensors from the <a href=\"http://www.ros.org/wiki/hector_sensors_description\"\
    >hector_sensors_description</a> package inside gazebo simulation.\n\n  "
  'name': 'hector_sensors_gazebo'
  'repo': 'tu-darmstadt-ros-pkg'
- 'brief': 'A local planner for a mobile base that uses the Dynamic Window Approach
    to local control.'
  'description': "\n\n    This package provides an implementation of the Dynamic Window\
    \ Approach to\n    local robot navigation on a plane. Given a global plan to follow\
    \ and a\n    costmap, the local planner produces velocity commands to send to\
    \ a mobile\n    base. This package supports any robot who's footprint can be represented\
    \ as\n    a convex polygon or cicrle, and exposes its configuration as ROS parameters\n\
    \    that can be set in a launch file. The parameters for this planner are also\n\
    \    dynamically reconfigurable. This package's ROS wrapper adheres to the\n \
    \   BaseLocalPlanner interface specified in the <a href=\"http://ros.org/wiki/nav_core\"\
    >nav_core</a> package.\n\n  "
  'name': 'dwa_local_planner'
  'repo': 'navigation'
- 'brief': 'hrl_clickable_display'
  'description': "\n\n     Provides a simple opencv display which publishes left and\
    \ right mouse clicks along with the pixel location of the click.\n\n  "
  'name': 'hrl_clickable_display'
  'repo': 'gt-ros-pkg'
- 'brief': 'smclib'
  'description': "\n    The State Machine Compiler (SMC) from http://smc.sourceforge.net/\n\
    \    converts a language-independent description of a state machine\n    into\
    \ the source code to support that state machine.\n\n    This package contains\
    \ the libraries that a compiled state machine\n    depends on, but it does not\
    \ contain the compiler itself.\n\n  "
  'name': 'smclib'
  'repo': 'bond_core'
- 'brief': 'lisp-unit'
  'description': "\n      A unit testing framework for common lisp.\n  "
  'name': 'lisp_unit'
  'repo': 'cram_pl'
- 'brief': 'XML files for running the move_base node on a PR2 in an odometric frame.'
  'description': "\n    This package holds xml files for running the <a href=\"http://www.ros.org/wiki/move_base\"\
    >move_base</a> node on a PR2 robot in an odometric frame. No static map is needed\
    \ for the <a href=\"http://www.ros.org/wiki/move_base\">move_base</a> node in\
    \ this configuration.\n  "
  'name': 'pr2_navigation_local'
  'repo': 'pr2_navigation'
- 'brief': 'augmented_object_selection'
  'description': "\n\n     augmented_object_detector\n\n  "
  'name': 'augmented_object_selection'
  'repo': 'bosch-ros-pkg'
- 'brief': 'bagproc_video'
  'description': "\n\n     bagproc_video\n\n  "
  'name': 'bagproc_video'
  'repo': 'wg-ros-pkg'
- 'brief': 'fawkes_lua'
  'description': "\n    Lua modules imported and synced with Fawkes (http://www.fawkesrobotics.org)\n\
    \  "
  'name': 'fawkes_lua'
  'repo': 'behavior_engine'
- 'brief': 'roseasy'
  'description': "\n\n     roseasy\n\n  "
  'name': 'roseasy'
  'repo': 'vmi-ros-pkg'
- 'brief': 'katana_object_manipulation_launch'
  'description': "\n\n     katana_object_manipulation_launch\n\n  "
  'name': 'katana_object_manipulation_launch'
  'repo': 'uos-ros-pkg'
- 'brief': 'face_contour_detector'
  'description': "\n  \tTakes an image of a face (and a mask image) and extracts characteristic\
    \ lines and returns an image of those.\n  "
  'name': 'face_contour_detector'
  'repo': 'alufr-ros-pkg'
- 'brief': 'ccny_pcl'
  'description': "\n\n     ccny_pcl\n\n  "
  'name': 'ccny_pcl'
  'repo': 'ccny_experimental'
- 'brief': 'bimanual_manipulation_msgs'
  'description': "\n\n     bimanual_manipulation_msgs\n\n  "
  'name': 'bimanual_manipulation_msgs'
  'repo': 'wg-ros-pkg'
- 'brief': 'joy_controller'
  'description': "\n\n     Joystick driver to control the roomba and to start a 3D\
    \ scan.\n\n  "
  'name': 'joy_controller'
  'repo': 'roblab-whge-ros-pkg'
- 'brief': 'ROS wrapper for Phidgets sensors'
  'description': "\n        ROSification of Phidgets sensors. Publishes sensor data\
    \ to ROS topics.\n    "
  'name': 'phidgets_ros'
  'repo': 'ua-ros-pkg'
- 'brief': 'rod4_node'
  'description': "\n\n     Leuze rotoScan ROD-4 laser rangefinder driver.  The driver\n\
    \     currently supports ROD-4 models connected via Ethernet only but\n     could\
    \ be extended to interface with RS422 models.\n\n  "
  'name': 'rod4_node'
  'repo': 'dfki-sks-ros-pkg'
- 'brief': 'Schunk Motion Controller Server'
  'description': "\n    Implements the Schunk Motion communication protocol as described\
    \ at http://www.schunk.com.\n    The protocol can function on RS232 serial, CAN,\
    \ and Profibus. This package implements the serial communications.\n  "
  'name': 'schunk_motion_controllers'
  'repo': 'cmu-ros-pkg'
- 'brief': 'Stochastic Trajectory Optimization for Motion Planning'
  'description': "\n\n  "
  'name': 'stomp_motion_planner'
  'repo': 'wg-ros-pkg'
- 'brief': 'A ROS wrapper for stanford-wbc.sourceforge.net'
  'description': "\n    This is a ROS wrapper for the Stanford Whole-Body Control\n\
    \    framework from http://stanford-wbc.sourceforge.net/.\n  "
  'name': 'wbc_core'
  'repo': 'whole_body_control'
- 'brief': 'udpmulti_transport'
  'description': "\n\n     udpmulti_transport\n\n  "
  'name': 'udpmulti_transport'
  'repo': 'ethzasl_message_transport'
- 'brief': 'grocery_processing'
  'description': "\n\n     grocery_processing\n\n  "
  'name': 'grocery_processing'
  'repo': 'wg-ros-pkg'
- 'brief': 'moo'
  'description': "\n\n    moo makes your device moo.  Implemented as an RFNServer.\
    \  Credit goes to those who made chirp for the turtlebot; I used most of their\
    \ code writing this.\n\n  "
  'name': 'moo'
  'repo': 'roboframenet'
- 'brief': 'pr2_execution_trace_visualization'
  'description': "\n\n     pr2_execution_trace_visualization\n\n  "
  'name': 'pr2_execution_trace_visualization'
  'repo': 'tum-ros-pkg'
- 'brief': 'velocity_safety'
  'description': "\n\n\tA node to filter join velocity messages\n\n  "
  'name': 'velocity_safety'
  'repo': 'uuisrc-ros-pkg'
- 'brief': 'Fixed Object'
  'description': "\n        This package contains a Fixed Object, which is an itasc\
    \ object\n\t    Part of the iTaSC-Skill framework, itasc_robots_objects.\n    "
  'name': 'fixed_object'
  'repo': 'itasc_robots_objects'
- 'brief': 'collvoid_turtlebot'
  'description': "\n\n     collvoid_turtlebot\n\n  "
  'name': 'collvoid_turtlebot'
  'repo': 'multi_robot_collision_avoidance'
- 'brief': 'powercube_ptu_process_module'
  'description': "\n\n     powercube_ptu_process_module\n\n  "
  'name': 'powercube_ptu_process_module'
  'repo': 'cram_rosie'
- 'brief': 'pose_corrector_test'
  'description': "\n\n     pose_corrector_test provides a variety of test programs\
    \ for the \n     pose_corrector ROS package.\n\n  "
  'name': 'pose_corrector_test'
  'repo': 'wg-ros-pkg'
- 'brief': 'A general navigation stack'
  'description': "\n\nThe move_base package provides an implementation of an action\
    \ (see the <a href=\"http://www.ros.org/wiki/actionlib\">actionlib</a> package)\
    \ that, given a goal in the world, will attempt to reach it with a mobile base.\
    \ The move_base node links together a global and local planner to accomplish its\
    \ global navigation task. It supports any global planner adhering to the nav_core::BaseGlobalPlanner\
    \ interface specified in the <a href=\"http://www.ros.org/wiki/nav_core\">nav_core</a>\
    \ package and any local planner adhering to the nav_core::BaseLocalPlanner interface\
    \ specified in the <a href=\"http://www.ros.org/wiki/nav_core\">nav_core</a> package.\
    \ The move_base node also maintains two costmaps, one for the global planner,\
    \ and one for a local planner (see the <a href=\"http://www.ros.org/wiki/costmap_2d\"\
    >costmap_2d</a> package) that are used to accomplish navigation tasks.\n\n  "
  'name': 'move_base'
  'repo': 'navigation'
- 'brief': 'XML files for running the move_base node on a Wubble in an odometric frame.'
  'description': "\n        This package holds xml files for running the <a href=\"\
    http://www.ros.org/wiki/move_base\">move_base</a> node on a Wubble robot in an\
    \ odometric frame. No static map is needed for the <a href=\"http://www.ros.org/wiki/move_base\"\
    >move_base</a> node in this configuration.\n    "
  'name': 'wubble_navigation_local'
  'repo': 'ua-ros-pkg'
- 'brief': 'pr2_arm_navigation_actions'
  'description': "\n\n     pr2_arm_navigation_actions\n\n  "
  'name': 'pr2_arm_navigation_actions'
  'repo': 'wg-ros-pkg'
- 'brief': 'checkerboard_pose_estimation'
  'description': "\n\n     checkerboard_pose_estimation\n\n  "
  'name': 'checkerboard_pose_estimation'
  'repo': 'pr2_plugs'
- 'brief': 'sparse_stereo'
  'description': "\n\n     sparse_stereo\n\n  "
  'name': 'sparse_stereo'
  'repo': 'seabee3-ros-pkg'
- 'brief': 'starmac_tools'
  'description': "\n\n    Various tools, e.g. for loading bagfile data into Python\
    \ or converting to MATLAB.\n\n  "
  'name': 'starmac_tools'
  'repo': 'starmac-ros-pkg'
- 'brief': 'bspline'
  'description': "\n\n    This software is written by Gary Granger of the National\
    \ Center for\n    Atmospheric Research (NCAR), sponsored by the National Science\
    \ Foundation\n    (NSF). The algorithm is based on the cubic spline described\
    \ by Katsuyuki\n    Ooyama in Montly Weather Review, Vol 115, October 1987.  This\n\
    \    implementation has benefited from comparisons with a previous FORTRAN\n \
    \   implementation by James L. Franklin, NOAA/Hurricane Research Division.\n\n\
    \    This package does not modify the BSpline library in any way; it simply\n\
    \    provides a convenient way to download and compile the headers and library\n\
    \    in a way that can be managed by the ROS dependency system.\n\n  "
  'name': 'bspline'
  'repo': 'wg-ros-pkg'
- 'brief': 'A Python-based implementation of the ROS serial protocol.'
  'description': "\n    A Python-based implementation of the ROS serial protocol.\
    \ \n  "
  'name': 'rosserial_python'
  'repo': 'rosserial'
- 'brief': 'manipulation_primitives'
  'description': "\n\n     manipulation_primitives\n\n  "
  'name': 'manipulation_primitives'
  'repo': 'wg-ros-pkg'
- 'brief': 'Templates to create qt-ros packages'
  'description': "\n\n     Provides templates and scripts for creating qt-ros packages\n\
    \     (similar to roscreate-pkg).\n\n  "
  'name': 'qt_create'
  'repo': 'qt_ros'
- 'brief': 'sbpl_door_planner_plugin'
  'description': ' sbpl_door_planner_plugin '
  'name': 'clean_door_planner'
  'repo': 'sbpl_door_planning'
- 'brief': 'cyphy_mk_falcon'
  'description': "\ncyphy Falcon control with Mikrokopter. This package allows to\
    \ control a MikroKopter using Falcon joystick.\n  "
  'name': 'cyphy_mk_falcon'
  'repo': 'cyphy'
- 'brief': 'Remote control package for the Nao humanoid robot.'
  'description': "\n\t<p>\n     Remote control package for the Nao robot. \n     Provides\
    \ a node for Nao joystick teleoperation and odometry remapping into ROS format.\n\
    \     The motion commands should be sent to a <a href=\"http://www.ros.org/wiki/nao_driver\"\
    >\n     nao_driver</a> node, which in turn sends back robot state and odometry.\
    \     \n    </p>\n\n  "
  'name': 'nao_remote'
  'repo': 'alufr-ros-pkg'
- 'brief': 'URDF Xml robot description parser.'
  'description': "\n    This package contains a C++ parser for the Unified Robot\n\
    \    Description Format (URDF), which is an XML format for representing\n    a\
    \ robot model.  The parser reads a URDF XML robot description, and\n    creates\
    \ a C++ URDF model. Although it is possible to directly use\n    this parser when\
    \ working with URDF robot descriptions, the\n    preferred user API is found in\
    \ the urdf package.\n  "
  'name': 'urdf_parser'
  'repo': 'robot_model'
- 'brief': 'hrl_lib'
  'description': "\n        hrl_lib\n    "
  'name': 'hrl_lib'
  'repo': 'gt-ros-pkg'
- 'brief': 'grocery_bot'
  'description': "\n\n     grocery_bot\n\n  "
  'name': 'grocery_bot'
  'repo': 'wg-ros-pkg'
- 'brief': 'track_image_points'
  'description': "\n\n     track_image_points\n\n  "
  'name': 'track_image_contours'
  'repo': 'flyatar'
- 'brief': 'pi_robot_arm_navigation'
  'description': "\n\n     pi_robot_arm_navigation\n\n  "
  'name': 'pi_robot_arm_navigation'
  'repo': 'pi-robot-ros-pkg'
- 'brief': 'corobot_pantilt'
  'description': "\n\n     corobot_pantilt is actually the package logitech_pantilt\
    \ from Dallas Geocker that was just renamed and integrated in corobot stack for\
    \ an easy installation of the Corobot stack.\n     The script executing mjpg-streamer\
    \ necessary for the logitech_pantilt package has been integrated in this corobot_pantilt\
    \ package. Now you won't have to download mjpg-streamer and execute the script\
    \ yourself, only a make in the corobot_pantilt/src/mjpg-streamer/ folder is necessary.\n\
    \n  "
  'name': 'corobot_pantilt'
  'repo': 'roscorobot'
- 'brief': 'overhead_planner'
  'description': "\n\n     overhead_planner\n\n  "
  'name': 'overhead_planner'
  'repo': 'usc-ros-pkg'
- 'brief': 'cl_port'
  'description': "\n\n     cl_port\n\n  "
  'name': 'cl_port'
  'repo': 'roll'
- 'brief': 'leg_detector'
  'description': "\n\n     leg_detector\n\n  "
  'name': 'leg_detector'
  'repo': 'wg-ros-pkg'
- 'brief': 'joint_state_gui'
  'description': "\n    small gui to publish joint_states (for debugging robot descriptions)\n\
    \  "
  'name': 'joint_state_gui'
  'repo': 'tum-ros-pkg'
- 'brief': 'gazebo_render_stl'
  'description': "\n\n     renders an stl mesh given some parameters about the model,\
    \ the camera and the environment.\n     TBD\n\n  "
  'name': 'gazebo_render_stl'
  'repo': 'wg-ros-pkg'
- 'brief': 'rosjs_assisted_teleoperation'
  'description': "\n\n     rosjs_assisted_teleoperation\n\n  "
  'name': 'rosjs_assisted_teleoperation'
  'repo': 'bosch-ros-pkg'
- 'brief': 'starmac_asctec_adapter'
  'description': "\n\n    Bridge between starmac_flyer vehicle-agnostic code and the\
    \ asctec_autopilot driver package\n\n  "
  'name': 'starmac_robots_asctec'
  'repo': 'starmac-ros-pkg'
- 'brief': 'C++ toolkit'
  'description': "\n    This library is a collection of useful C++ classes\n  "
  'name': 'utilmm'
  'repo': 'orocos_toolchain'
- 'brief': 'camera_pose_calibration'
  'description': "\n    This package provides the pipeline to calibrate the relative\
    \ 6D\n    poses between multiple camera's. The calibration can be preformed\n\
    \    online, and the results are published to tf in realtime.\n  "
  'name': 'camera_pose_calibration'
  'repo': 'camera_pose'
- 'brief': 'realtime_publisher_test'
  'description': "\n\n     realtime_publisher_test\n\n  "
  'name': 'realtime_publisher_test'
  'repo': 'wg-ros-pkg'
- 'brief': 'continual_planning_executive'
  'description': "\n     An executive for continual planning, i.e. an execution, planning,\
    \ monitoring cycle.\n  "
  'name': 'continual_planning_executive'
  'repo': 'alufr-ros-pkg'
- 'brief': 'cob_canopen_motor'
  'description': "\n\n     The package cob_canopen_motor implements a controller-drive\
    \ component which is connected to a can-bus and works with a canopen-interface.\
    \ &quot;CanDriveItf&quot; provides a - more or less - generic interface to the\
    \ controller-drive components. &quot;CanDrvie...&quot; then implements a specific\
    \ setup, e.g. an ELMO Harmonica Controller in case of the &quot;CanDriveHarmonica&quot;.\n\
    \n  "
  'name': 'cob_canopen_motor'
  'repo': 'cob_driver'
- 'brief': 'Simple obstacle avoidance behavior'
  'description': "\n\n    <p>\n      This node implements a simple &quot;freespace&quot;\
    \ (obstacle avoidance) behavior.\n      It subscribes to a 2D laser scan and always\
    \ tries to steer towards the\n      largest open space.\n    </p>\n\n    <p>\n\
    \      It was tested on the Kurt robot platform, but should work on any robot\n\
    \      that has a 2D laser scanner and accepts\n      <a href=\"http://www.ros.org/doc/api/geometry_msgs/html/msg/Twist.html\"\
    >Twist</a>\n      messages.\n    </p>\n\n  "
  'name': 'kurt_freespace'
  'repo': 'uos-ros-pkg'
- 'brief': 'Utilities for converting laser scans to pointclouds'
  'description': '


    This package contains a class for converting from a 2D laser scan as defined by

    sensor_msgs/LaserScan into a point cloud as defined by sensor_msgs/PointCloud

    or sensor_msgs/PointCloud2. In particular, it contains functionality to account

    for the skew resulting from moving robots or tilting laser scanners.


    '
  'name': 'laser_geometry'
  'repo': 'ros-pkg'
- 'brief': 'simple_modules'
  'description': "\n   This package contains some simple planner modules for testing.\n\
    \  "
  'name': 'simple_modules'
  'repo': 'alufr-ros-pkg'
- 'brief': 'quad_simple_planner'
  'description': "\n\n     quad_simple_planner\n\n  "
  'name': 'quad_simple_planner'
  'repo': 'ccny_experimental'
- 'brief': 'parsec_dashboard'
  'description': "\n    A simple dashboard for monitoring Parsec. Includes topic_monitor,\
    \ a tool for monitoring the frequency and delays of arbitrary topics.\n  "
  'name': 'parsec_dashboard'
  'repo': 'parsec'
- 'brief': 'point_cloud_bag_file_reader'
  'description': "\n\n     point_cloud_bag_file_reader\n\n  "
  'name': 'point_cloud_bag_file_reader'
  'repo': 'wg-ros-pkg'
- 'brief': 'oro_action_server'
  'description': "\n  Implementation of Action Server for orocos components.\n  "
  'name': 'oro_action_server'
  'repo': 'orocos_tools'
- 'brief': 'camera_calibration_parsers'
  'description': "\n\n     camera_calibration_parsers contains routines for reading\
    \ and writing camera calibration parameters.\n\n  "
  'name': 'camera_calibration_parsers'
  'repo': 'ros-pkg'
- 'brief': 'parallel_util'
  'description': "\n    parallel_util is a collection of the utility scripts for parallel\
    \ processing.\n  "
  'name': 'parallel_util'
  'repo': 'jsk-ros-pkg'
- 'brief': 'erratic_slam'
  'description': "\n     rtcus_erratic_slam\n  "
  'name': 'rtcus_erratic_slam'
  'repo': 'rtc-us-ros-pkg-trunk'
- 'brief': 'rosjava_actionlib_tutorial'
  'description': "\n     rosjava_actionlib_tutorial\n  "
  'name': 'rosjava_actionlib_tutorial'
  'repo': 'rosjava_core'
- 'brief': 'Finds Cliques in a graph'
  'description': "\n    Cliquer is a set of C routines for finding cliques in an arbitrary\
    \ weighted graph. It uses an exact branch-and-bound algorithm recently developed\
    \ by Patric \xD6sterg\xE5rd. It is designed with the aim of being efficient while\
    \ still being flexible and easy to use.\n  "
  'name': 'cliquer'
  'repo': 'cmu-ros-pkg'
- 'brief': 'ctx2140'
  'description': "\n\n     ctx2140 provides power measurement and configuration setting\
    \ facilities for\n     the Carnetix CNX-P2140 DC-DC power supply. It uses the\
    \ ctxapi library, available\n     from http://ram.umd.edu/wiki/Public/Software/ctxapi\n\
    \n  "
  'name': 'ctx2140'
  'repo': 'umd-ros-pkg'
- 'brief': 'monitors'
  'description': "\n    Monitoring packages for the janitorial stack.\n  "
  'name': 'monitors'
  'repo': 'wg-ros-pkg'
- 'brief': 'pr2_common_action_msgs'
  'description': "\n\n     pr2_common_action_msgs\n\n  "
  'name': 'pr2_common_action_msgs'
  'repo': 'wg-ros-pkg'
- 'brief': 'soem_master'
  'description': "\n\n     soem_master contains a C++ wrapper around soem_core, a\
    \ factory object to register and create drivers and a RTT component that will\
    \ automatically create the drivers and their services for all the slave for which\
    \ a driver is known.\n\n  "
  'name': 'soem_master'
  'repo': 'soem'
- 'brief': 're2darmGazeboReplay'
  'description': "\n\n     re2darmGazeboRepaly\n\n  "
  'name': 're2darmGazeboReplay'
  'repo': 'darpa_arm_sim_servers'
- 'brief': 'collision_space_ccd_test'
  'description': "\n\n     collision_space_ccd_test\n\n  "
  'name': 'collision_space_ccd_test'
  'repo': 'arm_navigation_experimental'
- 'brief': 'gevicam_trigger'
  'description': "\n\n     gevicam_trigger\n\n  "
  'name': 'gevicam_trigger'
  'repo': 'wg-ros-pkg'
- 'brief': 'astromech_samples'
  'description': "\n\n     astromech_samples: Some simple samples\n\n  "
  'name': 'astromech_samples'
  'repo': 'astromech-ros'
- 'brief': 'sbpl_cart_planner'
  'description': "\n\n     sbpl_cart_planner\n\n  "
  'name': 'sbpl_cart_planner'
  'repo': 'wg-ros-pkg'
- 'brief': 'collvoid_msgs'
  'description': "\n\n     collvoid_msg\n\n  "
  'name': 'collvoid_msgs'
  'repo': 'multi_robot_collision_avoidance'
- 'brief': 'serial'
  'description': "\n\n     serial\n\n  "
  'name': 'serial_segway_rmp'
  'repo': 'segway-rmp-ros-pkg'
- 'brief': 'wubble_vision'
  'description': "\n\n     wubble_vision\n\n  "
  'name': 'color_based_tracking'
  'repo': 'ua-ros-pkg'
- 'brief': 'elektron_dashboard'
  'description': "\n\n     Dashboard for monitoring Elektron robot, both it's computer\
    \ and internals.\n\n  "
  'name': 'elektron_dashboard'
  'repo': 'elektron_gui'
- 'brief': 'bilibot_node'
  'description': "\n\n     bilibot_node\n\n  "
  'name': 'bilibot_node'
  'repo': 'bilibot-ros-pkg'
- 'brief': 'android library package for jmdns'
  'description': "\n\n     Ros-wraps jmdns as an android library.\n\n  "
  'name': 'zeroconf_android_jmdns'
  'repo': 'zeroconf_android'
- 'brief': 'roar'
  'description': "\n\n   The ROS Opensource Audio Recognizer (ROAR). This package\
    \ allows you to use any linux-compatible (ALSA) microphone (including both analog\
    \ and USB microphones) to create/train models of discrete audio sounds. Then,\
    \ in real-time, ROAR can be used to detect these same sounds as they occur in\
    \ the environment.\n\n  "
  'name': 'roar'
  'repo': 'roar_stack'
- 'brief': 'navigation_waypoints_server'
  'description': "\n\n     navigation_waypoints_server\n\n  "
  'name': 'navigation_waypoints_server'
  'repo': 'parsec'
- 'brief': 'mapping_rviz_plugin'
  'description': "\n\n     mapping_rviz_plugin\n\n  "
  'name': 'mapping_rviz_plugin'
  'repo': 'arm_navigation'
- 'brief': 'safe_teleop_pr2'
  'description': "\n     Launch files for running safe_teleop_base on pr2\n  "
  'name': 'safe_teleop_pr2'
  'repo': 'bosch-ros-pkg'
- 'brief': 'cuda'
  'description': "\n\n     This package pulls in NVIDIA's CUDA toolkit, drivers and\
    \ SDK.\n\n  "
  'name': 'cuda'
  'repo': 'umd-ros-pkg'
- 'brief': 'simple_cartesian_controller'
  'description': "\n\n     simple_cartesian_controller\n\n  "
  'name': 'simple_cartesian_controller'
  'repo': 'wg-ros-pkg'
- 'brief': 'comp_ehow'
  'description': "\n\n     Prolog routines for interfacing the ehow.com import functions\
    \ developed at TUM.\n     Code for the paper &quot;Understanding and Executing\
    \ Instructions for Everyday\n     Manipulation Tasks from the World Wide Web&quot;,\
    \ written by Moritz Tenorth\n     and Daniel Nyga (ICRA 2010)\n\n  "
  'name': 'comp_ehow'
  'repo': 'tum-ros-pkg'
- 'brief': 'OROCOS KDL RTT plugin'
  'description': "\n        \n        This package contains the KDL RTT bindings\n\
    \n    "
  'name': 'kdl_typekit'
  'repo': 'rtt_geometry'
- 'brief': 'busbot_launch'
  'description': "\n\n     busbot_launch\n\n  "
  'name': 'busbot_launch'
  'repo': 'bosch-ros-pkg'
- 'brief': 'ar_pose_world_convertor'
  'description': "\n\n     ar_pose_world_convertor: This message takes the ar pose\
    \ message and ask TF for the translation to \n\tthe world frame and publishes\
    \ this as a message with the original covariance. \n    A demonstration of its\
    \ use can be found in ar_pose_demo package.\n\tREMARK: The covariance of the camera\
    \ to the world should also be taken into account, but for the\n\tmoment beeing\
    \ this doesn't happen.\n\n  "
  'name': 'ar_pose_world_convertor'
  'repo': 'camera_pose_estimation'
- 'brief': 'rosie_pr2_gripper_action'
  'description': "\n\n     rosie_pr2_gripper_action\n\n  "
  'name': 'rosie_pr2_gripper_action'
  'repo': 'tum-ros-pkg'
- 'brief': 'erratic_navigation_apps'
  'description': "\n        erratic_navigation_apps\n    "
  'name': 'erratic_navigation_apps'
  'repo': 'erratic_robot'
- 'brief': 'jsk_semantic_maps'
  'description': "\n\n    Semantic maps of different rooms at the JSK lab at the University\
    \ of Tokyo.\n\n  "
  'name': 'jsk_semantic_maps'
  'repo': 'jsk-ros-pkg'
- 'brief': 'find_object_planner'
  'description': "\n\n     find_object_planner\n\n  "
  'name': 'find_object_planner'
  'repo': 'wg-ros-pkg'
- 'brief': 'hrl_rfh_fall_2011'
  'description': "\n\n     hrl_rfh_fall_2011\n\n  "
  'name': 'hrl_rfh_fall_2011'
  'repo': 'gt-ros-pkg'
- 'brief': 'belt_transmission'
  'description': "\n\n     belt_transmission\n\n  "
  'name': 'belt_transmission'
  'repo': 'wg-ros-pkg'
- 'brief': 'pointcloud_compress'
  'description': "\n\n     pointcloud_compress\n\n  "
  'name': 'pointcloud_compress'
  'repo': 'uuisrc-ros-pkg'
- 'brief': 'A generic driver for USB camera that are supported by V4L'
  'description': ''
  'name': 'usb_cam'
  'repo': 'bosch-ros-pkg'
- 'brief': 'Waypoint based pilot node for an AUV.'
  'description': "\n\n     The AUV pilot subscribes to navigation status messages\
    \ and waypoint and manual force request messages. Waypoint requests engage cascaded\
    \ PID controllers to move the vehicle to the required point. Manual requests override\
    \ the 'autopilot', and are passed straight on.\n\n  "
  'name': 'auv_pilot'
  'repo': 'hwu-osl-ros-pkg'
- 'brief': 'surf_object_recognition'
  'description': "\n\n     surf_test\n\n  "
  'name': 'surf_object_recognition'
  'repo': 'ucsb-ros-pkg'
- 'brief': 'pi_head_tracking_3d_part1'
  'description': "\n     Head Tracking in 3D Part 1\n  "
  'name': 'pi_head_tracking_3d_part1'
  'repo': 'pi-robot-ros-pkg'
- 'brief': 'flyer_est'
  'description': "\n\n    State estimation.\n\n  "
  'name': 'flyer_est'
  'repo': 'starmac-ros-pkg'
- 'brief': 'pr2_battery_charge_discharge'
  'description': "\n\n     pr2_battery_charge_discharge\n\n  "
  'name': 'pr2_battery_charge_discharge'
  'repo': 'wg-ros-pkg'
- 'brief': 'elevator_move_base_pr2'
  'description': "\n\n     elevator_move_base_pr2\n\n  "
  'name': 'elevator_move_base_pr2'
  'repo': 'jsk-ros-pkg'
- 'brief': 'turtlebot_gazebo'
  'description': "\n\n     turtlebot_gazebo\n\n  "
  'name': 'turtlebot_gazebo'
  'repo': 'turtlebot_simulator'
- 'brief': 'android_ce_control'
  'description': "\n    \n    VMI Cognitive Environment Control for Android\n\n  \
    \  This package is not part of a ROS Package. It needs to be handled in a special\
    \ way. Still - it's beta.\n \n  "
  'name': 'android_ce_control'
  'repo': 'vmi-ros-pkg'
- 'brief': 'Height map obstacle detection'
  'description': "\n\n    Obstacle detection for 3D point clouds using a height map\
    \ algorithm.\n\n  "
  'name': 'velodyne_height_map'
  'repo': 'utexas-art-ros-pkg'
- 'brief': 'skiller'
  'description': "\n     Skill Execution and Runtime. This is the mid-level for reactive\
    \ behavior\n     entities (skills) of the behavior engine.\n  "
  'name': 'skiller'
  'repo': 'skiller'
- 'brief': 'my_opencv_tests'
  'description': "\n\n     my_opencv_tests\n\n  "
  'name': 'my_opencv_tests'
  'repo': 'smart-robotics-ros-pkg'
- 'brief': 'ART vehicle navigation'
  'description': "\n\n     Navigation nodes for controlling the ART autonomous vehicle.\n\
    \n     This is a port to ROS of some of the Player 2D navigation code\n     used\
    \ on the vehicle for the 2007 DARPA Urban Challenge\n     competition.\n\n  "
  'name': 'art_nav'
  'repo': 'utexas-art-ros-pkg'
- 'brief': 'pi_head_tracking_3d_part2'
  'description': "\n     Head Tracking in 3D Part 2\n  "
  'name': 'pi_head_tracking_3d_part2'
  'repo': 'pi-robot-ros-pkg'
- 'brief': 'A specific shadowhand package for computing finger Kinematics derived
    from arm_kinematics'
  'description': "\n    A specific shadowhand package derived from arm_kinematics,\
    \ for computing both forward and backward kinematics for the fingers except thumb.\n\
    \    Solution is analytic. Developed as an alternative to arm_kinematics that\
    \ cannot solve coupled joints.\n  "
  'name': 'sr_kinematics'
  'repo': 'shadow_robot'
- 'brief': 'block_build_manager'
  'description': "\n\n     block_build_manager\n\n  "
  'name': 'gazebo_block_manipulation'
  'repo': 'brown-experimental'
- 'brief': 'PR2 Ogre Mesh Files'
  'description': "\n    \n    This package contains PR2 Ogre mesh files used for visualization\
    \ and collision as\n    defined at Willow Garage.\n    \n  "
  'name': 'pr2_ogre'
  'repo': 'wg-ros-pkg'
- 'brief': 'nxt_robot_sensor_car'
  'description': "\n\n     The nxt_robot_sensor_car package provides a nxt robot with\
    \ four sensors. For instructions on building\n     the nxt robot load the sensor_car.lxf\
    \ into the LEGO Digital Designer\n     <a href=\"http://ldd.lego.com/\">(ldd.lego.com)</a>\
    \ and select the building guide mode. This robot\n     uses the <a href=\"http://mindstorms.lego.com/en-us/Products/Ultrasonic+Sensor/9846.aspx\"\
    > nxt lego ultrasonic sensor</a>,\n     the <a href=\"http://www.ldraw.org/cgi-bin/ptdetail.cgi?f=parts/64892.dat\"\
    > nxt lego color sensor</a>,\n     the <a href=\"http://www.hitechnic.com/cgi-bin/commerce.cgi?preadd=action&amp;key=NGY1044\"\
    > hitechnic gryo sensor</a>,\n     and the <a href=\"http://www.hitechnic.com/cgi-bin/commerce.cgi?preadd=action&amp;key=NAC1040\"\
    > hitechnic acclerometer sensor</a>.\n\n\n  "
  'name': 'nxt_robot_sensor_car'
  'repo': 'foote-nxt'
- 'brief': 'maps'
  'description': "\n\n     maps\n\n  "
  'name': 'JKU_maps'
  'repo': 'JKU_Robotic_Stack'
- 'brief': 'wubble_world_2d'
  'description': "\n\n     wubble_world_2d\n\n    "
  'name': 'wubble_world_2d'
  'repo': 'ua-ros-pkg'
- 'brief': 'pr2_gripper_grasp_planner_primitives'
  'description': "\n\n     pr2_gripper_grasp_planner_primitives\n\n  "
  'name': 'pr2_gripper_grasp_planner_primitives'
  'repo': 'wg-ros-pkg'
- 'brief': 'pr2_tasks_transforms'
  'description': "\n\n     pr2_tasks_transforms\n\n  "
  'name': 'pr2_tasks_transforms'
  'repo': 'wg-ros-pkg'
- 'brief': 'rtt_ros_integration_sensor_msgs'
  'description': "\n    \n    Provides all rtt typekits for ROS sensor_msgs\n    \n\
    \  "
  'name': 'rtt_ros_integration_sensor_msgs'
  'repo': 'orocos_toolchain_ros'
- 'brief': 'rospy tests'
  'description': "\n    rospy unit and integration test framework.\n  "
  'name': 'test_rospy'
  'repo': 'ros_comm'
- 'brief': 'srvc'
  'description': "\n\n     NIPS demo\n\n  "
  'name': 'nips_demo'
  'repo': 'ubc-ros-pkg'
- 'brief': 'pi_robot_bringup'
  'description': "\n\n     Startup files for Pi Robot\n\n  "
  'name': 'pi_bringup'
  'repo': 'pi-robot-ros-pkg'
- 'brief': 'remote_mutex'
  'description': "\n\tA remote mutex implementation for mutually exlusive access to\
    \ nodes\n\n  "
  'name': 'remote_mutex'
  'repo': 'pandora-auth-ros-pkg'
- 'brief': 'isr_maps'
  'description': "\n\n     The isr_maps package contains maps of the ISR and arenas\
    \ throughout the research labs. Centralized storage for commonly used maps for\
    \ Stage world files and map_server nodes.\n\n  "
  'name': 'isr_maps'
  'repo': 'lse_resources'
- 'brief': 'Orocos geometric_semantics_orocos_typekit_kdl Component package'
  'description': "\n        This package contains the components of the geometric_semantics_orocos_typekit_kdl\
    \ package, containing typekit code for KDL support of the geometric semantics\n\
    \    "
  'name': 'geometric_semantics_orocos_typekit_kdl'
  'repo': 'geometric_relations_semantics'
- 'brief': 'rcf_base'
  'description': "\n\n     rcf_base\n     \n     This package contains a base library\
    \ for rcf nodes.\n     \n     All rcf nodes can be derived from the base node\
    \ class.\n\n  "
  'name': 'rcf_base'
  'repo': 'roblab-whge-ros-pkg'
- 'brief': 'hai_sandbox'
  'description': "\n\n     hai_sandbox\n\n  "
  'name': 'hai_sandbox'
  'repo': 'gt-ros-pkg'
- 'brief': 'Kuka FRI typekit package'
  'description': "\n        This package contains the components of the Kuka FRI typekit\
    \ package\n    "
  'name': 'kuka_lwr_fri'
  'repo': 'lwr_hardware'
- 'brief': 'simulation_semantics'
  'description': "\n\n     simulation_semantics\n\n    "
  'name': 'simulation_semantics'
  'repo': 'ua-ros-pkg'
- 'brief': 'training_data'
  'description': "\n\n     training_data\n\n  "
  'name': 'training_data'
  'repo': 'ubc-ros-pkg'
- 'brief': 'mapping_ias_msgs'
  'description': "\n\n     mapping_ias_msgs\n\n  "
  'name': 'mapping_ias_msgs'
  'repo': 'mapping'
- 'brief': 'CvBridge'
  'description': "\n\n    This contains CvBridge, which converts between ROS\n   \
    \ Image messages and OpenCV images.\n\n  "
  'name': 'cv_bridge'
  'repo': 'ros-pkg'
- 'brief': 'test_rosservice'
  'description': "\n\n     Tests for the rosservice tool\n\n  "
  'name': 'test_rosservice'
  'repo': 'ros_comm'
- 'brief': 'audio_common_msgs'
  'description': "\n    Messages for transmitting audio via ROS\n  "
  'name': 'audio_common_msgs'
  'repo': 'audio_common'
- 'brief': 'trex_core contains the core of TREX prior to ROS integration'
  'description': "\n    This package contains TREX (initially developed at the Monterey\
    \ Bay Aquarium Research Institute), \n    and EUROPA from the NASA Ames Research\
    \ Center. This package does not modify these \n    3rd party libraries in any\
    \ way; it simply provides a convenient way to download and build the\n    headers\
    \ and libraries in a way that can be managed by the ROS dependency system.\n  "
  'name': 'trex'
  'repo': 'wg-ros-pkg'
- 'brief': 'Common ROS Services'
  'description': "\n\n    Common service definitions. Currently just the 'Empty' service.\n\
    \n  "
  'name': 'std_srvs'
  'repo': 'ros_comm'
- 'brief': 'Bullet Physics Engine'
  'description': "\n    <p>\n    This package contains version 2.79 of the Bullet\
    \ professional\n    free 3D Game Multiphysics Library.  The ROS package automatically\n\
    \    downloads, extracts and compiles a tarball.  For each major\n    release\
    \ of the Bullet library, the tarball will get updated.  The\n    Bullet library\
    \ provided by this ROS package is slightly different\n    from the official Bullet\
    \ release.\n    </p>\n    <p>\n      This usage of bullet compiles with the flags\n\
    \      -DBT_USE_DOUBLE_PRECISION -DBT_EULER_DEFAULT_ZYX set.\n    </p>\n"
  'name': 'bullet'
  'repo': 'bullet'
- 'brief': 'kb_computable_client'
  'description': "\n\n     kb_computable_client\n\n     utils for querying external\
    \ information, e.g. the poses of objects from jlo,\n     from within Prolog\n\n\
    \  "
  'name': 'kb_computable_client'
  'repo': 'tum-ros-pkg'
- 'brief': 'starmac_controller_testing'
  'description': "\n\n     starmac_controller_testing\n\n  "
  'name': 'starmac_controller_testing'
  'repo': 'starmac-ros-pkg'
- 'brief': 'openni_multitracker'
  'description': "\n\nopenni_multitracker broadcasts multiple OpenNI skeleton frame\
    \ sets using tf.\n\n  "
  'name': 'openni_multitracker'
  'repo': 'usc-ros-pkg'
- 'brief': 'handle_detector2D'
  'description': "\n\n     handle_detector2D\n\n  "
  'name': 'handle_detection2D'
  'repo': 'mapping'
- 'brief': 'CRAM utilities.'
  'description': "\n    This packages contains some basic lisp utilities. This includes\n\
    \    pattern matching and lazy lists.\n  "
  'name': 'cram_utilities'
  'repo': 'cram_pl'
- 'brief': ''
  'description': "\n<p>\n    amcl is a probabilistic localization system for a robot\
    \ moving in\n    2D. It implements the adaptive (or KLD-sampling) Monte Carlo\n\
    \    localization approach (as described by Dieter Fox), which uses a\n    particle\
    \ filter to track the pose of a robot against a known map.\n</p>\n<p>\n    This\
    \ node is derived, with thanks, from Andrew Howard's excellent\n    'amcl' Player\
    \ driver.\n</p>\n  "
  'name': 'amcl'
  'repo': 'navigation'
- 'brief': 'neo_msgs'
  'description': "\n\n     neo_msgs\n\n  "
  'name': 'neo_msgs'
  'repo': 'neo_common'
- 'brief': 'manualcontroller'
  'description': "\n\n     manualcontroller\n\n  "
  'name': 'manualcontroller'
  'repo': 'vmi-ros-pkg'
- 'brief': 'Simulates a Katana arm in Gazebo'
  'description': "\n\n    This package starts a Neuronics Katana robot arm in the\
    \ Gazebo simulation environment. It is modeled after the <a href=\"http://www.ros.org/wiki/pr2_arm_gazebo\"\
    >pr2_arm_gazebo</a> package by John Hsu.\n\n  "
  'name': 'katana_arm_gazebo'
  'repo': 'uos-ros-pkg'
- 'brief': 'actuator_array_example'
  'description': "\n\n     actuator_array_example\n\n  "
  'name': 'actuator_array_example'
  'repo': 'gt-ros-pkg'
- 'brief': 'Confidence-Based Autonomy (CBA) implementation for ROS'
  'description': "\n \tAn implementation of the Learning from Demonstration algorithm\
    \ Confidence-Based Autonomy (CBA) built for ROS.\n  "
  'name': 'cba'
  'repo': 'wpi-rail-ros-pkg'
- 'brief': 'img_test'
  'description': "\n\n     img_test\n\n  "
  'name': 'img_test'
  'repo': 'otl-ros-pkg'
- 'brief': 'nxtstatus'
  'description': "\n\t\tNXTStatus\n\t"
  'name': 'bumperCar'
  'repo': 'lejos-ros-pkg'
- 'brief': 'Licensing details for eros'
  'description': "\n\n  <p>\n     Maintains the eros license details.\n  </p>\n  "
  'name': 'eros_license'
  'repo': 'eros'
- 'brief': 'joint_position_controller'
  'description': "\n    This package contains a simple joint position controller.\
    \ The controller follows PR2's controller structure and \n    can be used in combination\
    \ with the pr2_controller_manager. It creates a KDL::Tree based on the robot's\
    \ URDF model.\n    All joints inside this tree are then controlled independently\
    \ of each other using a PD control scheme.\n  "
  'name': 'joint_position_controller'
  'repo': 'reem_teleop'
- 'brief': 'srdf'
  'description': "\n\n    SRDF (Semantic Robot Description Format) is a representation\
    \ of\n    semantic information about robots.\n\n  "
  'name': 'srdf'
  'repo': 'robot_model'
- 'brief': 'application_client'
  'description': "\n\n     application_client\n\n  "
  'name': 'application_client'
  'repo': 'ros_applications'
- 'brief': 'rtcus_kinect_joystick'
  'description': "\n\n     rtcus_kinect_joystick\n\n  "
  'name': 'rtcus_kinect_joystick'
  'repo': 'rtc-us-ros-pkg-branches'
- 'brief': 'yason'
  'description': "\nYASON is a Common Lisp library for encoding and decoding data\
    \ in the JSON (JavaScript Object Notation) interchange format.\nhttp://www.cliki.net/YASON\n\
    \  "
  'name': 'yason'
  'repo': 'cram_highlevel'
- 'brief': 'URDF robot model of the Nao humanoid, to be used with robot_state_publisher'
  'description': "\n\n     nao_description - Description of the Nao robot model that\
    \ can be used with robot_state_publisher\n\t to display the robot's state of joint\
    \ angles.\n\n  "
  'name': 'nao_description'
  'repo': 'alufr-ros-pkg'
- 'brief': 'application_manager'
  'description': "\n\n     application_manager\n\n  "
  'name': 'application_manager'
  'repo': 'ros_applications'
- 'brief': 'hydra_pr2_teleop'
  'description': "\n     hydra_pr2_teleop\n  "
  'name': 'hydra_pr2_teleop'
  'repo': 'stanford-ros-pkg'
- 'brief': 'roslib tests'
  'description': "\n    Unit tests verifying that roslib is operating as expected.\n\
    \  "
  'name': 'test_roslib_comm'
  'repo': 'ros_comm'
- 'brief': 'ForceTorque_msgs'
  'description': "\n\n     ForceTorque_msgs\n\n  "
  'name': 'ForceTorque_msgs'
  'repo': 'darpa_arm_msgs'
- 'brief': 'ueyecamera'
  'description': "\n\n     ueyecamera\n\n  "
  'name': 'ueyecamera'
  'repo': 'ueyecamera'
- 'brief': 'collada_urdf_jsk_patch'
  'description': "\n\n     unaccepted patch for collada_urdf\n\n  "
  'name': 'collada_urdf_jsk_patch'
  'repo': 'jsk-ros-pkg'
- 'brief': 'tools for comparing motion planners'
  'description': "\n "
  'name': 'mpbench'
  'repo': 'wg-ros-pkg'
- 'brief': 'ROS C++ client library'
  'description': "\n\n<p>\n    roscpp is a C++ implementation of ROS. It provides\n\
    \    a <a href=\"http://www.ros.org/wiki/Client%20Libraries\">client\n    library</a>\
    \ that enables C++ programmers to quickly interface with\n    ROS <a href=\"http://ros.org/wiki/Topics\"\
    >Topics</a>,\n    <a href=\"http://ros.org/wiki/Services\">Services</a>,\n   \
    \ and <a href=\"http://ros.org/wiki/Parameter Server\">Parameters</a>.\n</p>\n\
    <p>\n    roscpp is the most widely used ROS client library and is designed to\n\
    \    be the high-performance library for ROS.\n</p>\n  "
  'name': 'roscpp'
  'repo': 'ros_comm'
- 'brief': 'NaoIK'
  'description': "\n\n     NaoIK\n\n  "
  'name': 'NaoIK'
  'repo': 'brown-experimental'
- 'brief': 'pi_arm_navigation_part1'
  'description': "\n\n     pi_arm_navigation_part1\n\n  "
  'name': 'pi_arm_navigation_part1'
  'repo': 'pi-robot-ros-pkg'
- 'brief': 'ardrone_planner'
  'description': "\n\n     ardrone_planner\n\n  "
  'name': 'ardrone_planner'
  'repo': 'brown-experimental'
- 'brief': 'mocap_point_cloud'
  'description': "\n    A package for converting C3d motion capture files into a PointCloud\n\
    \  "
  'name': 'mocap_point_cloud'
  'repo': 'wu-ros-pkg'
- 'brief': 'ROS messages and services for describing articulation models of doors
    and drawers.'
  'description': "\n\nThis package defines generic messages for communicating observed\
    \ kinematic trajectories and articulation models. Further, this packages defines\
    \ generic services for fitting, selecting and storing kinematic models from observed\
    \ trajectories.\n\n  "
  'name': 'articulation_msgs'
  'repo': 'alufr-ros-pkg'
- 'brief': 'planner_modules_pr2'
  'description': "\n    This package contains planner modules for integrating robot\n\
    \    information, mainly for the PR2, from ROS into the planner.\n  "
  'name': 'planner_modules_pr2'
  'repo': 'alufr-ros-pkg'
- 'brief': 'roscapable is an extended version of roslaunch, which can handle launching
    required capabilties.'
  'description': "\n    roscapable is an extended version of roslaunch, which can\
    \ handle launching required capabilties.\n  "
  'name': 'roscapable'
  'repo': 'vanadium-ros-pkg'
- 'brief': 'tabletop_srvs'
  'description': "\n\n     tabletop_srvs\n\n  "
  'name': 'tabletop_srvs'
  'repo': 'wg-ros-pkg'
- 'brief': 'comp_spatial'
  'description': "\n\n     Routines for spatial reasoning in Prolog.\n\n     Contains\
    \ Prolog computables for calculating qualitative spatial relations,\n     but\
    \ also those for extracting certain elements from the string representation\n\
    \     of a matrix.\n\n  "
  'name': 'comp_spatial'
  'repo': 'knowrob'
- 'brief': 'Driver for iRobot Turtlebot and Roomba'
  'description': "\n\n     For ROS bindings, please see turtlebot_node. \n\n     This\
    \ is a generic driver for iRobot Turtlebot and Roomba.  Port\n     of pyrobot.py\
    \ by Damon Kohler.  It is currently labeled as\n     turtlebot_driver pending\
    \ review by the entire create community\n     before using the name create_driver.\n\
    \n  "
  'name': 'turtlebot_driver'
  'repo': 'turtlebot'
- 'brief': 'city_flyer_launch'
  'description': "\n\n     city_flyer_launch\n\n  "
  'name': 'city_flyer_launch'
  'repo': 'ccny_experimental'
- 'brief': 'WiiTeleop'
  'description': "\n     WiiTeleop demonstrates the use of the NAOcontrol messages.\
    \ It is a small\nclient program that allows the user to drive the NAO via WiiMote.\n\
    \  "
  'name': 'WiiTeleop'
  'repo': 'brown-experimental'
- 'brief': 'PCL Tutorials'
  'description': "\n<p>\n  PCL (Point Cloud Library) Tutorials contains PCL usage\
    \ examples and demos.\n</p>\n  "
  'name': 'pcl_tutorials'
  'repo': 'ros-pkg'
- 'brief': 'spline_interp'
  'description': "\n\n     spline_interp\n\n  "
  'name': 'spline_interp'
  'repo': 'wg-ros-pkg'
- 'brief': 'cpp0x'
  'description': "\n\n     cpp0x\n\n  "
  'name': 'cpp0x'
  'repo': 'usc-ros-pkg'
- 'brief': 'online_results'
  'description': "\n      This package is used for displaying the online results during\
    \ the contest. This image is published on the /online_results topic.\n  "
  'name': 'online_results'
  'repo': 'ubc-ros-pkg'
- 'brief': 'neo_srbgyro'
  'description': "\n\n     neo_srbgyro\n\n  "
  'name': 'neo_srbgyro'
  'repo': 'neo_driver'
- 'brief': 'rosjava_geometry'
  'description': "\n     rosjava_geometry\n  "
  'name': 'rosjava_geometry'
  'repo': 'rosjava_core'
- 'brief': 'Gazebo plugins for the KURT robot'
  'description': "\n\n    This package provides Gazebo plugins for the KURT robot.\
    \ It is based on turtlebot_gazebo_plugins by Nate Koenig.\n\n  "
  'name': 'kurt_gazebo_plugins'
  'repo': 'uos-ros-pkg'
- 'brief': 'pr2_controller_configuration'
  'description': "\n\n  Configuration files for PR2 controllers.\n\n  "
  'name': 'pr2_controller_configuration'
  'repo': 'pr2_robot'
- 'brief': 'sv_driver_tplink'
  'description': "\n\n     sv_driver_tplink\n\n  "
  'name': 'sv_driver_tplink'
  'repo': 'vmi-ros-pkg'
- 'brief': 'hector_quadrotor_demo'
  'description': "\n\n     hector_quadrotor_demo contains various launch files and\
    \ needed dependencies for demonstration of the hector_quadrotor stack (indoor/outdoor\
    \ flight in gazebo etc.)\n\n  "
  'name': 'hector_quadrotor_demo'
  'repo': 'tu-darmstadt-ros-pkg'
- 'brief': 'neo_2dnav_tools'
  'description': "\n\n     neo_2dnav_tools\n\n  "
  'name': 'neo_2dnav_tools'
  'repo': 'neo_navigation'
- 'brief': 'Recognizing Engagement Behaviors in Human-Robot Interaction'
  'description': "\n    Human-robot engagement package developed at Worcester Polytechnic\
    \ Institute\n    by Prof. Charles Rich et al. <br/>Currently contains \n    the\
    \ <b>recognition node</b> which is responsible for recognizing \n    <u>directed\
    \ gaze</u>, <u>mutual facial gaze</u>, <u>adjacency \n    pairs</u>, and <u>backchannels</u>\
    \ during an interaction.\n  "
  'name': 'engagement_recognition'
  'repo': 'ros-engagement'
- 'brief': 'Velodyne point cloud conversions'
  'description': "\n\n     Point cloud conversions for Velodyne 3D LIDARs.\n\n  "
  'name': 'velodyne_pointcloud'
  'repo': 'utexas-art-ros-pkg'
- 'brief': 'remote_power_manager'
  'description': "\n\n     A package that enables oommunication with a remote power\
    \ manager such as the NP-02.\n     The package provides services for checking\
    \ the status of the ports, for setting\n     specific ports to on or off, for\
    \ setting all ports, and for resetting ports.\n\n  "
  'name': 'remote_power_manager'
  'repo': 'bosch-ros-pkg'
- 'brief': '3D Voxel Grid'
  'description': '


    voxel_grid provides an implementation of an efficient 3D voxel grid. The occupancy
    grid can support 3 different representations for the state of a cell: marked,
    free, or unknown. Due to the underlying implementation relying on bitwise and
    and or integer operations, the voxel grid only supports 16 different levels per
    voxel column. However, this limitation yields raytracing and cell marking performance
    in the grid comparable to standard 2D structures making it quite fast compared
    to most 3D structures.


    '
  'name': 'voxel_grid'
  'repo': 'navigation'
- 'brief': 'Robot VIsualiZer'
  'description': "\n\n  A 3d visualization environment for robots using ROS.\n\n  "
  'name': 'rviz'
  'repo': 'ros-pkg'
- 'brief': 'image_matcher'
  'description': "\n\n     image_matcher\n\n  "
  'name': 'image_matcher'
  'repo': 'seabee3-ros-pkg'
- 'brief': 'knowrob_tutorial'
  'description': "\n\n     knowrob_tutorial\n\n  "
  'name': 'knowrob_tutorial'
  'repo': 'tum-ros-pkg'
- 'brief': 'sv_common'
  'description': "\n\n     sv_common\n\n  "
  'name': 'sv_common'
  'repo': 'vmi-ros-pkg'
- 'brief': 'asctec_autopilot'
  'description': "\nThis is the hardware driver for the AscTec AutoPilot built by\
    \ Ascending Technologies GmbH. http://www.asctec.de\n\nIt should be compatible\
    \ with the Hummingbird and Pelican quadrotor aircraft.\n\nThis driver is not yet\
    \ complete and the interfaces are not yet finalized. Full functionality will be\
    \ supported in the near future. Contributions are welcome.\n  "
  'name': 'asctec_autopilot'
  'repo': 'asctec_drivers'
- 'brief': 'hippo_defs'
  'description': "\n\n     hippo_defs\n\n  "
  'name': 'hippo_defs'
  'repo': 'vanadium-ros-pkg'
- 'brief': 'pr2_calibration_controllers'
  'description': "\n\n     The pr2_calibration_controllers package contains the controllers\n\
    \     used to bring all the joints in the PR2 to a calibrated state.\n\n  "
  'name': 'pr2_calibration_controllers'
  'repo': 'wg-ros-pkg'
- 'brief': 'android_acm_serial'
  'description': 'android_acm_serial'
  'name': 'android_acm_serial'
  'repo': 'android_core'
- 'brief': 'eros_qt_tutorials'
  'description': "\n\n     eros_qt_tutorials\n\n  "
  'name': 'eros_qt_tutorials'
  'repo': 'eros'
- 'brief': 'jsk_pr2_accessories'
  'description': "\n\n     jsk_pr2_accessories\n\n  "
  'name': 'jsk_pr2_accessories'
  'repo': 'jsk-ros-pkg'
- 'brief': 'synchronization-tools'
  'description': "\n  "
  'name': 'synchronization_tools'
  'repo': 'cram_pl'
- 'brief': ''
  'description': 'A library for accessing the SICK LMS400 laser sensor.'
  'name': 'sick_lms400'
  'repo': 'tum-ros-pkg'
- 'brief': 'web_msgs'
  'description': "\n\n     web_msgs\n\n  "
  'name': 'web_msgs'
  'repo': 'wg-ros-pkg'
- 'brief': 'riq_hand_gui'
  'description': "\n\n     riq_hand_gui\n\n  "
  'name': 'riq_hand_gui'
  'repo': 'wg-ros-pkg'
- 'brief': 'hierarchical_kmeans'
  'description': "\n\n     hierarchical_kmeans\n\n  "
  'name': 'hierarchical_kmeans'
  'repo': 'wg-ros-pkg'
- 'brief': 'aaai_lfd_simulator'
  'description': "\n\n     aaai_lfd_simulator\n\n  "
  'name': 'aaai_lfd_simulator'
  'repo': 'bosch-ros-pkg'
- 'brief': 'Schunk Powercube Controller Server'
  'description': "\n    Implements the Schunk Powercube communication protocol as\
    \ described at http://www.schunk.com.\n    The protocol can function on RS232\
    \ serial, CAN, and Profibus. This package implements the CAN communications.\n\
    \  "
  'name': 'schunk_powercube_controllers'
  'repo': 'cmu-ros-pkg'
- 'brief': 'haptic_device_wrapper'
  'description': "\n\n\n  "
  'name': 'haptic_device_wrapper'
  'repo': 'wg-ros-pkg'
- 'brief': 'bagproc_diagnostics'
  'description': "\n\n     bagproc_diagnostics\n\n  "
  'name': 'bagproc_diagnostics'
  'repo': 'wg-ros-pkg'
- 'brief': 'sbpl_recovery'
  'description': "\n\n     sbpl_recovery\n\n  "
  'name': 'sbpl_recovery'
  'repo': 'navigation_experimental'
- 'brief': 'sbpl_lattice_planner_3d - an extended sbpl_lattice_planner which performs
    collision checks in 3D'
  'description': "\n\n     This package provides an extended sbpl_lattice_planner\
    \ to perform 3D collision checks against the robot's full kinematic configuration.\
    \ It should serve as a drop-in replacement as global planner in the navigation\
    \ stack, to be used with pose_follower_3d as local planner. The 3D collision map\
    \ is usually sent out from octomap_server. \n\n  "
  'name': 'sbpl_lattice_planner_3d'
  'repo': 'wg-ros-pkg'
- 'brief': 'Gaussian Hidden Markov Library'
  'description': "\n\tPython bindings for Gaussian Hidden Markov Library (ghmm) -\
    \ http://ghmm.org/\n\tRutgers University\n  "
  'name': 'ghmm'
  'repo': 'rtc-us-ros-pkg-trunk'
- 'brief': 'Runs an optimization to estimate a robot''s kinematic parameters'
  'description': "\n    Runs an optimization to estimate the a robot's kinematic parameters.\
    \ This package is a\n    generic rewrite of pr2_calibration_estimation.\n  "
  'name': 'calibration_estimation'
  'repo': 'calibration'
- 'brief': 'simple_3D_target_tracker'
  'description': "\n\n     simple_3D_target_tracker\n\n  "
  'name': 'simple_3D_target_tracker'
  'repo': 'ubc-ros-pkg'
- 'brief': 'pr2_gazebo_cartworld'
  'description': "\n\n     pr2_gazebo_cartworld\n\n  "
  'name': 'pr2_gazebo_cartworld'
  'repo': 'wg-ros-pkg'
- 'brief': 'pyoj - use iPhone/iPod Touch as a joystick'
  'description': "\n\n     <tt>pyoj</tt> is a ROS joystick node, that publishes data\
    \ from the\n     <a href=\"http://code.google.com/p/accelerometer-simulator/\"\
    >accelerometer-simulator</a>.\n     It is written in Python.\n\n  "
  'name': 'pyoj'
  'repo': 'amor-ros-pkg'
- 'brief': 'jdb_pyutil'
  'description': "\n    jdb_pyutil\n  "
  'name': 'jdb_pyutil'
  'repo': 'wg-ros-pkg'
- 'brief': 'policy_improvement_test'
  'description': "\n\n     policy_improvement_test\n\n  "
  'name': 'policy_improvement_test'
  'repo': 'wg-ros-pkg'
- 'brief': 'irobot_create_2_1'
  'description': "\n irobot_create_2_1 is a ROS driver for the iRobot iCreate.\n  "
  'name': 'irobot_create_2_1a'
  'repo': 'brown-experimental'
- 'brief': 'laser_threshold'
  'description': "\n\n     laser_threshold\n\n  "
  'name': 'laser_threshold'
  'repo': 'wu-ros-pkg'
- 'brief': 'pr2_motion_planning_description'
  'description': "\n\n     pr2_motion_planning_description\n\n     motion planning\
    \ counterpart of pr2_description\n\n  "
  'name': 'pr2_motion_planning_description'
  'repo': 'wg-ros-pkg'
- 'brief': 'lv1_arm'
  'description': "\n\n     lv1_arm\n\n  "
  'name': 'lv1_arm'
  'repo': 'otl-ros-pkg'
- 'brief': 'corobot_msgs'
  'description': "\n\n     Package reuniting the Corobot's specific messages.\n\n\
    \  "
  'name': 'corobot_msgs'
  'repo': 'roscorobot'
- 'brief': 'AscTec AutoPilot Console Monitor'
  'description': "\n\t\tAscTec AutoPilot Console Monitor\n\t\tThis is a curses based\
    \ groundstation.\n  "
  'name': 'asctec_mon'
  'repo': 'asctec_drivers'
- 'brief': ''
  'description': 'Drive to a point in the map'
  'name': 'espeaktopic'
  'repo': 'tum-ros-pkg'
- 'brief': 'mjpeg_server'
  'description': 'A node that provides a mjpeg server which is able to subscribe to
    any ros image stream.'
  'name': 'mjpeg_server'
  'repo': 'bosch-ros-pkg'
- 'brief': 'dummy_applications'
  'description': "\n\n     dummy_applications\n\n  "
  'name': 'dummy_applications'
  'repo': 'ros_applications'
- 'brief': 'multiview'
  'description': "\n\n     Object recognition from multiple views\n\n  "
  'name': 'multiview'
  'repo': 'stanford-ros-pkg'
- 'brief': 'cram_pr2_popcorn_executive'
  'description': "\n\n     cram_pr2_popcorn_executive\n\n  "
  'name': 'cram_pr2_popcorn_executive'
  'repo': 'cram_pr2'
- 'brief': 'krypton_msgs'
  'description': "\n\n     Package providing Krypton interface messages as ROS messages\n\
    \n  "
  'name': 'krypton_msgs'
  'repo': 'krypton_hardware'
- 'brief': 'parsec_description'
  'description': "\n\n     parsec_description\n\n  "
  'name': 'parsec_description'
  'repo': 'parsec'
- 'brief': 'publish_servo_joint_state'
  'description': "\n\n     publish_servo_joint_state\n\n  "
  'name': 'publish_servo_joint_state'
  'repo': 'parsec'
- 'brief': 'Transform Library'
  'description': "\n\ntf is a package that lets the user keep track of multiple coordinate\n\
    frames over time. tf maintains the relationship between coordinate\nframes in\
    \ a tree structure buffered in time, and lets the user\ntransform points, vectors,\
    \ etc between any two coordinate frames at\nany desired point in time.\n\n  "
  'name': 'tf'
  'repo': 'geometry'
- 'brief': 'elektron_base'
  'description': "\n\tA ROS node which provides access to the Elektron mobile robot.\n\
    \  "
  'name': 'elektron_base'
  'repo': 'elektron_robot'
- 'brief': 'arm_navigation_tests'
  'description': "\n\n    Tests for the move arm stack.\n\n  "
  'name': 'arm_navigation_tests'
  'repo': 'wg-ros-pkg'
- 'brief': 'feature_extractor'
  'description': "\n\n     feature_extractor\n\n  "
  'name': 'feature_extractor'
  'repo': 'usc-ros-pkg'
- 'brief': 'wbag'
  'description': "\n\nwbag is a command-line tool for interacting with a web bags\
    \ server.\n\n  "
  'name': 'wbag'
  'repo': 'wg-ros-pkg'
- 'brief': 'triangle_mesh_rviz_plugin'
  'description': "\n     RVIZ plugin to support Triangle Meshes\n  "
  'name': 'triangle_mesh_rviz_plugin'
  'repo': 'tum-ros-pkg'
- 'brief': 'cob_script_server_tutorial'
  'description': "\n\n     cob_script_server_tutorial\n\n  "
  'name': 'cob_script_server_tutorial'
  'repo': 'cob_tutorials'
- 'brief': 'Aggregates, collects and analyzes robot diagnostics'
  'description': "\n    <p><b>diagnostic_aggregator</b> contains the tools to aggregate\
    \ and analyze robot diagnostics on an active robot. It uses the <b>Aggregator</b>\
    \ class as to aggregate and process data. The aggregator tool loads diagnostic\
    \ Analyzers as plug-ins. These analyzers can perform basic diagnostics analysis,\
    \ such as testing when things are stale, or having known errors. Analyzers are\
    \ subclasses of <b>Analyzer</b>. <b>AnalyzerGroup</b> and <b>GenericAnalyzer</b>\
    \ are two of these subclasses.</p>\n\n      <p>The Aggregator should be run on\
    \ a robot, and is typically launched in the robot's launch file. Viewing of this\
    \ aggregated diagnostics is done with the Robot Monitor, in the <b>robot_monitor</b>\
    \ package. </p>\n    "
  'name': 'diagnostic_aggregator'
  'repo': 'ros-pkg'
- 'brief': 'summit_joystick_teleop'
  'description': "\n\n     summit_joystick_teleop\n\n  "
  'name': 'summit_joystick_teleop'
  'repo': 'summit-ros-pkg'
- 'brief': 'rtt_ros_integration_geometry_msgs'
  'description': "\n    \n    Provides all rtt typekits for ROS geometry_msgs\n  \
    \  \n  "
  'name': 'rtt_ros_integration_geometry_msgs'
  'repo': 'orocos_toolchain_ros'
- 'brief': 'fast_match_template'
  'description': "\n     fast_match_template matches target templates in source images\
    \ using speed-optimized cvMatchTemplate.\n  "
  'name': 'fast_match_template'
  'repo': 'tum-ros-pkg'
- 'brief': 'seabee3_common'
  'description': "\n\n     seabee3_common\n\n  "
  'name': 'seabee3_common'
  'repo': 'seabee3-ros-pkg'
- 'brief': 'PNI spacepoint driver'
  'description': "\n    A simple driver for the PNI spacepoint. The starting point\
    \ for this driver was Nirav Patel's spacepoint python module, which can be found\
    \ here:\n\n    http://eclecti.cc/hardware/easy-absolute-orientation-pni-spacepoint-fusion-in-python\n\
    \n  "
  'name': 'spacepoint'
  'repo': 'stanford-ros-pkg'
- 'brief': 'pi_arm_kinematics'
  'description': "\n\n     pi_arm_kinematics\n\n  "
  'name': 'pi_arm_kinematics'
  'repo': 'pi-robot-ros-pkg'
- 'brief': 'low_dimensional_descriptor'
  'description': "\n\n     low_dimensional_descriptor\n\n  "
  'name': 'low_dimensional_descriptor'
  'repo': 'wg-ros-pkg'
- 'brief': 'Collection of robotics-related libraries'
  'description': "\n         Gearbox provides a collection of usable peer-reviewed\n\
    \         robotics-related libraries. Gearbox is not an integration\n        \
    \ framework. Rather, it provides a set of implementations,\n         without insisting\
    \ on a standard API, for use by any number\n         of existing frameworks. \n\
    \    "
  'name': 'gearbox'
  'repo': 'ua-ros-pkg'
- 'brief': 'quickdev_scripts'
  'description': "\n\n     quickdev_scripts\n\n  "
  'name': 'quickdev_scripts'
  'repo': 'usc-ros-pkg'
- 'brief': ''
  'description': 'Runs GMapping on the PR2 to build a map.'
  'name': '2dmapping_pr2'
  'repo': 'wg-ros-pkg'
- 'brief': 'Build recipe for cross-compiling the apache runtime utilities'
  'description': "\n\n\tThis provides a source package for compiling the apache runtime\
    \ utilities.\n\tOrdinarily this is not useful as you would install via your system's\n\
    \tinstallation method (e.g. apt-get for ubuntu), but for cross-compiling \n  \
    \  it provides the recipe needed to make a toolchain ros-ready.\n\n  "
  'name': 'eros_apr_util'
  'repo': 'eros'
- 'brief': 'columbot'
  'description': "\n    Columbot package is the main controller package in order to\
    \ test or use Staubli package.\n  "
  'name': 'columbot'
  'repo': 'cu-ros-pkg'
- 'brief': 'Navigation configuration for Maxwell mobile manipulator'
  'description': ''
  'name': 'maxwell_navigation'
  'repo': 'vanadium-ros-pkg'
- 'brief': 'roslejos'
  'description': "\n     roslejos\n\t"
  'name': 'helloworld'
  'repo': 'lejos'
- 'brief': 'treadmill_control'
  'description': "\n\n     treadmill_control\n\n  "
  'name': 'treadmill_control'
  'repo': 'veltrop-ros-pkg'
- 'brief': 'flsl'
  'description': "\n\n     Filtered Landmark Sampling for Localization\n\n  "
  'name': 'flsl'
  'repo': 'seabee3-ros-pkg'
- 'brief': 'zbar_barcode_reader_node'
  'description': "\n\n     zbar_barcode_reader_node\n\n  "
  'name': 'zbar_barcode_reader_node'
  'repo': 'tum-ros-pkg'
- 'brief': ''
  'description': 'A library for accessing a camera through the Small Vision System
    library'
  'name': 'stoc_driver'
  'repo': 'tum-ros-pkg'
- 'brief': 'cl_json_pl_client'
  'description': "\n\n     cl_json_pl_client\n\n  "
  'name': 'cl_json_pl_client'
  'repo': 'cram_highlevel'
- 'brief': 'bool2empy'
  'description': "\n\n    This package contains msg converters.\n\n    bool2empy converts\
    \ std_msgs/Bool msg to Two std_msgs/Empty msg\n\n  "
  'name': 'otl_msgconverter'
  'repo': 'otl-ros-pkg'
- 'brief': 'UI_segment_object'
  'description': "\n\n     This nodes provides a simple user interface to designate\
    \ a surface or point from a 2D image for which we want 3D data from the Kinect.\
    \  The main functionality is available via service calls.\n\n  "
  'name': 'UI_segment_object'
  'repo': 'gt-ros-pkg'
- 'brief': 'Example for DARPA ARM Track C'
  'description': 'Sample joint control for DARPA ARM Track C.'
  'name': 're2darmSimExampleController'
  'repo': 'darpa_arm_sim_servers'
- 'brief': ''
  'description': 'Gazebo world and model files for drink serving task (some were copied
    from gazebo_simulator).'
  'name': 'pr2_drinkserving'
  'repo': 'brown-experimental'
- 'brief': 'sap_pkg'
  'description': "\n\n     sap_pkg\n\n  "
  'name': 'k-sap_pkg'
  'repo': 'auction_methods_stack'
- 'brief': 'hector_gazebo_plugins'
  'description': "\n\n     hector_gazebo_plugins provides gazebo plugins from Team\
    \ Hector.\n     Currently it contains a 6wd differential drive plugin, an IMU\
    \ sensor plugin,\n     an earth magnetic field sensor plugin, a GPS sensor plugin\
    \ and a\n     sonar ranger plugin.\n\n  "
  'name': 'hector_gazebo_plugins'
  'repo': 'tu-darmstadt-ros-pkg'
- 'brief': 'rl_utils'
  'description': "\n\n     rl_utils\n\n  "
  'name': 'rl_utils'
  'repo': 'wg-ros-pkg'
- 'brief': 'eigen_allocations'
  'description': "\n\n     Counts allocations for using various bits of Eigen\n\n\
    \  "
  'name': 'eigen_allocations'
  'repo': 'wg-ros-pkg'
- 'brief': 'pr2_interactive_manipulation'
  'description': "\n\n     A package that allows a remote user to request and assist\
    \ with\n     grasping and manipulation tasks, primarily using an rviz display.\n\
    \n  "
  'name': 'pr2_interactive_manipulation'
  'repo': 'wg-ros-pkg'
- 'brief': 'pr2_cockpit_teleop'
  'description': "\n\tA python script for doing whole-body teleop\n\tand cartesian\
    \ arm control with pr2_cockpit.\n\tAlso supports the space navigator for arm control\n\
    \n  "
  'name': 'pr2_cockpit_teleop'
  'repo': 'wg-ros-pkg'
- 'brief': 'SICK Toolbox drivers for SICK laser rangefinders'
  'description': "\n\n  This package contains the SICK LIDAR Matlab/C++ Toolbox, available\
    \ from <a href=\"http://sicktoolbox.sourceforge.net/\">http://sicktoolbox.sourceforge.net/</a>.\n\
    \  The SICK LIDAR Matlab/C++ Toolbox offers stable and easy-to-use C++ drivers\
    \ for SICK LMS 2xx and SICK LD LIDARs. It provides a Matlab Mex interface for\
    \ streaming LIDAR returns directly into Matlab. Also included are config utilities,\
    \ examples, and tutorials. This package contains version 1.0 of the toolbox.\n\
    \n"
  'name': 'sicktoolbox'
  'repo': 'ros-pkg'
- 'brief': 'octomap_collision_check'
  'description': "\n\n     Experimental package for octomap collision checks. Not\
    \ used by anything at the moment.\n\n  "
  'name': 'octomap_collision_check'
  'repo': 'wg-ros-pkg'
- 'brief': 'sbcl'
  'description': "\n    \n    Steel Bank Common Lisp\n    http://www.sbcl.org\n\n\
    \  "
  'name': 'sbcl'
  'repo': 'roslisp_support'
- 'brief': 'pr2_sr_hand_gazebo_demo'
  'description': "\n\n     PR2 with shadow robotics forearm and hands.\n     Taken\
    \ meshes and models from http://bazaar.launchpad.net/~shadowrobot/sr-ros-interface/trunk\
    \ repository,\n     modified slightly to allow for attachment to PR2.\n\n  "
  'name': 'pr2_sr_hand_gazebo_demo'
  'repo': 'wg-ros-pkg'
- 'brief': 'pipette_driver'
  'description': "\n\n     pipette_driver\n\n  "
  'name': 'pipette_driver'
  'repo': 'viaflo_pipette'
- 'brief': 'tabletop_collision_map_processing'
  'description': "\n\n    Populates and manages a collision environment using the\
    \ results of\n    sensor processing from the tabletop_object_detector. Functionality\n\
    \    includes adding and removing detected objects from the collision\n    environment,\
    \ and requesting static collision maps for obstacle\n    avoidance.\n\n  "
  'name': 'tabletop_collision_map_processing'
  'repo': 'wg-ros-pkg'
- 'brief': 'EVaRT node'
  'description': "\n\n    EVa Real-Time Software(tm) - EVaRT(tm) - provides a user\
    \ with a\n    simple and powerful interface to the Motion Analysis(tm) motion\n\
    \    capture hardware.\n\n    This package forwards data computed by the EvaRT\
    \ software as a ROS\n    topic.\n\n  "
  'name': 'evart_bridge'
  'repo': 'stacks/motion_analysis_mocap'
- 'brief': 'pi_kinectbot'
  'description': "\n     Testing the Kinectbot\n  "
  'name': 'pi_kinectbot'
  'repo': 'pi-robot-ros-pkg'
- 'brief': 'A node for segmenting objects from their support surfaces.'
  'description': "\n    A node for segmenting objects from their support surfaces.\n\
    \  "
  'name': 'object_support_segmentation'
  'repo': 'vanadium-ros-pkg'
- 'brief': 'cpl_visual_features'
  'description': "\n\n     cpl_visual_features\n\n  "
  'name': 'cpl_visual_features'
  'repo': 'gt-ros-pkg'
- 'brief': 'knowrob_cad_models'
  'description': "\n\n     a package which contains CAD Models (3D Models) used in\
    \ mod_vis package.\n\n  "
  'name': 'knowrob_cad_models'
  'repo': 'knowrob'
- 'brief': 'eigen_conversions'
  'description': "\n\n     Conversion functions between Eigen and other geometry types.\n\
    \n  "
  'name': 'eigen_conversions'
  'repo': 'geometry'
- 'brief': 'pr2_clutter_helper'
  'description': "\n\n     pr2_clutter_helper\n     \n     Helpful short functions\
    \ for trapping an image, pointcloud,\n       transforms from tf, camera_info from\
    \ the PR2.\n     Used to grab data for the package &quot;gt-ros-pkg/hrl/clutter_segmentation&quot;\n\
    \       \n     Works on bagged data as well (if --clock is published).\n     \n\
    \     Main source file: acquire_pr2_data.py\n     \n     This collects and formats\
    \ everythin needed by clutter_svm_segmentation.\n     Also has code to map camera\
    \ coloring into pointcloud and republish\n        for easy viewing in ROS (Active\
    \ if run stand-alone).\n     \n     Also helpful launch files.\n\n  "
  'name': 'pr2_clutter_helper'
  'repo': 'gt-ros-pkg'
- 'brief': 'Tools for camera focusing.'
  'description': "\n    This package is used to output a signal indicating how well\
    \ a camera is\n    focused. It is used during production to focus the cameras.\n\
    \  "
  'name': 'pr2_camera_focus'
  'repo': 'wg-ros-pkg'
- 'brief': 'Dynamics computation bindings for dynamic-graph'
  'description': "\n\n    FIXME\n\n  "
  'name': 'sot-core'
  'repo': 'jrl-ros-pkg'
- 'brief': 'create_kinect'
  'description': "\n\nThis first test implements a simple bump bot where the Create\
    \ drives forward while avoiding obstacles\n\n  "
  'name': 'create_kinect'
  'repo': 'ucsb-ros-pkg'
- 'brief': 'Object recognition and pose estimation'
  'description': "\n     Uses opencv to object recognition.\n  "
  'name': 'textured_object_detection'
  'repo': 'wg-ros-pkg'
- 'brief': 'proximity_sensor_driver'
  'description': "\n\n     Driver for interfacing with Bosch proximity sensors through\
    \ a Sub20 device.\n\n  "
  'name': 'proximity_sensor_driver'
  'repo': 'bosch-ros-pkg'
- 'brief': 'wsnwatch'
  'description': "\n\n     wsnwatch\n\n  "
  'name': 'ce_wsn'
  'repo': 'vmi-ros-pkg'
- 'brief': 'opencyc'
  'description': "\n\n    Wrapper to install and launch the OpenCyc ontology\n\n  "
  'name': 'opencyc'
  'repo': 'tum-ros-pkg'
- 'brief': 'Plugin for visualizing a ROS computation graph'
  'description': "\n\n     rosgui_rosgraph provides a rosgui plugin for visualizing\
    \ a ROS computation graph.\n\n  "
  'name': 'rosgui_rosgraph'
  'repo': 'ros_gui'
- 'brief': 'teleop3d'
  'description': "\n\nTeleop the PR2 via the web in 3D.\n\n  "
  'name': 'teleop3d'
  'repo': 'wg-ros-pkg'
- 'brief': 'kinematics_visual_corrector'
  'description': "\n    This package adjusts the camera transformation \n    with\
    \ respect to the right shoulder by comparing \n    its rendereded model of the\
    \ arm with the input\n    from the cameras. It requires a local GPU, OpenGL\n\
    \    and g2o optimization framework\n\n  "
  'name': 'trunk'
  'repo': 'wg-ros-pkg'
- 'brief': 'ic2020_surf'
  'description': "\n\n     ic2020_surf\n\n  "
  'name': 'ic2020_surf'
  'repo': 'ic2020'
- 'brief': 'approach_table_support'
  'description': "\n\n     approach_table_support\n\n  "
  'name': 'approach_table_tools'
  'repo': 'tum-ros-pkg'
- 'brief': 'test_matlab_no_ros'
  'description': "\n\n     A set of basic MEX tests that use only mex.cmake and matlab/mat.h\
    \ ( no ROS components )\n\n  "
  'name': 'test_matlab_no_ros'
  'repo': 'usc-ros-pkg'
- 'brief': 'nxt_controllers'
  'description': "\n    The nxt_controllers package provides a number of Python-based\n\
    \     controllers for two-wheeled diff drive robots. The base\n     controllers\
    \ allows you to send velocity commands to a diff drive\n     base, while the base\
    \ odometry tracks the pose of a diff drive\n     robot. The nxt_controllers package\
    \ also contains a general\n     purpose joint position controller that commnads\
    \ a joint to a\n     desired position by sending effort commands to the joint\
    \ and\n     reading the joint encoders.\n  "
  'name': 'nxt_controllers'
  'repo': 'foote-nxt'
- 'brief': ''
  'description': 'A minimalistic graphical interface for 2-D navigation that does
    not use the ogre library.'
  'name': 'nav_view_cu'
  'repo': 'prairiedog'
- 'brief': 'fake_pointcloud_publisher'
  'description': "\nPublishes fake obstacle data as a pointcloud\n  "
  'name': 'fake_pointcloud_publisher'
  'repo': 'wg-ros-pkg'
- 'brief': 'python_skype'
  'description': "\n\n  Skype4Py Bindings in Version 1.0.32 -&gt; The only version\
    \ which is capable being used for Ap2Ap communication.\n  You can use the python-skype\
    \ package by ubuntu, but it is known to be in version 1.0.31. This packages contains\n\
    \  version 1.0.32. It will be removed when developer start their work again.\n\
    \n  "
  'name': 'python_skype'
  'repo': 'vmi-ros-pkg'
- 'brief': 'bashcommand'
  'description': "\nA extremely simple wrapper that allows you to launch arbitrary\
    \ bash commands from within launch files. When launched it will execute the command\
    \ located in the COMMAND environment variable and then exit.\n  "
  'name': 'bashcommand'
  'repo': 'brown-experimental'
- 'brief': 'pr2_kinect_test_description'
  'description': "\n\n     pr2_kinect_test_description\n\n  "
  'name': 'pr2_kinect_test_description'
  'repo': 'wg-ros-pkg'
- 'brief': 'Driver for 3DM-GX2 compatible IMUs.'
  'description': "\n    A driver for IMUs compatible the microstrain 3DM-GX2 and 3DM-GX3\
    \ protocol. Includes \n    a heavily modified standalone driver pulled from the\
    \ player distribution, \n    and a ROS node.\n  "
  'name': 'microstrain_3dmgx2_imu'
  'repo': 'ros-pkg'
- 'brief': 'imperative_to_declarative'
  'description': "\n\n     imperative_to_declarative takes imperative sentences and\
    \ adds the implicit &quot;you&quot; to the front of them, making them declarative.\
    \  This can help, for instance, with parsing for parsers trained on declarative\
    \ sentences rather than imperative ones.\n\n  "
  'name': 'imperative_to_declarative'
  'repo': 'roboframenet'
- 'brief': 'pcl_detectors_clients'
  'description': "\n\n     pcl_detectors_clients\n\n  "
  'name': 'pcl_detectors_clients'
  'repo': 'wg-ros-pkg'
- 'brief': 'cl-utilities'
  'description': "\n    CL-UTILITIES\n    http://common-lisp.net/project/cl-utilities/\n\
    \  "
  'name': 'cl_utilities'
  'repo': 'cram_pl'
- 'brief': 'sensoray626'
  'description': "\n\n     sensoray626\n\n  "
  'name': 'sensoray626'
  'repo': 'penn_lightweight_teleop'
- 'brief': 'A ROS wrapper for tesseract'
  'description': "\n  "
  'name': 'tesseract'
  'repo': 'bosch-ros-pkg'
- 'brief': 'URDF descriptions of PR2 components for testing'
  'description': "\nRobot descriptions in this package are used in PR2 hardware testing.\
    \ This package relies on the URDF macros in pr2_description to make &quot;robots&quot;\
    \ for PR2 components and PR2 configurations.\n  "
  'name': 'pr2_component_descriptions'
  'repo': 'wg-ros-pkg'
- 'brief': 'robotino_grappler_msgs'
  'description': "\n\n     robotino_grappler_msgs\n\n  "
  'name': 'robotino_grappler_msgs'
  'repo': 'robotino-ros-pkg'
- 'brief': 'Demo of open loop grasping using the Katana arm navigation pipeline'
  'description': "\n\n     This package contains a small demo of open loop grasping\
    \ using the\n     <a href=\"/wiki/katana_arm_navigation\">Katana arm navigation\
    \ pipeline</a>.\n\n  "
  'name': 'katana_openloop_grasping'
  'repo': 'uos-ros-pkg'
- 'brief': 'alexandria'
  'description': "\n      Alexandria\n      http://common-lisp.net/project/alexandria/\n\
    \  "
  'name': 'alexandria'
  'repo': 'cram_pl'
- 'brief': 'rosdoc_rosorg'
  'description': "\n\n     Version of rosdoc for the ROS.org documenation.\n\n  "
  'name': 'rosdoc_rosorg'
  'repo': 'rosorg'
- 'brief': 'maximus_goals'
  'description': "\n\n     maximus_goals\n\n  "
  'name': 'maximus_goals'
  'repo': 'smart-robotics-ros-pkg'
- 'brief': 'starmac_viz'
  'description': "\n\n    Visualization of quadrotor operations.\n\n  "
  'name': 'starmac_viz'
  'repo': 'starmac-ros-pkg'
- 'brief': 'Orocos rtt_tf Component package'
  'description': "\n        This package contains the components of the rtt_tf package\n\
    \    "
  'name': 'rtt_tf'
  'repo': 'rtt_geometry'
- 'brief': 'tablescan'
  'description': "\n\n     tablescan\n\n  "
  'name': 'tablescan'
  'repo': 'ubc-ros-pkg'
- 'brief': 'cyphy_pole_detect'
  'description': "\n\n     cyphy_pole_detect\n\n  "
  'name': 'cyphy_pole_detect'
  'repo': 'cyphy'
- 'brief': 'book_stacking_msgs'
  'description': "\n\n     book_stacking_msgs\n\n  "
  'name': 'book_stacking_msgs'
  'repo': 'gt-ros-pkg'
- 'brief': 'nodemon_tui'
  'description': "\n    Node monitoring text-based user interface.\n  "
  'name': 'nodemon_tui'
  'repo': 'node_monitoring'
- 'brief': 'cuda_thrust'
  'description': "\n\n     thrust, a cuda wrapper, stl-like template library\n\n  "
  'name': 'cuda_thrust'
  'repo': 'wg-ros-pkg'
- 'brief': 'opencv_fitting'
  'description': "\n\n     opencv_fitting\n\n  "
  'name': 'opencv_fitting'
  'repo': 'rtm-ros-robotics/agentsystem_ros_tutorials'
- 'brief': 'isogenerator'
  'description': "\n\n    Generates ISO files for the creation of USB keys and livecds.\n\
    \n  "
  'name': 'isogenerator'
  'repo': 'ros_release'
- 'brief': 'A general navigation stack'
  'description': "\n\nA modified version of move_base where the global planner runs\
    \ in its own thread on a clock like the local planner does.\n\n  "
  'name': 'parallel_move_base'
  'repo': 'sbpl_dynamic_env'
- 'brief': 'starmac_vicon_testing'
  'description': "\n\n     starmac_vicon_testing\n\n  "
  'name': 'starmac_vicon_testing'
  'repo': 'starmac-ros-pkg'
- 'brief': 'rosinstall for windows'
  'description': "\n\nRosinstall is a tool to check out source code. This is a slightly\
    \ modified version so that it works on windows. Alot of the patches to rosinstall\
    \ are already being merged upstream to the actual rosinstall package, whilst others\
    \ will remain here until its decided they are stable (at which point we'll try\
    \ to merge them upstream). \n\n  "
  'name': 'win_rosinstall'
  'repo': 'win_ros'
- 'brief': 'ccny_karto'
  'description': "\n\n     ccny_karto\n\n  "
  'name': 'ccny_karto'
  'repo': 'ccny_experimental'
- 'brief': 'teer example using turtlesim'
  'description': "\n\n     An example of how to use teer_ros using turtlesim.\n\n\
    \  "
  'name': 'teer_example_turtle'
  'repo': 'executive_teer'
- 'brief': 'Linear algebra implementation by eigen.'
  'description': "\n\n     This provides an Eigen implementation for ecl's linear\
    \ algebra.\n\n  "
  'name': 'ecl_eigen'
  'repo': 'ecl_core'
- 'brief': 'darm_dashboard'
  'description': "\n\n     darm_dashboard\n\n  "
  'name': 'darm_dashboard'
  'repo': 'darm_dashboard'
- 'brief': 'visp_camera_calib'
  'description': "\n\n     visp_camera_calib\n\n  "
  'name': 'visp_camera_calibration'
  'repo': 'stacks/vision_visp'
- 'brief': 'table_clutter_detector'
  'description': "\n\n     table_clutter_detector\n\n  "
  'name': 'table_clutter_detector'
  'repo': 'wg-ros-pkg'
- 'brief': 'A collection of tools useful for repository maintenance'
  'description': "\n\n     A collection of tools useful for repository maintenance\n\
    \n  "
  'name': 'repository_maintenance'
  'repo': 'ros_experimental'
- 'brief': 'the java zeroconf''ing library'
  'description': "\n\n     Uses the sources from jmnds and builds them in place in\
    \ the ros environment.\n\n  "
  'name': 'zeroconf_jmdns'
  'repo': 'zeroconf_implementations'
- 'brief': ''
  'description': "\n    A node which annotates 3D point cloud data with semantic labels.\n\
    \  "
  'name': 'semantic_point_annotator'
  'repo': 'pr2_navigation'
- 'brief': 'libntcan'
  'description': "\n\n     This package wraps the libntcan to use it as a ros dependency.\n\
    \n  "
  'name': 'libntcan'
  'repo': 'cob_extern'
- 'brief': 'cob_relayboard'
  'description': "\n\n     cob_relayboard\n\n  "
  'name': 'cob_relayboard'
  'repo': 'cob_driver'
- 'brief': ''
  'description': ''
  'name': 'surface_modelling_common'
  'repo': 'bosch-ros-pkg'
- 'brief': 'The Cognitive Environment'
  'description': "\n\n     The Cognitive Environment. The main package with Launchers\
    \ and\n     various settings.\n\n  "
  'name': 'cognitive_environment'
  'repo': 'vmi-ros-pkg'
- 'brief': 'dance_move_joint_replay'
  'description': "\n\n     dance_move_joint_replay\n\n  "
  'name': 'joint_trajectory_replay'
  'repo': 'wg-ros-pkg'
- 'brief': 'Visualizes kinematic models for articulated objects like doors and drawers
    in RVIZ.'
  'description': "\n\n<p>\nThis package contains two visualization plugins for the\
    \ RVIZ viewer, for displaying messages of articulation_msgs/TrackMsg and articulation_msgs/ModelMsg\
    \ messages. This is useful for the debugging and visualization of fitted articulation\
    \ models. \n</p>\n\n  "
  'name': 'articulation_rviz_plugin'
  'repo': 'alufr-ros-pkg'
- 'brief': 'nodelet_sandbox'
  'description': "\n\n     nodelet_sandbox\n\n  "
  'name': 'nodelet_sandbox'
  'repo': 'seabee3-ros-pkg'
- 'brief': 'rve_common'
  'description': "\n\n     rve_common\n\n  "
  'name': 'rve_common'
  'repo': 'visualization_engine'
- 'brief': 'A very light sigslots implementation for embedded development'
  'description': "\n\n     This avoids use of dynamic storage (malloc/new) and thread\
    \ safety (mutexes) to\n     provide a very simple sigslots implementation that\
    \ can be used for *very*\n     embedded development.\n\n  "
  'name': 'ecl_sigslots_lite'
  'repo': 'ecl_lite'
- 'brief': 'A bridge between SWI Prolog and Common Lisp.'
  'description': "\n    This package provides a bridge between SWI Prolog and common\n\
    \    lisp. It allows for evaluating arbitrary Prolog queries in common\n    lisp\
    \ programs, and the implementation of predicates in lisp.\n  "
  'name': 'liswip'
  'repo': 'cram_pl'
- 'brief': 'pmd_camcube_3'
  'description': "\n\n     pmd_camcube_3\n\n  "
  'name': 'pmd_camcube_3_ros_pkg'
  'repo': 'pmd_camcube_3_ros_pkg'
- 'brief': 'Tests WG Hardware Test system using gazebo'
  'description': "\nThis is used for regression testing of the pr2_self_test stack.\
    \ Certain tests and subtests are launched in gazebo to run a full unit regression\
    \ test on parts of the WG Hardware Test system. This package has no external ROS\
    \ or code API.\n  "
  'name': 'test_pr2_self_test_gazebo'
  'repo': 'wg-ros-pkg'
- 'brief': 'shape_detection'
  'description': "\n\n     shape_detection\n\n  "
  'name': 'shape_detection'
  'repo': 'wg-ros-pkg'
- 'brief': 'draw_gcode'
  'description': "\n\n     draw_gcode\n\n  "
  'name': 'pr2_dremel_gui'
  'repo': 'bosch-ros-pkg'
- 'brief': 're2logger'
  'description': "\n\n     re2logger\n\n  "
  'name': 're2logger'
  'repo': 're2logger'
- 'brief': 'gsl'
  'description': "\n\n     gsl\n\n  "
  'name': 'gsl'
  'repo': 'usc-ros-pkg'
- 'brief': 'otl_map'
  'description': "\n\n     otl_map\n\n  "
  'name': 'otl_map'
  'repo': 'otl-ros-pkg'
- 'brief': 'roscolbot'
  'description': "\n     Services and launch files for Colbot (hobby robot)\n  "
  'name': 'roscolbot'
  'repo': 'colbot-ros-pkg'
- 'brief': 'pr2_collision_monitor'
  'description': "\n\n      Provides an easy to use and train collision detection\
    \ service for\n      the pr2's arm joints when using the JointTrajectoryController.\n\
    \n  "
  'name': 'pr2_collision_monitor'
  'repo': 'gt-ros-pkg'
- 'brief': 'ros integration of teer'
  'description': "\n\tHigh-level executive using teer, the task execution environment\
    \ for robotics,\n    from ETHZ ASL. Teer is a Python library proposing the use\
    \ of co-routines\n\t(called tasks) to implement executives. Teer is an alternative\
    \ to executives \n\tbased on state machines such as smach. This package extends\
    \ teer with\n\tROS-based time and protects teer tasks using a threading.Condition.\n\
    \  "
  'name': 'teer_ros'
  'repo': 'executive_teer'
- 'brief': 'rospkg'
  'description': "\n\n     Standalone Python library for the ROS package system.\n\
    \n  "
  'name': 'rospkg'
  'repo': 'rospkg'
- 'brief': 'ancient_powercube'
  'description': "\n    We have this ancient blue Amtec powercube sitting around our\
    \ lab that \n    still works fine. I doubt there are many other working specimens\
    \ of this\n    vintage, so I'm putting it in its own package, since I believe\
    \ the RS-232\n    protocol is complete different from their newer products.\n\
    \  "
  'name': 'ancient_powercube'
  'repo': 'stanford-ros-pkg'
- 'brief': 'maximus_nav'
  'description': "\n\n     maximus_nav\n\n  "
  'name': 'maximus_nav'
  'repo': 'smart-robotics-ros-pkg'
- 'brief': 'comp_germandeli'
  'description': "\n\n     Interface between KnowRob and the ODUfinder perception\
    \ system\n     for recognizing objects from the GermanDeli online shop. The\n\
    \     package further provides information about these objects in\n     form of\
    \ an OWL ontology and utilities for generating the OWL\n     representation given\
    \ the XML log file created by the GermanDeli\n     crawler.\n\n  "
  'name': 'comp_germandeli'
  'repo': 'knowrob'
- 'brief': 'wubble_arm_kinematics'
  'description': "\n        This package provides a kinematics implementation for\
    \ the Wubble robot arm. It can be used to compute forward and inverse kinematics.\n\
    \    "
  'name': 'wubble_arm_kinematics'
  'repo': 'ua-ros-pkg'
- 'brief': 'rovio_controller'
  'description': "\n\n     rovio_controller controls the motors and head position\
    \ of the Rovio\n\n  "
  'name': 'rovio_controller'
  'repo': 'iheart-ros-pkg'
- 'brief': 'virtualScan'
  'description': "\n\n     Given a 2D point cloud it will create a 3D map.\n\n  "
  'name': 'virtualScan'
  'repo': 'roblab-whge-ros-pkg'
- 'brief': 'Matrix manipulation, solvers and geometry tools'
  'description': "\n\n     Ecl frontend to a linear matrix package (currently eigen).\n\
    \n  "
  'name': 'ecl_linear_algebra'
  'repo': 'ecl_core'
- 'brief': 'chiara'
  'description': "\n    Configuration and launch files for a CMU Chiara.\n  "
  'name': 'chiara'
  'repo': 'albany-ros-pkg'
- 'brief': 'teleop_controllers'
  'description': "\n\n     This package contains the cartesian controllers used in\
    \ the\n     Willow Garage teleop setup.\n\n  "
  'name': 'teleop_controllers'
  'repo': 'wg-ros-pkg'
- 'brief': 'task_compiler'
  'description': "\n\n     task_compiler\n\n     Compiler that translate task description\
    \ in PDDL (Planning Domain Description Language) to SMACH (state machine based\
    \ execution and coordination system) description.\n\n  "
  'name': 'task_compiler'
  'repo': 'jsk-ros-pkg'
- 'brief': 'cart_learner'
  'description': "\n\n     cart_learner\n\n  "
  'name': 'cart_learner'
  'repo': 'wg-ros-pkg'
- 'brief': 'Gazebo Plugin to control an array of position-controlled actuators'
  'description': "\n\n     This package provides a Gazebo Plugin to control an array\
    \ of position-controlled actuators, \n     such as RC Servos. In addition to the\
    \ standard parameters for update rate and robot namespace,\n     a series of &quot;joint&quot;\
    \ elements are provided. Each &quot;joint&quot; element must provide a &quot;name&quot;\
    \ and, \n     optionally, a &quot;home&quot; position and a set of PID parameters\
    \ that control the joint stiffness\n     inside Gazebo. Joint limits, max velocities,\
    \ etc. are read from the &quot;robot_description&quot; parameter.\n\n  "
  'name': 'actuator_array_gazebo_plugin'
  'repo': 'gt-ros-pkg'
- 'brief': 'schunk_controller_configutarion_gazebo'
  'description': "\n\n     schunk_controller_configutarion_gazebo\n\n  "
  'name': 'schunk_controller_configuration_gazebo'
  'repo': 'schunk_simulation'
- 'brief': 'joint_fusion'
  'description': "\n\n     A simple node that takes two JointState messages and combines\
    \ them into one.\n\n     Params: rate the rate at with to publish (default 10)\n\
    \     Subrcribes: source1, source2 of type sensor_msgs/JointState\n     Publishes:\
    \ joint_state of type sensor_msgs/JointState\n\n  "
  'name': 'joint_fusion'
  'repo': 'uuisrc-ros-pkg'
- 'brief': 'turtle_train'
  'description': "\n\n     A small demo application to get your group of TurtleBots\
    \ moving around autonomously. The TurtleBot will attempt to identify another TurtleBot\
    \ in its view and begin to follow it. Running this on multiple TurtleBots with\
    \ a teleop'd bot at the front can make for a fun demo!\n\n  "
  'name': 'turtlebot_train'
  'repo': 'clearpath-ros-pkg'
- 'brief': 'Converts a position trajectory to a smooth spline trajectory'
  'description': "\n\nThis package takes in position trajectories (with times), and\
    \ can fill in\nvelocities and accelerations at the knot points using various schemes,\
    \ like\nnumerical differentiation, clamped cubic splines, or the Fritsch-Butland\
    \ monotonic cubic interpolator.\n\n  "
  'name': 'spline_smoother'
  'repo': 'arm_navigation'
- 'brief': 'sbpl_lattice_planner'
  'description': "\n\n     sbpl_lattice_planner\n\n  "
  'name': 'sbpl_lattice_planner'
  'repo': 'navigation_experimental'
- 'brief': 'descriptors_2d_gpl'
  'description': "\n\n     Image descriptors that must be in a GPL package.\n\n  "
  'name': 'descriptors_2d_gpl'
  'repo': 'wg-ros-pkg'
- 'brief': 'pyqrnative'
  'description': "\n\n     Native Python library for QRCodes using PIL.\n\n  "
  'name': 'pyqrnative'
  'repo': 'multimaster_experimental'
- 'brief': 'ocr_server'
  'description': "\n\n     ocr_server\n\n  "
  'name': 'ocr_server'
  'repo': 'bosch-ros-pkg'
- 'brief': 'PCL - ROS (Unstable)'
  'description': "\n\n<p>\n  PCL (Point Cloud Library) ROS interface package. PCL-ROS\
    \ is the preferred\n  bridge for 3D applications involving n-D Point Clouds and\
    \ 3D geometry\n  processing in ROS. The package contains powerful nodelet interfaces\
    \ for PCL\n  algorithms, accepts dynamic reconfiguration of parameters, and supports\n\
    \  multiple threading natively for large scale PPG (Perception Processing\n  Graphs)\
    \ construction and usage.\n</p>\n\n  "
  'name': 'pcl_ros'
  'repo': 'perception_pcl'
- 'brief': 'csm'
  'description': "\n\n     A meta-package that downloads and installs Andrea Censi's\
    \ Canonical Scan Matcher locally.\n     Patches are applied to accept scans in\
    \ cartesian (x,y) coordinates.\n     More about CSM: http://www.cds.caltech.edu/~andrea/research/sw/csm.html\n\
    \n  "
  'name': 'csm'
  'repo': 'scan_tools'
- 'brief': 'pr2_data_acquisition_tools'
  'description': "\n     pr2_data_acquisition_tools - for the data acquisition needed\
    \ by registration stack.\n  "
  'name': 'pr2_data_acquisition_tools'
  'repo': 'mapping'
- 'brief': 'libax3500'
  'description': "\n\n     libax3500\n\n  "
  'name': 'libax3500'
  'repo': 'UCLA-robomagellan'
- 'brief': 'pose_projector'
  'description': "\n\n     pose_projector\n\n  "
  'name': 'pose_projector'
  'repo': 'wg-ros-pkg'
- 'brief': ''
  'description': "\n    Calibrate the Canon stereo rig.\n  "
  'name': 'canon_calibrate'
  'repo': 'wg-ros-pkg'
- 'brief': 'ds_pr2_fridge_opener'
  'description': "\n     ds_pr2_fridge_opener\n  "
  'name': 'ds_pr2_fridge_opener'
  'repo': 'bosch-ros-pkg'
- 'brief': 'edges_pose_refiner'
  'description': "\n\n     edges_pose_refiner\n\n  "
  'name': 'edges_pose_refiner'
  'repo': 'wg-ros-pkg'
- 'brief': 'rosie_bringup'
  'description': "\n    Launch files for bringing up the robot.\n  "
  'name': 'rosie_bringup'
  'repo': 'tum-ros-pkg'
- 'brief': 'Monitors computers on PR2 for temperature and usage'
  'description': "\nMonitors the computer's processor and hard drives of the PR2 and\
    \ publishes data to diagnostics. \n  "
  'name': 'pr2_computer_monitor'
  'repo': 'pr2_robot'
- 'brief': 'ui_responder'
  'description': "\n\n     ui_responder\n\n  "
  'name': 'ui_responder'
  'repo': 'ros_applications'
- 'brief': 'putdown_controllers'
  'description': "\n\n     putdown_controllers\n\n  "
  'name': 'putdown_controllers'
  'repo': 'wg-ros-pkg'
- 'brief': 'digiclops'
  'description': "\n        PtGrey digiclops library\n    "
  'name': 'digiclops'
  'repo': 'ubc-ros-pkg'
- 'brief': 'Interactive marker to create trajectories on the PR2'
  'description': "\n\n      An interactive marker to create and execute a trajectory\
    \ on the PR2. It \n      supports cartesian gripper movements using a planner\
    \ or collision-free IK,\n      pointing the head to the marker, creating a trajectory\
    \ and publishing it.\n      It resembles pr2_marker_control, but it is not as\
    \ features rich. But it\n      supports creating and publishing (via bagrecord)\
    \ trajectories.\n\n  "
  'name': 'pr2_trajectory_markers'
  'repo': 'uuisrc-pr2-pkgs'
- 'brief': 'cwru_base'
  'description': "\n\n     This package is the interface between ROS and the CWRU\
    \ specific robot stuff. Specifically, this package handles translating inputs\
    \ to the cRIO and outputs from the cRIO into things that are more friendly to\
    \ ROS.\n\n  "
  'name': 'cwru_base'
  'repo': 'cwru-ros-pkg'
- 'brief': 'hrl_msgs'
  'description': "\n    ROS messages that the Healthcare Robotics Lab, Georgia Tech\
    \ often\n    uses.\n  "
  'name': 'hrl_msgs'
  'repo': 'gt-ros-pkg'
- 'brief': 'lejos_speech'
  'description': "\n\n     lejos_speech\n\n  "
  'name': 'lejos_speech'
  'repo': 'lejos-ros-pkg'
- 'brief': 'bondpy'
  'description': "\n\n     Python implementation of bond, a mechanism for checking\
    \ when\n     another process has terminated.\n\n  "
  'name': 'bondpy'
  'repo': 'bond_core'
- 'brief': 'tree_kinematics'
  'description': "\n    This package can be used to compute forward and inverse kinematics\
    \ for tree kinematic structures. The package also \n    includes an inverse kinematics\
    \ position solver, which respects joint position, joint velocity and task space\n\
    \    velocity limits. It also applies exponential smoothing, when all end points\
    \ are considered standing still.\n  "
  'name': 'tree_kinematics'
  'repo': 'reem_teleop'
- 'brief': 'Messages related to Manipulation'
  'description': "\n  "
  'name': 'cogman_msgs'
  'repo': 'ias_common'
- 'brief': ''
  'description': 'A ROS node to encapsulate the TeleoReactive Executive for task level
    planning and control.'
  'name': 'trex_ros'
  'repo': 'wg-ros-pkg'
- 'brief': 'cwru_maps'
  'description': "\n\n     cwru_maps\n\n  "
  'name': 'cwru_maps'
  'repo': 'cwru-ros-pkg'
- 'brief': 'cwru_configs'
  'description': "\n\n     cwru_configs\n\n  "
  'name': 'cwru_configs'
  'repo': 'cwru-ros-pkg'
- 'brief': 'ff: pddl planner'
  'description': "\n    ff: pddl planner. see http://www.loria.fr/~hoffmanj/ff.html\n\
    \  "
  'name': 'ff'
  'repo': 'jsk-ros-pkg'
- 'brief': 'rtt_sensor_msgs'
  'description': "\n\n    Provides an rtt typekit for ROS sensor_msgs messages.\n\n\
    \    It allows you to use ROS messages transparently in\n    RTT components and\
    \ applications.\n\n    This package was automatically generated by the\n    create_rtt_msgs\
    \ generator and should not be manually\n    modified.\n\n    See the http://ros.org/wiki/sensor_msgs\
    \ documentation\n    for the documentation of the ROS messages in this\n    typekit.\n\
    \n  "
  'name': 'rtt_sensor_msgs'
  'repo': 'rtt_common_msgs'
- 'brief': 'Robot Contact Point Description Format parser'
  'description': "\n\n    Robot Contact Point Description Format interfaces parser.\n\
    \n  "
  'name': 'rcpdf'
  'repo': 'stacks/robot_contact_point'
- 'brief': 'robot_self_filter'
  'description': "\n    The robot self filter is a package that allows you to filter\
    \ out robot body parts from sensor information using the known positions and orientations\
    \ of these parts. \n  "
  'name': 'robot_self_filter'
  'repo': 'arm_navigation'
- 'brief': 'neo_2dnav_mpo_500'
  'description': "\n\n     neo_2dnav_mpo_500\n\n  "
  'name': 'neo_2dnav_mpo_500'
  'repo': 'neo_navigation'
- 'brief': 'chameleon_msgs'
  'description': "\n\n     chameleon_msgs\n\n  "
  'name': 'chameleon_msgs'
  'repo': 'clearpath-ros-pkg'
- 'brief': 'learn_actions'
  'description': "\n\n    Set of scripts-msgs-stuff for autonomous skills learning\n\
    \    and improving. \n\n  "
  'name': 'learn_actions'
  'repo': 'uuisrc-pr2-pkgs'
- 'brief': 'M4-ATX power supply support'
  'description': "\n\n     m4atx provides monitoring and configuration for the Mini-Box\
    \ M4-ATX\n     power supply. It uses the m4api library from http://ram.umd.edu/.\n\
    \ \n  "
  'name': 'm4atx'
  'repo': 'umd-ros-pkg'
- 'brief': ''
  'description': "\n    A collection of cloud algo[rithms] using nodelets.\n  "
  'name': 'pcl_cloud_algos'
  'repo': 'mapping'
- 'brief': 'wubble_mdp'
  'description': "\n\n    An OO-MDP Environment for the Wubble Robot in simulation.\
    \ \n\n  "
  'name': 'wubble_mdp'
  'repo': 'ua-ros-pkg'
- 'brief': 'PhidgetServo'
  'description': "\n\tNode interfacing the Phidget Advanced Servo Controller. \n\t\
    This package depends on the Phidget client library being installed manually:\n\
    \t\thttp://www.phidgets.com/drivers.php\n  "
  'name': 'PhidgetServo'
  'repo': 'roscorobot'
- 'brief': 'Control and query the movement devices on a WowWee Rovio'
  'description': 'The rovio_ctrl package contains nodes to control and query the motor
    and head position of a WowWee Rovio.'
  'name': 'rovio_ctrl'
  'repo': 'wpi-rail-ros-pkg'
- 'brief': 'tgraph'
  'description': "\n\n     tgraph\n\n  "
  'name': 'tgraph'
  'repo': 'brown-experimental'
- 'brief': 'Collision free arm trajectory controller'
  'description': "\n\n     collision free arm trajectory controller\n\n  "
  'name': 'collision_free_arm_trajectory_controller'
  'repo': 'arm_navigation_experimental'
- 'brief': 'photo_booth'
  'description': "\n\tA simple application for taking photos with a PR2.\n  "
  'name': 'photo_booth'
  'repo': 'wg-ros-pkg'
- 'brief': 'perception_process_module'
  'description': "\n\n     perception_process_module\n\n  "
  'name': 'perception_process_module'
  'repo': 'cram_highlevel'
- 'brief': 'scanmatcher'
  'description': "\n\n     scanmatcher\n\n  "
  'name': 'scanmatcher'
  'repo': 'wg-ros-pkg'
- 'brief': 'nltk'
  'description': "\n    NLTK is the Natural Langauge Toolkit, available from http://www.nltk.org/.\
    \ \n    This package is a wrapper to make NLTK functionality available in ROS.\n\
    \    "
  'name': 'nltk'
  'repo': 'ua-ros-pkg'
- 'brief': 'ROSH common plugin'
  'description': "\n\n     ROSH plugin for packages in the common stack\n\n  "
  'name': 'rosh_common'
  'repo': 'rosh_robot_plugins'
- 'brief': 'descriptors_2d'
  'description': "\n\n     Image descriptors library.  This package provides a common\
    \ interface to many different image descriptors, including, for example, Hog,\
    \ Surf, superpixel color histogram, Haar wavelets, etc.\n\n  "
  'name': 'descriptors_2d'
  'repo': 'wg-ros-pkg'
- 'brief': 'tabletop_object_manager'
  'description': "\n\n     tabletop_object_manager\n\n  "
  'name': 'tabletop_object_manager'
  'repo': 'brown-experimental'
- 'brief': 'contour_detector'
  'description': "\n\n     This package contains the code for contour detector node,\
    \ with most of the detection\n     and ros interface code lying in src/contour_detector/nodes\
    \ and some c stuff for speed \n     in src/contour_detector/EdgeDetection.\n \
    \    \n     The contour detector node is in contour_driver.py, and this runs training\
    \ and run-time\n     behaviour. At test-time the node listens for detector_request\
    \ messages and returns \n     hypothesis messages. It's a spammy detector, designed\
    \ originally to be used in conjunction\n     with stereo point clouds, but this\
    \ was disabled.\n \t\t\n  "
  'name': 'contour_detector'
  'repo': 'ubc-ros-pkg'
- 'brief': 'A Robot Control Interface for OpenRAVE'
  'description': "\n    Contains messages, services, and OpenRAVE clients to interface\
    \ to robot hardware.\n\n    - librobot_control - openrave plugin for ros client\
    \ to talk to robot services\n    - openravecontroller.h - base class for robot\
    \ server using services\n    - tfsender - given joint positions of the robot,\
    \ sends the correct tf frames\n\n    For more information on how to use this inside\
    \ the openrave framework, see:\n    http://openrave.programmingvision.com/wiki/index.php/ROS:ControllingRobots\n\
    \  "
  'name': 'openrave_robot_control'
  'repo': 'jsk-ros-pkg'
- 'brief': 'power_srvs'
  'description': "\n\n     power_srvs\n\n  "
  'name': 'power_srvs'
  'repo': 'umd-ros-pkg'
- 'brief': 'clearpath_tools'
  'description': "\n\n     The clearpath_tools package provides a set of Point Cloud\
    \ Tools used by many of the Clearpath Demos, some of which are simply wrappers\
    \ for existing PCL tools.\n\n  "
  'name': 'clearpath_tools'
  'repo': 'clearpath-ros-pkg'
- 'brief': 'roslaunch tests'
  'description': "\n\n     roslaunch unit and integration tests. These are in a \n\
    \     separate package to avoid circular dependency with rostest.\n\n  "
  'name': 'test_roslaunch'
  'repo': 'ros_comm'
- 'brief': 'application_msgs'
  'description': "\n\n     application_msgs\n\n  "
  'name': 'application_msgs'
  'repo': 'ros_applications'
- 'brief': 'resource_retriever'
  'description': "\n\n   This package retrieves data from url-format files such as\
    \ http://,\n   ftp://, package:// file://, etc., and loads the data into memory.\n\
    \   The package:// url for ros packages is translated into a local\n   file://\
    \ url.  The resourse retriever was initially designed to load\n   mesh files into\
    \ memory, but it can be used for any type of\n   data. The resource retriever\
    \ is based on the the libcurl library.\n\n  "
  'name': 'resource_retriever'
  'repo': 'robot_model'
- 'brief': 'dmp_motion_generation_test'
  'description': "\n\n     dmp_motion_generation_test\n\n  "
  'name': 'dmp_motion_generation_test'
  'repo': 'wg-ros-pkg'
- 'brief': ''
  'description': 'Node for calibrating wheel odometry'
  'name': 'wheel_odometry_calibration'
  'repo': 'wg-ros-pkg'
- 'brief': 'cop_for_external_dependencies'
  'description': "\n\n     package to link against, if not the full functionality\
    \ of cop is\n     necessary, but still some interfaces should be used.\n\n  "
  'name': 'cop_for_external_dependencies'
  'repo': 'tum-ros-pkg'
- 'brief': 'A standardized filter interface'
  'description': "\n\nThis library provides a standardized interface for processing\
    \ data as a sequence \nof filters.  This package contains a base class upon which\
    \ to build specific implementations\nas well as an interface which dynamically\
    \ loads filters based on runtime parameters.  \n\n"
  'name': 'filters'
  'repo': 'filters'
- 'brief': 'household_objects_database'
  'description': "\n\n    Class definitions and a few convenience functions for interfacing\n\
    \    with a specific SQL database, containing 3D models of a set of\n    common\
    \ household objects.\n\n  "
  'name': 'household_objects_database'
  'repo': 'wg-ros-pkg'
- 'brief': 'ROSProcessingjs'
  'description': "\n\n     ROSProcessingjs\n\n  "
  'name': 'ROSProcessingjs_backend'
  'repo': 'brown-experimental'
- 'brief': 'rve_geometry'
  'description': "\n\n     Geometry functions for interacting with 3D shapes.\n\n\
    \  "
  'name': 'rve_geometry'
  'repo': 'visualization_engine'
- 'brief': 'Cyberglove ROS interface'
  'description': "\n\n     This is a generic ROS interface to the Cyberglove from\
    \ Immersion. It reads data from the Cyberglove, calibrate them\n     and streams\
    \ them to two different /joint_states topic: calibrated and raw data.\n\n  "
  'name': 'cyberglove'
  'repo': 'shadow_robot'
- 'brief': 'memcached_service'
  'description': "\n\n     memcached_service\n\n  "
  'name': 'memcached_service'
  'repo': 'seabee3-ros-pkg'
- 'brief': 'simple_object_capture'
  'description': "\n\n    simple_object_capture\n\n  "
  'name': 'simple_object_capture'
  'repo': 'simple_object_capture'
- 'brief': 'ar_pose_demo'
  'description': "\n\n     ar_pose_demo: This package demonstrates the tracking of\
    \ a AR marker with multiple cameras \n                    it uses a BFL EKF estimator\
    \ to merge based on the covariances (the pose_ekf package)\n                 \
    \   The patch is used to extend ar_pose.\n                    The nodes are distributed\
    \ over different machines, this is defined in the machines package.\n  "
  'name': 'ar_pose_demo'
  'repo': 'camera_pose_estimation'
- 'brief': 'bullet_reasoning'
  'description': "\n\n     bullet_reasoning\n\n  "
  'name': 'bullet_reasoning'
  'repo': 'cram_physics'
- 'brief': 'buoy_identifier'
  'description': "\n\n     buoy_identifier\n\n  "
  'name': 'buoy_identifier'
  'repo': 'seabee3-ros-pkg'
- 'brief': 'mod_probcog'
  'description': "\n\n    Integration of KnowRob with the ProbCog library providing\
    \ statistical relational learning and reasoning methods. \n\n  "
  'name': 'mod_probcog'
  'repo': 'knowrob'
- 'brief': 'modular_cloud_matcher'
  'description': "\n\n     3D point cloud matcher based on libpointmatcher (http://github.com/ethz-asl/libpointmatcher)\n\
    \n  "
  'name': 'modular_cloud_matcher'
  'repo': 'ethzasl_mapping'
- 'brief': 'rosmanual'
  'description': "\n\n     The ROS Manual\n\n  "
  'name': 'rosmanual'
  'repo': 'ros_experimental'
- 'brief': 'Bumblebee2_msgs'
  'description': "\n\n     Bumblebee2_msgs\n\n  "
  'name': 'Bumblebee2_msgs'
  'repo': 'darpa_arm_msgs'
- 'brief': 'prosilica_msgs'
  'description': "\n\n     prosilica_msgs\n\n  "
  'name': 'prosilica_msgs'
  'repo': 'darpa_arm_msgs'
- 'brief': 'A Java-based implementation of the ROS serial protocol. '
  'description': "\n    A Java-based implementation of the ROS serial protocol. \n\
    \  "
  'name': 'rosserial_java'
  'repo': 'rosserial_java'
- 'brief': 'rotate_cart'
  'description': "\n\n     rotate_cart\n\n  "
  'name': 'obj_pose_commander'
  'repo': 'wg-ros-pkg'
- 'brief': 'model_database_update'
  'description': "\n     Package that updates the model database with various useful\
    \ things.\n  "
  'name': 'model_database_update'
  'repo': 'wg-ros-pkg'
- 'brief': 'create_joy'
  'description': "\n\nProvides joystick control for the iRobot Create.  \n\n  "
  'name': 'create_joy'
  'repo': 'ucsb-ros-pkg'
- 'brief': 'simple_biconnectivity_controller'
  'description': "\n\n     simple_biconnectivity_controller\n\n  "
  'name': 'simple_biconnectivity_controller'
  'repo': 'brown-experimental'
- 'brief': 'lwr_simulation'
  'description': "\n\n     simulation\n\n  "
  'name': 'lwr_simulation'
  'repo': 'lwr_robot'
- 'brief': 'graspit_pipeline'
  'description': "\n\n     graspit_pipeline\n\n  "
  'name': 'graspit_pipeline'
  'repo': 'wg-ros-pkg'
- 'brief': 'threeD_mouse'
  'description': "\n\n     threeD_mouse\n\n  "
  'name': 'threeD_mouse'
  'repo': 'shadow_robot'
- 'brief': 'panasonic_blc111'
  'description': "\n\n     panasonic_blc111\n\n  "
  'name': 'panasonic_blc111'
  'repo': 'ethzasl_drivers'
- 'brief': 'block_manipulation'
  'description': "\n\n     block_manipulation\n\n  "
  'name': 'block_manipulation'
  'repo': 'vanadium-ros-pkg'
- 'brief': 'Crust Crawler AX-12+ Smart Arm controller'
  'description': "\n        Crust Crawler AX-12+ Smart Arm controller that uses dynamixel_controllers\
    \ for motor control.\n    "
  'name': 'smart_arm_controller'
  'repo': 'ua-ros-pkg'
- 'brief': 'ardros'
  'description': "\n\n     Arduino based robot controlled via ROS: Ard(uino)Ros\n\n\
    \  "
  'name': 'ardros'
  'repo': 'drh-robotics-ros'
- 'brief': 'schunk_sdh'
  'description': "\n\n     This package provides an interface for operating the schunk\
    \ dexterous hand (SDH), including the tactile sensors.\n\n  "
  'name': 'schunk_sdh'
  'repo': 'schunk_modular_robotics'
- 'brief': 'Build recipe for cross-compiling bzip2'
  'description': "\n\n\tThis provides a source package for compiling bzip2 (needed\
    \ by boost).\n\t\n\tOrdinarily this is not useful as you would install via your\
    \ system's\n\tinstallation method (e.g. apt-get for ubuntu), but for cross-compiling\
    \ \n    it provides the recipe needed to make a toolchain ros-ready.\n\n  "
  'name': 'eros_bzip2'
  'repo': 'eros'
- 'brief': 'point_cloud_classifier'
  'description': "\n\n     point_cloud_classifier\n\n  "
  'name': 'point_cloud_classifier'
  'repo': 'ua-ros-pkg'
- 'brief': 'tagmapper_cu'
  'description': "\n\n     tagmapper_cu\n\n  "
  'name': 'tagmapper_cu'
  'repo': 'prairiedog'
- 'brief': 'PR2 Keyboard Teleoperator'
  'description': "\n\n     Keyboard teleoperator for the PR2 Simulator\n\n  "
  'name': 'pr2_keyboard_teleoperator'
  'repo': 'brown-experimental'
- 'brief': 'rosfs'
  'description': "\n\n     rosfs\n\n  "
  'name': 'rosfs'
  'repo': 'ros_experimental'
- 'brief': 'laban_service'
  'description': "\n\n     Service that executes arm motions, given information just\
    \ about\n     the PR2 wrist. Expected coordinates are Cartesian. Translates to\n\
    \     joint coordinates, and uses lower-level controllers to execute\n     the\
    \ motion.\n\n  "
  'name': 'laban_service'
  'repo': 'wg-ros-pkg'
- 'brief': 'schunk_planning'
  'description': "\n\n    A collection of packages and launch files to enable planning\
    \ on a Schunk Arm \n\n  "
  'name': 'schunk_planning'
  'repo': 'uuisrc-ros-pkg'
- 'brief': 'roboframenet_bringup'
  'description': "\n\n    roboframenet_bringup contains launch files for roboframenet\
    \ as well as application and interface information for appmanandroid.\n\n  "
  'name': 'roboframenet_bringup'
  'repo': 'roboframenet'
- 'brief': 'Message and service declarations for the Nao humanoid'
  'description': "\n\n     Message and service declarations for the Nao humanoid\n\
    \n  "
  'name': 'nao_msgs'
  'repo': 'alufr-ros-pkg'
- 'brief': 'perfesser'
  'description': "\n    Perfesser is a node to do localization from noisy sensors.\
    \  It includes\n    a particle filter library and facilities for managing a belief\
    \ processing\n    application.  See comments in the perfesser_guesser.py file.\n\
    \  "
  'name': 'perfesser'
  'repo': 'brown-experimental'
- 'brief': 'robotino_grappler_calibration'
  'description': "\n\n     robotino_grappler_calibration\n\n  "
  'name': 'robotino_grappler_calibration'
  'repo': 'robotino-ros-pkg'
- 'brief': 'Test utility for benchmarking rpc latencies'
  'description': "\n\n     Generates statistical data providing a benchmark for rpc\
    \ messaging latencies.\n\n  "
  'name': 'eros_rpc_latency'
  'repo': 'eros'
- 'brief': 'proximity_sensor_add_obstacles'
  'description': "\n\n     proximity_sensor_add_obstacles\n\n  "
  'name': 'proximity_sensor_add_obstacles'
  'repo': 'bosch-ros-pkg'
- 'brief': 'topological_nav_msgs'
  'description': "\n\n     topological_nav_msgs\n\n  "
  'name': 'topological_nav_msgs'
  'repo': 'wg-ros-pkg'
- 'brief': 'RobotModel'
  'description': "\n\n     RobotModel\n\n  "
  'name': 'RobotModel'
  'repo': 'darpa_arm_sim_servers'
- 'brief': 'actionlib_lisp - an implenetation of actionlib in Common Lisp'
  'description': "\n\n     actionlib_lisp is a native implementation of the famous\
    \ actionlib\n     in Common Lisp. It provides a client and a simple server.\n\n\
    \  "
  'name': 'actionlib_lisp'
  'repo': 'ros-pkg'
- 'brief': 'husky_kinect'
  'description': "\n    This package contains launch files which run some of the demos\n\
    \    from the clearpath_kinect stack on the Husky platform.\n  "
  'name': 'husky_kinect'
  'repo': 'clearpath-ros-pkg'
- 'brief': 'rosspawn'
  'description': "\n    ROSspawn allows to start, stop, and monitor ROS nodes remotely.\
    \ Opposed\n    to roslaunch it does not read files with configurations to load,\
    \ but\n    rather it exposes services and topics to inform about available\n \
    \   ROS nodes (i.e. binaries in appropriate folders) which can then be\n    started\
    \ and stopped.\n  "
  'name': 'rosspawn'
  'repo': 'rosspawn'
- 'brief': 'Control and query the speech module on an Aldebaran NAO.'
  'description': "\n    The nao_speech package contains nodes to control the speech\
    \ module on an Aldebaran NAO. Language and volume settings can be modified using\
    \ this package. This package has been tested with NAOqi version 1.10.52.\n  "
  'name': 'nao_speech'
  'repo': 'wpi-rail-ros-pkg'
- 'brief': 'heyu_X10'
  'description': "\n\n    This is a simple ROS interface to the Heyu X10 home automation\
    \ program: use it if you want to turn on your lights using ROS !!\n\n  "
  'name': 'heyu_X10'
  'repo': 'ros-heyu-x10'
- 'brief': ''
  'description': "\n\nA node that interface the corobot's webcam.\n\nThe package is\
    \ based on the package dynamic_uvc_cam from Stefan Diewald. Main changes are to\
    \ start the camera right away.\n\n\n  Package is GPL since some of its code is\
    \ adapted from GPL programs such as guvcview"
  'name': 'corobot_camera'
  'repo': 'roscorobot'
- 'brief': 'qcalc'
  'description': "\n\n     qcalc\n\n  "
  'name': 'qcalc'
  'repo': 'wg-ros-pkg'
- 'brief': 'python_feedparser'
  'description': "\n\n     python_feedparser\n\n  "
  'name': 'python_feedparser'
  'repo': 'vmi-ros-pkg'
- 'brief': 'sr_mechanism_model'
  'description': "\n\n     sr_mechanism_model contains the transmissions used in the\
    \ robot model. We needed specific\n     transmission as we're using our own actuator.\
    \ We also needed to take care of the joint 0s\n     which combine the distal and\
    \ middle phalanges.\n\n  "
  'name': 'sr_mechanism_model'
  'repo': 'shadow_robot'
- 'brief': 'rosserial_java_node'
  'description': "\n\n     This package contains the node for the rosserial_java implementation.\n\
    \    It has been sepparated from the library so that both the android and\n  \
    \  PC implementations can use the same rosserial_java backend.\n\n  "
  'name': 'rosserial_java_node'
  'repo': 'rosserial_java'
- 'brief': 'kinect_mapping'
  'description': "\n\n     kinect_mapping\n\n  "
  'name': 'kinect_mapping'
  'repo': 'ccny_experimental'
- 'brief': 'motion_adaption'
  'description': "\n    The motion_adaption_node uses the transforms of the tracked\
    \ end points of the operator, first normalises and then\n    scales them according\
    \ to the operator's and robot's body proportions and finally maps them onto the\
    \ robot. The\n    orientation of each end point is mapped unchanged.\n  "
  'name': 'motion_adaption'
  'repo': 'reem_teleop'
- 'brief': 'hector_compressed_map_transport'
  'description': "\n\n     hector_compressed_map_transport provides means for transporting\
    \ compressed map data through the use of image_transport\n\n  "
  'name': 'hector_compressed_map_transport'
  'repo': 'tu-darmstadt-ros-pkg'
- 'brief': 'cwru_voice'
  'description': "\n\n     cwru_voice\n\n  "
  'name': 'cwru_voice'
  'repo': 'cwru-ros-pkg'
- 'brief': 'vrmagic_devkit_wrapper'
  'description': "\n    A package wrapping the VRmagic Devkit available at the manufacturer\
    \ website\n  "
  'name': 'vrmagic_devkit_wrapper'
  'repo': 'tu-darmstadt-ros-pkg'
- 'brief': 'Driver framework'
  'description': "\n    A framework for writing drivers that helps with runtime reconfiguration,\
    \ diagnostics and self-test.\n\n    This package is currently for internal use\
    \ only as its API is still\n    under development and is expected to undergo significant\
    \ changes.\n  "
  'name': 'driver_base'
  'repo': 'ros-pkg'
- 'brief': 'stage_teleop'
  'description': "\n\n     stage_teleop is... \n\n  "
  'name': 'joystick_commands'
  'repo': 'flyatar'
- 'brief': 'worldmodel_msgs'
  'description': "\n\n     worldmodel_msgs\n\n  "
  'name': 'worldmodel_msgs'
  'repo': 'tu-darmstadt-ros-pkg'
- 'brief': 'rosie_execution_trace_visualization'
  'description': "\n\n     rosie_execution_trace_visualization\n\n  "
  'name': 'rosie_execution_trace_visualization'
  'repo': 'tum-ros-pkg'
- 'brief': 'ds_pr2_2dnav'
  'description': "\n\n     ds_pr2_2dnav\n\n  "
  'name': 'ds_pr2_2dnav'
  'repo': 'bosch-ros-pkg'
- 'brief': 'pi_robot_description'
  'description': "\n\n     pi_robot_description\n\n  "
  'name': 'pi_robot_description'
  'repo': 'pi-robot-ros-pkg'
- 'brief': ''
  'description': "A node and utilities for webcams supporting the uvcvideo driver\
    \ (e.g. Logitech cameras and many others).\n\n  Package is GPL since some of its\
    \ code is adapted from GPL programs such as guvcview"
  'name': 'uvc_cam2'
  'repo': 'alufr-ros-pkg'
- 'brief': 'microscribe'
  'description': "\n\n     microscribe\n\n  "
  'name': 'microscribe'
  'repo': 'wg-ros-pkg'
- 'brief': 'Teleoperated the PR2'
  'description': "\n  This package contains launch files for starting joystick or\n\
    \  keyboard-based teleoperation (remote control) of the PR2.\n  "
  'name': 'pr2_teleop'
  'repo': 'pr2_apps'
- 'brief': 'Interactive control for the TurtleBot.'
  'description': "\n\n    A package that allows controlling a TurtleBot from rviz\
    \ using interactive markers. \n\n  "
  'name': 'turtlebot_interactive_markers'
  'repo': 'turtlebot_viz'
- 'brief': ''
  'description': "\n    Sparse bundle adjustment and Sparse pose adjustment.\n  "
  'name': 'sba'
  'repo': 'ros-pkg'
- 'brief': 'proxy'
  'description': "\n\n     Proxy provides a repeater node. Using the proxy, several\
    \ clients\n     can subscribe to a topic on the other side of a slow network connection\n\
    \     using no more bandwidth than what's needed for a single subscriber.\n\n\
    \     This node can relay multiple topics, and it only subscribes to the\n   \
    \  topics to which its downstream nodes are listening.\n  "
  'name': 'proxy'
  'repo': 'umd-ros-pkg'
- 'brief': 'Driver for iRobot Turtlebot and Roomba'
  'description': "\n\n     For ROS bindings, please see turtlebot_node. \n\n     This\
    \ is a generic driver for iRobot Turtlebot and Roomba.  Port\n     of pyrobot.py\
    \ by Damon Kohler.  It is currently labeled as\n     turtlebot_driver pending\
    \ review by the entire create community\n     before using the name create_driver.\n\
    \n  "
  'name': 'busbot_driver'
  'repo': 'bosch-ros-pkg'
- 'brief': 'otl_ardrone'
  'description': "\n\n     otl_ardrone contains launch file for control AR.Drone.\n\
    \n  "
  'name': 'otl_ardrone'
  'repo': 'otl-ros-pkg'
- 'brief': 'rostweet'
  'description': "\n\n     rostweet is a twitter client for ROS. It allows your robots\
    \ to send tweets to its followers, and to receive tweets from its following contacts.\n\
    \n  "
  'name': 'rostweet'
  'repo': 'uji-ros-pkg'
- 'brief': 'geographic_msgs'
  'description': "\n\n     ROS messages for Geographic Information Systems.\n\n  "
  'name': 'geographic_msgs'
  'repo': 'geographic_info'
- 'brief': 'swissranger_camera_description'
  'description': "\n\n     swissranger_camera_description\n\n  "
  'name': 'swissranger_camera_description'
  'repo': 'ua-ros-pkg'
- 'brief': 'Driver for Sick LD-MRS'
  'description': "\n\n     Driver node for Sick LD-MRS\n\n  "
  'name': 'sick_ldmrs'
  'repo': 'csiro-asl-ros-pkg'
- 'brief': 'pr2_description'
  'description': "\n\n  This package contains the description (mechanical, kinematic,\
    \ visual,\n  etc.) of the PR2 robot.  The files in this package are parsed and\
    \ used by\n  a variety of other components.  Most users will not interact directly\n\
    \  with this package.\n\n  "
  'name': 'pr2_description_lowres'
  'repo': 'cram_physics'
- 'brief': 'neato_xv11_lds'
  'description': "\n\n     neato_xv11_lds\n\n  "
  'name': 'neato_xv11_lds'
  'repo': 'smart-robotics-ros-pkg'
- 'brief': 'pose_filter'
  'description': "\n\n     pose_filter\n\n  "
  'name': 'pose_filter'
  'repo': 'wg-ros-pkg'
- 'brief': 'Python Dynamixel Controller Manager and Joint Controllers'
  'description': "\n        This package contains a configurable node, services and\
    \ a spawner script\n        to start, stop and restart one or more controller\
    \ plugins. Reusable\n        controller types are defined for common Dynamixel\
    \ motor joints. Both speed and\n        torque can be set for each joint. This\
    \ python package can be used by more\n        specific robot controllers and all\
    \ configurable parameters can be loaded\n        via a yaml file.\n    "
  'name': 'dynamixel_controllers'
  'repo': 'dynamixel_motor'
- 'brief': 'Local navigation for the PR2 robot.'
  'description': "\n\n     This application allows the PR2 to navigate autonomously\
    \ in an odometric frame.\n\n  "
  'name': 'pr2_2dnav_local'
  'repo': 'wg-ros-pkg'
- 'brief': 'people_detector_node'
  'description': "\n     people_detector_node wraps around the functionality of the\
    \ http://tum-ros-pkg.svn.sourceforge.net/viewvc/tum-ros-pkg/3rdparty/people_detector_2d_laser/\n\
    \     package in thus provides the hypotheses about the pose of human legs as\
    \ seen in the 2.5D laser scan. \n     Classsifer's hypotheses are to be found\
    \ in training_data subfolder, please also see the README file in people_detector_2d_laser\
    \ package if you need to train \n     your own classifier.\n  "
  'name': 'people_detector_node'
  'repo': 'tum-ros-pkg'
- 'brief': 'roboard_servos'
  'description': "\n\n     Controls the position of servos based on joint_states.\n\
    \     Also can modify the servo position based on gyroscopic data.\n\n  "
  'name': 'roboard_servos'
  'repo': 'veltrop-ros-pkg'
- 'brief': 'cob_bringup_sim'
  'description': "\n\n     cob_bringup_sim\n\n  "
  'name': 'cob_bringup_sim'
  'repo': 'cob_simulation'
- 'brief': 'collvoid_pr2'
  'description': "\n\n     collvoid_pr2\n\n  "
  'name': 'collvoid_pr2'
  'repo': 'multi_robot_collision_avoidance'
- 'brief': 'rosh ''robot'' plugin'
  'description': "\n\n     ROSH meta-plugin for the ROS 'robot' variant.\n\n  "
  'name': 'rosh_robot'
  'repo': 'rosh_robot_plugins'
- 'brief': 'summit_description'
  'description': "\n\n     summit_description\n\n  "
  'name': 'summit_description'
  'repo': 'summit-ros-pkg'
- 'brief': 'clearpath_sensors'
  'description': "\n     The clearpath_sensors package contains drivers for sensors\
    \ we have had to use with no previously reliable support.\n  "
  'name': 'clearpath_sensors'
  'repo': 'clearpath-ros-pkg'
- 'brief': 'URDF description of the Katana arm'
  'description': "\n\n     This package contains an URDF description of the Katana\
    \ arm and all supporting mesh files.\n\n  "
  'name': 'katana_description'
  'repo': 'uos-ros-pkg'
- 'brief': 'Playstation 3 SIXAXIS or DUAL SHOCK 3 joystick driver.'
  'description': "\n    Local fork of ps3joy driver. Adds partial support for Bluetooth\
    \ v1.\n    Adds controller shutdown on PS3 button, computer shutdown upon press\
    \ of\n    all four top buttons, LED control from ROS [this ps3joy.py is a ROS\
    \ node]\n    and other details.\n\n  "
  'name': 'ps3joy_umd'
  'repo': 'umd-ros-pkg'
- 'brief': 'find_base_pose'
  'description': "\n\n     find_base_pose - find a base pose to make trajectories\
    \ reachable for the arm/s\n\n  "
  'name': 'find_base_pose'
  'repo': 'tum-ros-pkg'
- 'brief': 'task_manager'
  'description': "\n\n     task_manager\n\n  "
  'name': 'continuous_ops_task_manager'
  'repo': 'continuous_ops'
- 'brief': 'Android packages for zeroconf testing/demos'
  'description': "\n\n     Android packages for zeroconf testing/demo purposes.\n\n\
    \  "
  'name': 'zeroconf_android_jmdns_demos'
  'repo': 'zeroconf_android'
- 'brief': ''
  'description': "\n    Various different Eigen optimizations tests.\n  "
  'name': 'eigen_tests'
  'repo': 'wg-ros-pkg'
- 'brief': 'watchdog_timer'
  'description': "\n\n     A remote Watchdog Timer\n\n  "
  'name': 'watchdog_timer'
  'repo': 'pandora-auth-ros-pkg'
- 'brief': 'binary_matching'
  'description': "\n\n     binary_matching\n\n  "
  'name': 'binary_matching'
  'repo': 'wg-ros-pkg'
- 'brief': 'texas bot simulation'
  'description': "\n\n     texas bot simulation\n\n  "
  'name': 'texas_gazebo'
  'repo': 'wg-ros-pkg'
- 'brief': 'pacman_turtles'
  'description': "\n\n     pacman_turtles\n\n  "
  'name': 'pacman_turtles'
  'repo': 'multi_robot_collision_avoidance'
- 'brief': 'tf2'
  'description': "\n    tf2 is the second generation of the transform libraray, which\
    \ lets\n    the user keep track of multiple coordinate frames over time. tf2\n\
    \    maintains the relationship between coordinate frames in a tree\n    structure\
    \ buffered in time, and lets the user transform points,\n    vectors, etc between\
    \ any two coordinate frames at any desired\n    point in time.\n  "
  'name': 'tf2'
  'repo': 'geometry_experimental'
- 'brief': 'Foundation for plugins using rospy'
  'description': "\n\n     rosgui_rospy enables rosgui plugins to use the Python client\
    \ library for ROS.\n\n  "
  'name': 'rosgui_rospy'
  'repo': 'ros_gui'
- 'brief': 'twistTranslate'
  'description': "\n\n     twistTranslate\n\n  "
  'name': 'twistTranslate'
  'repo': 'brown-experimental'
- 'brief': 'prolog_perception'
  'description': "\n     prolog_perception logically interacts with below enlisted\
    \ perception nodes\n     in order to create a multi-purpose multi-level solution\
    \ space for perception\n     in robotics.\n  "
  'name': 'prolog_perception'
  'repo': 'tum-ros-pkg'
- 'brief': 'test_rosmaster'
  'description': "\n\n     test_rosmaster\n\n  "
  'name': 'test_rosmaster'
  'repo': 'ros_comm'
- 'brief': 'comp_temporal'
  'description': "\n\n     Temporal reasoning methods for the knowledge base.\n\n\
    \     Time points and intervals are supported, and the system can\n     calculate\
    \ if one interval subsumes another one, happens before\n     or after another,\
    \ and how long it takes.\n\n  "
  'name': 'comp_temporal'
  'repo': 'knowrob'
- 'brief': 'clearpath_kinect_demo'
  'description': "\n\n     The clearpath_kinect_demo package provides a set of basic\
    \ demos that can be used with almost any robot and a Kinect. Launch files can\
    \ be found in clearpath_husky and clearpath_turtlebot with robot specific parameters.\n\
    \n  "
  'name': 'clearpath_kinect_demo'
  'repo': 'clearpath-ros-pkg'
- 'brief': 'move_base_stage_tutorial'
  'description': "\n\n     move_base_stage_tutorial\n\n  "
  'name': 'move_base_stage_tutorial'
  'repo': 'rtm-ros-robotics/agentsystem_ros_tutorials'
- 'brief': 'pr2_machine'
  'description': "\n    This package contains the xxx.machine files that describe\
    \ the different hosts a node can be spawned on. Currently there is one machine\
    \ file for the pr2 robot, and one for the simulated pr2 robot.\n  "
  'name': 'pr2_machine'
  'repo': 'wg-ros-pkg'
- 'brief': 'gpc'
  'description': "\n    General Polygon Clipper library (http://www.cs.man.ac.uk/~toby/alan/software/index.html)\n\
    \  "
  'name': 'gpc'
  'repo': 'tum-ros-pkg'
- 'brief': 'ROS Test Framework'
  'description': "\n\n<p>\n     Integration test suite based on roslaunch that is\
    \ compatible with xUnit frameworks.\n</p>     \n<p>\n     rostest uses xmlrunner.py\
    \ (Public Domain), which was written by\n     Sebastian Rittau (srittau@jroger.in-berlin.de)\
    \ and Paolo Borelli.\n</p>     \n  "
  'name': 'rostest'
  'repo': 'ros_comm'
- 'brief': 'tf_broadcast_server'
  'description': "\n\n     tf_broadcast_server\n\n  "
  'name': 'tf_broadcast_server'
  'repo': 'rcommander'
- 'brief': 'robot_mask'
  'description': "\n\n     robot_mask\n\n  "
  'name': 'robot_mask'
  'repo': 'cram_physics'
- 'brief': 'common_rosdeps'
  'description': 'Deprecated.'
  'name': 'common_rosdeps'
  'repo': 'common_rosdeps'
- 'brief': 'hrl_table_detection'
  'description': "\n\n     hrl_table_detection\n\n  "
  'name': 'hrl_table_detect'
  'repo': 'gt-ros-pkg'
- 'brief': 'nodelet base class and wrappers'
  'description': "\n    The nodelet package is designed to provide a way to run multiple\n\
    \    algorithms in the same process with zero copy transport between\n    algorithms.\
    \  \n    \n    This package provides both the nodelet base class needed for\n\
    \    implementing a nodelet, as well as the NodeletLoader class used\n    for\
    \ instantiating nodelets.\n  "
  'name': 'nodelet'
  'repo': 'nodelet_core'
- 'brief': ''
  'description': ' 3D REEM Simulator Launch Scripts. '
  'name': 'reem_gazebo'
  'repo': 'reem_simulation'
- 'brief': 'bosch_object_segmentation_gui'
  'description': "\n\n     A package for interactive object segmentation using GrabCut3D.\n\
    \n  "
  'name': 'bosch_object_segmentation_gui'
  'repo': 'bosch-ros-pkg'
- 'brief': 'bounding_box_filter'
  'description': "\n\n     bounding_box_filter\n\n  "
  'name': 'bounding_box_filter'
  'repo': 'wg-ros-pkg'
- 'brief': 'URDF C++ interface.'
  'description': "\n    This package contains URDF C++ interface headers that define\
    \ the\n    user API to the C++ URDF model.\n  "
  'name': 'urdf_interface'
  'repo': 'robot_model'
- 'brief': 'pr2_pick_and_place_demos'
  'description': "\n\n    Example applications that call the services provided by\
    \ the\n    manipulation pipeline.\n\n  "
  'name': 'pr2_pick_and_place_demos'
  'repo': 'wg-ros-pkg'
- 'brief': 'shadow_ethercat_hardware'
  'description': "\n\n     EtherCAT device plugin for Shadow Hand.\n\n  "
  'name': 'srh_ethercat_hardware'
  'repo': 'wg-ros-pkg'
- 'brief': 'coverage_potentfield_nomap'
  'description': "\n\n     coverage_potentfield_nomap\n\n  "
  'name': 'coverage_potentfield_nomap'
  'repo': 'brown-experimental'
- 'brief': 'Cartesian Motion'
  'description': "\n        This package contains a cartesian motion task.\n\t   \
    \ Part of the iTaSC-Skill framework, itasc_tasks.\n    "
  'name': 'cartesian_motion'
  'repo': 'itasc_tasks'
- 'brief': 'cob_vision_utils'
  'description': "\n\n     cob_vision_utils\n\n  "
  'name': 'cob_vision_utils'
  'repo': 'cob_common'
- 'brief': 'image_transport'
  'description': "\n\n     image_transport should always be used to subscribe to and\
    \ publish images. It provides transparent\n     support for transporting images\
    \ in low-bandwidth compressed formats. Examples (provided by separate\n     plugin\
    \ packages) include JPEG/PNG compression and Theora streaming video.\n\n  "
  'name': 'image_transport'
  'repo': 'ros-pkg'
- 'brief': 'verify_wrist_flags'
  'description': "\n\n     verify_wrist_flags\n\n  "
  'name': 'verify_wrist_flags'
  'repo': 'wg-ros-pkg'
- 'brief': 'herb_agents'
  'description': "\n   Agent scripts for HERB.\n  "
  'name': 'herb_agents'
  'repo': 'behavior_engine'
- 'brief': 'vicon_nodes'
  'description': "\n\n     vicon_nodes\n     \n     A collection of simple nodes that\
    \ use libvicon\n\n  "
  'name': 'vicon_nodes'
  'repo': 'uuisrc-ros-pkg'
- 'brief': 'Transmissions used in the DARPA ARM Robot Simulator'
  'description': 'Transmissions used in the DARPA ARM Robot Simulator'
  'name': 'SimGazeboTransmissions'
  'repo': 'darpa_arm_sim_servers'
- 'brief': 'graph_slam'
  'description': "\n\n     graph_slam\n\n  "
  'name': 'graph_slam'
  'repo': 'ros-pkg'
- 'brief': 'cram_plan_knowledge'
  'description': "\n\n     cram_occasions\n\n  "
  'name': 'cram_plan_knowledge'
  'repo': 'cram_highlevel'
- 'brief': 'Robot VIsualiZer'
  'description': "\n    \n    A 3d visualization environment for robots using ROS.\n\
    \    \n    "
  'name': 'test_rve'
  'repo': 'visualization_engine'
- 'brief': 'Plugin for visualizing 3D poses'
  'description': "\n\n     rosgui_pose_view provides a rosgui plugin for visualizing\
    \ 3D poses.\n\n  "
  'name': 'rosgui_pose_view'
  'repo': 'ros_gui'
- 'brief': 'surfel_conversion'
  'description': "\n\n     surfel_conversion\n\n  "
  'name': 'surfel_conversion'
  'repo': 'wg-ros-pkg'
- 'brief': 'clutter_segmentation'
  'description': "\n\n     Segmentation of 3d pointclouds in clutter vs. table surface\n\
    \     Uses classifiers trained from 104 hand-labeled clutter table\n     scans\
    \ combing 3d LIDAR and camera color information.\n     \n     The original training\
    \ data is at: www.hrl.gatech.edu/data/clutter\n     \n     Brunt of the work is\
    \ done by: processor.py\n     Main file is: run_segmentation_PR2.py\n\n  "
  'name': 'clutter_segmentation'
  'repo': 'gt-ros-pkg'
- 'brief': 'Fingertip Pressure'
  'description': "\n\nThis package provides access to the PR2 fingertip pressure sensors.\
    \ This information includes:\n<ul>\n  <li>visualization of the pressure map in\
    \ <a href=\"http://ros.org/wiki/rviz\">Rviz</a> or in a standalone panel.</li>\n\
    \  <li>calibration-related data such as scaling factors, zero points and reference\
    \ frames. </li>\n</ul>\n\n"
  'name': 'fingertip_pressure'
  'repo': 'wg-ros-pkg'
- 'brief': 'rosjs_tests'
  'description': "\n    rosjs tests.\n  "
  'name': 'rosjs_tests'
  'repo': 'bosch-ros-pkg'
- 'brief': 'URDF for a Pioneer 5-DOF robotic arm'
  'description': "\n\n     This package contains the URDF for a Pioneer 5-DOF robotic\
    \ arm. Because this modular \n     arm may be attached to any existing robot (e.g.\
    \ a Pioneer 3DX, a Pioneer 3AT, ...), \n     some amount of indirection is required\
    \ to a viable URDF. A custom Python script is \n     included that reads an existing\
    \ robot URDF/Xacro file, inserts the Pioneer Arm URDF,\n     then loads the result\
    \ into the standard &quot;robot_description&quot; parameter. The original \n \
    \    robot description is not modified by this process.\n\n  "
  'name': 'pioneer_arm_description'
  'repo': 'gt-ros-pkg'
- 'brief': 'sr_hardware_interface'
  'description': "\n\n    This package contains the actuator used in the hand model.\n\
    \n  "
  'name': 'sr_hardware_interface'
  'repo': 'shadow_robot'
- 'brief': 'bma180'
  'description': "\n\n     This package contains drivers for Bosch BMA180 accelerometers.\
    \ The BMA180 is a 3 axis sensor with configurable sensitivity ranges and event\
    \ interrupts. As of 2/2012, the driver requires that the devices be connected\
    \ to the host computer with a Sub20 interface device.\n\n  "
  'name': 'bma180'
  'repo': 'bosch-ros-pkg'
- 'brief': 'Hokuyo laser rangefinder drivers'
  'description': '

    This corobot_hokuyo package is just an integration of the package hokuyo_node
    from Brian P. Gerkey, Jeremy Leibs and Blaise Gassend into the Corobot stack to
    make it easier for CoroWare''s client to setup their robot.

    A ROS node to provide access to SCIP 2.0-compliant Hokuyo laser range finders
    (including 04LX).'
  'name': 'corobot_hokuyo'
  'repo': 'roscorobot'
- 'brief': 'Dynamic graph CORBA bindings'
  'description': "\n\n    FIXME\n\n  "
  'name': 'dg-middleware'
  'repo': 'jrl-ros-pkg'
- 'brief': 'skin_config'
  'description': "\n\n     skin_config\n\n  "
  'name': 'skin_config'
  'repo': 'bosch-ros-pkg'
- 'brief': 'Temporarily stores patches for ros on windows till merged upstream'
  'description': "\n\n     This is a temporary storage place for patches that enable\
    \ ros on windows until these\n     patches have been merged upstream.\n\n  "
  'name': 'win_patches'
  'repo': 'win_ros'
- 'brief': 'PR2 Controller Manager'
  'description': "\n\n<p>\nThe controller manager (CM) package provides the infrastructure\
    \ to\nrun controllers in a hard realtime loop. In every cycle of the control\n\
    loop, all controllers loaded into CM will get triggered. The order in in\nwhich\
    \ the controllers are triggered is determined by the CM scheduler.\nCM provides\
    \ ROS services to load/start/stop/unload controllers.\n</p>\n<p>\nThe controller\
    \ manager also enforces low level safety limits \non the effort/velocity/position\
    \ of each joint.\n</p>\n\n"
  'name': 'pr2_controller_manager'
  'repo': 'pr2_mechanism'
- 'brief': ''
  'description': 'A Mapper for a 2D environment'
  'name': 'mapper_cu'
  'repo': 'prairiedog'
- 'brief': 'binary_pairs'
  'description': "\n\n     binary_pairs\n\n  "
  'name': 'binary_pairs'
  'repo': 'wg-ros-pkg'
- 'brief': 'kinematics_base'
  'description': "\n    This is a base class for kinematics implementations\n  "
  'name': 'kinematics_base'
  'repo': 'arm_navigation'
- 'brief': 'Sparse matrix routines'
  'description': "\n\n    Sparselib++ is a set of sparse matrix routines in C++ from\
    \ NIST\n\n  "
  'name': 'sparselib'
  'repo': 'ros-pkg'
- 'brief': 'nbv_main'
  'description': "\n\n     nbv_main\n\n  "
  'name': 'nbv_main'
  'repo': 'usc-ros-pkg'
- 'brief': 'rcf_com_roomba_base'
  'description': "\n\n     rcf_com_roomba_base\n     \n     The Roomba robot base\
    \ driver for the communication layer in rcf4ros.\n     \n     Use this driver\
    \ to control the Roomba's actors and read from the sensors.\n     \n     Features:\n\
    \     * Moving with the differential drive unit\n     * Control LEDs, vacuum and\
    \ song mode\n     * Odometric intgration an update of world frame robot pose\n\
    \n  "
  'name': 'rcf_com_roomba_base'
  'repo': 'roblab-whge-ros-pkg'
- 'brief': 'photo_processing'
  'description': "\n\n     photo_processing\n\n  "
  'name': 'photo_processing'
  'repo': 'wg-ros-pkg'
- 'brief': ''
  'description': 'no description'
  'name': 'annotation_srvs'
  'repo': 'ias_common'
- 'brief': 'ik_control'
  'description': "\n\n     ik_control\n\n  "
  'name': 'ik_control'
  'repo': 'brown-experimental'
- 'brief': 'pixel_2_3d'
  'description': "\n\n     Simple utility used to convert pixels on an image to 3d\
    \ points using point cloud data.\n\n  "
  'name': 'pixel_2_3d'
  'repo': 'gt-ros-pkg'
- 'brief': 'landmark_finder'
  'description': "\n\n     landmark_finder\n\n  "
  'name': 'landmark_finder'
  'repo': 'seabee3-ros-pkg'
- 'brief': 'cob_env_model_msgs'
  'description': "\n\n     cob_env_model_msgs\n\n  "
  'name': 'cob_3d_mapping_msgs'
  'repo': 'cob_environment_perception'
- 'brief': 'slam_communications'
  'description': "\n\n     The slam_communications package declares messages and services\
    \ for the SLAM\n\n  "
  'name': 'slam_communications'
  'repo': 'pandora-auth-ros-pkg'
- 'brief': 'roomba_500_series'
  'description': "\n\n     iRobot Roomba 500 package based on the iRobot Open Interface\
    \ Specification. There are two nodes available, a light node which exposes odometry\
    \ and velocity commands, and a full node which exposes all capabilities of the\
    \ underlying library.\n\n  "
  'name': 'roomba_500_series'
  'repo': 'roomba_robot'
- 'brief': 'Type traits and extensions beyond c++'
  'description': "\n\n     Extends c++ type traits and implements a few more to boot.\n\
    \n  "
  'name': 'ecl_type_traits'
  'repo': 'ecl_core'
- 'brief': 'ar_pose'
  'description': "\n    Augmented Reality Marker Pose Estimation using ARToolkit\n\
    \  "
  'name': 'ar_pose'
  'repo': 'ccny_vision'
- 'brief': 'a simple audio capture node which streams raw audio'
  'description': "\n        This package grabs a live audio stream from PortAudio\
    \ and ships it across the\n        ROS botnet. The program grabs the &quot;default&quot;\
    \ audio stream. I can't speak for\n        other distros, but on Ubuntu the default\
    \ stream is settable via the GNOME\n        &quot;System-&gt;Preferences-&gt;Sound&quot;\
    \ box. I set the &quot;Sound Capture&quot; field to &quot;ALSA&quot; and\n   \
    \     use &quot;alsamixer&quot; on the command line to poke around until I get\
    \ the microphone\n        jack working. Each motherboard seems to be a little\
    \ different in how the\n        various jacks come up in ALSA.\n\n        In XFCE\
    \ (xubuntu), I couldn't find it in the GUI, but either right-click the\n     \
    \   speaker icon in the taskbar, or type &quot;gnome-volume-control&quot; in the\
    \ console. \n        This will bring up a handy window which lets you select the\
    \ input device and\n        set the volume.\n\n        I assume there is a way\
    \ to do this all on headless boxen, but I haven't tried.\n        If someone is\
    \ sufficiently motivated to figure it out, let me know.\n    "
  'name': 'ua_audio_capture'
  'repo': 'ua-ros-pkg'
- 'brief': 'object_reach'
  'description': "\n\n     object_reach\n\n  "
  'name': 'object_reach'
  'repo': 'brown-experimental'
- 'brief': 'rosnode_rtc'
  'description': "\n\n     rosnode_rtc\n\n     This package gives transparency between\
    \ RTM and ROS.\n\n     rtmros-data-bridge.py is a RT-Component for dataport/topic.\n\
    \     This automatically convert ROS/topic into RTM/dataport.\n\n  "
  'name': 'rosnode_rtc'
  'repo': 'rtm-ros-robotics/rtmros_common'
- 'brief': 'kurt_2dnav'
  'description': "\n\n     kurt_2dnav\n\n  "
  'name': 'kurt_2dnav'
  'repo': 'uos-ros-pkg'
- 'brief': 'cl_transforms'
  'description': "\n\n     cl_transforms\n\n  "
  'name': 'cl_transforms'
  'repo': 'ros-pkg'
- 'brief': 'seabee3_driver_base'
  'description': "\n\n     seabee3_driver_base\n\n  "
  'name': 'seabee3_driver_base'
  'repo': 'seabee3-ros-pkg'
- 'brief': 'nxt_msgs'
  'description': "\n    The nxt_msgs package contains a set of messages to publish\
    \ data coming from various NXT sensor.\n\n  "
  'name': 'nxt_msgs'
  'repo': 'foote-nxt'
- 'brief': 'A local planner for a mobile base'
  'description': "\n\nThis package provides implementations of the Trajectory Rollout\
    \ and Dynamic Window approaches to local robot navigation on a plane. Given a\
    \ plan to follow and a costmap, the controller produces velocity commands to send\
    \ to a mobile base. This package supports both holonomic and non-holonomic robots,\
    \ any robot footprint that can be represented as a convex polygon or circle, and\
    \ exposes its configuration as ROS parameters that can be set in a launch file.\
    \ This package's ROS wrapper adheres to the BaseLocalPlanner interface specified\
    \ in the <a href=\"http://ros.org/wiki/nav_core\">nav_core</a> package. \n\n  "
  'name': 'base_local_planner'
  'repo': 'navigation'
- 'brief': 'rtt_control_msgs'
  'description': "\n\n    Provides an rtt typekit for ROS control_msgs messages.\n\
    \n    It allows you to use ROS messages transparently in\n    RTT components and\
    \ applications.\n\n    This package was automatically generated by the\n    create_rtt_msgs\
    \ generator and should not be manually\n    modified.\n\n    See the http://ros.org/wiki/control_msgs\
    \ documentation\n    for the documentation of the ROS messages in this\n    typekit.\n\
    \n  "
  'name': 'rtt_control_msgs'
  'repo': 'orocos_tools'
- 'brief': 'jsk_tidyup_demos'
  'description': "\nJsk_tidyup_demos is a set of demonstrations using PR2 and several\
    \ ROS packages.\nIt includes PR2:\n1. collects small objects on the table and\
    \ carrying them them to another place using a tray.\n2. finds a dish by detecting\
    \ circlar figures, grasps it and carries it to another place.\n3. collects washing\
    \ on a chair by finding wrinkle feature\n4. finds an object using stereo points\
    \ and then identifies it by comparing SURF feature on it and what the robot learned\
    \ previously.\n  "
  'name': 'jsk_tidyup_demos'
  'repo': 'wg-ros-pkg'
- 'brief': 'Sensor calibration routines using OpenRAVE''s planning features'
  'description': "\n    Package uses openrave planning and the robot_calibration stacks\
    \ to calibrate a robot's sensors. The calibration only depends on the openrave/collada\
    \ descriptions, therefore it is meant to be a relatively simple way of calibrating\
    \ new robots with one-click.\n  "
  'name': 'openrave_calibration'
  'repo': 'jsk-ros-pkg'
- 'brief': 'Controlling the door'
  'description': "\n  "
  'name': 'doorarmcontroller'
  'repo': 'cmu-ros-pkg'
- 'brief': 'saliency_tracking'
  'description': "\n\n     saliency_tracking\n\n    "
  'name': 'saliency_tracking'
  'repo': 'ua-ros-pkg'
- 'brief': 'dataFusion_communications'
  'description': "\n\n     The dataFusion_communications package contains messages\
    \ used for data fusion.\n\n  "
  'name': 'dataFusion_communications'
  'repo': 'pandora-auth-ros-pkg'
- 'brief': 'SSC32_component'
  'description': "\n\n     Example OROCOS component using the SSC32 library\n\n  "
  'name': 'SSC32_component'
  'repo': 'rtc-us-ros-pkg-branches'
- 'brief': 'Firewire camera library'
  'description': '

    libdc1394 is a library that provides a high level programming

    interface for application developers who wish to control IEEE 1394

    based cameras that conform to the 1394-based Digital Camera

    Specifications (also known as the IIDC or DCAM Specifications)

    '
  'name': 'libdc1394v2'
  'repo': 'cornell-ros-pkg'
- 'brief': 'Spacenav driver and SDK'
  'description': "\n\n    Open source, unofficial driver for the 3Dconnexion SpaceNavigator.\n\
    \t\tThis is a third party package. See the &quot;External Documentation&quot;\
    \ link for\n\t\tAPI details. Currently, revision r91 of the upstream repository\
    \ is being\n\t\tused in this package. \n\n  "
  'name': 'spacenav'
  'repo': 'ros-pkg'
- 'brief': 'roslaunch_tools'
  'description': "\n\n     roslaunch_tools\n\n  "
  'name': 'roslaunch_tools'
  'repo': 'wu-ros-pkg'
- 'brief': 'pr2_gripper_stereo'
  'description': "\n\n     A package for managing and launching stereo cameras attached\
    \ to the PR2 gripper.\n\n  "
  'name': 'pr2_gripper_stereo'
  'repo': 'wg-ros-pkg'
- 'brief': ''
  'description': 'A node for accessing 3 sensing devices at once: a STOC, a SR4k,
    and a FLIR thermal camera.'
  'name': 'composite_node'
  'repo': 'tum-ros-pkg'
- 'brief': 'cyphy_ros_gps'
  'description': "\n\tPackage to parse NMEA strings and publish a very simple GPS\
    \ messgae. Does not require the GPSD deamon.\n  "
  'name': 'cyphy_ros_gps'
  'repo': 'cyphy'
- 'brief': 'Scripts for ecl tools and utilities'
  'description': "\n\n     Python scripts for ecl tools and utilities.\n\n  "
  'name': 'ecl_scripts'
  'repo': 'ecl_tools'
- 'brief': 'turtlebot_dashboard'
  'description': "\n\n     turtlebot_dashboard\n\n  "
  'name': 'turtlebot_dashboard'
  'repo': 'turtlebot_viz'
- 'brief': 'SafetyLight_sim_server'
  'description': "\n\n     SafetyLight_sim_server\n\n  "
  'name': 'SafetyLight_sim_server'
  'repo': 'darpa_arm_sim_servers'
- 'brief': 'laser_signal_filter'
  'description': "\n\n     laser_signal_filter\n\n  "
  'name': 'laser_signal_filter'
  'repo': 'parsec'
- 'brief': 'Orocos extendedKalmanFilterComponentRobot package'
  'description': "\n        This package contains the components of the extendedKalmanFilterComponent\
    \ package\n        It is a generic component estimated the state with a n'th (configurable)\
    \ order system model and a linear analytic measurement model with additive gaussian\
    \ noise.\n    "
  'name': 'extendedKalmanFilterComponentRobot'
  'repo': 'euRobotics_orocos_ws'
- 'brief': 'c3_hlac_core'
  'description': "\n\n     ROS wrapper for core functions in C3-HLAC feature extraction.\n\
    \n  "
  'name': 'c3_hlac_core'
  'repo': 'isi-ros-pkg'
- 'brief': 'Fly with objects e. g. a camera through gazebo worlds'
  'description': "\n    This package implements a flying camera for exploring gazebo\
    \ worlds.<br/>\n    The camera_move node is optimized to work with 3Dconnexion's\
    \ SpaceNavigator.\n  "
  'name': 'sim_camera'
  'repo': 'vmi-ros-pkg'
- 'brief': 'cover'
  'description': "\n\n     cover\n\n  "
  'name': 'cover'
  'repo': 'brown-experimental'
- 'brief': 'Vision-based Pose Detection Database Scripts'
  'description': "\n  "
  'name': 'posedetectiondb'
  'repo': 'jsk-ros-pkg'
- 'brief': 'hrl_pr2_door_opening'
  'description': "\n     Door opening on the PR2.\n  "
  'name': 'hrl_pr2_door_opening'
  'repo': 'gt-ros-pkg'
- 'brief': 'SR4000_msgs'
  'description': "\n\n     SR4000_msgs\n\n  "
  'name': 'SR4000_msgs'
  'repo': 'darpa_arm_msgs'
- 'brief': 'corobot_gps'
  'description': "\n\n     corobot_gps connects to a GPSd server and broadcasts\n\
    \     GPS fixes using the NavSatFix message.\n     The package is based of the\
    \ gpsd_client package made by Rob Thomson and Ken Tossell. \n\n  "
  'name': 'corobot_gps'
  'repo': 'roscorobot'
- 'brief': 'collision_proximity'
  'description': "\n\n     collision_proximity provides an API for maintaining distance\
    \ fields through the planning_models paradigm. It provides functionality for generating\
    \ distance fields from planning scenes, decomposing objects into swept sphere\
    \ volumes, and finding distances and gradients for all points on a robot.\n\n\
    \  "
  'name': 'collision_proximity'
  'repo': 'arm_navigation_experimental'
- 'brief': 'Gazebo Patcher'
  'description': "\n    Gazebo Plugins for Darm Sim.\n  "
  'name': 're2gazeboPatch'
  'repo': 'darpa_arm_sim_servers'
- 'brief': 'Hokuyo laser rangefinder drivers'
  'description': 'A ROS node to provide access to SCIP 2.0-compliant Hokuyo laser
    range finders (including 04LX).'
  'name': 'hokuyo_node_plus'
  'repo': 'wg-ros-pkg'
- 'brief': 'jpeg_streamer'
  'description': "\n\n     tools for streaming JPEG-formatted CompressedImage topics\
    \ over HTTP\n\n  "
  'name': 'jpeg_streamer'
  'repo': 'umd-ros-pkg'
- 'brief': 'household_objects_database_msgs'
  'description': "\n\n    ROS message wrappers for some of the data retrieval functions\
    \ of\n    the household_objects_database.\n\n  "
  'name': 'household_objects_database_msgs'
  'repo': 'wg-ros-pkg'
- 'brief': 'Mesh Conversion Utility'
  'description': '


    Mesh Conversion Utility


    Used to generate ''.iv'' files from ''.stl'' files.  This package has not

    been changed since 2001 and appears to be very stable.  We plan on

    keeping this package in this revision for mesh conversions.  This

    package is only available as a single source file for download.  There

    are no local modifications to this package.


    '
  'name': 'ivcon'
  'repo': 'robot_model'
- 'brief': 'arduino_hello_world'
  'description': "\n\n     arduino_hello_world\n\n  "
  'name': 'arduino_hello_world'
  'repo': 'rtc-us-ros-pkg-branches'
- 'brief': 'rcconsole'
  'description': "\n\n     rcconsole\n\n  "
  'name': 'rcconsole'
  'repo': 'parsec'
- 'brief': 'kinect_mapping2'
  'description': "\n\n     kinect_mapping\n\n  "
  'name': 'kinect_mapping2'
  'repo': 'ccny_experimental'
- 'brief': 'erratic_gazebo_plugins'
  'description': "\n        Contains a differential drive plugin that works with the\
    \ erratic robot model provided\n        in the erratic_description package. The\
    \ plugin may also work for other differential drive \n        robots. The purpose\
    \ of this custom plugin is to build the ROS functionality directly into a \n \
    \       proper Gazebo plugin, rather than a node that communicates with Gazebo.\
    \ \n    "
  'name': 'erratic_gazebo_plugins'
  'repo': 'erratic_robot'
- 'brief': 'Headers and message definitions for communication with the AscTec helicopters'
  'description': "\n\n     This Package contains header files for communication with\
    \ the HL controller on the AscTec AutoPilot and custom message, server, and action\
    \ definitions \n\n  "
  'name': 'asctec_hl_comm'
  'repo': 'asctec_mav_framework'
- 'brief': 'vicon_mocap'
  'description': "\n\n     vicon_mocap\n\n  "
  'name': 'vicon_mocap'
  'repo': 'starmac-ros-pkg'
- 'brief': 'katana_tabletop_collision_map_processing'
  'description': "\n\n     katana_tabletop_collision_map_processing\n\n  "
  'name': 'katana_tabletop_collision_map_processing'
  'repo': 'uos-ros-pkg'
- 'brief': 'Executive for capture data for running PR2''s full system calibration'
  'description': "\n     Executive for capture data for running PR2's full system\
    \ calibration. This package is\n     still experimental.  Expect APIs to change.\n\
    \  "
  'name': 'pr2_calibration_executive'
  'repo': 'pr2_calibration'
- 'brief': 'Orocos/RTT component framework'
  'description': "\n    "
  'name': 'rtt'
  'repo': 'orocos_toolchain'
- 'brief': 'semweb'
  'description': "\n      Patched version of the swi-prolog semweb library.\n  "
  'name': 'semweb'
  'repo': 'knowrob'
- 'brief': 'guiabot_2dnav'
  'description': "\n\n     guiabot_2dnav\n\n  "
  'name': 'guiabot_launch'
  'repo': 'cyphy'
- 'brief': 'faces'
  'description': "\n\n     faces\n\n  "
  'name': 'faces'
  'repo': 'brown-experimental'
- 'brief': 'Originally auto-generated by wizard, now heavily modified.'
  'description': "\n    Originally auto-generated by wizard, now heavily modified.\n\
    \  "
  'name': 'maxwell_arm_navigation'
  'repo': 'vanadium-ros-pkg'
- 'brief': 'stereo_object_model_generation'
  'description': "\n\n     stereo_object_model_generation\n\n  "
  'name': 'stereo_object_model_generation'
  'repo': 'wg-ros-pkg'
- 'brief': 'Wubble robot gmapping application'
  'description': "\n\n     wubble_mapping\n\n    "
  'name': 'wubble_mapping'
  'repo': 'ua-ros-pkg'
- 'brief': 'industrial_io_client'
  'description': "\n\n     A generic client to control tools and other devices that\
    \ are connected\n     to an industrial robot controller.\n\n  "
  'name': 'industrial_io_client'
  'repo': 'swri-ros-pkg'
- 'brief': '3D Meshes and URDF for the Wubble Arm'
  'description': "\n        3D model of a Wubble Arm (Dynamixel-based 7 DOF robotic\
    \ arm with 2 DOF gripper).\n    "
  'name': 'wubble_arm_description'
  'repo': 'ua-ros-pkg'
- 'brief': 'Prevent robot base from driving into objects using Bosch Skin'
  'description': "\n\n\tThe skin_safe_base node uses skin patches mounted to the robot's\
    \ base to determine in which directions the robot can drive without hitting obstacles.\
    \ The node constantly publishes command_limits messages and prevents driving/truning\
    \ in a specific direction if something blocks a sensor in that direction. The\
    \ command_limits are enforced by using the safe_base_controller instead of the\
    \ PR2's regular base_controller. The mapping of the patch ids to their location\
    \ on the robots base is done using the skin_safe_base.yaml file.\n\n  "
  'name': 'skin_safe_base'
  'repo': 'bosch-ros-pkg'
- 'brief': 'rosparam command-line tool'
  'description': '


    <p>

    rosparam contains the rosparam command-line tool for getting and setting ROS Parameters
    on the <a href="http://www.ros.org/wiki/Parameter%20Server">Parameter Server</a>
    using YAML-encoded files. It also contains an experimental library for using YAML
    with the Parameter Server. This library is intended for internal use only.

    </p>

    <p>

    rosparam can be invoked within a <a href="http://www.ros.org/wiki/roslaunch">roslaunch</a>
    file.

    </p>


    '
  'name': 'rosparam'
  'repo': 'ros_comm'
- 'brief': 'flyer_interface'
  'description': "\n\n     flyer_interface\n\n  "
  'name': 'flyer_interface'
  'repo': 'ccny_experimental'
- 'brief': 'The Bayesian Filtering Library (latest)'
  'description': "\n\n  This package contains a recent version of the Bayesian Filtering\n\
    \  Library (BFL), distributed by the Orocos Project.  For stability\n  reasons,\
    \ this package is currently locked to revision 31655 (April\n  19, 2010), but\
    \ this revision will be updated on a regular basis to\n  the latest available\
    \ BFL trunk.  This ROS package does not modify\n  BFL in any way, it simply provides\
    \ a convenient way to download and\n  compile the library, because BFL is not\
    \ available from an OS package\n  manager.  This ROS package compiles BFL with\
    \ the Boost library for\n  matrix operations and random number generation.\n\n"
  'name': 'bfl'
  'repo': 'bfl'
- 'brief': 'actionlib_lua'
  'description': "\n    Lua modules to deal with actionlib.\n  "
  'name': 'actionlib_lua'
  'repo': 'behavior_engine'
- 'brief': 'plate_tf'
  'description': "\n\n     plate_tf\n\n  "
  'name': 'plate_tf'
  'repo': 'flyatar'
- 'brief': 'hippo_teleop'
  'description': "\n\n     hippo_teleop\n\n  "
  'name': 'hippo_teleop'
  'repo': 'vanadium-ros-pkg'
- 'brief': 'sr_automatic_pid_tuning'
  'description': "\n\n     sr_automatic_pid_tuning is an automatic pid tuner using\
    \ eodev.\n\n  "
  'name': 'sr_automatic_pid_tuning'
  'repo': 'shadow_robot'
- 'brief': 'Run the ART vehicle'
  'description': "\n\n     Tools to run the Austin Robot Technology autonomous vehicle.\n\
    \n  "
  'name': 'art_run'
  'repo': 'utexas-art-ros-pkg'
- 'brief': 'naoTalk'
  'description': "\n     naoTalk demonstrates the use of String messages to make use\
    \ of the NAO's text-to-speech capabilities.\n  "
  'name': 'naoTalk'
  'repo': 'brown-experimental'
- 'brief': 'cram_plan_library'
  'description': "\n\n     cram_plan_library\n\n  "
  'name': 'cram_plan_library'
  'repo': 'cram_highlevel'
- 'brief': 'Control and query the audio/video devices on a WowWee Rovio'
  'description': 'The rovio_av package contains nodes to control and query the audio/video
    devices on a WowWee Rovio. Video streaming is provided via the gscam package.'
  'name': 'rovio_av'
  'repo': 'wpi-rail-ros-pkg'
- 'brief': 'geometric_semantics_tf'
  'description': "\n\n    This package provides support for <a href=\"http://www.ros.org/wiki/tf\"\
    >tf</a> datatypes (see <a href=\"http://www.ros.org/wiki/tf/Overview/Data%25%32%30Types\"\
    >http://www.ros.org/wiki/tf/Overview/Data%20Types</a>) on top of the <a href=\"\
    http://www.ros.org/wiki/geometric_semantics\">geometric_semantics</a> package\
    \ (for instance tf::Pose to represent the relative pose of two rigid bodies).\n\
    \n  "
  'name': 'geometric_semantics_tf'
  'repo': 'geometric_relations_semantics'
- 'brief': 'Static map server'
  'description': "\n\n    map_server provides the <tt>map_server</tt> ROS <a href=\"\
    http://www.ros.org/wiki/Nodes\">Node</a>, which offers map data as a ROS <a href=\"\
    http://www.ros.org/wiki/Services\">Service</a>. It also provides the <tt>map_saver</tt>\
    \ command-line utility, which allows dynamically generated maps to be saved to\
    \ file.\n\n  "
  'name': 'map_server'
  'repo': 'navigation'
- 'brief': 'Message definitions for AAAI Chess 2011'
  'description': ''
  'name': 'chess_msgs'
  'repo': 'vanadium-ros-pkg'
- 'brief': 'canonical_scan_matcher2'
  'description': "\n\n     A wrapper around Andrea Censi's Canonical Scan Matcher\
    \ implementation, used for laser scan registration.\n     More about CSM: http://www.cds.caltech.edu/~andrea/research/sw/csm.html\n\
    \n  "
  'name': 'canonical_scan_matcher2'
  'repo': 'ccny_experimental'
- 'brief': 'pr2_grasp_behaviors'
  'description': "\n\n     Quick overhead grasping for the PR2. Objects are percieved\
    \ using the tabletop_object_detector package and grasped from above using interpolated\
    \ IK, modified to keep the elbows up. Collisions are detected by monitoring joint\
    \ errors using thresholds learned by sampling different &quot;empty grasps&quot;.\
    \ \n\n  "
  'name': 'pr2_grasp_behaviors'
  'repo': 'gt-ros-pkg'
- 'brief': 'ar_recog'
  'description': "\nar_recog processes ROS image-transports with ARToolkit. \n  "
  'name': 'ar_recog'
  'repo': 'brown-experimental'
- 'brief': 'state_manager_communications'
  'description': "\n\n     Communications package for State Manager\n\n  "
  'name': 'state_manager_communications'
  'repo': 'pandora-auth-ros-pkg'
- 'brief': 'costmap_services'
  'description': "\n\n    costmap services\n\n  "
  'name': 'costmap_services'
  'repo': 'gt-ros-pkg'
- 'brief': 'doors_forces_kinematics'
  'description': "\n        Python code related to estimating and using the kinematics\
    \ and\n        forces required to open doors and drawers.\n    "
  'name': 'doors_forces_kinematics'
  'repo': 'gt-ros-pkg'
- 'brief': 'exampleClient'
  'description': "\n\n     exampleClient\n\n  "
  'name': 'exampleClient'
  'repo': 'brown-experimental'
- 'brief': 'drone_teleop'
  'description': "\n\n     drone_teleop\n\n  "
  'name': 'drone_teleop'
  'repo': 'brown-experimental'
- 'brief': 'Test utility for benchmarking topic latencies'
  'description': "\n\n     Generates statistical data providing a benchmark for msg\
    \ latencies.\n\n  "
  'name': 'eros_msg_latency'
  'repo': 'eros'
- 'brief': 'pr2_plugs_common'
  'description': "\n\n     pr2_plugs_common contains common utilies for plugging in\
    \ the PR2 robot. \n\n  "
  'name': 'pr2_plugs_common'
  'repo': 'pr2_plugs'
- 'brief': 'rosjs_visualization'
  'description': "\n    rosjs common.\n  "
  'name': 'rosjs_visualization'
  'repo': 'bosch-ros-pkg'
- 'brief': 'Allows to work with Kinect Point Cloud Images via Skype.'
  'description': "\n     Allows to work with Kinect Point Cloud Images via Skype.\n\
    \  "
  'name': 'kinect4skype'
  'repo': 'vmi-ros-pkg'
- 'brief': 'corobot_state_tf'
  'description': "\n\n     corobot_state_tf register 2 topics, sending the odometry\
    \ in the form of a nav_msgs::Odometry message and the Transform.\n\n  "
  'name': 'corobot_state_tf'
  'repo': 'roscorobot'
- 'brief': 'A library of metaprogramming structures'
  'description': "\n\n  Metaprogramming tools move alot of runtime calculations to\
    \ be shifted to\n  compile time. This has only very elementary structures at this\
    \ stage.\n \n  "
  'name': 'ecl_mpl'
  'repo': 'ecl_core'
- 'brief': 'SLAM on RGBD Data'
  'description': "\n    This package can be used to register the point clouds from\
    \ RGBD sensors such as the kinect or stereo cameras.\n    The rgbdslam node can\
    \ be connected easily to an octomap_server node to create a memory-efficient 3D\
    \ map.\n  "
  'name': 'rgbdslam'
  'repo': 'alufr-ros-pkg'
- 'brief': 'cram_plan_actionserver'
  'description': "\n\n     cram_plan_actionserver\n\n  "
  'name': 'cram_plan_actionserver'
  'repo': 'cram_highlevel'
- 'brief': 'gazebo'
  'description': "\n\n  This ROS package checks out and compiles a hand-picked stable\
    \ mercurial revision of the gazebo-1.x.x/release candidate from the\n    <a href=\"\
    http://gazebosim.org\">Gazebo Project</a>.\n  This package also provides some\
    \ ROS plugins for working under the ROS environment.\n  This package will update\
    \ to newer gazebo-1.x.x releases of Gazebo incrementally as new revisions are\
    \ made stable.\n\n  If you are a developer and would like to contribute to the\
    \ Gazebo simulator project directly, please visit\n    <a href=\"http://kforge.ros.org/projects/gazebo\"\
    >Kforge Gazebo Project page</a> and ask to join the project.\n\n  "
  'name': 'gazebo'
  'repo': 'ros-pkg'
- 'brief': 'CRAM math utilities.'
  'description': "\n    Math utilities. This includes functions for sampling from\n\
    \    arbitrary probability distributions and utilities to work with\n    poses,\
    \ vectors and quaternions.\n  "
  'name': 'cram_math'
  'repo': 'cram_pl'
- 'brief': 'libsiftfast'
  'description': "\n    Library to compute SIFT features\n  "
  'name': 'libsiftfast'
  'repo': 'jsk-ros-pkg'
- 'brief': 'schunk_libm5api'
  'description': "\n\n     This package wraps the libm5api to use it as a ros dependency.\n\
    \n  "
  'name': 'schunk_libm5api'
  'repo': 'schunk_modular_robotics'
- 'brief': 'table_costmap'
  'description': "\n\n     table_costmap\n\n  "
  'name': 'table_costmap'
  'repo': 'cram_highlevel'
- 'brief': 'path_navigator'
  'description': "\n\n     path_navigator\n\n  "
  'name': 'path_navigator'
  'repo': 'brown-experimental'
- 'brief': 'SafetyLight_msgs'
  'description': "\n\n     SafetyLight_msgs\n\n  "
  'name': 'SafetyLight_msgs'
  'repo': 'darpa_arm_msgs'
- 'brief': 'laser_cliff_safety'
  'description': "\n\n     laser_cliff_safety\n\n  "
  'name': 'laser_cliff_safety'
  'repo': 'wg-ros-pkg'
- 'brief': 'flysim_teleop'
  'description': "\n\n     flysim_teleop is a simple package to demonstrate how to\
    \ write a teleoperation node in ROS using the flysim.\n\n  "
  'name': 'flysim_teleop'
  'repo': 'flyatar'
- 'brief': 'patrolling_sim'
  'description': ' Multi-Robot Patrolling Stage/ROS Simulation Package.'
  'name': 'patrolling_sim'
  'repo': 'patrol'
- 'brief': 'lwa_arm_navigation'
  'description': "\n\n     lwa_arm_navigation\n\n  "
  'name': 'lwa_arm_navigation'
  'repo': 'cob_manipulation'
- 'brief': 'point_head_at_planes'
  'description': "\n\n     point_head_at_planes\n\n  "
  'name': 'point_head_at_planes'
  'repo': 'wg-ros-pkg'
- 'brief': 'ias_table_msgs'
  'description': "\n     Messages for table perception applications at TUM.\n  "
  'name': 'ias_table_msgs'
  'repo': 'mapping'
- 'brief': 'quickdev_cpp'
  'description': "\n\n     A toolbox designed to speed up the development time of\
    \ code by providing generic implementations and utilities.\n\n  "
  'name': 'quickdev_cpp'
  'repo': 'usc-ros-pkg'
- 'brief': 'Roaming with multiple network interfaces.'
  'description': "\n    <p>\n    This package allows automatic configuration and switching\
    \ between \n    multiple network interfaces. It can be used in combination with\
    \ a VPN\n    tunnel to achieve seamless wifi roaming, and near-instantaneous\n\
    \    transitioning between multiple available network interfaces.\n  </p>\n  <p>\n\
    \    Currently only wifi interfaces are supported.\n  </p>\n  "
  'name': 'multi_interface_roam'
  'repo': 'ros-pkg'
- 'brief': 'guardian_2dnav'
  'description': "\n  Contains all the configuration files needed to execute the AMCL\
    \ and SLAM navigation algorism in the robot. \n  "
  'name': 'guardian_2dnav'
  'repo': 'guardian-ros-pkg'
- 'brief': 'startup'
  'description': "\n\n     startup\n\n  "
  'name': 'startup'
  'repo': 'jsk-ros-pkg'
- 'brief': 'a package that provides ros-vision functionality in cop'
  'description': "\n     a package to provide a Sensor plugin for cop\n  "
  'name': 'cop_ros_plugins'
  'repo': 'ias_perception'
- 'brief': 'pr2_arm_kinematics'
  'description': "\n   This package provides a kinematics implementation for the PR2\
    \ robot. It can be used to compute forward and inverse kinematics. \n  "
  'name': 'pr2_arm_kinematics'
  'repo': 'wg-ros-pkg'
- 'brief': 'lv1_msgs'
  'description': "\n\n     lv1_msgs\n\n  "
  'name': 'lv1_msgs'
  'repo': 'otl-ros-pkg'
- 'brief': 'mrpt_hokuyo'
  'description': "\n\n     mrpt_hokuyo\n\n  "
  'name': 'mrpt_hokuyo'
  'repo': 'mrpt-ros-pkg'
- 'brief': 'depth_image_proc'
  'description': "\n\n     Contains nodelets for processing depth images such as those\n\
    \     produced by OpenNI camera. Functions include creating disparity\n     images\
    \ and point clouds, as well as registering (reprojecting)\n     a depth image\
    \ into another camera frame.\n\n  "
  'name': 'depth_image_proc'
  'repo': 'openni_kinect'
- 'brief': 'rosjs_common'
  'description': "\n    rosjs common.\n  "
  'name': 'rosjs_common'
  'repo': 'bosch-ros-pkg'
- 'brief': 'Orocos calculateDistanceToWall Component package'
  'description': "\n        This package contains the components of the calculateDistanceToWall\
    \ package\n    "
  'name': 'calculateDistanceToWall'
  'repo': 'euRobotics_orocos_ws'
- 'brief': 'segway_rmpX'
  'description': "\n\n     segway_rmpX\n\n  "
  'name': 'segway_rmpX'
  'repo': 'segway-rmp-ros-pkg'
- 'brief': 'This package allows you to publish the state of a robot to the transform
    library topic. In contrast to robot_state_publisher, it publishes the complete
    kinematic chain.'
  'description': ''
  'name': 'robot_state_chain_publisher'
  'repo': 'tum-ros-pkg'
- 'brief': 'app suite for the ecl_navigation'
  'description': "\n\n     This includes a suite of programs demo'ing various aspects\
    \ of the\n     ecl_navigation. It also includes various benchmarking and utility\
    \ programs for\n     use primarily with embedded systems.\n\n  "
  'name': 'ecl_navigation_apps'
  'repo': 'ecl_navigation'
- 'brief': 'nxtstatus'
  'description': "\n\t\tNXTStatus\n\t"
  'name': 'bumpercar'
  'repo': 'lejos'
- 'brief': ''
  'description': ''
  'name': 'mesh_parameterization'
  'repo': 'bosch-ros-pkg'
- 'brief': 'jsk_maps'
  'description': "\n\n     jsk_maps\n\n  "
  'name': 'jsk_maps'
  'repo': 'jsk-ros-pkg'
- 'brief': 'smach_msgs'
  'description': "\n    This package contains a set of messages that are used in the\n\
    \    internal debugging interface of a SMACH state\n    machine. The <a href=\"\
    http://www.ros.org/wiki/smach_viewer\">smach\n    viewer</a> uses this debugging\
    \ interface to visualize complete\n    hierarchical state machines.\n  "
  'name': 'smach_msgs'
  'repo': 'executive_smach'
- 'brief': 'm3_full_description'
  'description': "\n\n     m3_full_description\n\n  "
  'name': 'm3_full_description'
  'repo': 'wg-ros-pkg'
- 'brief': 'visp_bridge'
  'description': "\n\n     visp_bridge\n\n  "
  'name': 'visp_bridge'
  'repo': 'stacks/vision_visp'
- 'brief': 'Extract checkerboards from images'
  'description': "\n    Provide a node that extracts checkerboard corners from ROS\
    \ images.\n    This package is still experimental and unstable.\n    Expect its\
    \ APIs to change.\n  "
  'name': 'image_cb_detector'
  'repo': 'calibration'
- 'brief': 'hrl_generic_arms'
  'description': "\n\n     hrl_generic_arms\n\n  "
  'name': 'hrl_generic_arms'
  'repo': 'gt-ros-pkg'
- 'brief': 'profiler'
  'description': "\n\n     A simple tool for defining timers and profiling code in\
    \ C++;\n     Brought in from GraspIt!.\n\n  "
  'name': 'profiling'
  'repo': 'wg-ros-pkg'
- 'brief': 'lua_utils'
  'description': "\n   This package provides utility classes to integrate Lua into\
    \ a C++ program.\n   The code is copied from Fawkes (http://www.fawkesrobotics.org).\n\
    \  "
  'name': 'lua_utils'
  'repo': 'behavior_engine'
- 'brief': 'sr_convenient_dependencies'
  'description': "\n\n     This is an empty package used for a convenient building\
    \ of our packages.\n\n  "
  'name': 'sr_convenient_dependencies'
  'repo': 'shadow_robot'
- 'brief': 'Teleoperation for Erratic robot'
  'description': "\n        This package contains keyboard teleoperation node used\
    \ to drive the\n        Erratic robot.\n    "
  'name': 'erratic_teleop'
  'repo': 'erratic_robot'
- 'brief': 'youbot_supervisor'
  'description': "\n\n     youbot_supervisor: this package contains deploy scripts\
    \ to launch the demo\n     application. It does not contain any source code\n\n\
    \  "
  'name': 'youbot_supervisor'
  'repo': 'euRobotics_orocos_ws'
- 'brief': 'powerremote'
  'description': "\n\n     powerremote\n\n  "
  'name': 'easy_remote'
  'repo': 'vmi-ros-pkg'
- 'brief': 'pr2_pickup_object_demo'
  'description': "\n\n     pr2_pickup_object_demo\n\n  "
  'name': 'pr2_pickup_object_demo'
  'repo': 'wg-ros-pkg'
- 'brief': 'coverage_controller_nomap'
  'description': "\n\n     coverage_controller_nomap\n\n  "
  'name': 'coverage_controller_nomap'
  'repo': 'brown-experimental'
- 'brief': 'rosh'
  'description': "\n\n     rosh is a Python-based scripting and runtime environment\
    \ for ROS.  Through rosh and its various plugins, you can interact with ROS APIs\
    \ in an introspectable and unified approach.\n\n  "
  'name': 'rosh'
  'repo': 'rosh_core'
- 'brief': 'network_traffic_control'
  'description': "\n  A ROS node that allows control of network emulation parameters\
    \ such as bandwidth, loss and latency for a Linux network interface. \n  "
  'name': 'network_traffic_control'
  'repo': 'ros-pkg'
- 'brief': 'contour_matcher'
  'description': "\n\n     contour_matcher\n\n  "
  'name': 'contour_matcher'
  'repo': 'seabee3-ros-pkg'
- 'brief': 'cob_description'
  'description': "\n\n  This package contains the description (mechanical, kinematic,\
    \ visual,\n  etc.) of the Care-O-bot robot. The files in this package are parsed\
    \ and used by\n  a variety of other components. Most users will not interact directly\n\
    \  with this package.\n\n  "
  'name': 'icob_description'
  'repo': 'cob_common'
- 'brief': 'soem_beckhoff_drivers'
  'description': "\n\n     soem_beckhoff_drivers contains drivers for the ethercat\
    \ beckhoff modules to work together with the soem_master package, every module\
    \ creates the necessary services, dataports and properties for its own functionality.\n\
    \n  "
  'name': 'soem_beckhoff_drivers'
  'repo': 'soem'
- 'brief': 'bondcpp'
  'description': "\n\n     C++ implementation of bond, a mechanism for checking when\n\
    \     another process has terminated.\n\n  "
  'name': 'bondcpp'
  'repo': 'bond_core'
- 'brief': 'cffi_ros_utils'
  'description': "\n\n     cffi_ros_utils\n\n  "
  'name': 'cffi_ros_utils'
  'repo': 'cram_physics'
- 'brief': 'cob_controller_configuration_gazebo'
  'description': "\n\n    This packages provides the controller configuration for\
    \ simulating Care-O-bot in the gazebo simulator.\n\n  "
  'name': 'cob_controller_configuration_gazebo'
  'repo': 'cob_simulation'
- 'brief': 'frontier based exploration'
  'description': 'A node that provides frontier based exploration.'
  'name': 'explore'
  'repo': 'bosch-ros-pkg'
- 'brief': 'projector_camera_calibration'
  'description': "\n\n     projector_camera_calibration\n\n  "
  'name': 'projector_camera_calibration'
  'repo': 'stanford-ros-pkg'
- 'brief': 'levmar'
  'description': "\n    A native ANSI C implementations of the Levenberg-Marquardt\
    \ optimization algorithm.\n  "
  'name': 'levmar'
  'repo': 'tum-ros-pkg'
- 'brief': 'Monitors temperature and usage of nVidia GPU'
  'description': "\nMonitors usage and temperature of nVidia GPU's using nvidia-smi.\n\
    \  "
  'name': 'nvidia_gpu_monitor'
  'repo': 'wg-ros-pkg'
- 'brief': 'A ROS wrapper for trimesh'
  'description': "\n  "
  'name': 'trimesh'
  'repo': 'bosch-ros-pkg'
- 'brief': 'tabletop_object_detector'
  'description': "\n    Performs object segmentation and simple object recognition\
    \ for\n    constrained scenes.\n  "
  'name': 'tabletop_object_detector'
  'repo': 'wg-ros-pkg'
- 'brief': 'cob_2dslam'
  'description': "\n\n     This Package provides launch files for running Care-O-bot\
    \ with the gmapping slam package of ROS.\n\n  "
  'name': 'cob_2dslam'
  'repo': 'cob_navigation'
- 'brief': 'kt2_gazebo_plugins'
  'description': "\n\n     kt2_gazebo_plugins\n\n  "
  'name': 'kt2_gazebo_plugins'
  'repo': 'wg-ros-pkg'
- 'brief': 'tabletop_segmentor'
  'description': "\n\n     tabletop_segmentor\n\n  "
  'name': 'tabletop_segmentor'
  'repo': 'brown-experimental'
- 'brief': 'tabletop_pushing'
  'description': "\n\n     tabletop_pushing\n\n  "
  'name': 'tabletop_pushing'
  'repo': 'gt-ros-pkg'
- 'brief': 'hector_marker_drawing'
  'description': "\n\n     hector_marker_drawing provides convenience functions for\
    \ easier publishing of visualization markers\n\n  "
  'name': 'hector_marker_drawing'
  'repo': 'tu-darmstadt-ros-pkg'
- 'brief': 'nodemon_cpp'
  'description': "\n    Node monitoring C++ library.\n  "
  'name': 'nodemon_cpp'
  'repo': 'node_monitoring'
- 'brief': 'sbpl_dynamic_env_global_planner'
  'description': "\n\nA wrapper around sbpl_dynamic_planner which allows it to be\
    \ used as a global planner for the navigation stack.\n\n  "
  'name': 'sbpl_dynamic_env_global_planner'
  'repo': 'sbpl_dynamic_env'
- 'brief': 'Cmake and make based build tools for generic and ros environments'
  'description': "\n\n     Collection of cmake/make build tools primarily for ecl\
    \ development itself, but also\n     contains a few cmake modules useful outside\
    \ of the ecl.\n\n  "
  'name': 'ecl_build'
  'repo': 'ecl_tools'
- 'brief': 'rxparamedit'
  'description': "\n     rxparamedit - A graphical parameter editor.\n  "
  'name': 'rxparamedit'
  'repo': 'alufr-ros-pkg'
- 'brief': 'pi_crustcrawler_arm'
  'description': "\n\n     pi_crustcrawler_arm\n\n  "
  'name': 'pi_crustcrawler_arm'
  'repo': 'pi-robot-ros-pkg'
- 'brief': 'interactive_kinematic'
  'description': "\n\n     interactive_kinematic\n\n  "
  'name': 'interactive_kinematic'
  'repo': 'rtc-us-ros-pkg-branches'
- 'brief': 'husky_teleop'
  'description': "\n    This package contains launch files which enable teleoperation\n\
    \    of the Clearpath Robotics Husky.\n  "
  'name': 'husky_teleop'
  'repo': 'clearpath-ros-pkg'
- 'brief': 'priority_mux_msgs'
  'description': "\n\n     priority_mux_msgs\n\n  "
  'name': 'priority_mux_msgs'
  'repo': 'parsec'
- 'brief': 'netft_example_controllers'
  'description': "\n\n     netft_example_controllers\n\n     Provides simple example\
    \ controller that shows how to \n     access force-torque data provided by netft_ethercat_hardware\
    \ plugin.\n\n     This also provides a convientent way to make sure that\n   \
    \  netft_ethercat_hardware plug-in is actually loaded and working.\n\n  "
  'name': 'netft_example_controllers'
  'repo': 'wg-ros-pkg'
- 'brief': 'rcRos'
  'description': "\n    Package to communicate with a low level avr over serial to\
    \ generate/receive RC pulses. \n  "
  'name': 'cyphy_rcRos'
  'repo': 'cyphy'
- 'brief': 'elektron_calibration'
  'description': "\n\n     Applications to calibrate Elektron motion sensors (gyroscope\
    \ and odometry).\n\n  "
  'name': 'elektron_calibration'
  'repo': 'elektron_kinectbot'
- 'brief': 'simulator_state'
  'description': "\n\n    Gazebo plugins for publishing the simulation state with\
    \ relations.\n\n    "
  'name': 'simulator_state'
  'repo': 'ua-ros-pkg'
- 'brief': 'indomptable_model'
  'description': "\n\n     indomptable_model\n\n  "
  'name': 'indomptable_model'
  'repo': 'smart-robotics-ros-pkg'
- 'brief': 'iowarrior'
  'description': "\n\n     Provides a package to control the relay-card.\n\n  "
  'name': 'iowarrior'
  'repo': 'roblab-whge-ros-pkg'
- 'brief': 'summit_odometry'
  'description': "\n\n     summit_odometry\n\n  "
  'name': 'summit_odometry'
  'repo': 'summit-ros-pkg'
- 'brief': 'cram_physics_utils'
  'description': "\n\n     cram_physics_utils\n\n  "
  'name': 'cram_physics_utils'
  'repo': 'cram_physics'
- 'brief': 'pr2_control_gui'
  'description': "\n\n     A control GUI for the PR2 which allows to save the joint\
    \ states in a stack.\n\n     Be careful with the values as there are no limits.\n\
    \n  "
  'name': 'pr2_control_gui'
  'repo': 'uuisrc-pr2-pkgs'
- 'brief': 'comp_orgprinciples'
  'description': "\n\n     Routines for reasoning about organizational principles\
    \ in the environment (Prolog).\n\n     Contains Prolog computables for calculating\
    \ the best location where a (new) object \n     should be placed (or searched\
    \ for), given a knowledge base containing an Ontology \n     including the object's\
    \ class and information about the locations of other objects\n     in the environment.\n\
    \n  "
  'name': 'comp_orgprinciples'
  'repo': 'knowrob'
- 'brief': 'BarrettCompat'
  'description': "\n\n     BarrettCompat \n\n  "
  'name': 'BarrettCompat'
  'repo': 'darpa_arm_sim_servers'
- 'brief': 'Messages for full robot calibration'
  'description': "\n     This package defines messages for storing calibration samples\n\
    \     to be used in full robot calibration procedures. This package\n     is still\
    \ unstable. Expect the messages to change.\n  "
  'name': 'calibration_msgs'
  'repo': 'calibration'
- 'brief': 'Waits for features in a single camera to settle'
  'description': "\n     Listens on a ImageFeatures topic, and waits for the data\
    \ to settle.\n     This package is experimental and unstable.\n     Expect its\
    \ APIs to change.\n  "
  'name': 'monocam_settler'
  'repo': 'calibration'
- 'brief': 'rosserial_android'
  'description': "\n\n     rosserial_android is an Android implementation of the rosserial\n\
    \     master protocol.  It provides an Android service which \n     communicates\
    \ with an Android ADK board and publishes the messages\n     directly to ROS.\n\
    \  "
  'name': 'rosserial_android'
  'repo': 'rosserial_android'
- 'brief': 'rviz_qt'
  'description': "\n\n     rviz_qt\n\n  "
  'name': 'rviz_qt'
  'repo': 'visualization_experimental'
- 'brief': 'rcf_com_roomba_ctr_3d_scan'
  'description': "\n\n     Controls the roomba 3D - Scan.\n\n  "
  'name': 'rcf_com_roomba_ctr_3d_scan'
  'repo': 'roblab-whge-ros-pkg'
- 'brief': 'Global navigation for the Wubble robot.'
  'description': "\n        This application allows the Wubble robot to navigate autonomously\
    \ with a pre-specified static map.\n    "
  'name': 'wubble_2dnav'
  'repo': 'ua-ros-pkg'
- 'brief': 'parsec_arduino_tests'
  'description': "\n\n     parsec_arduino_tests\n\n  "
  'name': 'parsec_arduino_tests'
  'repo': 'parsec'
- 'brief': 'hokuyo_listener_cu'
  'description': "\n\n     hokuyo_listener_cu\n\n  "
  'name': 'hokuyo_listener_cu'
  'repo': 'prairiedog'
- 'brief': 'nxt_rviz_plugin'
  'description': "\n\n     nxt_rviz_plugin provides plugins for rviz for visualizing\
    \ data coming from the nxt sensors. \n\n  "
  'name': 'nxt_rviz_plugin'
  'repo': 'foote-nxt'
- 'brief': '2dnav_slam_stage'
  'description': "\n\n     2dnav_slam_stage\n\n  "
  'name': '2dnav_slam_stage'
  'repo': 'wg-ros-pkg'
- 'brief': 'roboptim_smoother'
  'description': "\n\n     roboptim_smoother\n\n  "
  'name': 'roboptim_smoother'
  'repo': 'stacks/redundant_manipulator_control'
- 'brief': ''
  'description': 'cop_client_cpp'
  'name': 'cop_client_cpp'
  'repo': 'tum-ros-pkg'
- 'brief': 'teleop_lv1'
  'description': "\n\n     teleop_lv1\n\n  "
  'name': 'teleop_lv1'
  'repo': 'otl-ros-pkg'
- 'brief': 'Fly with objects e. g. a camera through gazebo worlds'
  'description': "\n    This package implements a flying camera for exploring gazebo\
    \ worlds.<br/>\n    The camera_move node is optimized to work with 3Dconnexion's\
    \ SpaceNavigator.\n  "
  'name': 'tui_sim'
  'repo': 'vmi-ros-pkg'
- 'brief': 'cl_urdf'
  'description': "\n\n     cl_urdf\n\n  "
  'name': 'cl_urdf'
  'repo': 'cram_physics'
- 'brief': 'pr2_object_manipulation_launch'
  'description': "\n\n    Contains launch and configuration files for starting the\n\
    \    manipulation pipeline, along with all needed controllers,\n    planners,\
    \ etc., on the PR2 robot.\n\n  "
  'name': 'pr2_object_manipulation_launch'
  'repo': 'wg-ros-pkg'
- 'brief': 'rosgui_rviz'
  'description': "\n\n     rosgui_rviz\n\n  "
  'name': 'rosgui_rviz'
  'repo': 'ros_gui'
- 'brief': 'rcf_com_skype'
  'description': "\n\n    rcf_com_skype\n\n    Mimics Skype access in ROS for the\
    \ RCFCommunication Layer between RCF Client\n    applications and RCF4ROS communication\
    \ stack nodes via Skype protocols.\n      \n    Uses Skype4Py Wrapper for Skype\
    \ API access.\n     \n    Implements these Skype API's for:\n    - Skype Attach\n\
    \    - PlaceCall,\n    - SendMessage.\n\n    SkypeBridge features Skype4Py like\
    \ Skype API support e.g. register event\n    handlers etc.\n    \n    SkypeMimicNode\
    \ is a skype server node offering ROS services for sending\n    chat messages\
    \ and handling calls.\n    \n    RCF is the Roomba Control Framework specification.\
    \ RCF is a recommendation on\n    how to develop server-client robot control software\
    \ based on iRobot's Roomba\n    service robot.\n\n    For more on RCF, RCF4ROS\
    \ and rcf.com.skype see:\n    RoblabFhGe Blog   \n\n  "
  'name': 'rcf_skype'
  'repo': 'roblab-whge-ros-pkg'
- 'brief': 'color_voxel_recognition'
  'description': "\n\n     Tools for object detection using C3-HLAC features and linear\
    \ subspace method.\n\n  "
  'name': 'color_voxel_recognition'
  'repo': 'isi-ros-pkg'
- 'brief': 'cyphy_height_estimator'
  'description': "\n\n     cyphy_height_estimator\n\n  "
  'name': 'cyphy_height_estimator'
  'repo': 'cyphy'
- 'brief': ''
  'description': 'A library for accessing a FLIR thermal camera through libunicap'
  'name': 'flir_driver'
  'repo': 'tum-ros-pkg'
- 'brief': 'penn_lightweight_teleop_msgs'
  'description': "\n\n     penn_lightweight_teleop_msgs\n\n  "
  'name': 'penn_lightweight_teleop_msgs'
  'repo': 'penn_lightweight_teleop'
- 'brief': 'ardrone_lclzr'
  'description': "\n\n     ardrone_lclzr\n\n  "
  'name': 'ardrone_lclzr'
  'repo': 'brown-experimental'
- 'brief': 'Build point clouds from PR2''s tilting laser mechanism'
  'description': "\n     Uses the laser_assembler to generate points clouds from each\
    \ sweep from PR2's\n     tilting laser mechanism.\n  "
  'name': 'pr2_laser_snapshotter'
  'repo': 'pr2_doors'
- 'brief': 'math_utils'
  'description': "\n\n     math_utils\n\n  "
  'name': 'math_utils'
  'repo': 'shadow_robot'
- 'brief': 'RS003'
  'description': "\n\n     RS003\n\n  "
  'name': 'RS003'
  'repo': 'rtm-ros-robotics/rtmros_common'
- 'brief': 'cob_head_axis'
  'description': "\n\n     cob_head_axis\n\n  "
  'name': 'cob_head_axis'
  'repo': 'cob_driver'
- 'brief': 'pymp'
  'description': "\n\n     Python multiprocessing library\n\n  "
  'name': 'pymp'
  'repo': 'wu-ros-pkg'
- 'brief': ''
  'description': 'Stereo and single image rectification and disparity processing.'
  'name': 'stereo_image_proc'
  'repo': 'ros-pkg'
- 'brief': 'object_names'
  'description': "\n\n     Object names service maps between object names and object\
    \ IDs. \n     Float32 object ids are used to annotated point clouds with object\
    \ labels. \n\n  "
  'name': 'object_names'
  'repo': 'wg-ros-pkg'
- 'brief': 'long_term_study'
  'description': "\n\n     long_term_study\n\n  "
  'name': 'long_term_study'
  'repo': 'wg-ros-pkg'
- 'brief': 'simple_navigation_goals_tutorial'
  'description': "\n\n     A package that provides sample code for sending simple\
    \ navigation goals to the navigation stack.\n\n  "
  'name': 'simple_navigation_goals_tutorial'
  'repo': 'navigation_tutorials'
- 'brief': 'outlet_pose_estimation'
  'description': "\n\n     outlet_pose_estimation\n\n  "
  'name': 'outlet_pose_estimation'
  'repo': 'pr2_plugs'
- 'brief': 'goal_passer'
  'description': "\n\n     goal_passer\n\n  "
  'name': 'goal_passer'
  'repo': 'navigation_experimental'
- 'brief': 'nodemon_lua'
  'description': "\n    Lua node monitoring library to publish state information.\n\
    \  "
  'name': 'nodemon_lua'
  'repo': 'node_monitoring'
- 'brief': 'beego_simulation'
  'description': "\n\n     beego_simulation\n\n  "
  'name': 'beego_navigation'
  'repo': 'rtm-ros-robotics/rtmros_common'
- 'brief': 'Driver for the Roomrider platform'
  'description': "\n\n\tThis driver controls the iRobot Roomba 530 from our roomrider\
    \ platform. It has been developed for a robotics lab at\n\tthe Autonomous Intelligent\
    \ Systems department at Bonn University.\n\n  "
  'name': 'roomrider_driver'
  'repo': 'ais-bonn-ros-pkg'
- 'brief': 'jpl'
  'description': "\n      JPL. A Java/Prolog bridge\n  "
  'name': 'jpl'
  'repo': 'knowrob'
- 'brief': 'world_db_table_highlevel'
  'description': "\n\n     world_db_table_highlevel\n\n  "
  'name': 'world_db_table_highlevel'
  'repo': 'wg-ros-pkg'
- 'brief': 'rosgui_matplot'
  'description': "\n\n     rosgui_matplot\n\n  "
  'name': 'rosgui_matplot'
  'repo': 'ros_gui'
- 'brief': 'projected_light'
  'description': "\n    Out-of-the-box solution for projected stereo using\n    a\
    \ Videre STOC camera and a regular wall projector.\n  "
  'name': 'projected_light'
  'repo': 'tum-ros-pkg'
- 'brief': 'mv_bluefox_driver'
  'description': "\n\n     Driver for MatrixVision BlueFox Cameras (it wraps arround\
    \ mvIMPACT Acquire API that comes with the hardware)\n     \n  "
  'name': 'mv_bluefox_driver'
  'repo': 'ccny_drivers'
- 'brief': 'p2os_teleop'
  'description': "\n\n     p2os_teleop\n\n\t"
  'name': 'p2os_teleop'
  'repo': 'usc-ros-pkg'
- 'brief': 'fake_robot'
  'description': "\n\n     fake_robot\n\n  "
  'name': 'fake_robot'
  'repo': 'wg-ros-pkg'
- 'brief': 'hector_sensors_description'
  'description': "\n\n     hector_sensors_description contains URDF xacro macros for\
    \ sensors, so they are easily attachable to robot models and usable in gazebo.\n\
    \n  "
  'name': 'hector_sensors_description'
  'repo': 'tu-darmstadt-ros-pkg'
- 'brief': 'ce_skype'
  'description': "\n\n     Skype2ROS Cognitive Interface\n\n     This Interface is\
    \ meant to controll a master Skype instance to obtain information\n     from it\
    \ and from other clients. \n     There is both a crawling client and a rosoverskype\
    \ client.\n\n     Still in creation. Sky2ROS is being converted. Currently just\
    \ the services are implemented,\n     the Ap2Ap is still missing.\n\n  "
  'name': 'skype'
  'repo': 'vmi-ros-pkg'
- 'brief': 'roomba controller using android sensor'
  'description': "\n\n    otl_android_roomba controls roomba by publishing geometry_msgs/Twist.\n\
    \    if you title your android phone, roomba go forward.\n\n  "
  'name': 'otl_android_roomba'
  'repo': 'otl-ros-pkg'
- 'brief': 'mrw_simulator_server'
  'description': "\n\n     mrw_simulator_server\n\n  "
  'name': 'mrw_simulator_server'
  'repo': 'rtc-us-ros-pkg-trunk'
- 'brief': 'PySide startup script'
  'description': "\n\n     rosgui_pyside only contains the PySide specific startup\
    \ script for rosgui.\n\n  "
  'name': 'rosgui_pyside'
  'repo': 'ros_gui'
- 'brief': 'NaoImageTransport'
  'description': "\n     NaoImageTransport takes the native NAO video stream (/eyes)\
    \ and republishes\nit as a ROS compatible image transport.\n  "
  'name': 'NaoImageTransport'
  'repo': 'brown-experimental'
- 'brief': 'sr_edc_controller_configuration'
  'description': "\n\n     Configuration files for Shadow Robot hand controllers.\n\
    \n  "
  'name': 'sr_edc_controller_configuration'
  'repo': 'shadow_robot_etherCAT'
- 'brief': 'rxbag'
  'description': "\n\n<p>rxbag is a GUI tool for visualizing, inspecting and replaying\
    \ histories of ROS messages.</p>\n<p>Some icons from the Silk icon pack are used,\
    \ which is available from <a href=\"http://www.famfamfam.com/lab/icons/silk/\"\
    >famfamfam.com</a>.</p>\n\n  "
  'name': 'rxbag'
  'repo': 'rx'
- 'brief': 'lwr_kinematics'
  'description': "\n\n     lwr_kinematics\n\n  "
  'name': 'lwr_kinematics'
  'repo': 'lwr_kinematics'
- 'brief': 'save_data'
  'description': "\n\n     save_data\n\n  "
  'name': 'save_data'
  'repo': 'flyatar'
- 'brief': 'python_pmw'
  'description': "\n\n     python_pmw\n\n  "
  'name': 'python_pmw'
  'repo': 'vmi-ros-pkg'
- 'brief': 'tf2_ros'
  'description': "\n    This package contains the ROS bindings for the tf2 library,\
    \ for both Python and C++. \n  "
  'name': 'tf2_ros'
  'repo': 'geometry_experimental'
- 'brief': 'tod_stub'
  'description': "\n\n\t\ttod_stub is a simple stub for use in the\n\t\tNIST Solutions\
    \ in Perception contest.\n\n\t"
  'name': 'tod_stub'
  'repo': 'wg-ros-pkg'
- 'brief': ''
  'description': "\n  Drivers for:\n      1) ATI sensors with the Controller FT system.\n\
    \      2) HE 6x6 Force plate from AMTI.\n  "
  'name': 'force_torque'
  'repo': 'gt-ros-pkg'
- 'brief': 'ic2020_optflow'
  'description': "\n\n     ic2020_optflow\n\n  "
  'name': 'ic2020_optflow'
  'repo': 'ic2020'
- 'brief': 'icra_navigation_gazebo'
  'description': "\n\n     icra_navigation_gazebo\n\n  "
  'name': 'icra_navigation_gazebo'
  'repo': 'wg-ros-pkg'
- 'brief': 'nodemon_webview'
  'description': "\n   Webview extension for nodemon information.\n  "
  'name': 'nodemon_webview'
  'repo': 'node_monitoring'
- 'brief': 'pi_demos'
  'description': "\n\n     pi_demos\n\n  "
  'name': 'pi_demos'
  'repo': 'pi-robot-ros-pkg'
- 'brief': 'DPPanTilt_sim_server'
  'description': "\n\n     DPPanTilt_sim_server\n\n  "
  'name': 'DPPanTilt_sim_server'
  'repo': 'darpa_arm_sim_servers'
- 'brief': 'pr2_sushi_sim'
  'description': "\n\n     pr2_sushi_sim\n\n  "
  'name': 'pr2_sushi_sim'
  'repo': 'wg-ros-pkg'
- 'brief': 'URDF parser for jrl-dynamics'
  'description': "\n\n    URDF parser for jrl-dynamics\n\n  "
  'name': 'jrl_dynamics_urdf'
  'repo': 'stacks/redundant_manipulator_control'
- 'brief': 'wpdtb'
  'description': "\n\n     wpdtb\n\n  "
  'name': 'wpdtb'
  'repo': 'wpdros'
- 'brief': 'modellierung'
  'description': "\n\n     modellierung\n\n  "
  'name': 'camera'
  'repo': 'vmi-ros-pkg'
- 'brief': ''
  'description': 'Cognitive Perception Server'
  'name': 'vision_msgs'
  'repo': 'ias_common'
- 'brief': 'rossql'
  'description': "\nSQL bindings for ros\n  "
  'name': 'rossql'
  'repo': 'wg-ros-pkg'
- 'brief': 'audio_msgs'
  'description': "\n\n     audio_msgs\n\n  "
  'name': 'audio_msgs'
  'repo': 'darpa_arm_msgs'
- 'brief': 'pid_control'
  'description': "\n\n     pid_control\n\n  "
  'name': 'pid_control'
  'repo': 'ccny_experimental'
- 'brief': 'octomap_ros - conversions and wrappers to use octomap in ROS'
  'description': "\n\n     octomap_ros provides conversion functions between ROS /\
    \ PCL and OctoMap's native types. \n     This enables a convenvient use of the\
    \ octomap package in ROS.\n\n  "
  'name': 'octomap_ros'
  'repo': 'alufr-ros-pkg'
- 'brief': 'action_watcher'
  'description': "\n\n     action_watcher\n\n  "
  'name': 'action_watcher'
  'repo': 'wg-ros-pkg'
- 'brief': 'VFH cluster classification'
  'description': "\n\n    This package implements a variant of the global VFH (Viewpoint\
    \ Feature\n    Histogram) descriptor, as presented in R.B. Rusu, G. Bradski, R.\
    \ Thibaux,\n    J. Hsu. Fast 3D Recognition and Pose Using the Viewpoint Feature\
    \ Histogram,\n    Proceedings of the 23rd IEEE/RSJ International Conference on\
    \ Intelligent\n    Robots and Systems (IROS), Taipei, Taiwan, October 18-22, 2010.\n\
    \n  "
  'name': 'vfh_cluster_classifier'
  'repo': 'wg-ros-pkg'
- 'brief': 'cob_camera_calibration'
  'description': "\n\n     cob_camera_calibration\n\n  "
  'name': 'cob_camera_calibration'
  'repo': 'cob_calibration'
- 'brief': 'turtlebot_bringup'
  'description': "\n\n     turtlebot_bringup provides roslaunch scripts for starting\
    \ the TurtleBot base functionality. \n\n  "
  'name': 'turtlebot_bringup'
  'repo': 'turtlebot'
- 'brief': 'quad_pose_control'
  'description': "\n\n     quad_pose_control\n\n  "
  'name': 'quad_pose_control'
  'repo': 'ccny_experimental'
- 'brief': 'Python module for ecl package creation'
  'description': "\n\n     Module support for the eclcreate-xxx-pkg scripts.\n\n  "
  'name': 'ecl_create'
  'repo': 'ecl_tools'
- 'brief': 'Third-party KNI library for Katana arms'
  'description': "\n\n     This package provides the third-party KNI (Katana Native\
    \ Interface) library for Katana\n     robot arms.\n\n     Instead of using the\
    \ KNI library directly, the <a href=\"/wiki/katana\">katana</a>\n     package\
    \ should be used for communication with the Katana arm.\n\n  "
  'name': 'kni'
  'repo': 'uos-ros-pkg'
- 'brief': ''
  'description': "\n    Robotic perception algorithms for 2D images. They are intended\
    \ to \n    be flexible and tightly work together with following packages:\n  \
    \  cloud_tools (using table_memory functionality)\n    cloud_algos (using IAS\
    \ 3D perception algorithms)\n    pcl stack (using  general 3D perception algorithms\
    \ and tools)\n    knowledge stack (for reasoning and inferences)\n    cognitive_perception\
    \ (for some further CV algorithms).\n  "
  'name': 'image_algos'
  'repo': 'tum-ros-pkg'
- 'brief': ''
  'description': "\n    YARP is a library and toolkit for communication and device\
    \ interfaces,\n    developed by humanoid robotics researchers but useful beyond\
    \ that field!\n  "
  'name': 'yarp2'
  'repo': 'tum-ros-pkg'
- 'brief': 'interface_tester'
  'description': "\n\n     Interface Tests specific to the PANDORA platform\n\n  "
  'name': 'interface_tester'
  'repo': 'pandora-auth-ros-pkg'
- 'brief': 'gazebo_tests'
  'description': "\n\n     Contains a variety of unit tests for gazebo, tools and\
    \ plugins.\n\n  "
  'name': 'gazebo_tests'
  'repo': 'ros-pkg'
- 'brief': 'GSD'
  'description': "\n      GSD\n      http://repo.or.cz/w/gsd.git\n  "
  'name': 'gsd'
  'repo': 'cram_pl'
- 'brief': 'tf2_tools'
  'description': "\n\n     tf2_tools\n\n  "
  'name': 'tf2_tools'
  'repo': 'geometry_experimental'
- 'brief': 'wubble_navigation_self_filter'
  'description': "\n    Filters the robot's body out of point clouds.\n    "
  'name': 'wubble_navigation_self_filter'
  'repo': 'ua-ros-pkg'
- 'brief': 'Wubble2 robot hardware'
  'description': "\n\n        wubble_robot\n\n    "
  'name': 'wubble2_robot'
  'repo': 'ua-ros-pkg'
- 'brief': 'wubble2_gripper_controller'
  'description': "\n        wubble2_gripper_controller\n    "
  'name': 'wubble2_gripper_controller'
  'repo': 'ua-ros-pkg'
- 'brief': 'cmake toolchain modules for popular toolchains'
  'description': "\n\n  eros_toolchains is a library of preconfigured cmake toolchain\
    \ modules\n  for popular/standard toolchain configurations on various platforms.\n\
    \n  "
  'name': 'eros_toolchains'
  'repo': 'eros'
- 'brief': 'kurtana_arm_navigation'
  'description': "\n\n     kurtana_arm_navigation\n\n  "
  'name': 'kurtana_arm_navigation'
  'repo': 'uos-ros-pkg'
- 'brief': 'lse_sensor_msgs'
  'description': "\n\n     This package defines messages for commonly used sensors\
    \ at the LSE, including\nanemometers and odor sensors.  \n\n  "
  'name': 'lse_sensor_msgs'
  'repo': 'lse_messages'
- 'brief': 'Contains ANTLR, a parsing library.'
  'description': "\n    This is antlr.\n  "
  'name': 'antlr'
  'repo': 'wg-ros-pkg'
- 'brief': 'Lets a person position the arms and head manually'
  'description': "\n    A super-simple tool for letting a person position the arms\
    \ manually, by\n    simply pushing the arm to the location that want. Without\
    \ this tool,\n    users are often stuck tweaking joint angles in a script, or\
    \ holding the\n    arm steady while hitting keys to freeze the arm.\n  "
  'name': 'pr2_mannequin_mode'
  'repo': 'pr2_apps'
- 'brief': 'flyatar_action_client'
  'description': "\n\n     flyatar_action_client\n\n  "
  'name': 'flyatar_action_client'
  'repo': 'flyatar'
- 'brief': 'assistive_teleop'
  'description': "\n\n    Assistive_teleop provides an accessible interface for control\
    \ of a PR2 by persons with severe motor disabilities. It is designed for use with\
    \ an assistive HCI device providing control of mouse movement and a single (left)\
    \ click. The interface is presented in a web browser, requiring no installation\
    \ by users, and allows low-level control of all degrees of freedom in the PR2,\
    \ provides visual feedback, and provides semi-autonomous functions for general\
    \ manipulation and performance of Activities of Daily Living (ADLs), with the\
    \ intention of allowing users greater control over their environment as well as\
    \ their own bodies, and providing increased independence. \n\n    This package\
    \ is a direct product of the Robots for Humanity effort, a collaboration between\
    \ Willow Garage and the <a href=\"http://www.healthcare-robotics.com\"> Healthcare\
    \ Robotics Lab</a> at Georgia Tech.\n\n  "
  'name': 'assistive_teleop'
  'repo': 'gt-ros-pkg'
- 'brief': 'cob_description'
  'description': "\n\n  This package contains the description (mechanical, kinematic,\
    \ visual,\n  etc.) of the Care-O-bot robot. The files in this package are parsed\
    \ and used by\n  a variety of other components. Most users will not interact directly\n\
    \  with this package.\n\n  "
  'name': 'cob_description'
  'repo': 'cob_common'
- 'brief': 'cal_marker_playback'
  'description': "\n\n     cal_marker_playback\n\n  "
  'name': 'cal_marker_playback'
  'repo': 'wg-ros-pkg'
- 'brief': 'demo1_sagar'
  'description': "\n\n     demo1_sagar\n\n  "
  'name': 'demo1_sagar'
  'repo': 'seabee3-ros-pkg'
- 'brief': 'mpi_test'
  'description': "\n\n     mpi_test\n\n  "
  'name': 'mpi_test'
  'repo': 'wg-ros-pkg'
- 'brief': 'bag_and_tag'
  'description': "\n\n     bag_and_tag\n\n  "
  'name': 'bag_and_tag'
  'repo': 'brown-experimental'
- 'brief': 'ackermann_msgs'
  'description': "\n\n     Ackermann steering messages.\n\n  "
  'name': 'ackermann_msgs'
  'repo': 'utexas-art-ros-pkg'
- 'brief': 'sonar_node'
  'description': "\n\n     sonar_node\n\n  "
  'name': 'sonar_node'
  'repo': 'seabee3-ros-pkg'
- 'brief': 'kurtana_tabletop_manipulation_launch'
  'description': "\n\n     kurtana_tabletop_manipulation_launch\n\n  "
  'name': 'kurtana_tabletop_manipulation_launch'
  'repo': 'uos-ros-pkg'
- 'brief': 'virtual_border'
  'description': "\n\n    Receives velocity commands and relays that information along,\
    \ so long as the robot is not touching a (high light intensity) border.  When\
    \ a border is reached, this controller reverses the last issued velocity command\
    \ until the robot is off of the high-intensity line, thereby preventing its escape.\n\
    \    A threshold is passed in as a command-line argument.  Any intensity reading\
    \ of at least this threshold will be counted as on the border.\n\n\n  "
  'name': 'virtual_border'
  'repo': 'brown-experimental'
- 'brief': 'joystick_ps3'
  'description': "\n\n     joystick_ps3\n\n  "
  'name': 'joystick_ps3'
  'repo': 'flyatar'
- 'brief': 'Standardised framework for input-output devices'
  'description': "\n\n     Provides an extensible and standardised framework for input-output\
    \ devices.\n\n  "
  'name': 'ecl_devices'
  'repo': 'ecl_core'
- 'brief': 'Build recipe to install the mingw cross environment'
  'description': "\n\n     Installer script for the mingw cross environment. This\
    \ will install to /opt/mingw\n     and immediately begin cross-compiling gcc,\
    \ boost and qt. Other libraries can be added by\n     simply cd'ing to /opt/mingw\
    \ and running make for the desired target.\n\n  "
  'name': 'mingw_cross'
  'repo': 'win_ros'
- 'brief': 'laser_height_estimation'
  'description': "\n\n     A tool to measure the distance to the floor/ceiling using\
    \ a a laser scanner.\n\n  "
  'name': 'laser_height_estimation'
  'repo': 'mav_tools'
- 'brief': 'mrpt_msgs'
  'description': "\n\n     mrpt_msgs\n\n  "
  'name': 'mrpt_msgs'
  'repo': 'mrpt-ros-pkg'
- 'brief': 'darm_audio_sim'
  'description': "\n\n     darm_audio_sim\n\n  "
  'name': 'audio_sim_server'
  'repo': 'darpa_arm_sim_servers'
- 'brief': 'virtual_nose'
  'description': "\n\n     Reads data from PlumeSim and publishes it as a lse_sensor_msgs/Nostril\
    \ message.\n\n  "
  'name': 'virtual_nose'
  'repo': 'odor_tools'
- 'brief': 'InVisiCal Visual-Inertial Calibration'
  'description': "\n    InVisiCal is a MATLAB/Octave package for calibrating the\n\
    \    6-DOF transform between a camera and an IMU.\n  "
  'name': 'invisical'
  'repo': 'usc-ros-pkg'
- 'brief': 'wiimote_twist'
  'description': "\n wiimote_twist is a wiimote-to-twist teleoperator\n  "
  'name': 'wiimote_twist'
  'repo': 'brown-experimental'
- 'brief': 'libpcan'
  'description': "\n\n     This package wraps the libpcan to use it as a ros dependency\n\
    \n  "
  'name': 'libpcan'
  'repo': 'cob_extern'
- 'brief': 'color_segmenter'
  'description': "\n\n     color_segmenter\n\n  "
  'name': 'color_segmenter'
  'repo': 'seabee3-ros-pkg'
- 'brief': 'Some test cases for ROS C++ client library'
  'description': "\n    This package has a few test cases to make sure the C++ client\
    \ library actually does what it claims to do and doesn't leak memory too badly.\n\
    \  "
  'name': 'test_roscpp'
  'repo': 'ros_comm'
- 'brief': 'hector_quadrotor_urdf'
  'description': "\n\n     hector_quadrotor_urdf provides an URDF model of a quadrotor\
    \ UAV.\n\n  "
  'name': 'hector_quadrotor_urdf'
  'repo': 'tu-darmstadt-ros-pkg'
- 'brief': 'haptic_fb_controller_nac'
  'description': "\n\n     This package contains the controller for the PR2 arm that\
    \ allows model-mediated haptic feedback\n     Arm controller is a Jtranspose controller.\n\
    \n  "
  'name': 'haptic_fb_controller_nac'
  'repo': 'wg-ros-pkg'
- 'brief': 'compressed_pointcloud_transport'
  'description': "\n\n     compressed_pointcloud_transport\n\n  "
  'name': 'compressed_pointcloud_transport'
  'repo': 'wg-ros-pkg'
- 'brief': 'cob_teleop'
  'description': "\n\n     This Package enables remote controll of Care-O-bot via\
    \ a joystick or keyboard. Currently tray, torso, arm and base are supported.\n\
    \n  "
  'name': 'cob_teleop'
  'repo': 'cob_command_tools'
- 'brief': 'kinect_cleanup'
  'description': "\n\n     kinect_cleanup is a package to demonstrate desired object\
    \ locations by\n     pointing at objects and virtually moving them somewhere (for\
    \ ROS 3D Contest)\n\n  "
  'name': 'kinect_cleanup'
  'repo': 'mapping'
- 'brief': ''
  'description': " Launch files for the navigation stack for the REEM upper body,\
    \ which allows collision free motion planning\n  "
  'name': 'reem_3dnav'
  'repo': 'reem_arm_navigation'
- 'brief': 'Driver for iRobot Create and Roomba'
  'description': "\n\n     For ROS bindings, please see create_node. \n\n     This\
    \ is a generic driver for iRobot Create and Roomba.  Port\n     of pyrobot.py\
    \ by Damon Kohler.  It is currently labeled as\n     turtlebot_driver pending\
    \ review by the entire create community\n     before using the name create_driver.\n\
    \n  "
  'name': 'create_driver'
  'repo': 'bilibot-ros-pkg'
- 'brief': 'This package allows you to publish the state of a robot to the transform
    library topic'
  'description': "\n\n    This package allows you to publish the state of a robot\
    \ to \n    <a href=\"http://ros.org/wiki/tf\">tf</a>. Once the state gets published,\
    \ it is\n    available to all components in the system that also use <tt>tf</tt>.\n\
    \    The package takes the joint angles of the robot as input\n    and publishes\
    \ the 3D poses of the robot links, using a kinematic\n    tree model of the robot.\
    \ The package can both be used as a library\n    and as a ROS node.  This package\
    \ has been well tested and the code\n    is stable. No major changes are planned\
    \ in the near future\n\n  "
  'name': 'robot_state_publisher'
  'repo': 'robot_model'
- 'brief': 'Displays aggregated robot diagnostics'
  'description': "\n<p>\n    robot_monitor is a simple GUI tool for displaying robot\
    \ diagnostics that has been aggregated by the <a href=\"http://www.ros.org/wiki/diagnostic_aggregator\"\
    >diagnostic_aggregator</a>. \n</p>\n<p>\nSome icons from the Silk icon pack are\
    \ used, which is available from <a href=\"http://www.famfamfam.com/lab/icons/silk/\"\
    >famfamfam.com</a>.\n</p>\n\n  "
  'name': 'robot_monitor'
  'repo': 'ros-pkg'
- 'brief': 'libdmtx'
  'description': "\n\n     libdmtx\n\n  "
  'name': 'libdmtx'
  'repo': 'wg-ros-pkg'
- 'brief': 'PR2 Hardware Interface'
  'description': "\n  This package contains the C++ interfaces to the PR2 hardware\n\
    \  components that are controlled over EtherCAT. This includes the\n  motors and\
    \ encoders needed to control the PR2 mechanism, as well as\n  components like\
    \ the pressure sensors in the fingertips, camera\n  triggers, etc... All of the\
    \ hardware components in this interface are\n  directly available to the controllers\
    \ inside the hard realtime\n  control loop. \n"
  'name': 'pr2_hardware_interface'
  'repo': 'pr2_mechanism'
- 'brief': 'rosjs_resources'
  'description': "\n    rosjs resources \n  "
  'name': 'rosjs_resources'
  'repo': 'bosch-ros-pkg'
- 'brief': 'flysim'
  'description': "\n\n     flysim is a tool made from turtlesim... \n\n  "
  'name': 'flysim'
  'repo': 'flyatar'
- 'brief': 'rosglue'
  'description': "\nROSGlue\n  "
  'name': 'rosglue'
  'repo': 'brown-experimental'
- 'brief': 'MRPT C++ libraries'
  'description': "\n\n     Adding this package to your dependencies assures that MRPT\
    \ libraries will \n     be installed in your system. For example, in Ubuntu this\
    \ means installing\n     the libmrpt-dev package.\n\n  "
  'name': 'mrpt_libs'
  'repo': 'mrpt-ros-pkg'
- 'brief': 'geometric_semantics'
  'description': "\n\n     geometric_semantics\n\n  "
  'name': 'geometric_semantics'
  'repo': 'geometric_relations_semantics'
- 'brief': 'elektron_teleop'
  'description': "\n\n     Teleoperation nodes for Elektron mobile robot.\n\n  "
  'name': 'elektron_teleop'
  'repo': 'elektron_kinectbot'
- 'brief': 'motoman'
  'description': "\n\n     The motoman package includes nodes for interfacing with\
    \ a motoman\n\tDX100 industrial controller.\n     \n  "
  'name': 'motoman'
  'repo': 'swri-ros-pkg'
- 'brief': 'Easily publishes diagnostics for a driver or node'
  'description': "\n    diagnostic_updater contains tools for easily updating diagnostics.\
    \ it is commonly used in device drivers to keep track of the status of output\
    \ topics, device status, etc.\n  "
  'name': 'diagnostic_updater'
  'repo': 'ros-pkg'
- 'brief': 'color_metric'
  'description': "\n\n     kinect_pose_est\n\n  "
  'name': 'color_metric'
  'repo': 'ccny_experimental'
- 'brief': 'ias_drawer_executive'
  'description': "\n\n     ias_drawer_executive\n     opens drawers in the ias kitchen.\n\
    \     the robot is driven to a hardcoded location that is know for each drawer.\n\
    \     the right hand goes to a hardcoded joint state so that we see the ar toolkit\
    \ marker on the drawer handle in the forearm camera.\n     ik is then used to\
    \ grasp at the marker, and the drawer is opened with some trajectory exploration,\
    \ following the line of least resistance so to say.\n\n  "
  'name': 'bosch_drawer_executive'
  'repo': 'bosch-ros-pkg'
- 'brief': 'mrpt_ro_slam'
  'description': "\n\n     mrpt_ro_slam\n\n  "
  'name': 'mrpt_ro_slam'
  'repo': 'mrpt-ros-pkg'
- 'brief': 'arm_hand_splitter'
  'description': "\n\n     arm_hand_splitter\n\n  "
  'name': 'arm_hand_splitter'
  'repo': 'uuisrc-ros-pkg'
- 'brief': 'height_tracker'
  'description': "\n\n     height_tracker\n\n  "
  'name': 'height_tracker'
  'repo': 'wg-ros-pkg'
- 'brief': 'Generic Mechanism Controller Library'
  'description': "\n  "
  'name': 'robot_mechanism_controllers'
  'repo': 'wg-ros-pkg'
- 'brief': 'explore_pr2'
  'description': "\n     Demo for running explore stack on PR2\n  "
  'name': 'explore_pr2'
  'repo': 'bosch-ros-pkg'
- 'brief': 'hrl_simple_arm_goals'
  'description': "\n    Python equivalents for move_Arm tutorials. (For example,\n\
    \    http://www.ros.org/wiki/move_arm/Tutorials/MoveArmPoseGoalComplex)\n  "
  'name': 'hrl_simple_arm_goals'
  'repo': 'gt-ros-pkg'
- 'brief': 'lab_perception'
  'description': "\n\n     lab_perception\n\n  "
  'name': 'lab_perception'
  'repo': 'wg-ros-pkg'
- 'brief': 'find_object_executive'
  'description': "\n\n     find_object_executive\n\n  "
  'name': 'find_object_executive'
  'repo': 'wg-ros-pkg'
- 'brief': 'pr2_arm_navigation_filtering'
  'description': "\n    This package contains a set of launch files and configuration\
    \ files for \n  "
  'name': 'pr2_arm_navigation_filtering'
  'repo': 'wg-ros-pkg'
- 'brief': 'scan3d_pcl'
  'description': "\n\n     Communicates with the pcl package\n\n  "
  'name': 'scan3d_pcl'
  'repo': 'roblab-whge-ros-pkg'
- 'brief': 'oomdp_msgs'
  'description': "\n\n     Standard messages for communication with OO-MDP enviroments.\
    \ \n\n  "
  'name': 'oomdp_msgs'
  'repo': 'ua-ros-pkg'
- 'brief': 'Simple c style library for type conversions'
  'description': "\n\n     These are a very simple version of some of the functions\
    \ in ecl_converters suitable for\n     firmware development. That is, there is\
    \ no use of new, templates or exceptions.\n\n  "
  'name': 'ecl_converters_lite'
  'repo': 'ecl_lite'
- 'brief': 'collvoid_stage'
  'description': "\n\n     collvoid_stage\n\n  "
  'name': 'collvoid_stage'
  'repo': 'multi_robot_collision_avoidance'
- 'brief': 'Generalized client side source for rosserial.'
  'description': ''
  'name': 'rosserial_client'
  'repo': 'rosserial'
- 'brief': 'continuous_ops_alerts'
  'description': "\n\n     continuous_ops_alerts\n\n  "
  'name': 'continuous_ops_alerts'
  'repo': 'continuous_ops'
- 'brief': ''
  'description': "\n    A collection of point cloud tools that depend on vtk.\n  "
  'name': 'pcl_vtk_tools'
  'repo': 'mapping'
- 'brief': 'robotino_teleop'
  'description': "\nImplements nodes to control Robotino using a joystick or a keyboard.\n\
    \  "
  'name': 'robotino_teleop'
  'repo': 'robotino-ros-pkg'
- 'brief': 'wpa_supplicant for multi_interface_roam'
  'description': "\n     A version of wpa_supplicant that has been modified to work\
    \ with\n     multi_interface_roam.\n  "
  'name': 'wpa_supplicant_node'
  'repo': 'ros-pkg'
- 'brief': 'mongo_ros'
  'description': "\nPackage for storing ROS messages in a MongoDB database.  Contains\
    \ C++ and Python client libraries.\n  "
  'name': 'mongo_ros'
  'repo': 'warehousewg'
- 'brief': 'Maps'
  'description': "\n     vanadium_maps\n  "
  'name': 'vanadium_maps'
  'repo': 'vanadium-ros-pkg'
- 'brief': 'lwr_arm_navigation'
  'description': "\n\n     lwr_arm_navigation\n\n  "
  'name': 'lwr_arm_navigation'
  'repo': 'lwr_arm_navigation'
- 'brief': 'Node for the 3Dconnexion SpaceNavigator'
  'description': "\n    A node for publishing the state of the 3Dconnexion SpaceNavigator\
    \ 6DOF joystick.\n  "
  'name': 'spacenav_node'
  'repo': 'ros-pkg'
- 'brief': 'nao_openni'
  'description': "\n\n     nao_openni\n\n  "
  'name': 'nao_openni'
  'repo': 'wpi-rail-ros-pkg'
- 'brief': 'auto_grip'
  'description': "\n\n     auto_grip\n\n  "
  'name': 'auto_grip'
  'repo': 'wg-ros-pkg'
- 'brief': 'opt_camera'
  'description': "\n\n     opt_camera\n\n  "
  'name': 'opt_camera'
  'repo': 'jsk-ros-pkg'
- 'brief': 'obstacle_sim'
  'description': "\n\n    An obstacle simulator for stage.\n\n  "
  'name': 'obstacle_sim'
  'repo': 'wg-ros-pkg'
- 'brief': 'cmucam_png'
  'description': "\n\n     cmucam_png\n\n  "
  'name': 'cmucam_png'
  'repo': 'ajh-ros-pkg'
- 'brief': 'kurt_2dnav_slam'
  'description': "\n\n     kurt_2dnav_slam\n\n  "
  'name': 'kurt_2dnav_slam'
  'repo': 'uos-ros-pkg'
- 'brief': 'RobotFace - Display your talking head on your robot.'
  'description': "\n\n     This is an application to display a talking head on your\
    \ robot for human robot interaction. It displays text and synchronized mouthmovements.\
    \ It is also able to show emotions.\n\n  "
  'name': 'robot_face'
  'repo': 'agas-ros-pkg'
- 'brief': 'collada_eus'
  'description': "\n\n     uescollada\n\n  "
  'name': 'euscollada'
  'repo': 'jsk-ros-pkg'
- 'brief': 'rosout'
  'description': "\n     System-wide logging mechanism for messages sent to the /rosout\
    \ topic.\n  "
  'name': 'rosout'
  'repo': 'ros_comm'
- 'brief': 'summit_tf'
  'description': "\n\n     summit_tf\n\n  "
  'name': 'summit_tf'
  'repo': 'summit-ros-pkg'
- 'brief': ''
  'description': 'Implementations of the demo task for the ICRA 2010 ROS tutorial.'
  'name': 'icra2010_ros_tutorial'
  'repo': 'wg-ros-pkg'
- 'brief': 'rtt_ar_pose'
  'description': "\n\n    Provides an rtt typekit for ROS ar_pose messages.\n\n  \
    \  It allows you to use ROS messages transparently in\n    RTT components and\
    \ applications.\n\n    This package was automatically generated by the\n    create_rtt_msgs\
    \ generator and should not be manually\n    modified.\n\n    See the http://ros.org/wiki/ar_pose\
    \ documentation\n    for the documentation of the ROS messages in this\n    typekit.\n\
    \n  "
  'name': 'rtt_ar_pose'
  'repo': 'camera_pose_estimation'
- 'brief': 'Tools for pushing a new calibration into the URDF and wge100 cameras'
  'description': "\n     Tools for pushing a new calibration into the URDF and wge100\
    \ cameras.  This package is\n     still experimental.  Expect usage and APIs to\
    \ change.\n  "
  'name': 'pr2_calibration_propagation'
  'repo': 'pr2_calibration'
- 'brief': 'neo_srb_us'
  'description': "\n\n     neo_srb_us\n\n  "
  'name': 'neo_srb_us'
  'repo': 'neo_driver'
- 'brief': 'Safe Base Controller'
  'description': "\n  \t\n    The safe_base_controller only moves/turns the base if\
    \ movement/turning in this direction is allowed. It subscribes to the command_limits\
    \ topic where max and min velocities greater than zero must be published in order\
    \ for the controller to allow movement. \n\t\n  "
  'name': 'safe_base_controller'
  'repo': 'bosch-ros-pkg'
- 'brief': 'trf_learn'
  'description': "\n      A package for learning task relevant features.  Contain\
    \ behaviors for\n      operating flip style light switches, rocker style light\
    \ switches, and\n      drawers.\n  "
  'name': 'trf_learn'
  'repo': 'gt-ros-pkg'
- 'brief': 'm3_arm_navigation_test'
  'description': "\n\n     m3_arm_navigation_test\n\n  "
  'name': 'm3_arm_navigation_test'
  'repo': 'wg-ros-pkg'
- 'brief': 'icreate_sensorListen'
  'description': "\n\n    icreate_sensorListen \n\n  "
  'name': 'icreate_sensorListen'
  'repo': 'cmr-ros-pkg'
- 'brief': 'rostime'
  'description': "\n\nTime and Duration implementations for C++ libraries, including\
    \ roscpp.\n\n  "
  'name': 'rostime'
  'repo': 'ros_comm'
- 'brief': 'calibration_msgs'
  'description': "\n     Messages for collecting datasets to perform various robot\
    \ calibrations.\n  "
  'name': 'experimental_calibration_msgs'
  'repo': 'wg-ros-pkg'
- 'brief': 'object_manager'
  'description': "\n\n     object_manager\n\n  "
  'name': 'object_manager'
  'repo': 'brown-experimental'
- 'brief': 'demo1_kaszubski'
  'description': "\n\n     demo1_kaszubski\n\n  "
  'name': 'demo1_kaszubski'
  'repo': 'seabee3-ros-pkg'
- 'brief': 'hrl_trajectory_playback'
  'description': "\n\n    Simple interface for recording arm trajectories and replaying\
    \ them.\n\n  "
  'name': 'hrl_trajectory_playback'
  'repo': 'gt-ros-pkg'
- 'brief': 'cl_opengl'
  'description': "\n\n     cl_opengl\n\n  "
  'name': 'cl_opengl'
  'repo': 'cram_physics'
- 'brief': 'table_pose'
  'description': "\n  "
  'name': 'table_pose'
  'repo': 'tum-ros-pkg'
- 'brief': 'pr2_plugs_msgs'
  'description': "\n\n     pr2_plugs_msgs provides the msgs and action definitions\
    \ required for plugging in.\n\n  "
  'name': 'pr2_plugs_msgs'
  'repo': 'pr2_plugs'
- 'brief': 'turtlebot_arm_interactive_markers'
  'description': "\n\n     turtlebot_arm_interactive_markers allows the user to control\
    \ the TurtleBot arm using rviz interactive markers.\n\n  "
  'name': 'turtlebot_arm_interactive_markers'
  'repo': 'turtlebot_arm'
- 'brief': 'R1_2dnav'
  'description': "\n\n     R1_2dnav\n\n  "
  'name': 'R1_2dnav'
  'repo': 'JKU_Robotic_Stack'
- 'brief': 'chameleon_teleop'
  'description': "\n\n     chameleon_teleop\n\n  "
  'name': 'chameleon_teleop'
  'repo': 'clearpath-ros-pkg'
- 'brief': 'laser_ortho_projector'
  'description': "\n\n  The laser_ortho_projector package calculates orthogonal projections\
    \ of LaserScan messages. \n\n  "
  'name': 'laser_ortho_projector'
  'repo': 'scan_tools'
- 'brief': 'bumblebee_stereo'
  'description': "\n      This package contains a node that computes stereo(disparity,\
    \ point cloud) from a pair of stereo images. It uses the PtGrey triclops library.\n\
    \  "
  'name': 'bumblebee_stereo'
  'repo': 'ubc-ros-pkg'
- 'brief': 'mrpt_bridge'
  'description': "\n\n     A C++ library for converting between some of the MRPT data\
    \ types and ROS messages.\n\n  "
  'name': 'mrpt_bridge'
  'repo': 'mrpt-ros-pkg'
- 'brief': 'Camera calibration information manager'
  'description': "\n\n     This package provides a C++ interface for camera calibration\n\
    \     information.  It provides CameraInfo, and handles SetCameraInfo\n     service\
    \ requests, saving and restoring the camera calibration\n     data.\n\n  "
  'name': 'camera_info_manager'
  'repo': 'ros-pkg'
- 'brief': 'Approximate Nearest Neighbor Searching (ANN)'
  'description': "\n    ANN is a library written in C++, which supports data structures\
    \ and algorithms for both exact and approximate nearest neighbor searching in\
    \ arbitrarily high dimensions. \n  "
  'name': 'ann2'
  'repo': 'cmu-ros-pkg'
- 'brief': 'Gaussian Process regression (C++ library)'
  'description': "\n\nThis package provides an implementation of Gaussian Process\
    \ regression. It provides an easy interface to build a GP from input and output\
    \ data. The GP can then estimate the output at any given input location. Further,\
    \ a gradient-descent based optimization of the hyperparameter is available.\n\n\
    This library was implemented by Christian Plagemann, J\xFCrgen Hess, Axel Rottmann\
    \ and J\xFCrgen Sturm at the Autonomous Intelligent Systems Lab. It contains code\
    \ from Gunter Winkler and Konstantin Kutzkow which implements a LU factorization\
    \ for boost.\n\nMore details on Gaussian Process regression can be found in the\
    \ open-source book &quot;Gaussian Processes for Machine Learning&quot;, written\
    \ by Carl Edward Rasmussen and Chris Williams, the MIT Press, 2006, available\
    \ from http://www.gaussianprocess.org/gpml/chapters.\n\n  "
  'name': 'gaussian_process'
  'repo': 'alufr-ros-pkg'
- 'brief': 'URDF description of the KURTana robot'
  'description': "\n\n     This package contains an URDF description of the KURTana\
    \ Robot and all supporting mesh files.\n     \n     NOTICE: the construction is\
    \ custom-made, so it's relatively unlikely that it serves for more than an exemplar\n\
    \             but if you have comments or questions regarding the KURTana project,\
    \ feel free to contact us  \n\n  "
  'name': 'kurtana_description'
  'repo': 'uos-ros-pkg'
- 'brief': 'cr_calibration'
  'description': "\n\n     cr_calibration\n\n  "
  'name': 'cr_calibration'
  'repo': 'jsk-ros-pkg'
- 'brief': 'demos for the zeroconf jmdns implementation'
  'description': "\n\n     A couple of demos for the zeroconf jmdns implementation.\
    \ This is\n     useful to illustrate both the usage of the library and to test\n\
    \     the rosjava framework with zeroconf_jmdns as a dependency.\n\n  "
  'name': 'zeroconf_jmdns_demos'
  'repo': 'zeroconf_implementations'
- 'brief': 'Correctly Rounded Mathematical Library v1.0beta4'
  'description': "\n    CRlibm, an efficient and proven correctly-rounded mathematical\
    \ library (similar to libm) which provides:\n\n    * implementations of the double-precision\
    \ C99 standard elementary functions,\n\n    * correctly rounded in the four IEEE-754\
    \ rounding modes,\n\n    * with a comprehensive proof of both the algorithms used\
    \ and their implementation,\n\n    * sufficiently efficient in average time, worst-case\
    \ time, and memory consumption to replace existing libms transparently\n  "
  'name': 'crlibm'
  'repo': 'jsk-ros-pkg'
- 'brief': 'Executive for AAAI Chess Challenge'
  'description': ''
  'name': 'chess_player'
  'repo': 'vanadium-ros-pkg'
- 'brief': 'pr2_props_rfn'
  'description': "\n\n    pr2_props_rfn acts as an interface between RoboFrameNet\
    \ and the pr2_props action server.  pr2_props_rfn is an RFNServer which listens\
    \ for requests for pr2 props (eg, high-fiving).  When a request comes in, move_base_rfn\
    \ sends a request to the pr2_props action server.\n\n  "
  'name': 'pr2_props_rfn'
  'repo': 'roboframenet'
- 'brief': 'lwr_defs'
  'description': "\n\n     lwr_defs\n\n  "
  'name': 'lwr_defs'
  'repo': 'lwr_robot'
- 'brief': 'veltrobot_movement'
  'description': "\n\n     Controls the movment of a robot using servos.\n     Servo\
    \ positons are sent as joint_states.  Poses and motions\n     are defined by XML\
    \ files.\n\n  "
  'name': 'veltrobot_movement'
  'repo': 'veltrop-ros-pkg'
- 'brief': 'actionlib_tests'
  'description': "\n\n     actionlib_tests\n\n  "
  'name': 'actionlib_tests'
  'repo': 'wg-ros-pkg'
- 'brief': 'hector_trajectory_server'
  'description': "\n \n     hector_trajectory_server keeps track of tf trajectories\
    \ extracted from tf data and makes\n     this data accessible via a service and\
    \ topic\n\n  "
  'name': 'hector_trajectory_server'
  'repo': 'tu-darmstadt-ros-pkg'
- 'brief': 'stop_and_go'
  'description': "\n\n     stop_and_go\n\n  "
  'name': 'stop_and_go'
  'repo': 'vanadium-ros-pkg'
- 'brief': 'test_tf2'
  'description': "\n\n     test_tf2\n\n  "
  'name': 'test_tf2'
  'repo': 'geometry_experimental'
- 'brief': 'autocount'
  'description': "\n\n     autocount\n\n  "
  'name': 'autocount'
  'repo': 'wg-ros-pkg'
- 'brief': 'roslisp_repl is a script for launching up a roslisp REPL'
  'description': "\n\n    This package downloads and extracts SLIME and provides a\
    \ script to\n    start up emacs with a roslisp slime REPL.\n\n  "
  'name': 'roslisp_repl'
  'repo': 'roslisp_support'
- 'brief': 'icreate_OR_sim'
  'description': "\n    An OpenRave Simulator for the iCreate. \n\n  "
  'name': 'icreate_OR_sim'
  'repo': 'cmr-ros-pkg'
- 'brief': 'jsk_pr2_startup'
  'description': "\n\n     jsk_pr2_startup\n\n  "
  'name': 'jsk_pr2_startup'
  'repo': 'jsk-ros-pkg'
- 'brief': 'biolab_description'
  'description': "\n\n     biolab_description\n\n  "
  'name': 'biolab_description'
  'repo': 'viaflo_pipette'
- 'brief': 'audio_msgs'
  'description': "\n    \n    audio_msgs\n    \n  "
  'name': 'ua_audio_msgs'
  'repo': 'ua-ros-pkg'
- 'brief': 'powerbot_player'
  'description': "\n      A ROS node that wraps up the Player p2os driver, which provides\
    \ access to the PowerBot robot (also other ActivMedia mobile robots). This node\
    \ was derived from the erratic_player node.\n  "
  'name': 'powerbot_player'
  'repo': 'ubc-ros-pkg'
- 'brief': 'rostwitter'
  'description': "\n\n     rostwitter\n\n  "
  'name': 'lv1_twitter'
  'repo': 'otl-ros-pkg'
- 'brief': 'tabletop_actions'
  'description': "\n\n     A set of actions to push, topple or otherwise interact\
    \ with objects detected using the tabletop nodes.\n\n  "
  'name': 'tabletop_actions'
  'repo': 'uuisrc-pr2-pkgs'
- 'brief': 'fast_template_detector'
  'description': "\n<p>\n  The Fast Template Detector (FTD) library is an implementation\
    \ of a \n  template detector based on SSE optimized fast matching of binary data.\
    \ \n  An example of such data are Dominant Orientation Templates (see \n  'Dominant\
    \ orientation templates for real-time detection of texture-less \n  objects' by\
    \ Hinterstoisser et al.).\n</p>\n  "
  'name': 'fast_template_detector'
  'repo': 'wg-ros-pkg'
- 'brief': 'verb_learning'
  'description': "\n\n     verb_learning\n\n  "
  'name': 'verb_learning'
  'repo': 'ua-ros-pkg'
- 'brief': 'jrl-walkgen bridge'
  'description': "\n\n    Provide pattern-generators compatible with the walk_interfaces\
    \ /\n    walk_msgs interface using the jrl-walkgen software.\n\n    The following\
    \ algorithms are provided by this pattern generator:\n    <ul>\n      <li>Kajita\
    \ 2003</li>\n      <li>Morisawa 2007</li>\n    </ul>\n\n  "
  'name': 'jrl_walkgen_bridge'
  'repo': 'stacks/jrl_walkgen_bridge'
- 'brief': 'gpsd_client'
  'description': "\n\n     gpsd_client connects to a GPSd server and broadcasts\n\
    \     GPS fixes using the NavSatFix message\n\n  "
  'name': 'gpsd_client'
  'repo': 'umd-ros-pkg'
- 'brief': 'busbot_gazebo'
  'description': "\n\n     busbot_gazebo\n\n  "
  'name': 'busbot_gazebo'
  'repo': 'bosch-ros-pkg'
- 'brief': 'Build recipe for cross-compiling gdb/gdbserver'
  'description': "\n\n\tThis provides a source package for cross-compiling a gdb/gdbserver\
    \ combo.\n\t\n\tThis pair of tools allows you to do remote debugging without having\n\
    \tto run the debugger itself (nor libs with debugging symbols) on the\n\ttarget.\
    \ Very useful for embedded boards with limited memory or oomph.\n\n  "
  'name': 'eros_gdbserver'
  'repo': 'eros'
- 'brief': 'rtcus_skeleton_running_interpreter'
  'description': "\n\n     rtcus_skeleton_running_interpreter\n\n  "
  'name': 'rtcus_skeleton_running_interpreter'
  'repo': 'rtc-us-ros-pkg-branches'
- 'brief': 'Common Velodyne HDL-64E 3D LIDAR support'
  'description': "\n\n     Basic device driver, message, header, library and utility\n\
    \     interfaces for the Velodyne HDL-64E and HDL-64E S2 3D LIDARs.\n\n  "
  'name': 'velodyne_common'
  'repo': 'utexas-art-ros-pkg'
- 'brief': 'arm_kinematics_constraint_aware'
  'description': "\n\n     arm_kinematics_constraint_aware\n\n  "
  'name': 'arm_kinematics_constraint_aware'
  'repo': 'arm_navigation'
- 'brief': 'control_msgs'
  'description': "\n\n    control_msgs contains base messages and actions useful for\n\
    \    controlling robots.  It provides representations for controller\n    setpoints\
    \ and joint and cartesian trajectories.\n\n  "
  'name': 'control_msgs'
  'repo': 'control'
- 'brief': 'head_gripper'
  'description': "\n\n     head_gripper\n\n  "
  'name': 'head_gripper'
  'repo': 'brown-experimental'
- 'brief': 'URDF description of 9cm Videre STOC Camera'
  'description': "\n\n     videre_stoc_description\n\n    "
  'name': 'videre_stoc_description'
  'repo': 'ua-ros-pkg'
- 'brief': 'iTaSC 6dof_pff Component package'
  'description': "\n        This package contains the 6dof_pff task\n        Part\
    \ of the iTaSC-Skill framework, itasc_tasks\n    "
  'name': '6dof_pff'
  'repo': 'itasc_tasks'
- 'brief': 'sr_external_dependencies'
  'description': "\n\n     sr_external_dependencies package is a &quot;dummy&quot;\
    \ package used to synchronize the includes for the protocol communication between\
    \ the host and the PIC for Shadow's EtherCAT hardware. It contains a script that\
    \ automatically downloads the latest h file from our pic32 svn.\n\n  "
  'name': 'sr_external_dependencies'
  'repo': 'shadow_robot_etherCAT'
- 'brief': 'pr2_run_stop_auto_restart'
  'description': "\n   This package provides a node that monitors the state of the\
    \ run stops of the pr2_robot. When the state of the\n   run stop changes from\
    \ off to on, this node will automatically enable the power to the motors, and\
    \ reset\n   the motors. This allows you to use the run stop as a 'pause' button.\
    \ By using the run stop as a tool to\n   power up the robot, the run stop is also\
    \ in reach of the user once the robot starts moving.\n  "
  'name': 'pr2_run_stop_auto_restart'
  'repo': 'pr2_robot'
- 'brief': 'An OpenNI camera ROS driver'
  'description': "\n\n    A ROS driver for OpenNI depth (+ RGB) cameras. These include:\n\
    \    <ul>\n      <li> Microsoft Kinect </li>\n      <li> PrimeSense PSDK </li>\n\
    \      <li> ASUS Xtion Pro (no RGB) </li>\n    </ul>\n\n    The driver publishes\
    \ raw depth, RGB, and IR image streams.\n\n  "
  'name': 'openni_camera'
  'repo': 'openni_kinect'
- 'brief': 'pr2_pick_and_place_service'
  'description': "\n\tProvides much of the functionality of the pick_and_place_demo\
    \ through a set of services.\n\n  "
  'name': 'pr2_pick_and_place_service'
  'repo': 'bosch-ros-pkg'
- 'brief': 'Tests for verifying functionality of complete PR2'
  'description': "\nComplete functionality tests for PR2. Contains utilities designed\
    \ to test and verify devices, mechanicals and sensors.\n  "
  'name': 'pr2_bringup_tests'
  'repo': 'wg-ros-pkg'
- 'brief': 'Puts roslaunch in a library for API use'
  'description': "\n  "
  'name': 'roslaunch_caller'
  'repo': 'wg-ros-pkg'
- 'brief': 'xsens_mtig'
  'description': "\n\n  A modified version of the  lse_xsens_mti package with added\
    \ functionalitly to work with the mti-g sensor.\n\n     Xsens MTi node. The existing\
    \ xsens_mti node is distributed in the form of a library and requires the MTi\
    \ to be set to a determined configuration to work. We had some old code laying\
    \ around so we just ported it to ROS. This sends the MTi to configuration mode\
    \ at start and sets it to the propper mode of operation.\n\n  Original Author:\
    \ Gon\xE7alo Cabrita\n\n  "
  'name': 'cyphy_xsens_mtig'
  'repo': 'cyphy'
- 'brief': 'hrl_pr2_kinematics_tutorials'
  'description': "\n    Looking at the different PR2 arm tutorials and trying to come\
    \ up\n    with equivalent python versions.\n  "
  'name': 'hrl_pr2_kinematics_tutorials'
  'repo': 'gt-ros-pkg'
- 'brief': 'Tele-operation source which uses a keyboard as input.'
  'description': "\n\n    This package provides header files and a library which implement\
    \ a\n    tele-operation source which uses a keyboard as input.\n\n  "
  'name': 'teleop_source_keyboard'
  'repo': 'generic_teleop'
- 'brief': 'manyears'
  'description': '

    ManyEars IntRoLab package.

    '
  'name': 'manyears_ros'
  'repo': 'introlab-ros-pkg'
- 'brief': 'nxt_lejos_navigation'
  'description': "\n     The nxt_lejos_navigation package contains launch files and\
    \ parameter\n     files to start the move_base node in the ROS navigation stack\
    \ in order to navigate\n     a leJOS NXT robot. The nxt_lejos_lcp_proxy node acts\
    \ as the robot\n     controller and supplies sensor data and odometry data. It\
    \ is not\n     started by the launch file.\n  "
  'name': 'nxt_lejos_navigation'
  'repo': 'lejos-ros-pkg'
- 'brief': 'tf_odometry_relay'
  'description': "\n\n     tf_odometry_relay\n\n  "
  'name': 'tf_odometry_relay'
  'repo': 'parsec'
- 'brief': 'map_loader'
  'description': "\n\n     map_loader\n\n  "
  'name': 'map_loader'
  'repo': 'brown-experimental'
- 'brief': 'charlie_controllers'
  'description': "\n         charlie_controllers\n    "
  'name': 'charlie_controllers'
  'repo': 'ua-ros-pkg'
- 'brief': 'Configures environment variables for ros on windows'
  'description': "\n\n   Can be used to either configure environment variables temporarily\
    \ inside a shell, or \n   permanently save the environment variables in the registry\
    \ for session-wide use.\n\n  "
  'name': 'win_env'
  'repo': 'win_ros'
- 'brief': 'Gazebo world and model files for UOS.'
  'description': "\n\n     Gazebo world and model files for UOS.\n\n  "
  'name': 'uos_gazebo_worlds'
  'repo': 'uos-ros-pkg'
- 'brief': 'knowrob_objects'
  'description': "\n\n     knowrob_objects\n\n  "
  'name': 'knowrob_objects'
  'repo': 'knowrob'
- 'brief': 'sap_pkg'
  'description': "\n\n     sap_pkg\n\n  "
  'name': 'sap_pkg'
  'repo': 'auction_methods_stack'
- 'brief': 'Estimates kinematic models for articulated objects like doors and drawers. '
  'description': "\n\n<p>\nThis package contains the core library for kinematic model\
    \ fitting for articulated objects. Examples of articulated objects are gangway\
    \ or cabinet doors, door handles, and drawers. \nIt provides both a C++ library\
    \ for model fitting and selection, and nodes that make the functions of this library\
    \ available as ROS services to other nodes.\n</p>\n\n  "
  'name': 'articulation_models'
  'repo': 'alufr-ros-pkg'
- 'brief': 'pr2_tuck_arms_action'
  'description': "\n     pr2_tuck_arms_action\n  "
  'name': 'pr2_tuck_arms_action'
  'repo': 'wg-ros-pkg'
- 'brief': ''
  'description': 'A Localization System for a 2D Environment'
  'name': 'localization_cu'
  'repo': 'prairiedog'
- 'brief': 'rosinstall'
  'description': "\nrosinstall is a tool to check out ROS source code (or any source\
    \ code, really) from multiple version control repositories and updating these\
    \ checkouts. Given a *.rosinstall file that specifies where to get code, rosinstall\
    \ will check out a working copy for you. We recommend the use of rosinstall when\
    \ checking out development versions of ROS source code. This package is where\
    \ the code lives, however it is not expected for users to checkout and use this\
    \ package directly.  It is expected that users use the version available through\
    \ pypi.python.org.  \n\n  "
  'name': 'rosinstall'
  'repo': 'rosinstall'
- 'brief': 'pen_gripper'
  'description': "\n \n\tThis package gives a pr2 robot the ability to grip a pen\
    \ off a surface.\n\n\t"
  'name': 'pen_gripper'
  'repo': 'alufr-ros-pkg'
- 'brief': 'rttuning_scripts'
  'description': "\n\n     Realtime Tuning Scripts\n\n  "
  'name': 'rttuning_scripts'
  'repo': 'wg-ros-pkg'
- 'brief': 'Tools for using th PR2''s tilting laser'
  'description': "\n    Provides a set of tools/actions for manipulating the pr2's\
    \ tilting\n    laser. Simplifies previously complex tasks, such as fetching\n\
    \    a single sweep, given a set of desired parameters for both the laser\n  \
    \  driver and tilting platform.\n  "
  'name': 'pr2_tilt_laser_interface'
  'repo': 'wg-ros-pkg'
- 'brief': 'ui_preempter'
  'description': "\n\n     ui_preempter\n\n  "
  'name': 'ui_preempter'
  'repo': 'ros_applications'
- 'brief': 'm3_gazebo'
  'description': "\n\n     m3_gazebo\n\n  "
  'name': 'm3_gazebo'
  'repo': 'wg-ros-pkg'
- 'brief': ''
  'description': "\n        This package contains a ROS node for accessing the PtGrey\
    \ Bumblebee cameras.\n    "
  'name': 'bumblebee1394'
  'repo': 'ubc-ros-pkg'
- 'brief': 'roboard_sensors'
  'description': "\n\n     Polls the i2c and ad of the Roboard for raw sensor data.\n\
    \     Raw data should be processed into meaningful data in\n     your own stack,\
    \ in an other node.\n\n  "
  'name': 'roboard_sensors'
  'repo': 'veltrop-ros-pkg'
- 'brief': 'command_generator'
  'description': "\n\n     command_generator\n\n  "
  'name': 'command_generator_PR2'
  'repo': 'gt-ros-pkg'
- 'brief': 'saliencydetection'
  'description': "\n\n     saliencydetection\n\n  "
  'name': 'saliencydetection'
  'repo': 'wg-ros-pkg'
- 'brief': 'Orocos/RTT typelib bindings'
  'description': "\n    "
  'name': 'rtt_typelib'
  'repo': 'orocos_toolchain'
- 'brief': 'elektron_sensors'
  'description': "\n\n     elektron_sensors\n\n  "
  'name': 'elektron_sensors'
  'repo': 'elektron_robot'
- 'brief': 'pr2_simulator_benchmarks'
  'description': "\n\n     pr2_simulator_benchmarks contains default benchmarks for\
    \ pr2 simulation\n\n  "
  'name': 'pr2_simulator_benchmarks'
  'repo': 'wg-ros-pkg'
- 'brief': 'LAAS robot dynamics interface'
  'description': "\n\n    FIXME\n\n  "
  'name': 'abstract-robot-dynamics'
  'repo': 'jrl-ros-pkg'
- 'brief': 'XML files for running SLAM with the move_base node on a Wubble robot.'
  'description': "\n        This package holds launch files for running the <a href=\"\
    http://www.ros.org/wiki/move_base\">move_base</a> node in conjunction with [[gmapping\
    \ | SLAM]] on a Wubble robot.\n    "
  'name': 'wubble_navigation_slam'
  'repo': 'ua-ros-pkg'
- 'brief': 'pr2_acceleration_record'
  'description': "\n\n     pr2_acceleration_record\n\n  "
  'name': 'pr2_acceleration_record'
  'repo': 'penn_lightweight_teleop'
- 'brief': 'A ROS wrapper for openmesh'
  'description': "\n  "
  'name': 'openmesh'
  'repo': 'bosch-ros-pkg'
- 'brief': 'pr2_haptic_event_detector'
  'description': "\n\n   pr2_haptic_event_detector discription\n\n  "
  'name': 'pr2_haptic_event_detector'
  'repo': 'haptic_event_detector'
- 'brief': 'xv_11_laser_driver'
  'description': "\n\n     Neato XV-11 Laser Driver. This driver works with the laser\
    \ when it is removed from the XV-11 Robot as opposed to reading scans from the\
    \ Neato's USB port.\n\n  "
  'name': 'xv_11_laser_driver'
  'repo': 'cwru-ros-pkg'
- 'brief': 'wm_acceleration_feedback'
  'description': "\n\n   wm_acceleration_feedback\n\n  "
  'name': 'wm_acceleration_feedback'
  'repo': 'penn_lightweight_teleop'
- 'brief': 'Demo application of GBBopen and Wubble Robot'
  'description': "\n\n     blackboard_demo\n\n    "
  'name': 'blackboard_demo'
  'repo': 'ua-ros-pkg'
- 'brief': 'articulation_tutorials'
  'description': "\n\n     This package contains various tutorials on how to use,\
    \ learn and evaluate articulation models. \n\n  "
  'name': 'articulation_tutorials'
  'repo': 'alufr-ros-pkg'
- 'brief': 'pr2_gripper_grasp_planner_cluster'
  'description': "\n\n    Plans grasps for unknown objects using the PR2 gripper.\
    \ Uses only\n    a (segmented) point cloud of the target object, often originating\n\
    \    from a single view or scan.\n\n  "
  'name': 'pr2_gripper_grasp_planner_cluster'
  'repo': 'wg-ros-pkg'
- 'brief': 'motion_planning_rviz_plugin'
  'description': "\n\n   The motion_planning_rviz_plugin enables the display of joint\
    \ paths for the robot in the rviz visualizer. \n\n  "
  'name': 'motion_planning_rviz_plugin'
  'repo': 'arm_navigation'
- 'brief': 'Test utility for benchmarking nodelet latencies'
  'description': "\n\n     Generates statistical data providing a benchmark for nodelet\
    \ latencies, both internally\n     (via the boost shared pointer mechanism) and\
    \ externally (via copies).\n\n  "
  'name': 'eros_nodelet_latency'
  'repo': 'eros'
- 'brief': 'rve_dynlib'
  'description': "\n\n     rve_dynlib\n\n  "
  'name': 'rve_dynlib'
  'repo': 'visualization_engine'
- 'brief': 'Patch for p2os_driver to control the 5-dof Pioneer Arm'
  'description': "\n    <p>\t\n\tThis package contains a patch file for the <a href=\"\
    http://www.ros.org/wiki/p2os_driver\">p2os_driver</a> from USC that\n\tenables\
    \ control of the 5-dof Pioneer Arm. The build script automatically downloads the\
    \ p2os_driver package internally, \n\tpatches it, and builds a new driver called\
    \ p2os_with_arm. This package does not rebuild the custom p2os_driver messages,\
    \ \n\tand thus requires the original p2os_driver package to be installed and operational\
    \ first.\n    </p>\n    <p>\n    This patch will be sent upstream to the maintainer\
    \ of the p2os_driver package for possible inclusion in a future release.\n   \
    \ </p>\n  "
  'name': 'p2os_with_arm_driver'
  'repo': 'gt-ros-pkg'
- 'brief': 'stage_extensions'
  'description': "\n\n     stage_extensions\n\n  "
  'name': 'stage_extensions'
  'repo': 'wg-ros-pkg'
- 'brief': 'img_test'
  'description': "\n\n     img_test\n\n  "
  'name': 'lv1_image'
  'repo': 'otl-ros-pkg'
- 'brief': 'create_pano'
  'description': "\n\n     Panoramic capture client for the iRobot Create. \n\n  "
  'name': 'create_pano'
  'repo': 'ros-pkg'
- 'brief': 'polonius_demo'
  'description': "\n    Polonius Demo\n  "
  'name': 'polonius_demo'
  'repo': 'wu-ros-pkg'
- 'brief': 'pr2_addons'
  'description': "\nA collection of nodes that multiple apps depend on at runtime.\
    \  Eventually, many of these nodes will migrate into pr2_bringup/pr2.launch\n\
    \  "
  'name': 'pr2_addons_application'
  'repo': 'wg-ros-pkg'
- 'brief': 'ROS driver for Velodyne 3D LIDARs'
  'description': "\n\n     ROS device driver for Velodyne HDL-64E, HDL-64E S2, and\
    \ HDL-32\n     LIDARs.\n\n  "
  'name': 'velodyne_driver'
  'repo': 'utexas-art-ros-pkg'
- 'brief': 'cl_tf'
  'description': "\n\n     cl_tf\n\n  "
  'name': 'cl_tf'
  'repo': 'ros-pkg'
- 'brief': 'ptu_control'
  'description': "\n\n     Provides an actionlib interface for PTUs which listen for\
    \ JointState messages (such as PTU46)\n\n  "
  'name': 'ptu_control'
  'repo': 'wu-ros-pkg'
- 'brief': 'linphone'
  'description': "\n\n     Provides two-way audio (voice-centric) communication between\
    \ a remote operator and a robot.\n\n  "
  'name': 'linphone'
  'repo': 'wg-ros-pkg'
- 'brief': 'quad_joy_teleop'
  'description': "\n\n     quad_joy_teleop\n\n  "
  'name': 'quad_joy_teleop'
  'repo': 'ccny_experimental'
- 'brief': 'rossql_examples'
  'description': "\nExamples for the rossql package    \n  "
  'name': 'rossql_examples'
  'repo': 'wg-ros-pkg'
- 'brief': 'geodetic coordinate transforms'
  'description': "\n\n     C++ interfaces for manipulating geodetic coordinates.\n\
    \n  "
  'name': 'geodesy'
  'repo': 'geographic_info'
- 'brief': 'hector_pose_estimation_core'
  'description': "\n\n     hector_pose_estimation_core is the core package of the\
    \ hector_localization stack. It contains the Extended Kalman Filter (EKF)\n  \
    \   that estimates the 6DOF pose of the robot. hector_pose_estimation can be used\
    \ either as a library, as a nodelet or as a standalone node.\n\n  "
  'name': 'hector_pose_estimation_core'
  'repo': 'tu-darmstadt-ros-pkg'
- 'brief': 'ft_eval'
  'description': "\n\n     ft_eval\n\n  "
  'name': 'ft_eval'
  'repo': 'wg-ros-pkg'
- 'brief': 'android_gingerbread'
  'description': "\n    android_gingerbread\n  "
  'name': 'android_gingerbread'
  'repo': 'android_core'
- 'brief': 'head_pose_estimation'
  'description': "\n\n     head_pose_estimation\n\n  "
  'name': 'head_pose_estimation'
  'repo': 'wu-ros-pkg'
- 'brief': 'aaai_lfd_pick_and_place_service'
  'description': "\n\n     aaai_lfd_pick_and_place_service\n\n  "
  'name': 'aaai_lfd_pick_and_place_service'
  'repo': 'bosch-ros-pkg'
- 'brief': 'rfid_demos'
  'description': "\n\n    rfid_demos\n\n  "
  'name': 'rfid_demos'
  'repo': 'gt-ros-pkg'
- 'brief': 'DoorplateReader'
  'description': " This Package reades textual information out of doorplates\n  "
  'name': 'DoorplateReader'
  'repo': 'roblab-whge-ros-pkg'
- 'brief': 'Monitor PR2 batteries and power board'
  'description': "\n\n     The power_monitor collects messages from the ocean_battery_server\
    \ and\n     the pr2_power_board, and publishes a summary of their data in a\n\
    \     friendlier message format.\n\n  "
  'name': 'power_monitor'
  'repo': 'wg-ros-pkg'
- 'brief': 'URDF for Create mobile base'
  'description': "\n    URDF description files for the Create mobile robot base from\
    \ iRobot.\n    "
  'name': 'irobot_create_description'
  'repo': 'aptima-ros-pkg'
- 'brief': 'neo_teleop'
  'description': "\n\n     neo_teleop\n\n  "
  'name': 'neo_teleop'
  'repo': 'neo_apps'
- 'brief': 'wb_robot_control'
  'description': "\n\n     wb_robot_control\n\n  "
  'name': 'wb_robot_control'
  'repo': 'vmi-ros-pkg'
- 'brief': 'mongodb'
  'description': "\n\n    The mongo database\n\n  "
  'name': 'mongodb'
  'repo': 'warehousewg'
- 'brief': 'riq_msgs'
  'description': "\n\n     riq_msgs\n\n  "
  'name': 'riq_msgs'
  'repo': 'wg-ros-pkg'
- 'brief': ''
  'description': '

    Defines 2d topological map, which is a set of 2d occupancy grids connected by
    approximate pose constraints.

    '
  'name': 'topological_map_2d'
  'repo': 'wg-ros-pkg'
- 'brief': 'Messages and Services for OpenRAVE Bindings'
  'description': "\n    Contains ROS messages and services that are commonly used\
    \ in the openrave_planning stack.\n\n  "
  'name': 'openrave_msgs'
  'repo': 'jsk-ros-pkg'
- 'brief': 'pelican_urdf'
  'description': "\n\n     STL and URDF files for the AscTec Pelican quadrotor.\n\n\
    \  "
  'name': 'pelican_urdf'
  'repo': 'asctec_drivers'
- 'brief': 'hrl_clickable_behaviors'
  'description': "\n\n     Contains a working demo of the hrl_clickable_world interface.\n\
    \n  "
  'name': 'hrl_clickable_behaviors'
  'repo': 'gt-ros-pkg'
- 'brief': 'libtoon'
  'description': "\n\n     This package wraps the libtoon to use it as a ros dependency\n\
    \n  "
  'name': 'libtoon'
  'repo': 'cob_object_perception'
- 'brief': ''
  'description': ''
  'name': 'scan_matcher'
  'repo': 'bosch-ros-pkg'
- 'brief': 'ds_pr2_fridge_manipulation_executive'
  'description': "\n\n     ds_fridge_manipulation_executive\n\n  "
  'name': 'ds_pr2_fridge_manipulation_executive'
  'repo': 'bosch-ros-pkg'
- 'brief': 'otl_gesture'
  'description': "\n\n     otl_gesture is very stupid recognizer of cleaning motions\n\
    \n  "
  'name': 'otl_gesture'
  'repo': 'otl-ros-pkg'
- 'brief': 'TIChronos'
  'description': "\n\n     TIChronos\n\n  "
  'name': 'TIChronos'
  'repo': 'TYROS'
- 'brief': 'pose_generator'
  'description': "\n\t\tGenerates PoseStamped messages\n  "
  'name': 'pose_generator'
  'repo': 'ccny_experimental'
- 'brief': 'rosjs_widgets'
  'description': "\n    rosjs common.\n  "
  'name': 'rosjs_remotelabwidgets'
  'repo': 'bosch-ros-pkg'
- 'brief': 'This package contains the service definitions for intra-project communication
    and the launch files.'
  'description': "\n\n     portrait_roboter_msgs\n\n  "
  'name': 'portrait_robot_msgs'
  'repo': 'alufr-ros-pkg'
- 'brief': 'ride2'
  'description': "\n\n     2nd major version of RIDE, a multi-robot control GUI.\n\
    \n  "
  'name': 'ride2'
  'repo': 'wg-ros-pkg'
- 'brief': 'skillgui'
  'description': "\n    A GUI for controlling skiller.\n  "
  'name': 'skillgui'
  'repo': 'skillgui'
- 'brief': 'graycode_scanner'
  'description': "\n\n     picoscanner\n\n  "
  'name': 'graycode_scanner'
  'repo': 'stanford-ros-pkg'
- 'brief': 'Infrastructure Systems'
  'description': "\n     InfraTec Modules: You can switch objects in your infrastructure.\n\
    \     Currently just a IPSwitch, more to come.\n     \n  "
  'name': 'driver_infratec'
  'repo': 'vmi-ros-pkg'
- 'brief': 'WAM_msgs'
  'description': "\n\n     WAM_msgs\n\n  "
  'name': 'WAM_msgs'
  'repo': 'darpa_arm_msgs'
- 'brief': 'ua_audio_infomax'
  'description': "\n\n     ua_audio_infomax\n\n  "
  'name': 'ua_audio_infomax'
  'repo': 'ua-ros-pkg'
- 'brief': 'smach_tutorials'
  'description': "\n    This package containes numerous examples of how to use SMACH.\
    \ See the examples directory.\n  "
  'name': 'asmach_tutorials'
  'repo': 'ros-pkg'
- 'brief': 'Hardware Abstraction Layer for Cognitive Systems'
  'description': "\n\n    This packages helps the user to understand binary connections\n\
    \    giving them a meaningful name and path.\n\n  "
  'name': 'ce_hardware'
  'repo': 'vmi-ros-pkg'
- 'brief': 'armadillo_object_manipulation'
  'description': "\n\n     armadillo_object_manipulation\n\n  "
  'name': 'armadillo_object_manipulation'
  'repo': 'swri-ros-pkg'
- 'brief': 'hector_gazebo_worlds'
  'description': "\n\n     hector_gazebo_worlds provides gazebo scenarios used by\
    \ Team Hector Darmstadt\n\n  "
  'name': 'hector_gazebo_worlds'
  'repo': 'tu-darmstadt-ros-pkg'
- 'brief': 'pr2_remote_teleop'
  'description': "\n\n     An application that allows control of the pr2 arms, head,\
    \ and base \n     through a joystick interface such as the PS3 controller or a\
    \ spacenav device.\n\n     Any joystick will work; the mapping is read from a\
    \ configuration file.\n\n  "
  'name': 'pr2_remote_teleop'
  'repo': 'wg-ros-pkg'
- 'brief': 'cart_pushing_msgs'
  'description': "\n\n     cart_pushing_msgs\n\n  "
  'name': 'cart_pushing_msgs'
  'repo': 'wg-ros-pkg'
- 'brief': 'circle_finder'
  'description': "\n\n     circle_finder\n\n  "
  'name': 'circle_finder'
  'repo': 'seabee3-ros-pkg'
- 'brief': 'octree_slam'
  'description': "\n\n     octree_slam\n\n  "
  'name': 'octree_slam'
  'repo': 'ccny_experimental'
- 'brief': 'world_db_bag_player'
  'description': "\n    This plugin allows to play back bags that have been recorded\
    \ at a specific\n    location.\n  "
  'name': 'world_db_bag_player'
  'repo': 'wg-ros-pkg'
- 'brief': 'stereo_capture'
  'description': "\n\n   Contains stereo video capture related nodes.\n   There is\
    \ a modified version of uvc_cam that works with non-uvc cameras.  To work with\
    \ standard capture devices it allows the user to set the video encoding standard\
    \ (NTSC, PAL, DEFAULT)\n   The stereo capture also permits the incoming images\
    \ to be rotated by 90 degrees.  This allows the user to set up stereo cameras\
    \ in non standard orientations, or could be used to permit vertical stereo.\n\
    \   The included modified stereo_image_proc can also produce two disparity images,\
    \ one based on the left image, and one based on the right image.  This is because\
    \ low resolution images which are requesting a large maximum disparity can lose\
    \ much of the incoming image data. (a 240px wide image with 128 max disparity\
    \ has less than half left).  So for percieving things that are very close to the\
    \ cameras this is no good.  The additional disparity image allows the full field\
    \ of view to be used up close, but requires more cpu time.\n\n  "
  'name': 'stereo_capture'
  'repo': 'veltrop-ros-pkg'
- 'brief': 'engagement_test'
  'description': "\n     engagement_test is a series of nodes to test the engagement\
    \ stack.\n  "
  'name': 'engagement_test'
  'repo': 'ros-engagement'
- 'brief': 'summit_2dnav'
  'description': "\n\n     summit_2dnav\n\n  "
  'name': 'summit_2dnav'
  'repo': 'summit-ros-pkg'
- 'brief': ''
  'description': ''
  'name': 'rtc'
  'repo': 'bosch-ros-pkg'
- 'brief': 'object_segmentation_gui'
  'description': "\n\n     A package for interactive object segmentation.\n\n  "
  'name': 'object_segmentation_gui'
  'repo': 'wg-ros-pkg'
- 'brief': 'checkerboard_pose'
  'description': "\n\n     checkerboard_pose\n\n  "
  'name': 'checkerboard_pose'
  'repo': 'wg-ros-pkg'
- 'brief': 'A small library for ROS sessions'
  'description': "\n    Sessions offer execution synchronization between a persistent\
    \ set of services. Each session maintains a state on the server side which is\
    \ independent of the connection. This allows multiple clients to have the option\
    \ of maintaining an independent workspace on the server side, or potentially to\
    \ share the same workspace.\n  "
  'name': 'roscpp_sessions'
  'repo': 'jsk-ros-pkg'
- 'brief': 'people_dataset_interface'
  'description': "\n\n     people_dataset_interface\n\n  "
  'name': 'people_dataset_interface'
  'repo': 'wg-ros-pkg'
- 'brief': 'diag_sim'
  'description': "\n\n     diag_sim\n\n  "
  'name': 'diag_sim'
  'repo': 'lwr_gui'
- 'brief': 'ART vehicle messages'
  'description': "\n\n     This package defines messages specific to ART autonomous\
    \ vehicle.\n\n  "
  'name': 'art_msgs'
  'repo': 'utexas-art-ros-pkg'
- 'brief': 'Checks the counterbalance of the PR2, recommends adjustments'
  'description': "\n<b>pr2_counterbalance_check</b> can be used as either a stand-alone\
    \ tool to check the counterbalance, or as part of the PR2 Production Qualification\
    \ system.\n  "
  'name': 'pr2_counterbalance_check'
  'repo': 'wg-ros-pkg'
- 'brief': 'coreslam'
  'description': "\n\nThis package contains CoreSLAM, from OpenSlam, and a ROS wrapper.\n\
    \n  "
  'name': 'coreslam'
  'repo': 'albany-ros-pkg'
- 'brief': 'rosmultimaster'
  'description': "\n      The rosmultimaster package is designed to allow you to connect\
    \ to multiple ros cores from within a single process. This is achieved via the\
    \ rosmultimaster.Adaptor class. \n  "
  'name': 'rosmultimaster'
  'repo': 'wu-ros-pkg'
- 'brief': 'controller_switcher'
  'description': "\n\n     controller_switcher\n\n  "
  'name': 'controller_switcher'
  'repo': 'wg-ros-pkg'
- 'brief': 'ds_pr2_drink_fetching_planner'
  'description': "\n\n     ds_drink_fetching_planner\n\n  "
  'name': 'ds_pr2_drink_fetching_planner'
  'repo': 'bosch-ros-pkg'
- 'brief': 'smach_ros'
  'description': "\n    The smach_ros package contains extensions for the SMACH library\
    \ to\n    integrate it tightly with ROS.  For example, SMACH-ROS can call\n  \
    \  ROS services, listen to ROS topics, and integrate\n    with <a href=\"http://www.ros.org/wiki/actionlib\"\
    >actionlib</a>\n    both as a client, and a provider of action servers.  SMACH\
    \ is a\n    new library that takes advantage of very old concepts in order to\n\
    \    quickly create robust robot behavior with maintainable and modular\n    code.\n\
    \  "
  'name': 'smach_ros'
  'repo': 'executive_smach'
- 'brief': 'Classes to facilitate timestamping of sensor data'
  'description': "\n    This package is currently for internal use only. Its API may\
    \ change\n    without warning in the future.\n    \n    <tt>timestamp_tools</tt>\
    \ provides:\n    \n    <ul>\n    <li>\n      a <tt>TriggerMatcher</tt>, that matches\
    \ a stream of data structures with\n    approximate timestamps to a stream of\
    \ exact timestamps.\n    </li>\n    </ul>\n\n  "
  'name': 'timestamp_tools'
  'repo': 'ros-pkg'
- 'brief': 'cram_plan_failures'
  'description': "\n\n     cram_plan_failures\n\n  "
  'name': 'cram_plan_failures'
  'repo': 'cram_highlevel'
- 'brief': 'phidget'
  'description': "\n     Phidget Interface Kit\n  "
  'name': 'phidget'
  'repo': 'usc-ros-pkg'
- 'brief': 'opencv_ostream'
  'description': "\n\n     opencv_ostream\n\n  "
  'name': 'opencv_ostream'
  'repo': 'wg-ros-pkg'
- 'brief': 'Lightweight streaming classes that connect to ecl devices'
  'description': "\n\n     These are lightweight text streaming classes that connect\
    \ to standardised\n     ecl type devices.\n\n  "
  'name': 'ecl_streams'
  'repo': 'ecl_core'
- 'brief': 'netft_ethercat_hardware'
  'description': "\n\n    pr2_etherCAT/ethercat_hardware driver plugin for NetFT sensor\n\
    \    NetFT does not use EtherCAT, however, having plugin allows \n    realtime\
    \ controllers get data from NetFT box.\n\n  "
  'name': 'netft_ethercat_hardware'
  'repo': 'wg-ros-pkg'
- 'brief': 'A collection of lockfree data structures'
  'description': "\n  \n     The lockfree package contains lock-free data structures\
    \ for use in multithreaded programming.  These\n     kinds of data structures\
    \ are generally not as easy to use as single-threaded equivalents, and are not\n\
    \     always faster.  If you don't know you need to use one, try another structure\
    \ with a lock around it\n     first.\n\n  "
  'name': 'lockfree'
  'repo': 'ros_realtime'
- 'brief': 'student_database'
  'description': "\n\n    Example package for using the database_interface. Contains\
    \ the\n    code used in the database_interface tutorials.\n\n  "
  'name': 'student_database'
  'repo': 'wg-ros-pkg'
- 'brief': 'haptic_event_detector_msgs'
  'description': "\n\n     haptic_event_detector_msgs\n\n  "
  'name': 'haptic_event_detector_msgs'
  'repo': 'haptic_event_detector'
- 'brief': 'ar_map_navigate_bumpers'
  'description': "\n\n     ar_map_navigate_bumpers\n\n  "
  'name': 'ar_map_navigate_bumpers'
  'repo': 'brown-experimental'
- 'brief': 'darrt'
  'description': "\n\n     darrt\n\n  "
  'name': 'darrt'
  'repo': 'wg-ros-pkg'
- 'brief': 'move_base_rfn'
  'description': "\n\n    move_base_rfn acts as an interface between RoboFrameNet\
    \ and the move_base action server.  move_base_rfn is an RFNServer which listens\
    \ for requests to navigate to certain locations.  When a request comes in, move_base_rfn\
    \ sends requests to the move_base action server. When a preempt request comes,\
    \ a preempt is likewise sent to the move_base action server.\n\n  "
  'name': 'move_base_rfn'
  'repo': 'roboframenet'
- 'brief': 'pr2_head_action'
  'description': "\n\n  The PR2 head action is a node that provides an action interface\
    \ for\n  pointing the head of the PR2.  It passes trajectory goals to the\n  controller,\
    \ and reports success when they have finished executing.\n\n  "
  'name': 'pr2_head_action'
  'repo': 'wg-ros-pkg'
- 'brief': 'sbpl_door_planner_plugin'
  'description': ' sbpl_door_planner_plugin '
  'name': 'sbpl_door_planner_plugin'
  'repo': 'sbpl_door_planning'
- 'brief': 'Cross platform abstractions for implementation dependant and low-level
    io api'
  'description': "\n\n     Most implementations (windows, posix, ...) have slightly\
    \ different api for \n     low level input-output functions. These are gathered\
    \ here and re-represented \n     with a cross platform set of functions.\n\n  "
  'name': 'ecl_io'
  'repo': 'ecl_lite'
- 'brief': 'astromech_base'
  'description': "\n\n     astromech_base: Node to talk to an Astromech robot platform\n\
    \n  "
  'name': 'astromech_base'
  'repo': 'astromech-ros'
- 'brief': 'sr_smach_example'
  'description': "\n\n     sr_smach_example is a package using SMACH: http://www.ros.org/wiki/smach\
    \ to control the Shadow\n     Robot Hand and Arm for a demo.\n\n  "
  'name': 'sr_smach_example'
  'repo': 'shadow_robot'
- 'brief': 'katana_arm_navigation'
  'description': "\n\n     <p>\n     This package contains the launch files for arm\
    \ navigation with the Katana robot arm.\n     It is modeled after the <a href=\"\
    /wiki/pr2_arm_navigation\">pr2_arm_navigation</a>\n     stack. All packages inside\
    \ that stack are represented as subdirectories here.\n     </p>\n\n     <p>\n\
    \     The complete arm navigation pipeline can be launched via the katana_arm_navigation.launch\
    \ file.\n     </p>\n\n  "
  'name': 'katana_arm_navigation'
  'repo': 'uos-ros-pkg'
- 'brief': 'python_facebook'
  'description': "\n\n     python_facebook\n\n  "
  'name': 'python_facebook'
  'repo': 'vmi-ros-pkg'
- 'brief': 'fctuc_open_day'
  'description': "\n\n      Small demo for the FCTUC open day.\n\n  "
  'name': 'fctuc_open_day'
  'repo': 'lse_experiments'
- 'brief': 'luaagent'
  'description': "\n     Behavior Engine Lua agent.\n  "
  'name': 'luaagent'
  'repo': 'behavior_engine'
- 'brief': 'Loads, analyzes testing data from WG Inventory System'
  'description': "\nLoads testing data from WG Inventory system. Internal WG use only.\n\
    \  "
  'name': 'wgtest_data_analysis'
  'repo': 'wg-ros-pkg'
- 'brief': 'geometric_semantics_msgs'
  'description': "\n\n     This package provides ROS messages matching the C++ types\
    \ defined on the <a href=\"http://www.ros.org/wiki/geometric_semantics\">geometric_semantics</a>\
    \ package, in order to support semantic support during message based communication.\n\
    \n  "
  'name': 'geometric_semantics_msgs'
  'repo': 'geometric_relations_semantics'
- 'brief': 'hector_map_server'
  'description': "\n\n     hector_map_server provides a service for retrieving the\
    \ map, as well as for raycasting based obstacle queries (finds next obstacle in\
    \ the map, given start and endpoint in any tf coordinate frame).\n\n  "
  'name': 'hector_map_server'
  'repo': 'tu-darmstadt-ros-pkg'
- 'brief': 'auction_msgs'
  'description': "\n\n     auciton_msgs\n\n  "
  'name': 'auction_msgs'
  'repo': 'auction_methods_stack'
- 'brief': 'mapping3d'
  'description': "\n\n    mappin3d, a set of tools for 3d mapping.\n\n  "
  'name': 'mapping3d'
  'repo': 'wg-ros-pkg'
- 'brief': 'oro_ontology'
  'description': "\n\n     oro_ontology\n\n  "
  'name': 'oro_ontology'
  'repo': 'tum-ros-pkg'
- 'brief': 'bagproc_template'
  'description': "\n\n     bagproc_template\n\n  "
  'name': 'bagproc_template'
  'repo': 'wg-ros-pkg'
- 'brief': 'hone_markers'
  'description': "\n\n     hone_markers\n\n  "
  'name': 'hone_markers'
  'repo': 'irvs-ros-pkg'
- 'brief': 'pi_tb_slam'
  'description': "\n\n     pi_tb_slam\n\n  "
  'name': 'pi_tb_slam'
  'repo': 'pi-robot-ros-pkg'
- 'brief': 'common_utils'
  'description': "\n\n     common_utils\n\n  "
  'name': 'common_utils'
  'repo': 'seabee3-ros-pkg'
- 'brief': 'pr2_state_player'
  'description': "\n\n     pr2_state_player\n\n  "
  'name': 'pr2_state_player'
  'repo': 'wg-ros-pkg'
- 'brief': 'chessbot'
  'description': "\n\n     chessbot\n\n  "
  'name': 'chessbot'
  'repo': 'stanford-ros-pkg'
- 'brief': 'teleop_iSOBOT_joy'
  'description': "\n\n     teleop_iSOBOT_joy\n\n  "
  'name': 'teleop_iSOBOT_joy'
  'repo': 'otl-ros-pkg'
- 'brief': 'indomptable_nav'
  'description': "\n\n     indomptable_nav\n\n  "
  'name': 'indomptable_nav'
  'repo': 'smart-robotics-ros-pkg'
- 'brief': 'heat_equation_solver'
  'description': "\n    A special purpose linear system solver to solve the heat equation\
    \ on an nD grid, given inputs of temperature 0 or 1 and given a uniform conductivity\
    \ between neighboring cells. It is designed primarily for use by model_assembler.\n\
    \  "
  'name': 'heat_equation_solver'
  'repo': 'wg-ros-pkg'
- 'brief': 'Shadow Robot Hand Definitions Main Directory'
  'description': "\n    \n    This package contains XML (and xacro macros) descriptions\
    \ of robot kinematics in the format\n    defined at Willow Garage.\n    \n  "
  'name': 'sr_hand_ethercat'
  'repo': 'wg-ros-pkg'
- 'brief': 'Drives PR2 base to for a burn-in test'
  'description': "\n<p><b>pr2_drive_life_test</b> contains utilities for localizing\
    \ and commanding the PR2 in a special fixture. This is used in a PR2 burn in test.</p>\n\
    \n<p>This is intended for Willow Garage personnel only, and has no public API.</p>\n\
    \  "
  'name': 'pr2_drive_life_test'
  'repo': 'wg-ros-pkg'
- 'brief': 'Many to many sigslot comms with thread safety and posix style naming'
  'description': "\n\n     Provides a signal/slot mechanism (in the same vein as qt\
    \ sigslots, boost::signals etc.\n     for intra-process communication. These include\
    \ some improvements - they do not need \n     a preprocessor, are fully type safe,\n\
    \     allow for simple connections via a posix style string identifier and are\
    \ multithread-safe.\n\n  "
  'name': 'ecl_sigslots'
  'repo': 'ecl_core'
- 'brief': 'trivial-garbage'
  'description': "\n      trivial-garbage\n      http://www.cliki.net/trivial-garbage\n\
    \  "
  'name': 'trivial_garbage'
  'repo': 'cram_pl'
- 'brief': 'ias_knowledge_base'
  'description': "\n\n    The KnowRob ontology and some other required OWL files (e.g.\
    \ owl.owl defining the OWL language, and rdf-schema.xml defining the RDFS concepts).\n\
    \n  "
  'name': 'ias_knowledge_base'
  'repo': 'knowrob'
- 'brief': 'mary_tts'
  'description': "\n\n     3rdparty wrapper for DFKI's Mary Text-to-speech system.\
    \ Node listens to the /mary/tts topic and reads all published texts.\n\n     Mary\
    \ is based on human speech recordings, i.e. the models are larger than for formant-based\
    \ systems like espeak, but the output is often more natural.\n\n  "
  'name': 'mary_tts'
  'repo': 'tum-ros-pkg'
- 'brief': 'Visualization for OctoMap based on libQGLViewer and Qt.'
  'description': "\n\n octovis is visualization tool for <a href=\"http://octomap.sourceforge.net/\"\
    >OctoMap</a>\n based on Qt and <a href=\"http://www.libqglviewer.com/\">libQGLViewer</a>\n\
    \n  "
  'name': 'octovis'
  'repo': 'alufr-ros-pkg'
- 'brief': 'navigation_communications'
  'description': "\n\n     The navigation_communications package defines messages\
    \ and services for navigation.\n\n  "
  'name': 'navigation_communications'
  'repo': 'pandora-auth-ros-pkg'
- 'brief': 'seabee3_stabilizer'
  'description': "\n\n     seabee3_stabilizer\n\n  "
  'name': 'seabee3_stabilizer'
  'repo': 'seabee3-ros-pkg'
- 'brief': ''
  'description': 'Launch Manager'
  'name': 'launchman'
  'repo': 'wg-ros-pkg'
- 'brief': 'turtlebot_gazebo_plugins'
  'description': "\n\n     turtlebot_plugins\n\n  "
  'name': 'turtlebot_gazebo_plugins'
  'repo': 'turtlebot_simulator'
- 'brief': 'Build recipe for cross-compiling the apache c++ logging library'
  'description': "\n\n\tThis provides a source package for compiling the apache c++\
    \ logging library.\n\tOrdinarily this is not useful as you would install via your\
    \ system's\n\tinstallation method (e.g. apt-get for ubuntu), but for cross-compiling\
    \ \n    it provides the recipe needed to make a toolchain ros-ready.\n\n  "
  'name': 'eros_log4cxx'
  'repo': 'eros'
- 'brief': 'herb_skills'
  'description': "\n    Skills used for the HERB robot at Intel Research Pittsburgh.\n\
    \  "
  'name': 'herb_skills'
  'repo': 'behavior_engine'
- 'brief': 'head_follow_people'
  'description': "\n\n     head_follow_people\n\n  "
  'name': 'head_follow_people'
  'repo': 'usc-ros-pkg'
- 'brief': 'color_classifier'
  'description': "\n\n     color_classifier\n\n  "
  'name': 'color_classifier'
  'repo': 'seabee3-ros-pkg'
- 'brief': 'Prosilica GigE SDK'
  'description': "\n  <p>\n  The PvAPI SDK from AVT (originally Prosilica) allows\
    \ users to control and\n  capture images from AVT's GigE Vision cameras. The ROS\
    \ package automatically\n  downloads and extracts a tarball, installs headers\
    \ and libraries, and builds a\n  few useful example programs.\n  </p>\n  <p>\n\
    \  We currently use version 1.20 of the SDK, released 7 April 2009. It is known\n\
    \  to work with version 1.36 of the AVT GigE Vision camera firmware. We will\n\
    \  update the version for bugfixes and for new features we deem particularly\n\
    \  useful to vision applications.\n  </p>\n"
  'name': 'prosilica_gige_sdk'
  'repo': 'ros-pkg'
- 'brief': 'bilibot_bringup'
  'description': "\n\n     bilibot_bringup provides roslaunch scripts for starting\
    \ the bilibot base functionality.\n\n  "
  'name': 'bilibot_bringup'
  'repo': 'bilibot-ros-pkg'
- 'brief': 'rostopic command-line tool'
  'description': "\n\nrostopic contains the rostopic command-line tool for displaying\n\
    debug information about\nROS <a href=\"http://www.ros.org/wiki/Topics\">Topics</a>,\
    \ including\npublishers, subscribers, publishing rate,\nand ROS <a href=\"http://www.ros.org/wiki/Messages\"\
    >Messages</a>. It also\ncontains an experimental Python library for getting information\
    \ about\nand interacting with topics dynamically. This library is for\ninternal-use\
    \ only as the code API may change, though it does provide\nexamples of how to\
    \ implement dynamic subscription and publication\nbehaviors in ROS.\n\n  "
  'name': 'rostopic'
  'repo': 'ros_comm'
- 'brief': 'party_follow_me'
  'description': "\n\n     party_follow_me\n\n  "
  'name': 'party_follow_me'
  'repo': 'wg-ros-pkg'
- 'brief': 'ess_detector'
  'description': "\n\n     ess_detector\n\n  "
  'name': 'ess_detector'
  'repo': 'wg-ros-pkg'
- 'brief': 'Detect when a set of joints has stopped moving'
  'description': "\n     Provides a node that reports how long a subset of joints\
    \ has been\n     settled. That is, it calculates how long a set of joints has\
    \ remained\n     within a specified threshold. This package is experimental and\
    \ unstable.\n     Expect its APIs to change.\n  "
  'name': 'joint_states_settler'
  'repo': 'calibration'
- 'brief': 'srvc'
  'description': "\n        This package contains scripts and launch files for starting\
    \ the software and robot leagues in the SRVC contest.\n    "
  'name': 'srvc'
  'repo': 'ubc-ros-pkg'
- 'brief': 'mapping_tools'
  'description': "\n\n     mapping_tools\n\n  "
  'name': 'mapping_tools'
  'repo': 'wg-ros-pkg'
- 'brief': 'clearpath_teleop'
  'description': "\n     The clearpath_teleop package contains basic nodes used to\
    \ quickly launch your Clearpath Robotics platform with a joystick control.\n  "
  'name': 'clearpath_teleop'
  'repo': 'clearpath-ros-pkg'
- 'brief': 'ic2020_vodom'
  'description': "\n\n     ic2020_vodom\n\n  "
  'name': 'ic2020_vodom'
  'repo': 'ic2020'
- 'brief': 'fast_template_detector'
  'description': "\n\n     ftd\n\n  "
  'name': 'ftd_pt_learner'
  'repo': 'wg-ros-pkg'
- 'brief': 'ias_table_srvs'
  'description': "\n    Services for table perception applications at TUM.\n  "
  'name': 'ias_table_srvs'
  'repo': 'mapping'
- 'brief': 'trigger_commands'
  'description': "\n\n     trigger_commands\n\n  "
  'name': 'trigger_commands'
  'repo': 'wg-ros-pkg'
- 'brief': 'Compute the intersection of many interval msgs'
  'description': "\n    Tools for calculating the intersection of interval messages\
    \ coming\n    in on several topics. This package is experimental and unstable.\n\
    \    Expect its APIs to change.\n  "
  'name': 'interval_intersection'
  'repo': 'calibration'
- 'brief': 'ias_map_annotations'
  'description': "\n\n     ias_map_annotations\n\n  "
  'name': 'ias_map_annotations'
  'repo': 'cram_highlevel'
- 'brief': 'husky_description'
  'description': "\n\t\tClearpath Husky A200 Robot Description\n\t"
  'name': 'husky_description'
  'repo': 'clearpath-ros-pkg'
- 'brief': 'Messages used for PR2 hardware testing'
  'description': "\nMessages used in PR2 hardware testing.\n  "
  'name': 'pr2_self_test_msgs'
  'repo': 'wg-ros-pkg'
- 'brief': 'teleop_microscribe'
  'description': "\n\n     teleop_microscribe\n\n  "
  'name': 'teleop_microscribe'
  'repo': 'wg-ros-pkg'
- 'brief': 'joint state publisher + muxer to merge Kurtana (Kinect rack) joint states
    and Katana joint states into joint_states'
  'description': "\n\n    This package contains a joint state publisher and a muxer\
    \ to merge Kurtana (Kinect rack) joint states and Katana joint states into joint_states.\
    \ This is necessary because some packages can't cope with multiple publishers\
    \ on the /joint_states topic.\n\n  "
  'name': 'kurtana_joint_state_publisher'
  'repo': 'uos-ros-pkg'
- 'brief': 'bilibot_logging'
  'description': "\n\n     bilibot_logging\n\n  "
  'name': 'bilibot_logging'
  'repo': 'bilibot-ros-pkg'
- 'brief': 'lejos_navigation'
  'description': "\n\n     lejos_navigation\n\n  "
  'name': 'lejos_navigation'
  'repo': 'lejos-ros-pkg'
- 'brief': 'parsec_bringup'
  'description': "\n\n     parsec_bringup\n\n  "
  'name': 'parsec_bringup'
  'repo': 'parsec'
- 'brief': 'bumper_localizer'
  'description': "\n\n     bumper_localizer\n\n  "
  'name': 'bumper_localizer'
  'repo': 'brown-experimental'
- 'brief': 'object_detection_gui'
  'description': "\n\n     A package for user-aided object detection and pose estimation\n\
    \     on pre-segmented point clouds.\n\n  "
  'name': 'object_recognition_gui'
  'repo': 'wg-ros-pkg'
- 'brief': 'random_walk'
  'description': "\n\n     ROS implementation of a random walk algorithm based on\
    \ the navigation stack.\n\n  "
  'name': 'random_walk'
  'repo': 'odor_search'
- 'brief': 'pr2_dremel_arm_controller'
  'description': "\n\n     pr2_dremel_arm_controller\n\n  "
  'name': 'pr2_dremel_arm_controller'
  'repo': 'bosch-ros-pkg'
- 'brief': 'gmock'
  'description': "\n\n     Google Mock Framework Wrapper for ROS\n\n  "
  'name': 'gmock'
  'repo': 'pandora-auth-ros-pkg'
- 'brief': 'pr2_laban_gazebo_demo'
  'description': "\n\n     PR2 Laban motion analysis template project.\n     For now\
    \ it starts a PR2 and loads some default trajectory controllers.\n\n  "
  'name': 'pr2_laban_gazebo_demo'
  'repo': 'wg-ros-pkg'
- 'brief': 'pr2_assisted_teleop'
  'description': "\n\n     pr2_assisted_teleop\n\n  "
  'name': 'pr2_assisted_teleop'
  'repo': 'wg-ros-pkg'
- 'brief': 'rfid_behaviors'
  'description': "\n\n     rfid_behaviors\n\n  "
  'name': 'rfid_behaviors'
  'repo': 'gt-ros-pkg'
- 'brief': 'janus'
  'description': "\n\n     janus\n\n  "
  'name': 'janus'
  'repo': 'ivs-ros-pkg'
- 'brief': 'cram_emacs_repl'
  'description': "\n\n     cram_emacs_repl\n\n  "
  'name': 'cram_emacs_repl'
  'repo': 'tum-ros-pkg'
- 'brief': 'nxt_python'
  'description': "\n    This package automatically downloads version 1.1.2 of the\n\
    \    <a href=\"http://code.google.com/p/nxt-python\">NXT-python</a>\n    library.\
    \ We intend to upgrade to the 2.0.x version of this library\n    when it becomes\
    \ available. NXT-python is a libraray for\n    controlling a LEGO NXT robot using\
    \ the Python programming\n    language. It can communicate using either USB or\
    \ Bluetooth. It is\n    available under the Free Software Foundation's GPL license.\n\
    \  "
  'name': 'nxt_python'
  'repo': 'foote-nxt'
- 'brief': ''
  'description': "\n    <p>\n      Canon_Gphoto controls a Gphoto2-compatible Canon\
    \ camera over USB.\n    </p>\n  "
  'name': 'canon_gphoto'
  'repo': 'wg-ros-pkg'
- 'brief': 'cob_mmcontroller'
  'description': "\n\n     cob_mmcontroller\n\n  "
  'name': 'cob_mmcontroller'
  'repo': 'cob_manipulation'
- 'brief': 'cad_model_publisher'
  'description': "\n    cad_model_publisher publishes stl and dae format meshes as\
    \ RVIZ markers.\n  "
  'name': 'cad_model_publisher'
  'repo': 'bosch-ros-pkg'
- 'brief': 'm3_planning'
  'description': "\n\n     m3_planning\n\n  "
  'name': 'm3_planning'
  'repo': 'wg-ros-pkg'
- 'brief': 'lwr_bringup'
  'description': "\n\n     lwr_bringup\n\n  "
  'name': 'lwr_bringup'
  'repo': 'lwr_robot'
- 'brief': 'joint_trajectory_generator'
  'description': "\n\n     joint_trajectory_generator\n\n  "
  'name': 'joint_trajectory_generator'
  'repo': 'wg-ros-pkg'
- 'brief': 'libmesasr'
  'description': "\n\n     This package wraps the libmesasr to use it as a ros dependency\n\
    \n  "
  'name': 'libmesasr'
  'repo': 'cob_extern'
- 'brief': 'hector_map_tools'
  'description': "\n\n     hector_map_tools contains some functions related to accessing\
    \ information from OccupancyGridMap maps.\n     Currently consists of a single\
    \ header.\n\n  "
  'name': 'hector_map_tools'
  'repo': 'tu-darmstadt-ros-pkg'
- 'brief': 'pi_head_tracking_3d_part1'
  'description': "\n     Head Tracking in 3D Part 1\n  "
  'name': 'pi_demo_old'
  'repo': 'pi-robot-ros-pkg'
- 'brief': 'boost_lockfree'
  'description': "\n\n     Tim Blechmann's boost_lockfree library, which includes\
    \ a\n     lock-free queue and stack.  Not currently a part of boost, but\n   \
    \  implemented in boost style.\n\n     Code: http://tim.klingt.org/git?p=boost_lockfree.git;a=summary\n\
    \n     Documentation: http://tim.klingt.org/boost_lockfree/\n\n     Be warned:\
    \ boost_lockfree includes a modified version of\n     boost::atomic, which may\
    \ play badly with other packages.\n\n  "
  'name': 'boost_lockfree'
  'repo': 'wg-ros-pkg'
- 'brief': 'Get anaglyph image form a stereo camera'
  'description': "\n\n     <tt>anaglyph</tt> combines left and right stereo camera\
    \ images to produce a single stereoscopic image.\n\n  "
  'name': 'anaglyph'
  'repo': 'amor-ros-pkg'
- 'brief': 'register_image'
  'description': "\n\n     register_image\n\n  "
  'name': 'register_image'
  'repo': 'ubc-ros-pkg'
- 'brief': 'pgr_camera'
  'description': "\n\t\tA ROS node to provide access to Point Grey Research cameras,\
    \ using the\n\t\tFlyCapture2 SDK API\n\t\tAcknowledgement: This package is based\
    \ largely on the prosilica_camera package,\n\t\tby Patrick Mihelich (http://www.ros.org/wiki/prosilica_camera).\n\
    \t"
  'name': 'pgr_camera'
  'repo': 'pgr_camera'
- 'brief': 'srh_defs'
  'description': "\n\n     srh_defs\n\n  "
  'name': 'srh_defs'
  'repo': 'wg-ros-pkg'
- 'brief': 'face_recognition'
  'description': "\nA ROS package for face recognition in video stream.\nFace recognition\
    \ is performed using Eigenfaces (also called &quot;Principal Component Analysis&quot;\
    \ or PCA) by utilizing the c++ source code provided by Shervin Emami (http://www.shervinemami.info/faceRecognition.html)\n\
    \  "
  'name': 'face_recognition'
  'repo': 'procrob_functional'
- 'brief': 'tools'
  'description': "\n\n     tools\n\n  "
  'name': 'tools'
  'repo': 'usc-ros-pkg'
- 'brief': 'hector_gazebo_thermal_camera'
  'description': "\n\n     hector_gazebo_thermal_camera provides a gazebo plugin that\
    \ produces simulated thermal camera images. The plugin uses modified code from\
    \ the gazebo_ros_camera plugin.\n\n  "
  'name': 'hector_gazebo_thermal_camera'
  'repo': 'tu-darmstadt-ros-pkg'
- 'brief': 'rve_render_server'
  'description': "\n\n     rve_render_server\n\n  "
  'name': 'rve_render_server'
  'repo': 'visualization_engine'
- 'brief': 'astromech_data'
  'description': "\n\n     astromech_data\n\n  "
  'name': 'astromech_data'
  'repo': 'astromech-ros'
- 'brief': 'locloc_erratic'
  'description': "\n    Low-cost localization experiments on an erratic robot\n  "
  'name': 'locloc_erratic'
  'repo': 'stanford-ros-pkg'
- 'brief': 'Orocos soem_ebox Component package'
  'description': "\n        This package contains the components of the soem_ebox\
    \ package\n    "
  'name': 'soem_ebox'
  'repo': 'soem'
- 'brief': 'sift_lowe'
  'description': "\n\n     Classics - Lowe's Sift feature.\n\n  "
  'name': 'sift_lowe'
  'repo': 'tum-ros-pkg'
- 'brief': 'python_twitter'
  'description': "\n\n     python_twitter\n\n  "
  'name': 'python_twitter'
  'repo': 'vmi-ros-pkg'
- 'brief': 'hydra'
  'description': "\n     hydra\n  "
  'name': 'hydra'
  'repo': 'stanford-ros-pkg'
- 'brief': 'rosjava_actionlib'
  'description': "\n    An implementation of actionlib in pure-Java.\n  "
  'name': 'rosjava_actionlib'
  'repo': 'rosjava_core'
- 'brief': 'pr2_approach_table'
  'description': "\n\n     Provides a behavior which commands the base to move forward\
    \ slowly\n     while monitoring for collisions, stopping when very close to the\
    \ first\n     obstacle.  Designed specifically to approach a table within grasping\n\
    \     distance.\n\n  "
  'name': 'pr2_approach_table'
  'repo': 'gt-ros-pkg'
- 'brief': 'process_info'
  'description': "\n\n     process_info\n\n  "
  'name': 'process_info'
  'repo': 'ros_experimental'
- 'brief': ''
  'description': 'A demo of  2-D navigation for Erratic robots'
  'name': 'erratic_nav'
  'repo': 'wg-ros-pkg'
- 'brief': 'strike_pose'
  'description': "\n\n     strike_pose\n\n  "
  'name': 'strike_pose'
  'repo': 'usc-ros-pkg'
- 'brief': 'genpy'
  'description': "\n\n     Python ROS message and service generators.\n\n  "
  'name': 'genpy'
  'repo': 'genpy'
- 'brief': 'scene_renderer'
  'description': "\n\n     scene_renderer\n\n  "
  'name': 'scene_renderer'
  'repo': 'brown-experimental'
- 'brief': 'rubiks_graph'
  'description': "\n\n     rubiks_graph\n\n  "
  'name': 'rubiks_graph'
  'repo': 'pr2_rubiks_solver'
- 'brief': 'Videre Erratic mobile base ROS driver.'
  'description': "\n        A ROS node that wraps up the Player erratic driver, which\
    \ provides access to the Erratic mobile robot.\n    "
  'name': 'erratic_player'
  'repo': 'erratic_robot'
- 'brief': 'logitech_libwebcam'
  'description': "\n\n     This package makes the Logitech libwebcam available for\
    \ ROS.\n\n  "
  'name': 'logitech_libwebcam'
  'repo': 'roblab-whge-ros-pkg'
- 'brief': 'hrl_clickable_world'
  'description': "\n\n    Contains a visual &quot;clickable-world&quot; interface\
    \ for semi-autonomous control. \n\n  "
  'name': 'hrl_clickable_world'
  'repo': 'gt-ros-pkg'
- 'brief': 'A set of routines to help with creating a settler'
  'description': "\n    Defines helper functions and routines that greatly help when\
    \ trying to create a settler\n    for a specific sensor channel. This package\
    \ is experimental and unstable.\n    Expect its APIs to change.\n  "
  'name': 'settlerlib'
  'repo': 'calibration'
- 'brief': 'Navigation stack tests'
  'description': "\n  Tests for the navigation stack\n  "
  'name': 'move_base_stage'
  'repo': 'wg-ros-pkg'
- 'brief': 'rfid_servoing'
  'description': "\n\n     rfid_servoing\n\n  "
  'name': 'rfid_servoing'
  'repo': 'gt-ros-pkg'
- 'brief': 'armadillo'
  'description': "\n\n     armadillo\n\n  "
  'name': 'armadillo'
  'repo': 'swri-ros-pkg'
- 'brief': 'longhorn'
  'description': "\n\n     longhorn\n\n  "
  'name': 'longhorn'
  'repo': 'swri-ros-pkg'
- 'brief': 'mini_max_apps'
  'description': ''
  'name': 'mini_max_apps'
  'repo': 'vanadium-ros-pkg'
- 'brief': 'xsens_mti_orocos'
  'description': "\n\n     Example Orocos component which uses the <a href=\"http://www.ros.org/wiki/xsens_mti\"\
    >xsens_mti</a> library to interface the MTI sensor.\n\n  "
  'name': 'xsens_component'
  'repo': 'xsens_hardware'
- 'brief': 'torque_check'
  'description': "\n\n     torque_check\n\n  "
  'name': 'torque_check'
  'repo': 'sbpl_door_planning'
- 'brief': 'kinematics_tutorials'
  'description': "\n\n     kinematics_tutorials\n\n  "
  'name': 'kinematics_tutorials'
  'repo': 'brown-experimental'
- 'brief': 'rubiks_solver'
  'description': "\n\n     rubiks_solver\n\n  "
  'name': 'rubiks_solver'
  'repo': 'pr2_rubiks_solver'
- 'brief': 'neo_platformctrl_diff'
  'description': "\n\n     neo_platformctrl_diff\n\n  "
  'name': 'neo_platformctrl_diff'
  'repo': 'neo_driver'
- 'brief': 'pr2_se_calibration_launch'
  'description': "\n\n     pr2_se_calibration_launch \n\n  "
  'name': 'pr2_se_calibration_launch'
  'repo': 'pr2_calibration'
- 'brief': 'kurt_bringup'
  'description': "\n\n     kurt_bringup\n\n  "
  'name': 'kurt_bringup'
  'repo': 'uos-ros-pkg'
- 'brief': 'semantic_map_costmap'
  'description': "\n\n     semantic_map_costmap\n\n  "
  'name': 'semantic_map_costmap'
  'repo': 'cram_highlevel'
- 'brief': 'rfid_datacapture'
  'description': "\n\n     rfid_datacapture\n\n  "
  'name': 'rfid_datacapture'
  'repo': 'gt-ros-pkg'
- 'brief': 'localization_defs'
  'description': "\n\n     localization_defs\n\n  "
  'name': 'localization_defs'
  'repo': 'seabee3-ros-pkg'
- 'brief': 'robotino_grappler_bringup'
  'description': "\n\n     robotino_grappler_bringup\n\n  "
  'name': 'robotino_grappler_bringup'
  'repo': 'robotino-ros-pkg'
- 'brief': 'executor'
  'description': "\n\n    executor takes the actions planned by the arbitrator and\
    \ executes them.\n\n  "
  'name': 'executor'
  'repo': 'roboframenet'
- 'brief': 'landmark_projector'
  'description': "\n\n     landmark_projector\n\n  "
  'name': 'landmark_projector'
  'repo': 'seabee3-ros-pkg'
- 'brief': 'pcl_filter'
  'description': "\n\n     pcl_filter\n\n  "
  'name': 'pcl_filter'
  'repo': 'brown-experimental'
- 'brief': 'pr2_bringup'
  'description': "\n\n  Launch files and scripts needed to bring a PR2 up into a running\
    \ state.\n\n  "
  'name': 'pr2_bringup'
  'repo': 'pr2_robot'
- 'brief': 'pr2_mechanism_msgs'
  'description': "\n     This package defines services that are used to communicate\
    \ with\n     the realtime control loop. It also defines messages\n     that represent\
    \ the state of the realtime controllers, the joints\n     and the actuators.\n\
    \  "
  'name': 'pr2_mechanism_msgs'
  'repo': 'pr2_mechanism'
- 'brief': 'rubiks_inspect'
  'description': "\n\n     rubiks_inspect\n\n\t Inspects a rubiks cube using Prosilica\
    \ Camera, finding the colour of\n\t each cubie.\n\n  "
  'name': 'rubiks_inspect'
  'repo': 'pr2_rubiks_solver'
- 'brief': 'ds_pr2_drop_drink'
  'description': "\n\n     ds_drop_drink\n\n  "
  'name': 'ds_pr2_drop_drink'
  'repo': 'bosch-ros-pkg'
- 'brief': 'wiimote'
  'description': "\nThe wiimote package allows ROS nodes to communicate with a Nintendo\n\
    Wiimote and its related peripherals, including the Nunchuk, Motion\nPlus, and\
    \ (experimentally) the Classic. The package implements a ROS\nnode that uses Bluetooth\
    \ to communicate with the Wiimote device,\nobtaining accelerometer and gyro data,\
    \ the state of LEDs, the IR\ncamera, rumble (vibrator), buttons, joystick, and\
    \ battery state. The\nnode additionally enables ROS nodes to control the Wiimote's\
    \ LEDs and\nvibration for feedback to the human Wiimote operator. LEDs and\nvibration\
    \ may be switched on and off, or made to operate according to\na timed pattern.\n\
    \n  "
  'name': 'wiimote'
  'repo': 'ros-pkg'
- 'brief': 'smach_viewer'
  'description': "\n    The smach viewer is a GUI that shows the state of hierarchical\n\
    \    SMACH state machines. It can visualize the possible transitions\n    between\
    \ states, as well as the currently active state and the\n    values of user data\
    \ that is passed around between states. The\n    smach viewer uses the SMACH debugging\
    \ interface based on\n    the <a href=\"http://www.ros.org/wiki/smach_msgs\">smach\n\
    \    messages</a> to gather information from running state machines.\n  "
  'name': 'smach_viewer'
  'repo': 'executive_smach_visualization'
- 'brief': 'chr_6dm_imu'
  'description': "\n        chr_6dm_imu\n    "
  'name': 'chr_6dm_imu'
  'repo': 'ua-ros-pkg'
- 'brief': 'multi_table_msgs'
  'description': "\n\n     multi_table_msgs\n\n  "
  'name': 'multi_table_msgs'
  'repo': 'wg-ros-pkg'
- 'brief': 'pr2_arm_ik_tests'
  'description': "\n\n     pr2_arm_ik_tests\n\n  "
  'name': 'pr2_arm_ik_tests'
  'repo': 'wg-ros-pkg'
- 'brief': 'pi_arbotix'
  'description': "\n\n     pi_arbotix\n\n  "
  'name': 'pi_arbotix'
  'repo': 'pi-robot-ros-pkg'
- 'brief': 'Using PCL, interfacing it with python etc.'
  'description': "\n  "
  'name': 'point_cloud_ros'
  'repo': 'gt-ros-pkg'
- 'brief': 'guardian_odometry'
  'description': "\n  Computes the odometry of the robot using the wheel movements\
    \ and a IMU. \n  Publish these odometry to /odom, which is feedbacked with a kalman\
    \ filter \n  to obtain a better trasformation through /map and /odom frame.\n\
    \  "
  'name': 'guardian_odometry'
  'repo': 'guardian-ros-pkg'
- 'brief': 'REEM arm navigation configuration files.'
  'description': "\n  "
  'name': 'reem_arm_navigation_config'
  'repo': 'reem_arm_navigation'
- 'brief': 'cl_glx'
  'description': "\n\n     cl_glx\n\n  "
  'name': 'cl_glx'
  'repo': 'cram_physics'
- 'brief': 'kinect_color_segmentation'
  'description': "\n\n    Segments the output of the kinect based on a color.\n\n\
    \  "
  'name': 'kinect_color_segmentation'
  'repo': 'shadow_robot'
- 'brief': 'articulate_cart'
  'description': "\n     articulate_cart\n  "
  'name': 'articulate_cart'
  'repo': 'wg-ros-pkg'
- 'brief': 'polar_scene'
  'description': "\n\n     polar_scene\n\n  "
  'name': 'polar_scene'
  'repo': 'scene_labelling_rgbd'
- 'brief': 'parsec_arduino'
  'description': "\n\n     parsec_arduino\n\n  "
  'name': 'parsec_arduino'
  'repo': 'parsec'
- 'brief': 'gcm'
  'description': "\n     Common CMU-IPC library used at Colby College\n  "
  'name': 'gcm'
  'repo': 'wu-ros-pkg'
- 'brief': 'pr2_playpen'
  'description': "\n\n     pr2_playpen\n\n  "
  'name': 'pr2_playpen'
  'repo': 'gt-ros-pkg'
- 'brief': 'proxemic_controllers'
  'description': "\n\n     proxemic_controller\n\n  "
  'name': 'proxemic_controllers'
  'repo': 'usc-ros-pkg'
- 'brief': 'Axis Camera Driver'
  'description': '

    A simple driver for the Axis security cameras

    '
  'name': 'axis_camera'
  'repo': 'wg-ros-pkg'
- 'brief': 'kinect_pose_est'
  'description': "\n\n     kinect_pose_est\n\n  "
  'name': 'kinect_pose_est'
  'repo': 'ccny_experimental'
- 'brief': 'Collision Map'
  'description': "\n    A node providing a map of the occupied space around the robot\
    \ as discretized boxes (center, dimension), useful for collision detection. \n\
    \  "
  'name': 'collision_map'
  'repo': 'arm_navigation'
- 'brief': 'busbot_navigation'
  'description': "\n\n     busbot_navigation\n\n  "
  'name': 'busbot_navigation'
  'repo': 'bosch-ros-pkg'
- 'brief': 'openrtm_ros_bridge'
  'description': "\n\n     openrtm_ros_bridge\n\n  "
  'name': 'openrtm_ros_bridge'
  'repo': 'rtm-ros-robotics/rtmros_common'
- 'brief': 'maxwell_teleop'
  'description': ''
  'name': 'maxwell_teleop'
  'repo': 'vanadium-ros-pkg'
- 'brief': 'colladadom'
  'description': "\n\n    This package contains the COLLADA Document Object Model\
    \ (DOM) which is an API that provides a C++ object representation of a COLLADA\
    \ XML instance document.\n    Currently, this package pulls collada-dom-2.2 tar\
    \ ball, and applies a local patch\n    containing\n    some custom changes,\n\
    \    various bug fixes as well as\n    forcing configure to use rosboost-cfg for\
    \ boost compile/link flags.\n\n    See http://sourceforge.net/projects/collada-dom.\n\
    \n  "
  'name': 'colladadom'
  'repo': 'robot_model'
- 'brief': 'datamatrix'
  'description': "\n\n     datamatrix\n\n  "
  'name': 'datamatrix'
  'repo': 'wg-ros-pkg'
- 'brief': 'nodebox_qt'
  'description': "\n\n     nodebox_qt\n\n  "
  'name': 'nodebox_qt'
  'repo': 'rcommander'
- 'brief': 'particle_plume'
  'description': "\n\n     Particle plume is a odor mapping algorithm based on the\
    \ PCL allowing for a 3D representation of a chemical plume by means of a 3D point\
    \ cloud.\n\n  "
  'name': 'particle_plume'
  'repo': 'odor_search'
- 'brief': 'ROS ified SBPL planning'
  'description': "\n\n  "
  'name': 'sbpl_planner_node'
  'repo': 'wg-ros-pkg'
- 'brief': 'roboframenet_msgs'
  'description': "\n\n     roboframenet_msgs contains common messages used within\
    \ roboframenet.\n\n  "
  'name': 'roboframenet_msgs'
  'repo': 'roboframenet'
- 'brief': 'guardian_tf'
  'description': "\n  Publishes the static transforms (relating to chassis) of the\
    \ robot.\n  "
  'name': 'guardian_tf'
  'repo': 'guardian-ros-pkg'
- 'brief': 'comp_missingobj'
  'description': "\n\n     comp_missingobj\n\n     files for a demo on 'objects missing\
    \ on the table'\n\n  "
  'name': 'comp_missingobj'
  'repo': 'tum-ros-pkg'
- 'brief': 'Configurations for PR-MINI''s arms'
  'description': "\n    Definitions for the PR-MINI platform.\n  "
  'name': 'prmini_arm_nav'
  'repo': 'vanadium-ros-pkg'
- 'brief': 'oro_joint_state_publisher'
  'description': "\n\n     This package contain orocos component, which will publish\
    \ JoinState for you from within orocos controller.\n\n  "
  'name': 'oro_joint_state_publisher'
  'repo': 'orocos_controllers'
- 'brief': 'Pointcloud segmentation'
  'description': "\n\n     Segmentation of 3d pointclouds in clutter vs. table\n\n\
    \  "
  'name': 'laser_camera_segmentation'
  'repo': 'gt-ros-pkg'
- 'brief': 'oit_launch'
  'description': "\n\n     oit_launch\n\n  "
  'name': 'oit_launch'
  'repo': 'usc-ros-pkg'
- 'brief': 'ROS wrappers for using the SICK Toolbox'
  'description': "\n    <tt>sicktoolbox_wrapper</tt> is a ROS wrapper for the outstanding\
    \ <a href=\"http://www.ros.org/wiki/sicktoolbox\">sicktoolbox</a>\n    library\
    \ for interfacing with the SICK LMS2xx lasers.\n  "
  'name': 'sicktoolbox_wrapper'
  'repo': 'ros-pkg'
- 'brief': 'nodemon_msgs'
  'description': "\n   Messages for node monitoring features.\n  "
  'name': 'nodemon_msgs'
  'repo': 'node_monitoring'
- 'brief': 'A C++ Wrapper for the Phidgets C API'
  'description': '


    This is an object oriented C++ wrapper for the Phidgets C API


    '
  'name': 'phidgetspp'
  'repo': 'foote-phidget'
- 'brief': 'Kernel Density Estimation Toolbox for C++ and MATLAB/Octave'
  'description': "\n    The KDE class is a general matlab class for k-dimensional\
    \ kernel density estimation.\n  "
  'name': 'kdetoolbox'
  'repo': 'cmu-ros-pkg'
- 'brief': 'CRAM reasoning package.'
  'description': "\n    This package implements a simple interpreter for a Prolog-like\n\
    \    language and an implementation of the RETE algorithm.\n  "
  'name': 'cram_reasoning'
  'repo': 'cram_pl'
- 'brief': 'static_tf_kinect_to_base_calibration'
  'description': "\n\n     This package calibrates the transform between base_link\
    \ and the camera_link for the kinect. It uses the ar_kinect to recognize markers\
    \ placed at a known position.\n\n  "
  'name': 'static_tf_kinect_to_base_calibration'
  'repo': 'shadow_robot'
- 'brief': 'pr2_interactive_object_detection'
  'description': "\n\n     A package that allows a remote user to request and assist\n\
    \     the detection, recognition and pose estimation of tabletop objects,\n  \
    \   primarily using an rviz display.\n\n  "
  'name': 'pr2_interactive_object_detection'
  'repo': 'wg-ros-pkg'
- 'brief': 'pancakebot makes pancakes for you'
  'description': "\n    An application of the openarms hardware/software stack which\
    \ hopes to\n    someday make delicious pancakes.\n  "
  'name': 'pancakebot'
  'repo': 'stanford-ros-pkg'
- 'brief': 'rcf_authentication'
  'description': "\n\n     rcf_authentication\n     \n     This node is used to authenticate\
    \ remote controllers in the rcf stack.\n     All rcp commands received via p2p\
    \ interface will be ignored until the\n     remote controller has proven he is\
    \ authenticated.\n     \n     Further authentication calls and rcp datagrams sent\
    \ to the robot will\n     be ignored, until the call has been ended, and the remote\
    \ controller has signed\n     off.\n     \n     The parameter server is used to\
    \ store user login data.\n\n  "
  'name': 'rcf_authentication'
  'repo': 'roblab-whge-ros-pkg'
- 'brief': 'neo_2dnav_slam_mp_500'
  'description': "\n\n     neo_2dnav_slam_mp_500\n\n  "
  'name': 'neo_2dnav_slam_mp_500'
  'repo': 'neo_navigation'
- 'brief': '3d_nav_executive - Launch files and configuration for 3d_navigation'
  'description': "\n\n     3d_nav_executive - Launch files and configuration for 3d_navigation\n\
    \n  "
  'name': '3d_nav_executive'
  'repo': 'wg-ros-pkg'
- 'brief': 'theora_image_transport'
  'description': "\n\n     theora_image_transport provides a plugin to image_transport\
    \ for\n     transparently sending an image stream encoded with the Theora codec.\n\
    \n  "
  'name': 'theora_image_transport'
  'repo': 'ros-pkg'
- 'brief': 'libphidgets21 - libphidgets wrapper, patched with output possiblities'
  'description': "\n\n     Dependencies Tree for libphidgets. Integrates the patched\
    \ library directly.\n\n     See ce_phidgets for examples.\n\n  "
  'name': 'libphidgets21'
  'repo': 'vmi-ros-pkg'
- 'brief': 'aviz'
  'description': "\n\n     aviz\n\n  "
  'name': 'rve_gui'
  'repo': 'wg-ros-pkg'
- 'brief': 'as11'
  'description': "\n\n     as11\n\n  "
  'name': 'as11'
  'repo': 'mapping'
- 'brief': 'PyCV: A Computer Vision Package for Python Incorporating Fast Training
    of Face Detection'
  'description': "\n    PyCV is a Python package of modules useful for computer vision\
    \ tasks. Its current focus is on boosting techniques, Haar-like features, and\
    \ face detection. PyCV provides the world's fastest method for training a face\
    \ detector, in a few hours.\n  "
  'name': 'pycv'
  'repo': 'cmu-ros-pkg'
- 'brief': 'Interfaces with WG inventory system'
  'description': "\nProvides an interface for the Willow Garage Inventory system,\
    \ used by the life_test and qualification systems to automatically log assembly\
    \ data into invent.\n  "
  'name': 'wg_invent_client'
  'repo': 'wg-ros-pkg'
- 'brief': 'PR2 Mechanism model'
  'description': "\n<p>\n  This package contains the robot model that is used by the\
    \ realtime\n  controllers\n  inside <a href=\"http://www.ros.org/wiki/pr2_controller_manager\"\
    >controller\n  manager</a>. This robot model focuses on controlling the robot\n\
    \  mechanism in a realtime control loop, and therefore it only contains\n  the\
    \ components of a robot that are relevant in realtime: the robot\n  joints (with\
    \ encoders, transmisisons and actuators) and the\n  kinematic/dynamic model of\
    \ the robot. \n</p>\n<p>\n  The pr2_mechanism_model package is well tested and\
    \ is released with a stable API.\n</p>\n"
  'name': 'pr2_mechanism_model'
  'repo': 'pr2_mechanism'
- 'brief': 'PR2 Robot Definitions'
  'description': "\n    \n    This package contains XML (and xacro macros) descriptions\
    \ of robot kinematics in the format\n    defined at Willow Garage.\n    \n  "
  'name': 'pr2_defs'
  'repo': 'wg-ros-pkg'
- 'brief': 'Generate headers and sources for msg/srv files'
  'description': "\n\n     This avoids doing complete package compilation and just\
    \ generates sources for\n     msg and srv files of a package and all its dependencies.\n\
    \n  "
  'name': 'gen_comms'
  'repo': 'win_ros'
- 'brief': 'Shadow Robot Hand ROS interface '
  'description': "\n\n     This is a ROS interface to the Shadow Robot's robotic hand.\
    \ It\n     contains both an interface to the real hand (communicating via\n  \
    \   a CAN interface) and a simulated version of the hand. It also\n     contains\
    \ an interface to Shadow Robot's muscle arm.\n\n  "
  'name': 'sr_hand'
  'repo': 'shadow_robot'
- 'brief': 'URDF for Erratic mobile base'
  'description': "\n        URDF description files for the ERA-MOBI (Erratic) mobile\
    \ robot base from Videre.\n    "
  'name': 'erratic_description'
  'repo': 'erratic_robot'
- 'brief': 'robotino_description'
  'description': "\nThis package includes the xacro files and meshes for Robotino.\n\
    \  "
  'name': 'robotino_description'
  'repo': 'robotino-ros-pkg'
- 'brief': 'sr_edc_ethercat_drivers'
  'description': "\n\n     A package implementing an interface for the Shadow Robot\
    \ Dextrous, etherCAT palm version, ROS interface.\n\n  "
  'name': 'sr_edc_ethercat_drivers'
  'repo': 'shadow_robot_etherCAT'
- 'brief': 'move'
  'description': "\n\n     move\n\n  "
  'name': 'move'
  'repo': 'brown-experimental'
- 'brief': 'kuka_arm_hand_process_module'
  'description': "\n\n     kuka_arm_hand_process_module\n\n  "
  'name': 'kuka_arm_hand_process_module'
  'repo': 'cram_rosie'
- 'brief': 'kidnapped_robot'
  'description': "\n\n     kidnapped_robot\n\n  "
  'name': 'kidnapped_robot'
  'repo': 'wg-ros-pkg'
- 'brief': 'fake_process_modules'
  'description': "\n\n     fake_process_modules\n\n  "
  'name': 'fake_process_modules'
  'repo': 'cram_highlevel'
- 'brief': 'Orocos RTT-ROS integration tools'
  'description': "\n        This package contains a service you can use to quickly\
    \ connect\n\t\t\t\tto ROS topics and other utility functions for in an RTT-ROS\
    \ environment.\n    "
  'name': 'rtt_ros_service'
  'repo': 'orocos_toolchain_ros'
- 'brief': 'Ocean Server Battery Drivers'
  'description': 'This is an interface to the Ocean Server Technology Intelligent
    Battery and Power System.'
  'name': 'ocean_battery_driver'
  'repo': 'wg-ros-pkg'
- 'brief': 'teleop_haptic_fb'
  'description': "\n\n     teleop_haptic_fb\n\n  "
  'name': 'teleop_haptic_fb'
  'repo': 'wg-ros-pkg'
- 'brief': 'fake localization'
  'description': 'A ROS node that simply forwards odometry information.'
  'name': 'fake_localization'
  'repo': 'navigation'
- 'brief': 'pi_video_tracker_test'
  'description': "\n\n     A ROS vision pipeline for detecting, tracking and recognizing\
    \ visual objects.\n\n  "
  'name': 'pi_video_tracker_test'
  'repo': 'pi-robot-ros-pkg'
- 'brief': 'hostapd_access_point'
  'description': "\n    A ROS node that controls a hostapd-based access\n    point.\
    \ It is mainly intended for use with a wireless \n    network adapter running\
    \ in master mode. It implements \n    the dynamic_reconfigure interface defined\n\
    \    in the [[access_point_control]] package.\n  "
  'name': 'hostapd_access_point'
  'repo': 'ros-pkg'
- 'brief': 'master'
  'description': "\n\n     master\n\n  "
  'name': 'multimaster'
  'repo': 'multimaster'
- 'brief': 'gumstix_memread_bma180'
  'description': "\n\n     gumstix_memread_bma180\n\n  "
  'name': 'gumstix_memread_bma180'
  'repo': 'bosch-ros-pkg'
- 'brief': 'test_rosbag'
  'description': "\n\n    A package for testing rosbag functionality.\n\n  "
  'name': 'test_rosbag'
  'repo': 'ros_comm'
- 'brief': 'dynamic graph GUI'
  'description': "\n\n    FIXME\n\n  "
  'name': 'sot-gui'
  'repo': 'jrl-ros-pkg'
- 'brief': 'lv1_main'
  'description': "\n\n     lv1_main\n\n  "
  'name': 'lv1_main'
  'repo': 'otl-ros-pkg'
- 'brief': 'gripper_pose_solver'
  'description': "\n\n     gripper_pose_solver\n\n  "
  'name': 'gripper_pose_solver'
  'repo': 'wg-ros-pkg'
- 'brief': ''
  'description': 'Located Object Library'
  'name': 'lo'
  'repo': 'ias_perception'
- 'brief': 'ft_sensor_controller'
  'description': "\n\n     based on 'netft_example_controllers'\n\n     Provides simple\
    \ access to force-torque data provided by netft_ethercat_hardware plugin.\n  \
    \   Inludes compensation for gripper mass\n\n  "
  'name': 'ft_sensor_controller'
  'repo': 'wg-ros-pkg'
- 'brief': 'osl_core'
  'description': "\n\n     osl_core\n\n  "
  'name': 'osl_core'
  'repo': 'hwu-osl-ros-pkg'
- 'brief': 'Finds checkerboards and returns their 6D poses'
  'description': "\n    Uses opencv to find checkboards and compute their 6D poses\
    \ with respect to the image. Requires the image to be calibrated.\n    Parameters:\n\
    \    display - show the checkerboard detection\n    rect%d_size_x - size of checker\
    \ in x direction\n    rect%d_size_y - size of checker in y direction\n    grid%d_size_x\
    \ - number of checkers in x direction\n    grid%d_size_y - number of checkers\
    \ in y direction\n    \n    There can be more than one grid%d declared, the numbers\
    \ should grow consecutively starting at 0.\n  "
  'name': 'checkerboard_detector'
  'repo': 'jsk-ros-pkg'
- 'brief': 'teaching_interface'
  'description': "\n\n     teaching_interface\n\n  "
  'name': 'wubble_teach'
  'repo': 'ua-ros-pkg'
- 'brief': 'pi_arm_navigation'
  'description': "\n\n     pi_arm_navigation\n\n  "
  'name': 'pi_arm_navigation_old'
  'repo': 'pi-robot-ros-pkg'
- 'brief': 'ROS wrapper for MobileRobots'' ARIA C++ library'
  'description': "\n\n    <tt>ROSARIA</tt> is a ROS wrapper for MobileRobots' ARIA\
    \ C++ library.\n    This is a simple proof of concept package that lets you set\
    \ velocity and\n    read odometry data form MobileRobots (ActivMedia) platforms\
    \ (e.g. Pioneer)\n    using their official library.\n\n  "
  'name': 'ROSARIA'
  'repo': 'amor-ros-pkg'
- 'brief': 'interface_testing'
  'description': "\n\n    Utility Classes for testing ROS Node Interfaces\n\n  "
  'name': 'interface_testing'
  'repo': 'pandora-auth-ros-pkg'
- 'brief': 'cob_tactiletools'
  'description': "\n\n     cob_tactiletools\n\n  "
  'name': 'cob_tactiletools'
  'repo': 'cob_manipulation'
- 'brief': 'rtt_gems'
  'description': "\n\n\t\trtt_gems contains the ruby gems which are required to build\
    \ the utilrb library\n    and other ruby based tools. This package guarantees\
    \ that a build can be done,\n\t\teven if rubygems.org is down or unreachable.\n\
    \n  "
  'name': 'rtt_gems'
  'repo': 'orocos_toolchain_ros'
- 'brief': 'world_db_detector_lib'
  'description': "\n\n     world_db_detector_lib\n\n  "
  'name': 'world_db_detector_lib'
  'repo': 'wg-ros-pkg'
- 'brief': 'david_laserscanner'
  'description': "\n    A Client to connect to a David server which controls the \n\
    \    David laser light triangulation software (www.david-laserscanner.com) \n\
    \    running on a windows machine.\n  "
  'name': 'david_laserscanner'
  'repo': 'tum-ros-pkg'
- 'brief': 'Efficient computation and updating of Euclidean distance maps and Euclidean
    Voronoi diagrams on 2D grid maps.'
  'description': "\n\n<p>\nThis package provides software to compute and update Euclidean\
    \ distance maps (DM) and Euclidean Voronoi diagrams (GVD) on 2D grid maps.\n</p>\n\
    \n<p>\nThe program is initialized with a binary occupancy grid map and computes\
    \ the corresponding DM and GVD. When provided with points that mark newly occupied\
    \ or freed cells, the DM and GVD can be updated efficiently to reflect the changes\
    \ in the environment.\n</p>\n\n<p>\nDetails on the algorithms can be found in\
    \ the corresponding paper. Please cite the paper if you use it for scientific\
    \ work:<br/>\nB. Lau, C. Sprunk and W. Burgard, Improved Updating of Euclidean\
    \ Distance Maps and Voronoi Diagrams, IEEE Intl. Conf. on Intelligent Robots and\
    \ Systems (IROS), Taipei, Taiwan, 2010.<br/>\nSee also <a href=\"http://www.informatik.uni-freiburg.de/~lau/dynamicvoronoi\"\
    >http://www.informatik.uni-freiburg.de/~lau/dynamicvoronoi</a>\n</p>\n\n  "
  'name': 'dynamicvoronoi'
  'repo': 'alufr-ros-pkg'
- 'brief': 'hector_quadrotor_teleop'
  'description': "\n\n     hector_quadrotor_teleop enables quadrotor flying with a\
    \ joystick by\n     processing joy/Joy messages and translating them to geometry_msgs/Twist.\n\
    \n  "
  'name': 'hector_quadrotor_teleop'
  'repo': 'tu-darmstadt-ros-pkg'
- 'brief': 'state_machine_core'
  'description': "\n    Abstract state machine implementation. This package provides\
    \ base classes for specialized states. Those in turn can perform different actions.\n\
    \  "
  'name': 'state_machine_core'
  'repo': 'wg-ros-pkg'
- 'brief': 'wait_for_response_action'
  'description': "\n\n     wait_for_response_action\n\n  "
  'name': 'wait_for_response_action'
  'repo': 'usc-ros-pkg'
- 'brief': 'Xacro (XML Macros)'
  'description': "\n    Xacro is an XML macro language. With xacro, you can construct\
    \ shorter and more readable XML files by using macros that expand to larger XML\
    \ expressions. \n  "
  'name': 'xacro'
  'repo': 'xacro'
- 'brief': 'Ogre Tools'
  'description': "\n    \n    Provides the stl_to_mesh tool for converting .stl files\
    \ into\n    Ogre's .mesh format, and the ogre_tools library, which contains\n\
    \    the STLLoader class for loading .stl files into an Ogre program.\n    \n\
    \    "
  'name': 'ogre_tools'
  'repo': 'ros-pkg'
- 'brief': 'A package for diagnostic_msgs'
  'description': "\n     <p>\n     This package holds the diagnostic messages which\
    \ provide the\n     standardized interface for the diagnostic and runtime monitoring\n\
    \     systems in ROS. These messages are currently used by\n     the <a href=\"\
    http://ros.org/wiki/diagnostics\">diagnostics</a>\n     Stack, which provides\
    \ libraries for simple ways to set and access\n     the messages, as well as automated\
    \ ways to process the diagnostic\n     data.\n     </p>\n     <p>\n     These\
    \ messages are used for long term logging and will not be\n     changed unless\
    \ there is a very important reason.\n     </p>\n  "
  'name': 'diagnostic_msgs'
  'repo': 'ros-pkg'
- 'brief': 'rosjs_tutorials'
  'description': "\n    rosjs tutorials.\n  "
  'name': 'rosjs_tutorials'
  'repo': 'bosch-ros-pkg'
- 'brief': 'pose_action'
  'description': "\n\n     pose_action\n\n  "
  'name': 'pose_action'
  'repo': 'usc-ros-pkg'
- 'brief': 'iis_idl'
  'description': "\n\n     iis_idl\n\n     based on following paper\n\nThe Joint Interface\
    \ of RT Component for Mobile Robots\n- The Second Activity Report of Mobile Robot\
    \ One Sub WG in NEDO Intelligent RT Software Project -\n\nMasaharu SHIMIZU (CIT,\
    \ fuRo), Nobuyuki KITA (AIST), Toshihisa SAITO (Segway Japan),\nEijiro TAKEUCHI\
    \ (Touhoku Univ.), Yusuke NAKAJIMA (AIST), Naohito TAKEGAWA (AIST),\nHiroki IGARASHI\
    \ (Kyoto Univ.) Yasuo HAYASHIBARA (CIT), Hideaki YAMATO (CIT, fuRo),\nKengo TODA\
    \ (CIT, fuRo), Takayuki FURUTA (CIT, fuRo), Makoto MIZUKAWA (SIT)\n\nAbstract:\
    \ This paper describes the second activity report of sub working group for the\
    \ mobile robot in NEDO Intelligent\nRT Software Project. The sub working group\
    \ is organized by three research consortia who consist of National Institute of\n\
    Advanced Industrial Science and Technology, the Shibaura Institute of Technology\
    \ consortium (Chiba Institute of\nTechnology, NEC Soft, PUES), and the Segway\
    \ Japan consortium (Tohoku University, International Rescue System Institute,\n\
    Kyoto University). The joint interface of RT component for mobile robots is proposed\
    \ by the three research consortia as\nactivity efforts\n\n  "
  'name': 'iis_idl'
  'repo': 'rtm-ros-robotics/rtmros_common'
- 'brief': 'starmac_roslib'
  'description': "\n\n     starmac_roslib contains no nodes, only library code\n\n\
    \  "
  'name': 'starmac_roslib'
  'repo': 'starmac-ros-pkg'
- 'brief': 'pose_follower'
  'description': "\n\n     pose_follower\n\n  "
  'name': 'pose_follower'
  'repo': 'navigation_experimental'
- 'brief': 'pr2_otl_teleop_app'
  'description': "\n\n    pr2_otl_telop_app is unary stack for android app Sensor\
    \ Teleop.\n    Please use app_chooser to use this app.\n\n  "
  'name': 'pr2_otl_teleop_app'
  'repo': 'otl-ros-pkg'
- 'brief': 'learning_tf'
  'description': "\n\n     learning_tf\n\n  "
  'name': 'learning_tf'
  'repo': 'vmi-ros-pkg'
- 'brief': 'aaai_lfd_demo_executive'
  'description': "\n\n     Package that contains the high level plan for the Breakfast\
    \ Task\n\n  "
  'name': 'aaai_lfd_demo_executive'
  'repo': 'bosch-ros-pkg'
- 'brief': ''
  'description': 'Runs the navigation stack on the pr2'
  'name': '2dnav_pr2'
  'repo': 'wg-ros-pkg'
- 'brief': 'pr2_dremel_server'
  'description': "\n\n     pr2_dremel_server\n\n  "
  'name': 'pr2_dremel_server'
  'repo': 'bosch-ros-pkg'
- 'brief': 'lasertracker'
  'description': "\n\n     A tracker for laser pointer dot in images\n\n  "
  'name': 'lasertracker'
  'repo': 'colbot-ros-pkg'
- 'brief': ''
  'description': ''
  'name': 'grabcut_3d'
  'repo': 'bosch-ros-pkg'
- 'brief': 'point_map'
  'description': "\n\n     point_map\n\n  "
  'name': 'point_map'
  'repo': 'usc-ros-pkg'
- 'brief': 'pr2_navigation_self_filter'
  'description': "\n\n     Filters the robot's body out of point clouds.\n\n  "
  'name': 'pr2_navigation_self_filter'
  'repo': 'pr2_navigation'
- 'brief': 'pr2_create_object_model'
  'description': "\n\n     pr2_create_object_model\n\n  "
  'name': 'pr2_create_object_model'
  'repo': 'wg-ros-pkg'
- 'brief': 'hrl_netft'
  'description': "\n\n     hrl_netft\n\n  "
  'name': 'hrl_netft'
  'repo': 'gt-ros-pkg'
- 'brief': 'libvicon'
  'description': "\n\n     Classes for Stream and Request-Reply TCP communications\
    \ with \n     a Vicon Motion Tracking System.\n\n  "
  'name': 'libvicon'
  'repo': 'uuisrc-ros-pkg'
- 'brief': 's2250_capture'
  'description': "\n\n     Sensoray 2250/2251 usb video capture card driver\n\n  "
  'name': 's2250_capture'
  'repo': 'aptima-ros-pkg'
- 'brief': ''
  'description': ''
  'name': 'opennl'
  'repo': 'bosch-ros-pkg'
- 'brief': 'cyphy_mk_ui'
  'description': "\n\n     cyphy_mk_ui\n\n  "
  'name': 'cyphy_mk_ui'
  'repo': 'cyphy'
- 'brief': 'openni'
  'description': "\n\n     openni\n\n  "
  'name': 'openni'
  'repo': 'openni_kinect'
- 'brief': 'cob_ogre'
  'description': "\n\n    This package contains Care-O-bot Ogre mesh files used for\
    \ visualization and collision.\n\n  "
  'name': 'cob_ogre'
  'repo': 'cob_simulation'
- 'brief': 'miabot'
  'description': "\n\n     Merlin Systems Corp. Ltd - MiabotPro mobile robot platform\
    \ driver.\n\n  "
  'name': 'miabot'
  'repo': 'miabot'
- 'brief': 'point_cloud_publisher_tutorial'
  'description': "\n\n     point_cloud_publisher_tutorial\n\n  "
  'name': 'point_cloud_publisher_tutorial'
  'repo': 'navigation_tutorials'
- 'brief': 'explore_rfid'
  'description': "\n\n     explore_rfid\n\n  "
  'name': 'explore_rfid'
  'repo': 'gt-ros-pkg'
- 'brief': 'interface to PR2 controllers'
  'description': "\n\n     Simple C++ and python interface to move the arms, head,\
    \ base, torso and grippers of a PR2 robot.\n\n  "
  'name': 'simple_robot_control'
  'repo': 'bosch-ros-pkg'
- 'brief': ''
  'description': 'Gazebo world and model files for wg.'
  'name': 'gazebo_worlds'
  'repo': 'ros-pkg'
- 'brief': 'floor_align'
  'description': "\n\n     floor_align\n\n  "
  'name': 'floor_align'
  'repo': 'usc-ros-pkg'
- 'brief': 'bigg_detector'
  'description': "\n    Binarized Gradient Grid (BiGG) detector and ROS wrapper for\
    \ the rein.\n  "
  'name': 'bigg_detector'
  'repo': 'wg-ros-pkg'
- 'brief': 'DC1394 Calibrated Camera Driver'
  'description': "\n    Customizable camera streaming using dc1394 ROS driver. Parameters\
    \ it uses:\n\n    display - shows the image on the local computer\n    cameraguid\
    \ - hex string, if specified will only open a camera with this guid\n    cameraindex\
    \ - index of the camera to start if cameraguid is not present\n    mode - any\
    \ one of opencv modes to set, for example: &quot;MODE_640x480_YUV422&quot;\n \
    \   framerate - number of frames a second to publish\n    KK_fx,KK_fy,KK_cx,KK_cy\
    \ - intrinsic parameters such that KK = [fx 0 cx; 0 fy cy; 0 0 1]\n    kc_k1,kc_k2,kc_p1,kc_2\
    \ - radial distortion coefficients to undistort the image\n    colorfilter - color\
    \ conversion for debayering, can be\n               &quot;COLOR_FILTER_RGGB&quot;,\
    \ &quot;COLOR_FILTER_GBRG&quot;, &quot;COLOR_FILTER_GRBG&quot;, &quot;COLOR_FILTER_BGGR&quot;\n\
    \    brightness\n    contrast\n    whitebalance_blueu\n    whitebalance_redv\n\
    \    exposure\n    compression - how to compress the data before sending, can\
    \ be &quot;none&quot;, &quot;png&quot;, &quot;jpg&quot;, &quot;jpeg&quot;\n  \
    \  gain - the gain on the camera values\n  "
  'name': 'camera_firewire'
  'repo': 'flyatar'
- 'brief': 'maxwell_interactive_markers'
  'description': "\n    This is an adaptation of the turtlebot interactive marker\
    \ server to the Maxwell robot.\n  "
  'name': 'maxwell_interactive_markers'
  'repo': 'vanadium-ros-pkg'
- 'brief': 'PR2JointController'
  'description': "\n\n     PR2JoyControl\n\n  "
  'name': 'PR2JointController'
  'repo': 'brown-experimental'
- 'brief': 'image_pcl_provider'
  'description': "\n\n\t\timage_pcl_provider is a package of tools\n\t\tfor aligning\
    \ point clouds to images. For example, say one wants to get\n\t\tthe point cloud\
    \ from the narrow stereo camera in the frame of the\n\t\tprosilica camera.\n\n\
    \  "
  'name': 'image_pcl_provider'
  'repo': 'wg-ros-pkg'
- 'brief': 'playground'
  'description': "\n\n     playground\n\n  "
  'name': 'playground'
  'repo': 'drh-robotics-ros'
- 'brief': 'ds_pr2_fridge_drink_perception'
  'description': "\n\n     A node that locates cylindrical clusters inside the refigerator\
    \ and returns their centroids.\n\n  "
  'name': 'ds_pr2_fridge_drink_perception'
  'repo': 'bosch-ros-pkg'
- 'brief': 'Visualization plugins for rxbag'
  'description': "\n\n<p>rxbag_plugins contains plugins for the <a href=\"/wiki/rxbag\"\
    >rxbag</a> GUI tool.</p>\n<p><a href=\"/wiki/rxbag\">rxbag</a> is a graphical\
    \ framework for analyzing <a href=\"/wiki/Bags\">bag</a> (log) files. rxbag_plugins\
    \ provide visualizers for <a href=\"/wiki/Messages\">messages</a> of different\
    \ types.</p>\n<p>Some icons from the Silk icon pack are used, which is available\
    \ from <a href=\"http://www.famfamfam.com/lab/icons/silk/\">famfamfam.com</a>.</p>\n\
    \n  "
  'name': 'rxbag_plugins'
  'repo': 'ros-pkg'
- 'brief': 'sia10d_mesh_arm_navigation'
  'description': "\n\n     sia10d_mesh_arm_navigation\n\n  "
  'name': 'sia10d_mesh_arm_navigation'
  'repo': 'swri-ros-pkg'
- 'brief': 'cob_gazebo_objects'
  'description': "\n\n     This package provides some objects and furniture for gazebo\
    \ simulation.\n\n  "
  'name': 'cob_gazebo_objects'
  'repo': 'cob_environments'
- 'brief': 'data_stream_recorder'
  'description': "\n\n     data_stream_recorder\n\n  "
  'name': 'data_stream_recorder'
  'repo': 'wg-ros-pkg'
- 'brief': 'outlet_test'
  'description': "\n\n     outlet_test\n\n  "
  'name': 'outlet_test'
  'repo': 'wg-ros-pkg'
- 'brief': 'darrt_actions'
  'description': "\n\n     darrt_actions\n\n  "
  'name': 'darrt_actions'
  'repo': 'wg-ros-pkg'
- 'brief': 'Converts SimMechanics XML to URDF'
  'description': "\n\tConverts SimMechanics XML to URDF\n  "
  'name': 'simmechanics_to_urdf'
  'repo': 'robot_model'
- 'brief': 'hardcoded_facts'
  'description': "\n     A simple package to read hardcoded_facts as geometry poses\
    \ from a file.\n  "
  'name': 'hardcoded_facts'
  'repo': 'alufr-ros-pkg'
- 'brief': 'Foundation for C++-bindings'
  'description': "\n\n     rosgui_cpp provides the foundation for C++-bindings for\
    \ rosgui and creates bindings for every generator available.\n     At least one\
    \ specific binding must be available in order to use C++-plugins.\n\n  "
  'name': 'rosgui_cpp'
  'repo': 'ros_gui'
- 'brief': 'cob_object_detection_fake'
  'description': "\n\n     cob_object_detection_fake\n\n  "
  'name': 'cob_object_detection_fake'
  'repo': 'cob_object_perception'
- 'brief': 'wagon_handle_steering'
  'description': "\n\n\t\twagon_handle_steering\n\n\t"
  'name': 'wagon_handle_steering'
  'repo': 'cwru-ros-pkg'
- 'brief': 'cyphy_complementary filter implementation'
  'description': "\ncyphy complementary filter implementation for mikrokopter.\n  "
  'name': 'cyphy_CF'
  'repo': 'cyphy'
- 'brief': 'demo_sbpl_dynamic_env'
  'description': "\n\nA demo package which has launch files to test the stack and\
    \ demonstrate uses.\n\n  "
  'name': 'demo_sbpl_dynamic_env'
  'repo': 'sbpl_dynamic_env'
- 'brief': 'JRL matrix abstraction layer'
  'description': "\n\n    FIXME\n\n  "
  'name': 'jrl-mal'
  'repo': 'jrl-ros-pkg'
- 'brief': 'robot_in_middle_controller'
  'description': "\n\n     robot_in_middle_controller\n\n  "
  'name': 'robot_in_middle_controller'
  'repo': 'brown-experimental'
- 'brief': 'topic_logger'
  'description': "\n\n     topic_logger\n\n  "
  'name': 'topic_logger'
  'repo': 'bosch-ros-pkg'
- 'brief': 'coordination_server_info_fusion_foreign_relay'
  'description': "\n\n     coordination_server_info_fusion_foreign_relay\n\n  "
  'name': 'coordination_server_info_fusion_foreign_relay'
  'repo': 'brown-experimental'
- 'brief': 'GUI for publishing tf transforms'
  'description': "\n\n     This is a simple GUI for publishing a single TF transform.\n\
    \n  "
  'name': 'tf_publisher_gui'
  'repo': 'uos-ros-pkg'
- 'brief': 'turtle_tf'
  'description': "\n\n     turtle_tf demonstrates how to write a tf broadcaster and\
    \ listener with the turtlesim. The tutle_tf_listener commands turtle2 to follow\
    \ turtle1 around as you drive turtle1 using the keyboard.\n\n  "
  'name': 'turtle_tf'
  'repo': 'geometry_tutorials'
- 'brief': 'head'
  'description': "\n     Color_DDP is a simple ROS package for the PR2 that uses cmvision\
    \ to track a green and red colored ball. Color_DDP uses Differential Dynamic Programming\
    \ (DDP) to solve a locally-optimal trajectory from an initial position, around\
    \ an obstacle, to a goal. Here the initial position is the pixel given by cmvision\
    \ of the green ball in the Kinect camera/rgb/image_color topic. The obstacle is\
    \ the pixel of the red ball in the camera/rgb/image_color topic. The goal is the\
    \ center of the image. \n  "
  'name': 'color_DDP'
  'repo': 'wu-ros-pkg'
- 'brief': 'rosie_arm_navigation'
  'description': "\n\n     rosie_arm_navigation\n\n  "
  'name': 'rosie_arm_navigation_launch'
  'repo': 'tum-ros-pkg'
- 'brief': 'task_image_server'
  'description': "\n\n     task_image_server\n\n  "
  'name': 'task_image_server'
  'repo': 'continuous_ops'
- 'brief': 'rxlab'
  'description': "\n\nrxlab is a graphical scripting environment for ROS.\n\n  "
  'name': 'rxlab'
  'repo': 'ros_experimental'
- 'brief': 'auv_description'
  'description': "\n\n     auv_model\n\n  "
  'name': 'auv_description'
  'repo': 'hwu-osl-ros-pkg'
- 'brief': 'ardrone_cntrlr'
  'description': "\n\n     ardrone_cntrlr\n\n  "
  'name': 'ardrone_cntrlr'
  'repo': 'brown-experimental'
- 'brief': 'player_camera'
  'description': "\n\t\n  "
  'name': 'player_camera'
  'repo': 'uuisrc-ros-pkg'
- 'brief': 'Capabilities Management Server'
  'description': "\n    Capabilities Management Server\n  "
  'name': 'capabilities_server'
  'repo': 'vanadium-ros-pkg'
- 'brief': 'ROS documentation generator'
  'description': "\n\n      rosdoc wraps documentation tools like doxygen, sphinx,\
    \ and epydoc\n      with ROS package semantics to auto-generate\n      documentation\
    \ for ROS packages. rosdoc also supports online documentation,\n      like the\
    \ ROS wiki.\n\n  "
  'name': 'rosdoc'
  'repo': 'documentation'
- 'brief': 'audio_play'
  'description': "\n    Outputs audio to a speaker from a source node.\n  "
  'name': 'audio_play'
  'repo': 'audio_common'
- 'brief': 'ROS wrapper for the UT Austin operational space control library.'
  'description': "\n  "
  'name': 'wbc_uta_opspace'
  'repo': 'whole_body_control'
- 'brief': 'arm_track'
  'description': "\n\n     arm_track\n\n  "
  'name': 'arm_track'
  'repo': 'uuisrc-ros-pkg'
- 'brief': 'ground_station'
  'description': "\n\n     ground_station is a package for ROS that typicaly subscribe\
    \ to several topics and update an Gtk+ based GUI.\n     It is made for the CityFlyer\
    \ research project of the CCNY Robotics lab.\n\n  "
  'name': 'ground_station'
  'repo': 'ccny_ground_station'
- 'brief': 'PR2 Hardware Qualification and Testing'
  'description': "\n    Tests PR2 hardware as individual components and assembled\
    \ robots. Tests, analyzes and logs results of the qualification/self-tests.\n\
    \  "
  'name': 'qualification'
  'repo': 'wg-ros-pkg'
- 'brief': 'ltk'
  'description': "\n    LTK\n    http://www.peter-herth.de/ltk/\n  "
  'name': 'ltk'
  'repo': 'tum-ros-pkg'
- 'brief': 'trex_core contains the core of TREX prior to ROS integration'
  'description': "\n    This package contains TREX (initially developed at the Monterey\
    \ Bay Aquarium Research Institute), \n    and EUROPA from the NASA Ames Research\
    \ Center. This package does not modify these \n    3rd party libraries in any\
    \ way; it simply provides a convenient way to download and build the\n    headers\
    \ and libraries in a way that can be managed by the ROS dependency system.\n  "
  'name': 'PLASMA'
  'repo': 'wg-ros-pkg'
- 'brief': 'proprioception'
  'description': "\n\n     proprioception_demo_learner\n\n  "
  'name': 'proprioception'
  'repo': 'wg-ros-pkg'
- 'brief': 'Orocos youbot_simulator Component package'
  'description': "\n\n        This package contains the components of the youbot_simulator\
    \ package\n\n    "
  'name': 'youbot_simulator'
  'repo': 'euRobotics_orocos_ws'
- 'brief': 'missing_objects'
  'description': "\n\n     missing_objects\n\n  "
  'name': 'missing_objects_tutorial'
  'repo': 'tum-ros-pkg'
- 'brief': 'wireless_camera'
  'description': "\n     This package publishes sensor_msgs/image from wireless camera\
    \ which provides a MJPEG stream file.\n  "
  'name': 'wireless_camera'
  'repo': 'cu-ros-pkg'
- 'brief': ''
  'description': "\n    An extended and optimized implementation of the state-of-theart\n\
    \    local curve fitting algorithm named Contracting Curve Density (CCD) algorithm,\
    \ originally\n    developed by Hanek et al. \n    The CCD algorithm can be best\
    \ described as follows. Given one or multiple images as\n    input data and a\
    \ parametric curve model with a priori distribution of model parameters,\n   \
    \ through curve-fitting process, we estimate the model parameters which determine\
    \ the approximation\n    of the posterior distribution in order to make the curve\
    \ models best matching\n    the image data. In order to improve the stability,\
    \ accuracy and robustness over the original\n    implementation we introduce the\
    \ following improvements. Firstly, we use the logistic\n    sigmoid function instead\
    \ of a Gaussian error function which renders a curve-fitting problem\n    as a\
    \ Gaussian logistic regression problem known in the field of pattern recognition.\n\
    \    Secondly, a quadratic or a cubic B-spline curve is used to model the parametric\
    \ curve to\n    avoid the Runge phenomenon without increasing the degree of the\
    \ B-spline. Thirdly, the\n    system supports both planar affine (6-DOF) and three-dimensional\
    \ affine (8-DOF) shapespace.\n    The latter affine space can avoid curve mismatching\
    \ caused by major viewpoint\n    changes. Lastly, in order to avoid manual intervention\
    \ by the user, the developed system\n    also supports robust global initial curve\
    \ initialization modules based on both keypoint\n    feature matching and back-projections\
    \ from the 3D point clouds.\n  "
  'name': 'contracting_curve_density_algorithm'
  'repo': 'ias_perception'
- 'brief': 'w2_object_manipulation_launch'
  'description': "\n         w2_object_manipulation_launch\n    "
  'name': 'w2_object_manipulation_launch'
  'repo': 'ua-ros-pkg'
- 'brief': 'Orocos Master_controller Component package'
  'description': "\n        This package contains the components of the Master_controller\
    \ package\n    "
  'name': 'Master_controller'
  'repo': 'wg-ros-pkg'
- 'brief': 'android_tutorial_hokuyo'
  'description': "\n\n     android_tutorial_hokuyo\n\n  "
  'name': 'android_tutorial_hokuyo'
  'repo': 'android_core'
- 'brief': 'python_oauth2'
  'description': "\n\n     python_oauth2\n\n  "
  'name': 'python_oauth2'
  'repo': 'vmi-ros-pkg'
- 'brief': 'dead_reckoning_odom'
  'description': "\n\n     dead_reckoning_odom\n\n  "
  'name': 'dead_reckoning_odom'
  'repo': 'seabee3-ros-pkg'
- 'brief': 'Publish images from the NAO''s camera'
  'description': 'The nao_vision package contains a node to publish images from the
    NAO''s on-board camera as a sensor_msgs/Image. Optional parameters can be set
    to set the resolution and select which camera to stream from. This package has
    been tested with NAOqi version 1.10.52.'
  'name': 'nao_vision'
  'repo': 'wpi-rail-ros-pkg'
- 'brief': 'cyphy_serial_driver'
  'description': "\ncyphy serial driver for mikrokopter.\n  "
  'name': 'cyphy_serial_driver'
  'repo': 'cyphy'
- 'brief': 'transdec_localizer'
  'description': "\n\n     transdec_localizer\n\n  "
  'name': 'transdec_localizer'
  'repo': 'seabee3-ros-pkg'
- 'brief': 'Collection of different visualization applications and launch files for
    the wax_sensor package.'
  'description': "\n     <em>hotwax</em> is a meta-package providing launch files\
    \ for different (visualization) applications using the <em>wax_sensor</em> package.\n\
    \     \n     We acknowledge and are grateful for the WAX sensor nodes provided\
    \ by the <a href=\"http://www.ncl.ac.uk/culturelab/\">Culture Lab</a> at Newcastle\
    \ University and the <a href=\"http://www.side.ac.uk/\">SiDE</a> research project.\n\
    \  "
  'name': 'hotwax'
  'repo': 'vmi-ros-pkg'
- 'brief': 'robotino_navigation'
  'description': "\nThis package contains launch and config files to launch Robotino\
    \ with \ncertain configurations for tasks such as mapping and navigation.\n  "
  'name': 'robotino_navigation'
  'repo': 'robotino-ros-pkg'
- 'brief': 'indomptable_arm'
  'description': "\n\n     indomptable_arm\n\n  "
  'name': 'indomptable_arm'
  'repo': 'smart-robotics-ros-pkg'
- 'brief': 'rve_mesh_loader'
  'description': "\n\n     rve_mesh_loader\n\n  "
  'name': 'rve_mesh_loader'
  'repo': 'visualization_engine'
- 'brief': 'hector_quadrotor_gazebo_plugins'
  'description': "\n\n     hector_quadrotor_gazebo_plugins provides gazebo plugins\
    \ for using quadrotors in gazebo.\n     The main plugin is a simple controller\
    \ allowing to command the quadrotor's velocity\n     using a geometry_msgs/Twist\
    \ message for teleoperation. The hector_gazebo_ros_baro\n     sensor plugin simulates\
    \ an altimeter based on barometric pressure.\n\n  "
  'name': 'hector_quadrotor_gazebo_plugins'
  'repo': 'tu-darmstadt-ros-pkg'
- 'brief': 'robotArmJointAnimation'
  'description': "\n\tthis package contains a node which sends periodically JointStates\
    \ messages through a topic. It's useful to test the kinematics models defined\
    \ in URDF and to show it on the rviz tool.\n\n  "
  'name': 'robotArmJointAnimation'
  'repo': 'rtc-us-ros-pkg-branches'
- 'brief': 'Simple actions for simple arms.'
  'description': ''
  'name': 'simple_arm_actions'
  'repo': 'vanadium-ros-pkg'
- 'brief': 'elektron_defs'
  'description': "\n\n\tThis package contains XML (and xacro macros) descriptions\
    \ of robot kinematics in the format\n  defined at Willow Garage for the erratic\
    \ robot.\n\n  "
  'name': 'elektron_defs'
  'repo': 'elektron_robot'
- 'brief': 'wviz'
  'description': "\n    Web visualization tool based on  webgl and websockets.\n  "
  'name': 'wviz'
  'repo': 'bosch-ros-pkg'
- 'brief': 'mono_stereo'
  'description': "\n\n     mono_stereo\n\n  "
  'name': 'mono_stereo'
  'repo': 'wg-ros-pkg'
- 'brief': 'ardusim'
  'description': "\n\n     Ardusim (Arduino Sensor Interface Module) is a library\
    \ for interfacing a wide range of sensors with ROS over the Arduino microcontroller.\n\
    \n  "
  'name': 'ardusim'
  'repo': 'lse_arduino'
- 'brief': 'pr2_hello_world'
  'description': "\n\n     pr2_hello_world\n\n  "
  'name': 'pr2_hello_world'
  'repo': 'jsk-ros-pkg'
- 'brief': 'A bridge from PCL to OpenCV and viceversa'
  'description': "\n    PCL-OpenCV is a bridge from PCL to OpenCV and viceversa, that\
    \ contains the\n    best of both worlds: 2D-3D processing. This package should\
    \ not be ROS\n    dependendent other than using the primitive ROS message types\
    \ Image and\n    PointCloud2.\n  "
  'name': 'pcl_opencv_bridge'
  'repo': 'wg-ros-pkg'
- 'brief': 'ROS OpenMPI bridge'
  'description': "\n\n    ROSMPI provides a compact library for Publisher/Subscriber\
    \ ROS-like\n    mechanisms over OpenMPI.\n\n  "
  'name': 'rosmpi'
  'repo': 'wg-ros-pkg'
- 'brief': 'otl_roomba'
  'description': "\n\n     otl_roomba is interface of Roomba.\n\n  "
  'name': 'otl_roomba'
  'repo': 'otl-ros-pkg'
- 'brief': 'URDF and bringup info for Maxwell'
  'description': "\n    Maxwell is a custom mobile manipulator, this package contains\
    \ his configuration and launch files. \n  "
  'name': 'maxwell_defs'
  'repo': 'vanadium-ros-pkg'
- 'brief': 'Timing utilities'
  'description': "\n\n    Timing utilities are very dependent on the system api provided\
    \ for their use.\n\tThis package provides a means for handling different timing\
    \ models. Current support\n\t\n\t- posix rt : complete.\n\t- macosx : posix timers\
    \ only, missing absolute timers.\n\t- win : none.\n\t\n  "
  'name': 'ecl_time'
  'repo': 'ecl_core'
- 'brief': 'bump_filter'
  'description': "\n\n     bump_filter\n\n  "
  'name': 'bump_filter'
  'repo': 'brown-experimental'
- 'brief': 'robust_topic_relay'
  'description': "\n\n     robust_topic_relay\n\n  "
  'name': 'robust_topic_relay'
  'repo': 'parsec'
- 'brief': 'Play sounds, or synthesize speech.'
  'description': "\nsound_play provides a ROS node that translates commands on a ROS\
    \ topic (<tt>robotsound</tt>) into sounds. The node supports built-in sounds,\
    \ playing OGG/WAV files, and doing speech synthesis via festival. C++ and Python\
    \ bindings allow this node to be used without understanding the details of the\
    \ message format, allowing faster development and resilience to message format\
    \ changes.\n  "
  'name': 'sound_play'
  'repo': 'audio_common'
- 'brief': 'PR2 Messages'
  'description': "\n\n    Messages for representing PR2 state, such as battery information\
    \ and the PR2 fingertip sensors.\n\n  "
  'name': 'pr2_msgs'
  'repo': 'wg-ros-pkg'
- 'brief': 'pose_base_controller'
  'description': "\n\n     pose_base_controller\n\n  "
  'name': 'pose_base_controller'
  'repo': 'navigation_experimental'
- 'brief': 'pr2_gripper_click'
  'description': "\n\n     A package for user-aided grasp planning, where the user\
    \ provides\n     some sort of information based on sensor data from the\n    \
    \ robot. Examples include the user clicking somewhere in an image\n     to tell\
    \ the robot where to grasp from.\n\n  "
  'name': 'pr2_gripper_click'
  'repo': 'wg-ros-pkg'
- 'brief': 'stereo_gpu'
  'description': "\n\n     stereo_gpu\n\n  "
  'name': 'stereo_gpu'
  'repo': 'wg-ros-pkg'
- 'brief': 'pi_video_tracker'
  'description': "\n\n     pi_video_tracker\n\n  "
  'name': 'pi_video_tracker'
  'repo': 'pi-robot-ros-pkg'
- 'brief': 'gazebo_msgs'
  'description': "\n\n     Msg and Srv data structures for interacting with Gazebo\
    \ from ROS.\n\n  "
  'name': 'gazebo_msgs'
  'repo': 'ros-pkg'
- 'brief': 'Gazebo Plugins for Personal Robots'
  'description': "\n    Gazebo Plugins for various PR2-specific sensors and actuators\
    \ on the robot.\n  "
  'name': 'pr2_gazebo_plugins'
  'repo': 'wg-ros-pkg'
- 'brief': 'rotunit_snapshotter'
  'description': "\n\n     rotunit_snapshotter\n\n  "
  'name': 'rotunit_snapshotter'
  'repo': 'uos-ros-pkg'
- 'brief': 'robot_booking'
  'description': "\n\n     robot_booking\n\n  "
  'name': 'robot_booking'
  'repo': 'bosch-ros-pkg'
- 'brief': 'Transforms and functions for mobile robot platforms'
  'description': "\n\n  Contains transforms (e.g. differential drive inverse kinematics)\n\
    \  for the various types of mobile robot platforms.\n  \n  "
  'name': 'ecl_mobile_robot'
  'repo': 'ecl_navigation'
- 'brief': ''
  'description': "\n        Package containing launch files for starting the navigation\
    \ stack on teh PowerBot robot.\n    "
  'name': '2dnav_powerbot'
  'repo': 'ubc-ros-pkg'
- 'brief': 'Detect laser points in the world.'
  'description': "\n      Detector that finds laser points in the world representing\
    \ clicks.\n  "
  'name': 'laser_interface'
  'repo': 'gt-ros-pkg'
- 'brief': 'ultraspeech'
  'description': "\n\n     ultraspeech\n\n  "
  'name': 'oldultraspeech'
  'repo': 'ua-ros-pkg'
- 'brief': 'Plugin for displaying topic information'
  'description': "\n\n     rosgui_topic provides a rosgui plugin for displaying debug\
    \ information about ROS topics including publishers, subscribers, publishing rate,\
    \ and ROS Messages.\n\n  "
  'name': 'rosgui_topic'
  'repo': 'ros_gui'
- 'brief': 'cye8_opticalflow'
  'description': "\n\n     cye8_opticalflow\n\n  "
  'name': 'cye8_opticalflow'
  'repo': 'ccny_experimental'
- 'brief': 'cl_utils'
  'description': "\nCommon Lisp utility libraries\n  "
  'name': 'cl_utils'
  'repo': 'ros-pkg'
- 'brief': 'pi_tracker'
  'description': "\n\n    Skeleton Tracker Teleop Package for the Pi Robot Project\n\
    \n  "
  'name': 'pi_tracker'
  'repo': 'pi-robot-ros-pkg'
- 'brief': 'mrobot_ros_bridge'
  'description': "\n\n     mrobot_ros_bridge\n\n  "
  'name': 'mrobot_ros_bridge'
  'repo': 'rtm-ros-robotics/rtmros_common'
- 'brief': 'rosproxy'
  'description': "\n\n     rosproxy\n\n  "
  'name': 'rosproxy'
  'repo': 'multimaster_experimental'
- 'brief': 'PR2 power board drivers'
  'description': 'This provides a ROS node for the PR2 Power Board.'
  'name': 'pr2_power_board'
  'repo': 'wg-ros-pkg'
- 'brief': 'kurt_navigation_slam'
  'description': "\n\n     kurt_navigation_slam\n\n  "
  'name': 'kurt_navigation_slam'
  'repo': 'uos-ros-pkg'
- 'brief': 'turtle_cram_demo'
  'description': "\n\n     turtle_cram_demo\n\n  "
  'name': 'turtle_cram_demo'
  'repo': 'tum-ros-pkg'
- 'brief': 'nao_camera_tele'
  'description': "\n\n     nao_camera_tele\n\n  "
  'name': 'nao_camera_tele'
  'repo': 'brown-experimental'
- 'brief': 'rosmouse'
  'description': "\n\n     rosmouse\n\n  "
  'name': 'rosmouse'
  'repo': 'wu-ros-pkg'
- 'brief': 'Compile time concept checking.'
  'description': "\n\n     Introduces a compile time concept checking mechanism that\
    \ can be used\n     most commonly to check for required functionality when passing\n\
    \     template arguments.\n\n  "
  'name': 'ecl_concepts'
  'repo': 'ecl_core'
- 'brief': 'A generic driver for USB camera using OpenCV'
  'description': ''
  'name': 'gencam_cu'
  'repo': 'prairiedog'
- 'brief': 'pr2_tasks'
  'description': "\n\n     pr2_tasks\n\n  "
  'name': 'pr2_tasks'
  'repo': 'wg-ros-pkg'
- 'brief': ''
  'description': 'A graphical interface for the CU nodes.'
  'name': 'visualization_cu'
  'repo': 'prairiedog'
- 'brief': 'neo_bring_up'
  'description': "\n\n     neo_bring_up\n\n  "
  'name': 'neo_bring_up'
  'repo': 'neo_apps'
- 'brief': 'pr2_teleop_booth'
  'description': "\n\n     pr2_teleop_booth\n\n  "
  'name': 'pr2_teleop_booth'
  'repo': 'wg-ros-pkg'
- 'brief': 'PR2 navigation-specific sensor configurations.'
  'description': "\n\n     This package holds navigation-specific sensor configuration\
    \ options and launch files for the PR2.\n\n  "
  'name': 'pr2_navigation_perception'
  'repo': 'pr2_navigation'
- 'brief': 'asctec_msgs'
  'description': "\n\t\tCommon messages for the AscTec AutoPilot\n  "
  'name': 'asctec_msgs'
  'repo': 'asctec_drivers'
- 'brief': 'CRAM test utilities.'
  'description': "\n    Some utilities to make writing unit tests for various cram\
    \ packages\n    easier. This should not depend on any other cram package so package\n\
    \    specific stuff should not go here.\n  "
  'name': 'cram_test_utilities'
  'repo': 'cram_pl'
- 'brief': 'oit_ekf'
  'description': "\n\n     oit_ekf\n\n  "
  'name': 'oit_ekf'
  'repo': 'usc-ros-pkg'
- 'brief': 'CL-STORE'
  'description': "\n      CL-STORE\n      http://common-lisp.net/project/cl-store/\n\
    \  "
  'name': 'cl_store'
  'repo': 'cram_pl'
- 'brief': 'bash utilities for OTL'
  'description': "\n\n     otl_bash contains otlbash script.\n     this enable easy\
    \ access to otl ros packages.\n\n  "
  'name': 'otl_bash'
  'repo': 'otl-ros-pkg'
- 'brief': 'tf2_kdl'
  'description': "\n\n     tf2_kdl\n\n  "
  'name': 'tf2_kdl'
  'repo': 'geometry_experimental'
- 'brief': 'mannequin_application'
  'description': "\nA super simple tool for letting a person position the arms manually,\
    \ by simply pushing the arm to the location that want. Without out this tool,\
    \ users are often stuck tweaking joint angles in a script, or holding the arm\
    \ steady while hitting keys to freeze the arm.\n  "
  'name': 'mannequin_application'
  'repo': 'wg-ros-pkg'
- 'brief': 'Controllers for triggering from the realtime loop'
  'description': "\n    Controllers to operate the digital output of the motor controller\n\
    \    boards and the projector board. This package has not been reviewed and\n\
    \    should be considered unstable.\n  "
  'name': 'ethercat_trigger_controllers'
  'repo': 'wg-ros-pkg'
- 'brief': ''
  'description': "\n  "
  'name': 'collada-dom'
  'repo': 'tum-ros-pkg'
- 'brief': 'frame_registrar'
  'description': "\n    frame_registrar manages a graph of semantic frames and callbacks.\
    \  It contains semantic frames akin to FrameNet but designed for robotics and\
    \ internally manages a graph of semantic frames and their associated callbacks.\
    \  frame_registrar communicates with other nodes by providing interfaces for adding\
    \ semantic frames (through yaml files), accessing semantic frames and their relatives\
    \ (given filled lexical units), and registering callbacks for RFNServers (in essence,\
    \ Action Servers) by binding the callbacks to semantic frames.\n  "
  'name': 'frame_registrar'
  'repo': 'roboframenet'
- 'brief': 'Dynamic 3D Planning'
  'description': "\n    A library of search-based planning algorithms\n\n  "
  'name': 'dynamic_planning'
  'repo': 'wg-ros-pkg'
- 'brief': 'The ROSified Nepumuk simulator from libsunflower.sourceforge.net'
  'description': "\n    Nepumuk is a simple kinematic 2D simulator for robots with\
    \ some\n    simple sensors. It was originally developed to test the\n    libsunflower\
    \ code and has been later used as integration sandbox\n    in some other mobile\
    \ robotics projects.\n  "
  'name': 'nepumuk'
  'repo': 'wg-ros-pkg'
- 'brief': 'bump_mapper'
  'description': "\n    Listens for a bump, then publishes an estimate of the obstacle's\
    \ location\n    that caused it.\n\n    Not tested much as of 12/1/11.\n  "
  'name': 'bump_mapper'
  'repo': 'brown-experimental'
- 'brief': 'sr_example'
  'description': "\n\n     sr_example is an example of a real package interfaced with\
    \ our robot. Please refer to the tutorial Creating a package to interact with\
    \ our robots.\n\n  "
  'name': 'sr_example'
  'repo': 'shadow_robot'
- 'brief': 'sr_tactile_sensors'
  'description': "\n\n    An interface to the tactile sensors used in the Shadow Dextrous\
    \ Hand. Also Contains a virtual set of sensors.\n\n  "
  'name': 'sr_tactile_sensors'
  'repo': 'shadow_robot'
- 'brief': 'pi_dynamixel_controller'
  'description': "\n\n     pi_dynamixel_controller\n\n  "
  'name': 'pi_dynamixel_controller'
  'repo': 'pi-robot-ros-pkg'
- 'brief': 'pr2_robust_grasping'
  'description': "\n\n      Contains code for selecting grasps from a database which\
    \ are robust\n      to both model and pose uncertainty.\n\n  "
  'name': 'pr2_robust_grasping'
  'repo': 'wg-ros-pkg'
- 'brief': 'nbv_utilities'
  'description': "\n\n     nbv_utilities\n\n  "
  'name': 'nbv_utilities'
  'repo': 'usc-ros-pkg'
- 'brief': 'Linear Weighted Projection Regression Inverse Dynamics Controller'
  'description': "\n\n     Provides a feedforward controller based on inverse dynamics\
    \ learned using Linear Weighted Projection Regression.\n\n  "
  'name': 'lwpr2_trajectory_controller'
  'repo': 'wg-ros-pkg'
- 'brief': ''
  'description': ''
  'name': 'view_mesh'
  'repo': 'bosch-ros-pkg'
- 'brief': 'rtt_nav_msgs'
  'description': "\n\n    Provides an rtt typekit for ROS nav_msgs messages.\n\n \
    \   It allows you to use ROS messages transparently in\n    RTT components and\
    \ applications.\n\n    This package was automatically generated by the\n    create_rtt_msgs\
    \ generator and should not be manually\n    modified.\n\n    See the http://ros.org/wiki/nav_msgs\
    \ documentation\n    for the documentation of the ROS messages in this\n    typekit.\n\
    \n  "
  'name': 'rtt_nav_msgs'
  'repo': 'rtt_common_msgs'
- 'brief': 'Node for the Home Easy Donlge HE853.'
  'description': "\n    This node allows to control Home Easy components with the\
    \ help of the HE853 usb dongle.\n  "
  'name': 'homeeasy_dongle'
  'repo': 'vmi-ros-pkg'
- 'brief': 'libsegwayrmp'
  'description': "\n\n     libsegwayrmp\n\n  "
  'name': 'libsegwayrmp'
  'repo': 'segway-rmp-ros-pkg'
- 'brief': 'cob_undercarriage_ctrl'
  'description': "\n\n     cob_undercarriage_ctrl implements a controller for the\
    \ omnidirectional base of Care-O-bot 3 on joint level. For a given Pltf-Twist\
    \ the according wheel steering angles and linear wheel velocities are calculated\
    \ based on the principle of rigid body motion. Each joint is than controlled individually\
    \ to achieve the computed position and velocity\n\n  "
  'name': 'cob_undercarriage_ctrl'
  'repo': 'cob_driver'
- 'brief': 'Test collision spaces'
  'description': "\n    A visualization tool to check whether collision space code\
    \ is\n    working appropriately\n  "
  'name': 'test_collision_space'
  'repo': 'wg-ros-pkg'
- 'brief': 'landmark_map_server'
  'description': "\n\n     landmark_map_server\n\n  "
  'name': 'landmark_map_server'
  'repo': 'seabee3-ros-pkg'
- 'brief': 'ar_map_navigate_bumpers_dijkstra'
  'description': "\n\n     ar_map_navigate_bumpers_dijkstra\n\n  "
  'name': 'ar_map_navigate_bumpers_dijkstra'
  'repo': 'brown-experimental'
- 'brief': 'phantom_omni'
  'description': "\n     ROS Node for Sensable Phantom Omni devices.\n  "
  'name': 'phantom_omni'
  'repo': 'gt-ros-pkg'
- 'brief': 'camera_calibration_application'
  'description': "\n    Web-based camera calibration\n  "
  'name': 'camera_calibration_application'
  'repo': 'wg-ros-pkg'
- 'brief': 'soar'
  'description': "\n\tIncludes the required SOAR libraries to write SOAR agents using\
    \ SML\n  "
  'name': 'soar'
  'repo': 'rtc-us-ros-pkg-trunk'
- 'brief': 'Applications for PR-MINI'
  'description': "\n    Standard applications for demoing PR-MINI.\n  "
  'name': 'prmini_apps'
  'repo': 'vanadium-ros-pkg'
- 'brief': ''
  'description': "\n    A node which detects doors and handles from 3D point cloud\
    \ data.\n  "
  'name': 'door_handle_detector'
  'repo': 'pr2_doors'
- 'brief': 'A Lisp client library for ROS'
  'description': 'This package is a Lisp client library for ROS, the Robot Operating
    System.'
  'name': 'roslisp'
  'repo': 'ros_comm'
- 'brief': 'ompl_extension'
  'description': "\n\n     ompl_extension\n\n  "
  'name': 'ompl_extension'
  'repo': 'wg-ros-pkg'
- 'brief': 'Velodyne PCL interfaces'
  'description': "\n\n     ROS Point Cloud Library interfaces for Velodyne high-definition\n\
    \     LIDARs.\n\n  "
  'name': 'velodyne_pcl'
  'repo': 'utexas-art-ros-pkg'
- 'brief': 'Some test and demo programs for the katana_driver stack.'
  'description': "\n\n     This package contains test and demo programs for the katana_driver\
    \ stack.\n\n  "
  'name': 'katana_tutorials'
  'repo': 'uos-ros-pkg'
- 'brief': 'osgOcean'
  'description': "\n\nThis package contains a recent version of the osgOcean library\
    \ (http://code.google.com/p/osgocean/). \nThis ROS package does not intend to\
    \ modify osgOcean\nin any way, it simply provides a convenient way to download\
    \ and\ncompile the library, because osgOcean is not available from an OS package\n\
    manager. However, this package might contain some temporary patches to\nosgOcean\
    \ while they are being applied upstream, or while a permanent fix\nfor a problem\
    \ is being discussed by the osgOcean community.\n\n"
  'name': 'osgOcean'
  'repo': 'uji-ros-pkg'
- 'brief': 'pybrain'
  'description': "\n\n     pybrain\n\n  "
  'name': 'pybrain'
  'repo': 'ua-ros-pkg'
- 'brief': 'rosie_torso_action'
  'description': "\n\n     rosie_torso_action\n\n  "
  'name': 'rosie_torso_action'
  'repo': 'tum-ros-pkg'
- 'brief': 'UWSim'
  'description': "\n\n     UWSim is an UnderWater SIMulator for marine robotics research\
    \ and development. UWSim visualizes an underwater virtual scenario that can be\
    \ configured using standard modeling software. Controllable underwater vehicles,\
    \ surface vessels and robotic manipulators, as well as simulated sensors, can\
    \ be added to the scene and accessed externally through ROS interfaces. This allows\
    \ to easily integrate the visualization tool with existing control architectures.\n\
    \n  "
  'name': 'UWSim'
  'repo': 'uji-ros-pkg'
- 'brief': 'demosaic'
  'description': "\n\n     demosaic\n\n  "
  'name': 'demosaic'
  'repo': 'wg-ros-pkg'
- 'brief': 'sensornet'
  'description': "\n\n     This package contains a node for connecting to the LSE\
    \ SensorNet, a sensor network for monitoring odor and wind environmental data\
    \ during odor search experiments.\n\n  "
  'name': 'sensornet'
  'repo': 'lse_sensor_network'
- 'brief': 'apcupsd_node'
  'description': "\n    A node giving access to apcupsd compatible Uninterruptable\
    \ Power\n    Supplies (UPS).\n  "
  'name': 'apcupsd_node'
  'repo': 'wg-ros-pkg'
- 'brief': 'rosjson'
  'description': "\n\n     rosjson is a Python library for converting ROS messages\
    \ to JSON\n     (JavaScript Object Notation) representation.\n\n  "
  'name': 'rosjson'
  'repo': 'wg-ros-pkg'
- 'brief': 'laser_scan_publisher_tutorial'
  'description': "\n\n     laser_scan_publisher_tutorial\n\n  "
  'name': 'laser_scan_publisher_tutorial'
  'repo': 'navigation_tutorials'
- 'brief': 'colbotcanon'
  'description': "\nA controller for the canon of the Colbot hobby robot\n  "
  'name': 'colbotcanon'
  'repo': 'colbot-ros-pkg'
- 'brief': 'pose_follower_3d - an extended pose_follower local planner which performs
    collision checks in 3D'
  'description': "\n\n      This package provides an extended pose_follwer to perform\
    \ 3D collision checks against the robot's full kinematic configuration. It should\
    \ serve as a drop-in replacement as local planner in the navigation stack, to\
    \ be used with global plans from sbpl_lattice_planner_3d. The 3D collision map\
    \ is usually sent out from octomap_server. \n\n  "
  'name': 'pose_follower_3d'
  'repo': 'wg-ros-pkg'
- 'brief': ''
  'description': 'Simple Grasp Planer'
  'name': 'simple_grasp_planner'
  'repo': 'tum-ros-pkg'
- 'brief': ''
  'description': ''
  'name': 'segway_rmp'
  'repo': 'segway_rmp'
- 'brief': 'Handholding demo'
  'description': "\n    This demo allows you to lead the robot around by its hand.\n\
    \  "
  'name': 'handhold'
  'repo': 'wg-ros-pkg'
- 'brief': 'hector_nav_msgs'
  'description': "\n\n     hector_nav_msgs contains messages and services used in\
    \ the hector_slam stack.\n\n  "
  'name': 'hector_nav_msgs'
  'repo': 'tu-darmstadt-ros-pkg'
- 'brief': 'turtlebot_xtion_top_description'
  'description': "\n\n     turtlebot_xtion_top_description provides a complete 3D\
    \ model of a TurtleBot with an ASUS Xtion Pro Live camera mounted on top.\n\n\
    \  "
  'name': 'turtlebot_xtion_top_description'
  'repo': 'iheart-ros-pkg'
- 'brief': 'sogp_node'
  'description': "\n\n     sogp_node\n\n  "
  'name': 'sogp_node'
  'repo': 'brown-experimental'
- 'brief': 'person_grabber'
  'description': "\n\n    This node integrates the the NITE skeleton tracking library\
    \ with the openni_camera point cloud generation. A pointcloud is published, containing\
    \ only the points that belong to the currently tracked human. (Actually, I did\
    \ not try, but maybe a large monkey would also work..) \n    \n    Upon starting\
    \ the node (&quot;rosrun person_grabber person_grabber&quot;), nothing will be\
    \ published. After standing in front of the camera, and calibrating in the usual\
    \ Y shaped position, the pointcloud will start. The console informs of the current\
    \ status of the tracking, and only one user is tracked and published at a time.\n\
    \    \n    The point cloud is of type PointCloud2, contains X, Y, Z and RGB values,\
    \ and is on the topic &quot;/rgbd/points2&quot;. The code for calculating the\
    \ 3D positions of the points is taken from the openni_camera node, but stripped\
    \ of the PrimeSense development kit camera parts. As such, it will only operate\
    \ with a Microsoft Kinect camera.\n\n  "
  'name': 'person_grabber'
  'repo': 'uuisrc-ros-pkg'
- 'brief': 'rttuning_controllers'
  'description': "\n\n     Realtime Tuning Controllers\n\n  "
  'name': 'rttuning_controllers'
  'repo': 'wg-ros-pkg'
- 'brief': 'rotoscan_node'
  'description': "\n\n     Driver for Leuze rotoScan laser rangefinder devices, publishing\
    \ sensor_msgs/LaserScan messages. Currently supports devices connected via Ethernet\
    \ and \n     serial port, but could be extended to interface with other models.\n\
    \n  "
  'name': 'rotoscan_node'
  'repo': 'dfki-sks-ros-pkg'
- 'brief': 'cart_pushing_stage'
  'description': "\n\nThis package contains launch files for a stage version of the\
    \ cart pushing nav stack, with fake localization and arm control.\n\n  "
  'name': 'cart_pushing_stage'
  'repo': 'wg-ros-pkg'
- 'brief': 'denso_msgs'
  'description': "\n\n     This package contains some messages used for the denso\
    \ arm.\n\n  "
  'name': 'denso_msgs'
  'repo': 'shadow_robot'
- 'brief': 'ieee80211_channels'
  'description': "\n    This package provides mapping from frequencies to\n    IEEE802.11\
    \ channels and vice-versa.\n  "
  'name': 'ieee80211_channels'
  'repo': 'ros-pkg'
- 'brief': 'carrot_planner'
  'description': "\n\n     This planner attempts to find a legal place to put a carrot\
    \ for the robot to follow. It does this by moving back along the vector between\
    \ the robot and the goal point.\n\n  "
  'name': 'carrot_planner'
  'repo': 'navigation'
- 'brief': 'guardian_controller'
  'description': " \n  Relate the 4-wheels joints with each motor, apply the control\
    \ \n  correction in closed loop for the motor and set the command \n  received\
    \ by the joystick/keyboard teleop node.\n  "
  'name': 'guardian_controller'
  'repo': 'guardian-ros-pkg'
- 'brief': 'log_gui'
  'description': "\n\n     log_gui\n\n  "
  'name': 'log_gui'
  'repo': 'usc-ros-pkg'
- 'brief': 'C++11-style atomic operations'
  'description': "\n\n     rosatomic provides the C++11-style atomic operations by\
    \ pulling symbols from the proposed Boost.Atomic\n     package into the ros namespace.\
    \  Once C++11-style atomics (std::atomic) are available from compilers, rosatomic\
    \ will\n     conditionally use those instead.\n\n  "
  'name': 'rosatomic'
  'repo': 'ros_realtime'
- 'brief': 'Orocos rtt_rospack Component package'
  'description': "\n        This package contains the components of the rtt_rospack\
    \ package\n    "
  'name': 'rtt_rospack'
  'repo': 'orocos_toolchain_ros'
- 'brief': 'kinematics_msgs'
  'description': "\n    This package provides general-purpose messages and services\
    \ that can be used for kinematic computation using a ROS interface.\n  "
  'name': 'kinematics_msgs'
  'repo': 'arm_navigation'
- 'brief': 'utter'
  'description': "\n\n     utter is an RFNServer which says the utterance (using sound)\
    \ given to it by the semantic frame.\n\n  "
  'name': 'utter'
  'repo': 'roboframenet'
- 'brief': 'srh_controller_configuration'
  'description': "\n\n  Configuration files for Shadow Robot hand controllers.\n\n\
    \  "
  'name': 'srh_controller_configuration'
  'repo': 'wg-ros-pkg'
- 'brief': 'Connects ROS sensor messages to OpenRAVE'
  'description': "\n    Contains openrave plugins that connect send and recieve ROS\
    \ messages allowing OpenRAVE to communicate with the ROS world better.\n  "
  'name': 'openrave_sensors'
  'repo': 'jsk-ros-pkg'
- 'brief': 'Shows the features of ROS step-by-step'
  'description': "\n    This package attempts to show the features of ROS step-by-step,\n\
    \    including using messages, servers, parameters, etc.\n    It is a copy of\
    \ the roscpp_tutorials (because catkin\n    won't handle turtlesim in the same\
    \ package).\n  "
  'name': 'win_roscpp_tutorials'
  'repo': 'win_ros'
- 'brief': 'eodev'
  'description': "\n\n     EO is a template-based, ANSI-C++ evolutionary computation\
    \ library which helps you to write your own stochastic optimization algorithms\
    \ insanely fast.\n\n  "
  'name': 'eodev'
  'repo': 'shadow_robot'
- 'brief': 'smi540'
  'description': "\n\n     smi540\n\n  "
  'name': 'smi540'
  'repo': 'bosch-ros-pkg'
- 'brief': 'smach_recovery_viewer'
  'description': "\n    The smach recovery viewer is a GUI that shows the state of\
    \ hierarchical\n    Recovery SMACH state machines. It can visualize the possible\
    \ transitions\n    between states, as well as the currently active state and the\n\
    \    values of user data that is passed around between states. The\n    smach\
    \ viewer uses the SMACH debugging interface based on\n    the <a href=\"http://www.ros.org/wiki/smach_recovery_msgs\"\
    >smach\n    messages</a> to gather information from running state machines.\n\
    \  "
  'name': 'smach_recovery_viewer'
  'repo': 'bosch-ros-pkg'
- 'brief': 'nxt_lejos_msgs'
  'description': "\n     The nxt_lejos_msgs package contains extra messages used by\
    \ the nxt_lejos\n     stack, in addition to the ones in the nxt_msgs package.\
    \ They are used to\n     publish sensor information, control the robot, control\
    \ individual\n     motors, and send tones to the NXT brick.\n  "
  'name': 'nxt_lejos_msgs'
  'repo': 'lejos-ros-pkg'
- 'brief': 'Blocks World demo of the Wubble robot'
  'description': "\n        wubble_blocks\n    "
  'name': 'wubble_blocks'
  'repo': 'ua-ros-pkg'
- 'brief': 'periodic_window_snapshotter'
  'description': "\n\n     periodic_window_snapshotter\n\n  "
  'name': 'periodic_window_snapshotter'
  'repo': 'wg-ros-pkg'
- 'brief': 'corobot_arm'
  'description': "\n\n\tHigh Level interface to move the arm of the Corobot.\n\n  "
  'name': 'corobot_arm'
  'repo': 'roscorobot'
- 'brief': ''
  'description': 'A Goal Server'
  'name': 'goal_server_cu'
  'repo': 'prairiedog'
- 'brief': 'collision_octomap'
  'description': "\n\n     A node producing a map of the occupied space in the world\
    \ as discretized boxes (center, dimension), used for collision detection.\n\n\
    \  "
  'name': 'collision_octomap'
  'repo': 'wg-ros-pkg'
- 'brief': 'clmd5'
  'description': "\n\n     clmd5\n\n  "
  'name': 'clmd5'
  'repo': 'roll'
- 'brief': 'tirt'
  'description': "\n\n     tirt: Topics in Realtime\n\n     Tirt approximates ROS\
    \ topics in realtime.\n\n  "
  'name': 'tirt'
  'repo': 'wg-ros-pkg'
- 'brief': 'nxt_description'
  'description': "\n\n     nxt_description contains the nxt collada models for nxt_ros.\
    \ The collada models are created from  \n     ldraw.org part models and are named\
    \ by part number.\n\n  "
  'name': 'nxt_description'
  'repo': 'foote-nxt'
- 'brief': 'roswtf command-line tool'
  'description': "\n\n     roswtf is a tool for diagnosing issues with a running ROS\
    \ system. Think of it as a FAQ implemented in code.\n\n  "
  'name': 'roswtf'
  'repo': 'ros_comm'
- 'brief': 'RoboticArm_communications'
  'description': "\n\n     The RoboticArm_communications defines messages and actions\
    \ for the Robotic Arm\n\n  "
  'name': 'RoboticArm_communications'
  'repo': 'pandora-auth-ros-pkg'
- 'brief': 'portrait_painter'
  'description': "\n    Package written for extracting lines out of an image of contours\
    \ and\n    painting those lines on a board, sheet or anything else, afterwards.\n\
    \n  "
  'name': 'portrait_painter'
  'repo': 'alufr-ros-pkg'
- 'brief': 'ride_msgs'
  'description': "\n\n     ride_msgs\n\n  "
  'name': 'ride_msgs'
  'repo': 'wu-ros-pkg'
- 'brief': 'rosbridge'
  'description': "\nrosbridge allows dynamic socket and web-socket based access to\
    \ the full capabilities of ROS. A lightweight binding to Javascript for websocket-capable\
    \ web browsers is included (ros.js), but access from any language supporting sockets\
    \ and JSON is easy.\n  "
  'name': 'ridebridge'
  'repo': 'brown-experimental'
- 'brief': 'bumper_localizer_nomap'
  'description': "\n\n     bumper_localizer_nomap\n\n  "
  'name': 'bumper_localizer_nomap'
  'repo': 'brown-experimental'
- 'brief': 'Dynamic graph ROS bridge'
  'description': "\n\n     ROS bindings for dynamic graph.\n\n  "
  'name': 'dynamic_graph_bridge'
  'repo': 'stacks/redundant_manipulator_control'
- 'brief': 'pcl_point_cloud2_image_color'
  'description': "\n    Color PointCloud2 point clouds using RGB values from a camera\
    \ image.\n  "
  'name': 'pcl_point_cloud2_image_color'
  'repo': 'wg-ros-pkg'
- 'brief': 'stereo_image_odom'
  'description': "\n\n     stereo_image_odom\n\n  "
  'name': 'stereo_image_odom'
  'repo': 'seabee3-ros-pkg'
- 'brief': 'Standard messages and services used to communicate with a WowWee Rovio'
  'description': 'The rovio_shared package contains standard messages and services
    as well as a library that can be used to communicate with a WowWee Rovio.'
  'name': 'rovio_shared'
  'repo': 'wpi-rail-ros-pkg'
- 'brief': 'supporting resources for building with the mingw_cross compiler'
  'description': "\n\n     This includes resources for cross-compiling mingw programs\
    \ with the mingw_cross cross compiler.\n     The most important of which is the\
    \ cmake toolchain file.\n\n  "
  'name': 'mingw_build'
  'repo': 'win_ros'
- 'brief': 'simulated_quadrotor'
  'description': "\n\n     This package provides tools to simulate a quadrotor's actuators\
    \ and sensors to allow for offline\n     development and make unit testing possible.\n\
    \n  "
  'name': 'simulated_quadrotor'
  'repo': 'starmac-ros-pkg'
- 'brief': 'nav_pcontroller'
  'description': "\n\n     simple P-Controller for a holonomic robot base.\n\n  "
  'name': 'nav_pcontroller'
  'repo': 'tum-ros-pkg'
- 'brief': 'trivial_features'
  'description': "\n      trivial-features\n      http://www.cliki.net/trivial-features\n\
    \  "
  'name': 'trivial_features'
  'repo': 'cram_pl'
- 'brief': 'laptop_battery'
  'description': "\n\n     laptop_battery\n\n  "
  'name': 'laptop_battery'
  'repo': 'lse_battery_drivers'
- 'brief': 'ias_arm_kinematics'
  'description': "\n\n     ias_arm_kinematics\n\n  "
  'name': 'ias_arm_kinematics'
  'repo': 'tum-ros-pkg'
- 'brief': 'image_server'
  'description': "\n\n     image_server\n\n  "
  'name': 'image_server'
  'repo': 'seabee3-ros-pkg'
- 'brief': 'rl_env'
  'description': "\n\n     Provides a set of reinforcement learning environments (gridworlds,\
    \ mountain car, cart pole, stock trading, robot car simulations) for RL agents\
    \ to learn in. Developed by <a href=\"http://www.cs.utexas.edu/~todd/\">Todd Hester</a>\
    \ and <a href=\"http://www.cs.utexas.edu/~pstone/\">Peter Stone</a> at the University\
    \ of Texas at Austin.\n\n  "
  'name': 'rl_env'
  'repo': 'rl-texplore-ros-pkg'
- 'brief': 'Parse test for URDF files in pr2_component_descriptions'
  'description': "\nTests that pr2_component_descriptions parse with xacro/xacro.py\
    \ and gazebo_tools/gazebo_model.\n  "
  'name': 'test_pr2_component_descriptions'
  'repo': 'wg-ros-pkg'
- 'brief': 'Interactive marker demo for adjusting the pose of a camera.'
  'description': ''
  'name': 'interactive_camera_pose'
  'repo': 'vanadium-ros-pkg'
- 'brief': 'model_database'
  'description': "\n     Interface with a database of 3D models and various other\
    \ information.\n  "
  'name': 'model_database'
  'repo': 'wg-ros-pkg'
- 'brief': 'jsk_perception'
  'description': "\n\n     jsk_perception\n\n  "
  'name': 'jsk_perception'
  'repo': 'jsk-ros-pkg'
- 'brief': 'ReIn'
  'description': "\n\n    The Recognition Infrastructure (ReIn) is a software library\
    \ that\n    facilitates rapid development for 2D/3D object and scene recognition.\
    \ ReIn\n    can create different computational graphs from its various modules\
    \ by\n    combining them together in parallel or in a cascade fashion. Examples\n\
    \    include: object detectors, pose estimators, attention operators, etc.\n\n\
    \    The backbone of ReIn is supported by OpenCV\n    (http://opencv.willowgarage.com/)\
    \ and PCL (http://pcl.ros.org).\n\n  "
  'name': 'rein'
  'repo': 'wg-ros-pkg'
- 'brief': 'buildmap'
  'description': "\n     Uses GMapping to build a map given a ROS bag file.\n  "
  'name': 'gmapping_offline'
  'repo': 'parsec'
- 'brief': ''
  'description': 'A library, utility standalone executables, and ROS node for the
    iRobot Create'
  'name': 'icreate'
  'repo': 'cu-ros-pkg'
- 'brief': 'pr2_plugs_actions'
  'description': "\n\n     pr2_plugs_actions contains actions specific to plugging\
    \ in the PR2 robot.\n\n  "
  'name': 'pr2_plugs_actions'
  'repo': 'pr2_plugs'
- 'brief': 'krypton'
  'description': "\n\n    The krypton library allows interaction with any <a href=\"\
    http://www.nikonmetrology.com/optical__cmm/\">Nikon K-Series Optical CMM</a>.\
    \ It can:\n    <ul>\n      <li>open / close all necessary connections to the HF\
    \ controller </li>\n      <li>send control commands to the Krypton system </li>\n\
    \      <li>receive status information from Krypton </li>\n      <li>receive measurement\
    \ data from Krypton </li>\n    </ul>\n\n  "
  'name': 'krypton'
  'repo': 'krypton_hardware'
- 'brief': 'gumstix_memwrite_bma180'
  'description': "\n\n     gumstix_memwrite_bma180\n\n  "
  'name': 'gumstix_memwrite_bma180'
  'repo': 'bosch-ros-pkg'
- 'brief': 'The Open Source Object-Oriented Graphics Rendering Engine'
  'description': '


    <p>

    OGRE (Object-Oriented Graphics Rendering Engine) is a scene-oriented, flexible
    3D engine written in C++ designed to make it easier and more intuitive for developers
    to produce applications utilising hardware-accelerated 3D graphics. The class
    library abstracts all the details of using the underlying system libraries like
    Direct3D and OpenGL and provides an interface based on world objects and other
    intuitive classes.

    </p>

    <p>

    Given how fast things move in world of 3D graphics, we will update the Ogre version
    for bugfixes and new features we determine to be necessary.  This will

    likely mean keeping updated to the latest version when possible.

    </p>


    '
  'name': 'ogre'
  'repo': 'ros-pkg'
- 'brief': 'pi_navigation'
  'description': "\n\n     SLAM and AMCL navigation for Pi Robot\n\n  "
  'name': 'pi_navigation'
  'repo': 'pi-robot-ros-pkg'
- 'brief': 'interpolated_ik_motion_planner'
  'description': "\n     The interpolated ik motion planner does Cartesian interpolation:\
    \ it takes in Cartesian start and end poses, and tries to find consistent joint\
    \ angles for equally-spaced waypoints along the Cartesian path.\n  "
  'name': 'interpolated_ik_motion_planner'
  'repo': 'arm_navigation_experimental'
- 'brief': 'CHOMP - Covariant Hamiltonian Optimization for Motion Planning'
  'description': "\n\nCHOMP is a motion planner based on trajectory optimization.\n\
    It generates smooth, collision-free trajectories. For technical, algorithmic details,\n\
    please refer to:\n\n&quot;CHOMP: Gradient Optimization Techniques for Efficient\
    \ Motion Planning&quot;.\nNathan Ratliff, Matthew Zucker, J. Andrew Bagnell and\
    \ Siddhartha Srinivasa.\nIEEE International Conference on Robotics and Automation,\
    \ May 2009. \n\n  "
  'name': 'chomp_motion_planner'
  'repo': 'arm_navigation_experimental'
- 'brief': 'cart_state_estimator'
  'description': "\nEstimate state of cart being pushed by robot\n  "
  'name': 'cart_state_estimator'
  'repo': 'wg-ros-pkg'
- 'brief': 'cob_default_robot_config'
  'description': "\n\n     Default configuration of the different robots supported\
    \ by the care-o-bot-research stacks in standard environments.\n     Preconfigured\
    \ joint positions and navigation goals are provided here. The different configurations\
    \ are selected by the ROBOT and ROBOT_ENV environment variables.\n\n  "
  'name': 'cob_default_robot_config'
  'repo': 'cob_robots'
- 'brief': 'message_transport_common'
  'description': "\n\n\t  message_transport is a generic architecture for writing\
    \ object transport,\n\t  similar to the message_transport architecture. \n  "
  'name': 'message_transport_common'
  'repo': 'ethzasl_message_transport'
- 'brief': 'pr2_gripper_grasp_planner_roi'
  'description': "\n\n     pr2_gripper_grasp_planner_roi\n\n  "
  'name': 'pr2_gripper_grasp_planner_roi'
  'repo': 'wg-ros-pkg'
- 'brief': 'ds_common_msgs'
  'description': "\n\n     ds_common_msgs\n\n  "
  'name': 'ds_common_msgs'
  'repo': 'bosch-ros-pkg'
- 'brief': 'hbase'
  'description': "\nA node for logging data in hbase.\n\n  "
  'name': 'hbase'
  'repo': 'brown-experimental'
- 'brief': 'egomotion_benchmark'
  'description': "\n\n     egomotion_benchmark\n\n  "
  'name': 'egomotion_benchmark'
  'repo': 'ccny_experimental'
- 'brief': 'corobot_ssc32'
  'description': "\n\n     A package that interfaces the SSC32 hardware board specific\
    \ to the Corobot.\n     It uses the SSC32_core package made by Steven bellens:\
    \ steven.bellens@mech.kuleuven.be \n\n  "
  'name': 'corobot_ssc32'
  'repo': 'roscorobot'
- 'brief': 'joint_velocities'
  'description': "\n\n     joint_velocities\n\n  "
  'name': 'joint_velocities'
  'repo': 'usc-ros-pkg'
- 'brief': 'tf_frame_lock'
  'description': "\n\n     tf_frame_lock\n\n  "
  'name': 'tf_frame_lock'
  'repo': 'seabee3-ros-pkg'
- 'brief': 'ar_map_navigate_bumpers_explore'
  'description': "\n\n     ar_map_navigate_bumpers_explore\n\n  "
  'name': 'ar_map_navigate_bumpers_explore'
  'repo': 'brown-experimental'
- 'brief': 'omni_ethercat'
  'description': "\n    Control node for the mecanum wheel robotic base used at\n\
    \    TUM IAS. It is controlled by four EtherCAT controllers\n    which in turn\
    \ are controlled using the IgH EtherCAT master library.\n  "
  'name': 'omni_ethercat'
  'repo': 'tum-ros-pkg'
- 'brief': 'lse_roomba_2dnav'
  'description': "\n\n     Parameters and launch files for using the 2D navigation\
    \ stack on the Roomba robot.\n\n  "
  'name': 'lse_roomba_2dnav'
  'repo': 'lse_roomba_toolbox'
- 'brief': 'rcf_control_protocol'
  'description': "\n\n     rcf_control_protocol\n     \n     This package implements\
    \ the rcp roomba control protocol.\n     \n     The RCP Stack sends and receives\
    \ messages using peer to peer chat\n     interfaces such as rcf_skype. Other interfaces\
    \ could also be\n     incorporated.\n\n  "
  'name': 'rcf_control_protocol'
  'repo': 'roblab-whge-ros-pkg'
- 'brief': 'DC1394 Calibrated Camera Driver'
  'description': "\n    Customizable camera streaming using dc1394 ROS driver. Parameters\
    \ it uses:\n\n    display - shows the image on the local computer\n    cameraguid\
    \ - hex string, if specified will only open a camera with this guid\n    cameraindex\
    \ - index of the camera to start if cameraguid is not present\n    mode - any\
    \ one of opencv modes to set, for example: &quot;MODE_640x480_YUV422&quot;\n \
    \   framerate - number of frames a second to publish\n    KK_fx,KK_fy,KK_cx,KK_cy\
    \ - intrinsic parameters such that KK = [fx 0 cx; 0 fy cy; 0 0 1]\n    kc_k1,kc_k2,kc_p1,kc_2\
    \ - radial distortion coefficients to undistort the image\n    colorfilter - color\
    \ conversion for debayering, can be\n               &quot;COLOR_FILTER_RGGB&quot;,\
    \ &quot;COLOR_FILTER_GBRG&quot;, &quot;COLOR_FILTER_GRBG&quot;, &quot;COLOR_FILTER_BGGR&quot;\n\
    \    compression - how to compress the data before sending, can be &quot;none&quot;,\
    \ &quot;png&quot;, &quot;jpg&quot;, &quot;jpeg&quot;\n  "
  'name': 'usc_cameradc1394'
  'repo': 'usc-ros-pkg'
- 'brief': 'tf_lister'
  'description': "\n\n     tf_lister\n\n  "
  'name': 'tf_lister'
  'repo': 'bosch-ros-pkg'
- 'brief': 'SLAM-based navigation for the PR2 robot.'
  'description': "\n\n     This application allows the PR2 to navigate autonomously\
    \ while also building a map of its environment as it drives along.\n\n  "
  'name': 'pr2_2dnav_slam'
  'repo': 'wg-ros-pkg'
- 'brief': 'rtt_rosgraph_msgs'
  'description': "\n\n    Provides an rtt typekit for ROS rosgraph_msgs messages.\n\
    \n    It allows you to use ROS messages transparently in\n\t\tRTT components and\
    \ applications.\n\n\t\tThis package was automatically generated by the\n\t\tcreate_rtt_msgs\
    \ generator and should not be manually\n\t\tmodified.\n\n\t\tSee the http://ros.org/wiki/rosgraph_msgs\
    \ documentation\n\t\tfor the documentation of the ROS messages in this\n\t\ttypekit.\n\
    \n  "
  'name': 'rtt_rosgraph_msgs'
  'repo': 'rtt_ros_comm'
- 'brief': 'tf_trajectory_visualization'
  'description': "\n\n     tf_trajectory_visualization\n\n  "
  'name': 'tf_trajectory_visualization'
  'repo': 'tum-ros-pkg'
- 'brief': 'policy_library'
  'description': "\n\n     policy_library\n\n  "
  'name': 'policy_library'
  'repo': 'wg-ros-pkg'
- 'brief': 'mesh_teleop2'
  'description': "\n\n     mesh_teleop2\n\n  "
  'name': 'mesh_teleop2'
  'repo': 'brown-experimental'
- 'brief': 'turtlebot_actions'
  'description': "\n\n     turtlebot_actions provides several basic actionlib actions\
    \ for the TurtleBot.\n\n  "
  'name': 'turtlebot_actions'
  'repo': 'turtlebot_apps'
- 'brief': 'asctec_keyboard_teleop'
  'description': "\n\n     asctec_keyboard_teleop\n\n  "
  'name': 'asctec_keyboard_teleop'
  'repo': 'ccny_experimental'
- 'brief': 'Motion Planning Research for a Robotic Manipulator'
  'description': "\n\n    Benjamin Cohen - University of Pennsylvania\n    Advised\
    \ by:\n    Sachin Chitta - Willow Garage\n    Maxim Likhachev - Carnegie Mellon\
    \ University\n\n  "
  'name': 'sbpl_arm_planner'
  'repo': 'sbpl_arm_planning'
- 'brief': 'adc_sub20'
  'description': "\n\n     adc_sub20\n\n  "
  'name': 'adc_sub20'
  'repo': 'bosch-ros-pkg'
- 'brief': 'ros_soar'
  'description': "\n\tSelf controlling of an Erratic robot by a SOAR agent\n  "
  'name': 'ros_soar'
  'repo': 'rtc-us-ros-pkg-trunk'
- 'brief': 'neo_sick_s300'
  'description': "\n\n     neo_sick_s300\n\n  "
  'name': 'neo_sick_s300'
  'repo': 'neo_driver'
- 'brief': 'equilibrium_point_control'
  'description': "\n\n     Core functionality for using Equilibrium Point Control\
    \ with\n     different robots.\n\n  "
  'name': 'equilibrium_point_control'
  'repo': 'gt-ros-pkg'
- 'brief': 'pddl planner'
  'description': "\n    pddl planner\n  "
  'name': 'pddl_planner'
  'repo': 'jsk-ros-pkg'
- 'brief': 'nbv_arm_planning'
  'description': "\n\n     nbv_arm_planning\n\n  "
  'name': 'nbv_arm_planning'
  'repo': 'usc-ros-pkg'
- 'brief': 'TCP_RTAI'
  'description': "\n\n     TCP_RTAI\n\n  "
  'name': 'CB_TCP_RTAI'
  'repo': 'JKU_Robotic_Stack'
- 'brief': 'icreate_waypoints'
  'description': "\n\n     icreate_waypoints\n\n  "
  'name': 'icreate_waypoints'
  'repo': 'cmr-ros-pkg'
- 'brief': 'ias_descriptors_3d'
  'description': "\n\n     Feature descriptor library for 3-D data\n     \n  "
  'name': 'ias_descriptors_3d'
  'repo': 'tum-ros-pkg'
- 'brief': 'polonius_engine'
  'description': "\n\n     polonius_engine\n\n  "
  'name': 'polonius_engine'
  'repo': 'wu-ros-pkg'
- 'brief': 'create_webcam'
  'description': "\n\nThis package enables users to remotely view/transmit webcam\
    \ images and control an iRobot Create with a joystick.  Webcam images can be viewed\
    \ locally or they can be compressed and transmitted over the network.  A teleoperation\
    \ node is included to provide joystick control using the create_node package.\
    \  \n\n  "
  'name': 'create_webcam'
  'repo': 'ucsb-ros-pkg'
- 'brief': 'planner_navigation_actions'
  'description': "\n    This package contains state and action definitions for the\n\
    \    continual_planning_executive that interface the navigation stack.\n  "
  'name': 'planner_navigation_actions'
  'repo': 'alufr-ros-pkg'
- 'brief': 'projection_process_modules'
  'description': "\n\n     projection_process_modules\n\n  "
  'name': 'projection_process_modules'
  'repo': 'cram_physics'
- 'brief': 'Wubble-specific move_base configuration'
  'description': "\n        This package holds common configuration files for running\
    \ the\n        <a href=\"http://www.ros.org/wiki/move_base\">move_base</a> node\n\
    \        on the Wubble robot.\n    "
  'name': 'wubble_navigation_config'
  'repo': 'ua-ros-pkg'
- 'brief': 'Touchless teleop of PR2 using the Bosch Skin'
  'description': "\n\n\tThe skin_demo_movebase package allows users to teleop the\
    \ PR2's base using the Bosch Skin.\n\n  "
  'name': 'skin_demo_movebase'
  'repo': 'bosch-ros-pkg'
- 'brief': 'SimpleSphereDetector'
  'description': "\n\n     simple_sphere_detector\n\n  "
  'name': 'simple_sphere_detector'
  'repo': 'darpa_arm_sim_servers'
- 'brief': 'tf2_bullet'
  'description': "\n\n     tf2_bullet\n\n  "
  'name': 'tf2_bullet'
  'repo': 'geometry_experimental'
- 'brief': 'linksys_access_point'
  'description': "\n    A ROS node that controls a Linksys access point with\n   \
    \ a Linksys WRT610n-compatible web interface.\n  "
  'name': 'linksys_access_point'
  'repo': 'ros-pkg'
- 'brief': 'ros_scratch'
  'description': "\n\n     ros_scratch\n\n  "
  'name': 'ros_scratch'
  'repo': 'brown-experimental'
- 'brief': 'kinect_depth_calibration'
  'description': "\n\n     kinect_depth_calibration\n\n  "
  'name': 'kinect_depth_calibration'
  'repo': 'camera_pose'
- 'brief': ''
  'description': "\n        Cognitive Perception Server\n\n         Perception interface\
    \ to highlevel planning  (kipla)\n\n  "
  'name': 'cognitive_perception'
  'repo': 'ias_perception'
- 'brief': 'Simple cpp tests for cross-compiling'
  'description': "\n    This was primarily made for testing the mingw cross compiles.\n\
    \  "
  'name': 'eros_cpp_tutorials'
  'repo': 'eros'
- 'brief': 'continuous_ops_test_task'
  'description': "\n\n     continuous_ops_test_task\n\n  "
  'name': 'continuous_ops_test_task'
  'repo': 'continuous_ops'
- 'brief': 'hrl_kdl_arms'
  'description': "\n\n     hrl_kdl_arms\n\n  "
  'name': 'hrl_kdl_arms'
  'repo': 'gt-ros-pkg'
- 'brief': 'nbv_move_arm'
  'description': "\n\n     nbv_move_arm\n\n  "
  'name': 'nbv_move_arm'
  'repo': 'usc-ros-pkg'
- 'brief': 'path_generator'
  'description': "\n\n     path_generator\n\n  "
  'name': 'path_generator'
  'repo': 'brown-experimental'
- 'brief': 'turtlesim'
  'description': "\n\n     turtlesim is a tool made for teaching ROS and ROS-PKGS.\n\
    \n  "
  'name': 'turtlesim'
  'repo': 'ros_tutorials'
- 'brief': 'OpenRAVE Robot/Object Database Generation'
  'description': "\n    Uses ROS to parallelize the database generation processes\
    \ inside OpenRAVE.\n  "
  'name': 'openrave_database'
  'repo': 'jsk-ros-pkg'
- 'brief': 'ihr_demo_1'
  'description': "\n    I Heart Robotics ROS OpenCV Demos\n  "
  'name': 'ihr_opencv'
  'repo': 'iheart-ros-pkg'
- 'brief': 'summit_sbpl_nav'
  'description': "\n\n     summit_sbpl_nav\n\n  "
  'name': 'summit_sbpl_nav'
  'repo': 'summit-ros-pkg'
- 'brief': 'Process diagnostics log files for data'
  'description': "\n    The diagnostic_analysis package can convert a log of diagnostics\
    \ data\n    into a series of CSV files. Robot logs are recorded with rosbag, and\n\
    \    can be processed offline using the scripts in this package.\n  "
  'name': 'diagnostic_analysis'
  'repo': 'ros-pkg'
- 'brief': 'Driver for Agilent Technologies AC power supply'
  'description': "\nMonitors AC power from Agilent Technologies AC power supply. Uses\
    \ ethernet interface to communicate with device.\n  "
  'name': 'ac_power_monitor'
  'repo': 'wg-ros-pkg'
- 'brief': 'IEEE 1394 Digital Camera driver'
  'description': "\n    ROS driver for devices supporting the IEEE 1394 Digital Camera\n\
    \    (IIDC) protocol. Supports the ROS image_pipeline, using libdc1394\n    for\
    \ device access.\n  "
  'name': 'camera1394'
  'repo': 'camera1394'
- 'brief': 'sr_grasp_planner'
  'description': "\n\n\n    Plans grasps for unknown objects using the Shadow Dextrous\
    \ Hand.\n\n  "
  'name': 'sr_grasp_planner'
  'repo': 'shadow_robot'
- 'brief': 'coordination_server_info_fusion'
  'description': "\n\n     coordination_server_info_fusion\n\n  "
  'name': 'coordination_server_info_fusion'
  'repo': 'brown-experimental'
- 'brief': 'png_pcd_saver'
  'description': "\n\n     png_pcd_saver\n\n  "
  'name': 'png_pcd_saver'
  'repo': 'ubc-ros-pkg'
- 'brief': 'XML files for running global navigation assuming a static map on a PR2
    robot.'
  'description': "\n\n     This package holds XML files for running the <a href=\"\
    http://www.ros.org/wiki/move_base\">move_base</a> node on a PR2 robot. The <a\
    \ href=\"http://www.ros.org/wiki/move_base\">move_base</a> node is configured\
    \ to run over a pre-specified static map.\n\n  "
  'name': 'pr2_navigation_global'
  'repo': 'pr2_navigation'
- 'brief': 'test_rostest'
  'description': "\n\n     test_rostest\n\n  "
  'name': 'test_rostest'
  'repo': 'ros_comm'
- 'brief': 'GSLL'
  'description': "\n      GSLL a GSL wrapper for common lisp\n      http://common-lisp.net/project/gsll/\n\
    \  "
  'name': 'gsll'
  'repo': 'cram_pl'
- 'brief': 'octovis2'
  'description': "\n\n     octovis2\n\n  "
  'name': 'octovis2'
  'repo': 'wg-ros-pkg'
- 'brief': 'ccny_karto_mapper'
  'description': "\n\n     ccny_karto_mapper\n\n  "
  'name': 'ccny_karto_mapper'
  'repo': 'ccny_experimental'
- 'brief': 'move_head'
  'description': "\n\n     move_head\n\n  "
  'name': 'move_head'
  'repo': 'wg-ros-pkg'
- 'brief': 'xbee_interface'
  'description': "\n\n     xbee_interface\n\n  "
  'name': 'xbee_interface'
  'repo': 'vmi-ros-pkg'
- 'brief': 'rxdev'
  'description': "\n\n     rxDeveloper is a graphical tool for creating and editing\
    \ launchfiles\n\n  "
  'name': 'rxDev'
  'repo': 'rxdeveloper-ros-pkg'
- 'brief': 'sbl_teleop'
  'description': "\n\n     sbl_teleop\n\n  "
  'name': 'sbl_teleop'
  'repo': 'usc-ros-pkg'
- 'brief': 'asctec_highlevel firmware'
  'description': "\n\n     Firmware code for the Asctec Autopilot HighLevel Processor\
    \ \n\n  "
  'name': 'asctec_hl_firmware'
  'repo': 'asctec_mav_framework'
- 'brief': 'PureGev libraries for GeViCam cameras'
  'description': "\n\n    GeViCam camera PureGev libraries.\n\n  "
  'name': 'gevicam_puregev'
  'repo': 'wg-ros-pkg'
- 'brief': 'ride_core'
  'description': "\n\n     A meta package for containing RIDE code common to both\
    \ the agent and UI\n     There is no ROS code in here, but it beats duplicating\
    \ the library inside\n     multiple nodes.\n\n  "
  'name': 'ride_core'
  'repo': 'wu-ros-pkg'
- 'brief': 'ab_filter'
  'description': "\n\n     ab_filter\n\n  "
  'name': 'ab_filter'
  'repo': 'ccny_experimental'
- 'brief': 'cart_local_planner'
  'description': "\n\n     cart_local_planner\n\n  "
  'name': 'cart_local_planner'
  'repo': 'wg-ros-pkg'
- 'brief': 'asctec_height_control'
  'description': "\n\n     asctec_height_control\n\n  "
  'name': 'asctec_height_control'
  'repo': 'ccny_experimental'
- 'brief': 'pan_tilt_robotis'
  'description': "\n    Code to combine two Robotis servos to form a Pan Tilt Unit\
    \ (for a\n    stereo camera.)\n  "
  'name': 'pan_tilt_robotis'
  'repo': 'gt-ros-pkg'
- 'brief': 'arbitrator'
  'description': "\n\n    arbitrator determines which of several given potential robot\
    \ actions will be executed on the robot.\n\n  "
  'name': 'arbitrator'
  'repo': 'roboframenet'
- 'brief': 'Generates dense representation of laser data for PR2''s tilting laser'
  'description': "\n     Stores the data from a series of laser scan messages in a\
    \ dense representation, allowing\n     users to easily perform image-like operations\
    \ on intensity or range data. This package is\n     experimental. Expect APIs\
    \ to change.\n  "
  'name': 'pr2_dense_laser_snapshotter'
  'repo': 'pr2_calibration'
- 'brief': 'rtt_krypton_msgs'
  'description': "\n\n    Provides an rtt typekit for ROS krypton_msgs messages.\n\
    \n    It allows you to use ROS messages transparently in\n    RTT components and\
    \ applications.\n\n    This package was automatically generated by the\n    create_rtt_msgs\
    \ generator and should not be manually\n    modified.\n\n    See the http://ros.org/wiki/krypton_msgs\
    \ documentation\n    for the documentation of the ROS messages in this\n    typekit.\n\
    \n  "
  'name': 'rtt_krypton_msgs'
  'repo': 'krypton_hardware'
- 'brief': 'Python drivers for Robotis Dynamixel servos'
  'description': "\n        This package provides low level IO for Robotis Dynamixel\
    \ servos.\n        Fully supports and was tested with AX-12, AX-18, RX-24, RX-28,\n\
    \        MX-28, RX-64, EX-106 models. Hardware specific constants are\n      \
    \  defined for reading and writing information from/to Dynamixel\n        servos.\
    \ This low level package won't be used directly by most\n        ROS users. The\
    \ higher level dynamixel_controllers and specific\n        robot joint controllers\
    \ make use of this package.\n    "
  'name': 'dynamixel_driver'
  'repo': 'dynamixel_motor'
- 'brief': 'dynamic_window'
  'description': "\n\n     Dynamic window controller. For more details see      \n\
    \n&quot;Fox, D.; Burgard, W.; Thrun, S., &quot;The dynamic window approach to\
    \ collision avoidance&quot; Robotics and Automation Magazine, IEEE , vol.4, no.1,\
    \ pp.23-33, Mar 1997&quot;\n\n\n  "
  'name': 'dynamic_window'
  'repo': 'uuisrc-ros-pkg'
- 'brief': 'IR'
  'description': "\n\n     This package contains all of the softawre and information\
    \ needed to implement an IR sensor, based on the ATMega168 and interface it with\
    \ ROS. The safety node implemented here is designed for the texai robot, but other\
    \ could be easily implemented.\n\n  "
  'name': 'IR'
  'repo': 'wg-ros-pkg'
- 'brief': 'time_series'
  'description': "\n\n     Algorithms for analyzing multivariate time series, including\
    \ CAVE (Categorizing and Visualizing Episodes).\n\n  "
  'name': 'time_series'
  'repo': 'ua-ros-pkg'
- 'brief': 'pcl_ros_test'
  'description': "\n\n     pcl_ros_test\n\n  "
  'name': 'pcl_ros_test'
  'repo': 'wg-ros-pkg'
- 'brief': 'fastrak_mocap_driver'
  'description': "\n\n     fastrak_mocap_driver\n\n  "
  'name': 'fastrak_mocap_driver'
  'repo': 'eohan'
- 'brief': 'roseus_roseus'
  'description': "\n\n     roseus_smach\n\n     * Euslisp state machine class. it\
    \ will be moved.\n     * Message publisher for visualizing current state by smach_viewer.\n\
    \     * Simple pickle dump script for debugging state machine.\n     * Execute\
    \ state machine as a action server.\n\n  "
  'name': 'roseus_smach'
  'repo': 'jsk-ros-pkg'
- 'brief': 'perf_roscpp'
  'description': "\n\n     This is a set of performance tests for roscpp, mainly to\
    \ provide numbers to optimize against.\n\n  "
  'name': 'perf_roscpp'
  'repo': 'ros_comm'
- 'brief': 'mav_common'
  'description': "\n\n     mav_common\n\n  "
  'name': 'mav_common'
  'repo': 'ccny_experimental'
- 'brief': 'overhead_cam_description'
  'description': "\n\n     overhead_cam_description\n\n  "
  'name': 'overhead_cam_description'
  'repo': 'ua-ros-pkg'
- 'brief': 'Common ROS Messages'
  'description': "\n\nstd_msgs contains common message types representing primitive\
    \ data types and other basic message constructs, such as multiarrays. For common,\
    \ generic robot-specific message types, please see <a href=\"http://www.ros.org/wiki/common_msgs\"\
    >common_msgs</a>. \n\n  "
  'name': 'std_msgs'
  'repo': 'ros_comm'
- 'brief': 'maximus_2dnav'
  'description': "\n\n     maximus_2dnav\n\n  "
  'name': 'maximus_2dnav'
  'repo': 'smart-robotics-ros-pkg'
- 'brief': 'sr_robot_lib'
  'description': "\n\n     sr_robot_lib contains the robot library used in the sr_edc_ethercat_drivers.\
    \ The\n     library is used to store the incoming etherCAT messages in an easy\
    \ to access format,\n     and prepare the messages to be send through etherCAT.\n\
    \n  "
  'name': 'sr_robot_lib'
  'repo': 'shadow_robot_etherCAT'
- 'brief': 'staubli'
  'description': "\n\n     This is staubli TX60L package for ROS.\n\n  "
  'name': 'Staubli'
  'repo': 'cu-ros-pkg'
- 'brief': 'Simple Angular Math Utilities'
  'description': "\n      This package provides a set of simple math utilities to\
    \ work\n        with angles. The utilities cover simple things like\n        normalizing\
    \ an angle and conversion between degrees and\n        radians. But even if you're\
    \ trying to calculate things like\n        the shortest angular distance between\
    \ two joinst space\n        positions of your robot, but the joint motion is constrained\n\
    \        by joint limits, this package is what you need. The code in\n       \
    \ this packge is stable and well tested. There are no plans for\n        major\
    \ changes in the near future.\n  "
  'name': 'angles'
  'repo': 'geometry'
- 'brief': 'bolt_dialog'
  'description': "\n\n     bolt_dialog\n\n  "
  'name': 'bolt_dialog'
  'repo': 'ua-ros-pkg'
- 'brief': 'constraint_evaluators'
  'description': "\n\n     constraint_evaluators\n\n  "
  'name': 'constraint_evaluators'
  'repo': 'wg-ros-pkg'
- 'brief': 'image_array_viewer'
  'description': "\n\n     image_array_viewer\n\n  "
  'name': 'image_array_viewer'
  'repo': 'seabee3-ros-pkg'
- 'brief': 'tirt_tuning'
  'description': "\n\n     tirt_tuning\n\n  "
  'name': 'tirt_tuning'
  'repo': 'wg-ros-pkg'
- 'brief': 'ART vehicle simulator'
  'description': "\n\n     Simulator for Austin Robot Technology autonomous vehicle.\n\
    \n  "
  'name': 'simulator_art'
  'repo': 'utexas-art-ros-pkg'
- 'brief': 'cl_json_pl_server'
  'description': "\n\n     cl_json_pl_server\n\n  "
  'name': 'cl_json_pl_server'
  'repo': 'cram_highlevel'
- 'brief': 'elektron_navigation'
  'description': "\n\n     elektron_navigation\n\n  "
  'name': 'elektron_navigation'
  'repo': 'elektron_kinectbot'
- 'brief': 'laser_scan_sparsifier'
  'description': "\n\n  The laser_scan_sparsifier takes in a LaserScan message and\
    \ sparsifies it.\n\n  "
  'name': 'laser_scan_sparsifier'
  'repo': 'scan_tools'
- 'brief': 'A node for publishing joint angles'
  'description': "\n\tA node for publishing joint angles, either through a gui, or\
    \ with\n    default values. \n  "
  'name': 'joint_state_publisher'
  'repo': 'robot_model_visualization'
- 'brief': 'brics_actuator'
  'description': "\n\n     brics_actuator\n\n  "
  'name': 'brics_actuator'
  'repo': 'cob_common'
- 'brief': 'rve_properties'
  'description': "\n\n     rve_properties\n\n  "
  'name': 'rve_properties'
  'repo': 'visualization_engine'
- 'brief': 'ubc_vrs_data_collection'
  'description': "\n\n     ubc_vrs_data_collection - Helper scripts to add new data\
    \ to the database.\n\n  "
  'name': 'ubc_vrs_data_collection'
  'repo': 'ubc-ros-pkg'
- 'brief': 'pi_description'
  'description': "\n\n     URDF/Xacro files for Pi Robot\n\n  "
  'name': 'pi_description'
  'repo': 'pi-robot-ros-pkg'
- 'brief': '2010_icra_epc_pull'
  'description': "\n        This package contains code associated with the following\n\
    \        publication: \n        Pulling Open Doors and Drawers: Coordinating an\
    \ Omni-directional Base and a Compliant Arm with Equilibrium Point Control.\n\
    \        Advait Jain and Charles C. Kemp. IEEE International Conference on Robotics\
    \ and Automation (ICRA), 2010.\n  "
  'name': '2010_icra_epc_pull'
  'repo': 'gt-ros-pkg'
- 'brief': 'executive_srvc'
  'description': "\n      This node contains the executive used during the SRVC contest,\
    \ responsible for the high level behaviour of the robot.\n  "
  'name': 'executive_srvc'
  'repo': 'ubc-ros-pkg'
- 'brief': '3D Breadth First Search'
  'description': "\n\n    A class that provides a 3D Breadth First Search\n\n  "
  'name': 'bfs_3d'
  'repo': 'wg-ros-pkg'
- 'brief': 'Formatting contexts to input-output streams.'
  'description': "\n\n   The formatters here simply format various input types to\
    \ a specified\n   text format. They can be used with most streaming types (including\
    \ both\n   ecl and stl streams).\n\n  "
  'name': 'ecl_formatters'
  'repo': 'ecl_core'
- 'brief': 'unsharp_mask'
  'description': "\n\n     unsharp_mask\n\n  "
  'name': 'unsharp_mask'
  'repo': 'wg-ros-pkg'
- 'brief': ''
  'description': ''
  'name': 'mesh_registration'
  'repo': 'bosch-ros-pkg'
- 'brief': 'Footstep planning for humanoid robots'
  'description': "\n\n     <p>A footstep planner for humanoid / biped robots. The\
    \ planner builds on SBPL and has anytime (ARA*) as well as dynamic replanning\
    \ (AD*) capabilities.</p>\n     <p>Details can be found in the corresponding paper\
    \ <em>&quot;Humanoid Navigation with Dynamic Footstep Plans&quot;</em>\n     by\
    \ J. Garimort, A. Hornung, and M. Bennewitz; published in \n     Proc. of the\
    \ IEEE International Conference on Robotics &amp; Automation (ICRA), 2011</p>\n\
    \n  "
  'name': 'footstep_planner'
  'repo': 'alufr-ros-pkg'
- 'brief': 'rtcus_kinect_skeleton_tracker'
  'description': "\n\n\t\trtcus_kinect_skeleton_tracker\n\n  "
  'name': 'rtcus_kinect_skeleton_tracker'
  'repo': 'rtc-us-ros-pkg-branches'
- 'brief': 'Code to control an Animatics Smart Servo. We use the Animatics servos
    to control Festo linear actuators.'
  'description': "\n  "
  'name': 'zenither'
  'repo': 'gt-ros-pkg'
- 'brief': 'pr2_gripper_grasp_controller'
  'description': "\n\n    Implementation of the hand posture grasp controller for\
    \ the PR2\n    gripper.\n\n  "
  'name': 'pr2_gripper_grasp_controller'
  'repo': 'wg-ros-pkg'
- 'brief': 'Messages for the navigation stack'
  'description': "\n\n    nav_msgs defines the common messages used to interact with\
    \ the\n<a href=\"http://ros.org/wiki/navigation\">navigation</a> stack.\n\n  "
  'name': 'nav_msgs'
  'repo': 'ros-pkg'
- 'brief': 'capture'
  'description': "\n        Capture is a tool for periodic image capturing with digital\
    \ Canon cameras. It is licensed under GPL  and it was developed for Linux. Although\
    \ there were some attempts to port the underlying libptp to MacOS, i do not know\
    \ if this effort was successful. \n    "
  'name': 'capture'
  'repo': 'ubc-ros-pkg'
- 'brief': 'sbpl_doors'
  'description': ' sbpl_doors '
  'name': 'sbpl_doors'
  'repo': 'sbpl_door_planning'
- 'brief': 'corobot_srvs'
  'description': "\n\n     Package reuniting the Corobot's specific services.\n\n\
    \  "
  'name': 'corobot_srvs'
  'repo': 'roscorobot'
- 'brief': 'OctoMap2'
  'description': "\n    A probabilistic, flexible, and compact 3D mapping library\
    \ for robotic systems.\n  "
  'name': 'octomap2'
  'repo': 'wg-ros-pkg'
- 'brief': 'semantic_label_3d'
  'description': "\n\n     This labels a kinect pointcloud with semantic labels like\
    \ wall, chair, table, computer, monitor, printer etc.\n     It also contains tools\
    \ to segment , label and transform pointclouds. See url for more details\n\n  "
  'name': 'semantic_label_3d'
  'repo': 'scene_labelling_rgbd'
- 'brief': 'Command line argument passing by TCLAP'
  'description': "\n     Embeds the TCLAP library inside the ecl. This is a very convenient\n\
    \     command line parser in templatised c++.\n  "
  'name': 'ecl_command_line'
  'repo': 'ecl_core'
- 'brief': 'Camera Application'
  'description': "\nA web application to view camera images.\n  "
  'name': 'camera_application'
  'repo': 'wg-ros-pkg'
- 'brief': 'terminal_tools'
  'description': "\n    Common terminal routines, useful for printing with colors,\
    \ parsing command line arguments, etc.\n  "
  'name': 'terminal_tools'
  'repo': 'ros-pkg'
- 'brief': 'wpdps1'
  'description': "\n\n     wpdps1\n\n  "
  'name': 'wpdps1'
  'repo': 'wpdros'
- 'brief': 'triangulate_point_cloud'
  'description': "\n\n     triangulate_point_cloud\n\n  "
  'name': 'triangulate_point_cloud'
  'repo': 'cram_physics'
- 'brief': 'nolan3d'
  'description': "\n\n     nolan3d\n\n  "
  'name': 'nolan3d'
  'repo': 'brown-experimental'
- 'brief': 'wubble2_arm_navigation'
  'description': "\n\n     wubble2_arm_navigation\n\n  "
  'name': 'wubble2_arm_navigation'
  'repo': 'ua-ros-pkg'
- 'brief': 'android'
  'description': "\n    \n    VMI Android Mobile Main Package.\n\n    This package\
    \ is not part of a ROS Package. It needs to be handled in a special way. Still\
    \ - it's beta.\n \n  "
  'name': 'android'
  'repo': 'vmi-ros-pkg'
- 'brief': ''
  'description': 'A demo of  2-D navigation.'
  'name': '2dnav_erratic'
  'repo': 'wg-ros-pkg'
- 'brief': 'robotiq'
  'description': "\n\n     robotiq\n\n  "
  'name': 'robotiq'
  'repo': 'swri-ros-pkg'
- 'brief': 'robotis'
  'description': "\n    This package is designed to operate, query, and control Robotis\n\
    \    Dynamixel 'smart' Servos using a USB2Dynamixel adaptor.  It has\n    been\
    \ tested on the RX-28 and RX-64 servo variants.\n  "
  'name': 'robotis'
  'repo': 'gt-ros-pkg'
- 'brief': 'stanford_parser_msgs'
  'description': "\n\n    stanford_parser_msgs contains common messages used within\
    \ stanford_parser and stanford_parser_ros, along with the message interfaces that\
    \ these packages use.  Further, stanford_parser_msgs contains Python libraries\
    \ for unflattening the parse trees contained in the Parse message.\n\n  "
  'name': 'stanford_parser_msgs'
  'repo': 'roboframenet'
- 'brief': 'tod_converter'
  'description': "\n  Convert bases from textured_object_detection to the new format.\n\
    \  "
  'name': 'tod_converter'
  'repo': 'wg-ros-pkg'
- 'brief': ''
  'description': 'ROS wrapper for Barrett low-level controllers (which are contained
    in BarrettWAM) and inverse kinematics library. The current version of this package
    includes interfacing of quintic trajectory control functions with BarrettWAM (takes
    care of PrepQuintic and PrepQuintic2 functions in BarrettWAM). '
  'name': 'WAMinterface'
  'repo': 'ubc-ros-pkg'
- 'brief': 'head_monitor_msgs'
  'description': "\n\n     head_monitor_msgs\n\n  "
  'name': 'head_monitor_msgs'
  'repo': 'arm_navigation_experimental'
- 'brief': 'cmd_vel_safety_filter'
  'description': "\n\n     cmd_vel_safety_filter\n\n  "
  'name': 'cmd_vel_safety_filter'
  'repo': 'parsec'
- 'brief': ''
  'description': 'Operates shadow hand from keyboard input'
  'name': 'teleop_srh_keyboard'
  'repo': 'wg-ros-pkg'
- 'brief': 'xdot'
  'description': "\n    <a href=\"http://code.google.com/p/jrfonseca/wiki/XDot\">XDot,\
    \ by Jose Fonseca</a>, \n    is an interactive viewer for graphs written in Graphviz's\
    \ dot\n    language.\n\n    This package adds front-end capabilities to XDot including\
    \ WX Widget\n    support and a mechanism for receiving callbacks when nodes are\
    \ clicked. This extension is provided as BSD.\n\n  "
  'name': 'xdot'
  'repo': 'rx'
- 'brief': 'camberwell'
  'description': "\nCamberwell is the rough begining of a rosbridge testing suite.\
    \ The initial focus\nis on throughput and message integrity.\n  "
  'name': 'camberwell'
  'repo': 'brown-experimental'
- 'brief': 'OpenRAVE Services through ROS'
  'description': "\n    Main openrave server that provides a session interface.\n\
    \  "
  'name': 'openraveros'
  'repo': 'jsk-ros-pkg'
- 'brief': 'gestures'
  'description': "\n    Social gestures for the PR2\n  "
  'name': 'gestures'
  'repo': 'wg-ros-pkg'
- 'brief': 'line_follower'
  'description': "\n    Follows a line using cliffFrontLeftSignal as a guide.  Will\
    \ stop if it bumps into anything.  Calibrates initially using cliffFrontLeftSignal\
    \ (on line) and cliffFrontRightSignal (off line).  You'll probably want a teleop\
    \ to steer the robot onto the line after calibration (or, you can place it by\
    \ hand).\n  "
  'name': 'line_follower'
  'repo': 'brown-experimental'
- 'brief': 'continuous_ops_executive'
  'description': "\n\n     continuous_ops_executive\n\n  "
  'name': 'continuous_ops_executive'
  'repo': 'continuous_ops'
- 'brief': 'plumesim'
  'description': "\n\n     PlumeSim is an odor plume simulator for ROS. It is able\
    \ to generate plumes for simulations or to real robots. Current plume sources\
    \ include gaussian and meadering models, plumesim log files and CFD Fluent log\
    \ files.\n\n  "
  'name': 'plumesim'
  'repo': 'simulator_plumesim'
- 'brief': 'Transform Library Conversions'
  'description': "\n\n   This package contains a set of conversion functions to convert\n\
    common tf datatypes (point, vector, pose, etc) into semantically\nidentical datatypes\
    \ used by other libraries. The conversion functions\nmake it easier for users\
    \ of the transform library (tf) to work with\nthe datatype of their choice. Currently\
    \ this package has support for\nthe Kinematics and Dynamics Library (KDL) and\
    \ the Eigen matrix\nlibrary. This package is stable, and will get integrated into\
    \ tf in\nthe next major release cycle (see roadmap).\n\n  "
  'name': 'tf_conversions'
  'repo': 'geometry'
- 'brief': 'position_tracker_web'
  'description': "\n     position_tracker_web\n  "
  'name': 'position_tracker_web'
  'repo': 'brown-experimental'
- 'brief': 'Dynamically reconfigure parameters'
  'description': "\n    This package provides a class to facilitate dynamic node\n\
    \    reconfiguration. This package is still under development, and should be\n\
    \    considered unstable except for features that are explicitely marked as\n\
    \    stable in the documentation.\n  "
  'name': 'dynamic_reconfigure'
  'repo': 'dynamic_reconfigure'
- 'brief': 'rovio_teleop'
  'description': "\n\n     The rovio_teleop package maps joystick commands to velocity\
    \ commands. Joystick buttons are used to control the position of the head.\n\n\
    \  "
  'name': 'rovio_teleop'
  'repo': 'iheart-ros-pkg'
- 'brief': 'Cartesian Motion'
  'description': "\n        This package contains a cartesian motion task.\n\t   \
    \ Part of the iTaSC-Skill framework, itasc_tasks.\n    "
  'name': 'joint_motion'
  'repo': 'itasc_tasks'
- 'brief': 'calibration'
  'description': "\n\n     calibration\n\n  "
  'name': 'calibration'
  'repo': 'ubc-ros-pkg'
- 'brief': 'tour_guide_executive'
  'description': "\n\n     tour_guide_executive\n\n  "
  'name': 'tour_guide_executive'
  'repo': 'cwru-ros-pkg'
- 'brief': 'image_sync'
  'description': "\n\n     image_sync\n\n  "
  'name': 'image_sync'
  'repo': 'seabee3-ros-pkg'
- 'brief': 'Python classes to control/read the PR2 joints'
  'description': "\n\n     A set of convenient Python classes to read the values from\
    \ the PR2 joints and \n     execute actions. It supports storing a joints configuration\
    \ on a file to be recalled later.\n     Reading joint values from cartesian coordinates\
    \ using IK is also supported.  \n\n  "
  'name': 'pr2_control_utilities'
  'repo': 'uuisrc-pr2-pkgs'
- 'brief': 'System configuration macros, types and sniffer functions.'
  'description': "\n\n     These tools inspect and describe your system with macros,\
    \ types \n     and functions.\n\n  "
  'name': 'ecl_config'
  'repo': 'ecl_lite'
- 'brief': ''
  'description': 'URDF file descriptions for P2OS/ARCOS robots'
  'name': 'p2os_urdf'
  'repo': 'usc-ros-pkg'
- 'brief': 'Resources for building qt-ros applications'
  'description': "\n     \n\tCurrently just maintains a cmake api for simplifying\
    \ the building\n\tof qt apps within the ros framework.\n\t\n  "
  'name': 'qt_build'
  'repo': 'qt_ros'
- 'brief': 'network_detector'
  'description': "\n\n     A ROS node that watches a given network interface and publishes\n\
    \     whether it is both UP and RUNNING (indicating that a cable is\n     plugged\
    \ into it and communication is happening, for instance) or\n     not.\n\n  "
  'name': 'network_detector'
  'repo': 'ros-pkg'
- 'brief': 'dynamic graph OpenHRP plug-in.'
  'description': "\n\n    FIXME\n\n  "
  'name': 'sot-openhrp'
  'repo': 'jrl-ros-pkg'
- 'brief': 'Statistical methods for control systems'
  'description': "\n\n     Common statistical structures and algorithms for control\
    \ systems.\n\n  "
  'name': 'ecl_statistics'
  'repo': 'ecl_core'
- 'brief': 'choreonoid'
  'description': "\n\n     choreonoid\n\nThis program has been developed by Shin'ichiro\
    \ Nakaoka and Choreonoid Development Team, AIST.\n\nThis program is free software;\
    \ you can redistribute it and/or modify it under the terms of\nthe GNU Lesser\
    \ General Public License as published by the Free Software Foundation; either\
    \ \nversion 2.1 of the License, or (at your option) any later version.\n\nThis\
    \ package is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\
    \ \nwithout even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\
    \ PURPOSE. \nSee the GNU Lesser General Public License for more details.\n\nThe\
    \ source and some binary packages of this program also include the following third-party\
    \ \nlibraries:\n\n* Eigen (http://eigen.tuxfamily.org/)\n* IJG JPEG Library (http://www.ijg.org/)\n\
    * libpng (http://www.libpng.org/pub/png/libpng.html)\n* LibYAML (http://pyyaml.org/wiki/LibYAML)\n\
    * OPCODE (http://www.codercorner.com/Opcode.htm)\n* zlib (http://zlib.net/)\n\n\
    These libraries are used and redistributed under the terms of their licenses.\
    \ Please see\nthe corresponding directories in the source package or their official\
    \ web sites to see the\ndetails of their licenses.\n\nThis program also depends\
    \ on a lot of other external libraries, which are linked into this\nprogram during\
    \ the execution. Some binary packages of this program may include the binaries\n\
    of the following libraries:\n\n* Qt (http://qt.nokia.com/)\n* OpenSceneGraph (http://www.openscenegraph.org)\n\
    * Boost C++ Libraries (http://www.boost.org/)\n\nPlease see their official web\
    \ sites to see the details of their licenses.\n\n  "
  'name': 'choreonoid'
  'repo': 'rtm-ros-robotics/rtmros_common'
- 'brief': 'astromech_emo'
  'description': "\n\n     astromech_emo: Package to maintain the &quot;emotional\
    \ state&quot; of an Astromech unit\n\n  "
  'name': 'astromech_emo'
  'repo': 'astromech-ros'
- 'brief': 'launch files for starting up Kurt in Gazebo'
  'description': "\n\n     This package contains launch files for starting up Kurt\
    \ in the Gazebo simulator.\n\n  "
  'name': 'kurt_gazebo'
  'repo': 'uos-ros-pkg'
- 'brief': 'rostweet_msgs'
  'description': "\n\n     ROS messages for rostweet\n\n  "
  'name': 'rostweet_msgs'
  'repo': 'uji-ros-pkg'
- 'brief': 'parsec_pinger'
  'description': "\n\n     parsec_pinger\n\n  "
  'name': 'parsec_pinger'
  'repo': 'parsec'
- 'brief': 'maximus_position'
  'description': "\n\n     maximus_position\n\n  "
  'name': 'maximus_position'
  'repo': 'smart-robotics-ros-pkg'
- 'brief': 'neo_description_mpo_500'
  'description': "\n\n     neo_description_mpo_500\n\n  "
  'name': 'neo_description_mpo_500'
  'repo': 'neo_common'
- 'brief': 'wifi_sniffer'
  'description': "\n    Sniffs for nearby wifi access points and publishes the ssid\
    \ and signal\n    strengths.\n  "
  'name': 'wifi_sniffer'
  'repo': 'stanford-ros-pkg'
- 'brief': 'PR2 Web UI'
  'description': '

    A web interface to install and launch applications for the PR2.

    '
  'name': 'webui'
  'repo': 'wg-ros-pkg'
- 'brief': 'base_libs'
  'description': "\n\n     base_libs\n\n  "
  'name': 'base_libs'
  'repo': 'seabee3-ros-pkg'
- 'brief': 'rcf_com_spherePTZ'
  'description': "\n\n     This package controls the quickcam-driver.\n\n  "
  'name': 'rcf_com_spherePTZ'
  'repo': 'roblab-whge-ros-pkg'
- 'brief': 'stereocamera-v4l2-ros-pkg'
  'description': "\n\n     ROS driver for V4L2 based stereo camera\n\n  "
  'name': 'stereocamera-v4l2-ros-pkg'
  'repo': 'stereocamera-v4l2-ros-pkg'
- 'brief': 'This package supplies the portrait_bot stack with both a face extraction
    and portrait taking tool and a gui.'
  'description': "\n\n\tface_finder\n\n\t"
  'name': 'face_finder'
  'repo': 'alufr-ros-pkg'
- 'brief': 'Dynamic graph'
  'description': "\n\n    FIXME\n\n  "
  'name': 'dynamic-graph'
  'repo': 'jrl-ros-pkg'
- 'brief': 'tod_detecting'
  'description': "\n\n\t\ttod_detecting\n\n  "
  'name': 'tod_detecting'
  'repo': 'wg-ros-pkg'
- 'brief': 'rosgraph_msgs'
  'description': "\n\n     Messages relating to the ROS Computation Graph. These are\
    \ generally considered to be low-level messages that end users do not interact\
    \ with.\n\n  "
  'name': 'rosgraph_msgs'
  'repo': 'ros_comm'
- 'brief': 'mock_objects'
  'description': "\n\t\t\n     Mock objects for representing subscribers, service\
    \ servers and action libs, used for testing.\n\n  "
  'name': 'mock_objects'
  'repo': 'pandora-auth-ros-pkg'
- 'brief': 'rosweb'
  'description': "\n\n     rosweb is a temporary package to replace the original rosweb\
    \ in the ROS\n     repository.  It is placed in the sandbox while development\
    \ is ongoing, so\n     we are not gated on ROS stack releases.  When the server\
    \ is more stable,\n     it will be moved to the ROS repository and replace the\
    \ old rosweb.\n\n  "
  'name': 'rosweb'
  'repo': 'wg-ros-pkg'
- 'brief': 'assisted_teleop'
  'description': "\n\n     assisted_teleop\n\n  "
  'name': 'assisted_teleop'
  'repo': 'navigation_experimental'
- 'brief': 'checkerboard_pose'
  'description': "\n\n     checkerboard_pose\n\n  "
  'name': 'checkerboard_finder'
  'repo': 'wg-ros-pkg'
- 'brief': 'continuous_ops_web'
  'description': "\n\n     continuous_ops_web\n\n  "
  'name': 'continuous_ops_web'
  'repo': 'continuous_ops'
- 'brief': 'table_boundary_detector'
  'description': "\n\n     table_boundary_detector\n\n  "
  'name': 'table_boundary_detector'
  'repo': 'wg-ros-pkg'
- 'brief': 'laban_requestors'
  'description': "\n\n     Package holds clients who generate motion waypoint sequences\
    \ in\n     Cartesian space. The sequences follow Laban principles. The\n     sequences\
    \ are submitted to laban_service for execution.\n\n  "
  'name': 'laban_requestors'
  'repo': 'wg-ros-pkg'
- 'brief': 'cob_machine'
  'description': "\n\n     This package contains the xxx.machine files that describe\
    \ the different hosts a node can be spawned on. Currently there are machine files\
    \ for each Care-O-bot, and one for the simulated Care-O-bot.\n\n  "
  'name': 'cob_machine'
  'repo': 'cob_robots'
- 'brief': 'logger'
  'description': "\n\n     logger\n\n  "
  'name': 'logger'
  'repo': 'usc-ros-pkg'
- 'brief': 'visual_arm_calibration'
  'description': "\n\n     visual_arm_calibration\n\n  "
  'name': 'visual_arm_calibration'
  'repo': 'wg-ros-pkg'
- 'brief': 'pi_opencv'
  'description': "\n\n     pi_opencv\n\n  "
  'name': 'pi_opencv'
  'repo': 'pi-robot-ros-pkg'
- 'brief': 'cob_calibration_executive'
  'description': "\n\n     cob_calibration_executive\n\n  "
  'name': 'cob_calibration_executive'
  'repo': 'cob_calibration'
- 'brief': 'cotesys_ros_grasping'
  'description': "\n\n     cotesys_ros_grasping\n\n  "
  'name': 'cotesys_ros_grasping'
  'repo': 'tum-ros-pkg'
- 'brief': 'pcacontrollers'
  'description': "\n     Perception-Cognition-Action Loop Controller\n  "
  'name': 'ce_pca'
  'repo': 'vmi-ros-pkg'
- 'brief': 'adls'
  'description': "\n\n  "
  'name': 'adl_pr2_log'
  'repo': 'gt-ros-pkg'
- 'brief': 'libptp'
  'description': "\n\n     Provides a package to communicate with cameras.\n\n  "
  'name': 'libptp'
  'repo': 'roblab-whge-ros-pkg'
- 'brief': 'joint_trajectory_action'
  'description': "\n\n     The joint_trajectory_action is a node that exposes an action\
    \ interface\n     to a joint trajectory controller.\n\n  "
  'name': 'joint_trajectory_action'
  'repo': 'wg-ros-pkg'
- 'brief': 'keyboard_smooth'
  'description': "\n\n     keyboard_smooth\n\n  "
  'name': 'keyboard_smooth'
  'repo': 'bosch-ros-pkg'
- 'brief': 'cereal_port'
  'description': "\n\n     Simple C++ serial port class for ROS.\n\n  "
  'name': 'cereal_port'
  'repo': 'serial_communication'
- 'brief': 'Half-steps based pattern generator'
  'description': "\n\n    This packages provides a pattern generator based on half-steps\
    \ for\n    dimensionality reduction.\n\n    It generates feet, center of mass\
    \ and ZMP trajectories for\n    humanoids robots from a set of 2d footprints.\n\
    \n  "
  'name': 'halfsteps_pattern_generator'
  'repo': 'stacks/humanoid_walk'
- 'brief': 'Remaps joystick buttons and axes.'
  'description': "\n\t\tThis node can be used to remap the buttons and axes of a joystick\
    \ to\n\t\tget them into a standard form that other nodes can then use\n\t\tindependently\
    \ of which joystick is actually being used.\n  "
  'name': 'joystick_remapper'
  'repo': 'ua-ros-pkg'
- 'brief': 'texai_speed_test'
  'description': "\n\n     texai_speed_test\n\n  "
  'name': 'texai_speed_test'
  'repo': 'wg-ros-pkg'
- 'brief': 'Control Toolbox'
  'description': "\n    The control toolbox contains modules that are useful across\
    \ all controllers.\n  "
  'name': 'control_toolbox'
  'repo': 'wg-ros-pkg'
- 'brief': 'IEEE 1394 Digital Camera driver'
  'description': "\n\n    This is a ROS driver for devices supporting the IEEE 1394\
    \ Digital\n    Camera (IIDC) protocol. It supports the ROS image_pipeline, using\n\
    \    libdc1394 for device access.\n\n  "
  'name': 'camera1394v2'
  'repo': 'flyatar'
- 'brief': 'rtt_actionlib_msgs'
  'description': "\n\n    Provides an rtt typekit for ROS actionlib_msgs messages.\n\
    \n    It allows you to use ROS messages transparently in\n    RTT components and\
    \ applications.\n\n    This package was automatically generated by the\n    create_rtt_msgs\
    \ generator and should not be manually\n    modified.\n\n    See the http://ros.org/wiki/actionlib_msgs\
    \ documentation\n    for the documentation of the ROS messages in this\n    typekit.\n\
    \n  "
  'name': 'rtt_actionlib_msgs'
  'repo': 'rtt_common_msgs'
- 'brief': 'roar_msgs'
  'description': "\n\n   Message package for the ROAR stack\n\n  "
  'name': 'roar_msgs'
  'repo': 'roar_stack'
- 'brief': 'compressed_image_transport'
  'description': "\n\n     compressed_image_transport provides a plugin to image_transport\
    \ for transparently sending images\n     compressed as JPEG or PNG.\n\n  "
  'name': 'compressed_image_transport'
  'repo': 'ros-pkg'
- 'brief': 'joint_states_listener'
  'description': "\n\n     joint_states_listener\n\n  "
  'name': 'joint_states_listener'
  'repo': 'brown-experimental'
- 'brief': 'rl_agent'
  'description': "\n\n     A set of reinforcement learning agents to learn various\
    \ tasks. In addition, a framework for model based agents where any model learning\
    \ and/or planning methods can be substituted in. Developed by <a href=\"http://www.cs.utexas.edu/~todd/\"\
    >Todd Hester</a> and <a href=\"http://www.cs.utexas.edu/~pstone/\">Peter Stone</a>\
    \ at the University of Texas at Austin.\n\n  "
  'name': 'rl_agent'
  'repo': 'rl-texplore-ros-pkg'
- 'brief': 'DPPanTilt_msgs'
  'description': "\n\n     DPPanTilt_msgs\n\n  "
  'name': 'DPPanTilt_msgs'
  'repo': 'darpa_arm_msgs'
- 'brief': 'cob_camera_sensors'
  'description': "\n  \n\tFor more information read the readme.htm file located in\
    \ <i>cob_driver/cob_camera_sensors</i>.\n\t\n  "
  'name': 'cob_camera_sensors'
  'repo': 'cob_driver'
- 'brief': 'Humanoids Walking ROS Interface'
  'description': "\n\n    ROS Interfaces used to generated humanoid robots walking\n\
    \    movements.\n\n  "
  'name': 'walk_msgs'
  'repo': 'stacks/humanoid_walk'
- 'brief': 'mavconn_asctec'
  'description': "\n\n     mavconn_asctec\n\n  "
  'name': 'mavconn_asctec'
  'repo': 'mavlink-ros-pkg'
- 'brief': 'naoExpmnt'
  'description': "\n\n     naoExpmnt\n\n  "
  'name': 'naoExpmnt'
  'repo': 'brown-experimental'
- 'brief': 'Common files for the ILS Social Robotics Lab'
  'description': "\n    Description and launch files for common hardware in the ILS\
    \ Social Robotics Lab.\n  "
  'name': 'albany_common'
  'repo': 'albany-ros-pkg'
- 'brief': 'neo_serrelayboard'
  'description': "\n\n     neo_serrelayboard\n\n  "
  'name': 'neo_serrelayboard'
  'repo': 'neo_driver'
- 'brief': 'A Microsoft Kinect camera ROS driver'
  'description': "\n\n    A general purpose ROS driver for the Microsoft XBOX 360\
    \ Kinect sensor. The driver publishes:\n    <ul>\n      <li> RGB/IR image data</li>\n\
    \      <li> depth data as PointCloud and PointCloud2</li>\n      <li> ... </li>\n\
    \    </ul>\n    \n    There are two versions of the driver: a standard ROS node,\
    \ and a nodelet. \n\n  "
  'name': 'kinect_camera'
  'repo': 'cyphy'
- 'brief': 'The Kinematics and Dynamics Library (latest)'
  'description': "\n\nThis package contains a recent version of the Kinematics and\
    \ Dynamics\nLibrary (KDL), distributed by the Orocos Project. It is a meta-package\
    \ that depends on orocos_kdl which contains the c++ version and python_orocos_kdl\
    \ which contains the generated python bindings \n\n"
  'name': 'kdl'
  'repo': 'orocos_kinematics_dynamics'
- 'brief': 'nxtstatus'
  'description': "\n\t\tNXTStatus\n\t"
  'name': 'nxtstatus'
  'repo': 'lejos'
- 'brief': 'drive_base_action'
  'description': "\n\n     drive_base_action\n\n  "
  'name': 'drive_base_action'
  'repo': 'tum-ros-pkg'
- 'brief': 'CH Robotics CHR-6dm IMU URDF description'
  'description': "\n        Continas xacro macros for CHR-6dm IMU.\n    "
  'name': 'chr_6dm_imu_description'
  'repo': 'ua-ros-pkg'
- 'brief': 'bosch-ros-pkg worlds'
  'description': "\n    Worlds used in simulation for demoing bosch-ros-pkg packages.\n\
    \  "
  'name': 'bosch_worlds'
  'repo': 'bosch-ros-pkg'
- 'brief': 'reduced_joint_state_publisher'
  'description': "\n\n     reduced_joint_state_publisher\n\n  "
  'name': 'reduced_joint_state_publisher'
  'repo': 'brown-experimental'
- 'brief': 'Messages for actionlib'
  'description': "\n     actionlib_msgs defines the common messages to interact with\
    \ an\n     action server and an action client.  For full documentation of\n  \
    \   the actionlib API see\n     the <a href=\"http://www.ros.org/wiki/actionlib\"\
    >actionlib</a>\n     package.\n  "
  'name': 'actionlib_msgs'
  'repo': 'ros-pkg'
- 'brief': 'cob_3d_mapping_pipeline_fake'
  'description': "\n\n     cob_3d_mapping_pipeline_fake\n\n  "
  'name': 'cob_3d_mapping_pipeline_fake'
  'repo': 'cob_environment_perception'
- 'brief': 'rttuning_utils'
  'description': "\n\n     Realtime Tuning Utilities\n\n  "
  'name': 'rttuning_utils'
  'repo': 'wg-ros-pkg'
- 'brief': 'engagement_msgs'
  'description': "\n\t\tengagement_msgs is a package which collects the messages for\
    \ the enagement stack.\n    "
  'name': 'engagement_msgs'
  'repo': 'ros-engagement'
- 'brief': 'twitcurl'
  'description': "\n\nThis package contains a recent version of the twitcurl library\
    \ (http://code.google.com/p/twitcurl/).\nThis ROS package does not intend to modify\
    \ twitcurl\nin any way, it simply provides a convenient way to download and\n\
    compile the library, because twitcurl is not available from an OS package\nmanager.\
    \ However, this package might contain some temporary patches to\ntwitcurl while\
    \ they are being applied upstream, or while a permanent fix\nfor a problem is\
    \ being discussed by the twitcurl community.\n\n  "
  'name': 'twitcurl'
  'repo': 'uji-ros-pkg'
- 'brief': 'Trivial service interface to eSpeak TTS System'
  'description': "\n\n    A trivial text-to-speech system to serve as a small reference\
    \ \n    for more interesting packages to come. \n\n    "
  'name': 'espeak'
  'repo': 'ua-ros-pkg'
- 'brief': 'pi_speech_tutorial'
  'description': "\n\n     ROS Tutorial for using pocketsphinx and TTS\n\n  "
  'name': 'pi_speech_experimental'
  'repo': 'pi-robot-ros-pkg'
- 'brief': 'A gui for the manipulator'
  'description': "\n\tA node for displaying the SCHUNK status flags, and allowing\
    \ slider control of the joint velocities / positions.\n  "
  'name': 'schunk_gui'
  'repo': 'uuisrc-ros-pkg'
- 'brief': 'ronin: rospy adapter for masterless nodes'
  'description': "\n\n     Ronin adapts the rospy API to enable masterless nodes.\
    \ It is expected that ronin nodes have proxy nodes that attach them to whatever\
    \ master is necessary.\n\n  "
  'name': 'ronin'
  'repo': 'multimaster_experimental'
- 'brief': ''
  'description': 'Located Object Server'
  'name': 'jlo'
  'repo': 'ias_perception'
- 'brief': 'adept_common'
  'description': "\n\n     adept_common\n\n  "
  'name': 'adept_common'
  'repo': 'swri-ros-pkg'
- 'brief': 'wm_arm_teleop'
  'description': "\n\n     wm_arm_teleop\n\n  "
  'name': 'wm_arm_teleop'
  'repo': 'penn_lightweight_teleop'
- 'brief': 'ART vehicle common headers'
  'description': "\n\n     Common headers and utilities for the Austin Robot Technology\n\
    \     automomous vehicle.\n\n  "
  'name': 'art_common'
  'repo': 'utexas-art-ros-pkg'
- 'brief': 'hrpsys and ROS bridge software, launch script and examples'
  'description': "\n\nSummary: If you use real robot, start [robot]_ros_bridge.launch.\
    \ For simulation environment, start [robot].launch. This script usually contains\
    \ test code with the sample client program.\n\n[robot]_ros_bridge.launch : This\
    \ file launches ros bridge software for specifi robot type. When you use real\
    \ robot, launch this script after the robot started up (usually the script is\
    \ named [robot]_startup.launch under the robot specific package), when you use\
    \ the simulation, you do not have to call this sript, but use the [robot].launch\
    \ file.\n\n[robot].launch : This file start the simulated robot in OpenHRP3 and\
    \ the ROS bridge software. This script contains test tag to start sammple (EusLisp)\
    \ client program\n\n[robot]_nosim.launch : This file is non dynamics version of\
    \ [robot].launch\n\nFollowing scripts are only for internal usage:\n\n[robot]_startup.launch\
    \ : This file start simulation robot in OpenHRP3 software.\n\n[robot]_startup_nosim.launch\
    \ : This file start simulated robot in OpenHRP3 software with out forward dynamics\
    \ calculation.\n\nhrpsys_ros_bridge.launch : hrpsys and ROS bridge software core\
    \ launch script, this script is usually included from other script.\n\n\n\n  "
  'name': 'hrpsys_ros_bridge'
  'repo': 'rtm-ros-robotics/rtmros_common'
- 'brief': 'grasp_playpen'
  'description': "\n\n     grasp_playpen\n\n  "
  'name': 'grasp_playpen'
  'repo': 'wg-ros-pkg'
- 'brief': 'wviz_kinematic_manager'
  'description': "\n\n     wviz_kinematic_manager\n\n  "
  'name': 'wviz_kinematic_manager'
  'repo': 'bosch-ros-pkg'
- 'brief': 'Example qt tutorials, styled on roscpp_tutorials'
  'description': "\n\n     Example qt programs, generated from code similar to that\
    \ used by the \n     roscreate-qt-pkg script and styled on roscpp_tutorials.\n\
    \n  "
  'name': 'qt_tutorials'
  'repo': 'qt_ros'
- 'brief': 'cob_linear_nav'
  'description': "\n\n     cob_linear_nav\n\n  "
  'name': 'cob_linear_nav'
  'repo': 'cob_navigation'
- 'brief': 'session_tutorials'
  'description': "\n\n     session_tutorials\n\n  "
  'name': 'session_tutorials'
  'repo': 'jsk-ros-pkg'
- 'brief': 'mdlslm'
  'description': "\n\n     mdl Laser scanner driver\n\n  "
  'name': 'mdl_slm'
  'repo': 'csiro-asl-ros-pkg'
- 'brief': 'denso_arm'
  'description': "\n\n     This is a package to control the Denso arm through ROS\
    \ (http://www.densorobotics.com).\n\n  "
  'name': 'denso_arm'
  'repo': 'shadow_robot'
- 'brief': 'bag_to_images'
  'description': "\n\n     bag_to_images\n\n  "
  'name': 'bag_to_images'
  'repo': 'wg-ros-pkg'
- 'brief': ''
  'description': ''
  'name': 'mesh_generator'
  'repo': 'bosch-ros-pkg'
- 'brief': 'Gazebo Plugins for Personal Robots'
  'description': "\n    Gazebo Plugins for various PR2-specific sensors and actuators\
    \ on the robot.\n  "
  'name': 'sr_gazebo_plugins'
  'repo': 'shadow_robot'
- 'brief': 'tests for roslisp'
  'description': "\n\nTests for roslisp\n\n  "
  'name': 'test_roslisp'
  'repo': 'roslisp_support'
- 'brief': 'katana_interpolated_ik_motion_planner'
  'description': "\n\n     katana_interpolated_ik_motion_planner\n\n  "
  'name': 'katana_interpolated_ik_motion_planner'
  'repo': 'uos-ros-pkg'
- 'brief': ''
  'description': "\n    Simple tools for stereo camera calibration (to be deprecated\
    \ by dcam/ost from ros-pkg).\n  "
  'name': 'camera_calibration_standalone'
  'repo': 'tum-ros-pkg'
- 'brief': 'A collection of utlities/scripts for working with jsk packages'
  'description': "<![CDATA[\n\nIncludes emacs scripts, ros tool alias generator, and\
    \ launch doc generator.\n   \n  ]]>"
  'name': 'jsk_tools'
  'repo': 'jsk-ros-pkg'
- 'brief': 'jaus'
  'description': "\n\n     cwru_jaus\n\n  "
  'name': 'cwru_jaus'
  'repo': 'cwru-ros-pkg'
- 'brief': 'ar_filter'
  'description': "\n    The ar_filter works with the perfesser node to provide location\
    \ estimates\n    based on observations of AR tags at known locations.\n  "
  'name': 'ar_filter'
  'repo': 'brown-experimental'
- 'brief': 'Rosen Vision Functions'
  'description': "\n    Various functions for vision processing.\n    If using Matlab,\
    \ make sure to extract one of the OpenTSTOOL archives and build the package.\n\
    \  "
  'name': 'rvision'
  'repo': 'cmu-ros-pkg'
- 'brief': 'rawlog_play'
  'description': "\n\n     rawlog_play\n\n  "
  'name': 'rawlog_play'
  'repo': 'mrpt-ros-pkg'
- 'brief': 'teleop_wii'
  'description': "\n     Wiimote teleop control for base control (uses the nunchuk).\
    \ The hat of\n     the nunchuck controls forward/sideways, roll controls turning.\
    \ Z is the\n     deadman's control.\n  "
  'name': 'teleop_wii'
  'repo': 'tum-ros-pkg'
- 'brief': 'rosfawkes'
  'description': "\n     This package integrates Fawkes into ROS.\n  "
  'name': 'rosfawkes'
  'repo': 'rosfawkes'
- 'brief': 'tirt_controller'
  'description': "\n\n     A realtime controller that triggers the tirt update cycle.\n\
    \n  "
  'name': 'tirt_controller'
  'repo': 'wg-ros-pkg'
- 'brief': 'ros_epic_fail'
  'description': "\n    Experimental package to create bag failures of test failures\
    \ on the build server.\n  "
  'name': 'ros_epic_fail'
  'repo': 'ros_experimental'
- 'brief': 'flirtlib_ros'
  'description': "\n\nROS wrapper for FLIRTLib 3rd party package    \n\n  "
  'name': 'flirtlib_ros'
  'repo': 'flirtlib_features'
- 'brief': 'elektron_monitor'
  'description': "\n\n     elektron_monitor\n\n  "
  'name': 'elektron_monitor'
  'repo': 'elektron_robot'
- 'brief': 'roslisp runtime dependencies'
  'description': "\n\n     roslisp runtime dependencies. This package enables SBCL\
    \ to be installed separately from the main ros stack, where roslisp is located.\n\
    \n  "
  'name': 'roslisp_runtime'
  'repo': 'roslisp_support'
- 'brief': 'feature_extractor'
  'description': "\n\n     feature_extractor_fpfh\n\n  "
  'name': 'feature_extractor_fpfh'
  'repo': 'gt-ros-pkg'
- 'brief': 'A basic navigator node for an AUV.'
  'description': "\n\n    This simple navigator node serves as an example of hybrid\
    \ use of Heriot-Watt Unversity's internal OceanSHELL/ALI messages for sensor data,\
    \ and ROS messages for the higher levels.  \n\n  "
  'name': 'auv_nav'
  'repo': 'hwu-osl-ros-pkg'
- 'brief': 'comp_cop'
  'description': "\n\n     Interface between KnowRob and the CoP cognitive perception\
    \ system\n     that allows to query for objects to perceive and listens on the\n\
    \     cop_answers topic for results, also for results of object perception\n \
    \    triggered by someone else.\n\n     The results are asserted in the knowledge\
    \ base and made available for reasoning.\n\n  "
  'name': 'comp_cop'
  'repo': 'knowrob'
- 'brief': 'b21_description'
  'description': "\n\n     b21_description\n\n  "
  'name': 'b21_description'
  'repo': 'wu-ros-pkg'
- 'brief': 'cob_gazebo_worlds'
  'description': "\n\n     This package provides some worlds for gazebo simulation.\n\
    \n  "
  'name': 'cob_gazebo_worlds'
  'repo': 'cob_environments'
- 'brief': 'stage'
  'description': "\n\n     stage\n\n  "
  'name': 'stage'
  'repo': 'flyatar'
- 'brief': 'roomba_stage'
  'description': "\n\n     roomba_stage\n\n  "
  'name': 'roomba_stage'
  'repo': 'navigation_tutorials'
- 'brief': 'JRL robot dynamics implementation'
  'description': "\n\n    FIXME\n\n  "
  'name': 'jrl-dynamics'
  'repo': 'jrl-ros-pkg'
- 'brief': 'trigger_msgs'
  'description': "\n\n     trigger_msgs\n\n  "
  'name': 'trigger_msgs'
  'repo': 'wg-ros-pkg'
- 'brief': 'elektron_bringup'
  'description': "\n\n     elektron_bringup\n\n  "
  'name': 'elektron_bringup'
  'repo': 'elektron_robot'
- 'brief': 'pgr_camera_driver'
  'description': "\n\t\tA ROS node to provide access to Point Grey Research cameras,\
    \ using the\n\t\tFlyCapture2 SDK API\n\t\tAcknowledgement: This package is based\
    \ largely on the prosilica_camera package,\n\t\tby Patrick Mihelich (http://www.ros.org/wiki/prosilica_camera).\n\
    \t\tOriginally developed by Patrick Bouffard.\n\t\tReason for branching from original\
    \ package: \n\t\t<ol>\n\t\t    <li>For better calibration purposes (with ROS camera_calibration\
    \ pkg) it needs to use the camera_info_manager package. See example launch files.</li>\n\
    \t\t    <li>Adding support for color cameras</li>\n\t\t</ol>\n\t"
  'name': 'pgr_camera_driver'
  'repo': 'ccny_drivers'
- 'brief': 'cwru_obstacle_planner'
  'description': "\n\n     cwru_obstacle_planner\n\n  "
  'name': 'cwru_obstacle_planner'
  'repo': 'cwru-ros-pkg'
- 'brief': 'a viewer of pddl_planner'
  'description': "\n    a viewer of pddl_planner.\n  "
  'name': 'pddl_planner_viewer'
  'repo': 'jsk-ros-pkg'
- 'brief': 'Test PR2 kernel until it breaks'
  'description': "\n\n     pr2_kernel_hammer\n\n  "
  'name': 'pr2_kernel_hammer'
  'repo': 'wg-ros-pkg'
- 'brief': 'engagement_srvs'
  'description': "\n        engagement_srvs is a package which collects the services\
    \ for the enagement stack.\n    "
  'name': 'engagement_srvs'
  'repo': 'ros-engagement'
- 'brief': 'petsc_test'
  'description': "\n\n     petsc_test\n\n  "
  'name': 'petsc_test'
  'repo': 'wg-ros-pkg'
- 'brief': 'cylindrical_marker_finder'
  'description': "\n\n     cylindrical_marker_finder\n\n  "
  'name': 'cylindrical_marker_finder'
  'repo': 'usc-ros-pkg'
- 'brief': 'turtlebot_arm_description'
  'description': "\n\n     turtlebot_arm_description contains URDF files and meshes\
    \ for the TurtleBot arm.\n\n  "
  'name': 'turtlebot_arm_description'
  'repo': 'turtlebot_arm'
- 'brief': 'jlo_navp_process_module'
  'description': "\n\n     jlo_navp_process_module\n\n  "
  'name': 'jlo_navp_process_module'
  'repo': 'cram_rosie'
- 'brief': 'Tools relating to self-tests.'
  'description': "\n    <p>  \n      A self_test is a service call provided by a node\
    \ that triggers a\n      test of the driver and any associated hardware. This\
    \ service call can\n      be used by users to quickly verify that a device or\
    \ process is working.\n      Currently self-tests are mainly used with drivers,\
    \ but nothing\n      precludes non-driver nodes using them.\n    </p>\n    <p>\
    \  \n      The self_test package contains tools to for calling the self-test\n\
    \      service from the command-line, or from a regression test. It also\n   \
    \   provides a C++ API for facilitating writing of self-tests.  \n    </p>\n  "
  'name': 'self_test'
  'repo': 'ros-pkg'
- 'brief': 'nxt_teleop'
  'description': "\n\n     nxt_teleop provides keyboard and joystick interfaces for\
    \ some of nxt robots provided in the nxt_robots stack.\n\n  "
  'name': 'nxt_teleop'
  'repo': 'foote-nxt'
- 'brief': 'kinematic_model_estimation'
  'description': "\n\n     kinematic_model_estimation\n\n  "
  'name': 'kinematic_model_estimation'
  'repo': 'rtc-us-ros-pkg-branches'
- 'brief': 'rosmultimaster_test'
  'description': "\n\tA test package for rosmultimaster.\n\n  "
  'name': 'rosmultimaster_test'
  'repo': 'wu-ros-pkg'
- 'brief': 'dock_detect'
  'description': "\n\n    Package to detect the location of the Guiabot's triangular\
    \ dock. \n\tLineFit - fits line segments to the 2D laser scan \n\n  "
  'name': 'dock_detect'
  'repo': 'cyphy'
- 'brief': 'qnd_calibration'
  'description': "\n\n     qnd_calibration\n\n  "
  'name': 'qnd_calibration'
  'repo': 'vanadium-ros-pkg'
- 'brief': 'cob_command_gui'
  'description': "\n\n     This package provides a simple GUI for operating Care-O-bot.\n\
    \n  "
  'name': 'cob_command_gui'
  'repo': 'cob_command_tools'
- 'brief': 'dynamixel_hardware_interface'
  'description': "\n        dynamixel_hardware_interface\n    "
  'name': 'dynamixel_hardware_interface'
  'repo': 'ua-ros-pkg'
- 'brief': 'lcp_proxy'
  'description': "\n\n     lcp_proxy\n\n  "
  'name': 'lcp_proxy'
  'repo': 'lejos-ros-pkg'
- 'brief': 'network_control_tests'
  'description': "\n    Test suite for the packages that are part of the &quot;WiFi\
    \ Test Setup&quot; project:\n    network_monitor_udp, network_traffic_control,\
    \ hostapd_access_point, linksys_access_point,\n    ddwrt_access_point.\n  "
  'name': 'network_control_tests'
  'repo': 'ros-pkg'
- 'brief': 'joy2twist_segway_rmp'
  'description': "\n\n     joy2twist_segway_rmp\n\n  "
  'name': 'joy2twist_segway_rmp'
  'repo': 'segway-rmp-ros-pkg'
- 'brief': 'R1_teleop_joy'
  'description': "\n\n     R1_teleop_joy\n\n  "
  'name': 'R1_teleop_joy'
  'repo': 'JKU_Robotic_Stack'
- 'brief': 'The CRAM plan language.'
  'description': "\n    The CRAM plan language is the core of the CRAM framework.\
    \ It\n    provides the basic functionality to write flexible and robust\n    robot\
    \ control programs.\n  "
  'name': 'cram_language'
  'repo': 'cram_pl'
- 'brief': 'katana_msgs contains messages specific to the Katana arm'
  'description': "\n\n     This package contains messages specific to the Neuronics\
    \ Katana arm.\n\n  "
  'name': 'katana_msgs'
  'repo': 'uos-ros-pkg'
- 'brief': ''
  'description': ''
  'name': 'mesh_segmentation'
  'repo': 'bosch-ros-pkg'
- 'brief': 'worldmodel_ops'
  'description': "\n\n     worldmodel_ops\n\n  "
  'name': 'worldmodel_ops'
  'repo': 'worldmodel'
- 'brief': 'turtlebot_kinect'
  'description': "\n\n     This package contains launch files which run some of the\
    \ demos from the clearpath_kinect stack on the TurtleBot platform.\n\n  "
  'name': 'turtlebot_kinect'
  'repo': 'clearpath-ros-pkg'
- 'brief': ''
  'description': "\n    Object data acquisition using the DP PTU47 unit.\n  "
  'name': 'data_acquisition_ptu'
  'repo': 'wg-ros-pkg'
- 'brief': 'c3_hlac'
  'description': "\n\n     C3-HLAC feature extraction from RGB point cloud.\n\n  "
  'name': 'c3_hlac'
  'repo': 'isi-ros-pkg'
- 'brief': 'artoolkit'
  'description': "\n\t     Artoolkit Library\n\t"
  'name': 'artoolkit'
  'repo': 'ccny_vision'
- 'brief': 'pp_explorer'
  'description': "\n\n     Particle plume exploration algorithm.\n\n  "
  'name': 'pp_explorer'
  'repo': 'odor_search'
- 'brief': 'rosalyn'
  'description': "\n    Configuration and launch files for ROSalyn.\n  "
  'name': 'rosalyn'
  'repo': 'albany-ros-pkg'
- 'brief': 'vosch'
  'description': "\n\n     VOSCH feature extraction from RGB point cloud.\n\n  "
  'name': 'vosch'
  'repo': 'mapping'
- 'brief': 'bayesian_grasp_planner'
  'description': "\n\n     bayesian_grasp_planner\n\n  "
  'name': 'bayesian_grasp_planner'
  'repo': 'wg-ros-pkg'
- 'brief': 'Drivers for the ArbotiX'
  'description': "\n    Bindings and low-level controllers for ArbotiX-powered robots.\n\
    \  "
  'name': 'arbotix_python'
  'repo': 'vanadium-ros-pkg'
- 'brief': 'Simple Python viewer for dynamic-graph.'
  'description': "\n\n    FIXME\n\n  "
  'name': 'robot-viewer'
  'repo': 'jrl-ros-pkg'
- 'brief': 'omnix'
  'description': "\n\n     omnix\n\n  "
  'name': 'omnix'
  'repo': 'gt-ros-pkg'
- 'brief': 'cram_pr2_executive'
  'description': "\n\n     cram_pr2_executive\n\n  "
  'name': 'cram_pr2_executive'
  'repo': 'cram_pr2'
- 'brief': 'simple_arm_server'
  'description': ''
  'name': 'simple_arm_server'
  'repo': 'vanadium-ros-pkg'
- 'brief': 'proximity_sensor_tf'
  'description': "\n\n     proximity_sensor_tf\n\n  "
  'name': 'proximity_sensor_tf'
  'repo': 'bosch-ros-pkg'
- 'brief': 'dynamic_graph_actionlib'
  'description': "\n\n     dynamic_graph_actionlib\n\n  "
  'name': 'dynamic_graph_actionlib'
  'repo': 'stacks/redundant_manipulator_control'
- 'brief': 'pr2_gripper_sensor_msgs'
  'description': "\n\n  The pr2_gripper_sensor_msgs package contains various actions\
    \ and messages that are used in the pr2_gripper_sensor* packages. The structure\
    \ of the API used by pr2_gripper_sensor_action, and pr2_gripper_sensor_controller\
    \ packages is as follows: \n\nUsers will send a goal to an Action in the message\
    \ format of PR2Gripper*Command (where * replaces the name of the particular Action\
    \ from pr2_gripper_sensor_action). Feedback and Result information for the action\
    \ is then returned in the format of PR2Gripper*Data.\n\n  "
  'name': 'pr2_gripper_sensor_msgs'
  'repo': 'wg-ros-pkg'
- 'brief': 'create_supervisor'
  'description': "\n\n     create_supervisor\n\n  "
  'name': 'create_supervisor'
  'repo': 'brown-experimental'
- 'brief': 'skeleton_markers'
  'description': "\n    Skeleton Markers: Publish a list of joint markers for viewing\
    \ in RViz\n  "
  'name': 'skeleton_markers'
  'repo': 'pi-robot-ros-pkg'
- 'brief': 'twist_recovery'
  'description': "\n\n     twist_recovery\n\n  "
  'name': 'twist_recovery'
  'repo': 'navigation_experimental'
- 'brief': 'A simple wrapper around pocketsphinx speech recognizer.'
  'description': "\n    A simple wrapper around the pocket sphinx speech recognizer,\
    \ using gstreamer. \n  "
  'name': 'pocketsphinx'
  'repo': 'albany-ros-pkg'
- 'brief': 'Contains executable for teleoperation of PR2 head'
  'description': "\n  Teleop head keyboard moves the head from keyboard commands.\
    \ Used in \n  pr2_head_cart. Only works on PR2 head.\n  "
  'name': 'teleop_head'
  'repo': 'wg-ros-pkg'
- 'brief': 'controllersAndSensors_communications'
  'description': "\n\n     The controllersAndSensors_communications contains messages\
    \ and services for the contollersAndSensors.\n\n  "
  'name': 'controllersAndSensors_communications'
  'repo': 'pandora-auth-ros-pkg'
- 'brief': 'stereo_synchronizer'
  'description': "\n\n     stereo_synchronizer\n\n  "
  'name': 'stereo_synchronizer'
  'repo': 'jsk-ros-pkg'
- 'brief': 'beckhoff_ethercat_hardware'
  'description': "\n\n    ethercat_hardware plugins for Beckhoff EtherCAT devices\n\
    \n  "
  'name': 'beckhoff_ethercat_hardware'
  'repo': 'wg-ros-pkg'
- 'brief': 'odometry_publisher_tutorial'
  'description': "\n\n     odometry_publisher_tutorial\n\n  "
  'name': 'odometry_publisher_tutorial'
  'repo': 'navigation_tutorials'
- 'brief': 'pi_actions'
  'description': "\n\n     pi_actions\n\n  "
  'name': 'pi_actions'
  'repo': 'pi-robot-ros-pkg'
- 'brief': 'sr_object_manipulation_launch'
  'description': "\n\n     sr_object_manipulation_launch\n\n  "
  'name': 'sr_object_manipulation_launch'
  'repo': 'sr_object_manipulation'
- 'brief': ''
  'description': 'A 2D Path Planning System'
  'name': 'base_planner_cu'
  'repo': 'prairiedog'
- 'brief': 'object_manipulator'
  'description': "\n\n     Core functionality for pickup and place tasks. Services\
    \ Pickup\n     and Place action goals.\n\n  "
  'name': 'object_manipulator'
  'repo': 'wg-ros-pkg'
- 'brief': 'scikits'
  'description': "\n\n     scikits\n\n  "
  'name': 'scikits'
  'repo': 'ua-ros-pkg'
- 'brief': 'neo_gazebo_plugins'
  'description': "\n\tcontains a gazebo mecanum controller\n    "
  'name': 'neo_gazebo_plugins'
  'repo': 'neo_common'
- 'brief': 'manipulation_transforms'
  'description': "\n\n    manipulation_transforms: a library for mapping poses and\
    \ twists back and forth\n    between an object and the one or more effectors in\
    \ rigid contact with it.  Can\n    be used for querying object position and velocity\
    \ from effector actions, and \n    for achieving desired object trajectories with\
    \ the effectors.  This will probably\n    see use mainly for 2-arm manipulation\
    \ tasks like cart pushing.\n\n  "
  'name': 'manipulation_transforms'
  'repo': 'wg-ros-pkg'
- 'brief': 'parsec_odometry'
  'description': "\n\n     parsec_odometry\n\n  "
  'name': 'parsec_odometry'
  'repo': 'parsec'
- 'brief': 'esm_tracking'
  'description': "\n\n     esm_tracking\n\n  "
  'name': 'esm_tracking'
  'repo': 'wg-ros-pkg'
- 'brief': 'Applanix POS-LV driver'
  'description': "\n\n     ROS driver for the Applanix Position and Orientation System\
    \ for\n     Land Vehicles (POS-LV).\n\n  "
  'name': 'applanix'
  'repo': 'utexas-art-ros-pkg'
- 'brief': ''
  'description': "\n\t\tHardware and software synchronized cameras using physically\
    \ modified\n\t\tPS3 EyeToy cameras.\n\t"
  'name': 'stereo_webcam'
  'repo': 'stereo_webcam'
- 'brief': 'graspable_features_data_generation'
  'description': "\n\n     graspable_features_data_generation are used to generate\
    \ bad grasps and voxelgrids to the database\n\n  "
  'name': 'graspable_features_data_generation'
  'repo': 'wg-ros-pkg'
- 'brief': 'jtalk_node using AquesTalk'
  'description': "\n\n    jtalk_node is Japanese talk node.\n    jtalk_node uses AquesTalk(http://www.a-quest.com/download/index.html).\n\
    \    It subscribe /talk (std_msgs/String) and speak it.\n    /talk is Roman style\
    \ Japanese, like &quot;Konnichiwa&quot;.\n    play command of &quot;sox&quot;\
    \ is used for play sound data.\n    \n  "
  'name': 'jtalk_node'
  'repo': 'otl-ros-pkg'
- 'brief': 'joint_spline_trajectory_generator'
  'description': "\n\n     joint_spline_trajectory_generator\n\n  "
  'name': 'joint_spline_trajectory_generator'
  'repo': 'orocos_controllers'
- 'brief': 'karto'
  'description': "\n\n     This package pulls in the Karto mapping library, and provides\
    \ a ROS\n     wrapper for using it.\n\n  "
  'name': 'karto'
  'repo': 'ros-pkg'
- 'brief': 'cob_hardware_config'
  'description': "\n\n     This package contains configuration for each robot instance\
    \ (e.g. cob3-1, cob3-2,...). There is a directory for each robot with configuration\
    \ about urdf, hardware configuration and calibration values.\n\n  "
  'name': 'cob_hardware_config'
  'repo': 'cob_robots'
- 'brief': 'pr2_pose'
  'description': "\n\n     pr2_pose\n\n  "
  'name': 'pr2_pose'
  'repo': 'pr2_photoshoot'
- 'brief': 'pedestrian_detector_HOG'
  'description': "\n\n     pedestrian_detector_HOG\n\n  "
  'name': 'pedestrian_detector_HOG'
  'repo': 'wg-ros-pkg'
- 'brief': 'rosie_move_base'
  'description': "\n\n     rosie_move_base\n\n  "
  'name': 'rosie_move_base'
  'repo': 'tum-ros-pkg'
- 'brief': 'pelican_launch'
  'description': "\n\n     pelican_launch\n\n  "
  'name': 'pelican_launch'
  'repo': 'ccny_experimental'
- 'brief': 'cob_generic_states'
  'description': "\n\n     This package provides a set of generic states using [[cob_script_server]]\
    \ and [[smach]] which can be used in multiple scenarios.\n\n  "
  'name': 'cob_generic_states'
  'repo': 'cob_scenarios'
- 'brief': 'demo1_sung'
  'description': "\n\n     demo1_sung\n\n  "
  'name': 'demo1_sung'
  'repo': 'seabee3-ros-pkg'
- 'brief': 'cortex_stream'
  'description': "\n     A ROS interface for the Motion Analysis (Cortex) Motion Capture\
    \ System's Network Stream\n  "
  'name': 'cortex_stream'
  'repo': 'alufr-ros-pkg'
- 'brief': 'neo_platformctrl_mecanum'
  'description': "\n\n     neo_platformctrl_mecanum\n\n  "
  'name': 'neo_platformctrl_mecanum'
  'repo': 'neo_driver'
- 'brief': 'rtt_visualization_msgs'
  'description': "\n\n    Provides an rtt typekit for ROS visualization_msgs messages.\n\
    \n    It allows you to use ROS messages transparently in\n    RTT components and\
    \ applications.\n\n    This package was automatically generated by the\n    create_rtt_msgs\
    \ generator and should not be manually\n    modified.\n\n    See the http://ros.org/wiki/visualization_msgs\
    \ documentation\n    for the documentation of the ROS messages in this\n    typekit.\n\
    \n  "
  'name': 'rtt_visualization_msgs'
  'repo': 'rtt_common_msgs'
- 'brief': 'python_tutorial'
  'description': "\n\n     python_tutorial\n\n  "
  'name': 'python_tutorial'
  'repo': 'eohan'
- 'brief': 'kingfisher_bringup'
  'description': "\n    This package provides launch files which bring up the Kingfisher\n\
    \    base platform and sensors in recommended configurations.\n  "
  'name': 'kingfisher_bringup'
  'repo': 'clearpath-ros-pkg'
- 'brief': 'dynamic_tf_publisher'
  'description': "\n\n     dynamic_tf_publisher\n\n  "
  'name': 'dynamic_tf_publisher'
  'repo': 'jsk-ros-pkg'
- 'brief': 'door_msgs'
  'description': "\n    Messages for door opening\n  "
  'name': 'door_msgs'
  'repo': 'pr2_doors'
- 'brief': 'pythonmodules'
  'description': "\n\n     pythonmodules\n\n  "
  'name': 'pythonmodules'
  'repo': 'flyatar'
- 'brief': 'nav_core'
  'description': "\n\nThis package provides common interfaces for navigation specific\
    \ robot actions. Currently, this package provides the BaseGlobalPlanner, BaseLocalPlanner,\
    \ and RecoveryBehavior interfaces, which can be used to build actions that can\
    \ easily swap their planner, local controller, or recovery behavior for new versions\
    \ adhering to the same interface.\n\n  "
  'name': 'nav_core'
  'repo': 'navigation'
- 'brief': 'Messages for the capabilties system'
  'description': "\n    Provides message and service definitions for a ROS capabilities\
    \ system.\n  "
  'name': 'capabilities_msgs'
  'repo': 'vanadium-ros-pkg'
- 'brief': 'schunk_kinematics'
  'description': "\n\n     Schunk arm kinematics\n     \n     This is essentially\
    \ David Lu's kinematics node with the addition of \n     inverse velocity kinematics.\n\
    \n  "
  'name': 'schunk_kinematics'
  'repo': 'uuisrc-ros-pkg'
- 'brief': 'vslam_demo'
  'description': "\n    Demo of vslam_system, using both point-to-point matches from\
    \ image matching\n    and point-plane matches from pointcloud data.\n  "
  'name': 'vslam_demo'
  'repo': 'wg-ros-pkg'
- 'brief': 'rosjava_tutorial_pubsub'
  'description': "\n     rosjava_tutorial_pubsub\n  "
  'name': 'rosjava_tutorial_pubsub'
  'repo': 'rosjava_core'
- 'brief': 'ompl_ros_interface'
  'description': "\n\n     ompl_ros_interface\n\n  "
  'name': 'ompl_ros_interface'
  'repo': 'arm_navigation'
- 'brief': 'cython_node'
  'description': "\n\n     cython_node\n\n  "
  'name': 'cyton_node'
  'repo': 'rtc-us-ros-pkg-trunk'
- 'brief': 'camera_interpolation'
  'description': "\n\n     camera_interpolation\n\n  "
  'name': 'camera_interpolation'
  'repo': 'seabee3-ros-pkg'
- 'brief': 'rxgraph'
  'description': "\n\n     rxgraph is a command-line tool for visualizing a ROS computation\
    \ graph. The rxgraph is a new package in ROS 1.1 that provides an updated version\
    \ of the rxgraph tool that was originally distributed in the rosgraph package.\n\
    \n  "
  'name': 'rxgraph'
  'repo': 'rx'
- 'brief': 'zeroconf services on avahi for ros'
  'description': "\n\n     Provides zeroconf services on avahi for ros systems.\n\
    \     This is a c++ implementation.\n\n  "
  'name': 'zeroconf_avahi'
  'repo': 'zeroconf_implementations'
- 'brief': 'tf2_msgs'
  'description': "\n\n     tf2_msgs\n\n  "
  'name': 'tf2_msgs'
  'repo': 'geometry_experimental'
- 'brief': 'hrl_pr2_gains'
  'description': "\n\n     hrl_pr2_gains\n\n  "
  'name': 'hrl_pr2_gains'
  'repo': 'gt-ros-pkg'
- 'brief': 'The Phidgets Python API'
  'description': "\n\n    This package contains the Official Phidgets Python API.\n\
    \n  "
  'name': 'phidgets_py_api'
  'repo': 'ua-ros-pkg'
- 'brief': 'stargazer_cu'
  'description': "\n\n     indoor global positioning system for use with stargazer\
    \ sensor\n\n  "
  'name': 'stargazer_cu'
  'repo': 'prairiedog'
- 'brief': 'nelson'
  'description': "\n    Configuration and launch files for Nelson\n  "
  'name': 'nelson'
  'repo': 'albany-ros-pkg'
- 'brief': 'pr2_description'
  'description': "\n\n  This package contains the description (mechanical, kinematic,\
    \ visual,\n  etc.) of the PR2 robot.  The files in this package are parsed and\
    \ used by\n  a variety of other components.  Most users will not interact directly\n\
    \  with this package.\n\n  "
  'name': 'pr2_description'
  'repo': 'wg-ros-pkg'
- 'brief': 'armadillo_calibration'
  'description': "\n\n     armadillo_calibration\n\n  "
  'name': 'armadillo_calibration'
  'repo': 'swri-ros-pkg'
- 'brief': 'ROS build system integration for rosjava.'
  'description': "\n    Provide ROS build system integration and bootstrap data classes\
    \ (Time and\n    Message representation) for rosjava.\n  "
  'name': 'rosjava_bootstrap'
  'repo': 'rosjava_core'
- 'brief': 'asctec_hl_firmware'
  'description': "\n\n     Firmware code for the Asctec Autopilot HighLevel Processor\
    \ \n\n  "
  'name': 'ccny_asctec_firmware'
  'repo': 'ccny_experimental'
- 'brief': ''
  'description': 'A set of message filters which take in messages and may output those
    messages at a later time, based on the conditions that filter needs met.'
  'name': 'message_filters'
  'repo': 'ros_comm'
- 'brief': 'humanoid_recognizers'
  'description': "\n\n     humanoid_recognizers\n\n  "
  'name': 'humanoid_recognizers'
  'repo': 'usc-ros-pkg'
- 'brief': 'Runs life/burn-in tests on PR2 components and robots'
  'description': "\n    This package contains the scripts needed to run burn in and\
    \ life tests on PR2 components.\n\n    Use Test Manager to run tests:\n    roscd\
    \ life_test\n    ./test_manager.py\n  "
  'name': 'life_test'
  'repo': 'wg-ros-pkg'
- 'brief': 'sbpl_global_planner'
  'description': "\n\n     sbpl_global_planner\n\n  "
  'name': 'sbpl_global_planner'
  'repo': 'wg-ros-pkg'
- 'brief': 'roscore_migration_rules'
  'description': "\n\n    Migration rules for messages defined as part of the roscore.\
    \  Hopefully these do not change very often.\n\n  "
  'name': 'roscore_migration_rules'
  'repo': 'ros_comm'
- 'brief': 'transport_test'
  'description': "\n\n     transport_test\n\n  "
  'name': 'transport_test'
  'repo': 'hwu-osl-ros-pkg'
- 'brief': 'ROSH geometry plugin'
  'description': "\n\n     ROSH plugin for the geometry stack, including tf.\n\n  "
  'name': 'rosh_geometry'
  'repo': 'rosh_robot_plugins'
- 'brief': 'label_scene_3D'
  'description': "\n\n     label_scene_3D - This module performs scene labeling infernce.\
    \ Based on a number of classifier responses and the scene geometry, finds the\
    \ set of objects that's most likely to be present.\n\n  "
  'name': 'label_scene_3D'
  'repo': 'ubc-ros-pkg'
- 'brief': 'color_picker'
  'description': "\n\n     color_picker\n\n  "
  'name': 'color_picker'
  'repo': 'usc-ros-pkg'
- 'brief': 'cob_image_capture'
  'description': "\n\n     cob_image_capture\n\n  "
  'name': 'cob_image_capture'
  'repo': 'cob_calibration'
- 'brief': ''
  'description': 'A clone of  2-D navigation stack \b rosstage using a 3D simulation
    environment.'
  'name': 'pr2_2dnav_gazebo'
  'repo': 'wg-ros-pkg'
- 'brief': 'fast_sift'
  'description': "\n\n    A cross-platform library that computes fast and accurate\
    \ SIFT image features.\n    libsiftfast provides Octave/Matlab scripts, a command\
    \ line interface, and a\n    python interface (siftfastpy). Optimized with SIMD\
    \ instructions and OpenMP.\n\n  "
  'name': 'fast_sift'
  'repo': 'wg-ros-pkg'
- 'brief': 'resistance_monitor'
  'description': "\n\n     resistance_monitor\n\n  "
  'name': 'resistance_monitor'
  'repo': 'wg-ros-pkg'
- 'brief': 'An EusLisp implementation of ROS using roscpp'
  'description': 'EusLisp implementation for Robot Operating System.'
  'name': 'roseus'
  'repo': 'jsk-ros-pkg'
- 'brief': 'social_msgs'
  'description': "\n    A collection of message and server prototypes for social robotics.\
    \ \n  "
  'name': 'social_msgs'
  'repo': 'albany-ros-pkg'
- 'brief': 'indomptable_arm_navigation'
  'description': "\n\n     indomptable_arm_navigation\n\n  "
  'name': 'indomptable_arm_navigation'
  'repo': 'smart-robotics-ros-pkg'
- 'brief': 'A node wrapper for the neato_driver package'
  'description': "\n    This package contains a node that connects to the Neato Robotics\
    \ XV-11. It enables control of motors through a geometry_msgs/Twist topic and\
    \ publishes laser scans and odometry.\n  "
  'name': 'neato_node'
  'repo': 'albany-ros-pkg'
- 'brief': 'tour_guide_base'
  'description': "\n\n     tour_guide_base\n\n  "
  'name': 'tour_guide_base'
  'repo': 'cwru-ros-pkg'
- 'brief': 'barcode2d'
  'description': "\n\n     barcode2d\n\n  "
  'name': 'barcode2d'
  'repo': 'wg-ros-pkg'
- 'brief': 'hrp4_pan_tilt'
  'description': "\n\n     hrp4_pan_tilt\n\n  "
  'name': 'hrp4_pan_tilt'
  'repo': 'jsk-ros-pkg'
- 'brief': 'riq_hand_cli'
  'description': "\n\n     riq_hand_cli\n\n  "
  'name': 'riq_hand_cli'
  'repo': 'wg-ros-pkg'
- 'brief': 'Global navigation for the PR2 robot.'
  'description': "\n\n     This application allows the PR2 robot to navigate autonomously\
    \ with a pre-specified static map.\n\n  "
  'name': 'pr2_2dnav'
  'repo': 'wg-ros-pkg'
- 'brief': 'rosdistro'
  'description': "\n\n     rosdistro\n\n  "
  'name': 'rosdistro'
  'repo': 'ros_release'
- 'brief': 'hector_mapping'
  'description': "\nhector_mapping is a SLAM approach that can be used without odometry\
    \ as well as on platforms that exhibit roll/pitch motion (of the sensor, the platform\
    \ or both). It leverages the high update rate of modern LIDAR systems like the\
    \ Hokuyo UTM-30LX and provides 2D pose estimates at scan rate of the sensors (40Hz\
    \ for the UTM-30LX). While the system does not provide explicit loop closing ability,\
    \ it is sufficiently accurate for many real world scenarios. The system has successfully\
    \ been used on Unmanned Ground Robots, Unmanned Surface Vehicles, Handheld Mapping\
    \ Devices and logged data from quadrotor UAVs.\n\n  "
  'name': 'hector_mapping'
  'repo': 'tu-darmstadt-ros-pkg'
- 'brief': 'misc_behaviors'
  'description': "\n     Misc. PR2 behaviors that are either actionlib, ROS service,\
    \ or just smach-ready.\n  "
  'name': 'misc_behaviors'
  'repo': 'gt-ros-pkg'
- 'brief': 'ROS Bag Tools'
  'description': "\n    This is a set of tools for recording from and playing back\
    \ to ROS\n    topics.  It is intended to be high performance and avoids\n    deserialization\
    \ and reserialization of the messages. \n  "
  'name': 'rosbag'
  'repo': 'ros_comm'
