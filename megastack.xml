<stacks><stack name="warehousewg" path="" repo="warehousewg" repo_host="https://kforge.ros.org/warehousewg/warehouse-hg">
  <description brief="warehouse">warehouse</description>
  <author>Bhaskara Marthi, Nate Koenig</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/warehousewg</url>
  <depend stack="common"/> <!-- yaml_cpp -->
  <depend stack="common_msgs"/> <!-- nav_msgs, geometry_msgs, visualization_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="ros"/> <!-- roslib -->
  <depend stack="ros_comm"/> <!-- std_msgs, rostest, rospy, roscpp -->

<package name="mongodb"/><package name="mongo_ros"/><package name="pymongo"/></stack><stack name="rosjava_core" path="" repo="rosjava_core" repo_host="https://rosjava.googlecode.com/hg">
  <description brief="rosjava core">
    rosjava provides a pure-Java implementation of ROS that also
    supports Android.  rosjava_core contains the core rosjava packages
    necessary for ROS integration.
  </description>
  <author>Maintained by Damon Kohler</author>
  <license>Apache License 2.0</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosjava_core</url>

  <depend stack="common_msgs"/> <!-- actionlib_msgs -->
  <depend stack="common_tutorials"/> <!-- actionlib_tutorials -->
  <depend stack="ros"/> <!-- roslang, roslib -->
  <depend stack="ros_comm"/> <!-- rosgraph_msgs, test_ros, rostest, std_msgs -->

<package name="apache_xmlrpc"/><package name="apache_commons_util"/><package name="actionlib_java"/><package name="rosjava"/><package name="test_rosjava"/><package name="rosjava_bootstrap"/><package name="rosjava_tutorial_pubsub"/><package name="rosjava_geometry"/></stack><stack name="ais_bonn_pcl_addons" path="/trunk/stacks/ais_bonn_pcl_addons" repo="ais-bonn-ros-pkg" repo_host="http://ais-bonn-ros-pkg.googlecode.com/svn">
  <description brief="ais_bonn_pcl_addons">ais_bonn_pcl_addons</description>
  <author>Maintained by Joerg Stueckler</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ais_bonn_pcl_addons</url>

  <depend stack="ros"/>
  <depend stack="perception_pcl"/>

<package name="octreelib"/></stack><stack name="orocos_kinematics_dynamics" path="" repo="orocos_kinematics_dynamics" repo_host="http://git.mech.kuleuven.be/robotics/orocos_kinematics_dynamics.git">
  <description brief="orocos_kinematics_dynamics">orocos_kinematics_dynamics</description>
  <author>Maintained by Ruben Smits</author>
  <license>GPL,LGPL / BSD,LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/orocos_kinematics_dynamics</url>
  <depend stack="ros"/>
  <depend stack="eigen"/>
<package name="kdl"/><package name="orocos_kdl"/><package name="python_orocos_kdl"/></stack><stack name="prairiedog" path="/trunk" repo="prairiedog" repo_host="http://prairiedog.googlecode.com/svn">
  <description brief="prairiedog robot platform">

     This includes all of the CU Boulder prairiedog packages.

  </description>
  <author>Michael Otte</author>
  <license>GNU GPL V3</license>
  <review notes="" status="unreviewed"/>
  <url>http://correll.cs.colorado.edu/pmwiki/index.php/Main/PrairieDog</url>

  <depend stack="ros"/> 
  <depend stack="common_msgs"/> 
  <depend stack="laser_drivers"/> 
  <depend stack="image_transport_plugins"/>
<package name="stargazer_cu"/><package name="cmd_line_control_cu"/><package name="irobot_create_cu"/><package name="gencam_cu"/><package name="base_planner_cu"/><package name="intercom_cu"/><package name="tagmapper_cu"/><package name="localization_cu"/><package name="hokuyo_listener_cu"/><package name="goal_server_cu"/><package name="nav_view_cu"/><package name="irobot_create_rustic"/><package name="mapper_cu"/><package name="visualization_cu"/></stack><stack name="head_interaction_behavior" path="/trunk/head_interaction_behavior" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="head_interaction_behavior">head_interaction_behavior</description>
  <author>Maintained by David Feil-Seifer</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/head_interaction_behavior</url>
  <depend stack="bandit"/> <!-- bandit_msgs -->
  <depend stack="common_msgs"/> <!-- geometry_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="people"/> <!-- people_msgs -->
  <depend stack="ros"/>
  <depend stack="vision_opencv"/> <!-- opencv2 -->

<package name="head_follow_people"/><package name="head_traj_general"/></stack><stack name="aaai_lfd_demo" path="/trunk/stacks/aaai_lfd_demo" repo="bosch-ros-pkg" repo_host="https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg">
  <description brief="aaai_lfd_demo">Infrastructure for the 2011 AAAI-LfD Challenge</description>
  <author>Sarah Osentoski, Dejan Pangercic, Benjamin Pitzer (Maintained by Sarah Osentoski)</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/aaai_lfd_demo</url>
  <depend stack="bosch_manipulation_utils"/> <!-- simple_robot_control -->
  <depend stack="common"/> <!-- actionlib, yaml_cpp -->
  <depend stack="common_msgs"/> <!-- actionlib_msgs, geometry_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="kinematics"/> <!-- kinematics_msgs -->
  <depend stack="motion_planning_common"/> <!-- motion_planning_msgs -->
  <depend stack="navigation"/> <!-- move_base_msgs, map_server -->
  <depend stack="object_manipulation"/> <!-- object_manipulator -->
  <depend stack="pr2_controllers"/> <!-- pr2_controllers_msgs -->
  <depend stack="pr2_navigation_apps"/> <!-- pr2_2dnav -->
  <depend stack="pr2_tabletop_manipulation_apps"/> <!-- pr2_pick_and_place_demos -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rospy, roscpp -->
  <depend stack="simulator_gazebo"/> <!-- gazebo -->

<package name="rl_2dnav"/><package name="aaai_lfd_mixed_manipulator"/><package name="aaai_lfd_pick_and_place_service"/><package name="aaai_lfd_demo_launch"/><package name="aaai_lfd_demo_executive"/><package name="openloop_object_manipulation"/><package name="arm_file_control"/><package name="aaai_lfd_simulator"/><package name="aaai_object_detection"/></stack><stack name="rovio-eol" path="" repo="iheart-ros-pkg" repo_host="git://github.com/IHeartRobotics/iheart-ros-pkg">
  <description brief="rovio">rovio</description>
  <author>Maintained by I Heart Robotics</author>
  <license>GPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rovio</url>
  <depend stack="ros"/>
  <depend stack="joystick_drivers"/>
<package name="rovio_common"/><package name="rovio_teleop"/><package name="rovio_controller"/></stack><stack name="reem_arm_navigation" path="" repo="reem_arm_navigation" repo_host="https://github.com/pal-robotics/reem_arm_navigation">
  <description brief="REEM arm navigation configuration and launch files.">
    The contents of this stack are based on the original pr2_arm_navigation, and has been following its evolution since
    the Boxturtle release, hence credit for its contents goes mainly to the authors of the original stack.
    The authors listed in this stack's packages have mostly adapting the original work to the REEM robot.
  </description>
  <author>Maintained by Adolfo Rodriguez Tsouroukdissian</author>
  <license>Modified BSD</license>
  <review notes="" status="unreviewed"/>
  <url/>
  <depend stack="arm_navigation"/>
  <depend stack="common_msgs"/>
  <depend stack="motion_planners"/>
  <depend stack="motion_planning_common"/>
  <depend stack="reem_common"/>
  <depend stack="ros"/>
  <depend stack="ros_comm"/>
  <depend stack="trajectory_filters"/>
<package name="reem_arm_navigation_planning"/><package name="reem_arm_navigation_perception"/><package name="reem_arm_navigation_config"/><package name="reem_3dnav"/><package name="reem_arm_navigation_actions"/><package name="reem_arm_navigation_filtering"/></stack><stack name="gps_umd" path="" repo="umd-ros-pkg" repo_host="git://ram.umd.edu/ros/gps_umd.git">
  <description brief="GPS drivers (incl. GPSd) and map projection utilities">
    This stack provides a ROS binding for the GPS receivers that are supported
    by the GPSd software (http://gpsd.berlios.de/).
  </description>
  <author>Ken Tossell</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/gps_umd</url>
  <depend stack="common_msgs"/> <!-- nav_msgs, sensor_msgs -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- roscpp, message_filters -->

<package name="gps_common"/><package name="gpsd_client"/></stack><stack name="ecl_lite" path="/trunk/ecl_lite" repo="ecl_lite" repo_host="https://embedded-control-library.googlecode.com/svn">
  <description brief="ecl_lite">Firmware style code implementations</description>
  <author>Maintained by Daniel Stonier and 이재영.</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ecl_lite</url>
  <depend stack="ecl_tools"/> <!-- ecl_build, ecl_license -->
  <depend stack="ros"/>

<package name="ecl_sigslots_lite"/><package name="ecl_errors"/><package name="ecl_converters_lite"/><package name="ecl_config"/><package name="ecl_lite"/><package name="ecl_time_lite"/><package name="ecl_io"/></stack><stack name="krypton_hardware" path="" repo="krypton_hardware" repo_host="http://git.mech.kuleuven.be/robotics/krypton_hardware.git">
  <description brief="krypton_hardware">

    The krypton_hardware stack contains all code to set-up communication with any <a href="http://www.nikonmetrology.com/optical__cmm/">Nikon K-Series Optical CMM</a>, used in combination with a High Frequency (HF) - controller, and read out pose measurements.
    <ul>
      <li>For low level interaction, the <a href="http://www.ros.org/wiki/krypton">krypton</a> package provides methods to start and read out data from the HF-controller.</li>
      <li>For high level interaction, the <a href="http://www.ros.org/wiki/krypton_component">krypton_component</a> contains an Orocos component wrapped around the <a href="http://www.ros.org/wiki/krypton">krypton</a> library to stream all data to ROS nodes.</li>
    </ul>

  </description>
  <author>Steven Bellens, steven.bellens@mech.kuleuven.be</author>
  <license>LGPLv2.1 / BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/krypton_hardware</url>

  <depend stack="ros"/>
  <depend stack="orocos_toolchain"/>
  <depend stack="rtt_ros_integration"/>
<package name="krypton"/><package name="krypton_msgs"/><package name="krypton_typekit"/><package name="krypton_component"/><package name="rtt_krypton_msgs"/></stack><stack name="imu_drivers" path="/stacks/imu_drivers/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Drivers for IMUs">
    A stack for any drivers relating to Inertial Measurement Units (IMU).
  </description>
  <author>Maintained by Chad Rockey</author>
  <license>LGPL</license>  
  <review notes="Jan 14 2010" status="Doc Reviewed"/>
  <url>http://ros.org/wiki/imu_drivers</url>
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="diagnostics"/> <!-- self_test, diagnostic_updater -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_srvs, roscpp -->

<package name="microstrain_3dmgx2_imu"/></stack><stack name="guardian-ros-pkg" path="/trunk" repo="guardian-ros-pkg" repo_host="http://guardian-ros-pkg.googlecode.com/svn">
  <description brief="guardian-ros-pkg">guardian-ros-pkg</description>
  <author>Marc Benetó</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/guardian-ros-pkg</url>
  <depend stack="common"/> <!-- pluginlib -->
  <depend stack="common_msgs"/> <!-- nav_msgs, geometry_msgs, sensor_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="joystick_drivers"/> <!-- joy -->
  <depend stack="navigation"/> <!-- move_base -->
  <depend stack="pr2_mechanism"/> <!-- pr2_controller_interface, pr2_mechanism_model -->
  <depend stack="robot_model"/> <!-- convex_decomposition, ivcon, urdf -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- roscpp -->
  <depend stack="simulator_gazebo"/> <!-- gazebo -->

<package name="guardian_controller"/><package name="guardian_odometry"/><package name="guardian_description"/><package name="guardian_joystick_teleop"/><package name="guardian_tf"/><package name="guardian_2dnav"/></stack><stack name="bosch_surface_reconstruction" path="/trunk/stacks/bosch_surface_reconstruction" repo="bosch-ros-pkg" repo_host="https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg">
  <description brief="bosch_surface_reconstruction">bosch_surface_reconstruction</description>
  <author>Maintained by Dejan Pangercic</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/bosch_surface_reconstruction</url>
  <depend stack="ros_comm"/>
  <depend stack="common_msgs"/>
  <depend stack="geometry"/>
  <depend stack="bosch_common"/>
  <depend stack="driver_common"/>
  <depend stack="bosch_3rdparty"/>
  <depend stack="perception_pcl"/>
  <depend stack="ias_common"/>
<package name="mesh_generator"/><package name="view_meshset3d"/><package name="view_mesh"/><package name="meshset3d_tools"/><package name="surface_modelling_common"/></stack><stack name="mpi" path="/stacks/mpi/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="mpi">
     The mpi stack contains tools for high performance Message Passing between
     nodes in a distributed multi-processor system.
   </description>

  <author>Maintained by Radu Bogdan Rusu and John Hsu</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/mpi</url>
<package name="mpi_test"/><package name="rosmpi"/><package name="openmpi_devel"/><package name="knem"/></stack><stack name="RCPRG_robots_gazebo" path="" repo="RCPRG_robots_gazebo" repo_host="https://github.com/RCPRG-ros-pkg/RCPRG_robots_gazebo">
  <description brief="RCPRG_robots_gazebo">RCPRG_robots_gazebo</description>
  <author>Maintained by Maciej Stefanczyk</author>
  <license>BSD,</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/RCPRG_robots_gazebo</url>
  <depend stack="elektron_robot"/> <!-- elektron_defs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="navigation"/> <!-- move_base, fake_localization -->
  <depend stack="robot_model"/> <!-- robot_state_publisher -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_msgs -->
  <depend stack="simulator_gazebo"/> <!-- gazebo_plugins, gazebo_worlds -->

<package name="elektron_gazebo"/></stack><stack name="assimp" path="" repo="assimp" repo_host="https://kforge.ros.org/robotmodel/assimp">
  <description brief="assimp">assimp</description>
  <author>Maintained by Wim Meeussen</author>
  <license/>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/assimp</url>

  <depend stack="ros"/>
  <depend stack="common_rosdeps"/>

<package name="assimp"/></stack><stack name="machine_learning" path="/branches/trunk_cturtle/stacks/machine_learning" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="machine_learning">machine_learning</description>
  <author>Maintained by Romain Thibaux</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/machine_learning</url>
  <depend stack="geometry"/> <!-- eigen -->
  <depend stack="ros"/>

<package name="hierarchical_kmeans"/></stack><stack name="cob_scenarios" path="" repo="cob_scenarios" repo_host="git://github.com/ipa320/cob_scenarios">
  <description brief="cob_scenarios">cob_scenarios</description>
  <author>Maintained by Florian Weisshardt</author>
  <license>BSD,LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_scenarios</url>
  <depend stack="arm_navigation"/> <!-- kinematics_msgs -->
  <depend stack="cob_command_tools"/> <!-- cob_command_gui, cob_dashboard, cob_script_server -->
  <depend stack="cob_driver"/> <!-- cob_tray_sensors -->
  <depend stack="cob_environments"/> <!-- cob_default_env_config -->
  <depend stack="cob_manipulation"/> <!-- cob_mmcontroller, cob_manipulator -->
  <depend stack="cob_navigation"/> <!-- cob_linear_nav, cob_2dnav -->
  <depend stack="cob_object_perception"/> <!-- cob_object_detection_msgs, cob_object_detection_fake -->
  <depend stack="cob_robots"/> <!-- cob_bringup, cob_default_robot_config -->
  <depend stack="cob_simulation"/> <!-- cob_bringup_sim -->
  <depend stack="common_msgs"/> <!-- actionlib_msgs -->
  <depend stack="executive_smach"/> <!-- smach_ros, smach -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rospy -->

<package name="cob_experimentation_days"/><package name="cob_generic_states"/></stack><stack name="bosch_kitchen_models" path="/trunk/stacks/bosch_kitchen_models" repo="bosch-ros-pkg" repo_host="https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg">
  <description brief="kitchen_models">kitchen_models</description>
  <author>Maintained by Dejan Pangercic</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/kitchen_models</url>
  <depend stack="xacro"/>
  <depend stack="common_msgs"/>

<package name="bosch_kitchen_defs"/><package name="cad_model_publisher"/></stack><stack name="rharmony" path="/trunk/rharmony" repo="albany-ros-pkg" repo_host="http://albany-ros-pkg.googlecode.com/svn">
  <description brief="R-Harmony: bringing robots and people together since 2010.">
    R-Harmony is a collection of people perception technologies, aimed at bringing people and robots together...  
  </description>
  <author>Maintained by Michael Ferguson</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rharmony</url>
  <depend stack="common_msgs"/> <!-- geometry_msgs -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_msgs, rospy, roscpp, std_srvs -->
<package name="pocketsphinx"/></stack><stack name="ethzasl_aseba" path="" repo="ethzasl_aseba" repo_host="https://github.com/ethz-asl/ros-aseba">
  <description brief="ethzasl_aseba">
    Bridge to access an ASEBA network from ROS.
    For more information about aseba, see: http://mobots.epfl.ch/aseba.html
  </description>
  <author>Stéphane Magnenat</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ethzasl_aseba</url>
  <depend stack="common"/> 
  <depend stack="common_msgs"/>
  <depend stack="ros"/>
<package name="asebaros"/></stack><stack name="cob_object_perception" path="" repo="cob_object_perception" repo_host="git://github.com/ipa320/cob_object_perception">
  <description brief="cob_object_perception">cob_object_perception</description>
  <author>Maintained by Jan Fischer</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_object_perception</url>
  <depend stack="common_msgs"/> <!-- geometry_msgs, actionlib_msgs, sensor_msgs -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_msgs, rospy -->
  <depend stack="simulator_gazebo"/> <!-- gazebo -->

<package name="cob_object_detection_msgs"/><package name="cob_object_detection_fake"/></stack><stack name="rtt_geometry" path="" repo="rtt_geometry" repo_host="http://git.mech.kuleuven.be/robotics/rtt_geometry.git">
  <description brief="rtt_geometry">rtt_geometry</description>
  <author>Maintained by Ruben Smits</author>
  <license>GPL,LGPL / BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rtt_geometry</url>
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="orocos_kinematics_dynamics"/> <!-- orocos_kdl -->
  <depend stack="orocos_toolchain"/> <!-- rtt, ocl -->
  <depend stack="ros"/>
  <depend stack="rtt_common_msgs"/> <!-- rtt_geometry_msgs -->
  <depend stack="rtt_ros_integration"/> <!-- rtt_rosnode -->

<package name="rtt_tf"/><package name="kdl_typekit"/><package name="kdl_lua"/></stack><stack name="world_db_model" path="/branches/trunk_cturtle/stacks/world_db_model" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="world_db_model">
    world_db_model is a framework for creating and maintaining a
    consistent and persistent state of the world. The idea is to
    record raw sensor data in bags and provide the results an
    interface to spatially query detector results. The results of
    detector plug-ins are calculated on demand and cached in an
    sqlite3 database. world_db_model provides a core node that
    contains the basic functionality to load plug-ins, record data
    into bags and play them back and store detection results. Further,
    it provides a plug-in for recording the tf-tree which is essential
    for spatial indexing in the bags, and a library for the easy
    creation of detector plug-ins.
  </description>
  <author>Maintained by Lorenz Moesenlechner</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/world_db_model</url>
  <depend stack="common"/> <!-- actionlib, pluginlib -->
  <depend stack="common_msgs"/> <!-- geometry_msgs, actionlib_msgs, sensor_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="point_cloud_perception_experimental"/> <!-- pcl_detectors -->
  <depend stack="ros"/> <!-- roslisp, roscpp, roslib, std_msgs, rospy, rosbag -->
  <!--depend stack="sandbox" />  model_database -->
  <depend stack="roslisp_common"/> <!-- actionlib_lisp -->

<package name="world_db_pcl_detectors"/><package name="world_db_bag_player"/><package name="world_db_core"/><package name="world_db_detector_lib"/><package name="world_db_table_highlevel"/><package name="tf_recorder_plugin"/></stack><stack name="clearpath_kinect" path="/trunk/clearpath_kinect" repo="clearpath-ros-pkg" repo_host="http://clearpath-ros-pkg.googlecode.com/svn">
  <description brief="clearpath_kinect">
    This stack contains general-purpose software for working with Clearpath Robotics platforms equipped with a Kinect sensor.
  </description>
  <author>Maintained by Sean Anderson</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/clearpath_kinect</url>
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="perception_pcl"/> <!-- pcl_ros -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_msgs, roscpp -->

<package name="clearpath_kinect_demo"/><package name="clearpath_tools"/></stack><stack name="quickdev" path="/trunk/quickdev" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="quickdev">quickdev</description>
  <author>Maintained by Edward T. Kaszubski ( ekaszubski@gmail.com )</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/quickdev</url>
  <depend stack="ros"/>

<package name="quickdev_scripts"/><package name="cpp0x"/><package name="cpp11"/><package name="quickdev_examples"/><package name="quickdev_cpp"/><package name="gsl"/></stack><stack name="nao_robot" path="/trunk/nao_robot" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="ROS integration for the Nao humanoid robot (drivers / wrappers and messages).">
  <p>
     The nao_robot stack contains some useful nodes to integrated the Nao humanoid robot into ROS, 
     developed at the <a href="http://hrl.informatik.uni-freiburg.de/">Humanoid Robots Lab</a> 
     at the Albert-Ludwigs-Unversitaet in Freiburg, Germany.
     It provides basic functionality and can be installed on the robot. It should be used with the 
       <a href="http://www.ros.org/wiki/nao_common">nao_common stack</a> for more functionality. 
     The <a href="http://www.ros.org/wiki/humanoid_navigation">
     humanoid_navigation stack</a> contains some more general packages for 
     humanoid / biped robots.
   </p>
   <p>
     Files are available at <a href="http://code.google.com/p/alufr-ros-pkg/">http://code.google.com/p/alufr-ros-pkg/</a>, 
     documentation at <a href="http://www.ros.org/wiki/nao_robot">http://www.ros.org/wiki/nao</a>.
   </p>

  </description>
  <author>Maintained by Armin Hornung</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/nao_robot</url>
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- sensor_msgs, actionlib_msgs, trajectory_msgs, geometry_msgs -->
  <depend stack="humanoid_msgs"/> <!-- humanoid_nav_msgs -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_srvs, std_msgs, rospy -->

<package name="nao_driver"/><package name="nao_msgs"/></stack><stack name="haptic_event_detector" path="/haptic_event_detector/trunk" repo="haptic_event_detector" repo_host="https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs">
  <description brief="haptic_event_detector">haptic_event_detector</description>
  <author>Maintained by Joe Romano</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/haptic_event_detector</url>
  <depend stack="ros"/>

<package name="pr2_haptic_event_detector"/><package name="haptic_event_detector_msgs"/></stack><stack name="geometry_tutorials" path="" repo="geometry_tutorials" repo_host="https://kforge.ros.org/geometry/tutorials">
  <description brief="geometry_tutorials">geometry_tutorials</description>
  <author>Maintained by Tully Foote</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/geometry_tutorials</url>
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- tf, turtlesim, rospy, roscpp -->
  <depend stack="ros_tutorials"/> <!-- turtlesim -->

<package name="turtle_tf"/></stack><stack name="robot_model_python" path="/trunk/hrl/robot_model_python" repo="gt-ros-pkg" repo_host="http://gt-ros-pkg.googlecode.com/svn">
  <description brief="robot_model_python">

    Python implementation of the URDF and KDL parsing utilities found in the robot_model stack.
  
  </description>
  <author>Maintained by Kelsey Hawkins</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/robot_model_python</url>

<package name="kdl_parser_python"/><package name="urdf_parser_python"/></stack><stack name="sarkofag_robot" path="" repo="sarkofag_robot" repo_host="https://github.com/RCPRG-ros-pkg/sarkofag_robot">
  <description brief="sarkofag_robot">sarkofag_robot</description>
  <author>Maintained by Konrad Banachowicz</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sarkofag_robot</url>
  <depend stack="common"/> <!-- actionlib, xacro -->
  <depend stack="orocos_toolchain_ros"/> <!-- rtt, ocl -->
  <depend stack="orocos_tools"/> <!-- oro_servo_msgs, joint_spline_trajectory_generator, oro_joint_trajectory_action, fake_servo, oro_joint_state_publisher, rtt_ros_integration_sensor_msgs -->
  <depend stack="pr2_controllers"/> <!-- pr2_controllers_msgs -->
  <depend stack="ros"/>

<package name="sarkofag_launch"/><package name="sarkofag_defs"/><package name="sarkofag_servo"/></stack><stack name="client_rosjava_jni" path="" repo="client_rosjava_jni" repo_host="http://code.in.tum.de/git/client-rosjava.git">
  <description brief="client_rosjava">client_rosjava</description>
  <author>Maintained by Lorenz Moesenlechner</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/client_rosjava</url>
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="ros"/> <!-- roslang, roslib, rospack -->
  <depend stack="ros_comm"/> <!-- std_msgs, roscpp -->

<package name="rosjava_jni"/><package name="tfjava"/><package name="test_rosjava_jni"/></stack><stack name="virtual_reality" path="/trunk/veltrop-ros-pkg/virtual_reality" repo="veltrop-ros-pkg" repo_host="https://veltrop-ros-pkg.svn.sourceforge.net/svnroot/veltrop-ros-pkg">
  <description brief="virtual_reality">Nodes to interact with virtual reality devices</description>
  <author>Maintained by Taylor Veltrop</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/virtual_reality</url>
  <depend stack="ros"/>
  <depend stack="joystick_drivers"/> <!-- joy, wiimote -->
  <depend stack="geometry"/> <!-- tf -->
<package name="vr920"/><package name="treadmill_control"/><package name="vr920_tracker"/></stack><stack name="recovery_shared_autonomy" path="/trunk/stacks/recovery_shared_autonomy" repo="bosch-ros-pkg" repo_host="https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg">
  <description brief="recovery_shared_autonomy"> The recovery_shared_autonomy stack is an independent extension of the SMACH library. It includes an autonomous failure recovery mode and an expert interface module. It also includes tools for introspection and ROS integration.</description>
  <author>Maintained by Bharath Sankaran</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/recovery_shared_autonomy</url>
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- actionlib_msgs, geometry_msgs -->
  <depend stack="geometry"/> <!-- tf, tf_conversions -->
  <depend stack="object_manipulation"/> <!-- household_objects_database, object_manipulator, object_manipulation_msgs -->
  <depend stack="pr2_object_manipulation"/> <!-- pr2_gripper_reactive_approach, simple_Jtranspose_controller -->
  <depend stack="ros"/> <!-- roslib, rospack -->
  <depend stack="ros_comm"/> <!-- std_msgs, rostest, rospy, rostopic, roscpp -->
  <depend stack="tabletop_object_perception"/> <!-- tabletop_object_detector, tabletop_collision_map_processing -->

<package name="smach_recovery_ros"/><package name="smach_recovery"/><package name="recovery"/><package name="recovery_tutorials"/><package name="smach_recovery_msgs"/></stack><stack name="rgbd_tools" path="/trunk/rgbd_tools" repo="vanadium-ros-pkg" repo_host="http://vanadium-ros-pkg.googlecode.com/svn">
  <description brief="rgbd_tools">
    A collection of tools for use with Kinect-like devices.
  </description>
  <author>Maintained by Michael Ferguson</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rgbd_tools</url>
  <depend stack="ros"/>
<package name="depth_viewer"/></stack><stack name="fcl_ros" path="/trunk" repo="fcl_ros" repo_host="https://kforge.ros.org/fcl/fcl_ros">
  <description brief="fcl_ros">fcl_ros</description>
  <author>Maintained by Jia Pan, Dinesh Manocha, Sachin Chitta</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/fcl_ros</url>
  <depend stack="arm_navigation"/> <!-- planning_models, geometric_shapes -->
  <depend stack="bullet"/> <!-- bullet -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rosconsole -->

<package name="PQP"/><package name="collision_space_fcl_test"/><package name="ann"/><package name="svm_light"/><package name="collision_space_fcl"/><package name="fcl"/><package name="libccd"/></stack><stack name="ros_pandora_generic" path="" repo="pandora-auth-ros-pkg" repo_host="https://github.com/pandora-auth-ros-pkg/pandora-auth-ros-pkg">
  <description brief="ros_pandora_generic">ros_pandora_generic</description>
  <author>Maintained by Miltiadis Allamanis</author>
  <license>Mixed</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ros_pandora_generic</url>
  <depend stack="ros"/>

<package name="remote_counter"/><package name="EposGateway"/><package name="mock_objects"/><package name="watchdog_timer"/><package name="state_manager_communications"/><package name="gmock"/><package name="interface_testing"/><package name="remote_mutex"/><package name="state_manager"/></stack><stack name="pr2_gui" path="/stacks/pr2_gui/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="GUI tools for working with PR2 robots">

    Contains GUI tools for working with PR2s.

  </description>
  <author>Maintained by Josh Faust (jfaust@willowgarage.com)</author>
  <license>BSD</license>  
  <review notes="" status="Doc reviewed"/>
  <url>http://ros.org/wiki/pr2_gui</url>
  <depend stack="diagnostics"/> <!-- backwards compatibility with cturtle -->
  <depend stack="diagnostics_monitors"/> <!-- robot_monitor -->
  <depend stack="pr2_common"/> <!-- pr2_msgs -->
  <depend stack="pr2_power_drivers"/> <!-- pr2_power_board -->
  <depend stack="ros"/> <!-- roslib -->
  <depend stack="ros_comm"/> <!-- std_msgs, std_srvs, rospy -->
  <depend stack="rx"/> <!-- rxtools -->

<package name="pr2_dashboard"/></stack><stack name="stanford-ros-pkg" path="/trunk" repo="stanford-ros-pkg" repo_host="https://stanford-ros-pkg.googlecode.com/svn">
  <description brief="Packages from the Stanford AI Lab">
    Various packages developed by various authors at the Stanford AI lab. 
    Some are quite functional and stable, and others are obsolete or
    otherwise broken. I have attempted to indicate at least some of their
    status by the top-level directory name.
  </description>
  <author>Various Stanford students</author>
  <license>BSD</license>
  <depend stack="geometry"/> 
  <depend stack="ros"/> 
  <depend stack="visualization_common"/> 
  <depend stack="common"/> 
  <depend stack="common_msgs"/> 
  <depend stack="laser_pipeline"/> 
<package name="recyclerbot"/><package name="spacepoint"/><package name="chessbot"/><package name="cart_interp"/><package name="ancient_powercube"/><package name="projector_calibration"/><package name="projector_camera_calibration"/><package name="graycode_scanner"/><package name="projector"/><package name="multiview"/><package name="sortbot"/><package name="wifi_sniffer"/><package name="locloc_erratic"/><package name="openarms"/><package name="pancakebot"/></stack><stack name="artoolkitplus" path="/trunk/artoolkitplus" repo="vmi-ros-pkg" repo_host="https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg">
  <description brief="artoolkitplus">artoolkitplus</description>
  <author>Maintained by Roalter Luis</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/artoolkitplus</url>
  <depend stack="ros"/>

<package name="artoolkitplus"/></stack><stack name="wu_experiments" path="/stacks/wu_experiments/trunk" repo="wu-ros-pkg" repo_host="https://wu-ros-pkg.svn.sourceforge.net/svnroot/wu-ros-pkg">
  <description brief="wu experiment procedures and nodes">
    All of the HRI user studies we run in the robot lab.
  </description>
  <author>Maintained by Bill Smart</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/wu_experiments</url>
  <depend stack="ros"/>
  <depend stack="ride"/>
<package name="ride_karulf_thesis"/></stack><stack name="webots" path="/webots" repo="webots-ros-pkg" repo_host="http://webots-ros-pkg.svn.sourceforge.net/svnroot/webots-ros-pkg">
  <description brief="Webots">
    Tools for using ROS with the <a href="http://www.cyberbotics.com">Webots</a> commercial simulation software.
  </description>
  <author>Maintained by Olivier Michel</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.ros.org/wiki/webots</url>
  <depend stack="ros"/>
  <depend stack="roscpp"/>
  <depend stack="joy"/>
<package name="webots_simulator"/><package name="webots_joystick"/></stack><stack name="ias_web_apps" path="/stacks/ias_web_apps" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="ias_web_apps">ias_web_apps</description>
  <author>Maintained by Lorenz Moesenlechner</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ias_web_apps</url>
  <depend stack="navigation"/> <!-- map_server -->
  <depend stack="ros"/> <!-- std_msgs, roslib, rospy -->
  <depend stack="web_interface"/> <!-- rosweb, webui -->
  <depend stack="wg_common"/> <!-- willow_maps -->

<package name="ias_pr2_addons_application"/></stack><stack name="audio_common" path="" repo="audio_common" repo_host="https://kforge.ros.org/audiocommon/audio_common">
  <description brief="Common code for working with audio">
    Common code for working with audio in ROS
  </description>
  <author>Maintained by Nate Koenig</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/audio_common</url>
  <depend stack="ros"/>
  <depend stack="common"/>
  <depend stack="common_msgs"/>
  <depend stack="common_rosdeps"/>
  <depend stack="ros_comm"/>

<package name="audio_common_msgs"/><package name="audio_play"/><package name="sound_play"/><package name="audio_capture"/></stack><stack name="bilibot" path="/trunk/bilibot" repo="bilibot-ros-pkg" repo_host="http://bilibot-ros-pkg.googlecode.com/svn">
  <description brief="bilibot">bilibot</description>
  <author>Maintained by garratt</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/bilibot</url>
  <depend stack="ros"/>

<package name="create_node"/><package name="bilibot_navigation"/><package name="bilibot_node"/><package name="pointcloud_to_laserscan"/><package name="bilibot_dashboard"/><package name="create_driver"/><package name="bilibot_bringup"/><package name="bilibot_logging"/></stack><stack name="veltrop_stereo" path="/trunk/veltrop-ros-pkg/veltrop_stereo" repo="veltrop-ros-pkg" repo_host="https://veltrop-ros-pkg.svn.sourceforge.net/svnroot/veltrop-ros-pkg">
  <description brief="veltrop_stereo"> Stuff for streo vision.</description>
  <author>Maintained by Taylor Veltrop</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/veltrop_stereo</url>
  <depend stack="common"/> <!-- tinyxml -->
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="joystick_drivers"/> <!-- joy, ps3joy -->
  <depend stack="robot_model"/> <!-- robot_state_publisher -->
  <depend stack="ros"/> <!-- std_msgs, roscpp -->
  <depend stack="vision_opencv"/> <!-- opencv2, cv_bridge -->

<package name="uvc_camera"/><package name="stereo_capture"/></stack><stack name="socialize" path="/trunk/socialize" repo="vmi-ros-pkg" repo_host="https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg">
  <description brief="socialize">socialize</description>
  <author>Maintained by Roalter Luis</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/socialize</url>
  <depend stack="ros"/>

<package name="python_facebook"/><package name="python_twitter"/><package name="socialize"/><package name="python_oauth2"/><package name="python_feedparser"/></stack><stack name="mini_max" path="/trunk/mini_max" repo="vanadium-ros-pkg" repo_host="http://vanadium-ros-pkg.googlecode.com/svn">
  <description brief="Drivers and Apps for the Mini Maxwell robot platform"/>
  <author>Maintained by Michael Ferguson</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/mini_max</url>
  <depend stack="arbotix"/> <!-- arbotix_python -->
  <depend stack="common"/> <!-- xacro -->
  <depend stack="common_msgs"/> <!-- trajectory_msgs, diagnostic_msgs -->
  <depend stack="robot_model"/> <!-- ivcon, urdf -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rospy -->
  <depend stack="simple_arms"/> <!-- simple_arm_server -->
  <depend stack="turtlebot"/> <!-- turtlebot_bringup -->

<package name="mini_max_defs"/><package name="mini_max_apps"/><package name="mini_max_tutorials"/></stack><stack name="lse_messages" path="/trunk/unstable/lse_messages" repo="isr-uc-ros-pkg" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="lse_messages">
  
  	This stack contains messages that are commonly used on the LSE but are not available on the ROS messages stack.
  
  </description>
  <author>Gonçalo Cabrita and Pedro Sousa</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/lse_messages</url>
  <depend stack="ros"/>	<!-- roscpp -->

<package name="lse_sensor_msgs"/></stack><stack name="itasc_tasks" path="" repo="itasc_tasks" repo_host="http://git.mech.kuleuven.be/robotics/itasc_tasks.git">
  <description brief="itasc_tasks">itasc_tasks</description>
  <author>Maintained by Dominick Vanthienen</author>
  <license>BSD,LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://orocos.org</url>
  <depend stack="ros"/>
  <depend stack="itasc_core"/>
  <depend stack="rtt_ros_integration"/>
  <depend stack="orocos_kinematics_dynamics"/>

<package name="cartesian_motion"/><package name="joint_motion"/></stack><stack name="asctec_mav_framework" path="" repo="asctec_mav_framework" repo_host="https://github.com/ethz-asl/asctec_mav_framework">
  <description brief="asctec_mav_framework">Framework for data aquisition and position control to be used with the highlevel processor of Ascending Technologies helicopters </description>
  <author>Maintained by Markus Achtelik</author>
  <license>,BSD</license>  
  <review notes="This is unstable and under active development" status="unreviewed"/>
  <url>http://ros.org/wiki/asctec_mav_framework</url>
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- actionlib_msgs, geometry_msgs -->
  <depend stack="diagnostics"/> <!-- diagnostic_updater -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- roscpp -->

<package name="asctec_hl_interface"/><package name="asctec_hl_comm"/><package name="asctec_hl_firmware"/></stack><stack name="visualization_experimental" path="" repo="visualization_experimental" repo_host="https://kforge.ros.org/visualization/vis-exp">
  <description brief="visualization_experimental">visualization_experimental</description>
  <author>Maintained by Dave Hershberger</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/visualization_experimental</url>
  <depend stack="common_msgs"/> <!-- nav_msgs, geometry_msgs, sensor_msgs, visualization_msgs -->
  <depend stack="common_rosdeps"/> <!-- common_rosdeps -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="laser_pipeline"/> <!-- laser_geometry -->
  <depend stack="pluginlib"/> <!-- pluginlib -->
  <depend stack="robot_model"/> <!-- urdf_interface, urdf, resource_retriever -->
  <depend stack="ros"/> <!-- roslib -->
  <depend stack="ros_comm"/> <!-- rosconsole, std_srvs, roscpp, message_filters, std_msgs, rospy -->
  <depend stack="visualization"/> <!-- interactive_markers -->
  <depend stack="visualization_common"/> <!-- ogre -->

<package name="rviz_qt"/><package name="ogre_tools_qt"/></stack><stack name="transflective_perception" path="/transflective_perception/trunk" repo="transflective_perception" repo_host="https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs">
  <description brief="Perception code for transparent/reflective objects">transflective_perception</description>
  <author>Maintained by Cody J Phillips</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/transflective_perception</url>
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="point_cloud_perception"/> <!-- pcl -->
  <depend stack="ros"/> <!-- std_msgs, rosbag, rospy, roscpp, message_filters -->
  <depend stack="vision_opencv"/> <!-- opencv2, cv_bridge -->

<package name="transflective_perception"/><package name="perception_py"/><package name="simple_grasp"/><package name="model_render"/></stack><stack name="pr2_controllers" path="/stacks/pr2_controllers/branches/pr2_controllers-1.4" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="PR2 Controllers">
    Contains the controllers that run in realtime on the PR2 and supporting packages.
  </description>
  <author>Stuart Glaser sglaser@willowgarage.com</author>
  <license>BSD</license>  
  <review notes="2010/01/21" status="Doc reviewed"/>
  <url>http://ros.org/wiki/pr2_controllers</url>
  <depend stack="common"/> <!-- actionlib, filters, tinyxml, pluginlib -->
  <depend stack="common_msgs"/> <!-- nav_msgs, actionlib_msgs, trajectory_msgs, sensor_msgs, geometry_msgs, visualization_msgs, diagnostic_msgs -->
  <depend stack="control"/> <!-- control_msgs -->
  <depend stack="diagnostics"/> <!-- diagnostic_updater -->
  <depend stack="geometry"/> <!-- tf, tf_conversions, kdl, eigen, angles -->
  <depend stack="pr2_common"/> <!-- pr2_msgs -->
  <depend stack="pr2_mechanism"/> <!-- pr2_controller_manager, pr2_mechanism_msgs, pr2_mechanism_model, realtime_tools, pr2_controller_interface -->
  <depend stack="robot_model"/> <!-- kdl_parser -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rosconsole, std_srvs, roscpp, message_filters, std_msgs, rospy -->

<package name="pr2_mechanism_controllers"/><package name="control_toolbox"/><package name="pr2_head_action"/><package name="ethercat_trigger_controllers"/><package name="pr2_controllers_msgs"/><package name="joint_trajectory_action"/><package name="pr2_gripper_action"/><package name="single_joint_position_action"/><package name="pr2_calibration_controllers"/><package name="robot_mechanism_controllers"/></stack><stack name="robot_model" path="" repo="robot_model" repo_host="https://kforge.ros.org/robotmodel/robot_model">
  <description brief="Modeling robot information">
    <tt>robot_model</tt> contains packages for modeling various
    aspects of robot information, specified in the Xml Robot
    Description Format (URDF). The core package of this stack
    is <a href="http://ros.org/wiki/urdf">urdf</a>, which parses URDF files, and constructs an
    object model (C++) of the robot.
  </description>
  <author>Wim Meeussen, John Hsu, David Lu, Rosen Diankov, Tim Field</author>
  <license>BSD,GPL,MIT</license>  
  <review notes="2009-10-02" status="Doc reviewed"/>
  <url>http://ros.org/wiki/robot_model</url>
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="common_rosdeps"/> <!-- common_rosdeps -->
  <depend stack="geometry"/> <!-- tf, angles, tf_conversions -->
  <depend stack="orocos_kinematics_dynamics"/> <!-- kdl -->
  <depend stack="ros"/> <!-- roslib -->
  <depend stack="ros_comm"/> <!-- rosconsole, rospy, roscpp -->

<package name="srdf"/><package name="urdf_interface"/><package name="colladadom"/><package name="resource_retriever"/><package name="convex_decomposition"/><package name="robot_state_publisher"/><package name="simmechanics_to_urdf"/><package name="collada_parser"/><package name="collada_urdf"/><package name="urdf"/><package name="urdf_parser"/><package name="ivcon"/><package name="kdl_parser"/></stack><stack name="roslisp_support" path="/stacks/roslisp_support/trunk" repo="roslisp_support" repo_host="https://code.ros.org/svn/ros">
  <description brief="roslisp support">Support stack for roslisp that brings in required sbcl runtime</description>
  <author>Maintained by Bhaskara Marthi</author>
  <license>BSD,Many,Public domain</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/roslisp_support</url>
  <depend stack="ros"/> <!-- rosemacs -->
  <depend stack="ros_comm"/> <!-- std_srvs, rostest, std_msgs, roscpp -->

<package name="roslisp_repl"/><package name="roslisp_runtime"/><package name="sbcl"/><package name="test_roslisp"/><package name="roslisp_testing"/><package name="roslisp_tutorials"/></stack><stack name="cram_pl" path="" repo="cram_pl" repo_host="http://code.in.tum.de/git/cram-pl.git">
  <description brief="The CRAM Plan Language stack">
    A set of libraries for implementing AI enabled robot control programs.
  </description>
  <author>Maintained by Lorenz Moesenlechner</author>
  <license>GPL,Public domain,,trivial-features,babel,cffi,BSD,MIT</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cram_pl</url>
  <depend stack="ros"/>
  <depend stack="roslisp_support"/> <!-- sbcl -->

<package name="process_modules"/><package name="cram_test_utilities"/><package name="cram_utilities"/><package name="cram_math"/><package name="liswip"/><package name="cram_language"/><package name="designators"/><package name="cl_store"/><package name="cl_utilities"/><package name="babel"/><package name="synchronization_tools"/><package name="alexandria"/><package name="gsd"/><package name="gsll"/><package name="trivial_garbage"/><package name="trivial_features"/><package name="cffi"/><package name="split_sequence"/><package name="cram_reasoning"/><package name="cram_execution_trace"/></stack><stack name="behavior_engine" path="" repo="behavior_engine" repo_host="https://github.com/timn/ros-behavior_engine">
  <description brief="behavior_engine">behavior_engine</description>
  <author>Maintained by Tim Niemueller</author>
  <license>GPLv2+,BSD,BSD and GPLv2+</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/behavior_engine</url>
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- actionlib_msgs -->
  <depend stack="node_monitoring"/> <!-- nodemon_msgs -->
  <depend stack="ros"/> <!-- roslib, roscpp -->
<package name="fawkes_lua"/><package name="lua_utils"/><package name="actionlib_lua"/><package name="herb_skills"/><package name="skiller"/><package name="herb_agents"/><package name="luaagent"/><package name="skillgui"/></stack><stack name="cob_environment_perception" path="" repo="cob_environment_perception" repo_host="git://github.com/ipa320/cob_environment_perception">
  <description brief="cob_environment_perception">cob_environment_perception</description>
  <author>Maintained by Georg Arbeiter</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_environment_perception</url>
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- sensor_msgs, actionlib_msgs, geometry_msgs -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_msgs -->

<package name="cob_3d_mapping_msgs"/><package name="cob_3d_mapping_pipeline_fake"/></stack><stack name="social" path="/branches/trunk_diamondback/stacks/social" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="social">social</description>
  <author>Maintained by Bill Smart</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/social</url>
  <depend stack="ros"/>

<package name="laban_requestors"/><package name="gestures"/><package name="laban_service"/><package name="long_term_study"/></stack><stack name="laser_drivers" path="/stacks/laser_drivers/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Laser drivers for Hokuyo and SICK laser rangefinders">
  This stack contains drivers for laser rangefinders, including Hokuyo SCIP 2.0-compliant and SICK models.
  </description>
  <author>Maintained by Chad Rockey</author>
  <license>BSD,LGPL</license>  
  <review notes="2010/01/18" status="Doc reviewed"/>
  <url>http://ros.org/wiki/laser_drivers</url>
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="diagnostics"/> <!-- self_test, diagnostic_updater -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure, driver_base -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- roscpp -->

<package name="hokuyo_node"/><package name="sicktoolbox"/><package name="sicktoolbox_wrapper"/></stack><stack name="navigation" path="" repo="navigation" repo_host="https://kforge.ros.org/navigation/navigation">
  <description brief="planar navigation stack">
    A 2D navigation stack that takes in information from odometry, sensor
    streams, and a goal pose and outputs safe velocity commands that are sent
    to a mobile base.
  </description>
  <author>Maintained by Eitan Marder-Eppstein eitan@willowgarage.com</author>
  <license>BSD,LGPL,LGPL (amcl)</license>  
  <review notes="" status="Doc reviewed"/>
  <url>http://ros.org/wiki/navigation</url>
  <depend stack="bullet"/> <!-- bullet -->
  <depend stack="common"/> <!-- actionlib, yaml_cpp, bfl -->
  <depend stack="common_msgs"/> <!-- nav_msgs, sensor_msgs, actionlib_msgs, geometry_msgs, visualization_msgs -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure -->
  <depend stack="eigen"/> <!-- eigen -->
  <depend stack="geometry"/> <!-- tf, angles -->
  <depend stack="laser_pipeline"/> <!-- laser_geometry -->
  <depend stack="perception_pcl"/> <!-- pcl, pcl_ros -->
  <depend stack="pluginlib"/> <!-- pluginlib -->
  <depend stack="ros"/> <!-- roslib -->
  <depend stack="ros_comm"/> <!-- rosconsole, std_srvs, roscpp, message_filters, std_msgs, rostest, rospy, rostopic, rosbag, rosmsg -->

<package name="costmap_2d"/><package name="base_local_planner"/><package name="fake_localization"/><package name="nav_core"/><package name="navfn"/><package name="move_base_msgs"/><package name="dwa_local_planner"/><package name="robot_pose_ekf"/><package name="carrot_planner"/><package name="rotate_recovery"/><package name="move_slow_and_clear"/><package name="map_server"/><package name="move_base"/><package name="voxel_grid"/><package name="amcl"/><package name="clear_costmap_recovery"/></stack><stack name="recovery_smach_visualization" path="/trunk/stacks/recovery_smach_visualization" repo="bosch-ros-pkg" repo_host="https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg">
  <description brief="recovery_smach_visualization">
    The recovery_smach_visualization stack contains the SMACH RECCOVERY library, together
    with tools for introspection and a ROS integration package.
  </description>
  <author>Maintained by Bharath Sankaran</author>
  <license>BSD</license>  
  <review notes="" status="doc reviewed"/>
  <url>http://ros.org/wiki/recovery_smach_visualization</url>
  <depend stack="recovery_shared_autonomy"/> <!-- smach_recovery_ros, smach_recovery_msgs -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- smach_recovery_msgs -->
  <depend stack="rx"/> <!-- xdot -->

<package name="smach_recovery_viewer"/></stack><stack name="rcommander" path="" repo="rcommander" repo_host="https://kforge.ros.org/rcommander/hg">
  <description brief="SMACH GUI">Packages for running GUI for editing SMACH state machines.</description>
  <author>Hai Nguyen / haidai@gmail.com</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rcommander</url>
  <depend stack="arm_navigation"/> <!-- arm_navigation_msgs -->
  <depend stack="audio_common"/> <!-- sound_play -->
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- sensor_msgs, trajectory_msgs, geometry_msgs -->
  <depend stack="executive_smach"/> <!-- smach_ros, smach -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="navigation"/> <!-- move_base_msgs -->
  <depend stack="pr2_controllers"/> <!-- pr2_controllers_msgs -->
  <depend stack="pr2_mechanism"/> <!-- pr2_mechanism_msgs -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_msgs, rospy -->

<package name="pycontroller_manager"/><package name="tts_server"/><package name="rcommander_pr2"/><package name="ptp_arm_action"/><package name="rcommander_core"/><package name="nodebox_qt"/></stack><stack name="seebee3" path="/trunk/cturtle" repo="seebee3" repo_host="http://seabee3-ros-pkg.googlecode.com/svn">
  <description brief="seabee3-ros-pkg">seabee3-ros-pkg</description>
  <author>Maintained by Edward T. Kaszubski</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/seabee3-ros-pkg</url>
  <depend stack="common"/> <!-- yaml_cpp -->
  <depend stack="common_msgs"/> <!-- nav_msgs, sensor_msgs, geometry_msgs -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure, driver_base -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="joystick_drivers"/> <!-- joy -->
  <depend stack="ros"/> <!-- roslib, std_msgs, roscpp -->
  <depend stack="vision_opencv"/> <!-- opencv2, cv_bridge -->
  <depend stack="visualization_common"/> <!-- visualization_msgs -->

<package name="demo1_tasha"/><package name="demo1_kaszubski"/><package name="demo1_gerow"/><package name="demo1_dhruv"/><package name="demo1_sagar"/><package name="demo1_sung"/><package name="common_utils"/><package name="tf_frame_lock"/><package name="transdec_localizer"/><package name="camera_interpolation"/><package name="libxsens"/><package name="seabee3_mission_control"/><package name="task_fsm"/><package name="dead_reckoning_odom"/><package name="localization_defs"/><package name="filtered_odom"/><package name="image_array_viewer"/><package name="base_libs"/><package name="libvml"/><package name="seabee3_driver"/><package name="contour_matcher"/><package name="memcached_service"/><package name="circle_finder"/><package name="waypoint_controller"/><package name="color_blob_finder"/><package name="rectangle_finder"/><package name="generic_controllers"/><package name="flsl"/><package name="seabee3_teleop"/><package name="tritech_micron"/><package name="color_segmenter"/><package name="image_scaler"/><package name="seabee3_launch"/><package name="sparse_stereo"/><package name="jaus_adapter"/><package name="xsens_node"/><package name="seabee3_demo"/><package name="seabee3_stabilizer"/><package name="image_server"/><package name="seabee3_common"/><package name="stereo_image_odom"/><package name="landmark_projector"/><package name="nodelet_sandbox"/><package name="seabee3_dashboard"/><package name="libseabee3_beestem"/><package name="seabee3_driver_base"/><package name="sonar_node"/><package name="color_classifier"/><package name="image_sync"/><package name="image_matcher"/><package name="landmark_map_server"/><package name="seabee3_physics"/><package name="imu_integrator"/><package name="buoy_identifier"/><package name="pipeline_finder"/><package name="seabee3_machines"/><package name="landmark_finder"/></stack><stack name="cram_pr2" path="" repo="cram_pr2" repo_host="http://code.in.tum.de/git/cram-pr2.git">
  <description brief="cram_process_modules_pr2">cram_process_modules_pr2</description>
  <author>Maintained by Lorenz Moesenlechner</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cram_pr2</url>
  <depend stack="cram_highlevel"/> <!-- location_costmap, cram_roslisp_common, cram_plan_actionserver, cram_plan_failures, cram_plan_knowledge, designators_ros, table_costmap, perception_process_module, cram_plan_library -->
  <depend stack="cram_pl"/> <!-- cram_reasoning, alexandria, designators, cram_math, process_modules, cram_utilities, cram_language, cram_execution_trace -->
  <depend stack="navigation"/> <!-- move_base_msgs -->
  <depend stack="pr2_controllers"/> <!-- pr2_controllers_msgs -->
  <depend stack="ros"/>
  <depend stack="roslisp_common"/> <!-- actionlib_lisp -->

<package name="cram_pr2_popcorn_executive"/><package name="pr2_manipulation_process_module"/><package name="pr2_navigation_process_module"/><package name="point_head_process_module"/><package name="cram_pr2_executive"/></stack><stack name="itasc_solvers" path="" repo="itasc_solvers" repo_host="http://git.mech.kuleuven.be/robotics/itasc_solvers.git">
  <description brief="itasc_solvers">itasc_solvers</description>
  <author>Maintained by Dominick Vanthienen</author>
  <license>BSD,LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://orocos.org</url>
  <depend stack="ros"/>
  <depend stack="itasc_core"/>
  <depend stack="rtt_ros_integration"/>
  <depend stack="orocos_kinematics_dynamics"/>

<package name="wdls_prior_vel_solver"/></stack><stack name="bosch_texture_reconstruction" path="/trunk/stacks/bosch_texture_reconstruction" repo="bosch-ros-pkg" repo_host="https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg">
  <description brief="bosch_texture_reconstruction">bosch_texture_reconstruction</description>
  <author>Maintained by Dejan Pangercic</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/bosch_texture_reconstruction</url>
  <depend stack="ros_comm"/>
  <depend stack="bosch_common"/>
  <depend stack="bosch_3rdparty"/>
  <depend stack="vision_opencv"/>

<package name="meshset_texture_generator"/><package name="mesh_parameterization"/><package name="mesh_segmentation"/><package name="meshset_texture_blender"/></stack><stack name="rovio" path="" repo="wpi-rail-ros-pkg" repo_host="https://github.com/WPI-RAIL/wpi-rail-ros-pkg">
  <description brief="Control and query a WowWee Rovio.">The rovio stack contains packages to control and query a WowWee Rovio.</description>
  <author>Maintained by Russell Toris</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rovio</url>
  <depend stack="ros"/>
  <depend stack="ros_comm"/>
<package name="rovio_av"/><package name="rovio_shared"/><package name="rovio_ctrl"/></stack><stack name="freiburg_tools" path="/trunk/freiburg_tools" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="freiburg_tools">
  This stack contains several tools developed by the University of Freiburg, like RGBDSLAM, a Webcam driver, a checkerboard detector, the Gaussian Process library, the HOGMAN graph optimizer, etc.
  </description>
  <author>Maintained by Juergen Sturm</author>
  <license>GPL,LGPL,GPL v3,BSD,GPL (hogman itself),BSD (hogman wrapper)</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/freiburg_tools</url>
  <depend stack="common_msgs"/> <!-- geometry_msgs, sensor_msgs, visualization_msgs -->
  <depend stack="geometry"/> <!-- tf, eigen -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="openni_kinect"/> <!-- openni_camera -->
  <depend stack="perception_pcl"/> <!-- pcl, pcl_ros -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rosbag, rospy, roscpp -->
  <depend stack="vision_opencv"/> <!-- opencv2, image_geometry, cv_bridge -->

<package name="gaussian_process"/><package name="uvc_cam2"/><package name="checkerboard_detector2"/><package name="hogman_minimal"/><package name="fr_tools"/><package name="rgbdslam"/><package name="rxparamedit"/></stack><stack name="visualization" path="/stacks/visualization/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Visualization tools for ROS">

     Visualization tools for robots.  Currently just <a href="http://www.ros.org/wiki/rviz">rviz</a>, a 3d visualization environment for robots using ROS, as well as <a href="http://www.ros.org/wiki/rxbag_plugins">rxbag_plugins</a>, which extend the visualization capabilities of <a href="http://www.ros.org/wiki/rxbag">rxbag</a>. 

  </description>
  <author>Josh Faust, Dave Hershberger</author>
  <license>BSD,Creative Commons,wxWindows</license>  
  <review notes="2011/01/04" status="Doc reviewed"/>
  <url>http://ros.org/wiki/visualization</url>
  <depend stack="common_msgs"/> <!-- nav_msgs, sensor_msgs, geometry_msgs, visualization_msgs -->
  <depend stack="common_rosdeps"/> <!-- common_rosdeps -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="laser_pipeline"/> <!-- laser_geometry -->
  <depend stack="robot_model"/> <!-- urdf, resource_retriever -->
  <depend stack="ros"/> <!-- roslib -->
  <depend stack="ros_comm"/> <!-- rosconsole, std_srvs, roscpp, message_filters, std_msgs, rospy, rosbag -->
  <depend stack="rx"/> <!-- rxtools, rxbag, wxPython_swig_interface, wxswig -->
  <depend stack="visualization_common"/> <!-- ogre, ogre_tools -->

<package name="rviz"/><package name="rxbag_plugins"/><package name="wxpropgrid"/><package name="interactive_markers"/></stack><stack name="pr2_power_drivers" path="/stacks/pr2_power_drivers/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="PR2 Power Drivers">

     Power drivers for the PR2 robot.

  </description>
  <author>Maintained by Blaise Gassend</author>
  <license>BSD</license>  
  <review notes="Dec 2009" status="Doc reviewed"/>
  <url>http://ros.org/wiki/pr2_power_drivers</url>
  <depend stack="common_msgs"/> <!-- diagnostic_msgs -->
  <depend stack="diagnostics"/> <!-- diagnostic_updater -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure -->
  <depend stack="pr2_common"/> <!-- pr2_msgs -->
  <depend stack="ros"/> <!-- rospy, std_msgs, roscpp -->

<package name="ocean_battery_driver"/><package name="power_monitor"/><package name="pr2_power_board"/></stack><stack name="ias_perception" path="" repo="ias_perception" repo_host="http://code.in.tum.de/git/ias-perception.git">
  <description brief="ias_perception">ias_perception</description>
  <author>Maintained by Dejan Pangercic, Uli Klank</author>
  <license>GPL,BSD,LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ias_perception</url>
  <depend stack="arm_navigation"/> <!-- robot_self_filter, arm_navigation_msgs -->
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="ias_common"/> <!-- vision_srvs -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="mapping"/> <!-- ias_table_msgs -->
  <depend stack="pluginlib"/> <!-- pluginlib -->
  <depend stack="pr2_object_manipulation"/> <!-- tabletop_collision_map_processing -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- roscpp -->
  <depend stack="vision_opencv"/> <!-- opencv2, cv_bridge -->

<package name="lo"/><package name="cop_sr4_plugins"/><package name="cognitive_perception"/><package name="jlo"/><package name="cop_ros_plugins"/><package name="cop_collision_interface"/><package name="ann"/><package name="contracting_curve_density_algorithm"/></stack><stack name="janitorial" path="/branches/trunk_diamondback/stacks/janitorial" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="janitor">
    Janitorial functions for the PR2, running in continuous operations
    mode.
  </description>

  <author>Maintained by Bill Smart</author>
  <license>BSD</license>  

  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/janitor</url>

  <depend stack="ros"/>

<package name="monitors"/></stack><stack name="bosch_proximity_sensor" path="/trunk/stacks/bosch_proximity_sensor" repo="bosch-ros-pkg" repo_host="https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg">
  <description brief="bosch_proximity_sensor">bosch_proximity_sensor</description>
  <author>Adrian Funk, Philip Roan (maintained by Philip Roan)</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/bosch_proximity_sensor</url>
  <depend stack="bosch_drivers"/> <!-- sub20 -->
  <depend stack="common_msgs"/> <!-- visualization_msgs -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="motion_planning_common"/> <!-- arm_navigation_msgs, arm_navigation_msgs -->
  <depend stack="ros"/> <!-- roslib -->
  <depend stack="ros_comm"/> <!-- std_msgs, roscpp -->

<package name="proximity_sensor_fake_data"/><package name="proximity_sensor_tf"/><package name="proximity_sensor_driver"/><package name="proximity_sensor_visualize"/><package name="proximity_sensor_add_obstacles"/><package name="proximity_sensor_dashboard"/></stack><stack name="web_apps_experimental" path="/branches/trunk_cturtle/stacks/web_apps_experimental" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="web_apps_experimental">web_apps_experimental</description>
  <author>Maintained by Josh Tyler</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/web_apps_experimental</url>
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="image_pipeline"/> <!-- camera_calibration -->
  <depend stack="joystick_drivers"/> <!-- joy -->
  <depend stack="pr2_common"/> <!-- pr2_dashboard_aggregator -->
  <depend stack="pr2_power_drivers"/> <!-- pr2_power_board -->
  <depend stack="pr2_web_apps"/> <!-- navigation_application -->
  <depend stack="ros"/> <!-- std_msgs, roslib, rospy -->
  <depend stack="web_interface"/> <!-- rosweb, webui -->
  <depend stack="wifi_drivers"/> <!-- wifi_ddwrt -->

<package name="camera_calibration_application"/><package name="photo_booth"/><package name="fake_robot"/><package name="sample_application"/></stack><stack name="turtlebot_viz" path="" repo="turtlebot_viz" repo_host="https://kforge.ros.org/turtlebot/turtlebot_viz">
  <description brief="turtlebot_viz">turtlebot_viz</description>
  <author>Maintained by Tully Foote and Melonee Wise</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/turtlebot_viz</url>
  <depend stack="common_msgs"/> <!-- visualization_msgs -->
  <depend stack="diagnostics_monitors"/> <!-- robot_monitor -->
  <depend stack="ros"/> <!-- roslib -->
  <depend stack="ros_comm"/> <!-- std_srvs, std_msgs, roscpp, rospy -->
  <depend stack="rx"/> <!-- rxtools -->
  <depend stack="turtlebot"/> <!-- turtlebot_node -->
  <depend stack="visualization"/> <!-- interactive_markers -->

<package name="turtlebot_dashboard"/><package name="turtlebot_interactive_markers"/></stack><stack name="ua_experimental" path="/trunk/arrg/ua_experimental" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="Experimental packages - unreliable and/or idiosyncratic">
    Experimental packages - unreliable and/or idiosyncratic
    </description>
    <author>Maintained by Daniel Hewlett</author>
    <license>BSD</license>  
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/ua_experimental</url>

    <depend stack="ros"/>
    <depend stack="ua_apps"/>
<package name="smart_arm_affordance"/><package name="dynamixel_hardware_interface"/><package name="w2_object_manipulation_launch"/><package name="time_series"/><package name="ultraspeech"/><package name="point_cloud_filters"/><package name="scikits"/><package name="block_swat"/><package name="w2_arm_navigation_tests"/><package name="ua_audio_infomax"/><package name="wubble2_gripper_controller"/><package name="blackboard_demo"/><package name="wubble2_arm_navigation"/><package name="sklearn"/><package name="swistrack"/><package name="ua_audio_fft"/><package name="ua_audio_capture"/><package name="ua_audio_msgs"/><package name="ua_audio_play"/><package name="pybrain"/><package name="knowrob_tutorial"/><package name="plotter"/><package name="path_learning_experiment"/><package name="point_cloud_classifier"/><package name="chr_6dm_imu"/></stack><stack name="vision_opencv" path="/stacks/vision_opencv/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="opencv">

    opencv c++ and python libraries.

  </description>
  <author>James Bowman</author>
  <license>BSD</license>  
  <review notes="" status="reviewed"/>
  <url>http://ros.org/wiki/vision_opencv</url>
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="geometry"/> <!-- tf, tf_conversions -->
  <depend stack="orocos_kinematics_dynamics"/> <!-- kdl -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rostest, rospy, roscpp, message_filters -->

<package name="cv_bridge"/><package name="image_geometry"/><package name="cv_markers"/><package name="opencv_tests"/><package name="opencv2"/></stack><stack name="geometric_relations_semantics" path="" repo="geometric_relations_semantics" repo_host="http://git.mech.kuleuven.be/robotics/geometric_relations_semantics.git">
  <description brief="geometric_relations_semantics">geometric_relations_semantics</description>
  <author>Maintained by Tinne De Laet</author>
  <license>LGPL/BSD,LGPLv2.1 / BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/geometric_relations_semantics</url>
  <depend stack="orocos_kinematics_dynamics"/> <!-- orocos_kdl -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/>
  <depend stack="geometry"/>
  <depend stack="common_msgs"/>

<package name="geometric_semantics_msgs_conversions"/><package name="geometric_semantics_tf_msgs"/><package name="geometric_semantics_examples"/><package name="geometric_semantics_tf"/><package name="geometric_semantics_tf_msgs_conversions"/><package name="geometric_semantics_kdl"/><package name="geometric_semantics"/><package name="geometric_semantics_msgs"/></stack><stack name="sbpl_dynamic_env" path="/sbpl_dynamic_env/trunk" repo="sbpl_dynamic_env" repo_host="https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs">
  <description brief="sbpl_dynamic_env">sbpl_dynamic_env</description>
  <author>Maintained by Michael Phillips</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sbpl_dynamic_env</url>
  <depend stack="common"/> <!-- actionlib, pluginlib -->
  <depend stack="common_msgs"/> <!-- nav_msgs, sensor_msgs, actionlib_msgs, geometry_msgs, visualization_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="motion_planners"/> <!-- sbpl -->
  <depend stack="navigation"/> <!-- navfn, clear_costmap_recovery, costmap_2d, rotate_recovery, nav_core, move_base_msgs, base_local_planner -->
  <depend stack="ros"/> <!-- roslib -->
  <depend stack="ros_comm"/> <!-- rosconsole, std_srvs, roscpp, std_msgs, rospy, rostopic, rosmsg -->
  <depend stack="simulator_stage"/> <!-- stage -->

<package name="sbpl_dynamic_env_global_planner"/><package name="sbpl_dynamic_planner"/><package name="fake_tracking"/><package name="demo_sbpl_dynamic_env"/><package name="lidar_tracking"/><package name="dynamic_obs_msgs"/><package name="parallel_move_base"/></stack><stack name="cwru_semi_stable" path="" repo="cwru-ros-pkg" repo_host="http://github.com/cwru-robotics/cwru-ros-pkg">
  <description brief="cwru_semi_stable">cwru_semi_stable</description>
  <author>Maintained by Eric Perko</author>
  <license>LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cwru_semi_stable</url>
  <depend stack="common"/> <!-- pluginlib -->
  <depend stack="common_msgs"/> <!-- nav_msgs, geometry_msgs -->
  <depend stack="geometry"/> <!-- tf, tf_conversions -->
  <depend stack="joystick_drivers"/> <!-- joy -->
  <depend stack="laser_drivers"/> <!-- sicktoolbox_wrapper -->
  <depend stack="navigation"/> <!-- move_base, map_server, costmap_2d, nav_view, amcl, nav_core -->
  <depend stack="ros"/> <!-- std_srvs, std_msgs, roscpp, rospy -->
  <depend stack="simulator_stage"/> <!-- stage -->
  <depend stack="sound_drivers"/> <!-- sound_play -->

<package name="cwru_sim_stage"/><package name="xv_11_laser_driver"/><package name="cwru_teleop"/><package name="cwru_goal_planner"/><package name="cwru_maps"/><package name="cwru_configs"/><package name="playsound_recovery"/><package name="cwru_nav"/><package name="cwru_base"/></stack><stack name="diagnostics_monitors" path="/stacks/diagnostics_monitors/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Diagnostics GUI tools">GUI tools for diagnostics visualization.</description>
  <author>Maintained by Kevin Watts</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/diagnostics_monitors</url>
  <depend stack="common_msgs"/> <!-- diagnostic_msgs -->
  <depend stack="ros"/> 
  <depend stack="ros_comm"/> <!-- rospy, diagnostic_msgs -->
  <depend stack="rx"/> <!-- rxbag -->

<package name="robot_monitor"/><package name="runtime_monitor"/></stack><stack name="remote_lab" path="/trunk/stacks/remote_lab" repo="bosch-ros-pkg" repo_host="https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg">
  <description brief="remote_lab">
  	A stack of tools for remote control, tele-op and remote labs. 
  </description>
  <author>Maintained by Benjamin Pitzer</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/remote_lab</url>
  <depend stack="arm_navigation"/> <!-- kinematics_msgs -->
  <depend stack="brown_remotelab"/> <!-- rosbridge -->
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- actionlib_msgs, trajectory_msgs, geometry_msgs, visualization_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="object_manipulation"/> <!-- household_objects_database, object_manipulator, object_manipulation_msgs -->
  <depend stack="pr2_kinematics"/> <!-- pr2_arm_kinematics -->
  <depend stack="pr2_object_manipulation"/> <!-- pr2_gripper_reactive_approach, pr2_tabletop_manipulation_launch, tabletop_object_detector, tabletop_collision_map_processing, simple_Jtranspose_controller -->
  <depend stack="ros"/> <!-- roslib -->
  <depend stack="ros_comm"/> <!-- rospy, std_msgs, roscpp -->
  <depend stack="vision_opencv"/> <!-- opencv2, cv_bridge -->
  <depend stack="visualization"/> <!-- interactive_markers -->

<package name="rosjs_tests"/><package name="rosjs_visualization"/><package name="rosjs_remotelabwidgets"/><package name="pointcloud_snapshot_service"/><package name="wviz"/><package name="rosjs_assisted_teleoperation"/><package name="rosjs_tutorials"/><package name="wviz_tf_manager"/><package name="ping"/><package name="wviz_kinematic_manager"/><package name="rosjs_pr2interaction"/><package name="wviz_scene_manager"/><package name="rosjs_resources"/><package name="robot_booking"/><package name="rosjs_common"/><package name="topic_logger"/><package name="interactive_marker_client"/><package name="mjpeg_server"/><package name="pr2_pick_and_place_service"/></stack><stack name="pr2_cockpit" path="/stacks/pr2_cockpit/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_cockpit">
    The pr2_cockpit stack runs the teleoperation setup at Willow
    Garage, including device drivers, realtime controllers, and launch
    scripts.
  </description>
  <author>Stuart Glaser</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_cockpit</url>
  <depend stack="common"/> <!-- actionlib, pluginlib -->
  <depend stack="common_msgs"/> <!-- geometry_msgs, sensor_msgs, diagnostic_msgs -->
  <depend stack="geometry"/> <!-- tf, kdl, tf_conversions, angles, eigen_conversions -->
  <depend stack="image_pipeline"/> <!-- image_rotate -->
  <depend stack="joystick_drivers"/> <!-- joy -->
  <depend stack="pr2_controllers"/> <!-- control_toolbox, pr2_controllers_msgs -->
  <depend stack="pr2_mechanism"/> <!-- pr2_controller_manager, pr2_mechanism_model, realtime_tools, pr2_controller_interface -->
  <depend stack="robot_model"/> <!-- kdl_parser -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- pr2_controller_manager, control_toolbox, roscpp, std_srvs, joy, actionlib, sensor_msgs, tf, rospy, std_msgs, geometry_msgs, diagnostic_msgs, pr2_controllers_msgs -->
  <depend stack="ros_realtime"/> <!-- rosatomic, lockfree, allocators, rosrt -->

<package name="teleop_microscribe"/><package name="infinity_pedals"/><package name="teleop_controllers"/><package name="pr2_cockpit_msgs"/><package name="microscribe"/></stack><stack name="pr2_kinematics" path="/stacks/pr2_kinematics/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_kinematics">This stack contains an implementation of kinematics for the PR2 robot.</description>
  <author>Maintained by Sachin Chitta</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_kinematics</url>
  <depend stack="arm_navigation"/> <!-- planning_environment, planning_models, kinematics_msgs, kinematics_base, collision_space, arm_navigation_msgs -->
  <depend stack="common_msgs"/> <!-- geometry_msgs -->
  <depend stack="eigen"/> <!-- eigen -->
  <depend stack="geometry"/> <!-- tf_conversions, angles -->
  <depend stack="orocos_kinematics_dynamics"/> <!-- kdl -->
  <depend stack="pluginlib"/> <!-- pluginlib -->
  <depend stack="robot_model"/> <!-- urdf, kdl_parser -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- roscpp -->

<package name="pr2_arm_kinematics"/><package name="pr2_arm_kinematics_constraint_aware"/></stack><stack name="starmac_robots" path="" repo="starmac-ros-pkg" repo_host="https://bitbucket.org/bouffard/starmac-ros-pkg">
  <description brief="starmac_robots">
  </description>
  <author>Maintained by Patrick Bouffard</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/starmac_robots</url>

  <!-- Note - no dependencies are specified here because we don't want to require
  the user to install all dependencies of all robots just to use one robot. This shouldn't
  matter until unless/until we formally 'release' starmac-ros-pkg -->
<package name="simulated_quadrotor"/><package name="starmac_robots_asctec"/></stack><stack name="navigation_experimental" path="" repo="navigation_experimental" repo_host="https://kforge.ros.org/navigation/experimental">
  <description brief="navigation experimental">Experimental features for future releases of the navigation stack.</description>
  <author>Maintained by Eitan Marder-Eppstein</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/navigation_experimental</url>
  <depend stack="arm_navigation"/> <!-- sbpl -->
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- nav_msgs, sensor_msgs, geometry_msgs, visualization_msgs -->
  <depend stack="eigen"/> <!-- eigen -->
  <depend stack="filters"/> <!-- filters -->
  <depend stack="geometry"/> <!-- tf, angles, tf_conversions -->
  <depend stack="navigation"/> <!-- move_base_msgs, nav_core, base_local_planner, costmap_2d -->
  <depend stack="pluginlib"/> <!-- pluginlib -->
  <depend stack="pr2_controllers"/> <!-- control_toolbox -->
  <depend stack="ros"/> <!-- roslib -->
  <depend stack="ros_comm"/> <!-- roscpp, message_filters -->

<package name="sbpl_lattice_planner"/><package name="twist_recovery"/><package name="pose_base_controller"/><package name="pose_follower"/><package name="assisted_teleop"/><package name="sbpl_recovery"/><package name="eband_local_planner"/><package name="goal_passer"/></stack><stack name="reem_simulation" path="" repo="reem_simulation" repo_host="https://github.com/pal-robotics/reem_simulation">
  <description brief="REEM simulation components">
    REEM-specific simulation components. These include
    plugins and launch scripts necessary for running REEM in simulation.
  </description>
  <author>Maintained by Adolfo Rodriguez Tsouroukdissian</author>
  <license>Modified BSD</license>
  <review notes="" status="unreviewed"/>
  <url/>
  <depend stack="ros"/>

  <depend stack="common"/>
  <depend stack="common_msgs"/>
  <depend stack="geometry"/>
  <depend stack="physics_ode"/>
  <depend stack="reem_common"/>
  <depend stack="pr2_controllers"/>
  <depend stack="pr2_mechanism"/>
  <depend stack="robot_model"/>
  <depend stack="ros"/>
  <depend stack="simulator_gazebo"/>
  <depend stack="visualization_common"/>
<package name="reem_ogre"/><package name="reem_gazebo"/><package name="reem_controller_configuration_gazebo"/></stack><stack name="erratic_robot" path="/stacks/erratic_robot/trunk" repo="erratic_robot" repo_host="https://ua-ros-pkg.googlecode.com/svn">
    <description brief="Packages related to Videre Erratic mobile robot">
        This stack contains packages that are used to interface with Videre
        Erratic mobile robot. These include the hardware interface driver,
        URDF description, 3D meshes, navigation stack configuration and
        launch files and keyboard teleoperation node.
    </description>

    <author>Maintained by Antons Rebguns</author>
    <license>BSD</license>  
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/erratic_robot</url>

    <depend stack="ros"/>
    <depend stack="ros_comm"/>
    <depend stack="robot_model"/>
    <depend stack="common"/>
    <depend stack="simulator_gazebo"/>
    <depend stack="navigation"/>
    <depend stack="laser_pipeline"/>
    <depend stack="slam_gmapping"/>
    <depend stack="geometry"/>
    <depend stack="common_msgs"/>
    <depend stack="pr2_simulator"/>
    <depend stack="arm_navigation"/>
    <depend stack="point_cloud_perception"/>
<package name="erratic_navigation"/><package name="player"/><package name="erratic_gazebo_plugins"/><package name="erratic_player"/><package name="erratic_description"/><package name="erratic_teleop"/><package name="erratic_navigation_apps"/></stack><stack name="humanoid_walk" path="" repo="stacks/humanoid_walk" repo_host="git://github.com/laas/humanoid_walk">
  <description brief="Tools for humanoids walking movement generation.">

    This stack gathers tools to generate walking movements for humanoids robots.

    It provides both C++ interfaces through walk_interfaces, ROS
    interfaces through walk_msgs and pattern generators algorithms.
  </description>
  <author>Maintained by Thomas Moulard</author>
  <license>BSD</license>  
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/humanoid_walk</url>
  <depend stack="common_rosdeps"/>
  <depend stack="bullet"/> <!-- bullet -->
  <depend stack="common_msgs"/> <!-- nav_msgs, geometry_msgs, visualization_msgs -->
  <depend stack="eigen"/> <!-- eigen -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/>
<package name="walk_interfaces"/><package name="walk_msgs"/><package name="halfsteps_pattern_generator"/></stack><stack name="literate_pr2" path="/literate_pr2/trunk" repo="literate_pr2" repo_host="https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs">
  <description brief="literate_pr2">Literate PR2. Text detection and recognition for indoor environment</description>
  <author>Maintained by Menglong Zhu: menglong(at)seas.upenn.edu</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/literate_pr2</url>
  <depend stack="ros"/> <!-- roscpp, rosbag, std_msgs -->
	<depend stack="vision_opencv"/> <!-- opencv2, cv_bridge -->
	<depend stack="common_msgs"/> <!-- sensor_msgs -->
	<depend stack="pr2_controllers"/> <!-- pr2_controllers_msgs, pr2_mechanism_controllers -->
	<depend stack="image_common"/> <!-- image_transport -->
	<depend stack="ocr"/> <!-- tesseract -->

<package name="pr2_read_text"/><package name="read_text"/></stack><stack name="ias_nav" path="/stacks/ias_nav" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="ias_nav">ias_nav</description>
  <author>Maintained by Lorenz Moesenlechner</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ias_nav</url>
  <depend stack="common_msgs"/> <!-- actionlib_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="ias_common"/> <!-- vision_srvs, navp_action -->
  <depend stack="navigation"/> <!-- move_base_msgs, map_server -->
  <depend stack="pr2_common"/> <!-- pr2_machine -->
  <depend stack="pr2_navigation"/> <!-- pr2_navigation_global, pr2_navigation_perception, pr2_navigation_teleop -->
  <depend stack="ros"/> <!-- roscpp -->
  <depend stack="visualization_common"/> <!-- visualization_msgs -->

<package name="nav_pcontroller"/><package name="ias_maps"/><package name="rosie_move_base"/><package name="ias_pr2_2dnav"/><package name="pr2_nav_pcontroller"/></stack><stack name="object_recognition" path="" repo="object_recognition" repo_host="git://github.com/wg-perception/ros-object_recognition">
  <description brief="object_recognition">object_recognition</description>
  <author>Maintained by Ethan Rublee</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/object_recognition</url>
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- geometry_msgs, actionlib_msgs, sensor_msgs, visualization_msgs -->
  <depend stack="common_rosdeps"/> <!-- common_rosdeps -->
  <depend stack="openni_kinect"/> <!-- openni -->
  <depend stack="perception_pcl"/> <!-- pcl -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/>
  <depend stack="vision_opencv"/> <!-- opencv2 -->

<package name="object_recognition_server"/><package name="object_recognition_core"/></stack><stack name="ride" path="/stacks/ride/trunk" repo="wu-ros-pkg" repo_host="https://wu-ros-pkg.svn.sourceforge.net/svnroot/wu-ros-pkg" version="0.2.2">
  <description brief="video game inspired control of multiple robots">

     Video game inspired control of multiple robots

  </description>
  <author>Maintained by Erik Karulf</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ride</url>
  <depend stack="common_msgs"/>
  <depend stack="geometry"/>
  <depend stack="ros"/>
  <depend stack="panda3d"/>
<package name="ride_agent"/><package name="laser_threshold"/><package name="ride_core"/><package name="ride_stage"/><package name="ride_msgs"/></stack><stack name="roboard" path="/trunk/veltrop-ros-pkg/roboard" repo="veltrop-ros-pkg" repo_host="https://veltrop-ros-pkg.svn.sourceforge.net/svnroot/veltrop-ros-pkg">
  <description brief="roboard">
  Contains packages to control servos and read sensors of the 
  Roboard.  Also includes the RoBoIO library for the Roboard.
  </description>
  <author>Maintained by Taylor Veltrop</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://taylor.veltrop.com/robotics/khrhumanoidv2.php?topic=veltrop-ros-pkg</url>
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="ros"/> <!-- std_msgs, roscpp -->
  <depend stack="veltrobot"/> <!-- veltrobot_msgs -->

<package name="roboard_roboio"/><package name="roboard_gui"/><package name="roboard_servos"/><package name="roboard_sensors"/></stack><stack name="executive_smach_visualization" path="" repo="executive_smach_visualization" repo_host="https://kforge.ros.org/smach/visualization">
  <description brief="executive_smach">
    The executive_smach stack contains the SMACH library, together
    with tools for introspection and a ROS integration package.
  </description>
  <author>Maintained by Wim Meeussen</author>
  <license>BSD</license>  
  <review notes="" status="doc reviewed"/>
  <url>http://ros.org/wiki/executive_smach_visualization</url>
  <depend stack="executive_smach"/> <!-- smach_ros, smach_msgs -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- smach_msgs -->
  <depend stack="rx"/> <!-- xdot -->

<package name="smach_viewer"/></stack><stack name="vision_visp" path="" repo="stacks/vision_visp" repo_host="git://github.com/laas/vision_visp">
  <description brief="Virtual visual servoing stack">

    This stack wraps ViSP, the virtual visual servoing platform into
    ROS.

    In particular, visp_tracker allows online object tracking.

  </description>
  <author>Maintained by Thomas Moulard</author>
  <license>BSD,GPL</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/vision_visp</url>
  <depend stack="common_msgs"/> <!-- geometry_msgs, sensor_msgs -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure -->
  <depend stack="geometry"/> <!-- bullet -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="image_pipeline"/> <!-- image_proc -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rospy, rosbag, std_msgs, roscpp -->
  <depend stack="vision_opencv"/> <!-- opencv2 -->

<package name="visp"/><package name="visp_tracker"/></stack><stack name="colbot-ros-pkg" path="/trunk/colbot-ros-pkg" repo="colbot-ros-pkg" repo_host="http://colbot.googlecode.com/svn">
  <description brief="Packages for Colbot robot">
    Colbot experimental robot custom packages
  </description>
  <author>fpesquet@gmail.com</author>
  <license>BSD</license>
  <depend stack="geometry"/> 
  <depend stack="ros"/> 
  <depend stack="visualization_common"/> 
  <depend stack="common"/> 
  <depend stack="common_msgs"/> 
<package name="lasertracker"/><package name="roscolbot"/><package name="colbotcanon"/><package name="rosqwerk"/></stack><stack name="cob_people_perception" path="" repo="cob_people_perception" repo_host="git://github.com/ipa320/cob_people_perception">
  <description brief="cob_people_perception">cob_people_perception</description>
  <author>Maintained by Richard Bormann</author>
  <license>BSD,Fraunhofer IPA</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_people_perception</url>
  <depend stack="cob_common"/> <!-- cob_vision_utils -->
  <depend stack="common"/> <!-- actionlib, tinyxml -->
  <depend stack="common_msgs"/> <!-- sensor_msgs, actionlib_msgs, geometry_msgs, stereo_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="nodelet_core"/> <!-- nodelet -->
  <depend stack="openni_kinect"/> <!-- openni, nite -->
  <depend stack="orocos_kinematics_dynamics"/> <!-- kdl -->
  <depend stack="perception_pcl"/> <!-- pcl, pcl_ros -->
  <depend stack="ros"/> <!-- roslib -->
  <depend stack="ros_comm"/> <!-- std_srvs, std_msgs, roscpp -->
  <depend stack="vision_opencv"/> <!-- opencv2, image_geometry, cv_bridge -->

<package name="cob_people_detection"/><package name="cob_people_detection_msgs"/></stack><stack name="JKU_Robotic_Stack" path="" repo="JKU_Robotic_Stack" repo_host="https://github.com/AaronMR/JKU_Robotic_Stack">
  <description brief="JKU_Robotic_Stack">JKU_Robotic_Stack</description>
  <author>Maintained by aaronmr</author>
  <license>BSD,LGPL,proprietary</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/JKU_Robotic_Stack</url>
  <depend stack="common_msgs"/> <!-- nav_msgs, sensor_msgs, geometry_msgs -->
  <depend stack="geometry"/> <!-- tf, angles -->
  <depend stack="geometry_experimental"/> <!-- tf2 -->
  <depend stack="joystick_drivers"/> <!-- joy -->
  <depend stack="laser_pipeline"/> <!-- laser_geometry -->
  <depend stack="ros"/> <!-- rospy, roscpp -->
  <depend stack="ros_tutorials"/> <!-- turtlesim -->

<package name="CB_TCP_RTAI"/><package name="Laser_PLS200"/><package name="joint_state_publisher"/><package name="JKU_maps"/><package name="joy"/><package name="R1_Odom"/><package name="R1_teleop_joy"/><package name="R1_2dnav"/><package name="R1_urdf"/><package name="R1_teleop_key"/><package name="R1_launch"/></stack><stack name="continuous_ops" path="" repo="continuous_ops" repo_host="https://kforge.ros.org/contops/hg">
  <description brief="continuous_ops">continuous_ops</description>
  <author>Maintained by Austin Hendrix</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/continuous_ops</url>
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- geometry_msgs, actionlib_msgs, sensor_msgs, diagnostic_msgs -->
  <depend stack="executive_smach"/> <!-- smach_ros, smach -->
  <depend stack="geometry"/> <!-- kdl -->
  <depend stack="navigation"/> <!-- move_base_msgs -->
  <depend stack="pr2_common"/> <!-- pr2_msgs -->
  <depend stack="pr2_common_actions"/> <!-- pr2_common_action_msgs -->
  <depend stack="pr2_controllers"/> <!-- pr2_mechanism_controllers -->
  <depend stack="pr2_plugs"/> <!-- pr2_plugs_msgs, pr2_plugs_executive -->
  <depend stack="ros"/> <!-- std_msgs, roslib, rospy, rosbag, std_srvs -->
  <depend stack="web_interface"/> <!-- rosweb, webui -->

<package name="navigation_task"/><package name="continuous_ops_task_manager"/><package name="continuous_ops_executive"/><package name="continuous_ops_msgs"/><package name="pr2_base_recovery"/><package name="continuous_ops_test_task"/><package name="continuous_ops_web"/><package name="continuous_ops_alerts"/><package name="motor_resetter"/><package name="task_image_server"/></stack><stack name="control" path="" repo="control" repo_host="https://bitbucket.org/sglaser/control">
  <description brief="control">control</description>
  <author>Maintained by Stuart Glaser</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/control</url>
  <depend stack="common_msgs"/> <!-- actionlib_msgs, trajectory_msgs, geometry_msgs -->
  <depend stack="ros"/>

<package name="control_msgs"/></stack><stack name="patrol" path="/trunk/unstable/patrol" repo="isr-uc-ros-pkg" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="patrol">Multi-Robot Patrol-Related Stack from the ISR Coimbra.</description>
  <author>Maintained by David Portugal</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/patrol</url>
  <depend stack="ros"/>

<package name="patrolling_sim"/></stack><stack name="wg_pr2_apps" path="/stacks/wg_pr2_apps/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="Applications for robots running at Willow Garage">Basic applications for PR2 robots running at Willow Garage.</description>
  <author>Maintained by Eitan Marder-Eppstein</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/wg_pr2_apps</url>
  <depend stack="navigation"/> <!-- map_server -->
  <depend stack="pr2_common"/> <!-- pr2_machine -->
  <depend stack="pr2_navigation"/> <!-- pr2_navigation_global, pr2_navigation_perception, pr2_navigation_teleop -->
  <depend stack="ros"/>
  <depend stack="wg_common"/> <!-- willow_maps -->

<package name="wg_pr2_2dnav"/></stack><stack name="UCLA-robomagellan" path="" repo="UCLA-robomagellan" repo_host="https://github.com/garbear/UCLA-robomagellan">
  <description brief="ucla-robomagellan">UCLA-robomagellan</description>
  <author>Maintained by Garrett Brown</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/UCLA-robomagellan</url>
  <depend stack="ros"/>

<package name="libax3500"/><package name="glados"/></stack><stack name="katana_driver" path="" repo="uos-ros-pkg" repo_host="http://kos.informatik.uni-osnabrueck.de/uos-ros-pkg.git">
  <description brief="Drivers and arm navigation for Neuronics Katana 450 robot arm">

    This stack contains hardware drivers for the
    <a href="http://neuronics.ch/cms_en/web/index.php?lid=54">Neuronics Katana 450 robot arm</a>,
    along with a port of the arm navigation pipeline.

  </description>
  <author>Maintained by Martin Günther</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/katana_driver</url>
  <depend stack="ros"/>
<package name="katana_arm_kinematics_constraint_aware"/><package name="katana_joint_movement_adapter"/><package name="katana_openrave_test"/><package name="katana_tutorials"/><package name="katana_arm_gazebo"/><package name="katana_gazebo_plugins"/><package name="kni"/><package name="katana_teleop"/><package name="katana"/><package name="katana_msgs"/><package name="katana_openrave_kinematics"/><package name="katana_arm_navigation"/><package name="katana_trajectory_filter"/><package name="katana_description"/></stack><stack name="visual_feature_detectors" path="/branches/trunk_cturtle/stacks/visual_feature_detectors" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="visual_feature_detectors">

     Visual feature and object detectors.

  </description>
  <author>Patrick Mihelich</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/visual_feature_detectors</url>
  <depend stack="common_msgs"/> <!-- sensor_msgs, geometry_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="image_pipeline"/> <!-- image_proc -->
  <depend stack="ros"/> <!-- std_msgs, rostest, rospy, roscpp -->
  <depend stack="vision_opencv"/> <!-- opencv2, image_geometry, cv_bridge -->
  <depend stack="visualization_common"/> <!-- visualization_msgs -->

<package name="fast_detector"/><package name="brief_descriptor"/><package name="descriptors_2d"/><package name="calonder_descriptor"/><package name="features_2d_ros"/><package name="fast_sift"/><package name="features_2d"/><package name="descriptors_2d_gpl"/><package name="daisy"/></stack><stack name="bosch_image_proc" path="/trunk/stacks/bosch_image_proc" repo="bosch-ros-pkg" repo_host="https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg">
  <description brief="BOSCH image processing tools">Contains tools for image processing</description>
  <author>Christian Bersch (Maintained by Benjamin Pitzer)</author>
  <license>BSD, GPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/camera_robot_self_filter</url>
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="geometry"/> <!-- tf, tf_conversions -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="robot_model"/> <!-- urdf -->
  <depend stack="ros"/> <!-- roscpp, message_filters -->
  <depend stack="vision_opencv"/> <!-- image_geometry, opencv2, cv_bridge -->

<package name="camera_self_filter"/><package name="pr2_camera_self_filter"/><package name="vcglib"/></stack><stack name="starmac_ground" path="" repo="starmac-ros-pkg" repo_host="https://bitbucket.org/bouffard/starmac-ros-pkg">
  <description brief="starmac_ground">starmac_ground</description>
  Packages that are not intended for use onboard a vehicle. These are kept in a separate stack to help keep the
  dependencies of the starmac_flyer stack to a minimum.
  <author>Maintained by bouffard</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/starmac_ground</url>
  <depend stack="ros"/>
  <depend stack="geometry"/>
  <depend stack="starmac_common"/>

<package name="starmac_gui"/><package name="starmac_viz"/></stack><stack name="cob_web" path="" repo="cob_web" repo_host="git://github.com/ipa320/cob_web">
  <description brief="cob_web">cob_web</description>
  <author>Maintained by Ulrich Reiser</author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_web</url>
  <depend stack="robot_model"/> <!-- robot_state_publisher -->
  <depend stack="ros"/>

<package name="cob_webportal"/></stack><stack name="pogo" path="/trunk/pogo" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="Power-On-and-Go Calibration">
    The Power-On-and-Go (POGO) stack provides packages for visual and
    visual-inertial sensor calibration, with the goal of enabling 
    persistent autonomous operation.
  </description>
  <author>Maintained by Jonathan Kelly</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://robotics.usc.edu/ros</url>
  <depend stack="ros"/>
<package name="invisical"/></stack><stack name="redundant_manipulator_control" path="" repo="stacks/redundant_manipulator_control" repo_host="git://github.com/laas/redundant_manipulator_control">
  <description brief="Real-time control framework for redundant manipulators.">

    Real-time control framework for redundant manipulators.

  </description>
  <author>Maintained by Thomas Moulard</author>
  <license>BSD,LGPL</license>
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/redundant_manipulator_control</url>

  <depend stack="documentation"/> <!-- rosep: doxygen -->
  <depend stack="bullet"/> <!-- bullet -->
  <depend stack="common_msgs"/> <!-- sensor_msgs, geometry_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="pr2_mechanism"/> <!-- pr2_mechanism_model, realtime_tools, pr2_controller_interface -->
  <depend stack="robot_model"/> <!-- urdf_interface, urdf -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_msgs, roscpp -->

<package name="dynamic_graph_bridge"/></stack><stack name="openrave_planning" path="/trunk/openrave_planning" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg" version="0.1">
  <description brief="Open Robotics Automation Virtual Environment ROS Bindings">
    This stack offers OpenRAVE-related bindings.
    Maintained by the JSK lab at University of Tokyo.
  </description>
  <author>Rosen Diankov (rosen.diankov@gmail.com)</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.openrave.org</url>
  
  <depend stack="arm_navigation_msgs"/> <!-- mapping_msgs, manipulation_msgs --> 
  <depend stack="geometry"/> <!-- tf, bullet --> 
  <depend stack="physics_ode"/> <!-- opende --> 
  <depend stack="ros"/> <!-- std_msgs, roscpp --> 
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="robot_model"/> <!-- colladadom, collada_urdf -->
  <depend stack="robot_calibration"/> <!-- calibration stuff -->
<package name="openrave_calibration"/><package name="openrave_sensors"/><package name="openrave_database"/><package name="orrosplanning"/><package name="openrave_msgs"/><package name="collada_robots"/><package name="openrave_robot_control"/><package name="openrave_actionlib"/><package name="roscpp_sessions"/><package name="session_tutorials"/><package name="openrave"/><package name="openraveros"/><package name="openrave_robot_filter"/></stack><stack name="pr2_exploration" path="/trunk/stacks/pr2_exploration" repo="bosch-ros-pkg" repo_host="https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg">
  <description brief="Exploration stack for the PR2">
     Exploration stack for the PR2.
  </description>
  <author>Charles DuHadway (maintained by Benjamin Pitzer)</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_exploration</url>
  <depend stack="exploration"/> <!-- explore -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="joystick_drivers"/> <!-- joy -->
  <depend stack="navigation"/> <!-- move_base -->
  <depend stack="pr2_apps"/> <!-- pr2_teleop -->
  <depend stack="pr2_navigation"/> <!-- pr2_navigation_slam -->
  <depend stack="ros"/>
  <depend stack="slam_gmapping"/> <!-- gmapping -->

<package name="explore_pr2"/></stack><stack name="mapping" path="" repo="mapping" repo_host="http://code.in.tum.de/git/mapping.git" version="0.1">
  <description brief="mapping">

    Collection of routines and functions for 3D mapping@IAS.

  </description>
  <author>Nico Blodow, Zoltan-Csaba Marton, Dejan Pangercic</author>
  <license>BSD</license>  
  <review notes="" status=""/>
  <url>http://ros.org/wiki/mappping</url>
  <depend stack="vision_opencv"/> <!-- opencv2, cv_bridge --> 
  <depend stack="point_cloud_perception"/> <!-- pcl, pcl_ros, eigen3, vtk, pcl_visualization, point_cloud_converter --> 
  <depend stack="ros"/> <!-- roscpp, std_msgs --> 
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="common_msgs"/> <!-- geometry_msgs, sensor_msgs --> 
  <depend stack="ias-common"/> <!-- triangle_mesh_msgs --> 
  <depend stack="octomap_mapping"/> <!-- octomap, octomap_server --> 
  <depend stack="geometry"/> <!-- tf, bullet --> 
  <depend stack="ias_visualization"/> <!-- triangle_mesh_msgs --> 
  <depend stack="visualization_common"/> <!-- visualization_msgs --> 
  <depend stack="motion_planning_common"/> <!-- mapping_msgs --> 
  <depend stack="common"/> <!-- yaml_cpp, actionlib --> 
  <depend stack="pr2_common"/> <!-- pr2_msgs --> 
  <depend stack="navigation"/> <!-- move_base_msgs --> 
  <depend stack="pr2_controllers"/> <!-- pr2_controllers_msgs --> 
<package name="ias_table_msgs"/><package name="kinect_cleanup"/><package name="pr2_data_acquisition_tools"/><package name="pcl_ias_sample_consensus"/><package name="ias_projected_light"/><package name="handle_detection2D"/><package name="vosch"/><package name="next_best_view"/><package name="pcl_cloud_algos"/><package name="handle_detection"/><package name="pcl_cloud_tools"/><package name="pointcloud_registration"/><package name="as11"/><package name="mapping_ias_msgs"/><package name="pcl_to_octree"/><package name="pcl_vtk_tools"/><package name="ias_table_srvs"/></stack><stack name="ivs-ros-pkg" path="/trunk" repo="ivs-ros-pkg" repo_host="http://svn.code.sf.net/p/ivs-ros-pkg/code">
  <description brief="ivs-ros-pkg">ivs-ros-pkg</description>
  <author>Maintained by andre</author>
  <license/>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ivs-ros-pkg</url>
  <depend stack="ros"/>

<package name="janus"/><package name="rosshell"/></stack><stack name="arbotix" path="/trunk/arbotix" repo="vanadium-ros-pkg" repo_host="http://vanadium-ros-pkg.googlecode.com/svn">
  <description brief="ArbotiX drivers and other stuff">
    This stack provides comprehensive access to the ArbotiX RoboController and associated peripherals. 
  </description>
  <author>Maintained by Michael Ferguson</author>
  <license>BSD,</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/arbotix</url>
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- nav_msgs, geometry_msgs, trajectory_msgs, sensor_msgs, diagnostic_msgs -->
  <depend stack="control"/> <!-- control_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_srvs, rospy, roscpp -->

<package name="arbotix_msgs"/><package name="arbotix_sensors"/><package name="arbotix_controllers"/><package name="arbotix_python"/><package name="arbotix_firmware"/></stack><stack name="lse_arduino" path="/trunk/unstable/lse_arduino" repo="isr-uc-ros-pkg" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="lse_arduino">
  
  	A stack for arduino related packages for ROS.
  	
  </description>
  <author>Gonçalo Cabrita and Pedro Sousa</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/lse_arduino</url>
  <depend stack="ros"/>	<!-- roscpp -->
  <depend stack="lse_communication"/>	<!-- cereal_port -->

<package name="ardusim"/></stack><stack name="kt2_simulator" path="/branches/trunk_electric/kt2_simulator" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="kt2_simulator">kt2_simulator</description>
  <author>Maintained by Kevin Watts</author>
  <license/>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/kt2_simulator</url>
  <depend stack="camera_drivers"/> <!-- wge100_camera -->
  <depend stack="common"/> <!-- xacro, tinyxml, pluginlib -->
  <depend stack="common_msgs"/> <!-- sensor_msgs, geometry_msgs, stereo_msgs -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure, driver_base -->
  <depend stack="geometry"/> <!-- tf, angles -->
  <depend stack="pr2_mechanism"/> <!-- pr2_hardware_interface, pr2_mechanism_model -->
  <depend stack="pr2_simulator"/> <!-- pr2_gazebo -->
  <depend stack="robot_model"/> <!-- convex_decomposition, ivcon, urdf -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rospy, roscpp -->
  <depend stack="simulator_gazebo"/> <!-- gazebo_tools, gazebo, gazebo_plugins -->
  <depend stack="vision_opencv"/> <!-- image_geometry -->

<package name="kt2_gazebo_plugins"/><package name="kt2_turtlebot_defs"/><package name="kt2_pr2_defs"/></stack><stack name="kurt_driver" path="" repo="uos-ros-pkg" repo_host="http://kos.informatik.uni-osnabrueck.de/uos-ros-pkg.git">
  <description brief="kurt_driver">kurt_driver</description>
  <author>Maintained by Jochen Sprickerhof</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/kurt_driver</url>
  <depend stack="common"/> <!-- xacro -->
  <depend stack="common_msgs"/> <!-- nav_msgs, sensor_msgs, geometry_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="joystick_drivers"/> <!-- joy -->
  <depend stack="laser_pipeline"/> <!-- laser_assembler -->
  <depend stack="robot_model"/> <!-- urdf -->
  <depend stack="ros"/> <!-- roscpp -->

<package name="kurt_gazebo"/><package name="kurt_description"/><package name="rotunit_snapshotter"/><package name="kurt_gazebo_plugins"/><package name="kurt_base"/><package name="kurt_bringup"/><package name="kurt_teleop"/></stack><stack name="mav_tools" path="" repo="mav_tools" repo_host="http://robotics.ccny.cuny.edu/git/ccny-ros-pkg/mav_tools.git">
  <description brief="Micro-air vehicle tools for ROS">Hardware-independent micro-air vehicle tools</description>
  <author>Maintained by Ivan Dryanovski, William Morris</author>
  <license>BSD</license>  
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/mav_tools</url>
  <depend stack="common"/>
  <depend stack="common_msgs"/>
  <depend stack="geometry"/>
  <depend stack="ros"/>
<package name="mav_msgs"/><package name="laser_height_estimation"/></stack><stack name="ias_visualization" path="/stacks/ias_visualization" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="ias_visualization">
    ias_visualization is a collection of visualization messages and accompanying rviz plugins
  </description>
  <author>Maintained by Nico Blodow</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ias_visualization</url>
  <depend stack="common_msgs"/> <!-- sensor_msgs, geometry_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="grasping"/> <!-- simple_grasp_planner -->
  <depend stack="ias_common"/> <!-- vision_msgs, vision_srvs -->
  <depend stack="ros"/> <!-- std_msgs, roscpp -->
  <depend stack="visualization"/> <!-- rviz -->

<package name="triangle_mesh_rviz_plugin"/><package name="position_string_rviz_plugin"/><package name="cop_rviz_plugin"/><package name="position_string_msgs"/><package name="tf_trajectory_visualization"/></stack><stack name="vanadium_robots" path="/trunk/vanadium_robots" repo="vanadium-ros-pkg" repo_host="http://vanadium-ros-pkg.googlecode.com/svn">
  <description brief="vanadium_robots">This stack contains configuration files, launch files, and application code for robots developed at Vanadium Labs.</description>
  <author>Maintained by Michael Ferguson</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/vanadium_robots</url>
  <depend stack="arbotix"/> <!-- arbotix_python, arbotix_controllers -->
  <depend stack="kinematics"/> <!-- kinematics_msgs -->
  <depend stack="robot_model"/> <!-- urdf -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- kinematics_msgs, roscpp -->

<package name="armadillo_2wd"/><package name="dexter"/></stack><stack name="simulator_plumesim" path="/trunk/unstable/simulator_plumesim" repo="isr-uc-ros-pkg" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="simulator_plumesim">
  
  	Odor plume simulator for ROS.
   
  </description>
  <author>Gonçalo Cabrita and Pedro Sousa</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/simulator_plumesim</url>
  <depend stack="ros"/>
  <depend stack="lse_messages"/>

<package name="plumesim"/></stack><stack name="orocos_toolchain" path="" repo="orocos_toolchain" repo_host="http://git.gitorious.org/orocos-toolchain/orocos_toolchain.git">
  <description brief="orocos_toolchain">

      This stack contains all software necessary to build
      systems using the Orocos Toolchain.
  </description>
  <author>Maintained by Ruben Smits - Steven Bellens - Peter Soetens</author>
  <license>GPL + runtime exception,LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://www.orocos.org/toolchain</url>
  <depend stack="ros"/>
  <depend stack="common_rosdeps"/>
<package name="typelib"/><package name="utilmm"/><package name="ocl"/><package name="rtt_typelib"/><package name="log4cpp"/><package name="utilrb"/><package name="orogen"/><package name="rtt"/></stack><stack name="ua_controllers" path="/trunk/arrg/ua_controllers" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
  <description brief="Controllers for the Wubble Robot">
  This stack contains higher level controllers for the Wubble Robot, which 
  generally depend on packages in the ua_drivers stack for interfacing with 
  the hardware. Thus, packages in this stack provide a higher level of 
  abstraction for Wubble Robot subsystems than ua_drivers.
  </description>
  <author>Maintained by UA Robotics Research Group</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ua_controllers</url>
  <depend stack="ros"/>

<package name="wubble_arm_kinematics"/><package name="wubble_controllers"/><package name="charlie_controllers"/><package name="wubble_actions"/></stack><stack name="ce_common" path="/trunk/ce_common" repo="vmi-ros-pkg" repo_host="https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg">
  <description brief="ce_common">ce_common</description>
  <author>Maintained by Roalter Luis</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ce_common</url>
  <depend stack="ros"/>

<package name="ce_hardware"/><package name="ce_common"/></stack><stack name="multi_robot_collision_avoidance" path="" repo="multi_robot_collision_avoidance" repo_host="https://kforge.ros.org/collvoid/collvoid">
  <description brief="collvoid">Multi Robot Collision Avoidance</description>
  <author>Maintained by Daniel Claes</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/collvoid</url>
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- nav_msgs, geometry_msgs, visualization_msgs -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure -->
  <depend stack="geometry"/> <!-- tf, angles -->
  <depend stack="navigation"/> <!-- move_base_msgs, nav_core, base_local_planner, costmap_2d -->
  <depend stack="pluginlib"/> <!-- pluginlib -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_msgs, rospy, roscpp, std_srvs -->
  <depend stack="stage"/> <!-- stage -->

<package name="collvoid_turtlebot"/><package name="collvoid_controller"/><package name="collvoid_simple_global_planner"/><package name="collvoid_msgs"/><package name="pacman_turtles"/><package name="pacman_controller"/><package name="collvoid_pr2"/><package name="collvoid_local_planner"/><package name="collvoid_stage"/></stack><stack name="jrl-ros-pkg" path="" repo="jrl-ros-pkg" repo_host="https://github.com/jrl-umi3218/jrl-ros-pkg">
  <description brief="dynamic_graph">

    This stack gathers the HRP-2 control packages and its
    dependencies.

  </description>
  <author>Maintained by Thomas Moulard</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/dynamic_graph</url>
  <depend stack="ros"/>

<package name="hrp2-dynamics"/><package name="jrl-dynamics"/><package name="jrl-mathtools"/><package name="hrp2-10-optimized"/><package name="jrl-mal"/><package name="dynamic-graph"/><package name="abstract-robot-dynamics"/><package name="jrl-walkgen"/><package name="dg-middleware"/><package name="hrp2-10"/><package name="sot-dynamic"/><package name="robot-viewer"/><package name="sot-pattern-generator"/><package name="sot-core"/><package name="sot-openhrp"/><package name="hrp2-14"/><package name="sot-gui"/><package name="sot-openhrp-scripts"/></stack><stack name="turtlebot" path="" repo="turtlebot" repo_host="https://kforge.ros.org/turtlebot/turtlebot">
  <description brief="turtlebot">The turtlebot stack provides all the basic drivers for running and using a TurtleBot. </description>
  <author>Maintained by Tully Foote and Melonee Wise</author>
  <license>BSD,MIT</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/turtlebot</url>
  <depend stack="common_msgs"/> <!-- nav_msgs, geometry_msgs, sensor_msgs, diagnostic_msgs -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="image_transport_plugins"/> <!-- compressed_image_transport -->
  <depend stack="joystick_drivers"/> <!-- joy -->
  <depend stack="multimaster_experimental"/> <!-- app_manager -->
  <depend stack="nodelet_core"/> <!-- nodelet -->
  <depend stack="openni_kinect"/> <!-- openni_camera -->
  <depend stack="orocos_kinematics_dynamics"/> <!-- kdl -->
  <depend stack="perception_pcl"/> <!-- pcl_ros -->
  <depend stack="robot_model"/> <!-- robot_state_publisher, urdf -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rospy -->
  <depend stack="xacro"/> <!-- xacro -->

<package name="turtlebot_node"/><package name="pointcloud_to_laserscan"/><package name="turtlebot_description"/><package name="turtlebot_bringup"/><package name="turtlebot_driver"/></stack><stack name="nodelet_core" path="" repo="nodelet_core" repo_host="https://kforge.ros.org/common/nodeletcore">
  <description brief="Nodelet core">
    Nodelets library and tools.  Nodelets are a plugin architecture for roscpp that enable
    dynamic loading of multiple 'nodelets' into a single ROS node instance.
  </description>
  <author>Maintained by Tully Foote tfoote@willowgarage.com</author>
  <license>BSD</license>  
  <review notes="2009-10-07" status="doc reviewed"/>
  <url>http://ros.org/wiki/nodelet_core</url>
  <depend stack="bond_core"/> <!-- bondcpp -->
  <depend stack="pluginlib"/> <!-- pluginlib -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_msgs, rostest, rospy, roscpp, message_filters -->

<package name="nodelet_topic_tools"/><package name="nodelet"/><package name="test_nodelet"/></stack><stack name="eigen" path="" repo="eigen" repo_host="https://kforge.ros.org/geometry/eigen">
  <description brief="Eigen Library">
     Eigen Library
  </description>
  <author>Package Maintained by Tully Foote tfoote@willowgarage.com</author>
  <license>BSD,LGPL,ZLib</license>  
  <review notes="2009-10-07" status="doc reviewed"/>
  <url>http://ros.org/wiki/eigen</url>

  <depend stack="ros"/>
  <depend stack="common_rosdeps"/>

<package name="eigen"/></stack><stack name="cram_demo_apps" path="/stacks/cram_demo_apps" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="cram_demo_apps">cram_demo_apps</description>
  <author>Maintained by Lorenz Moesenlechner</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cram_demo_apps</url>
  <depend stack="common_msgs"/> <!-- geometry_msgs -->
  <depend stack="cram_highlevel"/> <!-- cram_roslisp_common, designators_ros, cram_plan_knowledge, cram_plan_library, cl_json_pl_server -->
  <depend stack="cram_pl"/> <!-- cram_reasoning, cram_execution_trace, cram_utilities, designators -->
  <depend stack="cram_rosie"/> <!-- rosie_executive -->
  <depend stack="ias_visualization"/> <!-- tf_trajectory_visualization -->
  <depend stack="ros"/>
  <depend stack="visualization_common"/> <!-- visualization_msgs -->

<package name="rosie_execution_trace_visualization"/><package name="pr2_execution_trace_visualization"/></stack><stack name="vmi" path="/trunk/vmi" repo="vmi-ros-pkg" repo_host="https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg">
  <description brief="vmi">
	MetaStack which depends on all other stacks.
	For Debian.
</description>
  <author>Maintained by Roalter Luis</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/vmi</url>
  <depend stack="ros"/>
 
</stack><stack name="lse_imu_drivers" path="/trunk/unstable/lse_imu_drivers" repo="isr-uc-ros-pkg" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="lse_imu_drivers">
  	This stack contains drivers for IMUs. Currently it only has support for the Xsens MTi.
  </description>
  <author>Gonçalo Cabrita</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/lse_imu_drivers</url>
  <depend stack="ros"/>	<!-- roscpp -->
  <depend stack="lse_communication"/>	<!-- cereal_port -->

<package name="lse_xsens_mti"/></stack><stack name="filters" path="" repo="filters" repo_host="https://kforge.ros.org/common/filters">
  <description brief="filters">This library provides a standardized interface for processing data as a sequence of filters. This package contains a base class upon which to build specific implementations as well as an interface which dynamically loads filters based on runtime parameters. </description>
  <author>Maintained by Tully Foote</author>
  <license>BSD</license>  
  <review notes="" status="doc reviewed"/>
  <url>http://ros.org/wiki/filters</url>
  <depend stack="pluginlib"/> <!-- pluginlib -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rosconsole, roscpp -->

<package name="filters"/></stack><stack name="multimaster" path="" repo="multimaster" repo_host="https://kforge.ros.org/collvoid/multimaster">
  <description brief="multimaster">Multimaster is a script allowing to register topics and services at a second master and to subscribe to topics and services from a second master. </description>
  <author>Maintained by Wim Meeussen</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/multimaster</url>
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rospy, rosgraph -->

<package name="multimaster"/></stack><stack name="pano" path="/stacks/pano/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="panorama">Create panoramic images</description>
  <author>Maintained by Ethan Rublee</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pano</url>
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- actionlib_msgs -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_msgs, rospy, roscpp -->
  <depend stack="vision_opencv"/> <!-- opencv2, cv_bridge -->

<package name="pano_core"/><package name="pano_py"/><package name="pano_ros"/></stack><stack name="people_experimental" path="/branches/trunk_cturtle/stacks/people_experimental" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="Experimental/research packages related to perceiving and interacting with people.">people_experimental</description>
  <author>Maintained by Caroline Pantofaru</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/people_experimental</url>
  <depend stack="common"/> <!-- bfl -->
  <depend stack="common_msgs"/> <!-- sensor_msgs, geometry_msgs -->
  <depend stack="geometry"/> <!-- tf, bullet -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="image_pipeline"/> <!-- stereo_msgs -->
  <depend stack="laser_pipeline"/> <!-- laser_geometry -->
  <depend stack="people"/> <!-- people_msgs -->
  <depend stack="ros"/> <!-- std_srvs, std_msgs, roscpp, message_filters -->
  <depend stack="vision_opencv"/> <!-- opencv2, cv_bridge -->
  <depend stack="visualization_common"/> <!-- visualization_msgs -->

<package name="people_tracking_filter"/><package name="height_tracker"/><package name="pedestrian_detector_HOG"/><package name="leg_detector"/></stack><stack name="itasc_core" path="" repo="itasc_core" repo_host="http://git.mech.kuleuven.be/robotics/itasc_core.git">
  <description brief="itasc_core">itasc_core unary stack</description>
  <author>Maintained by Dominick Vanthienen</author>
  <license>BSD,LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://orocos.org/itasc</url>
  <depend stack="ros"/>
<package name="itasc_core"/></stack><stack name="eros" path="/trunk" repo="eros" repo_host="https://code.ros.org/svn/eros">
  <description brief="Build environment support for embedded ros">
    This stack includes supporting components to enable ros development on embedded boards.
  </description>
  <author>Daniel Stonier (d.stonier@gmail.com)</author>
  <license>BSD</license>  
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/eros</url>
  <depend stack="ros"/>
<package name="eros_license"/><package name="eros_build"/><package name="eros_toolchains"/><package name="eros_platforms"/><package name="eros_python_tools"/><package name="eros_boost"/><package name="eros_apr"/><package name="eros_log4cxx"/><package name="eros_apr_util"/><package name="roscpplight"/><package name="code_sourcery_arm_gnueabi"/><package name="eros_bzip2"/><package name="eros_opencv"/><package name="eros_zlib"/><package name="eros_gdbserver"/><package name="eros_cpp_tutorials"/><package name="eros_rpc_latency"/><package name="eros_nodelet_latency"/><package name="eros_msg_latency"/><package name="eros_qt_tutorials"/></stack><stack name="ethercat_diag_tools" path="/branches/trunk_diamondback/stacks/ethercat_diag_tools" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="ethercat_diag_tools">ethercat_diag_tools</description>
  <author>Maintained by Kevin Watts</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ethercat_diag_tools</url>
  <depend stack="common_msgs"/> <!-- diagnostic_msgs -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rosbag, rospy, diagnostic_msgs -->

<package name="diagnostic_annotate"/><package name="ethercat_monitor"/></stack><stack name="simple_object_capture" path="" repo="simple_object_capture" repo_host="https://kforge.ros.org/simplecap/simple_capture">
  <description brief="simple_capture">simple_capture</description>
  <author>Maintained by Wim Meeussen</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/simple_object_capture</url>
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure -->
  <depend stack="perception_pcl"/> <!-- pcl, pcl_ros -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rosbag, roscpp, message_filters -->
  <depend stack="vision_opencv"/> <!-- opencv2, cv_bridge -->

<package name="simple_object_capture"/></stack><stack name="rosh_robot_plugins" path="" repo="rosh_robot_plugins" repo_host="https://kforge.ros.org/rosh/rosh_robot_hg">
  <description brief="roshpit">ROSH related packages. This is a temporary stack that is expected to go away after the Diamondback release. For C Turtle and Diamondback it provides a convenient way to install rosh until it is properly stabilized.</description>
  <author>Maintained by Ken Conley</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosh_robot_plugins</url>
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- nav_msgs, geometry_msgs, sensor_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="ros"/> <!-- roslib -->
  <depend stack="ros_comm"/> <!-- std_msgs, rospy, rosmsg, rostopic -->
  <depend stack="rosh_core"/> <!-- rosh -->

<package name="rosh_robot"/><package name="rosh_common"/><package name="rosh_geometry"/></stack><stack name="perception_pcl" path="/trunk/perception_pcl_unstable" repo="perception_pcl" repo_host="http://svn.pointclouds.org/ros">
  <description brief="Point Cloud Library">
    This contains the Point Cloud Library (PCL), its
    3rd party dependencies, and a ROS interface for PCL nodelets.
  </description>
  <author>Maintained by Radu Bogdan Rusu</author>
  <license>BSD,LGPL</license>  
  <review notes="" status="Doc reviewed"/>
  <url>http://ros.org/wiki/perception_pcl_unstable</url>
  <depend stack="nodelet_core"/> <!-- nodelet_topic_tools, nodelet -->
  <depend stack="common_msgs"/> <!-- sensor_msgs, geometry_msgs -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_msgs, rosbag, roscpp, message_filters -->
  <depend stack="common_rosdeps"/> <!-- eigen -->
<package name="cminpack"/><package name="pcl"/><package name="pcl_ros"/><package name="flann"/></stack><stack name="2dmapping_pr2_app" path="/branches/trunk_cturtle/applications/2dmapping_pr2_app" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg" version="0.1">
  <description brief="A 2D mapping application for the PR2 robot platform.">
  </description>
  <author>Brian Gerkey gerkey@willowgarage.com</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://pr.willowgarage.com/wiki/2dmapping_pr2_app</url>
  

  <depend stack="ros"/> <!-- rosrecord --> 

<package name="2dmapping_pr2"/></stack><stack name="cob_manipulation" path="" repo="cob_manipulation" repo_host="git://github.com/ipa320/cob_manipulation">
  <description brief="Care-O-bot stack with manipulation packages">

     The cob_manipulation stack includes packages that provide manipulation capabilities for Care-O-bot.

  </description>
  <author>Maintained by Alexander Bubeck</author>
  <license>LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_manipulation</url>
  <depend stack="arm_navigation"/> <!-- move_arm, trajectory_filter_server, planning_environment, robot_self_filter, constraint_aware_spline_smoother, arm_kinematics_constraint_aware, kinematics_msgs, kinematics_base, arm_navigation_msgs, ompl_ros_interface -->
  <depend stack="arm_navigation_experimental"/> <!-- collider, move_arm_warehouse -->
  <depend stack="cob_command_tools"/> <!-- cob_script_server -->
  <depend stack="cob_common"/> <!-- cob_srvs, cob_description, brics_actuator -->
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- nav_msgs, actionlib_msgs, trajectory_msgs, geometry_msgs, visualization_msgs -->
  <depend stack="geometry"/> <!-- tf, tf_conversions -->
  <depend stack="object_manipulation"/> <!-- current_state_validator, object_manipulation_msgs -->
  <depend stack="orocos_kinematics_dynamics"/> <!-- kdl -->
  <depend stack="pluginlib"/> <!-- pluginlib -->
  <depend stack="pr2_controllers"/> <!-- pr2_controllers_msgs -->
  <depend stack="pr2_kinematics"/> <!-- pr2_arm_kinematics -->
  <depend stack="robot_model"/> <!-- robot_state_publisher, urdf, kdl_parser, collada_urdf -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_msgs, rospy, roscpp -->
  <depend stack="schunk_modular_robotics"/> <!-- schunk_sdh -->
  <depend stack="visualization"/> <!-- rviz -->
  <depend stack="warehousewg"/> <!-- mongodb -->

<package name="cob_manipulator"/><package name="cob_mmcontroller"/><package name="cob_tactiletools"/><package name="cob_gripper_grasp_controller_sdh"/><package name="cob3_3_arm_navigation"/></stack><stack name="bosch_skin" path="/trunk/stacks/bosch_skin" repo="bosch-ros-pkg" repo_host="https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg">
  <description brief="Bosch Sensor Skin driver and applications">
	Contains the Bosch Sensor Skin driver and demo applications.
  </description>
  <author>Maintained by Sebastian Haug</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/bosch_skin</url>
  <depend stack="bosch_drivers"/> <!-- sub20 -->
  <depend stack="common"/> <!-- filters, pluginlib -->
  <depend stack="common_msgs"/> <!-- geometry_msgs -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure -->
  <depend stack="geometry"/> <!-- tf, angles -->
  <depend stack="pr2_controllers"/> <!-- pr2_mechanism_controllers -->
  <depend stack="pr2_mechanism"/> <!-- realtime_tools, pr2_controller_interface -->
  <depend stack="ros"/> <!-- roslib, std_msgs, roscpp -->

<package name="skin_dashboard"/><package name="skin_safe_base"/><package name="skin_driver"/><package name="skin_config"/><package name="safe_base_controller"/><package name="skin_demo_movebase"/></stack><stack name="pr2_common_actions" path="/stacks/pr2_common_actions/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_common_actions">pr2_common_actions</description>
  <author>Maintained by Melonee Wise</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_common_actions</url>
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- sensor_msgs, actionlib_msgs, trajectory_msgs, geometry_msgs -->
  <depend stack="eigen"/> <!-- eigen -->
  <depend stack="geometry"/> <!-- tf, angles -->
  <depend stack="laser_pipeline"/> <!-- laser_geometry -->
  <depend stack="orocos_kinematics_dynamics"/> <!-- kdl -->
  <depend stack="perception_pcl"/> <!-- pcl_ros -->
  <depend stack="pr2_common"/> <!-- pr2_msgs -->
  <depend stack="pr2_controllers"/> <!-- joint_trajectory_action, pr2_controllers_msgs -->
  <depend stack="pr2_kinematics"/> <!-- pr2_arm_kinematics -->
  <depend stack="robot_model"/> <!-- urdf -->
  <depend stack="ros"/> <!-- roslib -->
  <depend stack="ros_comm"/> <!-- rospy, roscpp -->

<package name="pr2_tilt_laser_interface"/><package name="joint_trajectory_generator"/><package name="pr2_tuck_arms_action"/><package name="pr2_common_action_msgs"/><package name="pr2_arm_move_ik"/><package name="joint_trajectory_action_tools"/></stack><stack name="maxwell" path="/trunk/maxwell" repo="vanadium-ros-pkg" repo_host="http://vanadium-ros-pkg.googlecode.com/svn">
  <description brief="Software for my robot Maxwell">
    Maxwell is a custom mobile manipulator. The Maxwell stack contains configuration, launch, and demo applications for the Maxwell robot.
  </description>
  <author>Maintained by Michael Ferguson</author>
  <license>BSD,</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/maxwell</url>
  <depend stack="arbotix"/> <!-- arbotix_python -->
  <depend stack="arm_navigation"/> <!-- move_arm, trajectory_filter_server, planning_environment, robot_self_filter, constraint_aware_spline_smoother, arm_kinematics_constraint_aware, ompl_ros_interface -->
  <depend stack="arm_navigation_experimental"/> <!-- collider -->
  <depend stack="common_msgs"/> <!-- sensor_msgs, diagnostic_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="laser_drivers"/> <!-- hokuyo_node -->
  <depend stack="navigation"/> <!-- move_base -->
  <depend stack="rharmony"/> <!-- pocketsphinx -->
  <depend stack="robot_model"/> <!-- ivcon, urdf -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- roscpp -->
  <depend stack="xacro"/> <!-- xacro -->

<package name="maxwell_interactive_markers"/><package name="maxwell_arm_navigation"/><package name="maxwell_defs"/><package name="maxwell_calibration"/><package name="maxwell_navigation"/></stack><stack name="rosserial_java" path="" repo="rosserial_java" repo_host="https://kforge.ros.org/rosserial/rosserial_java">
  <description brief="rosserial_java">rosserial_java</description>
  <author>Maintained by Michael Ferguson</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosserial_java</url>
  <depend stack="ros"/>
  <depend stack="rosserial"/> <!-- rosserial_msgs -->

<package name="rosserial_java"/><package name="rosserial_java_node"/></stack><stack name="bond_core" path="" repo="bond_core" repo_host="https://kforge.ros.org/common/bondcore">
  <description brief="Bond">
    A bond allows two processes, A and B, to know when the other has terminated, either cleanly or by crashing. The bond remains connected until it is either broken explicitly or until a heartbeat times out.
  </description>
  <author>Maintained by Stuart Glaser</author>
  <license>BSD,Mozilla Public License Version 1.1</license>  
  <review notes="" status="api cleared"/>
  <url>http://ros.org/wiki/bond_core</url>
  <depend stack="ros"/> <!-- roslib -->
  <depend stack="ros_comm"/> <!-- rostest, rospy, roscpp -->

<package name="bond"/><package name="smclib"/><package name="bondcpp"/><package name="bondpy"/><package name="test_bond"/></stack><stack name="articulation" path="/trunk/articulation" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn" version="0.1.2">
  <description brief="Kinematic models for articulated objects (cabinet doors and drawers), including model fitting, model selection and visualization.">

<p>
This stack provides software that can recover articulation models given 3D or 6D pose trajectories. 
</p>

<p>
The <a href="http://ros.org/wiki/articulation_msgs">articulation_msgs</a> package defines messages and services for exchanging trajectories and kinematic models.
</p>

<p>
The <a href="http://ros.org/wiki/articulation_structure">articulation_models</a> package provides several nodes for fitting and selecting kinematic models for articulated objects. We employ maximum-likelihood sample consensus (MLESAC) for robustly estimating the kinematic parameters, and the Bayesian information criterion (BIC) for selecting between alternative model classes. The learned model assigns likelihoods to observed trajectories, predict the latent configuration of the articulated object, projects the noisy poses onto the model, predict the Jacobian, etc.
</p>

<p>
The <a href="http://ros.org/wiki/articulation_structure">articulation_structure</a> package provides a service for fitting and selecting the kinematic model for articulated objects consisting of more than two parts. 
</p>

<p>
Several tutorials, example launch files and demonstration videos are available in the package <a href="http://ros.org/wiki/articulation_tutorials">articulation_tutorials</a>. 
</p>

  </description>
  <author>Juergen Sturm</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/articulation</url>

  <depend stack="common"/> <!-- plugin lib -->
  <depend stack="common_msgs"/> <!-- geometry_msgs -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="ros"/> <!-- roscpp, message_filters -->
  <depend stack="ros_comm"/> 
  <depend stack="visualization"/> <!-- rviz -->
  <depend stack="visualization_common"/> <!-- visualization_msgs -->
  <depend stack="freiburg_tools"/> <!-- camera, .. -->
  <depend stack="image_transport_plugins"/> <!-- compressed, .. -->
  <depend stack="image_pipeline"/> <!-- image_proc, .. -->
  <depend stack="vision_opencv"/>
<package name="articulation_tutorials"/><package name="articulation_msgs"/><package name="articulation_perception"/><package name="icp"/><package name="articulation_models"/><package name="articulation_rviz_plugin"/><package name="articulation_structure"/></stack><stack name="nxt_robots" path="" repo="foote-nxt" repo_host="https://nxt.foote-ros-pkg.googlecode.com/hg/">
  <description brief="nxt_robots">
  nxt_robots provides starter robots for using NXT with ROS.
  </description>
  <author>Maintained by Tully Foote, Wim Meeussen, and Melonee Wise</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/nxt_robots</url>
  <depend stack="navigation"/> <!-- robot_pose_ekf -->
  <depend stack="nxt"/> <!-- nxt_ros, nxt_description, nxt_controllers, nxt_msgs -->
  <depend stack="robot_model"/> <!-- robot_state_publisher -->
  <depend stack="ros"/>

<package name="nxt_robot_sensor_car"/><package name="nxt_robot_kit_test"/><package name="nxt_robot_gyro_car"/></stack><stack name="rwi" path="/stacks/rwi/trunk" repo="wu-ros-pkg" repo_host="https://wu-ros-pkg.svn.sourceforge.net/svnroot/wu-ros-pkg">
  <description brief="drivers for the rwi family of robots">
	Drivers for the robots produced by Real World Interface, Inc.
  </description>
  <author>Maintained by David V. Lu/davidlu@wustl.edu</author>
  <license>GPL,BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rwi</url>
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- nav_msgs, geometry_msgs, sensor_msgs -->
  <depend stack="geometry"/> <!-- tf, angles -->
  <depend stack="joystick_drivers"/> <!-- joy -->
  <depend stack="missouri"/> <!-- ptu_control -->
  <depend stack="ros"/> <!-- xmlrpcpp, rospy, std_msgs, roscpp -->

<package name="ptu46"/><package name="b21_description"/><package name="rflex"/></stack><stack name="elektron_robot" path="" repo="elektron_robot" repo_host="https://github.com/RCPRG-ros-pkg/elektron_robot">
  <description brief="elektron_robot">elektron_robot</description>
  <author>Maintained by Konrad Banachowicz</author>
  <license>GPL,BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/elektron_robot</url>
  <depend stack="common"/> <!-- xacro -->
  <depend stack="common_msgs"/> <!-- nav_msgs, sensor_msgs, geometry_msgs, diagnostic_msgs -->
  <depend stack="geometry"/> <!-- tf, kdl -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_msgs, rospy, std_srvs, roscpp -->

<package name="elektron_sensors"/><package name="elektron_monitor"/><package name="elektron_base"/><package name="elektron_bringup"/><package name="elektron_defs"/></stack><stack name="ros_gui" path="" repo="ros_gui" repo_host="https://kforge.ros.org/visualization/ros_gui">
  <description brief="ros_gui">ros_gui</description>
  <author>Maintained by Dirk Thomas</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ros_gui</url>
  <depend stack="ros"/>

<package name="rosgui_plot"/><package name="rosgui_cpp_shiboken"/><package name="rosgui_robot_steering"/><package name="rosgui_rviz"/><package name="rosgui_pyside"/><package name="rosgui_pyqt"/><package name="rosgui_publisher"/><package name="rosgui_pose_view"/><package name="rosgui_service_caller"/><package name="rosgui_roscpp"/><package name="rosgui_cpp_sip"/><package name="rosgui_rosgraph"/><package name="rosgui"/><package name="rosgui_cpp"/><package name="rosgui_image_view"/><package name="rosgui_py_common"/><package name="rosgui_topic"/><package name="rosgui_rospy"/></stack><stack name="elektron_kinectbot" path="" repo="elektron_kinectbot" repo_host="https://github.com/RCPRG-ros-pkg/elektron_kinectbot">
  <description brief="elektron_kinectbot">
	Applications for Elektron mobile robot.
  
    Most of them utilizes Microsoft Kinect sensor, hence the name of stack.
  </description>
  
  <author>Maciej Stefanczyk</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/elektron_kinectbot</url>
  <depend stack="common"/> <!-- nodelet -->
  <depend stack="common_msgs"/> <!-- sensor_msgs, visualization_msgs -->
  <depend stack="openni_kinect"/> <!-- openni_camera -->
  <depend stack="perception_pcl"/> <!-- pcl_ros -->
  <depend stack="ros"/>

<package name="elektron_navigation"/><package name="elektron_teleop"/><package name="elektron_calibration"/><package name="laser_avoid"/><package name="pcl_to_scan"/></stack><stack name="comm_skype" path="/trunk/comm_skype" repo="vmi-ros-pkg" repo_host="https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg">
  <description brief="comm_skype">comm_skype</description>
  <author>Maintained by Roalter Luis</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/comm_skype</url>
  <depend stack="ros"/>

<package name="python_skype"/><package name="skype"/></stack><stack name="geometry_visualization" path="" repo="geometry_visualization" repo_host="https://kforge.ros.org/geometry/visualization">
  <description brief="experimental geometry and math libraries">
    The experimental geometric and math libraries used in ros.
  </description>
  <author>Maintained by Tully Foote tfoote@willowgarage.com</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/geometry_visualization</url>
  <depend stack="geometry_experimental"/> <!-- tf2_msgs, tf2_ros, tf2 -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- tf2_msgs -->
  <depend stack="rx"/> <!-- xdot, rxbag -->

<package name="tf2_visualization"/></stack><stack name="pluginlib" path="" repo="pluginlib" repo_host="https://kforge.ros.org/common/pluginlib">
  <description brief="pluginlib">

    The pluginlib package provides tools for writing and dynamically loading plugins using the ROS build infrastructure. To work, these tools require plugin providers to register their plugins in the manifest.xml of their package. Pluginlib includes parts of Poco from pocoproject.org

  </description>
  <author>Maintained by Tully Foote</author>
  <license>BSD,Boost Software License</license>  
  <review notes="" status="doc reviewed"/>
  <url>http://ros.org/wiki/pluginlib</url>
  <depend stack="ros"/> <!-- roslib -->
  <depend stack="ros_comm"/> <!-- rosconsole -->

<package name="pluginlib"/></stack><stack name="dance_demo" path="/branches/trunk_cturtle/stacks/dance_demo" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="dance_demo">dance_demo</description>
  <author>Maintained by Eitan Marder-Eppstein</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/dance_demo</url>
  <depend stack="ros"/>

<package name="party_follow_me"/><package name="bag_player"/><package name="foreign_relay"/><package name="trigger_msgs"/><package name="joint_trajectory_replay"/><package name="dance_bags"/><package name="trigger_commands"/><package name="robot_kaleidoscope"/><package name="auto_grip"/><package name="pose_projector"/><package name="checkerboard_finder"/></stack><stack name="uu-controllers" path="" repo="uuisrc-ros-pkg" repo_host="https://github.com/cburbridge/uuisrc-ros-pkg">
  <description brief="Robot controllers">Various controllers for robots</description>
  <author>Chris Burbridge and Lorenzo Riano</author>
  <license>GPL</license>  
  <review notes="" status="unreviewed"/>
  <depend stack="ros"/>

<package name="arm_track"/><package name="schunk_kinematics"/><package name="velocity_safety"/><package name="schunk_gui"/><package name="potential_fields"/><package name="dynamic_window"/></stack><stack name="bosch_common" path="/trunk/stacks/bosch_common" repo="bosch-ros-pkg" repo_host="https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg">
  <description brief="Demos for Bosch stacks and packages">
     A collection of demos for Bosch stacks and packages.
  </description>
  <author>Charles DuHadway, Benjamin Pitzer (Maintained by Benjamin Pitzer)</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/bosch_common</url>
  <depend stack="exploration"/> <!-- explore -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="joystick_drivers"/> <!-- joy -->
  <depend stack="navigation"/> <!-- move_base -->
  <depend stack="pr2_apps"/> <!-- pr2_teleop -->
  <depend stack="pr2_navigation_apps"/> <!-- pr2_2dnav_slam -->
  <depend stack="ros"/>
  <depend stack="shared_autonomy"/> <!-- safe_teleop_base -->
  <depend stack="simulator_stage"/> <!-- stage -->
  <depend stack="slam_gmapping"/> <!-- gmapping -->
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="vision_opencv"/> <!-- opencv2 -->
  <depend stack="bosch_3rdparty"/> <!-- openmesh -->

<package name="bosch_worlds"/><package name="rtc"/><package name="bosch_maps"/></stack><stack name="surfels" path="/branches/trunk_diamondback/sandbox/surfels" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="surfels">surfels</description>
  <author>Maintained by Michael Krainin</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/surfels</url>
  <depend stack="ros"/>
  <depend stack="common_msgs"/> <!-- visualization_msgs -->
  <depend stack="perception_pcl"/>
  <depend stack="geometry"/> <!-- eigen -->
  <depend stack="vision_opencv"/>

<package name="surfel_conversion"/><package name="surfel_reconstruction"/></stack><stack name="vmi_experimental" path="/trunk/vmi_experimental" repo="vmi-ros-pkg" repo_host="https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg">
  <description brief="vmi_experimental">
  	VMI Experimental Stack
  	
  	This stack is just for experimenting purposes. Every package contained in this stack should not be used
  	by other stable packages. When something goes stable, the package will be moved to the according stack.
  	
  	You are free to the check the code contained in here, but be aware, that there will be probably no 
  	launch file at all.
  	
  </description>
  <author>Maintained by Luis Roalter (exp)</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/vmi_experimental</url>
  <depend stack="ros"/>
<package name="vnc_image_client"/><package name="tui_sim"/><package name="camera"/><package name="kr360_controller"/><package name="kr360"/></stack><stack name="motion_analysis_mocap" path="" repo="stacks/motion_analysis_mocap" repo_host="git://github.com/laas/motion_analysis_mocap">
  <description brief="Motion Analysis motion capture stack">

    This stack provides a bridge between the Cortex software from
    Motion Analysis and ROS.

    The bridge relies on evart-stream and evart-client software
    written by Anthony Mallet.

  </description>
  <author>Maintained by Thomas Moulard</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/motion_analysis_mocap</url>

  <depend stack="documentation"/> <!-- rosep: doxygen -->

  <depend stack="common_msgs"/> <!-- geometry_msgs -->
  <depend stack="geometry"/> <!-- tf, bullet -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_msgs, roscpp -->
<package name="evart-client"/><package name="evart_bridge"/></stack><stack name="point_cloud_perception_experimental" path="/branches/trunk_cturtle/stacks/point_cloud_perception_experimental" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="point_cloud_perception_experimental">
     The point_cloud_perception_experimental stack contains algorithms and tools that deal with 3D
     point cloud data from a variety of different sensing devices, but are in an experimental stage.
   </description>
  <author>Maintained by Radu Bogdan Rusu and Caroline Pantofaru</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/point_cloud_perception_experimental</url>
<package name="pcl_detectors_clients"/><package name="pcl_detectors"/><package name="range_image_tests"/><package name="eigen_tests"/><package name="octomap2"/><package name="octovis2"/><package name="virtual_scanner"/><package name="pcl_registration_experimental"/><package name="heat_equation_solver"/><package name="data_acquisition_ptu"/><package name="pcl_opencv_bridge"/><package name="mapping_tools"/><package name="surface_reconstruction"/><package name="canon_calibrate"/><package name="object_mapping"/><package name="point_cloud_python"/><package name="pcl_point_cloud2_image_color"/></stack><stack name="lfd" path="" repo="wpi-rail-ros-pkg" repo_host="https://github.com/WPI-RAIL/wpi-rail-ros-pkg">
  <description brief="Learning from Demonstration algorithms.">Learning from Demonstration algorithms developed by the RAIL research group at WPI.</description>
  <author>Maintained by Russell Toris</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/lfd</url>
  <depend stack="ros"/>

<package name="cba"/><package name="lfd_common"/></stack><stack name="joystick_drivers_tutorials" path="/stacks/joystick_drivers_tutorials/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Tutorials for the joystick_drivers stack.">
    This stack contains the turtle_teleop package, which contains tutorials
    for the joystick_drivers stack.
  </description>
  <author>Melonee Wise</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/joystick_drivers_tutorials</url>
  <depend stack="joystick_drivers"/> <!-- joy, spacenav_node, ps3joy, wiimote -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- joy, turtlesim, rospy, roscpp, wiimote -->
  <depend stack="ros_tutorials"/> <!-- turtlesim -->

<package name="turtle_teleop"/></stack><stack name="starmac_flyer" path="" repo="starmac-ros-pkg" repo_host="https://bitbucket.org/bouffard/starmac-ros-pkg">
  <description brief="starmac_flyer">

  Operation of an autonomous quadrotor vehicle: manual and autonomous control, interfaces to hardware, etc.
  
  Packages in this stack should be intended primarily for on-board use. Packages that will not be used on board
  (e.g. ground stations, post processing, etc.) should go in the starmac_ground stack instead.

  </description>
  <author>Maintained by Patrick Bouffard</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/flyer</url>
  <depend stack="common_msgs"/>
  <depend stack="ros_comm"/>
<package name="flyer_est"/><package name="flyer_common"/><package name="flyer_controller"/></stack><stack name="ccny_ground_station" path="" repo="ccny_ground_station" repo_host="http://robotics.ccny.cuny.edu/git/ccny-ros-pkg/ccny_ground_station.git">
  <description brief="ccny_ground_station">CCNY Ground Station Tools</description>
  <author>Maintained by William Morris, Ivan Dryanovski, Gautier Dumonteil</author>
  <license>GPL</license>  
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/ccny_ground_station</url>
  <depend stack="asctec_drivers"/>
  <depend stack="common_msgs"/>
  <depend stack="geometry"/>
  <depend stack="gps_umd"/>
  <depend stack="ros"/>
<package name="osmgpsmap"/><package name="gpsd_viewer"/><package name="ground_station"/></stack><stack name="ecl_manipulation" path="/trunk/ecl_manipulation" repo="ecl_manipulation" repo_host="https://embedded-control-library.googlecode.com/svn">
  <description brief="Manipulation related structures">
    Includes basic manipulation related structures as well as a few 
    algorithms currently used at Yujin Robot.
  </description>
  <author>Maintained by Daniel Stonier</author>
  <license>BSD</license>  
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/ecl_manipulation</url>
  <depend stack="ecl_core"/> <!-- ecl_formatters, ecl_exceptions, ecl_geometry -->
  <depend stack="ecl_tools"/> <!-- ecl_build, ecl_license -->
  <depend stack="ros"/>

<package name="ecl_manipulators"/><package name="ecl_manipulation"/></stack><stack name="joystick_umd" path="" repo="umd-ros-pkg" repo_host="git://ram.umd.edu/ros/joystick_umd.git">
  <description brief="Joystick drivers (PS3 with LED control)">Joystick drivers (PS3 with LED control)</description>
  <author>Robotics@Maryland</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/joystick_umd</url>
  <depend stack="joystick_drivers"/> <!-- joy -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- roscpp -->

<package name="ps3joy_umd"/></stack><stack name="mrpt_slam" path="/trunk/mrpt_slam" repo="mrpt-ros-pkg" repo_host="http://mrpt-ros-pkg.googlecode.com/svn">
  <description brief="mrpt_slam">mrpt_slam</description>
  <author>Maintained by Jose Luis</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/mrpt_slam</url>
  <depend stack="mrpt_common"/> <!-- mrpt_msgs -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- roscpp -->

<package name="mrpt_ro_slam"/><package name="mrpt_ekf_slam_3d"/><package name="mrpt_ekf_slam_2d"/></stack><stack name="pr2_navigation_apps" path="/stacks/pr2_navigation_apps/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="Navigation applications for the PR2 robot">
    This stack holds a collection of navigation applications that can be run on the PR2 robot.
  </description>
  <author>Maintained by Eitan Marder-Eppstein</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_navigation_apps</url>
  <depend stack="pr2_common"/> <!-- pr2_machine -->
  <depend stack="pr2_navigation"/> <!-- pr2_navigation_global, pr2_navigation_perception, pr2_navigation_slam, pr2_navigation_local, pr2_navigation_teleop -->
  <depend stack="ros"/>

<package name="pr2_2dnav"/><package name="pr2_2dnav_local"/><package name="pr2_2dnav_slam"/></stack><stack name="nao_common" path="/trunk/nao_common" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="Common tools for the Nao robot to run     remotely on the PC (tf, joint state, teleop)">This stack contains common tools for the Nao robot to run
  remotely on the PC together with nao_robot on
    the robot. It provides joint state, odometry, and teleoperation with a
    gamepad.</description>
  <author>Maintained by Armin Hornung</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/nao_common</url>
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- nav_msgs, geometry_msgs -->
  <depend stack="geometry"/> <!-- tf, angles -->
  <depend stack="joystick_drivers"/> <!-- joy -->
  <depend stack="nao_robot"/> <!-- nao_msgs -->
  <depend stack="navigation"/> <!-- move_base_msgs -->
  <depend stack="robot_model"/> <!-- robot_state_publisher, urdf -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_msgs, std_srvs, roscpp, message_filters -->

<package name="nao_description"/><package name="nao_remote"/><package name="nao_teleop"/></stack><stack name="rx" path="/stacks/rx/trunk" repo="rx" repo_host="https://code.ros.org/svn/ros">
  <description brief="rx">GUI tools for ROS: rxbag, rxplot, rxgraph, and others.</description>
  <author>Maintained by Ken Conley</author>
  <license>BSD,LGPL/BSD,Creative Commons,wxWindows,BSD, Creative Commons</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rx</url>
  <depend stack="ros"/> <!-- roslib -->
  <depend stack="ros_comm"/> <!-- roscpp, rosgraph, std_msgs, rostest, rospy, rostopic, rosnode, rosbag -->

<package name="rxgraph"/><package name="xdot"/><package name="test_rxplot"/><package name="test_rxdeps"/><package name="wxPython_swig_interface"/><package name="rxbag"/><package name="wxswig"/><package name="rxdeps"/><package name="rxtools"/></stack><stack name="riq_hand" path="/stacks/riq_hand/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="riq_hand">ROS driver and tools for Robotiq Adaptive Gripper</description>
  <author>Maintained by Derek King</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/riq_hand</url>
  <depend stack="pr2_ethercat_drivers"/> <!-- ethercat_hardware -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rospy, roscpp -->
  <depend stack="rx"/> <!-- wxswig -->

<package name="riq_msgs"/><package name="riq_hand_ethercat_hardware"/><package name="riq_hand_gui"/><package name="riq_hand_cli"/></stack><stack name="seabee3-ros-pkg" path="/trunk/cturtle" repo="seabee3-ros-pkg" repo_host="http://seabee3-ros-pkg.googlecode.com/svn">
  <description brief="seabee3-ros-pkg">seabee3-ros-pkg</description>
  <author>Maintained by Edward T. Kaszubski</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/seabee3-ros-pkg</url>
  <depend stack="common"/> <!-- yaml_cpp -->
  <depend stack="common_msgs"/> <!-- nav_msgs, sensor_msgs, geometry_msgs -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure, driver_base -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="joystick_drivers"/> <!-- joy -->
  <depend stack="ros"/> <!-- roslib, std_msgs, roscpp -->
  <depend stack="vision_opencv"/> <!-- opencv2, cv_bridge -->
  <depend stack="visualization_common"/> <!-- visualization_msgs -->

<package name="demo1_tasha"/><package name="demo1_kaszubski"/><package name="demo1_gerow"/><package name="demo1_dhruv"/><package name="demo1_sagar"/><package name="demo1_sung"/><package name="common_utils"/><package name="tf_frame_lock"/><package name="transdec_localizer"/><package name="camera_interpolation"/><package name="libxsens"/><package name="seabee3_mission_control"/><package name="task_fsm"/><package name="dead_reckoning_odom"/><package name="localization_defs"/><package name="filtered_odom"/><package name="image_array_viewer"/><package name="base_libs"/><package name="libvml"/><package name="seabee3_driver"/><package name="contour_matcher"/><package name="memcached_service"/><package name="circle_finder"/><package name="waypoint_controller"/><package name="color_blob_finder"/><package name="rectangle_finder"/><package name="generic_controllers"/><package name="flsl"/><package name="seabee3_teleop"/><package name="tritech_micron"/><package name="color_segmenter"/><package name="image_scaler"/><package name="seabee3_launch"/><package name="sparse_stereo"/><package name="jaus_adapter"/><package name="xsens_node"/><package name="seabee3_demo"/><package name="seabee3_stabilizer"/><package name="image_server"/><package name="seabee3_common"/><package name="stereo_image_odom"/><package name="landmark_projector"/><package name="nodelet_sandbox"/><package name="seabee3_dashboard"/><package name="libseabee3_beestem"/><package name="seabee3_driver_base"/><package name="sonar_node"/><package name="color_classifier"/><package name="image_sync"/><package name="image_matcher"/><package name="landmark_map_server"/><package name="seabee3_physics"/><package name="imu_integrator"/><package name="buoy_identifier"/><package name="pipeline_finder"/><package name="seabee3_machines"/><package name="landmark_finder"/></stack><stack name="robotino" path="/robotino-ros-pkg/trunk/robotino" repo="robotino-ros-pkg" repo_host="http://svn.openrobotino.org">
  <description brief="robotino">ROS Stack for Robotino</description>
  <author>indorewala@servicerobotics.eu</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/robotino</url>
  <depend stack="ros"/>
  <depend stack="ros_comm"/>
  <depend stack="common_msgs"/>
  <depend stack="geometry"/>

<package name="robotino_msgs"/><package name="robotino_node"/><package name="robotino_kinect"/><package name="robotino_navigation"/><package name="robotino_local_move"/><package name="robotino_teleop"/></stack><stack name="simulator_stage" path="/stacks/simulator_stage/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Stage simulator">

     This is now an empty stack that forwards dependencies to the 'stage'
     stack.  This will be removed in ROS Fuerte Turtle.

     2D simulation using the Stage multi-robot simulator.
     This stack is now deprecated and will be removed in Fuerte Turtle.
     Please use the 'stage' stack instead.

  </description>
  <author>Maintained by Brian Gerkey</author>
  <license>GPL</license>  
  <review notes="2010/01/11" status="Doc reviewed"/>
  <url>http://ros.org/wiki/simulator_stage</url>
  <depend stack="ros"/>
  <depend stack="stage"/> <!-- stage -->

</stack><stack name="symbolic_planning" path="/trunk/symbolic_planning" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="symbolic_planning">The symbolic_planning stack contains symbolic planners (currently TFD/M), 
    domain descriptions and additional packages for integration into ROS.</description>
  <author>Maintained by Christian Dornhege</author>
  <license>GPL,BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/symbolic_planning</url>
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- nav_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="navigation"/> <!-- move_base_msgs -->
  <depend stack="pluginlib"/> <!-- pluginlib -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rospy, std_msgs, roscpp -->
  <depend stack="tidyup_interface"/> <!-- tidyup_msgs, hardcoded_facts -->

<package name="continual_planning_navigation_bringup"/><package name="simple_modules"/><package name="tfd_modules"/><package name="planner_modules_pr2"/><package name="continual_planning_executive"/><package name="tidyup_grasp_actions"/><package name="planner_benchmarks"/><package name="planner_navigation_actions"/></stack><stack name="rtt_common_msgs" path="" repo="rtt_common_msgs" repo_host="http://git.mech.kuleuven.be/robotics/rtt_common_msgs.git">
  <description brief="rtt_common_msgs">

      This stack contains all RTT typekits for common_msgs messages

  </description>
  <author>Maintained by Ruben Smits - Steven Bellens</author>
  <license>BSD,GPL + runtime exception,LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/orocos_toolchain_ros</url>
  <depend stack="ros"/>
  <depend stack="ros_comm"/>
  <depend stack="common_msgs"/>
  <depend stack="geometry"/>
  <depend stack="orocos_toolchain"/>
  <depend stack="rtt_ros_integration"/>
  <depend stack="rtt_ros_comm"/>
<package name="rtt_geometry_msgs"/><package name="rtt_nav_msgs"/><package name="rtt_trajectory_msgs"/><package name="rtt_stereo_msgs"/><package name="rtt_actionlib_msgs"/><package name="rtt_diagnostic_msgs"/><package name="rtt_sensor_msgs"/><package name="rtt_visualization_msgs"/></stack><stack name="hector_common" path="/trunk/hector_common" repo="tu-darmstadt-ros-pkg" repo_host="http://tu-darmstadt-ros-pkg.googlecode.com/svn">
  <description brief="hector_common">hector_common</description>
  <author>Maintained by Johannes Meyer</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hector_common</url>
  <depend stack="ros"/>

<package name="bfl_eigen"/><package name="hector_marker_drawing"/></stack><stack name="darpa_arm_sim_servers" path="/darpa_arm_sim_servers" repo="darpa_arm_sim_servers" repo_host="http://svn.thearmrobot.com">
  <description brief="darpa_arm_sim_servers">
    darpa_arm_sim_servers 
  </description>
  <author>DARPA ARM GFE Team</author>
  <license>GPL,GLPv3,GPLv3,private,mixed,GPLv(3 or greater)</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/darpa_arm_sim_servers</url>
  <depend stack="common"/> <!-- actionlib, filters, pluginlib -->
  <depend stack="common_msgs"/> <!-- geometry_msgs, sensor_msgs, diagnostic_msgs -->
  <depend stack="darpa_arm_clients"/> <!-- darm_dashboard -->
  <depend stack="darpa_arm_msgs"/> <!-- prosilica_msgs, SafetyLight_msgs, ForceTorque_msgs, audio_msgs, DPPanTilt_msgs, Bumblebee2_msgs, WAM_msgs, PressureSensor_msgs, BHand_msgs -->
  <depend stack="darpa_arm_servers"/> <!-- re2logger -->
  <depend stack="geometry"/> <!-- tf, kdl, tf_conversions, angles -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="pr2_controllers"/> <!-- trajectory_msgs, control_toolbox, pr2_controllers_msgs -->
  <depend stack="pr2_mechanism"/> <!-- pr2_controller_manager, pr2_mechanism_diagnostics, pr2_mechanism_msgs, pr2_controller_interface, realtime_tools, pr2_mechanism_model -->
  <depend stack="pr2_simulator"/> <!-- pr2_gazebo_plugins -->
  <depend stack="robot_model"/> <!-- kdl_parser -->
  <depend stack="ros"/> <!-- std_srvs, roscpp, message_filters, std_msgs, rospy, arm_kinematics -->
  <depend stack="simulator_gazebo"/> <!-- gazebo_tools, gazebo, gazebo_plugins -->
  <depend stack="vision_opencv"/> <!-- opencv2 -->

<package name="SafetyLight_sim_server"/><package name="re2darmGazeboReplay"/><package name="DPPanTilt_sim_server"/><package name="Bumblebee2_sim_server"/><package name="BarrettCompat"/><package name="SimGazeboControllers"/><package name="re2gazeboPatch"/><package name="re2darmSimExampleController"/><package name="SimRobot"/><package name="re2darmSimExampleIK"/><package name="simon_game"/><package name="re2darmGazeboPlugins"/><package name="DPPanTiltCompat"/><package name="re2logger"/><package name="WAM_sim_server"/><package name="audio_sim_server"/><package name="RobotModel"/><package name="SR4000_sim_server"/><package name="SimGazeboTransmissions"/><package name="simple_sphere_detector"/></stack><stack name="reem_controllers" path="" repo="reem_controllers" repo_host="https://github.com/pal-robotics/reem_controllers">
  <description brief="reem_controllers">
    Controllers that run in the pr2_controller_manager's realtime loop. These exist to provide a pr2-compatible
    interface and allow to setup a Gazebo simulation of REEM rather easily.
    The actual REEM robot does not rely on these controllers.
  </description>
  <author>Maintained by Adolfo Rodriguez Tsouroukdissian</author>
  <license>Modified BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/reem_controllers</url>
  <depend stack="ros"/>
<package name="joint_group_position_controller"/></stack><stack name="isi_3d_recognition" path="" repo="isi-ros-pkg" repo_host="http://github.com/kanezaki/isi-ros-pkg">
  <description brief="ISI 3D Recognition">

    This stack consists of tools for extracting color-and-shape features, solving Principal Component Analysis (PCA), and detecting objects using them.

  </description>
  <author>Maintained by Kanezaki Asako</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/isi_3d_recognition</url>
  <depend stack="ros"/> <!-- roscpp -->
  <depend stack="point_cloud_perception"/> <!-- pcl -->
  <depend stack="common_msgs"/> <!-- visualization_msgs -->
<package name="c3_hlac"/><package name="color_voxel_recognition"/><package name="c3_hlac_core"/></stack><stack name="reem_common" path="" repo="reem_common" repo_host="https://github.com/pal-robotics/reem_common">
  <description brief="REEM robot description and REEM-specific messages">
    URDF description of the robot kinematics and dynamics, 3D models of robot components, information required for
    gazebo to simulate REEM, messages specific to REEM and machine specifications.
  </description>
  <author>Maintained by Adolfo Rodriguez Tsouroukdissian</author>
  <license>Modified BSD, Creative Commons BY-NC-ND 3.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/reem_common</url>

  <depend stack="common_msgs"/>
  <depend stack="robot_model"/>
  <depend stack="ros"/>
  <depend stack="ros_comm"/>
<package name="reem_description"/><package name="reem_machine"/></stack><stack name="orocos_toolchain_ros" path="" repo="orocos_toolchain_ros" repo_host="http://git.mech.kuleuven.be/robotics/orocos_toolchain_ros.git">
  <description brief="orocos_toolchain_ros">

      This stack contains all software necessary to build
      systems using both Orocos and ROS infrastructures. The complete
      <a href="http://www.orocos.org/toolchain">Orocos Toolchain</a> is integrated in the ROS build system and the
      rtt_ros_integration package allows easy communication between Orocos components
      and ROS nodes.
  
  </description>
  <author>Maintained by Ruben Smits - Steven Bellens</author>
  <license>BSD,GPL + runtime exception,LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/orocos_toolchain_ros</url>
  <depend stack="ros"/>
  <depend stack="ros_comm"/>
  <depend stack="common_msgs"/>
  <depend stack="geometry"/>
<package name="rtt_ros_integration"/><package name="typelib"/><package name="utilmm"/><package name="rtt_ros_service"/><package name="ocl"/><package name="rtt_gems"/><package name="rtt_typelib"/><package name="rtt_tf"/><package name="rtt_ros_integration_geometry_msgs"/><package name="log4cpp"/><package name="rtt_ros_param"/><package name="rtt_ros_integration_std_msgs"/><package name="rtt_ros_integration_sensor_msgs"/><package name="utilrb"/><package name="orogen"/><package name="rtt_rospack"/><package name="rtt_ros_integration_nav_msgs"/><package name="rtt_ros_integration_example"/><package name="rtt"/></stack><stack name="cwru_tour_guide" path="" repo="cwru-ros-pkg" repo_host="http://github.com/cwru-robotics/cwru-ros-pkg">
  <description brief="cwru_tour_guide">cwru_tour_guide</description>
  <author>Maintained by Jesse</author>
  <license/>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cwru_tour_guide</url>
  <depend stack="ros"/>

<package name="tour_guide_base"/><package name="tour_guide_vision"/><package name="tour_guide_executive"/></stack><stack name="logging" path="/trunk/logging" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="logging">logging</description>
  <author>Maintained by David Feil-Seifer</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/logging</url>
  <depend stack="ros"/>

<package name="log_msgs"/><package name="logger"/><package name="log_gui"/></stack><stack name="geometry" path="" repo="geometry" repo_host="https://kforge.ros.org/geometry/geometry">
  <description brief="geometry and math libraries">
    The basic geometric and math libraries used in ros.
  </description>
  <author>Maintained by Tully Foote tfoote@willowgarage.com</author>
  <license>BSD,LGPL,ZLib</license>  
  <review notes="2009-10-07" status="doc reviewed"/>
  <url>http://ros.org/wiki/geometry</url>
  <depend stack="bullet"/> <!-- bullet -->
  <depend stack="common_msgs"/> <!-- sensor_msgs, geometry_msgs -->
  <depend stack="eigen"/> <!-- eigen -->
  <depend stack="orocos_kinematics_dynamics"/> <!-- kdl -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rosconsole, roscpp, message_filters, rostest, rospy, roswtf -->

<package name="eigen_conversions"/><package name="angles"/><package name="tf_conversions"/><package name="tf"/></stack><stack name="p2os" path="/trunk/p2os" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="P2OS/ARCOS device support">
		This stack provides the p2os driver supporting any robot that uses either P2OS or ARCOS firmware. This stack also includes urdf definitions for visualization and examples to control the robot.

	</description>
  <author>Maintained by David Feil-Seifer (dfseifer@usc.edu)</author>
  <license>BSD,GPLv2</license>  
  <review notes="" status=""/>
  <url>http://ros.org/wiki/p2os</url>
  <depend stack="common"/> <!-- xacro -->
  <depend stack="common_msgs"/> <!-- nav_msgs, geometry_msgs -->
  <depend stack="diagnostics"/> <!-- diagnostic_updater -->
  <depend stack="diagnostics_monitors"/> <!-- robot_monitor -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="joystick_drivers"/> <!-- joy -->
  <depend stack="robot_model"/> <!-- robot_state_publisher, urdf -->
  <depend stack="ros"/> <!-- roslib -->
  <depend stack="ros_comm"/> <!-- std_msgs, std_srvs, rospy, roscpp -->
  <depend stack="rx"/> <!-- rxtools -->

<package name="p2os_launch"/><package name="p2os_dashboard"/><package name="p2os_urdf"/><package name="p2os_driver"/><package name="p2os_teleop"/></stack><stack name="imu_drivers_usc" path="/trunk/imu_drivers_usc" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="imu_drivers_usc">imu_drivers_usc</description>
  <author>Maintained by Hordur Heidarsson</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/imu_drivers_usc</url>
  <depend stack="ros"/>

</stack><stack name="ua_cognition" path="/trunk/arrg/ua_cognition" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="Cognitive Architecture for UA Robots">
    This stack will contain the cognitive architecture for the Wubble Robot. 
    Currently, it contains a ROS wrapper for the GBBopen blackboard system.
    </description>
    <author>Maintained by Daniel Hewlett</author>
    <license>BSD</license>  
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/ua_cognition</url>

    <depend stack="ros"/>
<package name="gbbopen"/></stack><stack name="schunk_modular_robotics" path="" repo="schunk_modular_robotics" repo_host="git://github.com/ipa320/schunk_modular_robotics">
  <description brief="schunk_modular_robotics">schunk_modular_robotics</description>
  <author>Maintained by Florian Weisshardt</author>
  <license>LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/schunk_modular_robotics</url>
  <depend stack="cob_common"/> <!-- cob_srvs, brics_actuator -->
  <depend stack="cob_extern"/> <!-- libpcan, libntcan -->
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- trajectory_msgs, sensor_msgs -->
  <depend stack="diagnostics"/> <!-- diagnostic_updater -->
  <depend stack="pr2_controllers"/> <!-- pr2_controllers_msgs -->
  <depend stack="robot_model"/> <!-- convex_decomposition, ivcon, urdf -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rostest, roscpp -->

<package name="schunk_powercube_chain"/><package name="libm5api"/><package name="schunk_sdh"/><package name="schunk_description"/></stack><stack name="cram_rosie" path="" repo="cram_rosie" repo_host="http://code.in.tum.de/git/cram-rosie.git">
  <description brief="cram_process_modules_rosie">cram_process_modules_rosie</description>
  <author>Maintained by Lorenz Moesenlechner</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cram_rosie</url>
  <depend stack="cram_highlevel"/> <!-- cram_roslisp_common, cljlo, cram_plan_actionserver, cram_plan_failures, cram_plan_knowledge, designators_ros, location_costmap, cl_json_pl_client, cljlo_utils, cram_plan_library, table_costmap, perception_process_module -->
  <depend stack="cram_pl"/> <!-- cram_reasoning, designators, cram_math, process_modules, cram_utilities, cram_language, cram_execution_trace -->
  <depend stack="ias_common"/> <!-- navp_action, cogman_msgs -->
  <depend stack="ros"/>
  <depend stack="roslisp_common"/> <!-- actionlib_lisp -->

<package name="powercube_ptu_process_module"/><package name="jlo_navp_process_module"/><package name="rosie_executive"/><package name="kuka_arm_hand_process_module"/></stack><stack name="vision" path="/branches/trunk_cturtle/vision" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="vision">

    These are vision-related packages.

  </description>
  <author>James Bowman jamesb@willowgarage.com</author>
  <license>BSD,BSD and GPL,LGPL,Creative Commons (Attribution-NonCommercial-ShareAlike),Public</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/vision</url>
  <depend stack="common_msgs"/> <!-- nav_msgs, sensor_msgs -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure -->
  <depend stack="geometry"/> <!-- tf, eigen -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="point_cloud_perception"/> <!-- ann, pcl, pcl_ros -->
  <depend stack="ros"/> <!-- rospy, rostest, std_msgs, roscpp, message_filters -->
  <!--depend stack="sandbox" />  vocabulary_tree -->
  <depend stack="vision_opencv"/> <!-- opencv2, image_geometry, cv_bridge -->
  <depend stack="visual_feature_detectors"/> <!-- features_2d -->
  <depend stack="vslam"/> <!-- sba -->

<package name="chamfer_matching"/><package name="scanmatcher"/><package name="cmvision"/><package name="toro"/><package name="image_segmentation"/><package name="pytoro"/></stack><stack name="driver_common" path="/stacks/driver_common/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Classes and tools useful to many driver stacks.">

  The driver_common stack contains classes and tools that are useful
  throughout the driver stacks. It currently contains:
 
  <ul>
   <li>
     dynamic_reconfigure: A dynamic reconfiguration system to allow node 
     parameters to be changed without restarting the node.
   </li>
   <li>
     driver_base: A base class for sensors to provide a consistent state machine
   (retries, error handling, etc.) and interface.
   </li>
   <li>
     timestamp_tools: Classes to help timestamp hardware events.
   </li>
  </ul>

  </description>
  <author>Blaise Gassend</author>
  <license>BSD</license>  
  <review notes="2010/1/18" status="Doc reviewed"/>
  <url>http://ros.org/wiki/driver_common</url>
  <depend stack="diagnostics"/> <!-- self_test, diagnostic_updater -->
  <depend stack="ros"/> <!-- roslib, rospy, roscpp, rosservice -->

<package name="dynamic_reconfigure"/><package name="timestamp_tools"/><package name="driver_base"/></stack><stack name="andsim" path="/trunk/andsim" repo="vmi-ros-pkg" repo_host="https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg">
  <description brief="andsim">andsim</description>
  <author>Maintained by Roalter Luis</author>
  <license/>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/andsim</url>
  <depend stack="ros"/>

</stack><stack name="industrial" path="/trunk/industrial" repo="swri-ros-pkg" repo_host="http://swri-ros-pkg.googlecode.com/svn">
  <description brief="industrial">industrial</description>
  <author>Shaun Edwards/sedwards@swri.org</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/industrial</url>
  <depend stack="ros"/>

<package name="sia10d_mesh_arm_navigation"/><package name="armadillo_calibration"/><package name="armadillo_arm_navigation"/><package name="robotiq"/><package name="simple_message"/><package name="armadillo"/><package name="SIA20D_Mesh_arm_navigation"/><package name="motoman"/><package name="industrial_io_client"/></stack><stack name="clearpath_husky" path="/trunk/clearpath_husky" repo="clearpath-ros-pkg" repo_host="http://clearpath-ros-pkg.googlecode.com/svn">
  <description brief="clearpath_husky">
    The clearpath_husky stack provides a central repository of software
    and launch files intended for deployment on the Clearpath Robotics
    Husky A100 and A200 robots.
  </description>
  <author>Maintained by Mike Purvis</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/clearpath_husky</url>
  <depend stack="clearpath_common"/> <!-- clearpath_bringup, clearpath_teleop, clearpath_base -->
  <depend stack="clearpath_kinect"/> <!-- clearpath_tools, clearpath_kinect_demo -->
  <depend stack="common_msgs"/> <!-- geometry_msgs -->
  <depend stack="openni_kinect"/> <!-- openni_camera -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rospy -->

<package name="husky_teleop"/><package name="husky_kinect"/><package name="husky_bringup"/></stack><stack name="ubc-ros-pkg" path="/trunk" repo="ubc-ros-pkg" repo_host="https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg">
  <description brief="ubc-ros-pkg">ubc-ros-pkg</description>
  <author>Maintained by Marius Muja and David Meger</author>
  <license>BSD,LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ubc-ros-pkg</url>
  <depend stack="common"/> <!-- actionlib, xacro -->
  <depend stack="common_msgs"/> <!-- nav_msgs, geometry_msgs, sensor_msgs -->
  <depend stack="diagnostics"/> <!-- self_test, diagnostic_updater -->
  <depend stack="driver_common"/> <!-- driver_base, timestamp_tools -->
  <depend stack="geometry"/> <!-- tf, tf_conversions, eigen, angles -->
  <depend stack="image_common"/> <!-- image_transport, camera_calibration_parsers -->
  <depend stack="joystick_drivers"/> <!-- joy -->
  <depend stack="laser_drivers"/> <!-- hokuyo_node, sicktoolbox_wrapper -->
  <depend stack="laser_pipeline"/> <!-- laser_assembler, laser_geometry -->
  <depend stack="navigation"/> <!-- move_base_msgs, move_base, map_server, amcl -->
  <depend stack="point_cloud_perception"/> <!-- cminpack, pcl -->
  <depend stack="pr2_apps"/> <!-- pr2_teleop -->
  <depend stack="pr2_common"/> <!-- pr2_msgs -->
  <depend stack="robot_model"/> <!-- robot_state_publisher, urdf -->
  <depend stack="ros"/> <!-- roslaunch, std_msgs, rostest, rospy, roscpp -->
  <depend stack="slam_gmapping"/> <!-- gmapping -->
  <depend stack="ubc-srvc-pkg"/> <!-- webImages, triclops, pyUtils, MSER, artag_register -->
  <depend stack="vision_opencv"/> <!-- opencv2, cv_bridge -->
  <depend stack="visualization_common"/> <!-- visualization_msgs -->

<package name="sift_detector"/><package name="batchdetector"/><package name="recognition_msgs"/><package name="label_scene_3D"/><package name="online_results"/><package name="scene_server"/><package name="hyp_filter"/><package name="felz_detector"/><package name="contour_detector"/><package name="launch_manager"/><package name="executive_srvc"/><package name="nips_demo"/><package name="srvc"/><package name="calibration"/><package name="powerbot_player"/><package name="ptu_controller"/><package name="bumblebee1394"/><package name="bumblebee_stereo"/><package name="photo_cam"/><package name="object_graph"/><package name="correct_drift"/><package name="register_image"/><package name="ubc_vrs_annotation_tools"/><package name="ubc_vrs_result_analysis"/><package name="ubc_vrs_data_collection"/><package name="ubc_vrs_utilities"/><package name="training_data"/><package name="capture"/><package name="libptp2"/><package name="triclops"/><package name="tablescan"/><package name="DPM"/><package name="digiclops"/><package name="saliency_attention"/><package name="powerbot"/><package name="powerbot_defs"/><package name="navigation_goals"/><package name="2dnav_powerbot"/><package name="navigation_srvs"/><package name="BarrettWAM"/><package name="WAMinterface"/><package name="hesitation"/><package name="simple_3D_target_tracker"/><package name="png_pcd_saver"/></stack><stack name="netft" path="/stacks/netft/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="netft">netft</description>
  <author>Maintained by Derek King</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/netft</url>
  <depend stack="common_msgs"/> <!-- geometry_msgs, diagnostic_msgs -->
  <depend stack="diagnostics"/> <!-- diagnostic_updater -->
  <depend stack="pr2_ethercat_drivers"/> <!-- ethercat_hardware -->
  <depend stack="pr2_mechanism"/> <!-- realtime_tools, pr2_controller_interface -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- roscpp -->

<package name="netft_rdt_driver"/><package name="netft_ethercat_hardware"/><package name="netft_example_controllers"/></stack><stack name="wifi_drivers" path="/stacks/wifi_drivers/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="WiFi drivers">
   This stack contains WiFi drivers
  </description>
  <author>James Bowman</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/wifi_drivers</url>
  <depend stack="common_msgs"/> <!-- nav_msgs, geometry_msgs, visualization_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="pr2_common"/> <!-- pr2_msgs -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- nav_msgs, std_msgs, rostest, geometry_msgs, pr2_msgs, visualization_msgs, tf, rospy -->

<package name="wifi_ddwrt"/></stack><stack name="odor_search" path="/trunk/unstable/odor_search" repo="isr-uc-ros-pkg" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="odor_search">
  
  	This stack contains various odor search algorithms, inclusing odor oriented exploration and odor source localization algorithms.
  
  </description>
  <author>MaGonçalo Cabrita</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/odor_search</url>
  <depend stack="ros"/>
  <depend stack="common_msgs"/>
  <depend stack="lse_messages"/>

<package name="particle_plume"/><package name="random_walk"/><package name="pp_explorer"/></stack><stack name="turn_taking" path="/trunk/turn_taking" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="turn_taking">turn_taking</description>
  <author>Maintained by David Feil-Seifer</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/turn_taking</url>
  <depend stack="ros"/>

<package name="tf_to_pose"/><package name="detect_pose"/><package name="pose_action"/><package name="strike_pose"/><package name="joint_velocities"/><package name="simon_says"/><package name="wait_for_response_action"/><package name="pose_model"/></stack><stack name="robot_model_visualization" path="" repo="robot_model_visualization" repo_host="https://kforge.ros.org/robotmodel/visualization">
  <description brief="Tools for use with URDF Models">This package contains a number of tools for making, viewing and using URDF models.</description>
  <author>Maintained by David Lu!!</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/robot_model_visualization</url>
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rospy -->

<package name="joint_state_publisher"/></stack><stack name="rtt_ros_comm" path="" repo="rtt_ros_comm" repo_host="http://git.mech.kuleuven.be/robotics/rtt_ros_comm.git">
  <description brief="rtt_ros_comm">

    This stack contains all RTT typekits for the ros_comm messages
  
  </description>
  <author>Maintained by Ruben Smits - Steven Bellens</author>
  <license>BSD,GPL + runtime exception,LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/orocos_toolchain_ros</url>
  <depend stack="ros"/>
  <depend stack="ros_comm"/>
  <depend stack="common_msgs"/>
  <depend stack="orocos_toolchain"/>
  <depend stack="rtt_ros_integration"/>
<package name="rtt_std_msgs"/><package name="rtt_rosgraph_msgs"/></stack><stack name="roboframenet" path="" repo="roboframenet" repo_host="https://kforge.ros.org/appmanandroid/roboframenet">
  <description brief="roboframenet">
    Stack of packages related to the RoboFrameNet project.
  </description>
  <author>Brian Thomas</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url/>
  <depend stack="pr2_props_stack"/> <!-- pr2_props -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="ros_comm"/> <!-- roslaunch, std_msgs, rospy -->
  <depend stack="rosjava"/> <!-- apache_xmlrpc, rosjava, apache_commons_util -->
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="ros"/> <!--  -->
  <depend stack="navigation"/> <!-- move_base_msgs -->
  <depend stack="common_msgs"/> <!-- actionlib_msgs, geometry_msgs -->
<package name="rfnserver"/><package name="pr2_props_rfn"/><package name="utter"/><package name="move_base_rfn"/><package name="turtlebot_follower_rfn"/><package name="stop_server"/><package name="move_action_server"/><package name="location_memorizer"/><package name="moo"/><package name="stanford_parser"/><package name="stanford_parser_ros"/><package name="stanford_parser_msgs"/><package name="arbitrator"/><package name="frame_registrar"/><package name="roboframenet_bringup"/><package name="executor"/><package name="semantic_framer"/><package name="imperative_to_declarative"/><package name="roboframenet_msgs"/></stack><stack name="common_rosdeps" path="" repo="common_rosdeps" repo_host="https://kforge.ros.org/common/rosdepcore">
  <description brief="common_rosdeps">common_rosdeps provides commonly used rosdep system dependencies.</description>
  <author>Maintained by Wim Meeussen</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/common_rosdeps</url>
  <depend stack="ros"/>

<package name="common_rosdeps"/></stack><stack name="starmac_vicon" path="" repo="starmac-ros-pkg" repo_host="https://bitbucket.org/bouffard/starmac-ros-pkg">
  <description brief="starmac_vicon">
    Drivers for using the Vicon motion capture system for indoor tracking of a vehicle
</description>
  <author>Maintained by Patrick Bouffard</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/starmac_vicon</url>
  <depend stack="ros"/>

<package name="vicon_mocap"/></stack><stack name="drink_serving" path="/trunk/stacks/drink_serving" repo="bosch-ros-pkg" repo_host="https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg">
  <description brief="drink_serving">drink_serving</description>
  <author>Christian Bersch, Nikhil Deshpande, Adrian Funk, Ralf Kempf, Kyle Maroney, Sarah Osentoski, Dejan Pangercic, Benjamin Pitzer, Philip Roan, Bharath Sankaran</author>
  <license>BSD,MIT</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/drink_serving</url>
  <depend stack="arm_navigation"/> <!-- kinematics_msgs -->
  <depend stack="bosch_image_proc"/> <!-- artoolkitplus -->
  <depend stack="bosch_manipulation_utils"/> <!-- simple_robot_control -->
  <depend stack="bosch_skin"/> <!-- skin_driver -->
  <depend stack="common"/> <!-- actionlib, yaml_cpp -->
  <depend stack="common_msgs"/> <!-- nav_msgs, actionlib_msgs, sensor_msgs, geometry_msgs, visualization_msgs, diagnostic_msgs -->
  <depend stack="eigen"/> <!-- eigen -->
  <depend stack="geometry"/> <!-- tf, tf_conversions -->
  <depend stack="image_common"/> <!-- polled_camera, image_transport -->
  <depend stack="image_transport_plugins"/> <!-- compressed_image_transport -->
  <depend stack="joystick_drivers"/> <!-- joy -->
  <depend stack="laser_pipeline"/> <!-- laser_geometry -->
  <depend stack="manipulation_utils"/> <!-- eigen3_conversions, tf_eigen3_conversions -->
  <depend stack="navigation"/> <!-- move_base_msgs, map_server -->
  <depend stack="object_manipulation"/> <!-- object_manipulation_msgs -->
  <depend stack="orocos_kinematics_dynamics"/> <!-- kdl -->
  <depend stack="perception_pcl"/> <!-- pcl, pcl_ros -->
  <depend stack="pr2_common"/> <!-- pr2_description, pr2_msgs -->
  <depend stack="pr2_common_actions"/> <!-- pr2_arm_move_ik -->
  <depend stack="pr2_controllers"/> <!-- joint_trajectory_action, pr2_controllers_msgs -->
  <depend stack="pr2_object_manipulation"/> <!-- pr2_gripper_sensor_msgs, pr2_gripper_sensor_action -->
  <depend stack="remote_lab"/> <!-- rosjs_common -->
  <depend stack="robot_model"/> <!-- robot_state_publisher, urdf -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_msgs, rospy, roscpp, std_srvs -->
  <depend stack="vision_opencv"/> <!-- opencv2, image_geometry, cv_bridge -->
  <depend stack="xacro"/> <!-- xacro -->

<package name="busbot_filter"/><package name="ds_master_executive"/><package name="ds_pr2_drop_drink"/><package name="ds_pr2_fridge_opener"/><package name="busbot_node"/><package name="ds_pr2_fridge_manipulation_executive"/><package name="keyboard_smooth"/><package name="ds_pr2_fridge_drink_perception"/><package name="marker_detector_tbot"/><package name="busbot_description"/><package name="ds_webinterface"/><package name="keyboard_smooth_safe"/><package name="bosch_drawer_executive"/><package name="busbot_navigation"/><package name="ds_pr2_fridge_handle_detector"/><package name="busbot_driver"/><package name="busbot_gazebo"/><package name="busbot_launch"/><package name="ds_pr2_drink_fetching_planner"/><package name="ds_turtle_2dnav"/><package name="ds_common_msgs"/><package name="multi_robot_visualization"/><package name="busbot_bringup"/><package name="ds_pr2_2dnav"/></stack><stack name="kurt_apps" path="" repo="uos-ros-pkg" repo_host="http://kos.informatik.uni-osnabrueck.de/uos-ros-pkg.git">
  <description brief="kurt_apps">kurt_apps</description>
  <author>Maintained by Jochen Sprickerhof</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/kurt_apps</url>
  <depend stack="ros"/>

<package name="kurt_navigation_slam"/><package name="katana_openloop_grasping"/><package name="kurt_2dnav"/><package name="kurt_navigation_global"/><package name="kurt_navigation_config"/><package name="kurt_2dnav_slam"/><package name="kurt_freespace"/></stack><stack name="imu_filter" path="" repo="imu_filter" repo_host="https://kforge.ros.org/megaslam/imu_filter">
  <description brief="imu_filter">imu_filter</description>
  <author>Sebastian Klose</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/imu_filter</url>
  <depend stack="common_msgs"/> <!-- geometry_msgs, visualization_msgs -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure -->
  <depend stack="eigen"/> <!-- eigen -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="imu_drivers"/> <!-- microstrain_3dmgx2_imu -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- roscpp -->
  <depend stack="vision_opencv"/> <!-- opencv2 -->

<package name="imu_filter"/></stack><stack name="pr2_simulator" path="/stacks/pr2_simulator/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="PR2 simulation components">

     PR2-specific simulation components. These include
     plugins and launch scripts necessary for running PR2 in simulation.

  </description>
  <author>Maintained by John Hsu</author>
  <license>BSD</license>  
  <review notes="2010/01/21" status="Doc reviewed"/>
  <url>http://ros.org/wiki/pr2_simulator</url>
  <depend stack="common_msgs"/> <!-- nav_msgs, geometry_msgs, sensor_msgs, diagnostic_msgs -->
  <depend stack="diagnostics"/> <!-- diagnostic_updater, diagnostic_aggregator -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure -->
  <depend stack="geometry"/> <!-- bullet, angles -->
  <depend stack="geometry_experimental"/> <!-- tf2_ros -->
  <depend stack="image_common"/> <!-- image_transport, polled_camera -->
  <depend stack="image_pipeline"/> <!-- stereo_image_proc, image_proc -->
  <depend stack="navigation"/> <!-- robot_pose_ekf -->
  <depend stack="physics_ode"/> <!-- opende -->
  <depend stack="pr2_common"/> <!-- pr2_description, pr2_dashboard_aggregator, pr2_msgs -->
  <depend stack="pr2_controllers"/> <!-- single_joint_position_action, joint_trajectory_action, robot_mechanism_controllers, pr2_mechanism_controllers, pr2_gripper_action, pr2_head_action -->
  <depend stack="pr2_ethercat_drivers"/> <!-- fingertip_pressure -->
  <depend stack="pr2_mechanism"/> <!-- pr2_hardware_interface, pr2_mechanism_model, pr2_controller_manager -->
  <depend stack="robot_model"/> <!-- convex_decomposition, robot_state_publisher, urdf, ivcon -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_msgs, rospy, roscpp -->
  <depend stack="simulator_gazebo"/> <!-- gazebo_tools, gazebo, gazebo_plugins, gazebo_worlds -->
  <depend stack="vision_opencv"/> <!-- opencv2, cv_bridge -->
  <depend stack="visualization_common"/> <!-- ogre_tools -->

<package name="pr2_ogre"/><package name="pr2_controller_configuration_gazebo"/><package name="pr2_gazebo"/><package name="pr2_gazebo_plugins"/><package name="pr2_examples_gazebo"/></stack><stack name="pr2_sbl_experimental" path="/trunk/pr2_sbl_experimental" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="pr2_sbl_experimental">pr2_sbl_experimental</description>
  <author>Maintained by Edward</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_sbl_experimental</url>
  <depend stack="ros"/>

<package name="pr2_oculesics_adapters"/><package name="pr2_sbl_launch"/><package name="sbl_teleop"/></stack><stack name="itasc_robots_objects" path="" repo="itasc_robots_objects" repo_host="http://git.mech.kuleuven.be/robotics/itasc_robots_objects.git">
  <description brief="itasc_robots_objects">itasc_robots_objects</description>
  <author>Maintained by Dominick Vanthienen</author>
  <license>BSD,LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://orocos.org</url>
  <depend stack="ros"/>
  <depend stack="itasc_core"/>
  <depend stack="rtt_ros_integration"/>
  <depend stack="orocos_kinematics_dynamics"/>

<package name="kuka_lwr"/><package name="itasc_pr2"/><package name="fixed_object"/><package name="moving_object"/></stack><stack name="sbpl_arm_planning" path="/sbpl_arm_planning/trunk" repo="sbpl_arm_planning" repo_host="https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs">
  <description brief="sbpl_arm_planning">Search Based Motion Planner for
    Manipulation (PR2 Only)</description>
  <author>by Benjamin Cohen</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/trunk</url>
  <depend stack="arm_navigation"/> <!-- move_arm_msgs -->
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- geometry_msgs, sensor_msgs, visualization_msgs -->
  <depend stack="geometry"/> <!-- kdl, tf, bullet, angles -->
  <depend stack="kinematics"/> <!-- kinematics_msgs -->
  <depend stack="motion_planners"/> <!-- sbpl -->
  <depend stack="motion_planning_common"/> <!-- motion_planning_msgs, planning_environment, planning_models, distance_field, mapping_msgs, geometric_shapes -->
  <depend stack="pr2_controllers"/> <!-- pr2_controllers_msgs -->
  <depend stack="pr2_kinematics"/> <!-- pr2_arm_kinematics -->
  <depend stack="robot_model"/> <!-- urdf, kdl_parser, resource_retriever -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rospy, roscpp, message_filters -->

<package name="visualize_arm"/><package name="sbpl_collision_checking"/><package name="sbpl_arm_planner_node"/><package name="sbpl_arm_planner"/></stack><stack name="node_monitoring" path="" repo="node_monitoring" repo_host="http://github.com/timn/ros-node_monitoring">
  <description brief="node_monitoring">node_monitoring</description>
  <author>Maintained by Tim Niemueller</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/node_monitoring</url>
  <depend stack="ros"/> <!-- rospy, roscpp -->
<package name="nodemon_lua"/><package name="nodemon_tui"/><package name="nodemon_py"/><package name="nodemon_webview"/><package name="nodemon_msgs"/><package name="nodemon_cpp"/></stack><stack name="pr2_rubiks_solver" path="" repo="pr2_rubiks_solver" repo_host="https://github.com/uu-isrc-robotics/pr2_rubiks_solver">
  <description brief="pr2_rubiks_solver">PR2 Rubik's cube solver</description>
  <author>Maintained by Lorenzo Riano and Chris Burbridge</author>
  <license>GPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_rubiks_solver</url>
  <depend stack="camera_drivers"/> <!-- prosilica_camera -->
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- sensor_msgs, actionlib_msgs, geometry_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="image_common"/> <!-- polled_camera, image_transport -->
  <depend stack="kinematics"/> <!-- kinematics_msgs -->
  <depend stack="motion_planning_common"/> <!-- motion_planning_msgs -->
  <depend stack="pr2_controllers"/> <!-- pr2_controllers_msgs -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_msgs, rospy, roscpp -->
  <depend stack="vision_opencv"/> <!-- opencv2, image_geometry, cv_bridge -->

<package name="rubiks_graph"/><package name="rubiks_inspect"/><package name="rubiks_solver"/></stack><stack name="tabletop_object_perception" path="/stacks/tabletop_object_perception/branches/0.4-branch" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="tabletop_object_perception">

    One example of sensor data processing for manipulation
    tasks. Containts functionality for object segmentation, object
    recognition and collision environment management for manipulation.

  </description>
  <author>Maintained by Matei Ciocarlie</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/tabletop_object_perception</url>
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- geometry_msgs, actionlib_msgs, sensor_msgs, stereo_msgs, visualization_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="motion_planning_common"/> <!-- geometric_shapes_msgs, collision_environment_msgs, mapping_msgs, distance_field -->
  <depend stack="object_manipulation"/> <!-- household_objects_database_msgs, object_manipulation_msgs, rviz_interaction_tools -->
  <depend stack="perception_pcl"/> <!-- pcl, pcl_ros -->
  <depend stack="pr2_common"/> <!-- pr2_msgs -->
  <depend stack="pr2_object_manipulation"/> <!-- rgbd_assembler -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_srvs, std_msgs, roscpp -->
  <depend stack="visualization"/> <!-- rviz -->
  <depend stack="visualization_common"/> <!-- ogre_tools -->

<package name="object_recognition_gui"/><package name="tabletop_object_detector"/><package name="tabletop_collision_map_processing"/><package name="object_segmentation_gui"/><package name="fast_plane_detection"/><package name="active_realtime_segmentation"/></stack><stack name="drivers_experimental" path="/branches/trunk_cturtle/stacks/drivers_experimental" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="drivers_experimental">Experimental or unsupported drivers. This stack is not intended for release and packages within it should be used individually.</description>
  <author>Maintained by Blaise Gassend</author>
  <license>BSD,unknown,Proprietary</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/drivers_experimental</url>
  <depend stack="camera_drivers"/> <!-- camera_info_manager, wge100_camera -->
  <depend stack="common_msgs"/> <!-- sensor_msgs, diagnostic_msgs -->
  <depend stack="diagnostics"/> <!-- self_test, diagnostic_updater -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure, driver_base, timestamp_tools -->
  <depend stack="geometry"/> <!-- tf, angles -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="point_cloud_perception"/> <!-- pcl -->
  <depend stack="pr2_controllers"/> <!-- ethercat_trigger_controllers, pr2_calibration_controllers, robot_mechanism_controllers -->
  <depend stack="pr2_mechanism"/> <!-- pr2_controller_manager, realtime_tools, pr2_controller_interface -->
  <depend stack="pr2_robot"/> <!-- pr2_camera_synchronizer, pr2_etherCAT -->
  <depend stack="ros"/> <!-- std_msgs, rostest, rospy, roscpp -->
  <depend stack="vision_opencv"/> <!-- opencv2, cv_bridge -->
  <depend stack="visualization_common"/> <!-- visualization_msgs -->

<package name="gevicam_puregev"/><package name="serial_port"/><package name="gevicam_camera"/><package name="nvidia_gpu_monitor"/><package name="ledwiz"/><package name="apcupsd_node"/><package name="camera_trigger_test"/><package name="ac_power_monitor"/><package name="canon_gphoto"/><package name="dp_ptu47_pan_tilt_stage"/><package name="gevicam_trigger"/><package name="hokuyo_node_plus"/></stack><stack name="pr2_tabletop_manipulation_apps" path="/stacks/pr2_tabletop_manipulation_apps/branches/0.4-branch" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_tabletop_manipulation_apps">

    Brings together manipulation and perception for complete task
    execution using the PR2 robot. 

  </description>
  <author>Maintained by Matei Ciocarlie and Kaijen Hsiao</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_tabletop_manipulation_apps</url>
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- geometry_msgs, actionlib_msgs, sensor_msgs, stereo_msgs -->
  <depend stack="geometry"/> <!-- tf, tf_conversions -->
  <depend stack="object_manipulation"/> <!-- household_objects_database, object_manipulator, object_manipulation_msgs, rviz_interaction_tools -->
  <depend stack="pr2_controllers"/> <!-- pr2_controllers_msgs -->
  <depend stack="pr2_object_manipulation"/> <!-- pr2_gripper_reactive_approach, pr2_object_manipulation_launch, pr2_gripper_click, simple_Jtranspose_controller, rgbd_assembler -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- roscpp -->
  <depend stack="tabletop_object_perception"/> <!-- object_segmentation_gui, tabletop_collision_map_processing, tabletop_object_detector, object_recognition_gui -->
  <depend stack="visualization"/> <!-- rviz -->

<package name="pr2_tabletop_manipulation_launch"/><package name="pr2_create_object_model"/><package name="pr2_pick_and_place_demos"/><package name="pr2_interactive_manipulation"/><package name="pr2_skill_crane"/><package name="pr2_interactive_object_detection"/></stack><stack name="motion_capture" path="/stacks/motion_capture/trunk" repo="wu-ros-pkg" repo_host="https://wu-ros-pkg.svn.sourceforge.net/svnroot/wu-ros-pkg">
  <description brief="Libraries for reading/using motion capture data">Libraries for reading/using motion capture data</description>
  <author>Maintained by David Lu!!</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/motion_capture</url>
  <depend stack="common_msgs"/> <!-- sensor_msgs, geometry_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="ros"/> <!-- rosbag, rospy -->
  <depend stack="visualization_common"/> <!-- visualization_msgs -->

<package name="mocap_point_cloud"/><package name="c3d"/></stack><stack name="bosch_drivers" path="/trunk/stacks/bosch_drivers" repo="bosch-ros-pkg" repo_host="https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg">
  <description brief="Collection of hardware drivers.">

     A collection of hardware drivers in use at Bosch RTC.

  </description>
  <author>Benjamin Pitzer, Philip Roan (Maintained by Philip Roan)</author>
  <license>BSD,LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/bosch_drivers</url>
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="diagnostics"/> <!-- self_test -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="ros"/> <!-- std_msgs, roscpp -->
  <depend stack="vision_opencv"/> <!-- opencv2 -->

<package name="smi540"/><package name="gumstix_memwrite_bma180"/><package name="bma180"/><package name="photo"/><package name="sub20"/><package name="adc_sub20"/><package name="amtec"/><package name="usb_cam"/><package name="gumstix_memread_bma180"/></stack><stack name="ecl_navigation" path="/trunk/ecl_navigation" repo="ecl_navigation" repo_host="https://embedded-control-library.googlecode.com/svn">
  <description brief="Common structures and algorithms for robotic navigation">
  
    This stack aims to bring the common tools and algorithms needed to 
	develop navigation algorithms, in particular slam. It does not focus on
	the end-point solution, rather the tools needed to create a variety of
	end-point solutions.
  
  </description>
  <author>Maintained by Daniel Stonier</author>
  <license>BSD</license>  
  <review notes="" status="proposal cleared"/>
  <url>http://ros.org/wiki/ecl_navigation</url>
  <depend stack="ecl_core"/> <!-- ecl_utilities, ecl_formatters, ecl_geometry, ecl_math, ecl_time, ecl_linear_algebra, ecl_exceptions -->
  <depend stack="ecl_lite"/> <!-- ecl_errors, ecl_config -->
  <depend stack="ecl_tools"/> <!-- ecl_build, ecl_license -->
  <depend stack="ros"/>

<package name="ecl_maps"/><package name="ecl_slam"/><package name="ecl_navigation_apps"/><package name="ecl_mobile_robot"/><package name="ecl_navigation"/></stack><stack name="perception_pcl_addons" path="/stacks/perception_pcl_addons/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Point Cloud Library Addons">
    The <b>perception_pcl_addons</b> stack contains additions to the Point
    Cloud Library (PCL) such as visualization tools, tutorials and example
    code, and demos.
  </description>
  <author>Maintained by Radu Bogdan Rusu</author>
  <license>BSD,LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/perception_pcl_addons</url>
  <depend stack="common_msgs"/> <!-- stereo_msgs -->
  <depend stack="geometry"/> <!-- eigen -->
  <depend stack="perception_pcl"/> <!-- pcl, pcl_ros -->
  <depend stack="ros"/>
  <depend stack="visualization"/> <!-- wxpropgrid -->

<package name="pcl_visualization"/><package name="pcl_tutorials"/><package name="terminal_tools"/></stack><stack name="dynamixel_motor" path="/stacks/dynamixel_motor/trunk" repo="dynamixel_motor" repo_host="https://ua-ros-pkg.googlecode.com/svn">
    <description brief="Robotis Dynamixel motor drivers and ROS controllers">
        This stack contains packages that are used to interface with Robotis
        Dynamixel line of servo motors. This stack was tested with and fully
        supports AX-12, AX-18, RX-24, RX-28, MX-28, RX-64, EX-106 models.
    </description>

    <author>Maintained by Antons Rebguns</author>
    <license>BSD</license>  
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/dynamixel_motor</url>

    <depend stack="ros"/>
    <depend stack="ros_comm"/>
    <depend stack="common"/>
    <depend stack="common_msgs"/>
    <depend stack="control"/>
<package name="dynamixel_driver"/><package name="dynamixel_controllers"/><package name="dynamixel_tutorials"/><package name="dynamixel_msgs"/></stack><stack name="simple_arms" path="/trunk/simple_arms" repo="vanadium-ros-pkg" repo_host="http://vanadium-ros-pkg.googlecode.com/svn">
  <description brief="Simple ways of controlling 4, 5 and more DOF arms"/>
  <author>Maintained by Michael Ferguson</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/simple_arms</url>
  <depend stack="arm_navigation"/> <!-- kinematics_msgs, arm_navigation_msgs -->
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- sensor_msgs, trajectory_msgs, geometry_msgs -->
  <depend stack="control"/> <!-- control_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_srvs, rospy -->
<package name="simple_arm_actions"/><package name="simple_arm_server"/></stack><stack name="gpgpu" path="" repo="umd-ros-pkg" repo_host="git://ram.umd.edu/ros/gpgpu.git">
  <description brief="GPGPU support">
    Tools for using GPU computing technology in ROS nodes.
  </description>
  <author>Ken Tossell</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/gpgpu</url>
  <depend stack="ros"/>

<package name="cuda"/><package name="cuda_tests"/></stack><stack name="RCPRG_laser_drivers" path="" repo="RCPRG_laser_drivers" repo_host="https://github.com/RCPRG-ros-pkg/RCPRG_laser_drivers">
  <description brief="RCPRG_laser_drivers">RCPRG_laser_drivers</description>
  <author>Maintained by Konrad Banachowicz</author>
  <license>GPL,LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/RCPRG_laser_drivers</url>
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="ros"/> <!-- roscpp -->

<package name="libLMS1xx"/><package name="LMS1xx"/></stack><stack name="zeroconf_implementations" path="" repo="zeroconf_implementations" repo_host="https://github.com/stonier/zeroconf_implementations">
  <description brief="Zeroconf api for ros frameworks">
  Convenient wrappers around platform-dependant implementations whose 
  purpose are both to expose a fairly standard sort of api as well 
  as a ros api (topics and services) where practical.
  
  The only implementation it doesn't include is the android (will
  eventually merge back in here if ubuntu starts officially including
  adk packages).
  </description>
  <author>Maintained by Daniel Stonier</author>
  <license>BSD</license>  
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/zeroconf_implementations</url>
  <depend stack="ros"/> <!-- roslib -->
  <depend stack="ros_comm"/> <!-- std_msgs, rospy, roscpp -->
  <depend stack="rosjava_core"/> <!-- rosjava_bootstrap -->

<package name="zeroconf_avahi_demos"/><package name="zeroconf_jmdns_demos"/><package name="zeroconf_comms"/><package name="zeroconf_jmdns"/><package name="zeroconf_avahi"/></stack><stack name="turtlebot_arm" path="" repo="turtlebot_arm" repo_host="https://kforge.ros.org/turtlebot/turtlebot_arm">
  <description brief="turtlebot_arm">The turtlebot_arm package provides bringup, description, and utilities for using the TurtleBot arm.</description>
  <author>Maintained by Melonee Wise</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/turtlebot_arm</url>
  <depend stack="arbotix"/> <!-- arbotix_msgs, arbotix_controllers, arbotix_python -->
  <depend stack="arm_navigation"/> <!-- planning_environment, arm_kinematics_constraint_aware -->
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- visualization_msgs -->
  <depend stack="eigen"/> <!-- eigen -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="perception_pcl"/> <!-- pcl, pcl_ros -->
  <depend stack="robot_model"/> <!-- urdf -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- roscpp -->
  <depend stack="simple_arms"/> <!-- simple_arm_server, simple_arm_actions -->
  <depend stack="turtlebot"/> <!-- turtlebot_description -->
  <depend stack="vision_opencv"/> <!-- opencv2, image_geometry, cv_bridge -->
  <depend stack="visualization"/> <!-- interactive_markers -->
  <depend stack="xacro"/> <!-- xacro -->

<package name="turtlebot_arm_description"/><package name="turtlebot_kinect_arm_calibration"/><package name="turtlebot_arm_bringup"/><package name="turtlebot_block_manipulation"/><package name="turtlebot_arm_interactive_markers"/></stack><stack name="documentation" path="/stacks/documentation/trunk" repo="documentation" repo_host="https://code.ros.org/svn/ros">
  <description brief="documentation">Documentation tools, including rosdoc</description>
  <author>Maintained by Ken Conley</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/documentation</url>
  <depend stack="ros"/> <!-- roslib -->
  <depend stack="ros_comm"/> <!-- rosmsg -->

<package name="rosdoc"/></stack><stack name="pr2_props_stack" path="/pr2_props_stack/trunk" repo="pr2_props_stack" repo_host="https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs">
  <description brief="pr2_props_stack">pr2_props_stack</description>
  <author>Joe Romano</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_props_stack</url>
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="pr2_object_manipulation"/> <!-- pr2_gripper_sensor_controller, pr2_gripper_sensor_action, pr2_gripper_sensor_msgs -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- roscpp -->

<package name="pr2_props"/></stack><stack name="uu-robots" path="" repo="uuisrc-ros-pkg" repo_host="https://github.com/cburbridge/uuisrc-ros-pkg">
  <description brief="robots">ROS interface code for various robots</description>
  <author>Chris Burbridge</author>
  <license>GPL</license>  
  <review notes="" status="unreviewed"/>
  <depend stack="ros"/>

<package name="arm_hand_splitter"/><package name="metralabs_ros"/><package name="joint_fusion"/><package name="player_camera"/><package name="player_interface"/></stack><stack name="pr2_mechanism" path="" repo="pr2_mechanism" repo_host="https://kforge.ros.org/pr2mechanism/hg">
  <description brief="PR2 mechanism">
    The <tt>pr2_mechanism</tt> stack contains the infrastructure to control the
    PR2 robot in a hard realtime control loop. The main interface to
    packages in this stack is through C++, but it is possible to
    interact with controllers through a ROS API. While the
    stack is currently aimed at controlling the PR2 robot, it should
    work on most force-controlled robots. 
  </description>
  <author>Maintained by Wim Meeussen</author>
  <license>BSD</license>  
  <review notes="2009-11-13" status="Doc reviewed"/>
  <url>http://ros.org/wiki/pr2_mechanism</url>
  <depend stack="common"/> <!-- xacro, tinyxml, pluginlib -->
  <depend stack="common_msgs"/> <!-- sensor_msgs, geometry_msgs, diagnostic_msgs -->
  <depend stack="diagnostics"/> <!-- diagnostic_updater -->
  <depend stack="geometry"/> <!-- angles -->
  <depend stack="pr2_common"/> <!-- pr2_description -->
  <depend stack="robot_model"/> <!-- robot_state_publisher, urdf, kdl_parser -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_msgs, std_srvs, rosparam, rospy, roscpp -->

<package name="pr2_mechanism_model"/><package name="pr2_hardware_interface"/><package name="pr2_controller_manager"/><package name="realtime_tools"/><package name="pr2_mechanism_msgs"/><package name="pr2_controller_interface"/><package name="pr2_mechanism_diagnostics"/></stack><stack name="bosch_registration" path="/trunk/stacks/bosch_registration" repo="bosch-ros-pkg" repo_host="https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg">
  <description brief="bosch_registration">bosch_registration</description>
  <author>Maintained by Dejan Pangercic</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/bosch_registration</url>
  <depend stack="ros_comm"/>
  <depend stack="opencv_vision"/>
  <depend stack="bosch_common"/>
  <depend stack="bosch_3rdparty"/>
  <depend stack="common_msgs"/>
  <depend stack="geometry"/>
  <depend stack="perception_pcl"/>
  <depend stack="bullet"/>
  <depend stack="visual_feature_detectors"/>
<package name="mesh_registration"/><package name="scan_matcher"/></stack><stack name="uu-utils" path="" repo="uuisrc-ros-pkg" repo_host="https://github.com/cburbridge/uuisrc-ros-pkg">
  <description brief="Utilities">Various utilities</description>
  <author>Chris Burbridge and Lorenzo Riano</author>
  <license>GPL</license>  
  <review notes="" status="unreviewed"/>
  <depend stack="ros"/>
<package name="laser_to_pointcloud"/></stack><stack name="vicon" path="" repo="uuisrc-ros-pkg" repo_host="https://github.com/cburbridge/uuisrc-ros-pkg">
  <description brief="vicon">Vicon motion tracking system interface stack</description>
  <author>Chris Burbridge</author>
  <license>GPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/vicon</url>
  <depend stack="ros"/>

<package name="vicon_nodes"/><package name="libvicon"/></stack><stack name="slam_karto" path="/stacks/slam_karto/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="slam_karto">SLAM using KARTO from SRI International</description>
  <author>Maintained by Bhaskara Marthi</author>
  <license>BSD,LGPL</license>  
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/slam_karto</url>
  <depend stack="common_msgs"/> <!-- nav_msgs, geometry_msgs, sensor_msgs, visualization_msgs -->
  <depend stack="common_rosdeps"/> <!-- common_rosdeps -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rosconsole, roscpp, message_filters -->

<package name="karto_scan_matcher"/><package name="karto"/></stack><stack name="hrl_arm_control" path="/trunk/hrl/hrl_arm_control" repo="gt-ros-pkg" repo_host="http://gt-ros-pkg.googlecode.com/svn">
  <description brief="hrl_arm_control">hrl_arm_control</description>
  <author>Maintained by Advait Jain and Kelsey Hawkins (Advisor: Prof Charlie Kemp)</author>
  <license>New BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hrl_arm_control</url>
  <depend stack="ros"/>

<package name="hrl_kdl_arms"/><package name="hrl_pr2_arms"/><package name="hrl_cody_arms"/><package name="hrl_generic_arms"/><package name="equilibrium_point_control"/></stack><stack name="nao_rail" path="" repo="wpi-rail-ros-pkg" repo_host="https://github.com/WPI-RAIL/wpi-rail-ros-pkg">
  <description brief="The RAIL group's NAO packages.">The nao_rail stack contains packages to control and query an Aldebaran NAO. These packages can be used in conjunction with existing NAO stacks and packages to add additional features.</description>
  <author>Maintained by Russell Toris</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/nao_rail</url>
  <depend stack="ros"/>
<package name="nao_vision"/><package name="nao_speech"/></stack><stack name="astromech-ros" path="" repo="astromech-ros" repo_host="https://astromech-ros.svn.sourceforge.net/svnroot/astromech-ros">
  <description brief="astromech-ros">
    astromech-ros is a stack of ROS interface functions for Astromech
    droid replicas (&quot;R2-D2s&quot;).

    Astromech droids are basically differential-drive platforms with
    specific, movie-used appendages. They usually have a turnable
    dome. The full set of appendages are two &quot;utility arms&quot; in front,
    a &quot;gripper arm&quot; and a &quot;cpu arm&quot;, a &quot;periscope&quot; and &quot;life form
    scanner&quot; in the dome, and the ability to go from three-leg mode
    (passive caster in front) to two-leg mode and back. Some builders
    opt to have all of those, some only have the turnable dome. That
    makes them a pretty standardized plaform which is scalable from a
    fixed set of functions.

    The usual purpose of these &quot;robots&quot; is display at conventions, so
    most of them currently are remote-control only, but the first
    forays into autonomous robotics have recently been started. My own
    droid is (I believe) the first one to have working environment
    sensors (ultrasound, infrared, camera, soon a Kinect), currently
    used for collision avoidance.

    To make things easier for other builders and also because of the
    standardized-scalable nature of the platform, I've started work on
    a ROS stack that allows control of Astromech platforms and
    basically provides a standardized software interface to the
    platform and all its appendages. Currently, this stack only
    supports my droid, but we're actively working on getting more
    droids supported.

    There's an Astromech builders' club with a web home at
    http://astromech.net and a couple hundred builders world-wide.

    R2-D2, Star Wars etc. are trademarks by LucasFilm. All efforts in
    astromech-ros and the R2 builders' club are strictly private and
    not for profit. We respect LucasFilm's trademarks and IP and are
    happy for the support we're getting from them.
  </description>
  <author>Maintained by Björn Giesler bjoern-AT-giesler.de</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/astromech-ros</url>
  <depend stack="ros"/>
<package name="astromech_samples"/><package name="astromech_msgs"/><package name="astromech_sense"/><package name="astromech_data"/><package name="astromech_emo"/><package name="astromech_reason"/><package name="astromech_base"/></stack><stack name="pr2_common" path="/stacks/pr2_common/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="PR2 robot description and PR2-specific messages">
    URDF description of the robot kinematics and dynamics, 3D models of robot components, information required for gazebo to simulate the PR2, and messages specific to the PR2 such as detailed information about its power board and fingertip pressure sensors.
  </description>
  <author>Maintained by John Hsu</author>
  <license>BSD</license>  
  <review notes="2010/01/18" status="Doc reviewed"/>
  <url>http://ros.org/wiki/pr2_common</url>
  <depend stack="common_msgs"/> <!-- geometry_msgs -->
  <depend stack="robot_model"/> <!-- convex_decomposition, ivcon, urdf -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rosbag, rostest, std_msgs, rosbagmigration, rospy -->
  <depend stack="xacro"/> <!-- xacro -->

<package name="pr2_dashboard_aggregator"/><package name="pr2_description"/><package name="pr2_machine"/><package name="pr2_msgs"/></stack><stack name="wg_robots_gazebo" path="/stacks/wg_robots_gazebo/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="wg_robots_gazebo">

     This stack contains a variety of tests and demos launch scripts in
simulation.

  </description>
  <author>Maintained by John Hsu</author>
  <license>BSD,</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/wg_robots_gazebo</url>
  <depend stack="arm_navigation"/> <!-- kinematics_msgs, robot_self_filter -->
  <depend stack="bullet"/> <!-- bullet -->
  <depend stack="camera_drivers"/> <!-- wge100_camera -->
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- nav_msgs, stereo_msgs, actionlib_msgs, trajectory_msgs, sensor_msgs, geometry_msgs, visualization_msgs -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure, driver_base -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="image_pipeline"/> <!-- stereo_image_proc -->
  <depend stack="laser_pipeline"/> <!-- laser_filters, laser_assembler -->
  <depend stack="navigation"/> <!-- move_base, map_server, amcl, fake_localization, move_base_msgs, robot_pose_ekf -->
  <depend stack="object_manipulation"/> <!-- household_objects_database -->
  <depend stack="physics_ode"/> <!-- parallel_quickstep -->
  <depend stack="pr2_apps"/> <!-- pr2_teleop, pr2_tuckarm -->
  <depend stack="pr2_arm_navigation"/> <!-- pr2_arm_navigation_kinematics -->
  <depend stack="pr2_common"/> <!-- pr2_description, pr2_machine -->
  <depend stack="pr2_common_actions"/> <!-- joint_trajectory_generator, pr2_tuck_arms_action, pr2_common_action_msgs, pr2_arm_move_ik -->
  <depend stack="pr2_controllers"/> <!-- pr2_mechanism_controllers, pr2_controllers_msgs, joint_trajectory_action, robot_mechanism_controllers -->
  <depend stack="pr2_doors"/> <!-- pr2_doors_executive, pr2_doors_actions -->
  <depend stack="pr2_mechanism"/> <!-- pr2_mechanism_msgs, pr2_controller_manager, pr2_mechanism_model, pr2_controller_interface -->
  <depend stack="pr2_navigation"/> <!-- pr2_navigation_perception, pr2_navigation_teleop, semantic_point_annotator, pr2_navigation_global -->
  <depend stack="pr2_navigation_apps"/> <!-- pr2_2dnav, pr2_2dnav_local -->
  <depend stack="pr2_object_manipulation"/> <!-- pr2_tabletop_manipulation_launch, pr2_pick_and_place_demos -->
  <depend stack="pr2_plugs"/> <!-- pr2_plugs_actions -->
  <depend stack="pr2_robot"/> <!-- pr2_bringup -->
  <depend stack="pr2_simulator"/> <!-- pr2_gazebo_plugins, pr2_examples_gazebo, pr2_ogre, pr2_controller_configuration_gazebo, pr2_gazebo -->
  <depend stack="robot_model"/> <!-- robot_state_publisher -->
  <depend stack="ros"/> <!-- roslib -->
  <depend stack="ros_comm"/> <!-- rosgraph_msgs, std_srvs, roscpp, std_msgs, rostest, rospy, rostopic -->
  <depend stack="rx"/> <!-- rxtools -->
  <depend stack="simulator_gazebo"/> <!-- gazebo, gazebo_tools, gazebo_msgs, gazebo_plugins, gazebo_worlds -->
  <depend stack="slam_gmapping"/> <!-- gmapping -->
  <depend stack="vision_opencv"/> <!-- image_geometry -->
  <depend stack="visualization"/> <!-- interactive_markers, rviz -->
  <depend stack="xacro"/> <!-- xacro -->

<package name="pr2_tabletop_manipulation_gazebo_demo"/><package name="pr2_arm_gazebo"/><package name="pr2_sr_hand_gazebo_demo"/><package name="icra_navigation_gazebo"/><package name="pr2_plugs_gazebo_demo"/><package name="pr2_pickup_object_demo"/><package name="pr2_doors_gazebo_demo"/><package name="gazebo_benchmarks"/><package name="pr2_simulator_benchmarks"/><package name="pr2_kinect_test_description"/><package name="ros_epic_fail"/><package name="texas_gazebo"/><package name="pr2_build_map_gazebo_demo"/><package name="pr2_bringup_gazebo_demo"/><package name="test_pr2_2dnav_gazebo"/><package name="pr2_laban_gazebo_demo"/><package name="pr2_gazebo_wg"/><package name="pr2_2dnav_gazebo"/></stack><stack name="android_sensors_driver" path="" repo="android_sensors_driver" repo_host="https://code.google.com/p/android-sensors-driver">
  <description brief="android_sensors_driver">android_sensors_driver</description>
  <author>Maintained by Chad Rockey</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/android_sensors_driver</url>
  <depend stack="android"/> <!-- android_gingerbread -->
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="ros"/>

<package name="android_sensors_driver"/></stack><stack name="rosserial" path="" repo="rosserial" repo_host="https://kforge.ros.org/rosserial/hg">
  <description brief="ROS Serial Client Library">
    <p>ROS Serial is a point-to-point version of ROS communications over serial, primarily for integrating low-cost microcontrollers (Arduino) into ROS. ROS serial consists of a general p2p  protocol, libraries for use with Arduino, and nodes for the PC/Tablet side (currently in both Python and Java).</p>
  </description>
  <author>Maintained by Michael Ferguson, Adam Stambler</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosserial</url>
  <depend stack="common_msgs"/> <!-- nav_msgs, sensor_msgs, geometry_msgs, diagnostic_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_msgs, rospy -->

<package name="rosserial_client"/><package name="rosserial_xbee"/><package name="rosserial_python"/><package name="rosserial_arduino"/><package name="rosserial_msgs"/></stack><stack name="ua_vision" path="/trunk/arrg/ua_vision" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="ua_vision">
        Contains packages related to vision on UA robots, including saliency 
        tracking based on the Nick's Machine Perception Toolkit (NMPT).
    </description>
    <author>Maintained by UA Robotics Research Group</author>
    <license>BSD</license>  
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/ua_vision</url>

    <depend stack="ros"/>
    <depend stack="vision_opencv"/>
<package name="object_tracking"/><package name="saliency_tracking"/><package name="background_filters"/><package name="nmpt"/><package name="color_based_tracking"/></stack><stack name="zeroconf_android" path="" repo="zeroconf_android" repo_host="https://github.com/stonier/zeroconf_android">
  <description brief="Zeroconf api for ros frameworks">
  Convenient wrapper around the jmdns implementation for zeroconf
  on android.
  </description>
  <author>Maintained by Daniel Stonier</author>
  <license>BSD</license>  
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/zeroconf_android</url>
  <depend stack="ros"/>
  <depend stack="rosjava_core"/> <!-- rosjava_bootstrap -->
  <depend stack="zeroconf_implementations"/> <!-- zeroconf_jmdns -->

<package name="zeroconf_android_jmdns"/><package name="zeroconf_android_master_browser"/><package name="zeroconf_android_jmdns_demos"/></stack><stack name="whole_body_control" path="" repo="whole_body_control" repo_host="https://github.com/poftwaresatent/whole_body_control">
  <description brief="ROS stack for Stanford_WBC">
    This stack contains packages that make the Stanford Whole-Body
    Control framework available within ROS. In particular, the
    wbc_core package is a thin wrapper around the core Stanford_WBC
    library, and the wbc_pr2_ctrl package contains a controller plugin
    and other utilities to run the whole-body controller on PR2
    (simulated or real).
  </description>
  <author>Maintained by Roland Philippsen</author>
  <license>mostly LGPLv3, also some other open-source licenses</license>  
  <review notes="" status="unreviewed"/>
  <url>http://stanford-wbc.sourceforge.net/</url>
  <depend stack="common"/> <!-- pluginlib -->
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="geometry"/> <!-- eigen -->
  <depend stack="pr2_mechanism"/> <!-- pr2_controller_interface -->
  <depend stack="robot_model"/> <!-- urdf -->
  <depend stack="ros"/> <!-- rosconsole -->

<package name="wbc_m3_ctrl"/><package name="wbc_pr2_ctrl"/><package name="wbc_uta_opspace"/><package name="wbc_urdf"/><package name="wbc_msgs"/><package name="wbc_core"/></stack><stack name="portrait_bot" path="/trunk/portrait_bot" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="Stack for PR2 portrait demo">
    The portrait_bot stack enables the PR2 draw faces recognized in camera images.
  </description>
  <author>Maintained by Juergen Hess</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/portrait_bot</url>
  <depend stack="common"/> <!-- actionlib, tinyxml -->
  <depend stack="common_msgs"/> <!-- geometry_msgs, actionlib_msgs, sensor_msgs, visualization_msgs -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure -->
  <depend stack="ee_cart_imped"/> <!-- ee_cart_imped_control, ee_cart_imped_action, ee_cart_imped_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="image_transport_plugins"/> <!-- compressed_image_transport -->
  <depend stack="laser_pipeline"/> <!-- laser_assembler -->
  <depend stack="people"/> <!-- face_detector, people_msgs -->
  <depend stack="perception_pcl"/> <!-- pcl, pcl_ros -->
  <depend stack="pr2_common"/> <!-- pr2_msgs -->
  <depend stack="pr2_controllers"/> <!-- pr2_controllers_msgs -->
  <depend stack="ros"/> <!-- roslib -->
  <depend stack="ros_comm"/> <!-- std_msgs, rospy, roscpp -->
  <depend stack="vision_opencv"/> <!-- opencv2, image_geometry, cv_bridge -->

<package name="portrait_painter"/><package name="face_finder"/><package name="face_contour_detector"/><package name="pen_gripper"/><package name="portrait_robot_msgs"/></stack><stack name="sound_drivers" path="/stacks/sound_drivers/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Stack containing drivers to play/record sound.">

  This stack is deprecated. See the audio_common stack for audio related
  packages.

  </description>
  <author>Blaise Gassend</author>
  <license>BSD</license>  
  <review notes="reviewed 9/30/2009" status="Doc reviewed"/>
  <url>http://ros.org/wiki/sound_drivers</url>
  <depend stack="ros"/> <!-- roslib -->
  <depend stack="audio_common"/>

</stack><stack name="libphidgets21" path="/trunk/libphidgets21" repo="vmi-ros-pkg" repo_host="https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg">
  <description brief="libphidgets21">libphidgets21</description>
  <author>Maintained by Roalter Luis</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/libphidgets21</url>
  <depend stack="ros"/>

<package name="libphidgets21"/></stack><stack name="humanoid_navigation" path="/trunk/humanoid_navigation" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="Various packages for humanoid (biped) navigation.">
        <p>This stack will contain packages for humanoid (biped) navigation, 
        developed at the <a href="http://hrl.informatik.uni-freiburg.de/">Humanoid Robots Lab</a> 
    at the Albert-Ludwigs-Universität in Freiburg, Germany. The main code is currently 
    in the <a href="http://www.ros.org/wiki/footstep_planner">footstep_planner</a> package.
   </p>
   
  </description>
  <author>Maintained by Armin Hornung</author>
  <license>BSD,GPL 3</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/humanoid_navigation</url>
  <depend stack="arm_navigation"/> <!-- sbpl -->
  <depend stack="common_msgs"/> <!-- nav_msgs, visualization_msgs -->
  <depend stack="geometry"/> <!-- tf, angles -->
  <depend stack="humanoid_msgs"/> <!-- humanoid_nav_msgs -->
  <depend stack="navigation"/> <!-- map_server -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rospy, roscpp -->
  <depend stack="vision_opencv"/> <!-- opencv2 -->

<package name="footstep_planner"/><package name="gridmap_2d"/></stack><stack name="uu-planners" path="" repo="uuisrc-ros-pkg" repo_host="https://github.com/cburbridge/uuisrc-ros-pkg">
  <description brief="uu-planners">uu-planners</description>
  <author>Maintained by Lorenzo Riano</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/uu-planners</url>
  <depend stack="ros"/>

<package name="empty_pointcloud"/><package name="schunk_arm_kinematics_constraint_aware"/><package name="move_arm_goal"/><package name="schunk_planning"/></stack><stack name="ua_apps" path="/trunk/arrg/ua_apps" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="Applications and demos for UA Robots">Applications and demos for UA Robots.</description>
    <author>Maintained by UA Robotics Research Group</author>
    <license>BSD</license>  
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/ua_apps</url>

    <depend stack="ros"/>

    <depend stack="ua_drivers"/>
    <depend stack="ua_controllers"/>
    <depend stack="ua_robots"/>
    <depend stack="ua_vision"/>
    <depend stack="wubble_world"/>

<package name="wubble2_robot"/><package name="ua_woz_experiment"/><package name="wubble_mapping"/><package name="wubble_teleop"/><package name="wubble_blocks"/><package name="wubble_robot"/></stack><stack name="pr2_plugs" path="" repo="pr2_plugs" repo_host="https://kforge.ros.org/plugs/hg">
  <description brief="pr2_plugs">The pr2_plugs stack provides the low level actions for autonomously plugging the PR2 into a standard wall outlet.</description>
  <author>Wim Meeussen, Melonee Wise, Jon Bohren, Eitan Marder-Eppstein, Patrick Michelich</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_plugs</url>
  <depend stack="common"/> <!-- actionlib, bfl -->
  <depend stack="common_msgs"/> <!-- geometry_msgs, actionlib_msgs, sensor_msgs, visualization_msgs -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure -->
  <depend stack="eigen"/> <!-- eigen -->
  <depend stack="executive_smach"/> <!-- smach_ros, smach -->
  <depend stack="geometry"/> <!-- tf, angles, tf_conversions -->
  <depend stack="geometry_experimental"/> <!-- tf2_geometry_msgs, tf2_ros -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="navigation"/> <!-- move_base_msgs, base_local_planner, costmap_2d -->
  <depend stack="orocos_kinematics_dynamics"/> <!-- kdl -->
  <depend stack="perception_pcl"/> <!-- pcl_ros -->
  <depend stack="pr2_common"/> <!-- pr2_msgs -->
  <depend stack="pr2_common_actions"/> <!-- joint_trajectory_action_tools, pr2_common_action_msgs, pr2_arm_move_ik -->
  <depend stack="pr2_controllers"/> <!-- pr2_controllers_msgs -->
  <depend stack="pr2_mechanism"/> <!-- pr2_controller_manager -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_msgs, rosbag, rospy, roscpp, std_srvs -->
  <depend stack="vision_opencv"/> <!-- opencv2, image_geometry, cv_bridge -->

<package name="pr2_image_snapshot_recorder"/><package name="pr2_plugs_msgs"/><package name="pr2_plugs_common"/><package name="outlet_pose_estimation"/><package name="stereo_wall_detection"/><package name="checkerboard_pose_estimation"/><package name="pr2_plugs_actions"/><package name="visual_pose_estimation"/></stack><stack name="wg_hardware_test" path="/stacks/wg_hardware_test/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="WG hardware testing tools">Hardware testing tools and utilities. Willow Garage use only.</description>
  <author>Maintained by Kevin Watts</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/wg_hardware_test</url>
  <depend stack="arm_navigation"/> <!-- arm_navigation_msgs, planning_environment, trajectory_filter_server -->
  <depend stack="arm_navigation_experimental"/> <!-- collision_free_arm_trajectory_controller -->
  <depend stack="camera_drivers"/> <!-- prosilica_camera, wge100_camera -->
  <depend stack="common"/> <!-- actionlib, xacro -->
  <depend stack="common_msgs"/> <!-- sensor_msgs, geometry_msgs, diagnostic_msgs, visualization_msgs -->
  <depend stack="diagnostics"/> <!-- diagnostic_updater -->
  <depend stack="diagnostics_monitors"/> <!-- runtime_monitor, robot_monitor -->
  <depend stack="geometry"/> <!-- tf, angles -->
  <depend stack="image_pipeline"/> <!-- stereo_image_proc, image_proc, image_view -->
  <depend stack="imu_drivers"/> <!-- microstrain_3dmgx2_imu -->
  <depend stack="joystick_drivers"/> <!-- joy -->
  <depend stack="laser_drivers"/> <!-- hokuyo_node -->
  <depend stack="navigation"/> <!-- map_server, amcl -->
  <depend stack="pr2_apps"/> <!-- pr2_teleop -->
  <depend stack="pr2_arm_navigation"/> <!-- pr2_arm_navigation_actions -->
  <depend stack="pr2_common"/> <!-- pr2_description, pr2_msgs -->
  <depend stack="pr2_controllers"/> <!-- pr2_mechanism_controllers, single_joint_position_action, ethercat_trigger_controllers, joint_trajectory_action, robot_mechanism_controllers -->
  <depend stack="pr2_ethercat_drivers"/> <!-- eml, fingertip_pressure, ethercat_hardware -->
  <depend stack="pr2_mechanism"/> <!-- pr2_controller_manager, pr2_mechanism_model, pr2_mechanism_diagnostics, pr2_mechanism_msgs -->
  <depend stack="pr2_power_drivers"/> <!-- pr2_power_board -->
  <depend stack="pr2_robot"/> <!-- pr2_controller_configuration, pr2_camera_synchronizer, pr2_bringup, pr2_etherCAT -->
  <depend stack="pr2_self_test"/> <!-- pr2_counterbalance_check, joint_qualification_controllers, pr2_self_test_msgs -->
  <depend stack="robot_model"/> <!-- robot_state_publisher, urdf -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- pr2_mechanism_msgs, pr2_self_test_msgs, pr2_controller_manager, pr2_power_board, roscpp, microstrain_3dmgx2_imu, actionlib, wge100_camera, topic_tools, ethercat_trigger_controllers, rostopic, visualization_msgs, tf, pr2_msgs, ethercat_hardware, joy, sensor_msgs, rospy, std_msgs, diagnostic_msgs, roslaunch, std_srvs, fingertip_pressure, joint_qualification_controllers, robot_mechanism_controllers, pr2_mechanism_controllers, geometry_msgs, rosbag -->
  <depend stack="rx"/> <!-- rxtools -->
  <depend stack="vision_opencv"/> <!-- opencv2, cv_bridge -->
  <depend stack="visualization"/> <!-- rviz -->

<package name="pr2_transmission_check"/><package name="qualification"/><package name="life_test"/><package name="ectools"/><package name="roslaunch_caller"/><package name="pr2_component_descriptions"/><package name="wg_invent_client"/><package name="wgtest_status_indicator"/><package name="mtrace_tools"/><package name="pr2_drive_life_test"/><package name="pr2_hardware_test_monitor"/><package name="pr2_camera_focus"/></stack><stack name="RCF4ROS" path="/trunk/RCF4ROS" repo="roblab-whge-ros-pkg" repo_host="http://roblab-whge-ros-pkg.googlecode.com/svn">
  <description brief="RCF4ROS">Contains a stack to teleoperate mobile robots over P2P networks</description>
  <author>B. Fabricius</author>
  <license>CreativeCommons BY-NC-SA License</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/RCF4ROS</url>
  <depend stack="Scan3D"/> <!-- my3dscan, lms100 -->
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- nav_msgs, sensor_msgs, actionlib_msgs, geometry_msgs, visualization_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_msgs, std_srvs, roscpp, rospy -->

<package name="rcf_mod_map_compress"/><package name="rcf_authentication"/><package name="rcf_skype"/><package name="rcf_control_protocol"/><package name="rcf_base"/><package name="logitech_libwebcam"/><package name="iowarrior"/><package name="rcf_com_spherePTZ"/><package name="rcf_com_iowarrior"/><package name="rcf_com_lms100"/><package name="rcf_com_roomba_ctr_3d_scan"/><package name="rcf_com_roomba_base"/><package name="rcf_com_ocr4ros"/></stack><stack name="roar_stack" path="/roar_stack/trunk" repo="roar_stack" repo_host="https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs">
  <description brief="roar_stack">ROS Opensource Audio Recognizer Stack</description>
  <author>Joe Romano (joeromano@gmail.com)</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/roar_stack</url>
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- actionlib_msgs -->
  <depend stack="ros"/> <!-- std_msgs, std_srvs, rospy, roscpp -->

<package name="roar"/><package name="roar_msgs"/></stack><stack name="roslisp_common" path="/stacks/roslisp_common/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Common libraries to work with ROS in Common Lisp">
    Common libraries to control ROS based robots. This stack contains
    an implementation of actionlib (client and server) in Common Lisp,
    a transformation library and an implementation of tf in Common
    Lisp.
  </description>
  <author>Maintained by Bhaskara Marti and Lorenz Mosenlechner</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/roslisp_common</url>
  <depend stack="common_msgs"/> <!-- actionlib_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="ros"/>
  <depend stack="roslisp_support"/> <!-- roslisp_runtime -->

<package name="cl_tf"/><package name="actionlib_lisp"/><package name="cl_transforms"/><package name="cl_utils"/></stack><stack name="cob_environments" path="" repo="cob_environments" repo_host="git://github.com/ipa320/cob_environments">
  <description brief="cob_environments">cob_environments</description>
  <author>Maintained by Florian Weisshardt</author>
  <license>LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_environments</url>
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rostest -->

<package name="cob_default_env_config"/></stack><stack name="segway_rmp" path="" repo="segway-rmp-ros-pkg" repo_host="https://github.com/wjwwood/segway-rmp-ros-pkg">
  <description brief="segway_rmp">segway_rmp</description>
  <author>Maintained by William Woodall</author>
  <license>BSD</license> 
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/segway_rmp</url>
  <depend stack="ros"/>

<package name="joy2twist_segway_rmp"/><package name="segway_rmp_demos"/><package name="libsegwayrmp"/><package name="segway_rmpX"/><package name="serial_segway_rmp"/></stack><stack name="pr2_apps" path="" repo="pr2_apps" repo_host="https://kforge.ros.org/pr2apps/pr2_apps">
  <description brief="PR2 applications">Basic applications for the PR2 robot</description>
  <author>Maintained by Wim Meeussen</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_apps</url>
  <depend stack="arm_navigation"/> <!-- kinematics_msgs -->
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- sensor_msgs, actionlib_msgs, trajectory_msgs, geometry_msgs -->
  <depend stack="image_common"/> <!-- polled_camera -->
  <depend stack="joystick_drivers"/> <!-- ps3joy -->
  <depend stack="pr2_common"/> <!-- pr2_msgs -->
  <depend stack="pr2_common_actions"/> <!-- pr2_common_action_msgs, pr2_tuck_arms_action -->
  <depend stack="pr2_controllers"/> <!-- pr2_controllers_msgs -->
  <depend stack="pr2_mechanism"/> <!-- pr2_controller_manager, pr2_mechanism_msgs -->
  <depend stack="robot_model"/> <!-- urdf -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rospy, topic_tools, std_msgs, roscpp -->

<package name="pr2_teleop_general"/><package name="pr2_tuckarm"/><package name="pr2_position_scripts"/><package name="pr2_mannequin_mode"/><package name="pr2_app_manager"/><package name="pr2_teleop"/></stack><stack name="scan_tools" path="" repo="scan_tools" repo_host="http://robotics.ccny.cuny.edu/git/ccny-ros-pkg/scan_tools.git">
  <description brief="scan_tools">Scan Manipulation Tools</description>
  <author>Maintained by Ivan Dryanovski, William Morris, Gautier Dumonteil et al</author>
  <license>BSD,GPL,LGPL,LGPLv3</license>  
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/scan_tools</url>
  <depend stack="common"/> <!-- nodelet -->
  <depend stack="common_msgs"/> <!-- nav_msgs, geometry_msgs, sensor_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="perception_pcl"/> <!-- pcl, pcl_ros -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- roscpp, message_filters -->

<package name="polar_scan_matcher"/><package name="laser_ortho_projector"/><package name="csm"/><package name="laser_scan_splitter"/><package name="laser_scan_matcher"/><package name="ncd_parser"/></stack><stack name="hwu_osl_software" path="/trunk/hwu_osl_software" repo="hwu-osl-ros-pkg" repo_host="http://hwu-osl-ros-pkg.googlecode.com/svn">
  <description brief="hwu_osl_software">hwu_osl_software</description>
  <author>Maintained by Joel Cartwright</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>TODO</url>
  <depend stack="ros"/>

<package name="sim_clock"/><package name="auv_nav_sim"/><package name="auv_joy"/><package name="auv_description"/><package name="auv_pilot"/><package name="auv_sim"/><package name="auv_nav"/></stack><stack name="ethzasl_mapping" path="" repo="ethzasl_mapping" repo_host="https://github.com/ethz-asl/ros-mapping">
  <description brief="ethzasl_mapping">
    3D mapping tools for robotic applications
  </description>
  <author>François Pomerleau and Stéphane Magnenat</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ethzasl_mapping</url>
  <depend stack="common"/> 
  <depend stack="common_msgs"/>
  <depend stack="ros"/>
<package name="kinect_exp_logger"/><package name="extrinsic_calibration"/><package name="modular_cloud_matcher"/></stack><stack name="diagnostics" path="/stacks/diagnostics/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Robot diagnostics and instrumentation tools.">Packages related to gathering, viewing, and analyzing diagnostics data from robots.</description>
  <author>Maintained by Kevin Watts</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/diagnostics</url>
  <depend stack="common_msgs"/> <!-- diagnostic_msgs -->
  <depend stack="pluginlib"/> <!-- pluginlib -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- roscpp, xmlrpcpp, std_msgs, rostest, rospy, rosbag -->

<package name="diagnostic_updater"/><package name="test_diagnostic_aggregator"/><package name="self_test"/><package name="diagnostic_analysis"/><package name="diagnostic_aggregator"/></stack><stack name="octomap_visualization" path="/trunk/octomap_visualization" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="provides visualization tools for the octomap_mapping stack">octomap_visualization
    provides visualization tools for the octomap_mapping stack, mainly the octovis viewer.</description>
  <author>Maintained by Armin Hornung</author>
  <license>GPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/octomap_visualization</url>
  <depend stack="octomap_mapping"/> <!-- octomap -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- roscpp -->

<package name="octovis"/></stack><stack name="rtt_ros_integration" path="" repo="rtt_ros_integration" repo_host="http://git.mech.kuleuven.be/robotics/rtt_ros_integration.git">
  <description brief="rtt_ros_integration">

      This stack contains all software necessary to build systems using both Orocos and ROS infrastructures.
      It depends on the <a href="http://www.orocos.org/toolchain">Orocos Toolchain</a>.
      The rtt_rosnode package allows easy communication between Orocos components and ROS nodes.
  
  </description>
  <author>Maintained by Ruben Smits - Steven Bellens</author>
  <license>GPL,BSD,LGPL,GPL + runtime exception</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rtt_ros_integration</url>
  <depend stack="common_msgs"/> <!-- geometry_msgs -->
  <depend stack="orocos_toolchain"/> <!-- rtt, ocl -->
  <depend stack="ros"/> <!-- rosbuild -->
  <depend stack="ros_comm"/> <!-- std_msgs, roscpp -->

<package name="rtt_rosnode"/><package name="rtt_ros_integration_example"/></stack><stack name="penn_lightweight_teleop" path="/penn_lightweight_teleop/trunk" repo="penn_lightweight_teleop" repo_host="https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs">
  <description brief="penn_lightweight_teleop">penn_lightweight_teleop</description>
  <author>Maintained by Will McMahan</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/penn_lightweight_teleop</url>
  <depend stack="pr2_object_manipulation"/> <!-- pr2_gripper_sensor_msgs -->
  <depend stack="ros"/>

<package name="sensoray626"/><package name="pr2_gripper_and_wrist_roll_sensor_controller"/><package name="wm_arm_teleop"/><package name="event_based_haptics"/><package name="wm_imu_arm_tracker"/><package name="penn_lightweight_teleop_msgs"/><package name="pr2_acceleration_record"/><package name="wm_acceleration_feedback"/></stack><stack name="vrmagic_camera" path="/trunk/vrmagic_camera" repo="tu-darmstadt-ros-pkg" repo_host="http://tu-darmstadt-ros-pkg.googlecode.com/svn">
  <description brief="vrmagic_camera">vrmagic_camera is a stack containing a driver for vrmagic multisensor cameras. It is far from feature complete and works only on 32 bit linux systems with usbfs support, as the manufacturer only supports these.</description>
  <author>Maintained by Stefan Kohlbrecher</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://www.ros.org/wiki/vrmagic_camera</url>
  <depend stack="ros"/>

<package name="vrmagic_multi_driver"/><package name="vrmagic_devkit_wrapper"/></stack><stack name="win_ros" path="" repo="win_ros" repo_host="https://github.com/stonier/win_ros">
  <description brief="Resources enabling ros on windows">
    Setup and utilities for ros on windows.
  </description>
  <author>Maintained by Daniel Stonier</author>
  <license>BSD</license>  
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/win_ros</url>
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rospy, roscpp -->
  <depend stack="rosidl"/>
  <depend stack="cmake"/>
<package name="win_sdk"/><package name="win_py2exe"/><package name="win_roscd"/><package name="mingw_cross"/><package name="mingw_build"/><package name="win_env"/><package name="win_rosinstall"/><package name="win_hudson"/><package name="gen_comms"/><package name="win_patches"/></stack><stack name="cob_command_tools" path="" repo="cob_command_tools" repo_host="git://github.com/ipa320/cob_command_tools">
  <description brief="Care-O-bot stack with high level command tools">

     The cob_command_tools stack provides tools, for operating Care-O-bot.

  </description>
  <author>Maintained by Florian Weisshardt</author>
  <license>LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_command_tools</url>
  <depend stack="arm_navigation"/> <!-- arm_navigation_msgs -->
  <depend stack="cob_common"/> <!-- cob_srvs, brics_actuator -->
  <depend stack="cob_driver"/> <!-- cob_relayboard, cob_joy, cob_light, cob_sound -->
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- sensor_msgs, actionlib_msgs, trajectory_msgs, geometry_msgs -->
  <depend stack="diagnostics_monitors"/> <!-- robot_monitor -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="navigation"/> <!-- move_base_msgs -->
  <depend stack="pr2_apps"/> <!-- pr2_teleop -->
  <depend stack="pr2_common"/> <!-- pr2_msgs -->
  <depend stack="pr2_controllers"/> <!-- pr2_controllers_msgs -->
  <depend stack="pr2_power_drivers"/> <!-- pr2_power_board -->
  <depend stack="ros"/> <!-- roslib -->
  <depend stack="ros_comm"/> <!-- std_msgs, std_srvs, rostest, rospy, roscpp -->
  <depend stack="rx"/> <!-- rxtools -->

<package name="cob_script_server"/><package name="cob_dashboard"/><package name="cob_teleop"/><package name="cob_command_gui"/></stack><stack name="robot_calibration" path="/stacks/robot_calibration/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Tools for calibrating an entire robot. (Unstable)">
     Provides tools estimating robot kinematics and sensor locations. Also
     provides helper libraries for capturing calibration datasets on a robot.
     This stack is still very unstable. Expect many API changes.
  </description>
  <author>Maintained by Vijay Pradeep</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/robot_calibration</url>
  <depend stack="common_msgs"/> <!-- sensor_msgs, geometry_msgs, stereo_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- roscpp -->

<package name="camera_offsetter"/></stack><stack name="csiro-asl-ros-pkg" path="" repo="csiro-asl-ros-pkg" repo_host="lp:csiro-asl-ros-pkg">
  <description brief="CSIRO ASL ROS Utilities">
  ROS packages developed and maintained by the CSIRO Autonomous Systems Lab.
  These are mainly drivers and their supporting libraries.
  </description>
  <author>Maintained by Brett Grandbois/Brett.Grandbois@csiro.au and Fred Pauling/Fred.Pauling@csiro.au</author>
  <license>BSD,LGPL</license>  
  <review notes="" status="experimental"/>
  <url>http://www.ros.org/wiki/csiro_asl_utils</url>
  <depend stack="ros"/>  
  <depend stack="ros_comm"/>
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure, driver_base -->
  <depend stack="perception_pcl"/> <!-- flann -->
  <depend stack="geometry"/> <!-- tf -->
  <version>0.1.0</version>

<package name="mdl_slm"/><package name="novatelINS"/><package name="small"/><package name="sick_ldmrs"/><package name="odephysics_ORplugin"/><package name="mrol_mapping"/></stack><stack name="web_interface" path="/stacks/web_interface/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="web_interface">This stack contains the packages and utilities required to run the web user interface.</description>
  <author>Maintained by Josh Tyler</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/web_interface</url>
  <depend stack="common_msgs"/> <!-- diagnostic_msgs -->
  <depend stack="ros"/> <!-- roslib -->
  <depend stack="ros_comm"/> <!-- roslaunch, std_msgs, rosservice, rospy, std_srvs -->
  <depend stack="vision_opencv"/> <!-- opencv2, cv_bridge -->

<package name="ckill"/><package name="rosjson"/><package name="launchman"/><package name="ros_apache2"/><package name="webui"/><package name="pyclearsilver"/><package name="rosweb"/><package name="web_msgs"/><package name="image_stream"/></stack><stack name="joystick_drivers" path="/stacks/joystick_drivers/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Drivers related to joysticks">
This stack contains a ROS node to interface with joysticks, and drivers
for joysticks that are not well supported by a common Linux distribution.
  </description>
  <author>Maintained by Melonee Wise</author>
  <license>GPL,BSD,ZLib,ZLib (spacenav)</license>  
  <review notes="reviewed 01-25-2011" status="Doc reviewed"/>
  <url>http://ros.org/wiki/joystick_drivers</url>
  <depend stack="common_msgs"/> <!-- geometry_msgs, sensor_msgs, diagnostic_msgs -->
  <depend stack="common_rosdeps"/> 
  <depend stack="diagnostics"/> <!-- diagnostic_updater -->
  <depend stack="ros"/> <!-- roslib -->
  <depend stack="ros_comm"/> <!-- std_msgs, rospy, rosbag, roscpp, std_srvs -->

<package name="spacenav"/><package name="wiimote"/><package name="joy"/><package name="ps3joy"/><package name="spacenav_node"/><package name="cwiid"/></stack><stack name="brown_drivers" path="/trunk/distribution/brown_drivers" repo="brown-ros-pkg" repo_host="http://brown-ros-pkg.googlecode.com/svn">
  <description brief="brown_drivers">ROS drivers for various lowcost platforms </description>
  <author>Maintained by Christopher Crick and Trevor Jay</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/brown_drivers</url>
  <depend stack="common_msgs"/> <!-- nav_msgs, geometry_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rospy, roscpp -->

<package name="irobot_create_2_1"/></stack><stack name="bosch_3rdparty" path="/trunk/stacks/bosch_3rdparty" repo="bosch-ros-pkg" repo_host="https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg">
  <description brief="bosch_3rdparty">bosch_3rdparty</description>
  <author>Maintained by Dejan Pangercic</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/bosch_3rdparty</url>
  <depend stack="ros"/>

<package name="opennl"/><package name="trimesh"/><package name="bmtk"/><package name="openmesh"/></stack><stack name="openni_usc" path="/trunk/openni_usc" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="openni_unstable">openni_unstable</description>
  <author>Maintained by David Feil-Seifer</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/openni_usc</url>
  <depend stack="ros"/>

<package name="openni_unstable"/></stack><stack name="image_pipeline" path="/stacks/image_pipeline/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Pipeline for processing monocular and stereo images">

    image_pipeline fills the gap between getting raw images from a camera driver and higher-level vision processing.

  </description>
  <author>Maintained by Patrick Mihelich/mihelich@willowgarage.com</author>
  <license>BSD</license>  
  <review notes="Jan 18, 2010" status="Doc reviewed"/>
  <url>http://ros.org/wiki/image_pipeline</url>
  <depend stack="common_msgs"/> <!-- sensor_msgs, geometry_msgs, stereo_msgs -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="image_common"/> <!-- image_transport, camera_calibration_parsers -->
  <depend stack="nodelet_core"/> <!-- nodelet -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_msgs, rospy, std_srvs, roscpp, message_filters -->
  <depend stack="vision_opencv"/> <!-- opencv2, image_geometry, cv_bridge -->

<package name="image_rotate"/><package name="image_view"/><package name="image_proc"/><package name="camera_calibration"/><package name="stereo_image_proc"/></stack><stack name="bfl" path="" repo="bfl" repo_host="https://kforge.ros.org/bfl/bfl">
  <description brief="bfl">bfl</description>
  <author>Maintained by Wim Meeussen</author>
  <license>,LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/bfl</url>

  <depend stack="ros"/>
  <depend stack="common_rosdeps"/>

<package name="bfl"/></stack><stack name="visualization_engine" path="" repo="visualization_engine" repo_host="https://kforge.ros.org/visengine/hg">
  <description brief="ROS Visualization Engine">

    Contains the ROS Visualization Engine (RVE), which is a set of libraries useful for developing 3D visualization tools.

  </description>
  <author>Josh Faust</author>
  <license>BSD,Creative Commons</license>  
  <review notes="2010/01/08" status="Doc reviewed"/>
  <url>http://ros.org/wiki/visualization</url>
  <depend stack="common"/> <!-- yaml_cpp -->
  <depend stack="common_msgs"/> <!-- nav_msgs, geometry_msgs, sensor_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="laser_pipeline"/> <!-- laser_geometry -->
  <depend stack="robot_model"/> <!-- urdf, resource_retriever -->
  <depend stack="ros"/> <!-- rxtools, rosconsole, roscpp, message_filters, wxswig, roslib, std_msgs, wxPython_swig_interface, rospy, rxbag -->
  <depend stack="visualization_common"/> <!-- visualization_msgs, ogre, ogre_tools -->
  <depend stack="image_common"/> <!-- image_transport -->
<package name="rve_pluginloader"/><package name="test_rve"/><package name="rve_qt"/><package name="rve_interface_gen"/><package name="rve_properties"/><package name="rve_msgs"/><package name="rve_rpc"/><package name="rve_interfaces"/><package name="rve_geometry"/><package name="rve_common"/><package name="rve_dynlib"/><package name="rve_transformer"/><package name="rve_mesh_loader"/><package name="rve_render_client"/><package name="rve_render_server"/><package name="rve_common_transformers"/></stack><stack name="visualprogramming" path="/trunk/visualprogramming" repo="vmi-ros-pkg" repo_host="https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg">
  <description brief="visualprogramming">
  	The visual programming editor for ROS is an Eclipse plugin.
  	It allows the user to configure and connect nodes and can
  	be used with any ROS packages. It is able to automatically analyze
 	message description files and extracts its variables. The source
 	code of C++ and Python nodes is also analyzed to identify subscribers
 	and publishers, but is not able to identify every variation. As a
 	consequence the toolkit generates a vp_package.xml file. This contains
 	all information about the nodes, their topics, and the messages that are
 	inside of the package. This file can be edited and users may add the additional
 	required information. 
 	To use the source code, check it out and use an Eclipse version 3.6.1 to open it 
 	(ensure that the .project file is present). The Plugin Development Environment should 
 	be installed: http://www.eclipse.org/pde/ as well as GEF: http://www.eclipse.org/gef/. 
 	In case this is not enough, check if all of following bundles are present 
 	(for details, see the Manifest.MF file):
	org.eclipse.ui,
 	org.eclipse.core.runtime,
 	org.eclipse.jface.text,
 	org.eclipse.core.resources,
 	org.eclipse.ui.editors,
 	org.eclipse.ui.ide,
 	org.eclipse.gef;bundle-version=&quot;3.6.1&quot;,
 	org.eclipse.core.filesystem;bundle-version=&quot;1.3.1&quot;  
  </description>
  <author>Christian Schraml, Maintained by Luis Roalter</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/visualprogramming</url>
  <depend stack="ros"/>
</stack><stack name="ocr" path="/trunk/stacks/ocr" repo="bosch-ros-pkg" repo_host="https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg">
  <description brief="ocr">
    A stack for optical character recognition (OCR) packages.
  </description>
  <author>Benjamin Pitzer</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ocr</url>
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="ros"/> <!-- roscpp -->
  <depend stack="vision_opencv"/> <!-- opencv2, cv_bridge -->

<package name="ocr_server"/><package name="leptonica"/><package name="tesseract"/></stack><stack name="MikroKopter" path="" repo="cyphy" repo_host="lp:cyphy">
  <description brief="MikroKopter">MikroKopter stack for ROS</description>
  <author>Maintained by Inkyu Sa</author>
  <license>BSD,GPL,LGPL,LGPLv3</license>   
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/MikroKopter</url>
  <depend stack="common"/>
  <depend stack="common_msgs"/>
  <depend stack="geometry"/>
  <depend stack="ros"/>
<package name="cyphy_mk_falcon"/><package name="cyphy_serial_driver"/></stack><stack name="slam_coreslam" path="/trunk/slam_coreslam" repo="albany-ros-pkg" repo_host="http://albany-ros-pkg.googlecode.com/svn">
  <description brief="slam_coreslam">Map Building with CoreSLAM</description>
  <author>Maintained by Michael Ferguson</author>
  <license>MIT</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/slam_coreslam</url>
  <depend stack="common_msgs"/> <!-- nav_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="ros"/> <!-- rosconsole, std_msgs, roscpp, message_filters -->
<package name="coreslam"/></stack><stack name="test_wg_hardware_test_systems" path="/branches/trunk_cturtle/stacks/test_wg_hardware_test_systems" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="Regression tests for WG hardware test systems">
    This stack contains regression tests for WG hardware test systems. These utilities can use simulated data (from gazebo) to test data analysis or logging functionality.   
  </description>
  <author>Kevin Watts</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/test_wg_hardware_test_systems</url>
  <depend stack="ros"/>
  <depend stack="pr2_self_test"/>
  <depend stack="wg_hardware_test"/>
  <depend stack="pr2_simulator"/> <!-- pr2_gazebo -->
  <depend stack="diagnostics"/>
  <depend stack="simulator_gazebo"/> <!-- gazebo -->
  <depend stack="robot_model"/> <!-- robot_state_publisher, urdf -->
  <depend stack="pr2_mechanism"/> <!-- pr2_mechanism_msgs, pr2_controller_manager -->
  <depend stack="pr2_common"/> <!-- pr2_description, pr2_msgs -->
<package name="test_pr2_self_test_gazebo"/><package name="roslaunch_parse_tester"/><package name="test_pr2_self_test"/><package name="wgtest_data_analysis"/><package name="test_pr2_component_descriptions"/><package name="wgtest_data_loader"/></stack><stack name="pr2_dremel" path="/trunk/stacks/pr2_dremel" repo="bosch-ros-pkg" repo_host="https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg">
  <description brief="pr2_dremel">pr2_dremel</description>
  <author>Benjamin Pitzer, Christian Bersch, Sarah Osentoski, Philip Roan, Soeren Kammel (maintained by Benjamin Pitzer)</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_dremel</url>
  <depend stack="arm_navigation"/> <!-- move_arm -->
  <depend stack="common"/> <!-- actionlib, pluginlib -->
  <depend stack="common_msgs"/> <!-- actionlib_msgs, geometry_msgs, visualization_msgs -->
  <depend stack="geometry"/> <!-- tf, eigen -->
  <depend stack="kinematics"/> <!-- kinematics_msgs -->
  <depend stack="manipulation_utils"/> <!-- joint_state_listener, simple_robot_control_py -->
  <depend stack="motion_planning_common"/> <!-- motion_planning_msgs -->
  <depend stack="perception_pcl"/> <!-- pcl -->
  <depend stack="pr2_arm_navigation"/> <!-- pr2_arm_navigation_kinematics -->
  <depend stack="pr2_controllers"/> <!-- robot_mechanism_controllers, control_toolbox, pr2_controllers_msgs -->
  <depend stack="pr2_kinematics"/> <!-- pr2_arm_kinematics_constraint_aware -->
  <depend stack="pr2_mechanism"/> <!-- pr2_controller_manager, realtime_tools, pr2_controller_interface -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rospy, roscpp, message_filters -->
  <depend stack="trajectory_filters"/> <!-- trajectory_filter_server -->
  <depend stack="vision_opencv"/> <!-- opencv2, image_geometry -->

<package name="pr2_dremel_gui"/><package name="pr2_dremel_server"/><package name="remote_power_manager"/><package name="pr2_dremel_arm_controller"/><package name="vlr"/></stack><stack name="starmac_sensors" path="" repo="starmac-ros-pkg" repo_host="https://bitbucket.org/bouffard/starmac-ros-pkg">
  <description brief="starmac_sensors">
  </description>
  <author>Maintained by Patrick Bouffard</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/starmac_sensors</url>
  
  <!-- Note - no dependencies are specified here because we don't want to require
  the user to install all dependencies of all sensors just to use one sensor. This shouldn't
  matter until unless/until we formally 'release' starmac-ros-pkg -->

<package name="starmac_kinect"/></stack><stack name="photography" path="/branches/trunk_diamondback/stacks/photography" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="photography">
    Robot photography
  </description>

  <author>Maintained by Bill Smart</author>

  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/photography</url>

  <depend stack="ros"/>

<package name="photo_processing"/><package name="photographer"/></stack><stack name="visualization_common" path="/stacks/visualization_common/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Visualization Common">
    Provides a low-level shared stack for sharing code between various higher level visualization tools.
  </description>
  <author>Josh Faust jfaust@willowgarage.com</author>
  <license>BSD,LGPL,MIT</license>  
  <review notes="" status="Doc reviewed"/>
  <url>http://ros.org/wiki/visualization_common</url>
  <depend stack="common_rosdeps"/> <!-- common_rosdeps -->
  <depend stack="ros"/> <!-- roslib -->
  <depend stack="ros_comm"/> <!-- rosconsole -->
  <depend stack="rx"/> <!-- wxswig -->

<package name="ogre"/><package name="ogre_tools"/></stack><stack name="ua_robots" path="/trunk/arrg/ua_robots" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
  <description brief="Contains URDF descriptions of UA robots.">
  This stack contains URDF description files, 3D models, meshes, textures
  and configuration parameters needed for Wubble Robot simulation.
  </description>
  <author>Maintained by UA Robotics Research Group</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ua_robots</url>
  <depend stack="ros"/>

<package name="videre_stoc_description"/><package name="wubble_arm_description"/><package name="wubble_description"/><package name="overhead_cam_description"/><package name="swissranger_camera_description"/><package name="chr_6dm_imu_description"/><package name="hokuyo_urg_description"/></stack><stack name="3d_navigation" path="/branches/trunk_diamondback/sandbox/3d_navigation" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="3d_navigation - Navigation in complex environments with 3D collision checks.">
  This stack provides navigation capabilities in complex environments with 3D collision checks. This
  allows for navigation in any robot configuration (e.g. with untucked arms) and for various mobile manipulation tasks. 
  </description>
  <author>Maintained by Armin Hornung</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/3d_navigation</url>
  <depend stack="common"/> <!-- pluginlib -->
  <depend stack="common_msgs"/> <!-- nav_msgs, geometry_msgs, visualization_msgs -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="motion_planners"/> <!-- sbpl -->
  <depend stack="motion_planning_common"/> <!-- planning_environment, planning_environment_msgs, planning_models, mapping_msgs, robot_self_filter -->
  <depend stack="navigation"/> <!-- move_base, base_local_planner, nav_core, fake_localization, costmap_2d -->
  <depend stack="navigation_experimental"/> <!-- sbpl_lattice_planner, pose_follower -->
  <depend stack="octomap_mapping"/> <!-- octomap, octomap_ros, octomap_server -->
  <depend stack="perception_pcl"/> <!-- pcl -->
  <depend stack="pr2_apps"/> <!-- pr2_tuckarm, pr2_teleop_general -->
  <depend stack="pr2_arm_navigation"/> <!-- pr2_arm_navigation_config -->
  <depend stack="pr2_common_actions"/> <!-- pr2_common_action_msgs -->
  <depend stack="pr2_simulator"/> <!-- pr2_gazebo -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rospy, roscpp -->
  <depend stack="simulator_gazebo"/> <!-- gazebo -->

<package name="pose_follower_3d"/><package name="3d_nav_executive"/><package name="sbpl_lattice_planner_3d"/><package name="3d_nav_gazebo"/><package name="octomap_collision_check"/></stack><stack name="arm_navigation" path="" repo="arm_navigation" repo_host="https://kforge.ros.org/armnavigation/armnavigation">
  <description brief="Arm Navigation">
   This stack contains packages that permit collision-free arm navigation
  </description>
  <author>E. Gil Jones gjones@willowgarage.com</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/arm_navigation</url>
  <depend stack="assimp"/> <!-- assimp -->
  <depend stack="bullet"/> <!-- bullet -->
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- geometry_msgs, actionlib_msgs, trajectory_msgs, sensor_msgs, visualization_msgs -->
  <depend stack="control"/> <!-- control_msgs -->
  <depend stack="filters"/> <!-- filters -->
  <depend stack="geometry"/> <!-- tf, tf_conversions, angles -->
  <depend stack="orocos_kinematics_dynamics"/> <!-- kdl -->
  <depend stack="perception_pcl"/> <!-- pcl, pcl_ros -->
  <depend stack="physics_ode"/> <!-- opende -->
  <depend stack="pluginlib"/> <!-- pluginlib -->
  <depend stack="robot_model"/> <!-- urdf, resource_retriever, kdl_parser -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rosconsole, std_srvs, roscpp, message_filters, std_msgs, rosbag -->
  <depend stack="visualization"/> <!-- interactive_markers, rviz -->

<package name="geometric_shapes"/><package name="sbpl"/><package name="collision_space"/><package name="kinematics_base"/><package name="motion_planning_rviz_plugin"/><package name="constraint_aware_spline_smoother"/><package name="arm_navigation_msgs"/><package name="ompl"/><package name="ompl_ros_interface"/><package name="planning_environment"/><package name="mapping_rviz_plugin"/><package name="spline_smoother"/><package name="planning_models"/><package name="arm_kinematics_constraint_aware"/><package name="trajectory_filter_server"/><package name="kinematics_msgs"/><package name="collision_map"/><package name="move_arm"/><package name="robot_self_filter"/><package name="joint_normalization_filters"/></stack><stack name="kinect4skype" path="/trunk/kinect4skype" repo="vmi-ros-pkg" repo_host="https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg">
  <description brief="kinect4skype">kinect4skype</description>
  <author>Maintained by Roalter Luis</author>
  <license/>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/kinect4skype</url>
  <depend stack="ros"/>

<package name="kinect4skype"/></stack><stack name="policy_learning" path="/branches/trunk_cturtle/stacks/policy_learning" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="policy_learning">policy_learning</description>
  <author>Maintained by Mrinal Kalakrishnan</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/policy_learning</url>
  <depend stack="arm_navigation"/> <!-- move_arm_msgs -->
  <depend stack="collision_environment"/> <!-- distance_field -->
  <depend stack="common"/> <!-- actionlib, filters, pluginlib -->
  <depend stack="common_msgs"/> <!-- geometry_msgs, sensor_msgs, diagnostic_msgs -->
  <depend stack="geometry"/> <!-- kdl, tf, tf_conversions, eigen, angles -->
  <depend stack="kinematics"/> <!-- kinematics_msgs -->
  <depend stack="laser_pipeline"/> <!-- laser_geometry -->
  <depend stack="motion_planning_common"/> <!-- planning_models, mapping_msgs, motion_planning_msgs -->
  <depend stack="motion_planning_environment"/> <!-- planning_environment, planning_environment_msgs -->
  <depend stack="pr2_common"/> <!-- pr2_msgs -->
  <depend stack="pr2_controllers"/> <!-- trajectory_msgs, control_toolbox, pr2_controllers_msgs -->
  <depend stack="pr2_mechanism"/> <!-- pr2_mechanism_msgs, pr2_controller_interface, pr2_mechanism_model -->
  <depend stack="pr2_object_manipulation"/> <!-- slipgrip_controller -->
  <depend stack="robot_model"/> <!-- assimp, kdl_parser -->
  <depend stack="ros"/> <!-- rosconsole, rosparam, roscpp, message_filters, roslib, std_msgs, rospy, rosbag -->
  <depend stack="ros_realtime"/> <!-- rosrt -->
  <depend stack="trajectory_filters"/> <!-- spline_smoother -->
  <depend stack="visualization_common"/> <!-- visualization_msgs -->

<package name="task_recorder_test"/><package name="policy_improvement_loop"/><package name="policy_improvement_test"/><package name="dmp_motion_gui"/><package name="dmp_motion_controller"/><package name="policy_library"/><package name="dmp_motion_learner"/><package name="stomp_motion_planner"/><package name="policy_improvement"/><package name="task_manager"/><package name="policy_improvement_utilities"/><package name="pr2_tasks"/><package name="lwr"/><package name="dmp_motion_generation"/><package name="bspline"/><package name="dmp_motion_generation_test"/><package name="dmp_motion_controller_test"/><package name="task_recorder"/><package name="pr2_tasks_transforms"/></stack><stack name="xacro" path="" repo="xacro" repo_host="https://kforge.ros.org/common/xacro">
  <description brief="xacro">Xacro is an XML macro language. With xacro, you can construct shorter and more readable XML files by using macros that expand to larger XML expressions.</description>
  <author>Maintained by Stu Glaser</author>
  <license>BSD</license>  
  <review notes="" status="doc reviewed"/>
  <url>http://ros.org/wiki/xacro</url>
  <depend stack="ros"/> <!-- rosbuild -->
  <depend stack="ros_comm"/> <!-- rostest -->

<package name="xacro"/></stack><stack name="cart_pushing" path="/stacks/cart_pushing/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="cart_pushing">cart_pushing</description>
  <author>Maintained by Bhaskara Marthi</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cart_pushing</url>
  <depend stack="common"/> <!-- actionlib, filters, pluginlib -->
  <depend stack="common_msgs"/> <!-- nav_msgs, sensor_msgs, actionlib_msgs, geometry_msgs, visualization_msgs -->
  <depend stack="geometry"/> <!-- tf, kdl, angles, tf_conversions, bullet -->
  <depend stack="laser_pipeline"/> <!-- laser_filters, laser_geometry -->
  <depend stack="arm_navigation"/> <!-- sbpl -->
  <depend stack="navigation"/> <!-- move_base, map_server, costmap_2d, nav_core, fake_localization, move_base_msgs, amcl, base_local_planner -->
  <depend stack="pr2_common"/> <!-- pr2_machine -->
  <depend stack="pr2_controllers"/> <!-- pr2_gripper_action, pr2_controllers_msgs -->
  <depend stack="pr2_mechanism"/> <!-- pr2_mechanism_msgs, pr2_controller_manager -->
  <depend stack="pr2_navigation"/> <!-- pr2_navigation_teleop, pr2_navigation_global, pr2_navigation_perception -->
  <depend stack="pr2_simulator"/> <!-- pr2_gazebo -->
  <depend stack="ros"/> <!-- roslib -->
  <depend stack="ros_comm"/> <!-- rosconsole, roscpp, std_msgs, topic_tools, rospy, rostopic -->
  <depend stack="simulator_stage"/> <!-- stage -->

<package name="cart_local_planner"/><package name="cart_pushing_executive"/><package name="articulate_cart"/><package name="cart_pushing_stage"/><package name="cart_state_estimator"/><package name="twist_recovery"/><package name="isolated_point_filter"/><package name="sbpl_cart_planner"/><package name="pr2_gazebo_cartworld"/><package name="costmap_trajectory_checker"/><package name="cart_pushing_msgs"/><package name="pr2_pose_saver"/><package name="manipulation_transforms"/></stack><stack name="cob_calibration" path="" repo="cob_calibration" repo_host="git://github.com/ipa320/cob_calibration">
  <description brief="cob_calibration">cob_calibration</description>
  <author>Maintained by Sebastian Haug</author>
  <license/>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_calibration</url>
  <depend stack="ros"/>

</stack><stack name="lse_sensor_network" path="/trunk/unstable/lse_sensor_network" repo="isr-uc-ros-pkg" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="lse_sensor_network">
  
  	Stack for the sensor networks developed at LSE. Currently holds the sensornet package, however support for a wireless sensor network should be added in the future.
  
  </description>
  <author>Gonçalo Cabrita and Pedro Sousa</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/lse_sensor_network</url>
  <depend stack="ros"/>

<package name="sensornet"/></stack><stack name="pr2_arm_navigation_tests" path="/stacks/pr2_arm_navigation_tests/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="arm_navigation_tests_pr2">

     arm_navigation_tests_pr2

  </description>
  <author>Maintained by Sachin Chitta</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_arm_navigation_tests</url>
  <depend stack="arm_navigation"/> <!-- move_arm -->
  <depend stack="common"/> <!-- pluginlib -->
  <depend stack="common_msgs"/> <!-- visualization_msgs -->
  <depend stack="diagnostics"/> <!-- diagnostic_aggregator -->
  <depend stack="image_pipeline"/> <!-- image_proc -->
  <depend stack="kinematics"/> <!-- kinematics_base -->
  <depend stack="motion_planning_common"/> <!-- collision_space, planning_environment, planning_models, collision_map -->
  <depend stack="pr2_arm_navigation"/> <!-- pr2_arm_navigation_kinematics, pr2_arm_navigation_perception, pr2_arm_navigation_planning, pr2_arm_navigation_actions, pr2_arm_navigation_filtering -->
  <depend stack="pr2_common"/> <!-- pr2_description -->
  <depend stack="pr2_controllers"/> <!-- pr2_head_action, single_joint_position_action, joint_trajectory_action, pr2_gripper_action -->
  <depend stack="pr2_kinematics"/> <!-- pr2_arm_kinematics_constraint_aware, pr2_arm_kinematics -->
  <depend stack="pr2_mechanism"/> <!-- pr2_controller_manager -->
  <depend stack="pr2_simulator"/> <!-- pr2_gazebo -->
  <depend stack="robot_model"/> <!-- robot_state_publisher -->
  <depend stack="ros"/> <!-- roslib -->
  <depend stack="ros_comm"/> <!-- move_arm, pr2_controller_manager, pr2_arm_navigation_perception, roscpp, pr2_gripper_action, pr2_arm_kinematics, rostopic, visualization_msgs, gazebo -->
  <depend stack="simulator_gazebo"/> <!-- gazebo_tools, gazebo -->

<package name="arm_navigation_tests"/><package name="pr2_arm_ik_tests"/><package name="test_collision_space"/></stack><stack name="common" path="" repo="common" repo_host="https://kforge.ros.org/common/common">
  <description brief="common code for personal robots">
    This stack is deprecated.  All contents stacks depending on this stack 
    should be changed to use the new homes of this code.
  </description>
  <author>Maintained by Tully Foote tfoote@willowgarage.com</author>
  <license>BSD,LGPL,MIT,ZLib,Boost Software License</license>  
  <review notes="2009-10-07" status="doc reviewed"/>
  <url>http://ros.org/wiki/common</url>
  <depend stack="actionlib"/> <!-- backwards compatability -->
  <depend stack="pluginlib"/> <!-- backwards compatability -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rostest, rospy, roscpp -->

</stack><stack name="OIT" path="/trunk/OIT" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="OIT: Overhead Interaction Toolkit">

    Overhead Interaction Toolkit: This is a collection of packages designed to operate a robot with limited or no on-board sensing. Instead, an overhead camera is used to track the position of the robot, obstacles, and other people in a scene.

  </description>
  <author>Maintained by David Feil-Seifer/dfseifer@usc.edu</author>
  <license>BSD</license>  
  <review status="Unreviewed"/>
  <url/>
  <depend stack="common_msgs"/> <!-- sensor_msgs, geometry_msgs -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure -->
  <depend stack="image_common"/> <!-- image_transport, camera_calibration_parsers -->
  <depend stack="ros"/> <!-- rospy, std_srvs, roscpp, message_filters, rosbagmigration -->
  <depend stack="vision_opencv"/> <!-- opencv2, image_geometry, cv_bridge -->

<package name="ir_finder"/><package name="overhead_planner"/><package name="color_picker"/><package name="color_blob_finder"/><package name="floor_align"/><package name="checkerboard"/><package name="obstacle_avoidance"/><package name="oit_msgs"/><package name="image_letterboxer"/><package name="oit_launch"/><package name="point_map"/><package name="pr2_finder"/></stack><stack name="icreate" path="" repo="cmr-ros-pkg" repo_host="lp:cmr">
  <description brief="icreate">
  Collection of tools for the iCreate.
  </description>
  <author>Maintained by Steven Martin steven.martin@qut.edu.au</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/icreate</url>
  <depend stack="ros"/>
  <depend stack="navigation"/>
<package name="icreate_waypoints"/><package name="icreate_navigation"/><package name="icreate_sensorListen"/><package name="icreate_OR_sim"/></stack><stack name="ccny_vision" path="" repo="ccny_vision" repo_host="http://robotics.ccny.cuny.edu/git/ccny-ros-pkg/ccny_vision.git">
  <description brief="CCNY Computer Vision">CCNY Computer Vision Stack</description>
  <author>Maintained by Gautier Dumonteil, Ivan Dryanovski, William Morris et al.</author>
  <license>GPL</license>  
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/ccny_vision</url>
  <depend stack="common_msgs"/>
  <depend stack="geometry"/>
  <depend stack="image_common"/>
  <depend stack="robot_model"/>
  <depend stack="ros"/>
  <depend stack="vision_opencv"/>
  <depend stack="visualization_common"/>
<package name="ar_pose"/><package name="artoolkit"/></stack><stack name="pddl" path="/trunk/pddl" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="PDDL planning language">
    PDDL planning language for task planning.
  </description>
  <author> Ryohei Ueda(ueda@jsk.t.u-tokyo.ac.jp)</author>
  <license>Apache License 2.0</license>
  <depend stack="ros"/> <!-- rospy -->
<package name="pddl_planner"/><package name="pddl_msgs"/><package name="pddl_planner_viewer"/></stack><stack name="clearpath_chameleon" path="/trunk/clearpath_chameleon" repo="clearpath-ros-pkg" repo_host="http://clearpath-ros-pkg.googlecode.com/svn">
  <description brief="clearpath mobile platforms chameleon">

     This stack includes packages for use with the Clearpath Robotics Chameleon R200.

  </description>
  <author>Mike Purvis</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://clearpathrobotics.com</url>

  <depend stack="ros"/>
<package name="chameleon_msgs"/><package name="chameleon_firmware"/><package name="chameleon_teleop"/></stack><stack name="hector_worldmodel" path="/trunk/hector_worldmodel" repo="tu-darmstadt-ros-pkg" repo_host="http://tu-darmstadt-ros-pkg.googlecode.com/svn">
  <description brief="hector_worldmodel">hector_worldmodel</description>
  <author>Team Hector Darmstadt</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://code.google.com/p/tu-darmstadt-ros-pkg/wiki/hector_worldmodel</url>
  <depend stack="ros"/>

<package name="object_tracker"/><package name="worldmodel_msgs"/></stack><stack name="reem_robot" path="" repo="reem_robot" repo_host="https://github.com/pal-robotics/reem_robot">
  <description brief="reem_robot">Scripts and configuration files to launch when bringing up REEM. </description>
  <author>Maintained by Adolfo Rodriguez Tsouroukdissian</author>
  <license>Modified BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/reem_robot</url>
  <depend stack="reem_common"/> <!-- reem_description, reem_machine -->
  <depend stack="robot_model"/> <!-- robot_state_publisher -->
  <depend stack="ros"/>

<package name="reem_bringup"/></stack><stack name="cob_common" path="" repo="cob_common" repo_host="git://github.com/ipa320/cob_common">
  <description brief="Care-O-bot stack with common packages">

     The cob_common stack hosts common packages that are used within the Care-O-bot repository. E.g. utility packages or common message and service definitions etc. Also the urdf desciption of the robot is located in this stack.

  </description>
  <author>Maintained by Florian Weisshardt</author>
  <license>BSD,LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_common</url>
  <depend stack="common_msgs"/> <!-- trajectory_msgs, geometry_msgs -->
  <depend stack="robot_model"/> <!-- convex_decomposition, ivcon, urdf -->
  <depend stack="ros"/> <!-- roslib -->
  <depend stack="ros_comm"/> <!-- rostest, std_msgs, roscpp -->
  <depend stack="vision_opencv"/> <!-- opencv2 -->

<package name="cob_description"/><package name="icob_description"/><package name="cob_srvs"/><package name="cob_vision_utils"/><package name="brics_actuator"/><package name="cob_goco"/><package name="desire_description"/></stack><stack name="albany_nav" path="/trunk/albany_nav" repo="albany-ros-pkg" repo_host="http://albany-ros-pkg.googlecode.com/svn">
  <description brief="Navigation utilities used in the ILS Social Robotics Lab">
    This stack contains navigation-related code developed in the ILS Social Robotics Lab, at the University of Albany, State University of New York. 
  </description>
  <author>Maintained by Michael Ferguson</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/albany_nav</url>
  <depend stack="ccny_vision"/> <!-- ar_pose -->
  <depend stack="common_msgs"/> <!-- nav_msgs, sensor_msgs, geometry_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="laser_drivers"/> <!-- hokuyo_node -->
  <depend stack="navigation"/> <!-- move_base, map_server -->
  <depend stack="ros"/> <!-- std_msgs, rosconsole, rospy, roscpp, message_filters -->
  <depend stack="vanadium_drivers"/> <!-- arbotix -->
<package name="locator"/><package name="slam_experiments"/></stack><stack name="pr2_teleop_imitation" path="/trunk/pr2_teleop_imitation" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="Stack for PR2 imitiation from teleop">
    Thei pr2_teleop_imitation stack enables the PR2 to learn from user demonstrated trajectories.
  </description>
  <author>Maintained by Sascha Lange, Jan Wuelfing, Tobias Springenberg</author>
  <license>GPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/portrait_bot</url>
  <depend stack="common"/> 
  <depend stack="policy_learning"/> 
  <depend stack="openni_kinect"/> 
  <depend stack="arm_navigation"/>
  <depend stack="pr2_common"/> 
  <depend stack="pr2_controllers"/> 
  <depend stack="pr2_mechanosm"/> 
  <depend stack="ros"/> 
  <depend stack="ros_comm"/> 

<package name="trajectory_sampling_gui"/><package name="kinect_teleop"/></stack><stack name="lse_communication" path="/trunk/unstable/lse_communication" repo="isr-uc-ros-pkg" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="lse_communication">
  
  	Communication stack holding some useful tools for serial port communication, CerealPort, as well as a package for communication between robots, WifiComm.
  
  </description>
  <author>Gonçalo Cabrita and Pedro Sousa</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/lse_communication</url>
  <depend stack="ros"/> <!-- roscpp -->

<package name="wifi_comm"/><package name="cereal_port"/></stack><stack name="vslam" path="/stacks/vslam/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="vslam">Visual SLAM with sparse bundle adjustment</description>
  <author>Kurt Konolige, Patrick Mihelich, Helen Oleynikova</author>
  <license>BSD,Public Domain,LGPL,LGPL/GPL</license>  
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/vslam</url>
  <depend stack="common_msgs"/> <!-- nav_msgs, geometry_msgs, sensor_msgs, stereo_msgs, visualization_msgs -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure -->
  <depend stack="geometry"/> <!-- tf, eigen -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="perception_pcl"/> <!-- pcl -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_msgs, roscpp, message_filters -->
  <depend stack="vision_opencv"/> <!-- image_geometry, opencv2, cv_bridge -->

  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
  <platform os="ubuntu" version="10.10"/>

<package name="sparselib"/><package name="vocabulary_tree"/><package name="g2o"/><package name="posest"/><package name="vslam_system"/><package name="sba"/><package name="frame_common"/><package name="bpcg"/></stack><stack name="ias_common" path="" repo="ias_common" repo_host="http://code.in.tum.de/git/ias-common.git">
  <description brief="ias_common">ias_common</description>
  <author>Maintained by Lorenz Moesenlechner</author>
  <license>BSD,GPL,GPLv3,Closed</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ias_common</url>
  <depend stack="arm_navigation"/> <!-- arm_navigation_msgs -->
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- sensor_msgs, actionlib_msgs, geometry_msgs -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_msgs, roscpp -->

<package name="triangle_mesh_msgs"/><package name="navp_action"/><package name="vision_msgs"/><package name="cogman_msgs"/><package name="annotation_srvs"/><package name="vision_srvs"/></stack><stack name="wu_utils" path="/stacks/wu_utils/trunk" repo="wu-ros-pkg" repo_host="https://wu-ros-pkg.svn.sourceforge.net/svnroot/wu-ros-pkg" version="0.1">
  <description brief="useful code for robotics development">
    Nodes and libraries useful for robotics development.
  </description>
  <author>Erik Karulf/erik@cse.wustl.edu</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/wu_utils</url>

  <depend stack="ros"/>
  <depend stack="common_msgs"/>
  <depend stack="geometry"/>
<package name="simulator_bridge"/><package name="rosmultimaster_test"/><package name="pymp"/><package name="roswiki_node"/><package name="geometry_util"/><package name="basic_utils"/><package name="roslaunch_tools"/><package name="rosmultimaster"/></stack><stack name="roomba_robot" path="/trunk/unstable/roomba_robot" repo="isr-uc-ros-pkg" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="roomba_robot">
  
  	iRobot Roomba robot stack.
  
  </description>
  <author>Gonçalo Cabrita</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/roomba_robot</url>
  <depend stack="ros"/>			<!-- roscpp -->
  <depend stack="common_msgs"/> 	<!-- nav_msgs, geometry_msgs -->
  <depend stack="geometry"/> 		<!-- tf -->
  
<package name="roomba_500_series"/></stack><stack name="soem" path="" repo="soem" repo_host="http://git.mech.kuleuven.be/robotics/soem.git">
  <description brief="soem">soem</description>
  <author>Maintained by Ruben Smits</author>
  <license>GPL with runtime exception,BSD,LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/soem</url>
  <depend stack="ros"/>
  <depend stack="orocos_toolchain_ros"/>

<package name="soem_beckhoff_drivers"/><package name="soem_ebox"/><package name="soem_master"/><package name="soem_core"/></stack><stack name="actuator_array" path="/trunk/humans/actuator_array" repo="gt-ros-pkg" repo_host="http://gt-ros-pkg.googlecode.com/svn">
  <description brief="Contains packages for communicating, controlling, simulating, or otherwise concerning chains of position-controlled actuators (i.e. rc servos)">
  
  <p>
  This stack contains packages communicating, controlling, simulating, or otherwise concerning chains of position-controlled 
  actuators (i.e. rc servos).
  </p>
  
  </description>
  
  <author>Maintained by Stephen Williams</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/actuator_array</url>
  
  <depend stack="ros"/>

<package name="actuator_array_gazebo_plugin"/><package name="actuator_array_driver_gui"/><package name="actuator_array_driver"/></stack><stack name="ros_pandora_platform_specific" path="" repo="pandora-auth-ros-pkg" repo_host="https://github.com/pandora-auth-ros-pkg/pandora-auth-ros-pkg">
  <description brief="ros_pandora_platform_specific">ros_pandora_platform_specific</description>
  <author>Maintained by Miltiadis Allamanis</author>
  <license>Mixed</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ros_pandora_platform_specific</url>
  <depend stack="ros"/>

<package name="slam_communications"/><package name="RangeTests"/><package name="navigation_communications"/><package name="controllersAndSensors_communications"/><package name="interface_tester"/><package name="gui"/><package name="dataFusion_communications"/><package name="RoboticArm_communications"/><package name="mainMotorControl_communications"/><package name="gui_communications"/><package name="vision_communications"/></stack><stack name="image_common" path="/stacks/image_common/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Common code for working with images">
    Common code for working with images in ROS.
  </description>
  <author>Maintained by Patrick Mihelich</author>
  <license>BSD</license>  
  <review notes="2009/6/10" status="Doc reviewed"/>
  <url>http://ros.org/wiki/image_common</url>
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="common_rosdeps"/> <!-- common_rosdeps -->
  <depend stack="pluginlib"/> <!-- pluginlib -->
  <depend stack="ros"/> <!-- roslib -->
  <depend stack="ros_comm"/> <!-- rostest, roscpp, message_filters -->

<package name="image_transport"/><package name="camera_calibration_parsers"/><package name="polled_camera"/><package name="camera_info_manager"/></stack><stack name="create_robot" path="/branches/trunk_cturtle/stacks/create_robot" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="iRobot Create">iRobot Create drivers and configuration</description>
  <author>Maintained by Ken Conley</author>
  <license>BSD,MIT</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/create_robot</url>
  <depend stack="common_msgs"/> <!-- nav_msgs, geometry_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rospy -->

<package name="create_node"/><package name="create_bringup"/><package name="create_urdf"/><package name="create_driver"/><package name="create_navigation"/><package name="create_dashboard"/><package name="create_teleop"/></stack><stack name="cob_navigation" path="" repo="cob_navigation" repo_host="git://github.com/ipa320/cob_navigation">
  <description brief="Care-O-bot stack with navigation packages">

     The cob_navigation stack provides different navigation packages for Care-O-bot.

  </description>
  <author>Maintained by Florian Weisshardt</author>
  <license>LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_navigation</url>
  <depend stack="cob_common"/> <!-- cob_srvs -->
  <depend stack="cob_environments"/> <!-- cob_default_env_config -->
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- nav_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="navigation"/> <!-- move_base_msgs, move_base, map_server, amcl, robot_pose_ekf -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- topic_tools, roscpp -->
  <depend stack="slam_gmapping"/> <!-- gmapping -->

<package name="cob_2dslam"/><package name="cob_linear_nav"/><package name="cob_2dnav"/></stack><stack name="Scan3D" path="/trunk/Scan3D" repo="roblab-whge-ros-pkg" repo_host="http://roblab-whge-ros-pkg.googlecode.com/svn">
  <description brief="Scan3D">Creates 3D scans with mobile robots, and provides the possibility to analyse the scans</description>
  <author>B.König</author>
  <license>CreativeCommons BY-NC-SA License</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/Scan3D</url>
  <depend stack="common_msgs"/> <!-- geometry_msgs, sensor_msgs, visualization_msgs -->
  <depend stack="fhge-rcf4ros"/> <!-- rcf_com_roomba_base -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="joystick_drivers"/> <!-- joy -->
  <depend stack="laser_pipeline"/> <!-- laser_geometry -->
  <depend stack="perception_pcl"/> <!-- pcl, pcl_ros -->
  <depend stack="perception_pcl_addons"/> <!-- pcl_visualization -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- roscpp -->

<package name="dynamixel"/><package name="scan3d_pcl"/><package name="virtualScan"/><package name="joy_controller"/><package name="lms100"/><package name="my3dscan"/></stack><stack name="reem_teleop" path="" repo="reem_teleop" repo_host="https://github.com/pal-robotics/reem_teleop">
  <description brief="reem_teleop">
    Motion retargeting packages for teleoperating REEM.
  </description>
  <author>Maintained by Marcus Liebhardt</author>
  <license>Modified BSD, LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/reem_teleop</url>
  <depend stack="common_msgs"/> <!-- sensor_msgs, geometry_msgs -->
  <depend stack="geometry"/> <!-- tf, eigen, bullet -->
  <depend stack="kinematics"/> <!-- kinematics_msgs -->
  <depend stack="motion_planning_common"/> <!-- motion_planning_msgs -->
  <depend stack="motion_planning_environment"/> <!-- planning_environment_msgs -->
  <depend stack="orocos_kinematics_dynamics"/> <!-- orocos_kdl -->
  <depend stack="robot_model"/> <!-- urdf -->
  <depend stack="ros"/> <!-- roscpp -->
<package name="joint_position_controller"/><package name="tree_kinematics"/><package name="reem_teleop_coordinator"/><package name="motion_adaption"/></stack><stack name="cob_extern" path="" repo="cob_extern" repo_host="git://github.com/ipa320/cob_extern">
  <description brief="Care-O-bot stack with external dependencies">

     The cob_extern stack contains third party libraries needed for operating Care-O-bot. The packages are downloaded from the manufactorers website and not changed in any way.

  </description>
  <author>Maintained by Florian Weisshardt</author>
  <license>BSD,LGPL,proprietary</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_extern</url>

  <depend stack="ros"/>

<package name="libhokuyo_urg"/><package name="libntcan"/><package name="libcvd"/><package name="libmesasr"/><package name="libphidgets"/><package name="libpcan"/><package name="libm5api"/><package name="brics_oodl_scanner_libs"/><package name="libtoon"/></stack><stack name="xbee" path="/trunk/xbee" repo="vmi-ros-pkg" repo_host="https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg">
  <description brief="xbee">xbee</description>
  <author>Maintained by Roalter Luis</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/xbee</url>
  <depend stack="ros"/>

<package name="python_xbee"/><package name="xbee_interface"/></stack><stack name="panda3d" path="/stacks/panda3d/trunk" repo="wu-ros-pkg" repo_host="https://wu-ros-pkg.svn.sourceforge.net/svnroot/wu-ros-pkg" version="1.6.2.0">
  <description brief="panda3d game engine">
    Support for Panda3D game engine
  </description>
  <author>Maintained by Erik Karulf</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/panda3d</url>
  <depend stack="ros"/>
</stack><stack name="orocos_controllers" path="" repo="orocos_controllers" repo_host="https://github.com/RCPRG-ros-pkg/orocos_controllers">
  <description brief="orocos_controllers">This stack contain packeges for building real-time controllers with orocos</description>
  <author>Maintained by Konrad Banachowicz</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/orocos_controllers</url>
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="geometry"/> <!-- kdl -->
  <depend stack="rtt_ros_integration"/> <!-- ocl, rtt_ros_integration_geometry_msgs, rtt, rtt_ros_integration_sensor_msgs, rtt_ros_integration, rtt_ros_integration_std_msgs -->
  <depend stack="orocos_tools"/> <!-- rtt_ros_integration_trajectory_msgs, rtt_ros_integration_actionlib_msgs, oro_action_server -->
  <depend stack="pr2_controllers"/> <!-- pr2_controllers_msgs -->
  <depend stack="ros"/>

<package name="oro_joint_trajectory_action"/><package name="rtt_pr2_controllers_msgs"/><package name="oro_joint_state_publisher"/><package name="joint_spline_trajectory_generator"/><package name="fake_servo"/></stack><stack name="common_msgs" path="/stacks/common_msgs/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="common messages">
    common_msgs contains messages that are widely used by other ROS packages.
These includes messages for 
actions (<a href="http://ros.org/wiki/actionlib_msgs">actionlib_msgs</a>), 
diagnostics (<a href="http://ros.org/wiki/diagnostic_msgs">diagnostic_msgs</a>), 
geometric primitives (<a href="http://ros.org/wiki/geometry_msgs">geometry_msgs</a>), 
robot navigation (<a href="http://ros.org/wiki/nav_msgs">nav_msgs</a>),
and common sensors (<a href="http://ros.org/wiki/sensor_msgs">sensor_msgs</a>), such as laser range finders, cameras, point clouds.
  </description>
  <author>Maintained by Tully Foote tfoote@willowgarage.com</author>
  <license>BSD</license>  
  <review notes="2009/09/30" status="doc reviewed"/>
  <url>http://ros.org/wiki/common_msgs</url>
  <depend stack="ros"/> <!-- rosbag, rostest, std_msgs, rosbagmigration, rospy -->
  <depend stack="ros_comm"/> <!-- REQUIRED for message generate.  roscreate-stack will not detect this do not delete -->

<package name="geometry_msgs"/><package name="actionlib_msgs"/><package name="sensor_msgs"/><package name="nav_msgs"/><package name="stereo_msgs"/><package name="test_common_msgs"/><package name="trajectory_msgs"/><package name="visualization_msgs"/><package name="diagnostic_msgs"/></stack><stack name="hrl_behaviors" path="/trunk/hrl/hrl_behaviors" repo="gt-ros-pkg" repo_host="http://gt-ros-pkg.googlecode.com/svn">
  <description brief="hrl_behaviors"> 
        Collection of encapsulated behaviors and perceptual services along with 
        architectures and interfaces which employ them.  Most behaviors are designed
        for exclusive use with the PR2 but some of the perception packages do not require
        the actual robot.
  </description>
  <author>Kelsey Hawkins, Travis Deyle, Advisor: Prof. Charlie Kemp (Healthcare Robotics Lab
    at Georgia Tech)</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hrl_behaviors</url>
  <depend stack="ros"/>

<package name="pr2_approach_table"/><package name="hrl_move_floor_detect"/><package name="hrl_clickable_world"/><package name="hrl_clickable_behaviors"/><package name="pr2_grasp_behaviors"/><package name="hrl_table_detect"/><package name="pr2_collision_monitor"/></stack><stack name="lse_experiments" path="/trunk/unstable/lse_experiments" repo="isr-uc-ros-pkg" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="lse experiments">
  
  	The purpose of this stack is to hold all the relevant experiments produced inside the LSE (ISR University of Coimbra). ROS code developed for papers, demos, etc should be placed here. Everything should be documented in such a way that reproduction of results is possible.
  
  </description>
  <author>Gonçalo Cabrita and Pedro Sousa</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/lse_experiments</url>
  <depend stack="ros"/>

<package name="fctuc_open_day"/></stack><stack name="ihr_demos" path="" repo="iheart-ros-pkg" repo_host="git://github.com/IHeartRobotics/iheart-ros-pkg">
  <description brief="ihr_demos">I Heart Robotics ROS Demos</description>
  <author>Maintained by I Heart Robotics</author>
  <license>GPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ihr_demos</url>
  <depend stack="ros"/>
<package name="ihr_opencv"/><package name="ihr_demo_bags"/></stack><stack name="albany_robots" path="/trunk/albany_robots" repo="albany-ros-pkg" repo_host="http://albany-ros-pkg.googlecode.com/svn">
  <description brief="Hardware drivers, controllers, and GUIs used in the ILS Social Robotics Lab">
    This stack contains a configuration and control code for a number of robots developed in the ILS Social Robotics Lab, at the University of Albany, State University of New York. 
  </description>
  <author>Maintained by Michael Ferguson</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/albany_robots</url>
  <depend stack="arbotix"/> <!-- arbotix_python -->
  <depend stack="bosch_drivers"/> <!-- usb_cam -->
  <depend stack="common_msgs"/> <!-- geometry_msgs, sensor_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="ni"/> <!-- openni_camera -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- roscpp, sensor_msgs, std_msgs, rospy, tf, geometry_msgs -->

<package name="nelson"/><package name="social_msgs"/><package name="trike"/><package name="albany_common"/><package name="chiara"/><package name="rosalyn"/></stack><stack name="ecl_core" path="/trunk/ecl_core" repo="ecl_core" repo_host="https://embedded-control-library.googlecode.com/svn">
  <description brief="Embedded control libraries wrapping core platform functionality">
  <p>A set of tools and interfaces extending the capabilities of 
  c++ to provide a lightweight, consistent interface with a focus for
  control programming.
  </p>
  </description>
  <author>Maintained by Daniel Stonier</author>
  <license>BSD</license>  
  <review notes="" status="proposal cleared"/>
  <url>http://ros.org/wiki/ecl_core</url>
  <depend stack="ecl_lite"/> <!-- ecl_errors, ecl_time_lite, ecl_config -->
  <depend stack="ecl_tools"/> <!-- ecl_build, ecl_license -->
  <depend stack="ros"/>

<package name="ecl_concepts"/><package name="ecl_type_traits"/><package name="ecl_formatters"/><package name="ecl_utilities"/><package name="ecl_devices"/><package name="ecl_time"/><package name="ecl_core"/><package name="ecl_eigen"/><package name="ecl_streams"/><package name="ecl_threads"/><package name="ecl_command_line"/><package name="ecl_linear_algebra"/><package name="ecl_statistics"/><package name="ecl_core_apps"/><package name="ecl_mpl"/><package name="ecl_geometry"/><package name="ecl_containers"/><package name="ecl_math"/><package name="ecl_sigslots"/><package name="ecl_exceptions"/><package name="ecl_converters"/><package name="ecl_ipc"/></stack><stack name="simulator_gazebo" path="/stacks/simulator_gazebo/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Gazebo Simulator">
    Wrappers, tools and additional API's for using ROS with the <a href="http://ros.org/wiki/gazebo">Gazebo</a> simulator.
  </description>
  <author>Maintained by John Hsu johnhsu@willowgarage.com</author>
  <license>BSD,LGPL</license>  
  <review notes="" status="Doc reviewed"/>
  <url>http://ros.org/wiki/simulator_gazebo</url>
  <depend stack="bullet"/> <!-- bullet -->
  <depend stack="common_msgs"/> <!-- nav_msgs, sensor_msgs, geometry_msgs -->
  <depend stack="common_rosdeps"/> <!-- common_rosdeps -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure, driver_base -->
  <depend stack="geometry"/> <!-- tf, angles -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="nodelet_core"/> <!-- nodelet -->
  <depend stack="perception_pcl"/> <!-- pcl_ros -->
  <depend stack="physics_ode"/> <!-- parallel_quickstep, opende -->
  <depend stack="robot_model"/> <!-- urdf_interface, ivcon, urdf, convex_decomposition -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rosgraph_msgs, rospy, std_msgs, roscpp, std_srvs -->
  <depend stack="visualization_common"/> <!-- ogre -->
  <depend stack="xacro"/> <!-- xacro -->

<package name="gazebo_worlds"/><package name="gazebo_msgs"/><package name="gazebo_plugins"/><package name="gazebo"/><package name="gazebo_tests"/><package name="gazebo_tools"/></stack><stack name="android_core" path="" repo="android_core" repo_host="https://android.rosjava.googlecode.com/hg">
  <description brief="android_core">android_core</description>
  <author>Maintained by Damon Kohler</author>
  <license>BSD, Apache 2.0</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/android_core</url>

  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="ros"/>
  <depend stack="rosjava_core"/> <!-- rosjava -->

<package name="android_hokuyo"/><package name="android_tutorial_pubsub"/><package name="android_tutorial_image_transport"/><package name="android_tutorial_hokuyo"/><package name="polling_input_stream"/><package name="android_acm_serial"/><package name="compressed_visualization_transport_msgs"/><package name="android_tutorial_teleop"/><package name="android_tutorial_camera"/><package name="android_honeycomb_mr2"/><package name="android_gingerbread"/><package name="android_rosserial"/><package name="compressed_visualization_transport"/></stack><stack name="ros_experimental" path="/stacks/ros_experimental/trunk" repo="ros_experimental" repo_host="https://code.ros.org/svn/ros">
  <description brief="ros_experimental">
    Experimental packages for ROS core system development.
  </description>
  <author>Various</author>
  <license>BSD,BSD, Boost</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ros_experimental</url>
  <depend stack="ros"/> <!-- roswtf, rospack, roscpp, rosservice, roslib, std_msgs, rosparam, rostest, rospy, rostopic, rosrecord, std_srvs, roslang, rosmsg -->
  <depend stack="roshpit"/> <!-- roswtf, rospack, roscpp, rosservice, roslib, std_msgs, rosparam, rostest, rospy, rostopic, rosrecord, std_srvs, roslang, rosmsg -->

<package name="rxlab"/><package name="rospackwtf"/><package name="ros_epic_fail"/><package name="reaper"/><package name="repository_maintenance"/><package name="rosfs"/><package name="rosmanual"/><package name="process_info"/></stack><stack name="elektron_gui" path="" repo="elektron_gui" repo_host="https://github.com/RCPRG-ros-pkg/elektron_gui">
  <description brief="elektron_gui">Some graphical tools for Elektron mobile robot.</description>
  <author>Maciej Stefańczyk</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/elektron_gui</url>
  <depend stack="diagnostics_monitors"/> <!-- robot_monitor -->
  <depend stack="elektron_robot"/> <!-- elektron_base -->
  <depend stack="ros"/> <!-- roslib -->
  <depend stack="ros_comm"/> <!-- std_srvs, std_msgs, rospy -->
  <depend stack="rx"/> <!-- rxtools -->

<package name="elektron_dashboard"/></stack><stack name="schunk_robots" path="" repo="schunk_robots" repo_host="git://github.com/ipa320/schunk_robots">
  <description brief="schunk_robots">schunk_robots</description>
  <author>Maintained by Florian Weisshardt</author>
  <license>BSD,LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/schunk_robots</url>
  <depend stack="cob_common"/> <!-- cob_description -->
  <depend stack="ros"/>
  <depend stack="schunk_modular_robotics"/> <!-- schunk_powercube_chain, schunk_sdh, schunk_description -->

<package name="schunk_hardware_config"/><package name="schunk_bringup"/></stack><stack name="camera_drivers_experimental" path="/branches/trunk_cturtle/stacks/camera_drivers_experimental" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="camera_drivers_experimental">camera_drivers_experimental</description>
  <author>Maintained by Blaise Gassend</author>
  <license>GPL,BSD,LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/camera_drivers_experimental</url>
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="ros"/>

<package name="swissranger_camera"/></stack><stack name="vmi_cognitive_environment" path="/trunk/vmi_cognitive_environment" repo="vmi-ros-pkg" repo_host="https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg">
  <description brief="The Cognitive Environment">
  The VMI Cognitive Environment Stack
  
  </description>
  <author>Maintained by Luis Roalter</author>
  <license>BSD,GPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/vmi_cognitive_environment</url>
  <depend stack="ros"/> <!-- std_msgs, rospy, roscpp -->
  <depend stack="vmi_external_dependencies"/>

<package name="ce_environment"/><package name="ce_phidgets"/><package name="ce_plants"/><package name="manualcontroller"/><package name="ce_fan"/><package name="ce_pca"/><package name="cognitive_environment"/><package name="ce_wsn"/></stack><stack name="pr2_robot" path="" repo="pr2_robot" repo_host="https://kforge.ros.org/pr2robot/hg">
  <description brief="pr2_robot">

  This stack collects PR2-specific components that are used in bringing up
  a robot.

  </description>
  <author>Maintained by Wim Meeussen</author>
  <license>BSD</license>  
  <review notes="" status="Doc Reviewed"/>
  <url>http://ros.org/wiki/pr2_robot</url>
  <depend stack="camera_drivers"/> <!-- prosilica_camera, wge100_camera -->
  <depend stack="common_msgs"/> <!-- sensor_msgs, diagnostic_msgs -->
  <depend stack="diagnostics"/> <!-- diagnostic_updater, diagnostic_aggregator -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure -->
  <depend stack="geometry_experimental"/> <!-- tf2_ros -->
  <depend stack="image_pipeline"/> <!-- stereo_image_proc -->
  <depend stack="imu_drivers"/> <!-- microstrain_3dmgx2_imu -->
  <depend stack="joystick_drivers"/> <!-- joy -->
  <depend stack="laser_drivers"/> <!-- hokuyo_node -->
  <depend stack="navigation"/> <!-- robot_pose_ekf -->
  <depend stack="orocos_kinematics_dynamics"/> <!-- kdl -->
  <depend stack="pr2_common"/> <!-- pr2_description, pr2_dashboard_aggregator, pr2_machine, pr2_msgs -->
  <depend stack="pr2_controllers"/> <!-- single_joint_position_action, ethercat_trigger_controllers, pr2_calibration_controllers, joint_trajectory_action, robot_mechanism_controllers, pr2_mechanism_controllers, pr2_gripper_action, pr2_head_action -->
  <depend stack="pr2_ethercat_drivers"/> <!-- ethercat_hardware -->
  <depend stack="pr2_mechanism"/> <!-- pr2_controller_manager, realtime_tools, pr2_hardware_interface, pr2_mechanism_model -->
  <depend stack="pr2_power_drivers"/> <!-- pr2_power_board, ocean_battery_driver, power_monitor -->
  <depend stack="robot_model"/> <!-- robot_state_publisher -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_msgs, rosbag, std_srvs, roscpp, rospy -->
  <depend stack="sound_drivers"/> <!-- sound_play -->
  <depend stack="wifi_drivers"/> <!-- wifi_ddwrt -->

<package name="pr2_computer_monitor"/><package name="pr2_run_stop_auto_restart"/><package name="pr2_bringup"/><package name="pr2_etherCAT"/><package name="pr2_controller_configuration"/><package name="imu_monitor"/><package name="pr2_camera_synchronizer"/></stack><stack name="uos-slam" path="" repo="uos-ros-pkg" repo_host="http://kos.informatik.uni-osnabrueck.de/uos-ros-pkg.git">
  <description brief="uos-slam">uos-slam</description>
  <author>Maintained by Jochen Sprickerhof</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/uos-slam</url>
  <depend stack="ros"/>

<package name="slam_exporter"/></stack><stack name="geographic_info" path="" repo="geographic_info" repo_host="https://kforge.ros.org/geographicinfo/geographic_info">
  <description brief="geographic_info">Geographic information</description>
  <author>Maintained by Jack O'Quin</author>
  <license>BSD</license>  
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/geographic_info</url>
  <depend stack="common_msgs"/>
  <depend stack="ros"/>
<package name="geographic_msgs"/><package name="navsat_odometry"/><package name="geodesy"/></stack><stack name="slam_gmapping" path="/stacks/slam_gmapping/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Map Building with Gmapping">

     slam_gmapping contains the gmapping package, which provides SLAM capabilities. GMapping is a Creative-Commons-licensed open source package provided by OpenSlam.

  </description>
  <author>Brian Gerkey</author>
  <license>CreativeCommons-by-nc-sa-2.0</license>  
  <review notes="" status="Doc reviewed"/>
  <url>http://ros.org/wiki/slam_gmapping</url>
  <depend stack="common_msgs"/> <!-- nav_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="navigation"/> <!-- map_server -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rosconsole, std_msgs, roscpp, message_filters -->

<package name="gmapping"/></stack><stack name="camera_pose_estimation" path="" repo="camera_pose_estimation" repo_host="http://git.mech.kuleuven.be/robotics/camera_pose_estimation.git">
  <description brief="camera_pose_estimation">

    camera_pose_estimation: this stack gathers all our package to do 3D pose estimation of objects, marker-based and markerless.

  </description>
  <author>Steven Bellens - steven.bellens@mech.kuleuven.be, Koen Buys - koen.buys@mech.kuleuven.be</author>
  <license>LGPLv2.1 / BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/camera_pose_estimation</url>
  <depend stack="ros"/>
  <depend stack="orocos_toolchain"/>
  <depend stack="rtt_ros_integration"/>
  <depend stack="rtt_common_msgs"/>
<package name="ar_pose_world_convertor"/><package name="ar_pose_ekf"/><package name="ar_pose_demo"/><package name="rtt_ar_pose"/></stack><stack name="people_dataset" path="/branches/trunk_cturtle/stacks/people_dataset" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="Packages for collecting and interfacing with the dataset of people in indoor environments.">people_dataset</description>
  <author>Maintained by Caroline Pantofaru</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/people_dataset</url>
  <depend stack="ros"/>
  <depend stack="common_msgs"/> <!-- sensor_msgs, geometry_msgs -->
  <depend stack="geometry"/> <!-- tf, bullet -->
  <depend stack="image_pipeline"/> <!-- stereo_msgs -->
  <depend stack="vision_opencv"/> <!-- opencv2, cv_bridge -->

<package name="people_dataset_interface"/><package name="people_dataset_msgs"/></stack><stack name="wubble_world" path="/trunk/arrg/wubble_world" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
  <description brief="wubble_world">wubble_world</description>
  <author>Maintained by Daniel Hewlett</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/wubble_world</url>
  <depend stack="ros"/>

<package name="wubble_environments"/></stack><stack name="starmac_testing" path="" repo="starmac-ros-pkg" repo_host="https://bitbucket.org/bouffard/starmac-ros-pkg">
  <description brief="starmac_testing">
  Stack for testing launch files, etc. May have onerous dependencies but that's
  okay, the idea is to have the tests and their dependencies here rather than putting
  tests in individual stacks and potentially adding extraneous dependencies to those
  stacks just so their tests will work. E.g. when testing vicon, might also want
  to run estimator, but in general vicon_mocap shouldn't depend on flyer_est.
  </description>
  <author>Maintained by Patrick Bouffard</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/starmac_testing</url>
  <depend stack="ros"/>
  <depend stack="starmac_vicon"/>
  <depend stack="starmac_flyer"/>
  <depend stack="starmac_mpc"/>

<package name="starmac_vicon_testing"/><package name="starmac_controller_testing"/></stack><stack name="mrpt_common" path="/trunk/mrpt_common" repo="mrpt-ros-pkg" repo_host="http://mrpt-ros-pkg.googlecode.com/svn">
  <description brief="mrpt_common">mrpt_common</description>
  <author>Maintained by Jose Luis Blanco</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/mrpt_common</url>
  <depend stack="common_msgs"/> <!-- sensor_msgs, geometry_msgs -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_msgs, roscpp -->

<package name="mrpt_bridge"/><package name="mrpt_msgs"/><package name="rawlog_play"/><package name="mrpt_libs"/></stack><stack name="bosch_proximity_sensor_applications" path="/trunk/stacks/bosch_proximity_sensor_applications" repo="bosch-ros-pkg" repo_host="https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg">
  <description brief="bosch_proximity_sensor_applications">bosch_proximity_sensor_applications</description>
  <author>Adrian Funk (maintained by Philip Roan)</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/bosch_proximity_sensor_applications</url>
  <depend stack="arm_navigation"/> <!-- arm_navigation_msgs -->
  <depend stack="bosch_proximity_sensor"/> <!-- proximity_sensor_driver -->
  <depend stack="common"/> <!-- actionlib, filters, pluginlib -->
  <depend stack="common_msgs"/> <!-- sensor_msgs, trajectory_msgs, geometry_msgs, visualization_msgs -->
  <depend stack="control"/> <!-- control_msgs -->
  <depend stack="geometry"/> <!-- tf, tf_conversions, angles -->
  <depend stack="joystick_drivers"/> <!-- joy -->
  <depend stack="kinematics"/> <!-- kinematics_msgs -->
  <depend stack="motion_planning_common"/> <!-- arm_navigation_msgs -->
  <depend stack="perception_pcl"/> <!-- pcl -->
  <depend stack="pr2_controllers"/> <!-- control_toolbox, pr2_controllers_msgs -->
  <depend stack="pr2_mechanism"/> <!-- pr2_controller_manager, realtime_tools, pr2_controller_interface -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- topic_tools, roscpp -->

<package name="pr2_arm_teleop_skin"/><package name="pr2_calib_proximity_sensor"/><package name="reactive_trajectory_controller"/></stack><stack name="rosserial_android" path="" repo="rosserial_android" repo_host="https://kforge.ros.org/rosserial/android">
  <description brief="rosserial_android">
  rosserial_android stack allows the Android adk to directly publish ROS
  messages through an Android device.  The ADK runs a modified 
  rosserial_arduino firmware.  In this stack there is a Android app/library
   and  ADK demo firmware.  
  </description>
  <author>Adam Stambler</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosserial_android</url>
  <depend stack="ros"/>
  <depend stack="rosserial"/> 
  <depend stack="rosserial_java"/>
  <depend stack="rosserial_arduino"/>
  
<package name="rosserial_adk_demo"/><package name="rosserial_adk_demo_msgs"/><package name="rosserial_android"/></stack><stack name="sql_database" path="/stacks/sql_database/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="sql_database">
    Provides an easy way to use SQL databases from the ROS environment.
  </description>
  <author>Maintained by Matei Ciocarlie</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sql_database</url>
  <depend stack="common_rosdeps"/> <!-- common_rosdeps -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- roscpp -->

<package name="student_database"/><package name="database_interface"/></stack><stack name="ais_bonn_drivers" path="/trunk/stacks/ais_bonn_drivers" repo="ais-bonn-ros-pkg" repo_host="http://ais-bonn-ros-pkg.googlecode.com/svn">
  <description brief="ais_bonn_drivers">ais_bonn_drivers</description>
  <author>Maintained by Andreas Hochrath and Torsten Fiolka</author>
  <license>BSD, GPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ais_bonn_drivers</url>

  <depend stack="ros"/>

<package name="mocap_optitrack"/><package name="sicks300"/><package name="roomrider_driver"/></stack><stack name="cob_simulation" path="" repo="cob_simulation" repo_host="git://github.com/ipa320/cob_simulation">
  <description brief="Care-O-bot stack with simulation packages">

     The cob_simulation stack includes packages to work with Care-O-bot within simulation environments, e.g. gazebo.

  </description>
  <author>Maintained by Florian Weisshardt</author>
  <license>LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_simulation</url>
  <depend stack="cob_common"/> <!-- cob_srvs, cob_description -->
  <depend stack="cob_driver"/> <!-- cob_relayboard, cob_sound, cob_sick_s300 -->
  <depend stack="cob_robots"/> <!-- cob_bringup, cob_machine, cob_hardware_config -->
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- actionlib_msgs, geometry_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="image_pipeline"/> <!-- image_proc -->
  <depend stack="navigation"/> <!-- move_base_msgs -->
  <depend stack="point_cloud_perception"/> <!-- point_cloud_converter -->
  <depend stack="pr2_controllers"/> <!-- single_joint_position_action, joint_trajectory_action -->
  <depend stack="pr2_mechanism"/> <!-- pr2_controller_manager -->
  <depend stack="pr2_simulator"/> <!-- pr2_gazebo_plugins, pr2_gazebo -->
  <depend stack="robot_model"/> <!-- convex_decomposition, ivcon, robot_state_publisher -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rospy, rostopic -->
  <depend stack="schunk_modular_robotics"/> <!-- schunk_sdh -->
  <depend stack="simulator_gazebo"/> <!-- gazebo_tools, gazebo, gazebo_plugins, gazebo_worlds -->
  <depend stack="visualization_common"/> <!-- ogre_tools -->
  <depend stack="xacro"/> <!-- xacro -->

<package name="cob_gazebo_worlds"/><package name="cob_bringup_sim"/><package name="cob_ogre"/><package name="cob_gazebo"/><package name="cob_controller_configuration_gazebo"/><package name="cob_simulated_tactile_sensors"/></stack><stack name="2dnav_pr2_app" path="/branches/trunk_cturtle/applications/2dnav_pr2_app" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="A 2D navigation application for the PR2 robot platform.">
    The 2D navigation application for the PR2 robot
  </description>
  <author>Eitan eitan@willowgarage.com</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/2dnav_pr2_app</url>
  <depend stack="common"/> <!-- filters -->
  <depend stack="common_msgs"/> <!-- sensor_msgs, geometry_msgs -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="laser_pipeline"/> <!-- laser_filters, laser_geometry -->
  <depend stack="navigation"/> <!-- move_base, map_server, amcl -->
  <depend stack="pr2_apps"/> <!-- pr2_teleop -->
  <depend stack="pr2_common"/> <!-- pr2_machine -->
  <depend stack="pr2_controllers"/> <!-- pr2_mechanism_controllers -->
  <depend stack="pr2_mechanism"/> <!-- pr2_controller_manager -->
  <depend stack="pr2_navigation"/> <!-- pr2_navigation_self_filter, semantic_point_annotator -->
  <depend stack="ros"/> <!-- topic_tools, roscpp, message_filters -->
  <!--depend stack="sandbox" />  explore_wg -->
  <depend stack="slam_gmapping"/> <!-- gmapping -->
  <depend stack="wg_common"/> <!-- willow_maps -->

<package name="2dnav_pr2"/></stack><stack name="pr2_object_manipulation" path="/stacks/pr2_object_manipulation/branches/0.4-branch" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_object_manipulation">
    Contains PR2-specific implementations of some of the generic
    functionality needed for pickup and place tasks. 
  </description>
  <author>Maintained by Kaijen Hsiao and Matei Ciocarlie</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_object_manipulation</url>
  <depend stack="arm_navigation"/> <!-- move_arm_msgs -->
  <depend stack="common"/> <!-- actionlib, pluginlib -->
  <depend stack="common_msgs"/> <!-- stereo_msgs, actionlib_msgs, trajectory_msgs, sensor_msgs, geometry_msgs, visualization_msgs -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure -->
  <depend stack="geometry"/> <!-- tf, kdl, eigen -->
  <depend stack="motion_planners"/> <!-- interpolated_ik_motion_planner -->
  <depend stack="motion_planning_common"/> <!-- geometric_shapes_msgs, planning_environment, motion_planning_msgs -->
  <depend stack="object_manipulation"/> <!-- bayesian_grasp_planner, object_manipulator, probabilistic_grasp_planner, object_manipulation_msgs, rviz_interaction_tools -->
  <depend stack="perception_pcl"/> <!-- pcl, pcl_ros -->
  <depend stack="pr2_arm_navigation"/> <!-- pr2_arm_navigation_kinematics, pr2_arm_navigation_perception, pr2_arm_navigation_filtering, pr2_arm_navigation_actions, pr2_arm_navigation_planning -->
  <depend stack="pr2_controllers"/> <!-- pr2_mechanism_controllers, pr2_controllers_msgs, joint_trajectory_action, pr2_gripper_action, robot_mechanism_controllers -->
  <depend stack="pr2_mechanism"/> <!-- pr2_mechanism_msgs, pr2_controller_interface, realtime_tools, pr2_mechanism_model -->
  <depend stack="ros"/> <!-- roslib -->
  <depend stack="ros_comm"/> <!-- std_msgs, rospy, std_srvs, roscpp -->
  <depend stack="ros_realtime"/> <!-- rosrt -->
  <depend stack="trajectory_filters"/> <!-- trajectory_filter_server -->
  <depend stack="visualization"/> <!-- rviz -->
  <depend stack="visualization_common"/> <!-- ogre_tools -->

<package name="rgbd_assembler"/><package name="pr2_grasp_adjust"/><package name="pr2_handy_tools"/><package name="pr2_gripper_click"/><package name="pr2_gripper_reactive_approach"/><package name="pr2_gripper_sensor_msgs"/><package name="pr2_gripper_sensor_controller"/><package name="simple_Jtranspose_controller"/><package name="pr2_gripper_sensor_action"/><package name="pr2_gripper_grasp_planner_cluster"/><package name="pr2_gripper_grasp_controller"/><package name="pr2_object_manipulation_launch"/></stack><stack name="pi_vision" path="/trunk/pi_vision" repo="pi-robot-ros-pkg" repo_host="http://pi-robot-ros-pkg.googlecode.com/svn">
  <description brief="pi_vision">
  A collection of vision packages created for the Pi Robot Project at <a href="http://www.pirobot.org">http://www.pirobot.org</a>.
  </description>
  <author>Maintained by Patrick Goebel</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pi_vision</url>
  <depend stack="common_msgs"/> <!-- geometry_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="ros"/> <!-- roscpp -->
  <depend stack="visualization_common"/> <!-- visualization_msgs -->
<package name="pi_face_tracker"/><package name="ros2opencv"/></stack><stack name="calibration_experimental" path="/branches/trunk_cturtle/stacks/calibration_experimental" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="calibration_experimental">

     calibration_experimental

  </description>
  <author>Maintained by Vijay Pradeep</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/calibration_experimental</url>
  <depend stack="common_msgs"/> <!-- nav_msgs, geometry_msgs, sensor_msgs -->
  <!--depend stack="drivers_experimental" /--> <!-- camera_trigger_test in pr2_calibration_launch_old removed, circular dependency-->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="image_pipeline"/> <!-- stereo_image_proc, image_view -->
  <depend stack="pr2_calibration"/> <!-- pr2_calibration_estimation, pr2_dense_laser_snapshotter, pr2_calibration_executive -->
  <depend stack="pr2_common"/> <!-- pr2_msgs -->
  <depend stack="pr2_controllers"/> <!-- pr2_mechanism_controllers, robot_mechanism_controllers -->
  <depend stack="robot_calibration"/> <!-- laser_joint_processor, laser_cb_detector, monocam_settler, calibration_msgs, image_cb_detector, laser_joint_projector -->
  <depend stack="ros"/> <!-- rospy, roslib, std_msgs, roscpp, rxbag -->
  <!--depend stack="sandbox" /> experimental_controllers -->
  <depend stack="visualization"/> <!-- rxbag_plugins -->

<package name="mocap_msgs"/><package name="pr2_calibration_launch_old"/><package name="pr2_calibration_rxbag_plugins"/><package name="wheel_odometry_calibration"/><package name="cal_marker_playback"/><package name="experimental_calibration_msgs"/></stack><stack name="point_cloud_perception" path="/stacks/point_cloud_perception/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Point Cloud Perception">
     The point_cloud_perception stack contains algorithms and tools that deal with 3D
     point cloud data from a variety of different sensing devices.
   </description>
  <author>Maintained by Radu Bogdan Rusu</author>
  <license>BSD,LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/point_cloud_perception</url>
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="ros"/> <!-- roscpp -->
  <depend stack="perception_pcl"/>

<package name="point_cloud_converter"/></stack><stack name="mrpt_hwdrivers" path="/trunk/mrpt_hwdrivers" repo="mrpt-ros-pkg" repo_host="http://mrpt-ros-pkg.googlecode.com/svn">
  <description brief="mrpt_hwdrivers">mrpt_hwdrivers</description>
  <author>Maintained by Jose Luis</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/mrpt_hwdrivers</url>
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- roscpp -->

<package name="mrpt_hokuyo"/></stack><stack name="robot_model_tutorials" path="" repo="robot_model_tutorials" repo_host="https://kforge.ros.org/robotmodel/tutorials">
  <description brief="Tools for use with URDF Models">This package contains a number of tools for making, viewing and using URDF models.</description>
  <author>Maintained by David Lu!!</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/robot_model_tutorials</url>
  <depend stack="ros"/>

<package name="urdf_tutorial"/></stack><stack name="cram_highlevel" path="" repo="cram_highlevel" repo_host="http://code.in.tum.de/git/cram-highlevel.git">
  <description brief="cram_highlevel">cram_highlevel</description>
  <author>Maintained by Lorenz Moesenlechner</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cram_highlevel</url>
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- nav_msgs, sensor_msgs, actionlib_msgs, geometry_msgs -->
  <depend stack="cram_pl"/> <!-- cram_reasoning, alexandria, trivial_garbage, designators, cram_math, process_modules, cram_utilities, cram_language, cram_execution_trace -->
  <depend stack="ias_common"/> <!-- vision_msgs, vision_srvs -->
  <depend stack="knowrob"/> <!-- yason, json_prolog -->
  <depend stack="motion_planning_common"/> <!-- mapping_msgs -->
  <depend stack="point_cloud_perception"/> <!-- point_cloud_converter, pcl, pcl_ros -->
  <depend stack="ros"/> <!-- std_msgs, roslisp, rospy, std_srvs -->
  <depend stack="roslisp_common"/> <!-- actionlib_lisp, cl_transforms, cl_tf -->
  <depend stack="roslisp_support"/> <!-- roslisp_runtime -->
  <depend stack="visualization_common"/> <!-- visualization_msgs -->

<package name="semantic_map_costmap"/><package name="map_annotation"/><package name="cljlo"/><package name="location_costmap"/><package name="cl_json_pl_client"/><package name="ias_map_annotations"/><package name="cljlo_utils"/><package name="cram_plan_actionserver"/><package name="perception_process_module"/><package name="fake_process_modules"/><package name="table_costmap"/><package name="cram_plan_library"/><package name="cram_plan_failures"/><package name="cl_json_pl_server"/><package name="cram_plan_knowledge"/><package name="designators_ros"/><package name="yason"/><package name="cram_roslisp_common"/><package name="semantic_map_collision_environment"/></stack><stack name="ros_release" path="/stacks/ros_release/trunk" repo="ros_release" repo_host="https://code.ros.org/svn/ros">
  <description brief="ros_release">
    <p>
      This stack contains tools for releasing and installing ROS-packaged software through various channels including:
    <ul>
      <li>rosinstall</li>
      <li>Debian toolchains</li>
      <li>Hudson continuous-integration infrastructure for releasing</li>
    </ul>
    </p>

  </description>
  <author>Maintained by Kenneth Conley</author>
  <license>BSD,Python License</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ros_release</url>
  <depend stack="ros"/> <!-- roslib, rosdep -->
  <depend stack="ros_comm"/> <!-- rostest -->

<package name="vcstools"/><package name="hudson"/><package name="rosdeb"/><package name="isogenerator"/><package name="job_generation"/><package name="rosdistro"/><package name="release"/></stack><stack name="asctec_drivers" path="" repo="asctec_drivers" repo_host="http://robotics.ccny.cuny.edu/git/ccny-ros-pkg/asctec_drivers.git">
  <description brief="AscTec Quadrotor drivers">Driver stack for AscTec Quadrotors including the Pelican and Hummingbird</description>
  <author>Maintained by William Morris, Ivan Dryanovski et al.</author>
  <license>GPL</license>  
  <review notes="Under active development" status="experimental"/>
  <url>http://ros.org/wiki/asctec_drivers</url>
  <depend stack="common_msgs"/> <!-- nav_msgs, geometry_msgs, sensor_msgs -->
  <depend stack="diagnostics"/> <!-- diagnostic_updater -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="mav_tools"/> <!-- mav_msgs -->
  <depend stack="common"/> <!-- nodelet -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rospy, std_msgs, roscpp -->

<package name="asctec_proc"/><package name="asctec_msgs"/><package name="pelican_urdf"/><package name="asctec_autopilot"/><package name="asctec_mon"/></stack><stack name="wubble_navigation_apps" path="/trunk/arrg/wubble_navigation_apps" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="Navigation applications for the Wubble robot">
        This stack holds a collection of navigation applications that can be run on the Wubble robot.
    </description>
    
    <author>Maintained by Antons Rebguns</author>
    <license>BSD</license>  
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/wubble_navigation_apps</url>
    
    <depend stack="ros"/>
    <depend stack="wubble_navigation"/>
<package name="wubble_2dnav_slam"/><package name="wubble_2dnav"/><package name="wubble_2dnav_local"/></stack><stack name="lse_battery_drivers" path="/trunk/unstable/lse_battery_drivers" repo="isr-uc-ros-pkg" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="lse_battery_drivers">lse_battery_drivers</description>
  <author>Maintained by Gonçalo Cabrita</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/lse_battery_drivers</url>
  <depend stack="ros"/>

<package name="laptop_battery"/></stack><stack name="otl_ni" path="/trunk/otl_ni" repo="otl-ros-pkg" repo_host="http://otl-ros-pkg.googlecode.com/svn">
  <description brief="otl_ni">otl_ni</description>
  <author>Maintained by Takashi Ogura</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/otl_ni</url>
  <depend stack="ros"/>

<package name="otl_gesture"/><package name="otl_gesture_roomba"/></stack><stack name="ros_realtime" path="/stacks/ros_realtime/trunk" repo="ros_realtime" repo_host="https://code.ros.org/svn/ros">
  <description brief="Tools for ROS use from realtime systems">
    Contains tools for using ROS from within realtime threads, mainly the rosrt package.
  </description>
  <author>Maintained by Josh Faust</author>
  <license>BSD, Boost</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ros_realtime</url>
  <depend stack="ros"/> <!-- roslib -->
  <depend stack="ros_comm"/> <!-- rosconsole, std_msgs, roscpp -->

<package name="lockfree"/><package name="allocators"/><package name="rosrt"/><package name="rosatomic"/></stack><stack name="ccny_drivers" path="" repo="ccny_drivers" repo_host="http://robotics.ccny.cuny.edu/git/ccny-ros-pkg/ccny_drivers.git">
  <description brief="ccny_drivers">CCNY drivers for the MatrixVision BlueFox camera</description>
  <author>Maintained by Carlos Jaramillo and Ivan Dryanovski</author>
  <license>GPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ccny_drivers</url>
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure, driver_base -->
  <depend stack="image_common"/> <!-- camera_info_manager, image_transport -->
  <depend stack="nodelet_core"/> <!-- nodelet -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- roscpp -->

<package name="mv_bluefox_driver"/></stack><stack name="graph_mapping" path="/stacks/graph_mapping/branches/unstable-branch" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="graph_mapping">graph_mapping</description>
  <author>Maintained by Bhaskara Marthi</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/graph_mapping</url>
  <depend stack="common_msgs"/> <!-- nav_msgs, sensor_msgs, geometry_msgs, visualization_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="laser_pipeline"/> <!-- laser_geometry -->
  <depend stack="point_cloud_perception"/> <!-- eigen3 -->
  <depend stack="ros"/> <!-- rosbag, roscpp -->
  <depend stack="slam_karto"/> <!-- karto_scan_matcher -->
  <depend stack="vslam"/> <!-- sba -->

<package name="occupancy_grid_utils"/><package name="graph_slam"/><package name="pose_graph"/></stack><stack name="cob_driver" path="" repo="cob_driver" repo_host="git://github.com/ipa320/cob_driver">
  <description brief="Care-O-bot stack with driver packages">

     The cob_driver stack includes packages that provide access to the Care-O-bot hardware through ROS messages, services and actions. E.g. for mobile base, arm, camera sensors, laser scanners, etc...

  </description>
  <author>Maintained by Florian Weisshardt</author>
  <license>BSD,LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_driver</url>
  <depend stack="arm_navigation"/> <!-- kinematics_base, kinematics_msgs, arm_navigation_msgs -->
  <depend stack="audio_common"/> <!-- sound_play -->
  <depend stack="camera_drivers"/> <!-- prosilica_camera -->
  <depend stack="cob_common"/> <!-- cob_utilities, cob_srvs, cob_description, cob_vision_utils, brics_actuator -->
  <depend stack="cob_extern"/> <!-- libmesasr, libm5api, brics_oodl_scanner_libs, libphidgets, libpcan, libntcan -->
  <depend stack="common"/> <!-- actionlib, tinyxml -->
  <depend stack="common_msgs"/> <!-- nav_msgs, actionlib_msgs, trajectory_msgs, sensor_msgs, geometry_msgs, visualization_msgs, diagnostic_msgs -->
  <depend stack="control"/> <!-- control_msgs -->
  <depend stack="diagnostics"/> <!-- diagnostic_updater -->
  <depend stack="eigen"/> <!-- eigen -->
  <depend stack="geometry"/> <!-- tf, tf_conversions -->
  <depend stack="image_common"/> <!-- polled_camera, image_transport -->
  <depend stack="image_pipeline"/> <!-- image_proc -->
  <depend stack="joystick_drivers"/> <!-- joy -->
  <depend stack="laser_drivers"/> <!-- hokuyo_node -->
  <depend stack="laser_pipeline"/> <!-- laser_geometry -->
  <depend stack="nodelet_core"/> <!-- nodelet -->
  <depend stack="openni_kinect"/> <!-- openni_launch, openni_camera -->
  <depend stack="orocos_kinematics_dynamics"/> <!-- kdl -->
  <depend stack="perception_pcl"/> <!-- pcl, pcl_ros -->
  <depend stack="pluginlib"/> <!-- pluginlib -->
  <depend stack="point_cloud_perception"/> <!-- point_cloud_converter -->
  <depend stack="pr2_common"/> <!-- pr2_msgs -->
  <depend stack="pr2_controllers"/> <!-- pr2_controllers_msgs -->
  <depend stack="pr2_kinematics"/> <!-- pr2_arm_kinematics -->
  <depend stack="robot_model"/> <!-- robot_state_publisher, urdf, kdl_parser, collada_urdf -->
  <depend stack="ros"/> <!-- roslib -->
  <depend stack="ros_comm"/> <!-- std_msgs, rostest, rospy, roscpp, message_filters -->
  <depend stack="vision_opencv"/> <!-- opencv2, cv_bridge -->

<package name="cob_relayboard"/><package name="cob_light"/><package name="cob_hokuyo"/><package name="cob_canopen_motor"/><package name="cob_undercarriage_ctrl"/><package name="cob_sick_s300"/><package name="cob_trajectory_controller"/><package name="cob_sound"/><package name="cob_utilities"/><package name="cob_joy"/><package name="cob_forcetorque"/><package name="cob_tray_sensors"/><package name="cob_generic_can"/><package name="cob_camera_sensors"/><package name="cob_base_drive_chain"/><package name="cob_battery"/><package name="cob_joint_state_aggregator"/><package name="cob_head_axis"/><package name="cob_touch"/><package name="cob_oodl_scanner"/></stack><stack name="hrl_hardware_drivers" path="/trunk/hrl/hrl_hardware_drivers" repo="gt-ros-pkg" repo_host="http://gt-ros-pkg.googlecode.com/svn">
  <description brief="hrl_hardware_drivers"> Python code to use
      different hardware components like Robotis servos, Phantom
      Omnis, Segway Omni, Hokuyos etc.</description>
  <author>Maintained by Advait Jain. Advisor: Prof. Charlie Kemp, Lab:
  Healthcare Robotics Lab, Georgia Tech.</author>
  <license>New BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hrl_hardware_drivers</url>
  <depend stack="common_msgs"/> <!-- sensor_msgs, geometry_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="joystick_drivers"/> <!-- joy -->
  <depend stack="laser_drivers"/> <!-- hokuyo_node -->
  <depend stack="ros"/> <!-- rospy, std_srvs, roscpp -->

<package name="pan_tilt_robotis"/><package name="phantom_omni"/><package name="hrl_segway_omni"/><package name="robotis"/><package name="hrl_hokuyo"/><package name="hrl_tilting_hokuyo"/><package name="force_torque"/><package name="zenither"/></stack><stack name="sweetgazebo" path="/trunk/sweetgazebo" repo="vmi-ros-pkg" repo_host="https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg">
  <description brief="vmi_applications">vmi_applications</description>
  <author>Maintained by Roalter Luis</author>
  <license>Various</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/vmi_applications</url>
  <depend stack="ros"/>

<package name="sweet_demo"/><package name="libraryeditor"/><package name="sweetgazebo"/><package name="sweet_controller"/><package name="workingPackage"/><package name="0509_01"/><package name="myHome"/></stack><stack name="bosch_manipulation_utils" path="/trunk/stacks/bosch_manipulation_utils" repo="bosch-ros-pkg" repo_host="https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg">
  <description brief="BOSCH manipulation utilities">Contains helpers to control the PR2 robot</description>
  <author>Christian Bersch (Maintained by Benjamin Pitzer)</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/bosch_manipulation_utils</url>
  <depend stack="arm_navigation"/> <!-- kinematics_msgs, arm_navigation_msgs -->
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- geometry_msgs, trajectory_msgs, sensor_msgs -->
  <depend stack="geometry"/> <!-- tf, tf_conversions -->
  <depend stack="pr2_common_actions"/> <!-- pr2_common_action_msgs -->
  <depend stack="pr2_controllers"/> <!-- pr2_controllers_msgs -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_msgs, rospy, roscpp -->
  <depend stack="vision_opencv"/> <!-- cv_bridge -->
  <depend stack="bosch_image_proc"/> <!-- camera_self_filter -->
  <depend stack="perception_pcl"/> <!-- pcl, pcl_ros -->


<package name="pr2_interactive_segmentation"/><package name="simple_robot_control"/></stack><stack name="vmi_virtual_office" path="/trunk/vmi_virtual_office" repo="vmi-ros-pkg" repo_host="https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg">
  <description brief="The Virtual Office">
  The Virtual Office at VMI, the simulation files for rviz and gazebo.
  
  </description>
  <author>Maintained by Luis Roalter</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/vmi_virtual_office</url>
  
  <depend stack="ros"/>
  <depend stack="vmi_cognitive_environment"/> 
  
<package name="vo_actioncomponents"/><package name="vo_virtualoffice"/><package name="vo_interface"/></stack><stack name="rtcus_cognitive" path="/trunk/rtcus_cognitive" repo="rtc-us-ros-pkg-trunk" repo_host="https://rtc-us-ros-pkg.svn.sourceforge.net/svnroot/rtc-us-ros-pkg">
  <description brief="rtcus_cognitive">rtcus_cognitive</description>
  <author>Maintained by Pablo Iñigo Blasco</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rtcus_cognitive</url>
  <depend stack="ros"/>

<package name="soar"/><package name="deap"/><package name="ros_soar"/><package name="rtcus_kinect_gestures"/><package name="ghmm"/></stack><stack name="textvid" path="/trunk/textvid" repo="vmi-ros-pkg" repo_host="https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg">
  <description brief="Gazebo plugins for getting image stream into Gazebo simulations.">
  	simvid contains different Gazebo plugins for displaying dynamic images (e. g. dynamic texture for monitors) in a Gazebo simulation.
  </description>
  <author>Maintained by Luis Roalter and Stefan Diewald</author>
  <license/>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/textvid</url>
  <depend stack="ros"/>

<package name="gazebo_video_plugin"/></stack><stack name="surveillance" path="/trunk/surveillance" repo="vmi-ros-pkg" repo_host="https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg">
  <description brief="surveillance">surveillance</description>
  <author>Maintained by Roalter Luis</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/surveillance</url>
  <depend stack="ros"/>

<package name="sv_common"/><package name="sv_driver_tplink"/></stack><stack name="topological_navigation" path="/stacks/topological_navigation/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="topological_navigation">Code pertaining to navigation using a global topological graph together with local metric information</description>
  <author>Maintained by Bhaskara Marthi</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/topological_navigation</url>
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- nav_msgs, geometry_msgs, visualization_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="graph_mapping"/> <!-- occupancy_grid_utils, laser_slam, graph_mapping_utils -->
  <depend stack="navigation"/> <!-- move_base_msgs, navfn, costmap_2d -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- roscpp -->
  <depend stack="warehousewg"/> <!-- warehouse -->

<package name="topological_nav_msgs"/><package name="topological_roadmap"/><package name="topological_map_2d"/><package name="laser_slam_mapper"/></stack><stack name="jsk_common" path="/trunk/jsk_common" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="jsk_common">jsk_common</description>
  <author>Maintained by Rosen Diankov</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/jsk_common</url>
  <depend stack="ros"/>

<package name="parallel_util"/><package name="posedetection_msgs"/><package name="jsk_tools"/></stack><stack name="ros_applications" path="" repo="ros_applications" repo_host="https://kforge.ros.org/rosapps/hg">
  <description brief="ros_applications">ros_applications</description>
  <author>Maintained by Wim Meeussen</author>
  <license>BSD,</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ros_applications</url>
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- actionlib_msgs -->
  <depend stack="ros"/> <!-- roslib -->
  <depend stack="ros_comm"/> <!-- std_msgs, actionlib, rospy, actionlib_msgs -->

<package name="ui_preempter"/><package name="application_manager"/><package name="dummy_applications"/><package name="application_msgs"/><package name="ui_responder"/><package name="application_client"/></stack><stack name="lse_roomba_toolbox" path="/trunk/unstable/lse_roomba_toolbox" repo="isr-uc-ros-pkg" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="lse_roomba_toolbox">
  
  Useful tools for the Roomba robots used at the LSE including popular tf setups, Stage world files and 2D navigation parameters and example launch files for the real and simulated robots.
  
  </description>
  <author>Gonçalo Cabrita and Pedro Sousa</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/lse_roomba_toolbox</url>
  <depend stack="ros"/>

<package name="lse_roomba_2dnav"/><package name="lse_roomba_stage"/><package name="lse_roomba_tf_setup"/></stack><stack name="lse_anemometer_drivers" path="/trunk/unstable/lse_anemometer_drivers" repo="isr-uc-ros-pkg" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="lse anemometer drivers">
  	This stack contains drivers for anemometers. Currently the only driver available is for the Windsonic, an ultrasonic wind sensor.
  </description>
  <author>Gonçalo Cabrita and Pedro Sousa</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/lse_anemometer_drivers</url>
  <depend stack="ros"/>	<!-- roscpp -->
  <depend stack="lse_communication"/>	<!-- cereal_port -->
  <depend stack="lse_messages"/>	<!-- lse_sensor_msgs -->

<package name="windsonic"/></stack><stack name="art_vehicle" path="/trunk/stacks/art_vehicle" repo="utexas-art-ros-pkg" repo_host="http://utexas-art-ros-pkg.googlecode.com/svn">
  <description brief="ART autonomous vehicle support">

    ROS support for the Austin Robot Technology autonomous vehicle.

  </description>
  <author>Maintained by Jack O'Quin</author>
  <license>BSD,GPL</license>  
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/art_vehicle</url>
  <depend stack="camera_drivers"/> <!-- camera1394 -->
  <depend stack="common"/> <!-- nodelet -->
  <depend stack="common_msgs"/> <!-- nav_msgs, sensor_msgs, geometry_msgs, visualization_msgs -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure, driver_base -->
  <depend stack="geometry"/> <!-- tf, angles -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="image_pipeline"/> <!-- image_view -->
  <depend stack="image_transport_plugins"/> <!-- compressed_image_transport, theora_image_transport -->
  <depend stack="joystick_drivers"/> <!-- joy -->
  <depend stack="laser_drivers"/> <!-- sicktoolbox_wrapper -->
  <depend stack="ros"/> <!-- roslib -->
  <depend stack="ros_comm"/> <!-- std_msgs, rosbag, rospy, roscpp, rosbagmigration -->
  <depend stack="rx"/> <!-- rxtools -->
  <depend stack="simulator_stage"/> <!-- stage (unified stack in Electric) -->
  <depend stack="velodyne"/> <!-- velodyne_common -->

<package name="simulator_art"/><package name="art_pilot"/><package name="art_common"/><package name="art_nav"/><package name="art_run"/><package name="art_observers"/><package name="art_teleop"/><package name="art_image"/><package name="applanix"/><package name="art_map"/><package name="art_msgs"/><package name="art_servo"/></stack><stack name="neato_robot" path="/trunk/neato_robot" repo="albany-ros-pkg" repo_host="http://albany-ros-pkg.googlecode.com/svn">
  <description brief="Neato XV-11 drivers and configuration files.">
    This stack contains drivers for the Neato XV-11 robot. It also contains sample configuration files for running the Navigation stack on an XV-11.
  </description>
  <author>Maintained by Michael Ferguson</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/neato_robot</url>
  <depend stack="common_msgs"/> <!-- nav_msgs, geometry_msgs, sensor_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rospy -->

<package name="neato_driver"/><package name="2dnav_neato"/><package name="neato_node"/></stack><stack name="common_tutorials" path="/stacks/common_tutorials/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="common_tutorials">common_tutorials</description>
  <author>Maintained by Tully Foote</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/common_tutorials</url>
  <depend stack="common"/> <!-- actionlib, pluginlib -->
  <depend stack="common_msgs"/> <!-- actionlib_msgs -->
  <depend stack="geometry"/> <!-- angles -->
  <depend stack="ros"/> <!-- roslib -->
  <depend stack="ros_comm"/> <!-- std_msgs, rospy, roscpp, rosconsole -->
  <depend stack="ros_tutorials"/> <!-- turtlesim -->

<package name="nodelet_tutorial_math"/><package name="actionlib_tutorials"/><package name="turtle_actionlib"/><package name="pluginlib_tutorials"/></stack><stack name="pr2_rfid" path="/trunk/hrl/pr2_rfid" repo="gt-ros-pkg" repo_host="http://gt-ros-pkg.googlecode.com/svn">
  <description brief="pr2_rfid">This stack contains code for robot behaviors and radio frequency perception techniques that enable a PR2 (modified with articulated patch antennas) to efficiently discover, locate, and interact with long-range (UHF) RFID tags applied to locations, objects, and people of interest.  Sample capabilities include: estimating the bearing toward a tag, RFID servoing, and RFID search.  These techniques form the foundation of Travis Deyle's PhD thesis; we also demonstrated sample applications such as medication delivery, sensor fusion, and RFID search in home environments.</description>
  <author>Dr. Travis Deyle (Georgia Tech), Prof. Charlie Kemp (Georgia Tech, advisor), and Prof. Matt Reynolds (Duke Univ., collaborator)</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_rfid</url>
  <depend stack="ros"/>

<package name="rfid_explore_room"/><package name="rfid_pf"/><package name="rfid_people_following"/><package name="rfid_hardware"/><package name="rfid_nav2"/><package name="rfid_behaviors"/><package name="rfid_artoolkit"/><package name="rfid_datacapture"/><package name="rfid_demos"/><package name="rfid_servoing"/></stack><stack name="ros_comm" path="/stacks/ros_comm/tags/electric" repo="ros_comm" repo_host="https://code.ros.org/svn/ros">
  <description brief="ros_comm">ROS communications-related packages, including core client libraries (roscpp, rospy, roslisp) and graph introspection tools (rostopic, rosnode, rosservice, rosparam).</description>
  <author>Maintained by Ken Conley</author>
  <license>BSD,LGPL</license>  
  <review notes="REP 100" status="doc reviewed"/>
  <url>http://ros.org/wiki/ros_comm</url>
  <depend stack="ros"/> <!-- rosclean, roslang, roslib, rosunit -->

<package name="roslisp"/><package name="rospy"/><package name="roscpp_traits"/><package name="roscpp_serialization"/><package name="roscpp"/><package name="roscore_migration_rules"/><package name="rosbag"/><package name="rosparam"/><package name="rosmsg"/><package name="rosout"/><package name="rostopic"/><package name="rosbagmigration"/><package name="rosconsole"/><package name="rostest"/><package name="rosmaster"/><package name="rosservice"/><package name="roslaunch"/><package name="topic_tools"/><package name="rosnode"/><package name="rosgraph"/><package name="test_rosservice"/><package name="test_rosnode"/><package name="test_rosgraph"/><package name="test_crosspackage"/><package name="test_roslaunch"/><package name="test_rostopic"/><package name="test_roswtf"/><package name="test_rospy"/><package name="test_roslib_comm"/><package name="perf_roscpp"/><package name="test_roscpp_serialization"/><package name="test_rosmaster"/><package name="test_roscpp_serialization_perf"/><package name="test_rosbag"/><package name="test_rostest"/><package name="test_rosparam"/><package name="test_roscpp"/><package name="test_topic_tools"/><package name="test_rostime"/><package name="test_ros"/><package name="test_rosmsg"/><package name="std_srvs"/><package name="rosgraph_msgs"/><package name="std_msgs"/><package name="cpp_common"/><package name="roswtf"/><package name="message_filters"/><package name="xmlrpcpp"/><package name="rostime"/></stack><stack name="shadow_robot_etherCAT" path="" repo="shadow_robot_etherCAT" repo_host="lp:sr-ros-interface-ethercat">
  <description brief="shadow_robot_ethercat">
    This stack contains the drivers and the controllers for Shadow Robot's EtherCAT Hand.
  </description>
  <author>Maintained by Ugo Cupcic</author>
  <license>GPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/shadow_robot_ethercat</url>
  <depend stack="common"/> <!-- xacro, pluginlib -->
  <depend stack="common_msgs"/> <!-- diagnostic_msgs -->
  <depend stack="diagnostics"/> <!-- self_test, diagnostic_updater, diagnostic_aggregator -->
  <depend stack="geometry"/> <!-- angles -->
  <depend stack="pr2_controllers"/> <!-- pr2_mechanism_controllers, control_toolbox, robot_mechanism_controllers -->
  <depend stack="pr2_mechanism"/> <!-- pr2_controller_manager, pr2_mechanism_model, realtime_tools, pr2_hardware_interface, pr2_controller_interface -->
  <depend stack="robot_model"/> <!-- convex_decomposition, ivcon, urdf -->
  <depend stack="ros"/> <!-- roslib -->
  <depend stack="ros_comm"/> <!-- rosconsole, std_srvs, roscpp, xmlrpcpp, std_msgs, rospy -->
  <depend stack="shadow_robot"/> <!-- sr_robot_msgs, sr_utilities -->

<package name="sr_edc_ethercat_drivers"/><package name="sr_robot_lib"/><package name="sr_edc_controller_configuration"/><package name="sr_edc_launch"/><package name="sr_external_dependencies"/></stack><stack name="veltrobot" path="/trunk/veltrop-ros-pkg/veltrobot" repo="veltrop-ros-pkg" repo_host="https://veltrop-ros-pkg.svn.sourceforge.net/svnroot/veltrop-ros-pkg">
  <description brief="veltrobot">
  Contains packages to control the movement of a humanoid robot, abstract sensor data, video input, teleoperation, and launch/configuration files.
  </description>
  <author>Maintained by Taylor Veltrop</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://taylor.veltrop.com/robotics/khrhumanoidv2.php?topic=veltrop-ros-pkg</url>
  <depend stack="common"/> <!-- tinyxml -->
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="joystick_drivers"/> <!-- joy, ps3joy -->
  <depend stack="robot_model"/> <!-- robot_state_publisher -->
  <depend stack="ros"/> <!-- std_msgs, roscpp -->
  <depend stack="vision_opencv"/> <!-- opencv2, cv_bridge -->
  <!--<depend stack="openni_kinect" />--> <!-- openni, nite -->

<package name="veltrobot_gui"/><package name="veltrobot_teleop"/><package name="veltrobot_nao"/><package name="veltrobot_data"/><package name="veltrobot_msgs"/><package name="veltrobot_movement"/></stack><stack name="clearpath_turtlebot" path="/trunk/clearpath_turtlebot" repo="clearpath-ros-pkg" repo_host="http://clearpath-ros-pkg.googlecode.com/svn">
  <description brief="clearpath_turtlebot">
    The clearpath_turtlebot stack provides a central repository of software
    and launch files intended for deployment on the Turtlebot.
  </description>
  <author>Maintained by Mike Purvis</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/clearpath_turtlebot</url>
  <depend stack="clearpath_kinect"/> <!-- clearpath_tools, clearpath_kinect_demo -->
  <depend stack="openni_kinect"/> <!-- openni_camera -->
  <depend stack="ros"/>
  <depend stack="turtlebot"/> <!-- turtlebot_node -->

<package name="turtlebot_rndmwalk"/><package name="turtlebot_kinect"/><package name="turtlebot_train"/></stack><stack name="camera1394" path="/stacks/camera1394/trunk" repo="camera1394" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="IEEE 1394 Digital Camera driver">

    This is a ROS driver for devices supporting the IEEE 1394 Digital
    Camera (IIDC) protocol. It supports the ROS image_pipeline, using
    libdc1394 for device access.

  </description>
  <author>Maintained by Jack O'Quin, Ken Tossell</author>
  <license>BSD,LGPL</license>  
  <review notes="Jan 22 2010" status="Doc Reviewed"/>
  <url>http://ros.org/wiki/camera1394</url>

  <depend stack="common_msgs"/> <!-- sensor_msgs, diagnostic_msgs -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure, driver_base, timestamp_tools -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="image_common"/> <!-- polled_camera, camera_info_manager, image_transport, camera_calibration_parsers -->
  <depend stack="nodelet_core"/> <!-- nodelet -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_msgs, rostest, rospy, roscpp -->

<package name="camera1394"/></stack><stack name="ccny_experimental" path="" repo="ccny_experimental" repo_host="http://robotics.ccny.cuny.edu/git/ccny-ros-pkg/ccny_experimental.git">
  <description brief="ccny_experimental">ccny_experimental</description>
  <author>Maintained by Ivan Dryanovski</author>
  <license>BSD,GPL</license>  
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/ccny_experimental</url>
  <depend stack="asctec_drivers"/>
  <depend stack="common"/>
  <depend stack="common_msgs"/>
  <depend stack="geometry"/>
  <depend stack="joystick_drivers"/>
  <depend stack="laser_pipeline"/>
  <depend stack="mav_tools"/>
  <depend stack="perception_pcl"/>
  <depend stack="perception_pcl_addons"/>
  <depend stack="ros"/>
  <depend stack="scan_tools"/>
  <depend stack="slam_karto"/>
<package name="kinect_mapping"/><package name="quad_pose_est"/><package name="kinect_mapping2"/><package name="ccny_karto"/><package name="city_turtle"/><package name="laser_proj"/><package name="city_flyer_launch"/><package name="ccny_karto_mapper"/><package name="asctec_height_control"/><package name="pose_generator"/><package name="floor_assistance"/><package name="KalmanFilter"/><package name="kinect_pose_est"/><package name="quad_joy_teleop"/><package name="serial_reader"/><package name="pose_estimation"/><package name="octree_slam"/><package name="pose_plot"/><package name="color_metric"/><package name="asctec_keyboard_teleop"/><package name="quad_pose_ekf"/><package name="pid_control"/><package name="ccny_pcl"/><package name="asctec_ctrl"/><package name="egomotion_benchmark"/><package name="quad_pose_control"/><package name="cye8_opticalflow"/><package name="canonical_scan_matcher2"/><package name="pelican_launch"/></stack><stack name="dynamic_reconfigure" path="" repo="dynamic_reconfigure" repo_host="https://kforge.ros.org/common/dynamicreconfig">
  <description brief="dynamicreconfig">dynamicreconfig</description>
  <author>Maintained by Eitan Marder-Eppstein</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/dynamicreconfig</url>
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rosservice, rospy, roscpp -->

<package name="dynamic_reconfigure"/></stack><stack name="visualization_tutorials" path="/stacks/visualization_tutorials/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Visualization Tutorials">Tutorials related to the visualization stack such as Marker tutorials</description>
  <author>Maintained by Josh Faust</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/visualization_tutorials</url>
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- roscpp -->
  <depend stack="common_msgs"/> <!-- visualization_msgs -->
  <depend stack="visualization_common"/> <!-- backwards compatibility -->
  <depend stack="visualization"/> <!-- interactive_markers -->

<package name="interactive_marker_tutorials"/><package name="visualization_marker_tutorials"/></stack><stack name="laser_pipeline" path="/stacks/laser_pipeline/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="laser_pipeline">

     Libraries from processing laser data, including converting laser data into 3D representations.

  </description>
  <author>Maintained by Jeremy Leibs</author>
  <license>BSD</license>  
  <review notes="09/29/2009" status="Doc reviewed"/>
  <url>http://ros.org/wiki/laser_pipeline</url>
  <depend stack="common_msgs"/> <!-- geometry_msgs, sensor_msgs -->
  <depend stack="common_rosdeps"/> <!-- common_rosdeps -->
  <depend stack="filters"/> <!-- filters -->
  <depend stack="geometry"/> <!-- tf, angles -->
  <depend stack="pluginlib"/> <!-- pluginlib -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_msgs, roscpp, message_filters -->

<package name="laser_assembler"/><package name="laser_filters"/><package name="laser_geometry"/></stack><stack name="octomap_mapping" path="/trunk/octomap_mapping" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="Stack for the OctoMap 3D mapping library">
    The <a href="http://octomap.sourceforge.net/">OctoMap library</a> implements a 3D occupancy grid mapping approach,
providing data structures and mapping algorithms. The map implementation is
based on an octree. This stack contains the actual OctoMap package and additional code for ROS integration.
  </description>
  <author>Maintained by Armin Hornung</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/octomap_mapping</url>
  <depend stack="arm_navigation"/> <!-- arm_navigation_msgs -->
  <depend stack="common_msgs"/> <!-- nav_msgs, sensor_msgs, geometry_msgs, visualization_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="perception_pcl"/> <!-- pcl, pcl_ros -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_srvs, std_msgs, roscpp -->

<package name="octomap"/><package name="octomap_ros"/><package name="octomap_server"/></stack><stack name="rlrobot" path="/trunk/experimental/rlrobot" repo="brown-experimental" repo_host="http://brown-ros-pkg.googlecode.com/svn" version="0.1.0">
  <description brief="rlrobot">

     rlrobot

  </description>
  <author>Maintained by Sosentos</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rlrobot</url>

<package name="exampleClient"/><package name="icreate_nav"/><package name="rosglue"/><package name="irobot_test"/><package name="discreteMove_0_0_1"/></stack><stack name="cob_robots" path="" repo="cob_robots" repo_host="git://github.com/ipa320/cob_robots">
  <description brief="cob_robots">cob_robots</description>
  <author>Maintained by Florian Weisshardt</author>
  <license>LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_robots</url>
  <depend stack="camera_drivers"/> <!-- prosilica_camera -->
  <depend stack="cob_command_tools"/> <!-- cob_dashboard, cob_teleop, cob_script_server -->
  <depend stack="cob_common"/> <!-- cob_description -->
  <depend stack="cob_driver"/> <!-- cob_relayboard, cob_sick_s300, cob_hokuyo, cob_tray_sensors, cob_undercarriage_ctrl, cob_head_axis, cob_camera_sensors, cob_base_drive_chain, cob_light, cob_trajectory_controller, cob_sound -->
  <depend stack="cob_environments"/> <!-- cob_default_env_config -->
  <depend stack="diagnostics"/> <!-- diagnostic_aggregator -->
  <depend stack="image_pipeline"/> <!-- image_proc -->
  <depend stack="joystick_drivers"/> <!-- joy -->
  <depend stack="laser_drivers"/> <!-- hokuyo_node -->
  <depend stack="openni_kinect"/> <!-- openni_launch, openni_camera -->
  <depend stack="pr2_common"/> <!-- pr2_dashboard_aggregator -->
  <depend stack="pr2_robot"/> <!-- pr2_computer_monitor -->
  <depend stack="robot_model"/> <!-- robot_state_publisher -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rostest -->
  <depend stack="schunk_modular_robotics"/> <!-- schunk_powercube_chain, schunk_sdh, schunk_description -->
  <depend stack="wifi_drivers"/> <!-- wifi_ddwrt -->

<package name="cob_bringup"/><package name="cob_default_robot_config"/><package name="cob_hardware_config"/><package name="cob_machine"/></stack><stack name="shadow_robot" path="" repo="shadow_robot" repo_host="lp:sr-ros-interface">
  <description brief="shadow_robot">

  This stack regroups the different ros interfaces developped for Shadow Robot's
  Hardware. It provides an interface to both simulated and real hardware.

  </description>
  <author>Maintained by Ugo Cupcic: ugo@shadowrobot.com, contact@shadowrobot.com</author>
  <license>BSD,GPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/shadow_robot</url>
  <depend stack="common"/> <!-- tinyxml, pluginlib -->
  <depend stack="common_msgs"/> <!-- sensor_msgs, geometry_msgs, diagnostic_msgs -->
  <depend stack="diagnostics"/> <!-- self_test, diagnostic_aggregator -->
  <depend stack="diagnostics_monitors"/> <!-- robot_monitor -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure -->
  <depend stack="executive_smach"/> <!-- smach_ros, smach -->
  <depend stack="geometry"/> <!-- tf, tf_conversions, angles -->
  <depend stack="kinematics"/> <!-- kinematics_msgs -->
  <depend stack="pr2_controllers"/> <!-- pr2_mechanism_controllers, control_toolbox, robot_mechanism_controllers -->
  <depend stack="pr2_mechanism"/> <!-- pr2_mechanism_msgs, pr2_hardware_interface, pr2_mechanism_model, realtime_tools, pr2_controller_interface -->
  <depend stack="pr2_simulator"/> <!-- pr2_gazebo_plugins -->
  <depend stack="robot_model"/> <!-- robot_state_publisher, urdf, kdl_parser -->
  <depend stack="ros"/> <!-- roslib -->
  <depend stack="ros_comm"/> <!-- rosconsole, std_srvs, roscpp, xmlrpcpp, std_msgs, rospy -->
  <depend stack="shadow_robot_ethercat"/> <!-- sr_robot_lib -->
  <depend stack="simulator_gazebo"/> <!-- gazebo, gazebo_plugins, gazebo_worlds -->
  <depend stack="visualization"/> <!-- rviz -->

<package name="threeD_mouse"/><package name="math_utils"/><package name="sr_mechanism_model"/><package name="sr_hand"/><package name="sr_tactile_sensors"/><package name="sr_control_gui"/><package name="sr_utilities"/><package name="sr_example"/><package name="sr_tests"/><package name="kinematics_tests"/><package name="sr_grasp_planner"/><package name="sr_unplug_connector"/><package name="static_tf_kinect_to_base_calibration"/><package name="sr_hardware_interface"/><package name="denso_arm"/><package name="sr_movements"/><package name="sr_robot_msgs"/><package name="sr_automatic_pid_tuning"/><package name="eodev"/><package name="cyberglove"/><package name="sr_gazebo_plugins"/><package name="sr_friction_compensation"/><package name="denso_msgs"/><package name="sr_dremmeling_wall"/><package name="sr_smach_example"/><package name="sr_mechanism_controllers"/><package name="sr_remappers"/><package name="sr_convenient_dependencies"/><package name="kinect_color_segmentation"/><package name="sr_move_arm"/><package name="sr_kinematics"/></stack><stack name="pr2_web_apps" path="/stacks/pr2_web_apps/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="web_apps_core">This stack contains core web apps that are shipped with a PR2.</description>
  <author>Maintained by Josh Tyler</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_web_apps</url>
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- nav_msgs, sensor_msgs, geometry_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="laser_pipeline"/> <!-- laser_geometry -->
  <depend stack="navigation"/> <!-- move_base_msgs, map_server -->
  <depend stack="navigation_experimental"/> <!-- dwa_local_planner, move_slow_and_clear, sbpl_recovery -->
  <depend stack="pr2_apps"/> <!-- pr2_teleop, pr2_tuckarm, pr2_mannequin_mode -->
  <depend stack="pr2_common"/> <!-- pr2_machine -->
  <depend stack="pr2_common_actions"/> <!-- joint_trajectory_generator, pr2_arm_move_ik, pr2_tuck_arms_action -->
  <depend stack="pr2_doors"/> <!-- pr2_doors_executive -->
  <depend stack="pr2_navigation"/> <!-- pr2_navigation_global, pr2_navigation_perception, pr2_navigation_teleop -->
  <depend stack="pr2_plugs"/> <!-- pr2_plugs_actions -->
  <depend stack="ros"/> <!-- roslib -->
  <depend stack="ros_comm"/> <!-- std_msgs, rospy, message_filters -->
  <depend stack="sound_drivers"/> <!-- sound_play -->
  <depend stack="web_interface"/> <!-- rosweb, webui -->
  <depend stack="wg_common"/> <!-- willow_maps -->
  <depend stack="wg_pr2_apps"/> <!-- wg_pr2_2dnav -->

<package name="teleop_ps3_application"/><package name="pr2_base_application"/><package name="camera_application"/><package name="pr2_recharge_application"/><package name="map_tiler"/><package name="mannequin_application"/><package name="navigation_application"/><package name="pr2_addons_application"/><package name="tuckarms_application"/><package name="soccer_application"/><package name="doors_application"/></stack><stack name="clearpath_common" path="/trunk/clearpath_common" repo="clearpath-ros-pkg" repo_host="http://clearpath-ros-pkg.googlecode.com/svn">
  <description brief="clearpath_common">
    The clearpath_common stack provides a central repository of software
    tools used across a variety of the Clearpath Robotics platforms.
  </description>
  <author>Maintained by Mike Purvis</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/clearpath_common</url>
  <depend stack="common_msgs"/> <!-- geometry_msgs -->
  <depend stack="joystick_drivers"/> <!-- joy -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_msgs, rospy -->

<package name="clearpath_teleop"/><package name="clearpath_base"/><package name="clearpath_bringup"/><package name="clearpath_sensors"/></stack><stack name="trajectory_filters" path="/stacks/trajectory_filters/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="trajectory_filters">
  This stack contains a set of filters to work with joint trajectories. It also contains a trajectory filter server which is a ROS node that exposes a ROS service interface to a chain of filters. 
  </description>
  <author>Maintained by Sachin Chitta</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/trajectory_filters</url>
  <depend stack="common"/> <!-- filters -->
  <depend stack="common_msgs"/> <!-- trajectory_msgs -->
  <depend stack="geometry"/> <!-- tf, angles -->
  <depend stack="motion_planning_common"/> <!-- planning_environment, motion_planning_msgs -->
  <depend stack="robot_model"/> <!-- urdf -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- tf, trajectory_msgs, roscpp, motion_planning_msgs -->

<package name="constraint_aware_spline_smoother"/><package name="spline_smoother"/><package name="trajectory_filter_server"/><package name="joint_normalization_filters"/></stack><stack name="ua_language" path="/trunk/arrg/ua_language" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="Packages for natural language processing ">
    When migration is complete, this stack will contain packages for speech
    recognition, parsing, text-to-speech, and other NL-related tasks.
    </description>

    <author>Maintained by Daniel Hewlett</author>
    <license>BSD</license>  
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/ua_language</url>
    <depend stack="ros"/>
<package name="espeak"/><package name="nltk"/></stack><stack name="brown_perception" path="/trunk/distribution/brown_perception" repo="brown-ros-pkg" repo_host="http://brown-ros-pkg.googlecode.com/svn">
  <description brief="brown_perception">Infrastructure for perception</description>
  <author>Maintained by Christopher Crick and Trevor Jay</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/brown_perception</url>
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="image_common"/> <!-- image_transport, camera_calibration_parsers -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- roscpp -->

<package name="gscam"/></stack><stack name="navigation_tutorials" path="" repo="navigation_tutorials" repo_host="https://kforge.ros.org/navigation/tutorials">
  <description brief="navigation_tutorials">navigation_tutorials</description>
  <author>Maintained by Eitan Marder-Eppstein</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/navigation_tutorials</url>
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- nav_msgs, geometry_msgs, sensor_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="navigation"/> <!-- move_base_msgs, move_base, map_server, amcl, fake_localization -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- roscpp -->
  <depend stack="slam_gmapping"/> <!-- gmapping -->
  <depend stack="stage"/> <!-- stage -->

<package name="robot_setup_tf_tutorial"/><package name="simple_navigation_goals_tutorial"/><package name="roomba_stage"/><package name="navigation_stage"/><package name="point_cloud_publisher_tutorial"/><package name="odometry_publisher_tutorial"/><package name="laser_scan_publisher_tutorial"/></stack><stack name="pr2_arm_navigation" path="/stacks/pr2_arm_navigation/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_arm_navigation">
    This stack contains the launch files for arm navigation with the PR2 robot arms. 
  </description>
  <author>Maintained by Sachin Chitta</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_arm_navigation</url>
  <depend stack="arm_navigation"/> <!-- move_arm, trajectory_filter_server, planning_environment, mapping_rviz_plugin, spline_smoother, robot_self_filter, constraint_aware_spline_smoother, arm_kinematics_constraint_aware, kinematics_msgs, arm_navigation_msgs, ompl_ros_interface -->
  <depend stack="arm_navigation_experimental"/> <!-- move_arm_head_monitor, collider, move_arm_warehouse -->
  <depend stack="common_msgs"/> <!-- actionlib_msgs, sensor_msgs -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure -->
  <depend stack="image_pipeline"/> <!-- stereo_image_proc -->
  <depend stack="laser_pipeline"/> <!-- laser_filters, laser_assembler -->
  <depend stack="point_cloud_perception"/> <!-- point_cloud_converter -->
  <depend stack="pr2_common"/> <!-- pr2_machine, pr2_msgs -->
  <depend stack="pr2_controllers"/> <!-- pr2_mechanism_controllers, joint_trajectory_action, pr2_controllers_msgs -->
  <depend stack="pr2_kinematics"/> <!-- pr2_arm_kinematics_constraint_aware, pr2_arm_kinematics -->
  <depend stack="pr2_mechanism"/> <!-- pr2_controller_manager -->
  <depend stack="robot_model"/> <!-- urdf -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/>
  <depend stack="xacro"/> <!-- xacro -->

<package name="pr2_arm_navigation_actions"/><package name="pr2_arm_navigation_filtering"/><package name="pr2_arm_navigation_config"/><package name="pr2_3dnav"/><package name="pr2_arm_navigation_tutorials"/><package name="pr2_arm_navigation_planning"/><package name="pr2_arm_navigation_kinematics"/><package name="pr2_arm_navigation_perception"/></stack><stack name="knowrob" path="/tags/latest" repo="knowrob" repo_host="http://code.in.tum.de/pubsvn/knowrob">
  <description brief="knowrob">

    KnowRob is a knowledge processing framework developed in the IAS group
    at the Technische Universitaet Muenchen, Germany.

    It provides tools for knowledge acquisition, representation and reasoning
    that are tailored to the demands in mobile robotics.

  </description>
  <author>Maintained by Moritz Tenorth</author>
  <license>GPL,BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/knowrob</url>
  <depend stack="client_rosjava_jni"/> <!-- rosjava_jni, tfjava -->
  <depend stack="ias_common"/> <!-- vision_srvs -->
  <depend stack="robot_model"/> <!-- urdf -->
  <depend stack="ros"/> <!-- rosbuild -->
  <depend stack="ros_comm"/> <!-- rospy -->

<package name="ias_prolog_addons"/><package name="knowrob_common"/><package name="comp_orgprinciples"/><package name="tf_prolog"/><package name="knowrob_objects"/><package name="ias_semantic_map"/><package name="semweb"/><package name="json_prolog"/><package name="knowrob_actions"/><package name="thea"/><package name="rosprolog"/><package name="comp_germandeli"/><package name="comp_cop"/><package name="ias_knowledge_base"/><package name="srldb"/><package name="mod_srdl"/><package name="mod_probcog"/><package name="jpl"/><package name="bosch_semantic_map"/><package name="comp_temporal"/><package name="mod_vis"/><package name="comp_spatial"/></stack><stack name="ipswitch4ros" path="/trunk/ipswitch4ros" repo="vmi-ros-pkg" repo_host="https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg">
  <description brief="ipswitch4ros">ipswitch4ros</description>
  <author>Maintained by Roalter Luis</author>
  <license/>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ipswitch4ros</url>
  <depend stack="ros"/>
  <depend stack="ce_common"/>

<package name="ipswitch4ros"/><package name="driver_netio"/><package name="driver_infratec"/></stack><stack name="scout_robot" path="/trunk/unstable/scout_robot" repo="isr-uc-ros-pkg" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="scout_robot">
  
  	Nomad Scout robot stack.
  	
  </description>
  <author>Gonçalo Cabrita and Pedro Sousa</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/scout_robot</url>
  <depend stack="ros"/>			<!-- roscpp -->
  <depend stack="common_msgs"/> 	<!-- nav_msgs, geometry_msgs -->
  <depend stack="geometry"/> 		<!-- tf -->
  <depend stack="lse_messages"/>	<!-- lse_sensor_msgs -->

<package name="scout_ndirect"/></stack><stack name="phidgets" path="" repo="foote-phidget" repo_host="https://phidget.foote-ros-pkg.googlecode.com/hg/">
  <description brief="A stack for interacting with Phidgets">
    This stack contains the C API for Phidgets as well as a C++
    wrapper and various ROS nodes utilizing the C++ Wrapper.
  </description>
  <version>0.0.0</version>
  <author>Tully Foote/tfoote@gmail.com </author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://code.ros.org/wiki/phidgets</url>
<package name="phidget_rfid"/><package name="phidgetspp_c_api"/><package name="phidget_text"/><package name="phidgetspp"/></stack><stack name="humanoid" path="/trunk/humanoid" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="humanoid">humanoid</description>
  <author>Maintained by Edward T. Kaszubski ( ekaszubski@gmail.com )</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/humanoid</url>
  <depend stack="ros"/>
  <depend stack="common_msgs"/> <!-- visualization_msgs -->
  <depend stack="quickdev"/> <!-- quickdev_cpp -->
<package name="humanoid_recognizers"/><package name="humanoid_models"/></stack><stack name="capabilities" path="/trunk/capabilities" repo="vanadium-ros-pkg" repo_host="http://vanadium-ros-pkg.googlecode.com/svn">
  <description brief="capabilities">capabilities</description>
  <author>Maintained by Michael Ferguson</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/capabilities</url>
  <depend stack="ros"/>

<package name="capabilities_server"/><package name="capabilities_requester"/><package name="capabilities_msgs"/></stack><stack name="sbpl_door_planning" path="/sbpl_door_planning/trunk" repo="sbpl_door_planning" repo_host="https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs">
	<description brief="door_planning">door_planning</description>
	The new home of the sbpl_door_planner
	<author>Maintained by Steve Gray and Chris Clingerman</author>
	<license>BSD</license>
	<review notes="" status="unreviewed"/>
	<url>http://www.penn-ros-pkgs.com/sbpl_door_planning</url>
	<depend stack="ros"/>
	<!-- from ros_epic_fail: rospy, roslib, rostest, rosrecord
	     from sbpl_door_planner: roscpp, rosconsole, std_msgs
	     from sbpl_door_planner_plugin: roscpp -->
	<depend stack="kinematics"/>
	<!-- from torque_check: kinematics_msgs -->
	<depend stack="robot_model"/>
	<!-- from torque_check: kdl_parser -->
	<depend stack="pr2_mechanism"/>
	<!-- from torque_check: pr2_controller_interface, pr2_mechanism_model 
	     from sbpl_door_planner_plugin: pr2_controller_manager, pr2_mechanism_model -->
	<depend stack="common"/>
	<!-- from torque_check: pluginlib
	     from sbpl_door_planner_plugin: pluginlib -->
	<depend stack="motion_planners"/>
	<!-- from sbpl_door_planner: sbpl
	     from sbpl_door_planner_plugin: sbpl -->
	<depend stack="common_msgs"/>
	<!-- from sbpl_door_planner: geometry_msgs -->
	<depend stack="pr2_doors"/>
	<!-- from sbpl_door_planner: door_msgs, pr2_doors_common
	     from sbpl_door_planner_plugin: door_msgs, pr2_doors_actions, door_handle_detector -->
	<depend stack="geometry"/>
	<!-- from sbpl_door_planner: angles, tf 
	     from sbpl_door_planner_plugin: kdl, eigen -->
	<depend stack="navigation"/>
	<!-- from sbpl_door_planner_plugin: costmap_2d, nav_core, move_base -->
	<depend stack="pr2_navigation"/>
	<!-- from sbpl_door_planner_plugin: pr2_navigation_teleop, pr2_navigation_perception, pr2_navigation_local -->
	<depend stack="navigation_experimental"/>
	<!-- from sbpl_door_planner_plugin: pose_base_controller -->
<package name="torque_check"/><package name="sbpl_door_planner_plugin"/><package name="sbpl_doors"/><package name="clean_door_planner"/><package name="sbpl_door_planner"/></stack><stack name="3d_navigation_icra12" path="/branches/trunk_diamondback/sandbox/3d_navigation_icra12" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="3d_navigation - Navigation in complex environments with 3D collision checks.">
  This stack provides navigation capabilities in complex environments with 3D collision checks. This
  allows for navigation in any robot configuration (e.g. with untucked arms) and for various mobile manipulation tasks. 
  </description>
  <author>Maintained by Armin Hornung</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/3d_navigation</url>
  <depend stack="common"/> <!-- pluginlib -->
  <depend stack="common_msgs"/> <!-- nav_msgs, geometry_msgs, visualization_msgs -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="motion_planners"/> <!-- sbpl -->
  <depend stack="motion_planning_common"/> <!-- planning_environment, planning_environment_msgs, planning_models, mapping_msgs, robot_self_filter -->
  <depend stack="navigation"/> <!-- move_base, base_local_planner, nav_core, fake_localization, costmap_2d -->
  <depend stack="navigation_experimental"/> <!-- sbpl_lattice_planner, pose_follower -->
  <depend stack="octomap_mapping"/> <!-- octomap, octomap_ros, octomap_server -->
  <depend stack="perception_pcl"/> <!-- pcl -->
  <depend stack="pr2_apps"/> <!-- pr2_tuckarm, pr2_teleop_general -->
  <depend stack="pr2_arm_navigation"/> <!-- pr2_arm_navigation_config -->
  <depend stack="pr2_common_actions"/> <!-- pr2_common_action_msgs -->
  <depend stack="pr2_simulator"/> <!-- pr2_gazebo -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rospy, roscpp -->
  <depend stack="simulator_gazebo"/> <!-- gazebo -->

<package name="pose_follower_3d"/><package name="sbpl_lattice_planner_layer_3d"/><package name="3d_nav_executive"/><package name="3d_nav_gazebo"/><package name="octomap_collision_check"/></stack><stack name="proxy_tools" path="" repo="umd-ros-pkg" repo_host="git://ram.umd.edu/ros/proxy_tools.git">
  <description brief="proxy_tools">Tools for moving data between nodes while conserving bandwidth or avoiding network blockages</description>
  <author>Ken Tossell</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/proxy_tools</url>
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- topic_tools, roscpp -->

<package name="proxy"/></stack><stack name="uu-kinect" path="" repo="uuisrc-ros-pkg" repo_host="https://github.com/cburbridge/uuisrc-ros-pkg">
  <description brief="A stack of UU kinect bits.">Code that uses the Microsoft Kinect RGB-D Camera.</description>
  <author>Chris Burbridge</author>
  <license>GPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/uu-kinect</url>
  <depend stack="ros"/>

<package name="person_grabber"/><package name="pointcloud_compress"/></stack><stack name="roseasy" path="/trunk/roseasy" repo="vmi-ros-pkg" repo_host="https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg">
  <description brief="Nodes for controlling HomeEasy EU equipment.">
    This stack holds various nodes for controlling the home automation equipment from <a href="http://www.homeeasy.eu/">HomeEasy</a>.<br/>
    Currently we are only working on the code for the <strong>EU devices</strong> of HomeEasy, so most UK devices won't be compatible.
  </description>
  <author>Maintained by Roalter Luis</author>
  <license>BSD,</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/roseasy</url>
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_msgs, rospy, roscpp -->

<package name="homeeasy_dongle"/><package name="roseasy"/><package name="homeeasy_transciever"/><package name="easy_remote"/></stack><stack name="otl_util" path="/trunk/otl_util" repo="otl-ros-pkg" repo_host="http://otl-ros-pkg.googlecode.com/svn">
  <description brief="otl_util">otl_util</description>
  <author>Maintained by Takashi Ogura</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/otl_util</url>
  <depend stack="ros"/>

<package name="otl_battery_checker"/><package name="fake_voice_recog"/><package name="otl_web"/><package name="otl_msgconverter"/><package name="otl_bash"/><package name="joy_talk"/><package name="jtalk_node"/></stack><stack name="wubble_navigation" path="/trunk/arrg/wubble_navigation" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="Common configuration options for planar navigation applications on the Wubble robot.">
        The wubble_navigation stack holds common configuration options for running the
        <a href="http://www.ros.org/wiki/navigation">navigation</a> stack on a Wubble robot.
    </description>
    <author>Maintained by Antons Rebguns</author>
    <license>BSD</license>  
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/wubble_navigation</url>
    
    <depend stack="ros"/>
    <depend stack="common"/> <!-- actionlib, filters, pluginlib -->
    <depend stack="common_msgs"/> <!-- geometry_msgs, actionlib_msgs, sensor_msgs -->
    <depend stack="driver_common"/> <!-- dynamic_reconfigure -->
    <depend stack="geometry"/> <!-- tf, eigen, bullet -->
    <depend stack="laser_pipeline"/> <!-- laser_filters, laser_geometry -->
    <depend stack="navigation"/> <!-- move_base, move_base_msgs, amcl -->
    <depend stack="robot_model"/> <!-- urdf, resource_retriever -->
    <depend stack="slam_gmapping"/> <!-- gmapping -->
    <depend stack="visualization_common"/> <!-- visualization_msgs -->
<package name="wubble_navigation_slam"/><package name="wubble_navigation_config"/><package name="wubble_navigation_self_filter"/><package name="wubble_navigation_local"/><package name="wubble_navigation_global"/></stack><stack name="starmac_common" path="" repo="starmac-ros-pkg" repo_host="https://bitbucket.org/bouffard/starmac-ros-pkg">
  <description brief="starmac_common">
  starmac_common contains general-purpose libraries, scripts, etc. These should be general
  in the sense that they might be found in ros-pkg (and in some cases maybe we'll propose
  including them there).
  </description>
  <author>Maintained by Patrick Bouffard</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/starmac_common</url>
  <depend stack="ros"/>
  <depend stack="roshpit"/>

<package name="starmac_roslib"/><package name="starmac_roshlib"/><package name="starmac_templates"/><package name="starmac_msgs"/><package name="starmac_tools"/></stack><stack name="clearpath_kingfisher" path="/trunk/clearpath_kingfisher" repo="clearpath-ros-pkg" repo_host="http://clearpath-ros-pkg.googlecode.com/svn">
  <description brief="clearpath_kingfisher">
    The clearpath_kingfisher stack provides a central repository of software
    and launch files intended for deployment on the Clearpath Robotics
    Kingfisher M100 unmanned surface vessel.
  </description>
  <author>Maintained by Mike Purvis</author>
  <license>BSD,</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/clearpath_kingfisher</url>
  <depend stack="clearpath_common"/> <!-- clearpath_bringup, clearpath_teleop -->
  <depend stack="ros"/>

<package name="kingfisher_bringup"/><package name="kingfisher_teleop"/></stack><stack name="physics_ode" path="/stacks/physics_ode/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="physics_ode">

     Open Dynamics Physics Engines for Simulation and Planning (Collision Detection).

  </description>
  <author>Maintained by John Hsu</author>
  <license>Boost Software License,BSD,LGPL</license>  
  <review notes="2010/01/08" status="Doc reviewed"/>
  <url>http://ros.org/wiki/physics_ode</url>
  <depend stack="ros"/> <!-- rosbuild -->

<package name="opende"/><package name="parallel_quickstep"/></stack><stack name="sr_object_manipulation" path="" repo="sr_object_manipulation" repo_host="lp:sr-manipulation">
  <description brief="sr_object_manipulation">sr_object_manipulation</description>
  <author>Maintained by Ugo Cupcic</author>
  <license>GPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sr_object_manipulation</url>
  <depend stack="common_msgs"/> <!-- actionlib_msgs -->
  <depend stack="motion_planning_common"/> <!-- collision_map, robot_self_filter -->
  <depend stack="object_manipulation"/> <!-- household_objects_database, object_manipulation_msgs -->
  <depend stack="ros"/>

<package name="sr_object_manipulation_smach"/><package name="sr_object_manipulation_launch"/></stack><stack name="object_recognition_experimental" path="/branches/trunk_diamondback/stacks/object_recognition_experimental" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="object_recognition experimental">
     The object_recognition stack contains algorithms and tools relevant to
     object recognition from visual data.
   </description>
  <author>Maintained by Gary Bradski, Radu Bogdan Rusu, Marius Muja</author>
  <license>BSD,BSD,APACHE 2.0,LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/object_recognition_experimental</url>
  <depend stack="arm_navigation"/> <!-- move_arm_msgs -->
  <depend stack="collision_environment"/> <!-- collision_environment_msgs -->
  <depend stack="common"/> <!-- actionlib, nodelet -->
  <depend stack="common_msgs"/> <!-- nav_msgs, geometry_msgs, sensor_msgs -->
  <depend stack="drivers_experimental"/> <!-- dp_ptu47_pan_tilt_stage -->
  <depend stack="geometry"/> <!-- tf, bullet -->
  <depend stack="image_common"/> <!-- image_transport, camera_calibration_parsers -->
  <depend stack="image_pipeline"/> <!-- stereo_image_proc, stereo_msgs -->
  <depend stack="kinematics"/> <!-- kinematics_msgs -->
  <depend stack="object_recognition"/> <!-- rein, stereo_object_recognition, fast_template_detector -->
  <depend stack="perception_pcl"/> <!-- eigen3, pcl, pcl_ros -->
  <depend stack="point_cloud_perception"/> <!-- pcl_tf -->
  <depend stack="point_cloud_perception_experimental"/> <!-- pcl_point_cloud2_image_color -->
  <depend stack="pr2_cockpit"/> <!-- teleop_controllers -->
  <depend stack="pr2_common"/> <!-- pr2_msgs -->
  <depend stack="pr2_controllers"/> <!-- pr2_controllers_msgs -->
  <depend stack="pr2_mechanism"/> <!-- pr2_mechanism_msgs -->
  <depend stack="ros"/> <!-- std_srvs, std_msgs, roscpp, message_filters, rosrecord -->
  <depend stack="sandbox"/> <!-- tod -->
  <depend stack="vision_opencv"/> <!-- opencv2, image_geometry, cv_bridge -->
  <depend stack="visualization_common"/> <!-- ogre, visualization_msgs -->
  <depend stack="vslam"/> <!-- posest, frame_common, vslam_system -->

<package name="rbrief"/><package name="edges_pose_refiner"/><package name="grasping_classifier"/><package name="stereo_object_model_generation"/><package name="rec_templates"/><package name="ess_detector"/><package name="tod_rein"/><package name="larks"/><package name="binary_pairs"/><package name="ftd_pt_learner"/></stack><stack name="hector_slam" path="/trunk/hector_slam" repo="tu-darmstadt-ros-pkg" repo_host="http://tu-darmstadt-ros-pkg.googlecode.com/svn">
  <description brief="hector_slam">hector_slam contains ROS packages related to performing SLAM in unstructed environments like those encountered in the Urban Search and Rescue (USAR) scenarios of the RoboCup Rescue competition</description>
  <author>Maintained by Stefan Kohlbrecher, Johannes Meyer</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://code.google.com/p/tu-darmstadt-ros-pkg/wiki/hector_slam</url>
  <depend stack="ros"/>

<package name="hector_nav_msgs"/><package name="hector_geotiff"/><package name="hector_map_server"/><package name="hector_mapping"/><package name="hector_slam_launch"/><package name="hector_map_tools"/><package name="hector_trajectory_server"/></stack><stack name="executive_smach" path="" repo="executive_smach" repo_host="https://kforge.ros.org/smach/executive_smach">
  <description brief="executive_smach">
    The executive_smach stack contains the SMACH library, together
    with tools for introspection and a ROS integration package.
  </description>
  <author>Jon Bohren, Wim Meeussen</author>
  <license>BSD</license>  
  <review notes="" status="doc reviewed"/>
  <url>http://ros.org/wiki/executive_smach</url>
  <depend stack="actionlib"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- actionlib_msgs -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_msgs, rostest, rospy, rostopic -->

<package name="smach_msgs"/><package name="smach"/><package name="smach_ros"/></stack><stack name="web_bags" path="/branches/trunk_cturtle/stacks/web_bags" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="web bags">
    Processing bag files and viewing them on the web.
  </description>
  <author>Tim Field/tfield@willowgarage.com,Scott Hassan/hassan@willowgarage.com</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/web_bags</url>
<package name="bagproc_video"/><package name="bagproc_template"/><package name="bagproc_thumbnails"/><package name="pygeoip"/><package name="bagproc_diagnostics"/><package name="web_bags_core"/><package name="wbag"/></stack><stack name="austinvilla" path="/trunk/stacks/austinvilla" repo="utexas-ros-pkg" repo_host="http://utexas-ros-pkg.googlecode.com/svn">

  <description brief="ROS Packages from the UT AustinVilla Robot Soccer Team">
    This stack keeps all the packages from UT AustinVilla in the efforts towards the RoboCup Competition. Currently it contains a color table generation tool, along with a ground truth detection system using the Kinect that can be used for Nao robot. 
  </description>

  <author>Maintained by Piyush Khandelwal</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/austinvilla</url>

  <depend stack="ros"/>
  <depend stack="openni_kinect"/>
  <depend stack="vision_opencv"/>
  <depend stack="perception_pcl"/>
  <depend stack="perception_pcl_addons"/>
  <depend stack="geometry"/>
  <depend stack="eros"/>

<package name="color_table"/><package name="ground_truth"/></stack><stack name="velodyne" path="/trunk/stacks/velodyne" repo="utexas-art-ros-pkg" repo_host="http://utexas-art-ros-pkg.googlecode.com/svn">
  <description brief="Velodyne HDL-64E 3D LIDAR support">

    ROS support for the Velodyne HDL-64E and HDL-64E S2 3D LIDARs.

  </description>
  <author>Maintained by Jack O'Quin</author>
  <license>BSD</license>  
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/velodyne</url>
  <depend stack="common"/> <!-- nodelet -->
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="geometry"/> <!-- tf, angles -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rostest, rosbag, roscpp -->
  <depend stack="visualization"/> <!-- rviz -->

<package name="velodyne_common"/><package name="velodyne_msgs"/><package name="velodyne_viz"/><package name="velodyne_ringcomp"/><package name="velodyne_pcl"/><package name="velodyne_height_map"/></stack><stack name="dynamic_voronoi" path="/trunk/dynamic_voronoi" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn" version="0.1.0">
  <description brief="Efficient computation and updating of Euclidean distance maps and Euclidean Voronoi diagrams on 2D grid maps.">

<p>
This stack provides software to compute and update Euclidean distance maps (DM) and Euclidean Voronoi diagrams (GVD) on 2D grid maps.
</p>

<p>
The program is initialized with a binary occupancy grid map and computes the corresponding DM and GVD. When provided with points that mark newly occupied or freed cells, the DM and GVD can be updated efficiently to reflect the changes in the environment.
</p>

<p>
Details on the algorithms can be found in the corresponding paper. Please cite the paper if you use it for scientific work:<br/>
B. Lau, C. Sprunk and W. Burgard, Improved Updating of Euclidean Distance Maps and Voronoi Diagrams, IEEE Intl. Conf. on Intelligent Robots and Systems (IROS), Taipei, Taiwan, 2010.<br/>
See also <a href="http://www.informatik.uni-freiburg.de/~lau/dynamicvoronoi">http://www.informatik.uni-freiburg.de/~lau/dynamicvoronoi</a>
</p>

  </description>
  <author>Boris Lau, Christoph Sprunk, Wolfram Burgard</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/dynamicvoronoi</url>
  <depend stack="ros"/>
<package name="dynamicvoronoi"/></stack><stack name="openni_kinect" path="" repo="openni_kinect" repo_host="https://kforge.ros.org/openni/openni_ros">
  <description brief="The ROS OpenNI project">
  
    ROS OpenNI is an open source project focused on the integration of the
    PrimeSense sensors with ROS. 
  
  </description>
  <author>Maintained by Radu Bogdan Rusu, Ken Conley, Tully Foote</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/openni_kinect</url>
  <depend stack="common_msgs"/> <!-- sensor_msgs, geometry_msgs, stereo_msgs -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="image_common"/> <!-- camera_info_manager, image_transport -->
  <depend stack="image_pipeline"/> <!-- image_proc -->
  <depend stack="nodelet_core"/> <!-- nodelet -->
  <depend stack="orocos_kinematics_dynamics"/> <!-- kdl -->
  <depend stack="perception_pcl"/> <!-- pcl, pcl_ros -->
  <depend stack="ros"/> <!-- roslib -->
  <depend stack="ros_comm"/> <!-- roscpp, message_filters -->
  <depend stack="vision_opencv"/> <!-- image_geometry -->

<package name="openni"/><package name="openni_tracker"/><package name="nite"/><package name="openni_launch"/><package name="openni_camera"/><package name="depth_image_proc"/></stack><stack name="executive_trex" path="/branches/trunk_cturtle/stacks/executive_trex" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="trex">

     trex

  </description>
  <author>Maintained by Conor McGann</author>
  <license>CreativeCommons-by-nc-sa-2.0,BSD, NOSA,ZLib,Commercial,wxWindows,binary only,NOSA,LGPL,BSD,Boost,MIT</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/executive_trex</url>
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- geometry_msgs -->
  <depend stack="ros"/> <!-- rosconsole, std_msgs, roscpp -->

<package name="PLASMA"/><package name="trex"/><package name="trex_ros"/><package name="antlr"/></stack><stack name="manipulator_state_estimation" path="/trunk/stacks/manipulator_state_estimation" repo="bosch-ros-pkg" repo_host="https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg">
  <description brief="manipulator_state_estimation">manipulator_state_estimation</description>
  <author>Nikhil Deshpande, Philip Roan (maintained by Philip Roan)</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/manipulator_state_estimation</url>
  <depend stack="ros"/>

<package name="pr2_arm_state_estimation"/></stack><stack name="tidyup_interface" path="/trunk/tidyup_robot/tidyup_interface" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="tidyup_interface">This stack contains interfacing packages for the TidyUp project.</description>
  <author>Maintained by Christian Dornhege</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/tidyup_interface</url>
  <depend stack="common_msgs"/> <!-- actionlib_msgs, geometry_msgs -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- roscpp, rosmsg -->

<package name="hardcoded_facts"/><package name="tidyup_msgs"/></stack><stack name="ethzasl_drivers" path="" repo="ethzasl_drivers" repo_host="https://github.com/ethz-asl/ros-drivers">
  <description brief="ethzasl_drivers">ROS drivers made by ETHZ/ASL</description>
  <author>Maintained by Stéphane Magnenat</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ethzasl_drivers</url>
  <depend stack="ros"/>

<package name="panasonic_blc111"/><package name="vicon_bridge"/><package name="canon_vbc50i"/></stack><stack name="arm_navigation_experimental" path="" repo="arm_navigation_experimental" repo_host="https://kforge.ros.org/armnavigation/experimental">
  <description brief="arm_navigation">
    The arm navigation stack contains the action/behavior used to execute collision free motion planning and control for a robot arm manipulator. Included in this stack are the messages required for an action interface that can be used to specify and abort goals for the move_arm action. An implementation for arm navigation on the PR2 robot can be found in the pr2_arm_navigation stack. 
  </description>
  <author>Maintained by Sachin Chitta</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/arm_navigation_experimental</url>
  <depend stack="arm_navigation"/> <!-- planning_environment, planning_models, spline_smoother, robot_self_filter, kinematics_msgs, collision_space, geometric_shapes, arm_navigation_msgs -->
  <depend stack="bullet"/> <!-- bullet -->
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- geometry_msgs, actionlib_msgs, trajectory_msgs, sensor_msgs, visualization_msgs -->
  <depend stack="control"/> <!-- control_msgs -->
  <depend stack="eigen"/> <!-- eigen -->
  <depend stack="filters"/> <!-- filters -->
  <depend stack="geometry"/> <!-- tf, tf_conversions, angles -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="octomap_mapping"/> <!-- octomap, octomap_ros -->
  <depend stack="orocos_kinematics_dynamics"/> <!-- kdl -->
  <depend stack="perception_pcl"/> <!-- pcl, pcl_ros -->
  <depend stack="pluginlib"/> <!-- pluginlib -->
  <depend stack="pr2_controllers"/> <!-- pr2_controllers_msgs -->
  <depend stack="robot_model"/> <!-- kdl_parser -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_msgs, rosconsole, rospy, roscpp, std_srvs -->
  <depend stack="vision_opencv"/> <!-- image_geometry -->

<package name="distance_field"/><package name="move_arm_warehouse"/><package name="chomp_motion_planner"/><package name="collider"/><package name="trajectory_execution_monitor"/><package name="collision_proximity_planner"/><package name="collision_space_ccd"/><package name="interpolated_ik_motion_planner"/><package name="move_arm_head_monitor"/><package name="head_monitor_msgs"/><package name="collision_free_arm_trajectory_controller"/><package name="collision_space_ccd_test"/><package name="collision_proximity"/><package name="arm_navigation_experimental_tools"/><package name="collision_checking"/></stack><stack name="clearpath_platform" path="/trunk/clearpath_platform" repo="clearpath-ros-pkg" repo_host="http://clearpath-ros-pkg.googlecode.com/svn">
  <description brief="clearpath mobile platforms">
     This stack is defunct and has been supplanted by clearpath_common and clearpath_husky.
  </description>
  <author>Mike Purvis</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://clearpathrobotics.com</url>
  <depend stack="ros"/> 
</stack><stack name="people" path="/stacks/people/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="people">The people stack holds algorithms for perceiving people from a number of sensors.</description>
  <author>Maintained by Caroline Pantofaru</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/people</url>
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- sensor_msgs, actionlib_msgs, geometry_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="image_pipeline"/> <!-- stereo_msgs -->
  <depend stack="ros"/> <!-- std_srvs, std_msgs, roscpp, rosrecord -->
  <depend stack="vision_opencv"/> <!-- opencv2, image_geometry, cv_bridge -->
  <depend stack="ros_comm"/> 
<package name="face_detector"/><package name="people_msgs"/></stack><stack name="crustcrawler_smart_arm" path="/trunk/arrg/crustcrawler_smart_arm" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="crustcrawler_smartarm">crustcrawler_smartarm</description>
    <author>Maintained by Antons Rebguns</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/crustcrawler_smartarm</url>

    <depend stack="ros"/>
    <depend stack="ros_comm"/>
    <depend stack="dynamixel_motor"/>
<package name="smart_arm_kinematics"/><package name="smart_arm_controller"/><package name="smart_arm_description"/></stack><stack name="overhead_grasping" path="/trunk/overhead_grasping" repo="vanadium-ros-pkg" repo_host="http://vanadium-ros-pkg.googlecode.com/svn">
  <description brief="overhead_grasping">overhead_grasping</description>
  <author>Maintained by Michael Ferguson</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/overhead_grasping</url>
  <depend stack="ros"/>

<package name="overhead_kinematics"/></stack><stack name="shared_autonomy" path="/trunk/stacks/shared_autonomy" repo="bosch-ros-pkg" repo_host="https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg">
  <description brief="shared_autonomy">A stack for packages related to shared autonomy</description>
  <author>Charles DuHadway, Benjamin Pitzer (maintained by Benjamin Pitzer)</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/shared_autonomy</url>
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- geometry_msgs, actionlib_msgs, sensor_msgs, stereo_msgs, visualization_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="image_pipeline"/> <!-- image_proc -->
  <depend stack="joystick_drivers"/> <!-- joy -->
  <depend stack="navigation"/> <!-- base_local_planner, costmap_2d -->
  <depend stack="object_manipulation"/> <!-- object_manipulation_msgs, rviz_interaction_tools -->
  <depend stack="perception_pcl"/> <!-- pcl, pcl_ros -->
  <depend stack="pr2_apps"/> <!-- pr2_teleop -->
  <depend stack="pr2_object_manipulation"/> <!-- tabletop_object_detector, active_realtime_segmentation, tabletop_collision_map_processing, rgbd_assembler -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_msgs, roscpp -->
  <depend stack="stage"/> <!-- stage -->
  <depend stack="vision_opencv"/> <!-- opencv2, cv_bridge -->
  <depend stack="visualization"/> <!-- rviz -->
  <depend stack="visualization_common"/> <!-- ogre_tools -->

<package name="bosch_object_segmentation_gui"/><package name="grabcut_3d"/><package name="augmented_object_selection"/><package name="safe_teleop_base"/><package name="safe_teleop_stage"/><package name="safe_teleop_pr2"/></stack><stack name="OCR4ROS" path="/trunk/OCR4ROS" repo="roblab-whge-ros-pkg" repo_host="http://roblab-whge-ros-pkg.googlecode.com/svn">
  <description brief="OCR4ROS"> This stack contains packages to read doorplate information in indoor environments </description>
  <author>Maintained by B. König, C. Schäfer, B. Möller</author>
  <license>CreativeCommons BY-NC-SA License</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/OCR4ROS</url>
  <depend stack="Scan3D"/> <!-- dynamixel -->
  <depend stack="common_msgs"/> <!-- sensor_msgs, visualization_msgs -->
  <depend stack="fhge-rcf4ros"/> <!-- rcf_com_roomba_base -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="perception_pcl"/> <!-- pcl, pcl_ros -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_msgs, roscpp -->
  <depend stack="vision_opencv"/> <!-- opencv2, cv_bridge -->

<package name="DoorplateReader"/><package name="libptp"/></stack><stack name="geometry_experimental" path="" repo="geometry_experimental" repo_host="https://kforge.ros.org/geometry/experimental">
  <description brief="experimental geometry and math libraries">
    The experimental geometric and math libraries used in ros.
  </description>
  <author>Maintained by Tully Foote tfoote@willowgarage.com</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/geometry_experimental</url>
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- actionlib_msgs, geometry_msgs -->
  <depend stack="geometry"/> <!-- kdl, tf, bullet -->
  <depend stack="ros"/> <!-- roslib -->
  <depend stack="ros_comm"/> <!-- roscpp, actionlib, rosgraph, rostest, rospy, tf, geometry_msgs, actionlib_msgs -->

<package name="tf2_geometry_msgs"/><package name="tf2_ros"/><package name="test_tf2"/><package name="tf2_tools"/><package name="tf2_msgs"/><package name="tf2_kdl"/><package name="tf2_bullet"/><package name="tf2"/></stack><stack name="motion_planners" path="/stacks/motion_planners/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="motion_planners">motion_planners</description>
  <author>Maintained by Sachin Chitta</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/motion_planners</url>
  <depend stack="common"/> <!-- filters, pluginlib -->
  <depend stack="common_msgs"/> <!-- geometry_msgs, trajectory_msgs, sensor_msgs, visualization_msgs -->
  <depend stack="geometry"/> <!-- kdl, tf, eigen, angles -->
  <depend stack="kinematics"/> <!-- kinematics_base, kinematics_msgs -->
  <depend stack="motion_planning_common"/> <!-- planning_environment_msgs, planning_environment, planning_models, distance_field, mapping_msgs, motion_planning_msgs -->
  <depend stack="robot_model"/> <!-- kdl_parser -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rosconsole, rospy, roscpp -->
  <depend stack="trajectory_filters"/> <!-- spline_smoother -->

<package name="sbpl"/><package name="chomp_motion_planner"/><package name="ompl"/><package name="ompl_ros_interface"/><package name="interpolated_ik_motion_planner"/></stack><stack name="OIT_experimental" path="/trunk/OIT_experimental" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="OIT_experimental">
		OIT_experimental: experimental packages to accompany the Overhead Interaction Toolkit
	</description>
  <author>Maintained by David Feil-Seifer</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/OIT_experimental</url>
  <depend stack="ros"/>

<package name="GMM_classify"/><package name="oit_models"/><package name="oit_ekf"/><package name="feature_extractor"/></stack><stack name="maxwell_apps" path="/trunk/maxwell_apps" repo="vanadium-ros-pkg" repo_host="http://vanadium-ros-pkg.googlecode.com/svn">
  <description brief="Entry to AAAI 2011 Small Scale Manipulation Challenge">This package plays chess with a Kinect-enable robot.</description>
  <author>Maintained by Michael Ferguson</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/albany_chess</url>
  <depend stack="arbotix"/> <!-- arbotix_python -->
  <depend stack="common_msgs"/> <!-- geometry_msgs, sensor_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="ni"/> <!-- openni_camera -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- roscpp, sensor_msgs, std_msgs, rospy, tf, geometry_msgs -->
<package name="chess_msgs"/><package name="maxwell_teleop"/><package name="chess_player"/></stack><stack name="cyphy_kinect" path="" repo="cyphy" repo_host="lp:cyphy">
  <description brief="The ROS Kinect project">
  
    ROS Kinect is an open source project focused on the integration of the
    Microsoft Kinect sensor with ROS. The kinect ROS stack contains low-level
    drivers, visualization launch files, and PCL/OpenCV tutorials/demos.
  
  </description>
  <author>Maintained by Radu Bogdan Rusu, Tully Foote, Patrick Mihelich, Melonee Wise</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ros-pkg-git</url>
  <depend stack="camera_drivers"/> <!-- camera_info_manager -->
  <depend stack="common"/> <!-- nodelet -->
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="point_cloud_perception"/> <!-- pcl -->
  <depend stack="ros"/> <!-- roscpp -->
  <depend stack="vision_opencv"/> <!-- image_geometry -->

<package name="freenect"/><package name="kinect_camera"/></stack><stack name="linux_networking" path="/stacks/linux_networking/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Tools to work with linux networking">
    <p>
      Tools to work with linux networking. 
    </p>
  </description>
  <author>Maintained by Blaise Gassend</author>
  <license>GPL,BSD,LGPL,GPL for sigblock</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/linux_networking</url>
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- actionlib_msgs, diagnostic_msgs -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure -->
  <depend stack="executive_smach"/> <!-- smach_ros -->
  <depend stack="pr2_common"/> <!-- pr2_msgs -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_msgs, rostest, rospy, roscpp -->
  <depend stack="ros_tutorials"/> <!-- turtlesim -->

<package name="ieee80211_channels"/><package name="hostapd_access_point"/><package name="network_monitor_udp"/><package name="network_traffic_control"/><package name="access_point_control"/><package name="asmach_tutorials"/><package name="wpa_supplicant_node"/><package name="ddwrt_access_point"/><package name="asmach"/><package name="wpa_supplicant"/><package name="network_control_tests"/><package name="multi_interface_roam"/><package name="linksys_access_point"/><package name="network_detector"/></stack><stack name="camera_umd" path="" repo="umd-ros-pkg" repo_host="git://ram.umd.edu/ros/camera_umd.git">
  <description brief="Software for USB cameras, stereo, streaming">
    Software for USB cameras, stereo, streaming
  </description>
  <author>Ken Tossell/ktossell@umd.edu</author>
  <license>GPL,BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/camera_umd</url>
  <depend stack="common"/> <!-- nodelet -->
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure -->
  <depend stack="image_common"/> <!-- camera_info_manager, image_transport -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- roscpp -->

<package name="uvc_stereo"/><package name="uvc_camera"/><package name="jpeg_streamer"/></stack><stack name="ua_drivers" path="/trunk/arrg/ua_drivers" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="Servo, Phidget and STOC camera drivers.">
        This stack contains ROS drivers for Phidgets pressure, RFID and 
        accelerometer sensors, Phidgets InterfaceKit, Dynamixel servos,
        Videre Stereo cameras. Also includes low level C++ serial port
        interface via Gearbox project.
    </description>

    <author>Maintained by Antons Rebguns (UA Robotics Research Group)</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/ua_drivers</url>

    <depend stack="ros"/>
<package name="joystick_remapper"/><package name="logitech_usb_webcam"/><package name="videre_stereo_cam"/><package name="phidgets_py_api"/><package name="phidgets_ros"/><package name="ua_overhead_cam"/><package name="gearbox"/></stack><stack name="pr2_calibration" path="" repo="pr2_calibration" repo_host="https://kforge.ros.org/calibration/pr2_calibration">
  <description brief="Tools for calibrating the PR2's kinematics">
     Provides a toolchain running through the robot calibration process. This
     involves capturing pr2 calibration data, estimating pr2 parameters, and
     then updating the PR2 URDF.  Note that the only support API for the stack
     is the tutorial for calibrating the PR2. All of the internal APIs are not
     considered to be stable.
  </description>
  <author>Maintained by Vijay Pradeep</author>
  <license>BSD</license>  
  <review notes="" status="API and Doc Reviewed"/>
  <url>http://ros.org/wiki/pr2_calibration</url>
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- geometry_msgs, actionlib_msgs, trajectory_msgs, sensor_msgs, visualization_msgs -->
  <depend stack="geometry"/> <!-- kdl, tf -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="image_pipeline"/> <!-- stereo_image_proc, image_view -->
  <depend stack="pr2_apps"/> <!-- pr2_teleop -->
  <depend stack="pr2_common"/> <!-- pr2_msgs -->
  <depend stack="pr2_controllers"/> <!-- robot_mechanism_controllers -->
  <depend stack="robot_model"/> <!-- kdl_parser -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- roscpp, message_filters, std_msgs, actionlib_msgs, trajectory_msgs, sensor_msgs, robot_mechanism_controllers, rostest, geometry_msgs, pr2_msgs, visualization_msgs, tf, rospy, actionlib -->
  <depend stack="vision_opencv"/> <!-- opencv2, cv_bridge -->

<package name="pr2_calibration_propagation"/><package name="interval_intersection"/><package name="pr2_dense_laser_snapshotter"/><package name="pr2_calibration_estimation"/><package name="pr2_calibration_launch"/><package name="laser_joint_processor"/><package name="laser_cb_detector"/><package name="dense_laser_assembler"/><package name="pr2_calibration_executive"/><package name="calibration_msgs"/><package name="joint_states_settler"/><package name="laser_joint_projector"/><package name="pr2_se_calibration_launch"/><package name="settlerlib"/><package name="image_cb_detector"/><package name="monocam_settler"/></stack><stack name="turtlebot_apps" path="" repo="turtlebot_apps" repo_host="https://kforge.ros.org/turtlebot/turtlebot_apps">
  <description brief="turtlebot_apps">turtlebot_apps is a group of simple demos and exmaples to run on your TurtleBot to help you get started with ROS and TurtleBot.</description>
  <author>Maintained by Tully Foote and Melonee Wise</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/turtlebot_apps</url>
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- nav_msgs, sensor_msgs, geometry_msgs -->
  <depend stack="eigen"/> <!-- eigen -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="joystick_drivers"/> <!-- joy -->
  <depend stack="laser_pipeline"/> <!-- laser_geometry -->
  <depend stack="navigation"/> <!-- move_base -->
  <depend stack="nodelet_core"/> <!-- nodelet -->
  <depend stack="orocos_kinematics_dynamics"/> <!-- kdl -->
  <depend stack="perception_pcl"/> <!-- pcl_ros -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rospy, roscpp -->
  <depend stack="slam_gmapping"/> <!-- gmapping -->
  <depend stack="vision_opencv"/> <!-- opencv2, image_geometry, cv_bridge -->

<package name="turtlebot_teleop"/><package name="turtlebot_follower"/><package name="turtlebot_calibration"/><package name="turtlebot_actions"/><package name="turtlebot_navigation"/><package name="turtlebot_self_filter"/><package name="turtlebot_sounds"/></stack><stack name="uos_tools" path="" repo="uos-ros-pkg" repo_host="http://kos.informatik.uni-osnabrueck.de/uos-ros-pkg.git">
  <description brief="uos_tools">Various helper utilities not associated with a particular stack</description>
  <author>Maintained by Martin Günther</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/uos_tools</url>
  <depend stack="ros"/>

<package name="uos_gazebo_worlds"/><package name="tf_publisher_gui"/></stack><stack name="cmuipc" path="/stacks/cmuipc/trunk" repo="wu-ros-pkg" repo_host="https://wu-ros-pkg.svn.sourceforge.net/svnroot/wu-ros-pkg" version="0.1.1">
  <description brief="cmuipc">
     Packages for communicating with legacy CMU IPC systems
  </description>
  <author>Maintained by Erik Karulf</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cmuipc</url>
  <depend stack="ros"/>
  <depend stack="geometry"/>
  <depend stack="common_msgs"/>
<package name="gcm"/><package name="ipc"/></stack><stack name="reinforcement_learning" path="/trunk/stacks/reinforcement_learning" repo="rl-texplore-ros-pkg" repo_host="http://rl-texplore-ros-pkg.googlecode.com/svn">
  <description brief="reinforcement_learning">
    Reinforcement Learning framework. Repositories of agents and environments. ROS interface for reinforcement learning algorithms. Includes the TEXPLORE algorithm and real-time architecture for model-based RL. Developed by <a href="http://www.cs.utexas.edu/~todd/">Todd Hester</a> and <a href="http://www.cs.utexas.edu/~pstone/">Peter Stone</a> at the University of Texas at Austin.</description>
  <author>Maintained by Todd Hester</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/reinforcement_learning</url>
  <depend stack="ros"/>

<package name="rl_agent"/><package name="rl_common"/><package name="rl_msgs"/><package name="rl_experiment"/><package name="rl_env"/></stack><stack name="darpa_arm_msgs" path="/darpa_arm_msgs" repo="darpa_arm_msgs" repo_host="http://svn.thearmrobot.com">
  <description brief="darpa_arm_msgs">darpa_arm_msgs</description>
  <author>DARPA ARM GFE Team</author>
  <license>GPL</license>  

  <depend stack="ros"/> <!-- roscpp -->

<package name="PressureSensor_msgs"/><package name="audio_msgs"/><package name="SR4000_msgs"/><package name="prosilica_msgs"/><package name="ForceTorque_msgs"/><package name="BHand_msgs"/><package name="DPPanTilt_msgs"/><package name="TestExecution_msgs"/><package name="WAM_msgs"/><package name="Bumblebee2_msgs"/><package name="triclops_msgs"/><package name="SafetyLight_msgs"/></stack><stack name="camera_drivers" path="/stacks/camera_drivers/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="drivers for supported cameras">
    This stack contains drivers for a variety of cameras, and some
    associated tools.
  </description>
  <author>Maintained by Jack O'Quin</author>
  <license>BSD,LGPL,Commercial,GPL</license>  
  <review notes="Jan 22 2010" status="Doc Reviewed"/>
  <url>http://ros.org/wiki/camera_drivers</url>
  <depend stack="camera1394"/>
  <depend stack="common_msgs"/> <!-- sensor_msgs, diagnostic_msgs -->
  <depend stack="diagnostics"/> <!-- self_test, diagnostic_updater -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure, driver_base, timestamp_tools -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="image_common"/> <!-- polled_camera, camera_info_manager, image_transport, camera_calibration_parsers -->
  <depend stack="nodelet_core"/> <!-- nodelet -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_msgs, rostest, rospy, roscpp -->

<package name="prosilica_camera"/><package name="wge100_camera"/><package name="prosilica_gige_sdk"/><package name="wge100_camera_firmware"/></stack><stack name="qt_ros" path="" repo="qt_ros" repo_host="https://github.com/stonier/qt_ros">
  <description brief="Resources for qt usage with ros">
    This stack provides templates, tutorials and other resources that assist
    qt on ros development.
  </description>
  <author>Maintained by Daniel Stonier</author>
  <license>BSD</license>  
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/qt_ros</url>
  <depend stack="ros"/>
  <depend stack="ros_comm"/>
<package name="qt_create"/><package name="qt_tutorials"/><package name="qt_build"/></stack><stack name="ihr_tools" path="" repo="iheart-ros-pkg" repo_host="git://github.com/IHeartRobotics/iheart-ros-pkg">
  <description brief="ihr_tools">I Heart Robotics Tools</description>
  <author>Maintained by I Heart Robotics</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ihr_tools</url>
  <depend stack="ros"/>
<package name="rind"/><package name="zeroconf"/></stack><stack name="stage" path="/stacks/stage/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="stage">
     2D simulation using the Stage multi-robot simulator.
  </description>
  <author>Maintained by Brian Gerkey</author>
  <license>GPL</license>  
  <review notes="2010/01/11" status="Doc reviewed"/>
  <url>http://ros.org/wiki/stage</url>
  <depend stack="common_msgs"/> <!-- nav_msgs, geometry_msgs, sensor_msgs -->
  <depend stack="common_rosdeps"/>
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_msgs, roscpp -->

<package name="stage"/></stack><stack name="otl_nav" path="/trunk/otl_nav" repo="otl-ros-pkg" repo_host="http://otl-ros-pkg.googlecode.com/svn" version="0.1.0">
  <description brief="OTL Navigation Test Stack">

     otl_nav incluses
     otl_roomba: roomba interface by python.
     2dnav_otl_roomba: roomba navigation using ROS navigation stack
     otl_map: map data of OTL Lab.

  </description>
  <author>Maintained by Takashi Ogura</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/otl_nav</url>

<package name="2dnav_otl_roomba"/><package name="otl_ardrone"/><package name="otl_roomba"/><package name="otl_map"/></stack><stack name="tuc_pelican" path="/trunk/stacks/tuc_pelican" repo="tuc-ros-pkg" repo_host="https://borstel.etit.tu-chemnitz.de:8080/svn/tuc-ros-pkg">
  <description brief="tuc_pelican">The tuc_pelican stack contains packages for the AscTec Pelican quadrotor.</description>
  <author>Maintained by Niko Suenderhauf, Peer Neubert, Sebastian Drews</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/tuc_pelican</url>
  <depend stack="ros"/>
  <depend stack="image_common"/>
  <depend stack="kinect"/>
  <depend stack="point_cloud_perception"/>
  <depend stack="vision_opencv"/>
  <depend stack="visualization_common"/>
<package name="kinect_utils"/></stack><stack name="ua_verbs" path="/trunk/arrg/ua_verbs" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="Packages for learning verbs from human heachers.">Packages for learning verbs from human heachers.</description>
    <author>Daniel Hewlett</author>
    <license>BSD</license>  
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/ua_verbs</url>

    <depend stack="ros"/>

    <depend stack="ua_drivers"/>
    <depend stack="ua_controllers"/>
    <depend stack="ua_robots"/>
    <depend stack="ua_vision"/>
    <depend stack="wubble_world"/>

<package name="wubble_teach"/><package name="wubble_mdp"/><package name="simulation_semantics"/><package name="oomdp_msgs"/><package name="wubble_world_2d"/><package name="simulator_state"/><package name="verb_learning"/></stack><stack name="bag_experimental" path="/branches/trunk_cturtle/stacks/bag_experimental" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="bag_experimental">

     Stack for developing and testing new ROS bag-related capabilities.

  </description>
  <author>Maintained by Jeremy Leibs</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/bag_experimental</url>
  <depend stack="common_msgs"/> <!-- nav_msgs, geometry_msgs, sensor_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="ros"/> <!-- rospy, std_msgs, roscpp, rosrecord -->
  <depend stack="vision"/> <!-- cv_mech_turk -->

</stack><stack name="ros_pkg_tutorials" path="/branches/trunk_cturtle/stacks/ros_pkg_tutorials" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg" version="0.1.0">
  <description brief="ros_pkg_tutorials">

     ros_pkg_tutorials is a stack for teaching different aspects of ros-pkg.

  </description>
  <author>Maintained by Melonee Wise</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ros_pkg_tutorials</url>
  <depend stack="ros_tutorials"/> <!-- turtlesim --> 
  <depend stack="joystick_drivers"/> <!-- ps3joy --> 
  <depend stack="ros"/> <!-- roscpp --> 
  <depend stack="visualization_common"/>
  <depend stack="navigation"/>
  <depend stack="geometry"/>

<package name="actionlib_tutorials"/><package name="turtle_actionlib"/><package name="pluginlib_tutorials"/><package name="turtle_tf"/></stack><stack name="cram_physics" path="" repo="cram_physics" repo_host="git://code.in.tum.de/git/cram-physics.git">
  <description brief="cram_physics">cram_physics</description>
  <author>Maintained by Lorenz Moesenlechner</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cram_physics</url>
  <depend stack="cram_highlevel"/> <!-- cl_json_pl_client -->
  <depend stack="cram_pl"/> <!-- cram_reasoning, alexandria, cffi, cram_utilities, trivial_garbage, split_sequence -->
  <depend stack="geometry"/> <!-- tf, tf_conversions -->
  <depend stack="kinematics"/> <!-- kinematics_msgs -->
  <depend stack="robot_model"/> <!-- convex_decomposition, ivcon, urdf, kdl_parser, assimp -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- roscpp -->
  <depend stack="roslisp_common"/> <!-- cl_transforms, cl_tf -->
  <depend stack="roslisp_support"/> <!-- roslisp_runtime -->

<package name="cram_physics_utils"/><package name="cffi_ros_utils"/><package name="cl_urdf"/><package name="bullet_reasoning"/><package name="cl_opengl"/><package name="cl_bullet"/><package name="triangulate_point_cloud"/><package name="robot_mask"/><package name="kdl_arm_kinematics"/><package name="pr2_description_lowres"/><package name="cl_bullet_vis"/></stack><stack name="wbrobot" path="/trunk/wbrobot" repo="vmi-ros-pkg" repo_host="https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg">
  <description brief="vmi_whiteboard_robot">
  
  </description>
  <author>Maintained by Luis Roalter, Stefan Diewald</author>
  <license>BSD,GPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/vmi_whiteboard_robot</url>

  <depend stack="common"/> <!-- yaml_cpp -->
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="image_common"/> <!-- image_transport, camera_calibration_parsers -->
  <depend stack="ros"/> <!-- rospy, std_msgs, roscpp -->
  <depend stack="vision_opencv"/> <!-- opencv2, cv_bridge -->

<package name="wb_robot_tracking"/><package name="dynamic_uvc_cam"/><package name="wb_robot_control"/><package name="touch_display_interface"/></stack><stack name="rosorg" path="/stacks/rosorg/trunk" repo="rosorg" repo_host="https://code.ros.org/svn/ros">
  <description brief="ros.org infrastructure">Packages to support the ROS.org infrastructure.</description>
  <author>Maintained by Ken Conley</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosorg</url>
  <depend stack="ros"/>
  <depend stack="ros_release"/>
  <depend stack="documentation"/>

<package name="roswiki"/><package name="rosdoc_rosorg"/><package name="rosbrowse"/></stack><stack name="euRobotics_orocos_ws" path="" repo="euRobotics_orocos_ws" repo_host="https://github.com/bellenss/euRobotics_orocos_ws">
  <description brief="euRobotics_orocos_ws">

    Stack containing all software for the orocos workshop at the euRobotics
    Forum

  </description>
  <author>Steven Bellens, Tinne De Laet</author>
  <license>LGPLv2.1 / BSD</license>
  <review notes="" status="unreviewed"/>

  <depend stack="ros"/>
  <depend stack="orocos_toolchain_ros"/>
  <depend stack="orocos_kinematics_dynamics"/>
  <depend stack="orocos_bayesian_filtering"/>

<package name="youbot_controller"/><package name="extendedKalmanFilterComponentRobot"/><package name="youbot_simulator"/><package name="remote_simulation"/><package name="calculateDistanceToWall"/><package name="youbot_supervisor"/><package name="youbot_teleop"/></stack><stack name="motion_planning_research" path="/branches/trunk_cturtle/stacks/motion_planning_research" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="motion_planning">
     Motion Planning Algorithms
  </description>
  <author>Maintained by Sachin Chitta</author>
  <license>GPL,BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/motion_planning_research</url>
  <depend stack="collision_environment"/> <!-- distance_field -->
  <depend stack="common"/> <!-- pluginlib -->
  <depend stack="common_msgs"/> <!-- geometry_msgs -->
  <depend stack="geometry"/> <!-- tf, angles -->
  <depend stack="motion_planners"/> <!-- sbpl -->
  <depend stack="navigation"/> <!-- navfn, nav_core, map_server, costmap_2d -->
  <depend stack="pr2_doors"/> <!-- door_msgs, pr2_doors_common -->
  <depend stack="ros"/> <!-- rosconsole, std_msgs, roscpp -->

<package name="mpbench"/><package name="sbpl_planner_node"/><package name="sbpl_global_planner"/><package name="bfs_3d"/><package name="dynamic_planning"/><package name="sbpl_door_planner"/><package name="mpglue"/><package name="nepumuk"/><package name="libsunflower"/></stack><stack name="albany_vision" path="/trunk/albany_vision" repo="albany-ros-pkg" repo_host="http://albany-ros-pkg.googlecode.com/svn">
  <description brief="albany_vision">This stack contains a vision utilities developed in the ILS Social Robotics Lab, at the University of Albany, State University of New York.</description>
  <author>Maintained by Michael Ferguson</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/albany_vision</url>
  <depend stack="ccny_vision"/> <!-- ar_pose, artoolkit -->
  <depend stack="common_msgs"/> <!-- geometry_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="perception_pcl"/> <!-- pcl_ros -->
  <depend stack="ros"/> <!-- roscpp -->
  <depend stack="vision_opencv"/> <!-- opencv2, cv_bridge -->
  <depend stack="visualization_common"/> <!-- visualization_msgs -->

<package name="camera_turnpike"/><package name="ar_kinect"/></stack><stack name="communication" path="/stacks/communication/trunk" repo="wu-ros-pkg" repo_host="https://wu-ros-pkg.svn.sourceforge.net/svnroot/wu-ros-pkg" version="0.1.0">
  <description brief="communcation">Packages for communicating with the world outside ROS. Right now just contains the skype_bridge package.</description>
  <author>Maintained by Dan Lazewatsky</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/communcation</url>
  <depend stack="audio"/> <!-- audio_capture, audio_msgs -->
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- actionlib_msgs -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="ros"/> <!-- std_msgs, rospy -->
  <depend stack="vision_opencv"/> <!-- opencv2, cv_bridge -->

<package name="skype_bridge"/></stack><stack name="wg_common" path="/stacks/wg_common/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="Common code for Willow Garage robots.">Stores pakages that are widely useful to robots operating at Willow Garage.</description>
  <author>Maintained by Eitan Marder-Eppstein</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/wg_common</url>
  <depend stack="ros"/>

<package name="willow_maps"/></stack><stack name="hwu_osl_common" path="/trunk/hwu_osl_common" repo="hwu-osl-ros-pkg" repo_host="http://hwu-osl-ros-pkg.googlecode.com/svn">
  <description brief="hwu_osl_common">hwu_osl_common</description>
  <author>Maintained by Joel Cartwright</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>TODO</url>
  <depend stack="ros"/>

<package name="auv_msgs"/><package name="transport_test"/><package name="osl_core"/></stack><stack name="nxt_apps" path="" repo="foote-nxt" repo_host="https://nxt.foote-ros-pkg.googlecode.com/hg/">
  <description brief="nxt_apps">

    nxt_apps stack provides a set of common applications that can be run with the robots provided in the nxt_robot stack or 
    other custom made robots. 

  </description>
  <author>Maintained by Tully Foote, Wim Meeussen, and Melonee Wise</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/nxt_apps</url>
  <depend stack="common_msgs"/> <!-- geometry_msgs -->
  <depend stack="joystick_drivers"/> <!-- joy -->
  <depend stack="navigation"/> <!-- base_local_planner, costmap_2d -->
  <depend stack="nxt"/> <!-- nxt_ros -->
  <depend stack="nxt_robots"/> <!-- nxt_robot_gyro_car, nxt_robot_sensor_car -->
  <depend stack="ros"/>

<package name="nxt_teleop"/><package name="nxt_assisted_teleop"/></stack><stack name="jsk_coordination_system" path="/trunk/jsk_coordination_system" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="jsk_coordination_system">jsk_coordination_system</description>
  <author>Ryohei Ueda(ueda@jsk.t.u-tokyo.ac.jp)</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/jsk_coordination_system</url>
  <depend stack="ros"/>

<package name="dynamic_tf_publisher"/></stack><stack name="ecl_tools" path="/trunk/ecl_tools" repo="ecl_tools" repo_host="https://embedded-control-library.googlecode.com/svn">
  <description brief="ecl_tools">Tools and utilities for ecl development</description>
  <author>Maintained by Daniel Stonier</author>
  <license>BSD</license>  
  <review notes="" status="doc reviewed"/>
  <url>http://ros.org/wiki/ecl_tools</url>
  <depend stack="documentation"/> <!-- rosdoc -->
  <depend stack="ros"/> <!-- rosbuild -->

<package name="ecl_build"/><package name="ecl_scripts"/><package name="ecl_doc"/><package name="ecl_license"/><package name="ecl_create"/></stack><stack name="orocos_tools" path="" repo="orocos_tools" repo_host="https://github.com/RCPRG-ros-pkg/orocos_tools">
  <description brief="orocos_tools">orocos_tools</description>
  <author>Maintained by Konrad Banachowicz</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/orocos_tools</url>
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="control"/> <!-- control_msgs -->
  <depend stack="orocos_toolchain"/> <!-- rtt -->
  <depend stack="ros"/>
  <depend stack="rtt_common_msgs"/> <!-- rtt_trajectory_msgs, rtt_actionlib_msgs, rtt_geometry_msgs -->
  <depend stack="rtt_ros_comm"/> <!-- rtt_rosgraph_msgs, rtt_std_msgs -->
  <depend stack="rtt_ros_integration"/> <!-- rtt_rosnode -->

<package name="rtt_control_msgs"/><package name="oro_action_server"/></stack><stack name="lv1" path="/trunk/lv1" repo="otl-ros-pkg" repo_host="http://otl-ros-pkg.googlecode.com/svn">
  <description brief="lv1">lv1 is the stack for Robot Kitemas LV1</description>
  <author>Maintained by Takashi Ogura</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/lv1</url>
  <depend stack="ros"/>

<package name="lv1_arm"/><package name="teleop_lv1"/><package name="lv1_twitter"/><package name="lv1_msgs"/><package name="lv1_main"/><package name="lv1_image"/></stack><stack name="cwru_experimental" path="" repo="cwru-ros-pkg" repo_host="http://github.com/cwru-robotics/cwru-ros-pkg">
  <description brief="cwru_experimental">cwru_experimental</description>
  <author>Maintained by Eric Perko</author>
  <license>LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cwru_experimental</url>
  <depend stack="camera_drivers"/> <!-- camera1394 -->
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- nav_msgs, actionlib_msgs, geometry_msgs -->
  <depend stack="cwru_semi_stable"/> <!-- cwru_goal_planner, cwru_base, cwru_nav -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="image_pipeline"/> <!-- image_proc -->
  <depend stack="navigation"/> <!-- move_base_msgs, move_base -->
  <depend stack="ros"/> <!-- rospy, std_msgs, roscpp, rosmsg -->
  <depend stack="vision_opencv"/> <!-- opencv2, image_geometry, cv_bridge -->

<package name="cwru_jaus"/><package name="cwru_vision"/><package name="cwru_obstacle_planner"/><package name="wagon_handle_steering"/><package name="cwru_wsn_steering"/><package name="cwru_voice"/></stack><stack name="apps" path="" repo="wpi-rail-ros-pkg" repo_host="https://github.com/WPI-RAIL/wpi-rail-ros-pkg">
  <description brief="apps">Applications developed by the RAIL team at WPI.</description>
  <author>Maintained by Russell Toris</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/apps</url>
  <depend stack="ros"/>

<package name="nao_tools"/></stack><stack name="grasping" path="/stacks/grasping" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="The simple probabilstic grasp planner">
    A libraries to select grasping positions.
  </description>
  <author>Ulrich Klank</author>
  <license>GPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sgp</url>
  <depend stack="ros"/>

<package name="simple_grasp_planner"/><package name="pc_grasp_position"/></stack><stack name="kinematics" path="/stacks/kinematics/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="kinematics">
    This stack contains a set of kinematics messages and services that can be used for kinematic computation.
  </description>
  <author>Maintained by Sachin Chitta</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/kinematics</url>
  <depend stack="common"/> <!-- pluginlib -->
  <depend stack="common_msgs"/> <!-- sensor_msgs, trajectory_msgs, geometry_msgs -->
  <depend stack="geometry"/> <!-- kdl, tf, tf_conversions -->
  <depend stack="motion_planning_common"/> <!-- planning_models, planning_environment, motion_planning_msgs -->
  <depend stack="robot_model"/> <!-- kdl_parser -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- roscpp -->

<package name="kinematics_base"/><package name="arm_kinematics_constraint_aware"/><package name="kinematics_msgs"/></stack><stack name="lse_ressources" path="/trunk/unstable/lse_ressources" repo="isr-uc-ros-pkg" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="lse_ressources">
  
  	This stack holds handy ressources for other stacks to find. Currently only has maps of ISR.
  	
  </description>
  <author>Gonçalo Cabrita and Pedro Sousa</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/lse_ressources</url>

<package name="isr_maps"/></stack><stack name="turtlebot_simulator" path="" repo="turtlebot_simulator" repo_host="https://kforge.ros.org/turtlebot/simulator">
  <description brief="turtlebot_simulator">Turtlebot specific simulation components.</description>
  <author>Maintained by Nate Koenig</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/turtlebot_simulator</url>
  <depend stack="common_msgs"/> <!-- nav_msgs, sensor_msgs, geometry_msgs -->
  <depend stack="ros"/>
  <depend stack="simulator_gazebo"/> <!-- gazebo -->
  <depend stack="turtlebot"/> <!-- turtlebot_node -->

<package name="turtlebot_gazebo_plugins"/><package name="turtlebot_gazebo"/></stack><stack name="flirtlib_features" path="" repo="flirtlib_features" repo_host="https://kforge.ros.org/startuploc/git">
  <description brief="flirtlib_features">place recognition using 2d features on laser scans</description>
  <author>Maintained by Bhaskara Marthi</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/flirtlib_features</url>
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="occupancy_grid_utils"/> <!-- occupancy_grid_utils -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- roscpp -->
  <depend stack="warehousewg"/>
  <depend stack="visualization"/>

<package name="flirtlib"/><package name="flirtlib_ros"/><package name="wg_flirtlib"/></stack><stack name="object_manipulation" path="/stacks/object_manipulation/branches/0.4-branch" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="object_manipulation">
    Functionality for performing object pickup and placing, while
    avoiding collisions with the environment. This stack is designed
    to be robot independent. It contains a complete interface for
    pickup and place tasks, as well as general implementation of most
    of the needed functionality.


  </description>
  <author>Maintained by Matei Ciocarlie</author>
  <license>BSD,except for source files individually marked otherwise</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/object_manipulation</url>
  <depend stack="arm_navigation"/> <!-- move_arm_msgs -->
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- stereo_msgs, actionlib_msgs, trajectory_msgs, sensor_msgs, geometry_msgs, visualization_msgs -->
  <depend stack="geometry"/> <!-- tf, eigen, eigen_conversions -->
  <depend stack="kinematics"/> <!-- kinematics_msgs -->
  <depend stack="motion_planners"/> <!-- interpolated_ik_motion_planner -->
  <depend stack="motion_planning_common"/> <!-- geometric_shapes_msgs, motion_planning_msgs, mapping_msgs, planning_environment_msgs -->
  <depend stack="pr2_controllers"/> <!-- pr2_controllers_msgs -->
  <depend stack="pr2_mechanism"/> <!-- pr2_mechanism_msgs -->
  <depend stack="ros"/> <!-- roslib -->
  <depend stack="ros_comm"/> <!-- rospy, rosservice, std_msgs, roscpp, rosgraph -->
  <depend stack="sql_database"/> <!-- database_interface -->
  <depend stack="visualization"/> <!-- rviz -->
  <depend stack="visualization_common"/> <!-- ogre_tools -->

<package name="static_transform_broadcaster"/><package name="bayesian_grasp_planner"/><package name="object_manipulation_msgs"/><package name="household_objects_database"/><package name="household_objects_database_msgs"/><package name="probabilistic_grasp_planner"/><package name="object_manipulator"/><package name="rviz_interaction_tools"/></stack><stack name="py_various" path="/trunk/py_various" repo="vmi-ros-pkg" repo_host="https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg">
  <description brief="External Dependencies Python Various">
  This stack contains various external dependencies and patches which
  cannot be installed directly by rosdep. Probably some of them will
  be moved to rosdep soon.
  
  </description>
  <author>Maintained by Luis Roalter</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/py_various</url>
  <depend stack="ros"/>

<package name="python_pmw"/></stack><stack name="find_object" path="/branches/trunk_cturtle/stacks/find_object" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="find_object">find_object</description>
  <author>Maintained by Bhaskara Marthi</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/find_object</url>
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- nav_msgs, geometry_msgs, actionlib_msgs, sensor_msgs -->
  <depend stack="executive_smach"/> <!-- smach -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="graph_mapping"/> <!-- occupancy_grid_utils -->
  <depend stack="laser_pipeline"/> <!-- laser_assembler, laser_geometry -->
  <depend stack="navigation"/> <!-- move_base_msgs, navfn, costmap_2d -->
  <depend stack="object_manipulation"/> <!-- object_manipulator, object_manipulation_msgs -->
  <depend stack="point_cloud_perception"/> <!-- pcl -->
  <depend stack="point_cloud_perception_experimental"/> <!-- point_cloud_python -->
  <depend stack="pr2_controllers"/> <!-- pr2_controllers_msgs -->
  <depend stack="ros"/> <!-- rospy, roscpp -->
  <depend stack="tabletop_object_perception"/> <!-- tabletop_object_detector, tabletop_collision_map_processing -->

<package name="find_object_actions"/><package name="find_object_executive"/><package name="table_boundary_detector"/><package name="stage_msgs"/><package name="find_object_msgs"/><package name="find_object_planner"/><package name="table_clutter_detector"/><package name="stage_extensions"/></stack><stack name="image_transport_plugins" path="/stacks/image_transport_plugins/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Plugins for specialized network image transport">
    A set of plugins for publishing and subscribing to sensor_msgs/Image topics in representations other than raw pixel data. For example, for viewing a stream of images off-robot, a video codec will give much lower bandwidth and latency. For low frame rate tranport of high-definition images, you might prefer sending them as JPEG or PNG-compressed form.
  </description>
  <author>Maintained by Patrick Mihelich</author>
  <license>BSD</license>  
  <review notes="2010/10/10" status="Doc reviewed"/>
  <url>http://ros.org/wiki/image_transport_plugins</url>
  <depend stack="common"/> <!-- pluginlib -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rosbagmigration -->
  <depend stack="vision_opencv"/> <!-- opencv2, cv_bridge -->

<package name="compressed_image_transport"/><package name="theora_image_transport"/></stack><stack name="starmac_demos" path="" repo="starmac-ros-pkg" repo_host="https://bitbucket.org/bouffard/starmac-ros-pkg">
  <description brief="starmac_demos">
  
  Various demonstrations/experimental setups
  
  </description>
  <author>Maintained by Patrick Bouffard</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/starmac_demos</url>
  <depend stack="common"/> <!-- nodelet, pluginlib -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rospy -->
  <depend stack="starmac_common"/> <!-- starmac_roshlib -->
  <depend stack="starmac_flyer"/> <!-- flyer_controller, flyer_kinect, flyer_common -->

<package name="starmac_kinect_obstacle_avoidance"/></stack><stack name="xsens_hardware" path="" repo="xsens_hardware" repo_host="http://git.mech.kuleuven.be/robotics/xsens_hardware.git">
  <description brief="xsens_hardware">

    Stack to interface Xsens MTI devices. The <a href="http://www.ros.org/wiki/xsens_mti">xsens_mti</a> package contains the low level library to access the IMU data. <a href="http://www.ros.org/wiki/xsens_component">xsens_component</a> is an Orocos component, wrapped around <a href="http://www.ros.org/wiki/xsens_mti">xsens_mti</a>, streaming all data to ROS topics.

  </description>
  <author>Steven Bellens, steven.bellens@mech.kuleuven.be</author>
  <license>LGPLv2.1 / BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki</url>
  <depend stack="ros"/>
  <depend stack="orocos_toolchain"/>
  <depend stack="rtt_ros_integration"/>
  <depend stack="rtt_geometry"/>
<package name="xsens_component"/><package name="xsens_mti"/></stack><stack name="occupancy_grid_utils" path="" repo="occupancy_grid_utils" repo_host="https://kforge.ros.org/gridutils/git">
  <description brief="occupancy_grid_utils">Library for occupancy grids.</description>
  <author>Bhaskara Marthi</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/occupancy_grid_utils</url>
  <depend stack="bullet"/> <!-- bullet -->
  <depend stack="common_msgs"/> <!-- nav_msgs, sensor_msgs, geometry_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="laser_pipeline"/> <!-- laser_geometry -->
  <depend stack="navigation"/> <!-- map_server -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rospy, roscpp -->

  <version>0.4.0</version>

<package name="occupancy_grid_utils"/></stack><stack name="pr2_navigation" path="" repo="pr2_navigation" repo_host="https://kforge.ros.org/pr2navigation/hg">
  <description brief="Common configuration options for planar navigation applications on the PR2 robot.">
  The pr2_navigation stack holds common configuration options for running the
  <a href="http://www.ros.org/wiki/navigation">navigation</a> stack on a PR2 robot. The packages in this stack are used by
  many PR2-specific applications that use planar navigation.
  </description>
  <author>Maintained by Eitan Marder-Eppstein</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_navigation</url>
  <depend stack="common"/> <!-- actionlib, filters -->
  <depend stack="common_msgs"/> <!-- geometry_msgs, actionlib_msgs, sensor_msgs -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure -->
  <depend stack="geometry"/> <!-- tf, eigen, bullet -->
  <depend stack="laser_pipeline"/> <!-- laser_filters, laser_geometry -->
  <depend stack="navigation"/> <!-- move_base, move_base_msgs, amcl -->
  <depend stack="pr2_apps"/> <!-- pr2_teleop -->
  <depend stack="pr2_common"/> <!-- pr2_machine, pr2_msgs -->
  <depend stack="pr2_common_actions"/> <!-- pr2_tilt_laser_profile -->
  <depend stack="robot_model"/> <!-- urdf, resource_retriever -->
  <depend stack="ros"/> <!-- topic_tools, rospy, roscpp, message_filters -->
  <depend stack="slam_gmapping"/> <!-- gmapping -->
  <depend stack="visualization_common"/> <!-- visualization_msgs -->

<package name="pr2_navigation_teleop"/><package name="pr2_move_base"/><package name="laser_tilt_controller_filter"/><package name="ground_scan_detector"/><package name="pr2_navigation_slam"/><package name="pr2_navigation_config"/><package name="ground_scan_assembler"/><package name="semantic_point_annotator"/><package name="pr2_navigation_self_filter"/><package name="pr2_navigation_perception"/><package name="pr2_navigation_local"/><package name="pr2_navigation_global"/></stack><stack name="exploration" path="/trunk/stacks/exploration" repo="bosch-ros-pkg" repo_host="https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg">
  <description brief="exploration stack">
     A 2D exploration library that builds on top of the 2D navigation stack provided by Willow Garage.
  </description>
  <author>Charles DuHadway (maintained by Benjamin Pitzer)</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/exploration</url>
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- nav_msgs, geometry_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="navigation"/> <!-- move_base, move_base_msgs, navfn, costmap_2d -->
  <depend stack="ros"/> <!-- roslib, std_msgs, roscpp -->
  <depend stack="simulator_stage"/> <!-- stage -->
  <depend stack="slam_gmapping"/> <!-- gmapping -->
  <depend stack="visualization_common"/> <!-- visualization_msgs -->

<package name="explore_stage"/><package name="explore"/></stack><stack name="meka_robot" path="/branches/trunk_cturtle/sandbox/meka_robot" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="meka_robot">meka_robot</description>
  <author>Maintained by Sachin Chitta</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/meka_robot</url>
  <depend stack="ros"/>

<package name="m3_arm_navigation_test"/><package name="m3_gazebo_plugins"/><package name="m3_planning"/><package name="m3_full_description"/><package name="m3_controller_configuration"/><package name="m3_gazebo"/></stack><stack name="otl_geometry" path="/trunk/otl_geometry" repo="otl-ros-pkg" repo_host="http://otl-ros-pkg.googlecode.com/svn">
  <description brief="otl_geometry">otl_geometry is geometric libraries of OTL</description>
  <author>Maintained by Takashi Ogura</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/otl_geometry</url>
  <depend stack="ros"/>

<package name="egeometry"/></stack><stack name="multimaster_experimental" path="/stacks/multimaster_experimental/trunk" repo="multimaster_experimental" repo_host="https://code.ros.org/svn/ros">
  <description brief="multimaster_experimental">Experimental packages exploring different techniques for running nodes in a multiple ROS master setup.</description>
  <author>Maintained by Ken Conley</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/multimaster_experimental</url>
  <depend stack="ros"/> 
  <depend stack="ros_comm"/> <!-- roscpp, xmlrpcpp, roslib, rosgraph, topic_tools, rosservice, rospy, rostopic -->

<package name="app_manager_tutorial"/><package name="foreign_relay"/><package name="rosproxy"/><package name="ronin"/><package name="pyqrnative"/><package name="app_manager_android"/><package name="app_manager"/></stack><stack name="humanoid_msgs" path="/trunk/humanoid_msgs" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="Messages and services for humanoid robots">
    Messages and services for humanoid robots
    </description>
  <author>Maintained by Armin Hornung</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/humanoid_msgs</url>
  <depend stack="common_msgs"/> <!-- geometry_msgs -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/>

<package name="humanoid_nav_msgs"/></stack><stack name="ros_tutorials" path="/stacks/ros_tutorials/trunk" repo="ros_tutorials" repo_host="https://code.ros.org/svn/ros">
  <description brief="ros_tutorials">

    ros_tutorials contains packages that demonstrate various features of ROS, as well as support packages which help demonstrate those features.

  </description>
  <author>Maintained by Josh Faust, Ken Conley</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ros_tutorials</url>
  <depend stack="ros"/> <!-- roslib -->
  <depend stack="ros_comm"/> <!-- rosconsole, std_srvs, roscpp, std_msgs, rostest, rospy -->

<package name="rospy_tutorials"/><package name="roscpp_tutorials"/><package name="turtlesim"/></stack><stack name="pr2_ethercat_drivers" path="/stacks/pr2_ethercat_drivers/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="Drivers related to PR2 ethercat hardware">
    This stack contains drivers for the ethercat system and the peripherals
    that connect to it: motor control boards, fingertip sensors, texture
    projector, hand accelerometer.
  </description>
  <author>Maintained by Derek King</author>
  <license>BSD,binary only,GPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_ethercat_drivers</url>
  <depend stack="common_msgs"/> <!-- geometry_msgs, diagnostic_msgs, visualization_msgs -->
  <depend stack="diagnostics"/> <!-- diagnostic_updater -->
  <depend stack="pluginlib"/> <!-- pluginlib -->
  <depend stack="pr2_common"/> <!-- pr2_msgs -->
  <depend stack="pr2_mechanism"/> <!-- pr2_hardware_interface, realtime_tools -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rostest, rospy, roscpp -->
  <depend stack="rx"/> <!-- wxswig -->

<package name="ethercat_hardware"/><package name="eml"/><package name="fingertip_pressure"/></stack><stack name="ethzasl_message_transport" path="" repo="ethzasl_message_transport" repo_host="https://github.com/ethz-asl/ros-message-transport">
  <description brief="ethzasl_message_transport">Generic message transport plugin architecture</description>
  <author>Maintained by Cedric Pradalier</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ethzasl_message_transport</url>
  <depend stack="common"/> <!-- pluginlib -->
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="image_transport_plugins"/> <!-- libtheora -->
  <depend stack="ros"/> <!-- message_filters -->
  <depend stack="vision_opencv"/> <!-- opencv2, cv_bridge -->

<package name="pointcloud_transport"/><package name="udpmulti_transport"/><package name="imagem_transport"/><package name="message_transport_common"/><package name="sharedmem_transport"/><package name="compressed_imagem_transport"/><package name="theora_imagem_transport"/></stack><stack name="hrl_experiments" path="/trunk/hrl/hrl_experiments" repo="gt-ros-pkg" repo_host="http://gt-ros-pkg.googlecode.com/svn">
  <description brief="hrl_experiments">
  
  Contains packages with code for running various experiments.
  
  </description>
  <author>Maintained by Kelsey Hawkins</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/hrl_experiments</url>
  <depend stack="ros"/>

<package name="hrl_rfh_summer_2011"/><package name="hrl_phri_2011"/><package name="hrl_rfh_fall_2011"/><package name="hrl_hfa_2011"/></stack><stack name="Corobot" path="/trunk/Corobot" repo="roscorobot" repo_host="http://svn.code.sf.net/p/roscorobot/code">
  <description brief="Corobot">Corobot</description>
  <author>Morgan Cormier/mcormier@coroware.com</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/Corobot</url>
  <depend stack="ros"/>
<package name="corobot_pantilt"/><package name="PhidgetMotor"/><package name="corobot_phidgetIK"/><package name="corobot_ssc32"/><package name="corobot_teleop"/><package name="corobot_camera"/><package name="corobot_joystick"/><package name="corobot_srvs"/><package name="PhidgetServo"/><package name="corobot_hokuyo"/><package name="corobot_arm"/></stack><stack name="camera_pose" path="" repo="camera_pose" repo_host="https://kforge.ros.org/calibration/camera_pose">
  <description brief="Camera Estimatino">
    This stack contains a set of tools to work with multiple rgb
    camera's simultaneoulsy.
  </description>
  <author>Vijay Pradeep, Wim Meeussen, Yiping Liu</author>
  <license>BSD</license>  
  <review notes="" status="Doc reviewed"/>
  <url>http://ros.org/wiki/camera_pose</url>
  <depend stack="common_msgs"/> <!-- sensor_msgs, geometry_msgs, stereo_msgs -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure -->
  <depend stack="geometry"/> <!-- tf, tf_conversions -->
  <depend stack="geometry_experimental"/> <!-- tf2_kdl, tf2_ros -->
  <depend stack="orocos_kinematics_dynamics"/> <!-- kdl -->
  <depend stack="pr2_calibration"/> <!-- interval_intersection, monocam_settler, image_cb_detector, calibration_msgs, joint_states_settler -->
  <depend stack="robot_model"/> <!-- robot_state_publisher, kdl_parser -->
  <depend stack="ros"/> <!-- roslib -->
  <depend stack="ros_comm"/> <!-- rospy, std_msgs, roscpp, message_filters -->
  <depend stack="vision_opencv"/> <!-- opencv2, cv_bridge -->

<package name="camera_pose_toolkits"/><package name="camera_pose_calibration"/><package name="kinect_depth_calibration"/></stack><stack name="sbl_experimental" path="/trunk/sbl_experimental" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="sbl">sbl</description>
  <author>Maintained by Ross Mead and Edward T. Kaszubski</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sbl</url>
  <depend stack="ros"/>
  <depend stack="common_msgs"/> <!-- visualization_msgs, nav_msgs -->
  <depend stack="driver_common"/> <!-- driver_base -->
  <depend stack="geometry"/> <!-- tf, bullet -->
  <depend stack="ros_comm"/> <!-- roscpp -->
  <depend stack="perception_pcl"/> <!-- pcl, pcl_ros -->
  <depend stack="quickdev"/> <!-- quickdev_cpp -->
  <depend stack="humanoid"/> <!-- humanoid_recognizers -->

<package name="deictic_recognizers"/><package name="proxemic_controllers"/><package name="proxemic_recognizers"/><package name="proxemic_models"/><package name="sbl_launch"/><package name="oculesics_controllers"/></stack><stack name="pr2_common_alpha" path="/stacks/pr2_common_alpha/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_common_alpha">pr2_common_alpha</description>
  <author>Maintained by John Hsu</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_common_alpha</url>
  <depend stack="common_msgs"/> <!-- trajectory_msgs, sensor_msgs -->
  <depend stack="joystick_drivers"/> <!-- joy -->
  <depend stack="robot_model"/> <!-- convex_decomposition, ivcon, urdf -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- roscpp -->
  <depend stack="xacro"/> <!-- xacro -->

<package name="teleop_head"/><package name="pr2_defs"/></stack><stack name="itasc" path="" repo="itasc" repo_host="http://git.mech.kuleuven.be/robotics/itasc.git">
  <description brief="itasc">itasc</description>
  <author>Maintained by Dominick Vanthienen</author>
  <license>BSD,LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://orocos.org</url>
  <depend stack="ros"/>
  <depend stack="itasc_core"/>
  <depend stack="itasc_solvers"/>
  <!--depend stack="itasc_robots_objects" /-->
  <depend stack="itasc_tasks"/>
</stack><stack name="brown_remotelab" path="/trunk/distribution/brown_remotelab" repo="brown-ros-pkg" repo_host="http://brown-ros-pkg.googlecode.com/svn">
  <description brief="brown_remotelab">Infrastructure for remote labs, remote teleoperation, and teleprescence robotics</description>
  <author>Maintained by Christopher Crick, Trevor Jay, and Sarah Osentoski</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/brown_remotelab</url>
  <depend stack="common_msgs"/> <!-- geometry_msgs, sensor_msgs -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_msgs, rospy -->
  <depend stack="vision_opencv"/> <!-- opencv2, cv_bridge -->

<package name="rosbridge"/><package name="teleop_twist_keyboard"/></stack><stack name="mavlink-ros-pkg" path="" repo="mavlink-ros-pkg" repo_host="https://github.com/pixhawk/mavlink-ros-pkg">
  <description brief="mavlink-ros-pkg"/>
  <author>Maintained by Lorenz Meier, Petri Tanskanen, Lionel Heng</author>
  <license>,BSD</license>  
  <review notes="Unstable and in active development" status="unreviewed"/>
  <url>http://www.ros.org/wiki/mavlink-ros-pkg</url>
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- actionlib_msgs, geometry_msgs -->
  <depend stack="diagnostics"/> <!-- diagnostic_updater -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- roscpp -->

<package name="lcm_mavlink_ros"/><package name="serial_mavlink_ros"/><package name="mavconn_asctec"/></stack><stack name="simvid" path="/trunk/simvid" repo="vmi-ros-pkg" repo_host="https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg">
  <description brief="Export ROS images to a video device.">
    simvid contains an image sink that allows to export ROS images to v4l2 compatible video devices.<br/>
    The image sink includes a modified version v4l2loopback. This virtual video loopback device can be used to export ROS image streams to the local pc.<br/>
    <br/>
    The stack further holds several tools for getting images out of a Gazebo simulations.
  </description>
  <author>Maintained by Luis Roalter and Stefan Diewald</author>
  <license/>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/simvid</url>
  <depend stack="ros"/>

<package name="sim_camera"/><package name="image_sink"/></stack><stack name="rosh_core" path="" repo="rosh_core" repo_host="https://kforge.ros.org/rosh/rosh_core">
  <description brief="rosh_core">
     Main ROSH scripting and interpreter environment.
  </description>
  <author>Maintained by Ken Conley</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosh_core</url>
  <depend stack="ros"/> <!-- roslib, rosclean -->
  <depend stack="ros_comm"/> <!-- rosparam, rosgraph, rosmaster, rosout, rosservice, rospy, rostopic, rosnode, rosmsg -->

<package name="rosh"/><package name="roshlaunch"/></stack><stack name="roslisp_common_tutorials" path="/branches/trunk_cturtle/stacks/roslisp_common_tutorials" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="roslisp_common_tutorials">roslisp_common_tutorials</description>
  <author>Maintained by Lorenz Moesenlechner</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/roslisp_common_tutorials</url>
  <depend stack="ros"/>
  <depend stack="ros_pkg_tutorials"/> <!-- actionlib_tutorials -->
  <depend stack="roslisp_common"/> <!-- actionlib_lisp -->
  <depend stack="roslisp_support"/> <!-- roslisp_runtime -->

<package name="actionlib_lisp_examples"/></stack><stack name="nao" path="/trunk/nao" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="Transitional stack, use nao_robot and nao_common   instead">
  <p>The nao stack for ROS integration of the Nao humanoid is now
  split into two stacks, please use them directly: <a href="http://www.ros.org/wiki/nao_robot">nao_robot</a> and <a href="http://www.ros.org/wiki/nao_common">nao_common</a>.
  </p>  
  </description>
  <author>Maintained by Armin Hornung</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/nao</url>
  <depend stack="ros"/>
  <depend stack="nao_robot"/>
  <depend stack="nao_common"/>

</stack><stack name="odor_tools" path="/trunk/unstable/odor_tools" repo="isr-uc-ros-pkg" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="odor_tools">
  
  	This stack holds tools for mobile robot odor experiments.
  	
  </description>
  <author>Gonçalo Cabrita and Pedro Sousa</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/odor_tools</url>
  <depend stack="ros"/>

<package name="virtual_nose"/><package name="odor_bar"/></stack><stack name="pioneer_arm" path="/trunk/humans/pioneer_arm" repo="gt-ros-pkg" repo_host="http://gt-ros-pkg.googlecode.com/svn">
  <description brief="Contains packages for controlling and simulating a Pioneer 5-DOF robotic arm">
  
  	Contains packages for controlling and simulating a Pioneer 5-DOF robotic arm
  	
  </description>
  <author>Maintained by Stephen Williams</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pioneer_arm</url>
  
  <depend stack="ros"/>
  <depend stack="robot_model"/>
  <depend stack="p2os"/>

<package name="p2os_with_arm_driver"/><package name="pioneer_arm_description"/><package name="pioneer_arm_launch"/></stack><stack name="roll" path="" repo="roll" repo_host="http://code.in.tum.de/git/roll.git">
  <description brief="Robot Learning Language">
    Extension of the CRAM Plan Language to include experience-based learning
  </description>
  <author>Maintained by Alexandra Kirsch</author>
  <license>GPL,Public domain, cl_libsvm, clmd5, cl_port, clsql, uffi</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/roll</url>
  <depend stack="ros"/>
  <depend stack="cram_pl"/>

<package name="robot_learning_language"/><package name="uffi"/><package name="cl_libsvm"/><package name="clsql"/><package name="clmd5"/><package name="cl_port"/></stack><stack name="rtcus_applications" path="/trunk/rtcus_applications" repo="rtc-us-ros-pkg-trunk" repo_host="https://rtc-us-ros-pkg.svn.sourceforge.net/svnroot/rtc-us-ros-pkg">
  <description brief="rtcus_applications">rtcus_applications</description>
  <author>Maintained by Pablo Iñigo Blasco</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rtcus_applications</url>
  <depend stack="common_msgs"/> <!-- nav_msgs, geometry_msgs, sensor_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="joystick_drivers"/> <!-- joy -->
  <depend stack="orocos_kinematics_dynamics"/> <!-- kdl -->
  <depend stack="robot_model"/> <!-- urdf -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_msgs, rospy -->

<package name="rtcus_erratic_slam"/><package name="cytonRobotDescription"/><package name="mrw_simulator_server"/><package name="mrw_robot_agent"/><package name="cyton_node"/><package name="cyton_driver"/></stack><stack name="vmi_android" path="/trunk/vmi_android" repo="vmi-ros-pkg" repo_host="https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg">
  <description brief="ROS on Android">
   Dependencies and tools for creating and running ROS nodes on Android powered devices.
  </description>
  <author>Maintained by Luis Roalter, Stefan Diewald</author>
  <license/> 
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/vmi_android</url>
  <depend stack="ros"/>
<package name="android"/><package name="android_ce_control"/></stack><stack name="jsk_android_apps" path="/trunk/jsk_android_apps" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">

  <description brief="jsk_android_apps">
    jsk_android_apps
  </description>
  <author>Maintained by Kei Okada, Haseru Chen, Manabu Saito</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/jsk_android_apps</url>
  <depend stack="ros"/>

<package name="hrp4_pan_tilt"/><package name="pr2_hello_world"/><package name="local_app_manager"/><package name="startup"/></stack><stack name="polonius" path="/stacks/polonius/trunk" repo="wu-ros-pkg" repo_host="https://wu-ros-pkg.svn.sourceforge.net/svnroot/wu-ros-pkg">
  <description brief="polonius">polonius</description>
  <author>Maintained by David!!</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/polonius</url>
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- actionlib_msgs -->
  <depend stack="executive_smach"/> <!-- smach_ros, smach -->
  <depend stack="pr2_controllers"/> <!-- trajectory_msgs, pr2_controllers_msgs -->
  <depend stack="ros"/> <!-- rospy, rostopic -->
  <depend stack="wu_robots"/> <!-- lewis -->

<package name="polonius_interface"/><package name="polonius_demo"/><package name="polonius_engine"/><package name="polonius_msgs"/></stack><stack name="nxt" path="" repo="foote-nxt" repo_host="https://nxt.foote-ros-pkg.googlecode.com/hg/">
  <description brief="A stack for interacting with Lego NXT">
    This stack has basic interfaces for interacting with ROS and NXT. The software in this 
    stack is intended to run on top of the default NXT firmware provided by lego. 
  </description>
  <author>Maintained by Tully Foote, Wim Meeussen, and Melonee Wise</author>
  <license>BSD</license>  
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/nxt</url>
  <depend stack="common_msgs"/> <!-- nav_msgs, geometry_msgs, sensor_msgs -->
  <depend stack="geometry"/> <!-- tf, tf_conversions -->
  <depend stack="orocos_kinematics_dynamics"/> <!-- kdl -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_msgs, rospy, roscpp -->
  <depend stack="visualization"/> <!-- rviz -->

<package name="nxt_rviz_plugin"/><package name="nxt_python"/><package name="nxt_description"/><package name="nxt_msgs"/><package name="nxt_lxf2urdf"/><package name="nxt_ros"/><package name="nxt_controllers"/></stack><stack name="bullet" path="" repo="bullet" repo_host="https://kforge.ros.org/geometry/bullet">
  <description brief="geometry and math libraries">
    The basic geometric and math libraries used in ros.
  </description>
  <author>Maintained by Tully Foote tfoote@willowgarage.com</author>
  <license>BSD,LGPL,ZLib</license>  
  <review notes="2009-10-07" status="doc reviewed"/>
  <url>http://ros.org/wiki/bullet</url>
  <depend stack="ros"/>
  <depend stack="common_rosdeps"/>

<package name="bullet"/></stack><stack name="dfki_sks_laser_drivers" path="/trunk/dfki_sks_laser_drivers" repo="dfki-sks-ros-pkg" repo_host="https://svn-agbkb.informatik.uni-bremen.de/dfki-sks-ros-pkg">
  <description brief="dfki_sks_laser_drivers">
    The dfki_sks_laser_drivers stack contains ROS laser rangefinder
    driver nodes developed at
    the <a href="http://www.dfki.de/">DFKI</a> <a href="http://dfki.de/sks">Safe
    and Secure Cognitive Systems</a> research department in Bremen,
    Germany.
  </description>
  <author>Maintained by Rene Wagner</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/dfki_sks_laser_drivers</url>
  <depend stack="ros"/>

<package name="rod4_node"/><package name="timeutils"/></stack><stack name="urdf_tools" path="/stacks/urdf_tools/trunk" repo="wu-ros-pkg" repo_host="https://wu-ros-pkg.svn.sourceforge.net/svnroot/wu-ros-pkg">
  <description brief="Tools for use with URDF Models">This package contains a number of tools for making, viewing and using URDF models.</description>
  <author>Maintained by David Lu!!</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/urdf_tools</url>
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="geometry"/> <!-- tf, tf_conversions -->
  <depend stack="kinematics"/> <!-- kinematics_msgs -->
  <depend stack="robot_model"/> <!-- robot_state_publisher, urdf, kdl_parser -->
  <depend stack="ros"/> <!-- rospy, roscpp -->

<package name="joint_state_publisher"/><package name="simmechanics_to_urdf"/><package name="urdf_python"/><package name="arm_kinematics"/><package name="simmechanics_tutorial"/><package name="urdf_tutorial"/></stack><stack name="pr2_self_test" path="/stacks/pr2_self_test/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="Runs PR2 self-checks on robot.">
Packages for running PR2 self-tests and bringup checks onboard robot.
  </description>
  <author>Kevin Watts</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_self_test</url>
  <depend stack="common"/> <!-- actionlib, pluginlib -->
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="image_pipeline"/> <!-- camera_calibration, image_view -->
  <depend stack="pr2_apps"/> <!-- pr2_mannequin_mode -->
  <depend stack="pr2_controllers"/> <!-- robot_mechanism_controllers, control_toolbox, pr2_controllers_msgs, ethercat_trigger_controllers -->
  <depend stack="pr2_mechanism"/> <!-- pr2_controller_manager, pr2_mechanism_model, realtime_tools, pr2_hardware_interface, pr2_controller_interface -->
  <depend stack="pr2_robot"/> <!-- pr2_controller_configuration, pr2_bringup -->
  <depend stack="robot_model"/> <!-- urdf -->
  <depend stack="ros"/> <!-- rospy, std_msgs, roscpp -->

<package name="pr2_bringup_tests"/><package name="pr2_counterbalance_check"/><package name="pr2_self_test_msgs"/><package name="joint_qualification_controllers"/></stack><stack name="worldmodel" path="" repo="worldmodel" repo_host="https://kforge.ros.org/worldmodel/hg">
  <description brief="worldmodel">worldmodel</description>
  <author>Maintained by Bhaskara Marthi</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/worldmodel</url>
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- nav_msgs, geometry_msgs, sensor_msgs, stereo_msgs, visualization_msgs -->
  <depend stack="continuous_ops"/> <!-- continuous_ops_msgs, continuous_ops_task_manager -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure, driver_base -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="navigation"/> <!-- move_base_msgs -->
  <depend stack="nodelet_core"/> <!-- nodelet -->
  <depend stack="openni_kinect"/> <!-- openni_camera -->
  <depend stack="perception_pcl"/> <!-- pcl, pcl_ros -->
  <depend stack="pr2_common_actions"/> <!-- pr2_common_action_msgs -->
  <depend stack="pr2_controllers"/> <!-- pr2_controllers_msgs -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rospy, topic_tools, std_srvs, message_filters -->
  <depend stack="vision_opencv"/> <!-- opencv2, image_geometry, cv_bridge -->
  <depend stack="warehousewg"/> <!-- mongodb, mongo_ros -->

<package name="semantic_model_web_interface"/><package name="semanticmodel"/><package name="worldmodel_ops"/></stack><stack name="power_supplies" path="" repo="umd-ros-pkg" repo_host="git://ram.umd.edu/ros/power_supplies.git">
  <description brief="power_supplies">power_supplies</description>
  <author>Maintained by </author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/power_supplies</url>

<package name="power_srvs"/><package name="power_msgs"/><package name="ctx2140"/><package name="m4atx"/></stack><stack name="pr2_doors" path="" repo="pr2_doors" repo_host="https://kforge.ros.org/doors/hg">
  <description brief="pr2_doors">The pr2_doors stack provides the building blocks and integration to allow the PR2 to autonomously detect and open doors.</description>
  <author>Wim Meeussen, John Hsu, Jon Bohren, Marius Muja</author>
  <license>BSD,LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_doors</url>
  <depend stack="arm_navigation"/> <!-- mapping_msgs -->
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- stereo_msgs, actionlib_msgs, sensor_msgs, geometry_msgs, visualization_msgs, diagnostic_msgs -->
  <depend stack="common_rosdeps"/> <!-- common_rosdeps -->
  <depend stack="diagnostics"/> <!-- diagnostic_updater -->
  <depend stack="executive_smach"/> <!-- smach_ros, smach -->
  <depend stack="geometry"/> <!-- tf, angles -->
  <depend stack="laser_pipeline"/> <!-- laser_assembler -->
  <depend stack="navigation"/> <!-- move_base_msgs, base_local_planner, costmap_2d -->
  <depend stack="orocos_kinematics_dynamics"/> <!-- kdl -->
  <depend stack="pluginlib"/> <!-- pluginlib -->
  <depend stack="pr2_common"/> <!-- pr2_msgs, pr2_machine -->
  <depend stack="pr2_common_actions"/> <!-- joint_trajectory_generator, pr2_common_action_msgs, pr2_arm_move_ik -->
  <depend stack="pr2_controllers"/> <!-- control_toolbox, pr2_controllers_msgs -->
  <depend stack="pr2_mechanism"/> <!-- pr2_controller_manager, pr2_mechanism_model, pr2_controller_interface, realtime_tools, pr2_mechanism_msgs -->
  <depend stack="pr2_navigation"/> <!-- pr2_navigation_teleop, pr2_navigation_perception, pr2_navigation_local -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_srvs, std_msgs, roscpp -->
  <depend stack="vision_opencv"/> <!-- opencv2, cv_bridge -->

<package name="ANN_doors"/><package name="pr2_doors_common"/><package name="tff_controller"/><package name="pr2_laser_snapshotter"/><package name="door_msgs"/><package name="pr2_doors_actions"/><package name="pr2_doors_executive"/><package name="door_handle_detector"/></stack></stacks>