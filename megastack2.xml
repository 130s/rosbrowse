<stacks><stack name="pr2_web_apps" path="/stacks/pr2_web_apps/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="web_apps_core">This stack contains core web apps that are shipped with a PR2.</description>
  <author>Maintained by Josh Tyler</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_web_apps</url>
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- nav_msgs, geometry_msgs, sensor_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="laser_pipeline"/> <!-- laser_geometry -->
  <depend stack="navigation"/> <!-- move_base_msgs, map_server -->
  <depend stack="navigation_experimental"/> <!-- dwa_local_planner -->
  <depend stack="pr2_apps"/> <!-- pr2_teleop, pr2_tuckarm, pr2_mannequin_mode -->
  <depend stack="pr2_common"/> <!-- pr2_machine -->
  <depend stack="pr2_common_actions"/> <!-- joint_trajectory_generator, pr2_arm_move_ik, pr2_tuck_arms_action -->
  <depend stack="pr2_doors"/> <!-- pr2_doors_executive -->
  <depend stack="pr2_navigation"/> <!-- pr2_navigation_global, pr2_navigation_perception, pr2_navigation_teleop -->
  <depend stack="pr2_plugs"/> <!-- pr2_plugs_executive -->
  <depend stack="ros"/> <!-- std_msgs, roslib, rospy, message_filters -->
  <depend stack="sound_drivers"/> <!-- sound_play -->
  <depend stack="web_interface"/> <!-- rosweb, webui -->
  <depend stack="wg_common"/> <!-- willow_maps -->
  <depend stack="wg_pr2_apps"/> <!-- wg_pr2_2dnav -->

<package name="teleop_ps3_application"/><package name="pr2_base_application"/><package name="camera_application"/><package name="pr2_recharge_application"/><package name="map_tiler"/><package name="mannequin_application"/><package name="navigation_application"/><package name="pr2_addons_application"/><package name="tuckarms_application"/><package name="soccer_application"/><package name="doors_application"/></stack><stack name="octomap_mapping" path="/trunk/octomap_mapping" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="Stack for the OctoMap 3D mapping library">
    The <a href="http://octomap.sourceforge.net/">OctoMap library</a> implements a 3D occupancy grid mapping approach,
providing data structures and mapping algorithms. The map implementation is
based on an octree. This stack contains the actual OctoMap package and additional code.
  </description>
  <author>Maintained by Armin Hornung</author>
  <license>GPL,BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/octomap_mapping</url>
  <depend stack="ros"/> <!-- std_msgs -->
  <depend stack="visualization_common"/> <!-- visualization_msgs in cturtle -->
  <depend stack="common_msgs"/> <!-- visualization_msgs in diamondback -->

<package name="octomap"/><package name="octomap_server"/></stack><stack name="cram_demo_apps" path="/stacks/cram_demo_apps" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="cram_demo_apps">cram_demo_apps</description>
  <author>Maintained by Lorenz Moesenlechner</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cram_demo_apps</url>
  <depend stack="common_msgs"/> <!-- geometry_msgs -->
  <depend stack="cram_highlevel"/> <!-- cram_roslisp_common, designators_ros, cram_plan_knowledge, cram_plan_library, cl_json_pl_server -->
  <depend stack="cram_pl"/> <!-- cram_reasoning, cram_execution_trace, cram_utilities, designators -->
  <depend stack="cram_rosie"/> <!-- rosie_executive -->
  <depend stack="ias_visualization"/> <!-- tf_trajectory_visualization -->
  <depend stack="ros"/>
  <depend stack="visualization_common"/> <!-- visualization_msgs -->

<package name="rosie_execution_trace_visualization"/><package name="pr2_execution_trace_visualization"/></stack><stack name="siue_robots" path="" repo="siue-ros-pkg" repo_host="http://github.com/siue-cs/siue-ros-pkg">
  <description brief="siue_robots">siue_robots</description>
  <author>Maintained by Nate Roney</author>
  <license>GPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/siue_robots</url>
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="p2os"/> <!-- p2os_driver -->
  <depend stack="ros"/> <!-- roscpp -->
  <depend stack="slam_gmapping"/> <!-- gmapping -->

<package name="marvin"/><package name="taz"/></stack><stack name="motion_planning_environment" path="/stacks/motion_planning_environment/branches/into_unstable" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="motion_planning_environment">

    The motion_planning_environment stack contains packages that can be used to monitor the world and the state of the robot for collisions. It contains two packages: planning_environment which contains the monitors and planning_environment_msgs which contains the messages and services that can be used for collision checking, adding and clearing objects and monitoring of the robot state and trajectories. 

  </description>
  <author>Maintained by Sachin Chitta</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/motion_planning_environment</url>
  <depend stack="ros"/>

<package name="motion_planning_environment_empty_pkg"/></stack><stack name="robot_calibration" path="/stacks/robot_calibration/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Tools for calibrating an entire robot. (Unstable)">
     Provides tools estimating robot kinematics and sensor locations. Also
     provides helper libraries for capturing calibration datasets on a robot.
     This stack is still very unstable. Expect many API changes.
  </description>
  <author>Maintained by Vijay Pradeep</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/robot_calibration</url>
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- sensor_msgs, actionlib_msgs, geometry_msgs -->
  <depend stack="geometry"/> <!-- tf, kdl -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="image_pipeline"/> <!-- stereo_msgs -->
  <depend stack="robot_model"/> <!-- kdl_parser -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_msgs, roscpp, message_filters -->
  <depend stack="vision_opencv"/> <!-- opencv2, cv_bridge -->

<package name="camera_offsetter"/></stack><stack name="nao" path="/trunk/nao" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn" version="0.1.0">
  <description brief="Some useful ROS nodes for the Nao humanoid robot.">
  <p>
     The nao stack contains some useful ROS nodes for the Nao humanoid robot, 
     developed at the <a href="http://hrl.informatik.uni-freiburg.de/">Humanoid Robots Lab</a> 
     at the Albert-Ludwigs-Unversit√§t in Freiburg, Germany.
     It provides joystick teleoperation, odometry, joint state,
     and a basic robot model for Nao.
   </p>
   <p>
     Files are available at <a href="http://code.google.com/p/alufr-ros-pkg/">http://code.google.com/p/alufr-ros-pkg/</a>, 
     documentation at <a href="http://www.ros.org/wiki/nao">http://www.ros.org/wiki/nao</a>.
   </p>

  </description>
  <author>Maintained by Armin Hornung</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://www.ros.org/wiki/nao</url>

<package name="nao_ctrl"/><package name="nao_description"/><package name="nao_remote"/><package name="nao_msgs"/></stack><stack name="policy_learning" path="/branches/trunk_cturtle/stacks/policy_learning" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="policy_learning">policy_learning</description>
  <author>Maintained by Mrinal Kalakrishnan</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/policy_learning</url>
  <depend stack="arm_navigation"/> <!-- move_arm_msgs -->
  <depend stack="collision_environment"/> <!-- distance_field -->
  <depend stack="common"/> <!-- actionlib, filters, pluginlib -->
  <depend stack="common_msgs"/> <!-- geometry_msgs, sensor_msgs, diagnostic_msgs -->
  <depend stack="geometry"/> <!-- kdl, tf, tf_conversions, eigen, angles -->
  <depend stack="kinematics"/> <!-- kinematics_msgs -->
  <depend stack="laser_pipeline"/> <!-- laser_geometry -->
  <depend stack="motion_planning_common"/> <!-- planning_models, mapping_msgs, motion_planning_msgs -->
  <depend stack="motion_planning_environment"/> <!-- planning_environment, planning_environment_msgs -->
  <depend stack="pr2_common"/> <!-- pr2_msgs -->
  <depend stack="pr2_controllers"/> <!-- trajectory_msgs, control_toolbox, pr2_controllers_msgs -->
  <depend stack="pr2_mechanism"/> <!-- pr2_mechanism_msgs, pr2_controller_interface, pr2_mechanism_model -->
  <depend stack="pr2_object_manipulation"/> <!-- slipgrip_controller -->
  <depend stack="robot_model"/> <!-- assimp, kdl_parser -->
  <depend stack="ros"/> <!-- rosconsole, rosparam, roscpp, message_filters, roslib, std_msgs, rospy, rosbag -->
  <depend stack="ros_realtime"/> <!-- rosrt -->
  <depend stack="trajectory_filters"/> <!-- spline_smoother -->
  <depend stack="visualization_common"/> <!-- visualization_msgs -->

<package name="task_recorder_test"/><package name="policy_improvement_loop"/><package name="policy_improvement_test"/><package name="dmp_motion_gui"/><package name="dmp_motion_controller"/><package name="policy_library"/><package name="dmp_motion_learner"/><package name="stomp_motion_planner"/><package name="policy_improvement"/><package name="task_manager"/><package name="policy_improvement_utilities"/><package name="pr2_tasks"/><package name="lwr"/><package name="dmp_motion_generation"/><package name="bspline"/><package name="dmp_motion_generation_test"/><package name="dmp_motion_controller_test"/><package name="task_recorder"/><package name="pr2_tasks_transforms"/></stack><stack name="lse_imu_drivers" path="/trunk/unstable/lse_imu_drivers" repo="isr-uc-ros-pkg" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="lse_imu_drivers">
  	This stack contains drivers for IMUs. Currently it only has support for the Xsens MTi.
  </description>
  <author>Gon√ßalo Cabrita</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/lse_imu_drivers</url>
  <depend stack="ros"/>	<!-- roscpp -->
  <depend stack="lse_communication"/>	<!-- cereal_port -->

<package name="lse_xsens_mti"/></stack><stack name="orocos_kinematics_dynamics" path="/trunk/kul-ros-pkg/stacks/orocos_kinematics_dynamics" repo="kul-ros-pkg" repo_host="http://svn.mech.kuleuven.be/repos/orocos">
  <description brief="orocos_kinematics_dynamics">
  
    The stack separates the <a href="http://www.orocos.org/kdl">Kinematics and Dynamics Library (KDL)</a> from the Orocos Real-Time Toolkit (RTT), part of the <a href="http://www.orocos.org/wiki/orocos/toolchain">Orocos Toolchain</a>, definitions.
  
  </description>
  <author>Maintained by Steven Bellens</author>
  <license>LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/orocos_kinematics_dynamics</url>
  <depend stack="ros"/>

<package name="kdl_typekit"/><package name="orocos_kdl"/></stack><stack name="ubc-ros-pkg" path="/trunk" repo="ubc-ros-pkg" repo_host="https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg">
  <description brief="ubc-ros-pkg">ubc-ros-pkg</description>
  <author>Maintained by Marius Muja and David Meger</author>
  <license>BSD,LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ubc-ros-pkg</url>
  <depend stack="common"/> <!-- actionlib, xacro -->
  <depend stack="common_msgs"/> <!-- nav_msgs, geometry_msgs, sensor_msgs -->
  <depend stack="diagnostics"/> <!-- self_test, diagnostic_updater -->
  <depend stack="driver_common"/> <!-- driver_base, timestamp_tools -->
  <depend stack="geometry"/> <!-- tf, tf_conversions, eigen, angles -->
  <depend stack="image_common"/> <!-- image_transport, camera_calibration_parsers -->
  <depend stack="joystick_drivers"/> <!-- joy -->
  <depend stack="laser_drivers"/> <!-- hokuyo_node, sicktoolbox_wrapper -->
  <depend stack="laser_pipeline"/> <!-- laser_assembler, laser_geometry -->
  <depend stack="navigation"/> <!-- move_base_msgs, move_base, map_server, amcl -->
  <depend stack="point_cloud_perception"/> <!-- cminpack, pcl -->
  <depend stack="pr2_apps"/> <!-- pr2_teleop -->
  <depend stack="pr2_common"/> <!-- pr2_msgs -->
  <depend stack="robot_model"/> <!-- robot_state_publisher, urdf -->
  <depend stack="ros"/> <!-- roslaunch, std_msgs, rostest, rospy, roscpp -->
  <depend stack="slam_gmapping"/> <!-- gmapping -->
  <depend stack="ubc-srvc-pkg"/> <!-- webImages, triclops, pyUtils, MSER, artag_register -->
  <depend stack="vision_opencv"/> <!-- opencv2, cv_bridge -->
  <depend stack="visualization_common"/> <!-- visualization_msgs -->

<package name="sift_detector"/><package name="batchdetector"/><package name="recognition_msgs"/><package name="label_scene_3D"/><package name="online_results"/><package name="scene_server"/><package name="hyp_filter"/><package name="felz_detector"/><package name="contour_detector"/><package name="launch_manager"/><package name="executive_srvc"/><package name="nips_demo"/><package name="srvc"/><package name="calibration"/><package name="powerbot_player"/><package name="ptu_controller"/><package name="bumblebee1394"/><package name="bumblebee_stereo"/><package name="photo_cam"/><package name="object_graph"/><package name="correct_drift"/><package name="register_image"/><package name="ubc_vrs_annotation_tools"/><package name="ubc_vrs_result_analysis"/><package name="ubc_vrs_data_collection"/><package name="ubc_vrs_utilities"/><package name="training_data"/><package name="capture"/><package name="libptp2"/><package name="triclops"/><package name="tablescan"/><package name="DPM"/><package name="digiclops"/><package name="saliency_attention"/><package name="powerbot"/><package name="powerbot_defs"/><package name="navigation_goals"/><package name="2dnav_powerbot"/><package name="navigation_srvs"/></stack><stack name="navigation_tutorials" path="/branches/trunk_cturtle/stacks/navigation_tutorials" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="navigation_tutorials">navigation_tutorials</description>
  <author>Maintained by Eitan Marder-Eppstein</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/navigation_tutorials</url>
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- nav_msgs, sensor_msgs, geometry_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="navigation"/> <!-- move_base, map_server, nav_view, amcl, fake_localization, move_base_msgs -->
  <depend stack="ros"/> <!-- roscpp -->
  <depend stack="simulator_stage"/> <!-- stage -->

<package name="robot_setup_tf_tutorial"/><package name="simple_navigation_goals_tutorial"/><package name="navigation_stage"/><package name="point_cloud_publisher_tutorial"/><package name="odometry_publisher_tutorial"/><package name="laser_scan_publisher_tutorial"/></stack><stack name="prairiedog" path="/trunk" repo="prairiedog" repo_host="http://prairiedog.googlecode.com/svn">
  <description brief="prairiedog robot platform">

     This includes all of the CU Boulder prairiedog packages.

  </description>
  <author>Michael Otte</author>
  <license>GNU GPL V3</license>
  <review notes="" status="unreviewed"/>
  <url>http://correll.cs.colorado.edu/pmwiki/index.php/Main/PrairieDog</url>

  <depend stack="ros"/> 
  <depend stack="common_msgs"/> 
  <depend stack="laser_drivers"/> 
  <depend stack="image_transport_plugins"/>
<package name="stargazer_cu"/><package name="cmd_line_control_cu"/><package name="irobot_create_cu"/><package name="gencam_cu"/><package name="base_planner_cu"/><package name="intercom_cu"/><package name="tagmapper_cu"/><package name="localization_cu"/><package name="hokuyo_listener_cu"/><package name="goal_server_cu"/><package name="nav_view_cu"/><package name="irobot_create_rustic"/><package name="mapper_cu"/><package name="visualization_cu"/></stack><stack name="cram_pr2" path="" repo="cram_pr2" repo_host="http://code.in.tum.de/git/cram-pr2.git">
  <description brief="cram_process_modules_pr2">cram_process_modules_pr2</description>
  <author>Maintained by Lorenz Moesenlechner</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cram_pr2</url>
  <depend stack="cram_highlevel"/> <!-- location_costmap, cram_roslisp_common, cram_plan_actionserver, cram_plan_failures, cram_plan_knowledge, designators_ros, table_costmap, perception_process_module, cram_plan_library -->
  <depend stack="cram_pl"/> <!-- cram_reasoning, alexandria, designators, cram_math, process_modules, cram_utilities, cram_language, cram_execution_trace -->
  <depend stack="navigation"/> <!-- move_base_msgs -->
  <depend stack="pr2_controllers"/> <!-- pr2_controllers_msgs -->
  <depend stack="ros"/>
  <depend stack="roslisp_common"/> <!-- actionlib_lisp -->

<package name="pr2_manipulation_process_module"/><package name="pr2_navigation_process_module"/><package name="point_head_process_module"/><package name="cram_pr2_executive"/></stack><stack name="joystick_drivers" path="/stacks/joystick_drivers/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Drivers related to joysticks">
This stack contains a ROS node to interface with joysticks, and drivers
for joysticks that are not well supported by a common Linux distribution.
  </description>
  <author>Blaise Gassend</author>
  <license>BSD,GPL,ZLib (spacenav)</license>  
  <review notes="reviewed 10-1-2009" status="Doc reviewed except wiimote and joystick_remapper"/>
  <url>http://ros.org/wiki/joystick_drivers</url>
  <depend stack="common_msgs"/> <!-- sensor_msgs, geometry_msgs -->
  <depend stack="diagnostics"/> <!-- diagnostic_updater -->
  <depend stack="ros"/> <!-- std_msgs, roslib, rospy, roscpp, std_srvs -->

<package name="joystick_remapper"/><package name="spacenav"/><package name="wiimote"/><package name="joy"/><package name="ps3joy"/><package name="spacenav_node"/><package name="cwiid"/></stack><stack name="ros" path="/stacks/ros/trunk" repo="ros" repo_host="https://code.ros.org/svn/ros">
  <description brief="ROS core">
<p>
ROS is an open-source, meta-operating system for your robot. It provides the services you would expect from an operating system, including hardware abstraction, low-level device control, implementation of commonly-used functionality, message-passing between processes, and package management. It also provides tools and libraries for obtaining, building, writing, and running code across multiple computers. 

</p>
<p>
The ROS runtime &quot;graph&quot; is a peer-to-peer network of processes that are loosely coupled using the ROS communication infrastructure. ROS implements several different styles of communication, including synchronous RPC-style communication over Services, asynchronous streaming of data over Topics, and storage of data on a Parameter Server. These are explained in greater detail in our Conceptual Overview.
</p>

  </description>
  <author>Eric Berger, Ken Conley, Josh Faust, Tully Foote, Brian Gerkey, Jeremy Leibs, Morgan Quigley, Rob Wheeler</author>
  <license>BSD</license>
  <review notes="" status="doc reviewed"/>
  <url>http://ros.org/wiki/ROS</url>
<package name="roslang"/><package name="mk"/><package name="rosbuild"/><package name="roslib"/><package name="roscreate"/><package name="rosmake"/><package name="rosclean"/><package name="rosboost_cfg"/><package name="rospack"/><package name="rosunit"/><package name="rosdep"/><package name="rosbash"/><package name="rosemacs"/><package name="test_rosdep"/><package name="test_rospack"/><package name="test_rosmake"/><package name="test_roscreate"/><package name="test_roslib"/></stack><stack name="pano" path="/stacks/pano/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="panorama">Create panoramic images</description>
  <author>Maintained by Ethan Rublee</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pano</url>
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- actionlib_msgs -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_msgs, rospy, roscpp -->
  <depend stack="vision_opencv"/> <!-- opencv2, cv_bridge -->

<package name="pano_core"/><package name="pano_py"/><package name="pano_ros"/></stack><stack name="ua_cognition" path="/trunk/arrg/ua_cognition" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="Cognitive Architecture for UA Robots">
    This stack will contain the cognitive architecture for the Wubble Robot. 
    Currently, it contains a ROS wrapper for the GBBopen blackboard system.
    </description>
    <author>Maintained by Daniel Hewlett</author>
    <license>BSD</license>  
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/ua_cognition</url>

    <depend stack="ros"/>
<package name="gbbopen"/></stack><stack name="orocos_toolchain_ros-0.1.7" path="/trunk/kul-ros-pkg/stacks/orocos_toolchain_ros/tags/orocos_toolchain_ros-0.1.7" repo="kul-ros-pkg" repo_host="http://svn.mech.kuleuven.be/repos/orocos">
  <description brief="orocos_toolchain_ros">

      This stack contains all software necessary to build
      systems using both Orocos and ROS infrastructures. The complete
      <a href="http://www.orocos.org/wiki/orocos/toolchain">Orocos Toolchain</a> is integrated in the ROS build system and the
      rtt_ros_integration package allows easy communication between Orocos components
      and ROS nodes.
  
  </description>
  <author>Maintained by Ruben Smits - Steven Bellens</author>
  <license>BSD,GPL + runtime exception,LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/orocos_toolchain_ros</url>
  <depend stack="ros"/> <!-- rosbuild, roslib, std_msgs, roscpp -->

<package name="rtt_ros_integration"/><package name="typelib"/><package name="utilmm"/><package name="ocl"/><package name="rtt_exercises"/><package name="rtt_ros_integration_std_msgs"/><package name="utilrb"/><package name="orogen"/><package name="rtt_ros_integration_example"/><package name="rtt"/></stack><stack name="visualization" path="/stacks/visualization/branches/visualization-1.4" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Visualization tools for ROS">

     Visualization tools for robots.  Currently just <a href="http://www.ros.org/wiki/rviz">rviz</a>, a 3d visualization environment for robots using ROS, as well as <a href="http://www.ros.org/wiki/rxbag_plugins">rxbag_plugins</a>, which extend the visualization capabilities of <a href="http://www.ros.org/wiki/rxbag">rxbag</a>. 

  </description>
  <author>Josh Faust</author>
  <license>BSD,Creative Commons,wxWindows</license>  
  <review notes="2011/01/04" status="Doc reviewed"/>
  <url>http://ros.org/wiki/visualization</url>
  <depend stack="common"/> <!-- yaml_cpp -->
  <depend stack="common_msgs"/> <!-- nav_msgs, sensor_msgs, geometry_msgs, visualization_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="laser_pipeline"/> <!-- laser_geometry -->
  <depend stack="robot_model"/> <!-- assimp, urdf, resource_retriever -->
  <depend stack="ros"/> <!-- roslib -->
  <depend stack="ros_comm"/> <!-- rosconsole, std_srvs, roscpp, message_filters, std_msgs, rospy, rosbag -->
  <depend stack="rx"/> <!-- rxtools, rxbag, wxPython_swig_interface, wxswig -->
  <depend stack="visualization_common"/> <!-- ogre, ogre_tools -->

<package name="rviz"/><package name="rxbag_plugins"/><package name="wxpropgrid"/></stack><stack name="wubble_world" path="/trunk/arrg/wubble_world" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
  <description brief="wubble_world">wubble_world</description>
  <author>Maintained by Daniel Hewlett</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/wubble_world</url>
  <depend stack="ros"/>

<package name="wubble_environments"/></stack><stack name="scout_robot" path="/trunk/unstable/scout_robot" repo="isr-uc-ros-pkg" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="scout_robot">
  
  	Nomad Scout robot stack.
  	
  </description>
  <author>Gon√ßalo Cabrita and Pedro Sousa</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/scout_robot</url>
  <depend stack="ros"/>			<!-- roscpp -->
  <depend stack="common_msgs"/> 	<!-- nav_msgs, geometry_msgs -->
  <depend stack="geometry"/> 		<!-- tf -->
  <depend stack="lse_messages"/>	<!-- lse_sensor_msgs -->

<package name="scout_ndirect"/></stack><stack name="lse_experiments" path="/trunk/unstable/lse_experiments" repo="isr-uc-ros-pkg" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="lse experiments">
  
  	The purpose of this stack is to hold all the relevant experiments produced inside the LSE (ISR University of Coimbra). ROS code developed for papers, demos, etc should be placed here. Everything should be documented in such a way that reproduction of results is possible.
  
  </description>
  <author>Gon√ßalo Cabrita and Pedro Sousa</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/lse_experiments</url>
  <depend stack="ros"/>

<package name="fctuc_open_day"/></stack><stack name="perception_pcl" path="/stacks/perception_pcl/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Point Cloud Library">
    The <b>perception_pcl</b> stack contains the Point Cloud Library (PCL), its
    3rd party dependencies, and a ROS interface for PCL nodelets.
  </description>
  <author>Maintained by Radu Bogdan Rusu</author>
  <license>BSD,LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/perception_pcl</url>
  <depend stack="common"/> <!-- nodelet_topic_tools, nodelet -->
  <depend stack="common_msgs"/> <!-- sensor_msgs, geometry_msgs -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="ros"/> <!-- roslib -->
  <depend stack="ros_comm"/> <!-- rosbag, roscpp, message_filters -->

<package name="pcl_android"/><package name="cminpack"/><package name="pcl"/><package name="pcl_ros"/><package name="flann"/></stack><stack name="2dmapping_pr2_app" path="/branches/trunk_cturtle/applications/2dmapping_pr2_app" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg" version="0.1">
  <description brief="A 2D mapping application for the PR2 robot platform.">
  </description>
  <author>Brian Gerkey gerkey@willowgarage.com</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://pr.willowgarage.com/wiki/2dmapping_pr2_app</url>
  

  <depend stack="ros"/> <!-- rosrecord --> 

<package name="2dmapping_pr2"/></stack><stack name="phidgets" path="" repo="foote-phidget" repo_host="https://phidget.foote-ros-pkg.googlecode.com/hg/">
  <description brief="A stack for interacting with Phidgets">
    This stack contains the C API for Phidgets as well as a C++
    wrapper and various ROS nodes utilizing the C++ Wrapper.
  </description>
  <version>0.0.0</version>
  <author>Tully Foote/tfoote@gmail.com </author>
  <license>LGPL</license>
  <review notes="" status="unreviewed"/>
  <url>http://code.ros.org/wiki/phidgets</url>
<package name="phidget_rfid"/><package name="phidgetspp_c_api"/><package name="phidget_text"/><package name="phidgetspp"/></stack><stack name="sharedmem" path="/sharedmem" repo="acin-tuwien" repo_host="https://svn.acin.tuwien.ac.at/ros">
  <description brief="sharedmem">
  	This stack provides libraries to place, view and edit variables and OpenCV IplImages in the shared memory.	
  	The library is an offspring of the Austrian-Kangaroos RoboCup framework.
  </description>
  <author>Maintained by Markus Bader and Bernhard Miller</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sharedmem</url>
  <depend stack="ros"/>
<package name="ak_shm"/></stack><stack name="image_pipeline" path="/stacks/image_pipeline/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Pipeline for processing monocular and stereo images">

    image_pipeline fills the gap between getting raw images from a camera driver and higher-level vision processing.

  </description>
  <author>Maintained by Patrick Mihelich/mihelich@willowgarage.com</author>
  <license>BSD</license>  
  <review notes="Jan 18, 2010" status="Doc reviewed"/>
  <url>http://ros.org/wiki/image_pipeline</url>
  <depend stack="common_msgs"/> <!-- sensor_msgs, geometry_msgs -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="image_common"/> <!-- image_transport, camera_calibration_parsers -->
  <depend stack="ros"/> <!-- std_srvs, roscpp, message_filters, std_msgs, rospy, rosbagmigration -->
  <depend stack="vision_opencv"/> <!-- opencv2, image_geometry, cv_bridge -->

<package name="image_rotate"/><package name="image_view"/><package name="stereo_msgs"/><package name="image_proc"/><package name="camera_calibration"/><package name="stereo_image_proc"/></stack><stack name="gps_umd" path="" repo="umd-ros-pkg" repo_host="git://ram.umd.edu/umd-ros-pkg.git">
  <description brief="gps_umd">GPS messages and libraries</description>
  <author>Ken Tossell</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/gps_umd</url>
  <depend stack="ros"/>

<package name="gps_common"/><package name="gpsd_client"/></stack><stack name="asctec_drivers" path="" repo="ccny-ros-pkg" repo_host="http://robotics.ccny.cuny.edu/git/ccny-ros-pkg.git/">
  <description brief="asctec_drivers">Driver Stack for AscTec Products</description>
  <author>Maintained by William Morris, Ivan Dryanovski et al.</author>
  <license>GPL</license>  
  <review notes="Under active development" status="experimental"/>
  <url>http://ros.org/wiki/asctec_drivers</url>
  <depend stack="ros"/>
<package name="asctec_proc"/><package name="asctec_msgs"/><package name="asctec_autopilot"/><package name="asctec_mon"/><package name="asctec_ctrl"/><package name="pelican_launch"/></stack><stack name="bosch_skin" path="/trunk/stacks/bosch_skin" repo="bosch-ros-pkg" repo_host="https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg">
  <description brief="Bosch Sensor Skin driver and applications">
	Contains the Bosch Sensor Skin driver and demo applications.
  </description>
  <author>Maintained by Sebastian Haug</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/bosch_skin</url>
  <depend stack="bosch_drivers"/> <!-- sub20 -->
  <depend stack="common"/> <!-- filters, pluginlib -->
  <depend stack="common_msgs"/> <!-- geometry_msgs -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure -->
  <depend stack="geometry"/> <!-- tf, angles -->
  <depend stack="pr2_controllers"/> <!-- pr2_mechanism_controllers -->
  <depend stack="pr2_mechanism"/> <!-- realtime_tools, pr2_controller_interface -->
  <depend stack="ros"/> <!-- roslib, std_msgs, roscpp -->

<package name="skin_dashboard"/><package name="skin_safe_base"/><package name="skin_driver"/><package name="skin_config"/><package name="safe_base_controller"/><package name="skin_demo_movebase"/></stack><stack name="pr2_common_actions" path="/stacks/pr2_common_actions/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_common_actions">pr2_common_actions</description>
  <author>Maintained by Wim Meeussen</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_common_actions</url>
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- geometry_msgs, actionlib_msgs, sensor_msgs -->
  <depend stack="geometry"/> <!-- kdl, tf, angles -->
  <depend stack="point_cloud_perception"/> <!-- pcl_tf, eigen3, laser_scan_geometry -->
  <depend stack="pr2_common"/> <!-- pr2_msgs -->
  <depend stack="pr2_controllers"/> <!-- trajectory_msgs, joint_trajectory_action, pr2_controllers_msgs -->
  <depend stack="pr2_kinematics"/> <!-- pr2_arm_kinematics -->
  <depend stack="robot_model"/> <!-- urdf -->
  <depend stack="ros"/> <!-- roslib, rospy, roscpp -->

<package name="pr2_tilt_laser_interface"/><package name="joint_trajectory_generator"/><package name="pr2_tuck_arms_action"/><package name="pr2_common_action_msgs"/><package name="pr2_arm_move_ik"/><package name="joint_trajectory_action_tools"/></stack><stack name="proxy_tools" path="" repo="umd-ros-pkg" repo_host="git://ram.umd.edu/umd-ros-pkg.git">
  <description brief="proxy_tools">Tools for moving data between nodes while conserving bandwidth or avoiding network blockages</description>
  <author>Ken Tossell</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/proxy_tools</url>
<package name="proxy"/></stack><stack name="pr2_arm_navigation_apps" path="/stacks/pr2_arm_navigation_apps/branches/into_unstable" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_arm_navigation_app">

     pr2_arm_navigation_app

  </description>
  <author>Maintained by Sachin Chitta</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_arm_navigation_apps</url>
  <depend stack="ros"/>

<package name="pr2_arm_navigation_apps_empty_pkg"/></stack><stack name="roboard" path="/trunk/veltrop-ros-pkg/roboard" repo="veltrop-ros-pkg" repo_host="https://veltrop-ros-pkg.svn.sourceforge.net/svnroot/veltrop-ros-pkg">
  <description brief="roboard">
  Contains packages to control servos and read sensors of the 
  Roboard.  Also includes the RoBoIO library for the Roboard.
  </description>
  <author>Maintained by Taylor Veltrop</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://taylor.veltrop.com/robotics/khrhumanoidv2.php?topic=veltrop-ros-pkg</url>
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="ros"/> <!-- std_msgs, roscpp -->
  <depend stack="veltrobot"/> <!-- veltrobot_msgs -->

<package name="roboard_roboio"/><package name="roboard_gui"/><package name="roboard_servos"/><package name="roboard_sensors"/></stack><stack name="blender_kin_models" path="/trunk/kul-ros-pkg/stacks/blender_kin_models" repo="kul-ros-pkg" repo_host="http://svn.mech.kuleuven.be/repos/orocos">
  <description brief="blender_kin_models">
    blender_kin_models: This stack contains a package for each of our models Blender models containing a kinematic chain: robots, human models, ...

    </description>
  <author>Maintained by Koen Buys - koen.buys@mech.kuleuven.be</author>
  <license>GPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/blender_kin_models</url>
  <depend stack="ros"/>
  <depend stack="blender"/>
<package name="lwr_blender_model"/><package name="youbot_blender_model"/><package name="lias_blender_model"/><package name="pr2_blender_model"/></stack><stack name="ocr" path="/trunk/stacks/ocr" repo="bosch-ros-pkg" repo_host="https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg">
  <description brief="ocr">
    A stack for optical character recognition (OCR) packages.
  </description>
  <author>Maintained by Benjamin Pitzer</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ocr</url>
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="ros"/> <!-- roscpp -->
  <depend stack="vision_opencv"/> <!-- opencv2, cv_bridge -->

<package name="ocr_server"/><package name="leptonica"/><package name="tesseract"/></stack><stack name="robotino_drivers" path="/trunk/ros/robotino_drivers" repo="openrobotino" repo_host="http://svn.openrobotino.org">
	<description brief="Robotino ROS support">
		ROS packages for the mobile robot Robotino
	</description>
	<author>Dr. Christian Verbeek, REC GmbH, servicerobotics.eu</author>
	<license>BSD</license>
	<review notes="" status="unreviewed"/>
	<url>http://ros.org/wiki/robotino_drivers</url>
	<depend stack="ros"/>

<package name="robotino_msgs"/><package name="robotino_start"/><package name="robotino_base"/><package name="robotino_cam"/><package name="robotino_navigation"/><package name="robotino_local_move"/><package name="robotino_teleop"/></stack><stack name="ni" path="" repo="ni" repo_host="https://github.com/ros-pkg-git/ni">
  <description brief="The ROS OpenNI project">
  
    ROS OpenNI is an open source project focused on the integration of the
    PrimeSense sensors with ROS. 
  
  </description>
  <author>Maintained by Radu Bogdan Rusu, Ken Conley</author>
  <license>BSD,LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ni</url>
  <depend stack="camera_drivers"/> <!-- camera_info_manager -->
  <depend stack="common"/> <!-- nodelet -->
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure -->
  <depend stack="geometry"/> <!-- tf, kdl -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="point_cloud_perception"/>
  <depend stack="ros"/> <!-- roscpp -->

<package name="openni"/><package name="ps_engine"/><package name="openni_tracker"/><package name="pointcloud_to_laserscan"/><package name="disparity_view"/><package name="nite"/><package name="openni_pcl"/><package name="openni_camera"/><package name="openni_pointer"/></stack><stack name="orocos_toolchain_ros-0.1.4" path="/trunk/kul-ros-pkg/stacks/orocos_toolchain_ros/tags/orocos_toolchain_ros-0.1.4" repo="kul-ros-pkg" repo_host="http://svn.mech.kuleuven.be/repos/orocos">
  <description brief="orocos_toolchain_ros">

      This stack contains all software necessary to build
      systems using both Orocos and ROS infrastructures. The complete
      orocos toolchain is integrated in the ROS build system and the
      rtt_ros_integration package allows easy communication between Orocos components
      and ROS nodes.
  
  </description>
  <author>Maintained by Ruben Smits - Steven Bellens</author>
  <license>LGPL, GPL with runtime exception</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/orocos_toolchain_ros</url>
  <depend stack="ros"/>

<package name="rtt_ros_integration"/><package name="typelib"/><package name="utilmm"/><package name="ocl"/><package name="rtt_exercises"/><package name="rtt_ros_integration_std_msgs"/><package name="utilrb"/><package name="orogen"/><package name="rtt_ros_integration_example"/><package name="rtt"/></stack><stack name="test_wg_hardware_test_systems" path="/branches/trunk_cturtle/stacks/test_wg_hardware_test_systems" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="Regression tests for WG hardware test systems">
    This stack contains regression tests for WG hardware test systems. These utilities can use simulated data (from gazebo) to test data analysis or logging functionality.   
  </description>
  <author>Kevin Watts</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/test_wg_hardware_test_systems</url>
  <depend stack="ros"/>
  <depend stack="pr2_self_test"/>
  <depend stack="wg_hardware_test"/>
  <depend stack="pr2_simulator"/> <!-- pr2_gazebo -->
  <depend stack="diagnostics"/>
  <depend stack="simulator_gazebo"/> <!-- gazebo -->
  <depend stack="robot_model"/> <!-- robot_state_publisher, urdf -->
  <depend stack="pr2_mechanism"/> <!-- pr2_mechanism_msgs, pr2_controller_manager -->
  <depend stack="pr2_common"/> <!-- pr2_description, pr2_msgs -->
<package name="test_pr2_self_test_gazebo"/><package name="roslaunch_parse_tester"/><package name="test_pr2_self_test"/><package name="wgtest_data_analysis"/><package name="test_pr2_component_descriptions"/><package name="wgtest_data_loader"/></stack><stack name="sound_drivers" path="/stacks/sound_drivers/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Stack containing drivers to play/record sound.">
    
  This stack is the common place for all sound related drivers. Currently
  the only driver is sound_play, which can be used to play WAV and OGG
  files, synthesize speech and play builtin sounds, over any device
  supported by pygame (SDL).

  </description>
  <author>Blaise Gassend</author>
  <license>BSD</license>  
  <review notes="reviewed 9/30/2009" status="Doc reviewed"/>
  <url>http://ros.org/wiki/sound_drivers</url>
  <depend stack="common_msgs"/> <!-- diagnostic_msgs -->
  <depend stack="ros"/> <!-- roslib -->
  <depend stack="ros_comm"/> <!-- rospy, roscpp -->

<package name="sound_play"/></stack><stack name="mrpt_common" path="/trunk/mrpt_common" repo="mrpt-ros-pkg" repo_host="http://mrpt-ros-pkg.googlecode.com/svn">
  <description brief="mrpt_common">mrpt_common</description>
  <author>Maintained by Jose Luis Blanco</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/mrpt_common</url>
  <depend stack="common_msgs"/> <!-- sensor_msgs, geometry_msgs -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_msgs, roscpp -->

<package name="mrpt_bridge"/><package name="mrpt_msgs"/><package name="rawlog_play"/><package name="mrpt_libs"/></stack><stack name="people_experimental" path="/branches/trunk_cturtle/stacks/people_experimental" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="Experimental/research packages related to perceiving and interacting with people.">people_experimental</description>
  <author>Maintained by Caroline Pantofaru</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/people_experimental</url>
  <depend stack="common"/> <!-- bfl -->
  <depend stack="common_msgs"/> <!-- sensor_msgs, geometry_msgs -->
  <depend stack="geometry"/> <!-- tf, bullet -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="image_pipeline"/> <!-- stereo_msgs -->
  <depend stack="laser_pipeline"/> <!-- laser_geometry -->
  <depend stack="people"/> <!-- people_msgs -->
  <depend stack="ros"/> <!-- std_srvs, std_msgs, roscpp, message_filters -->
  <depend stack="vision_opencv"/> <!-- opencv2, cv_bridge -->
  <depend stack="visualization_common"/> <!-- visualization_msgs -->

<package name="people_tracking_filter"/><package name="height_tracker"/><package name="pedestrian_detector_HOG"/><package name="leg_detector"/></stack><stack name="lse_messages" path="/trunk/unstable/lse_messages" repo="isr-uc-ros-pkg" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="lse_messages">
  
  	This stack contains messages that are commonly used on the LSE but are not available on the ROS messages stack.
  
  </description>
  <author>Gon√ßalo Cabrita and Pedro Sousa</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/lse_messages</url>
  <depend stack="ros"/>	<!-- roscpp -->

<package name="lse_sensor_msgs"/></stack><stack name="articulation" path="/trunk/articulation" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn" version="0.1.0">
  <description brief="Kinematic models for articulated objects (cabinet doors and drawers), including model fitting, model selection and visualization.">

<p>
This stack provides software that can recover articulation models given 3D or 6D pose trajectories. 
</p>

<p>
The <a href="http://ros.org/wiki/articulation_msgs">articulation_msgs</a> package defines messages and services for exchanging trajectories and kinematic models.
</p>

<p>
The <a href="http://ros.org/wiki/articulation_structure">articulation_models</a> package provides several nodes for fitting and selecting kinematic models for articulated objects. We employ maximum-likelihood sample consensus (MLESAC) for robustly estimating the kinematic parameters, and the Bayesian information criterion (BIC) for selecting between alternative model classes. The learned model assigns likelihoods to observed trajectories, predict the latent configuration of the articulated object, projects the noisy poses onto the model, predict the Jacobian, etc.
</p>

<p>
The <a href="http://ros.org/wiki/articulation_structure">articulation_structure</a> package provides a service for fitting and selecting the kinematic model for articulated objects consisting of more than two parts. 
</p>

<p>
Several tutorials, example launch files and demonstration videos are available in the package <a href="http://ros.org/wiki/articulation_tutorials">articulation_tutorials</a>. 
</p>

  </description>
  <author>Juergen Sturm</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/articulation</url>

  <depend stack="common"/> <!-- plugin lib -->
  <depend stack="common_msgs"/> <!-- geometry_msgs -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="ros"/> <!-- roscpp, message_filters -->
  <depend stack="visualization"/> <!-- rviz -->
  <depend stack="visualization_common"/> <!-- visualization_msgs -->
  <depend stack="freiburg_tools"/> <!-- camera, .. -->
  <depend stack="image_transport_plugins"/> <!-- compressed, .. -->
  <depend stack="image_pipeline"/> <!-- image_proc, .. -->
<package name="articulation_tutorials"/><package name="articulation_msgs"/><package name="icp"/><package name="articulation_models"/><package name="articulation_rviz_plugin"/><package name="articulation_structure"/></stack><stack name="imu_drivers" path="/stacks/imu_drivers/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Drivers for IMUs">
    A stack for any drivers relating to Inertial Measurement Units (IMU).
  </description>
  <author>Blaise Gassend; Maintained by Melonee Wise</author>
  <license>LGPL</license>  
  <review notes="Jan 14 2010" status="Doc Reviewed"/>
  <url>http://ros.org/wiki/imu_drivers</url>
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="diagnostics"/> <!-- self_test, diagnostic_updater -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_srvs, roscpp -->

<package name="microstrain_3dmgx2_imu"/></stack><stack name="rwi" path="/stacks/rwi/trunk" repo="wu-ros-pkg" repo_host="https://wu-ros-pkg.svn.sourceforge.net/svnroot/wu-ros-pkg" version="0.1.0">
  <description brief="drivers for the rwi family of robots">
	Drivers for the robots produced by Real World Interface, Inc.
  </description>
  <author>Maintained by David V. Lu/davidlu@wustl.edu</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rwi</url>
  <depend stack="common_msgs"/>
  <depend stack="geometry"/>
  <depend stack="ros"/>

<package name="ptu46"/><package name="rflex"/></stack><stack name="photography" path="/branches/trunk_diamondback/stacks/photography" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="photography">
    Robot photography
  </description>

  <author>Maintained by Bill Smart</author>

  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/photography</url>

  <depend stack="ros"/>

<package name="photo_processing"/><package name="photographer"/></stack><stack name="wu_experiments" path="/stacks/wu_experiments/trunk" repo="wu-ros-pkg" repo_host="https://wu-ros-pkg.svn.sourceforge.net/svnroot/wu-ros-pkg">
  <description brief="wu experiment procedures and nodes">
    All of the HRI user studies we run in the robot lab.
  </description>
  <author>Maintained by Bill Smart</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/wu_experiments</url>
  <depend stack="ros"/>
  <depend stack="ride"/>
<package name="ride_karulf_thesis"/></stack><stack name="visualization_common" path="/stacks/visualization_common/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Visualization Common">
    Provides a low-level shared stack for sharing code between various higher level visualization tools.
  </description>
  <author>Josh Faust jfaust@willowgarage.com</author>
  <license>BSD,LGPL,MIT</license>  
  <review notes="" status="Doc reviewed"/>
  <url>http://ros.org/wiki/visualization_common</url>
  <depend stack="ros"/> <!-- roslib -->
  <depend stack="ros_comm"/> <!-- rosconsole -->
  <depend stack="rx"/> <!-- wxswig -->

<package name="ogre"/><package name="ogre_tools"/></stack><stack name="mpi" path="/stacks/mpi/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="mpi">
     The mpi stack contains tools for high performance Message Passing between
     nodes in a distributed multi-processor system.
   </description>

  <author>Maintained by Radu Bogdan Rusu and John Hsu</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/mpi</url>
<package name="mpi_test"/><package name="rosmpi"/><package name="openmpi_devel"/><package name="knem"/></stack><stack name="cram_highlevel" path="" repo="cram_highlevel" repo_host="http://code.in.tum.de/git/cram-highlevel.git">
  <description brief="cram_highlevel">cram_highlevel</description>
  <author>Maintained by Lorenz Moesenlechner</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cram_highlevel</url>
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- nav_msgs, sensor_msgs, actionlib_msgs, geometry_msgs -->
  <depend stack="cram_pl"/> <!-- cram_reasoning, alexandria, trivial_garbage, designators, cram_math, process_modules, cram_utilities, cram_language, cram_execution_trace -->
  <depend stack="ias_common"/> <!-- vision_msgs, vision_srvs -->
  <depend stack="knowrob"/> <!-- yason, json_prolog -->
  <depend stack="motion_planning_common"/> <!-- mapping_msgs -->
  <depend stack="point_cloud_perception"/> <!-- point_cloud_converter, pcl, pcl_ros -->
  <depend stack="ros"/> <!-- std_msgs, roslisp, rospy, std_srvs -->
  <depend stack="roslisp_common"/> <!-- actionlib_lisp, cl_transforms, cl_tf -->
  <depend stack="roslisp_support"/> <!-- roslisp_runtime -->
  <depend stack="visualization_common"/> <!-- visualization_msgs -->

<package name="map_annotation"/><package name="cljlo"/><package name="location_costmap"/><package name="cl_json_pl_client"/><package name="ias_map_annotations"/><package name="cljlo_utils"/><package name="cram_plan_actionserver"/><package name="perception_process_module"/><package name="fake_process_modules"/><package name="table_costmap"/><package name="cram_plan_library"/><package name="cram_plan_failures"/><package name="cl_json_pl_server"/><package name="cram_plan_knowledge"/><package name="designators_ros"/><package name="cram_roslisp_common"/></stack><stack name="object_recognition_experimental" path="/branches/trunk_diamondback/stacks/object_recognition_experimental" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="object_recognition experimental">
     The object_recognition stack contains algorithms and tools relevant to
     object recognition from visual data.
   </description>
  <author>Maintained by Gary Bradski, Radu Bogdan Rusu, Marius Muja</author>
  <license>BSD,BSD,APACHE 2.0,LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/object_recognition_experimental</url>
  <depend stack="arm_navigation"/> <!-- move_arm_msgs -->
  <depend stack="collision_environment"/> <!-- collision_environment_msgs -->
  <depend stack="common"/> <!-- actionlib, nodelet -->
  <depend stack="common_msgs"/> <!-- nav_msgs, geometry_msgs, sensor_msgs -->
  <depend stack="drivers_experimental"/> <!-- dp_ptu47_pan_tilt_stage -->
  <depend stack="geometry"/> <!-- tf, bullet -->
  <depend stack="image_common"/> <!-- image_transport, camera_calibration_parsers -->
  <depend stack="image_pipeline"/> <!-- stereo_image_proc, stereo_msgs -->
  <depend stack="kinematics"/> <!-- kinematics_msgs -->
  <depend stack="object_recognition"/> <!-- rein, stereo_object_recognition, fast_template_detector -->
  <depend stack="perception_pcl"/> <!-- eigen3, pcl, pcl_ros -->
  <depend stack="point_cloud_perception"/> <!-- pcl_tf -->
  <depend stack="point_cloud_perception_experimental"/> <!-- pcl_point_cloud2_image_color -->
  <depend stack="pr2_cockpit"/> <!-- teleop_controllers -->
  <depend stack="pr2_common"/> <!-- pr2_msgs -->
  <depend stack="pr2_controllers"/> <!-- pr2_controllers_msgs -->
  <depend stack="pr2_mechanism"/> <!-- pr2_mechanism_msgs -->
  <depend stack="ros"/> <!-- std_srvs, std_msgs, roscpp, message_filters, rosrecord -->
  <depend stack="sandbox"/> <!-- tod -->
  <depend stack="vision_opencv"/> <!-- opencv2, image_geometry, cv_bridge -->
  <depend stack="visualization_common"/> <!-- ogre, visualization_msgs -->
  <depend stack="vslam"/> <!-- posest, frame_common, vslam_system -->

<package name="rbrief"/><package name="grasping_classifier"/><package name="stereo_object_model_generation"/><package name="rec_templates"/><package name="ess_detector"/><package name="tod_rein"/><package name="larks"/><package name="binary_pairs"/><package name="ftd_pt_learner"/></stack><stack name="kinect" path="" repo="kinect" repo_host="https://github.com/ros-pkg-git/kinect">
  <description brief="The ROS Kinect project">
  
    ROS Kinect is an open source project focused on the integration of the
    Microsoft Kinect sensor with ROS. The kinect ROS stack contains low-level
    drivers, visualization launch files, and PCL/OpenCV tutorials/demos.
  
  </description>
  <author>Maintained by Radu Bogdan Rusu, Tully Foote, Patrick Mihelich, Melonee Wise</author>
  <license>BSD,Apache 2.0</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/kinect</url>
  <depend stack="camera_drivers"/> <!-- camera_info_manager -->
  <depend stack="common"/> <!-- nodelet -->
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure -->
  <depend stack="geometry"/> <!-- eigen -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="point_cloud_perception"/> <!-- pcl_ros -->
  <depend stack="ros"/> <!-- roscpp -->
  <depend stack="vision_opencv"/> <!-- opencv2, image_geometry -->

<package name="freenect"/><package name="kinect_camera"/><package name="kinect_calibration"/><package name="kinect_pcl"/></stack><stack name="machine_learning" path="/branches/trunk_cturtle/stacks/machine_learning" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="machine_learning">machine_learning</description>
  <author>Maintained by Romain Thibaux</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/machine_learning</url>
  <depend stack="geometry"/> <!-- eigen -->
  <depend stack="ros"/>

<package name="hierarchical_kmeans"/></stack><stack name="art_vehicle" path="/trunk/stacks/art_vehicle" repo="utexas-art-ros-pkg" repo_host="http://utexas-art-ros-pkg.googlecode.com/svn">
  <description brief="ART autonomous vehicle support">

    ROS support for the Austin Robot Technology autonomous vehicle.

  </description>
  <author>Maintained by Jack O'Quin</author>
  <license>BSD,GPL</license>  
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/art_vehicle</url>
  <depend stack="camera_drivers"/> <!-- camera1394 -->
  <depend stack="common"/> <!-- nodelet -->
  <depend stack="common_msgs"/> <!-- nav_msgs, geometry_msgs, sensor_msgs -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure, driver_base -->
  <depend stack="geometry"/> <!-- tf, angles -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="image_pipeline"/> <!-- image_view -->
  <depend stack="image_transport_plugins"/> <!-- compressed_image_transport, theora_image_transport -->
  <depend stack="joystick_drivers"/> <!-- joy -->
  <depend stack="laser_drivers"/> <!-- sicktoolbox_wrapper -->
  <depend stack="ros"/> <!-- roscpp, roslib, std_msgs, rospy, rosbagmigration, rosbag -->
  <depend stack="ros_comm"/> <!-- for cturtle to diamondback migration -->
  <depend stack="simulator_stage"/> <!-- stage -->
  <depend stack="velodyne"/> <!-- velodyne_common -->
  <depend stack="visualization_common"/> <!-- visualization_msgs -->

<package name="simulator_art"/><package name="art_pilot"/><package name="art_common"/><package name="art_nav"/><package name="art_run"/><package name="art_image"/><package name="applanix"/><package name="art_map"/><package name="art_msgs"/><package name="art_servo"/></stack><stack name="collision_environment" path="/stacks/collision_environment/branches/into_unstable" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="collision_environment">collision_environment</description>
  <author>Maintained by Sachin Chitta</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/collision_environment</url>
  <depend stack="ros"/>

<package name="collision_environment_empty_pkg"/></stack><stack name="executive_smach" path="/stacks/executive_smach/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="executive_smach">
    The executive_smach stack contains the SMACH library, together
    with tools for introspection and a ROS integration package.
  </description>
  <author>Maintained by Wim Meeussen</author>
  <license>BSD</license>  
  <review notes="" status="doc reviewed"/>
  <url>http://ros.org/wiki/executive_smach</url>
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- actionlib_msgs -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rostest, rospy, rostopic -->
  <depend stack="rx"/> <!-- xdot -->

<package name="smach_viewer"/><package name="smach_msgs"/><package name="smach"/><package name="smach_ros"/></stack><stack name="orocos_tools" path="" repo="orocos_tools" repo_host="https://github.com/RCPRG-ros-pkg/orocos_tools">
  <description brief="orocos_tools">This stack contain packages that help integrate OROCOS with ROS.</description>
  <author>Maintained by Konrad Banachowicz</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/orocos_tools</url>
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- sensor_msgs, actionlib_msgs, geometry_msgs -->
  <depend stack="orocos_toolchain_ros"/> <!-- rtt, rtt_ros_integration, ocl, rtt_ros_integration_std_msgs -->
  <depend stack="pr2_controllers"/> <!-- trajectory_msgs, pr2_controllers_msgs -->
  <depend stack="ros"/> <!-- roslib, roscpp -->

<package name="rtt_ros_integration_actionlib_msgs"/><package name="rtt_ros_integration_geometry_msgs"/><package name="oro_action_server_test"/><package name="rtt_ros_integration_sensor_msgs"/><package name="oro_action_server"/><package name="rtt_ros_integration_trajectory_msgs"/></stack><stack name="web_bags" path="/branches/trunk_cturtle/stacks/web_bags" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="web bags">
    Processing bag files and viewing them on the web.
  </description>
  <author>Tim Field/tfield@willowgarage.com,Scott Hassan/hassan@willowgarage.com</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/web_bags</url>
<package name="bagproc_video"/><package name="bagproc_template"/><package name="bagproc_thumbnails"/><package name="pygeoip"/><package name="bagproc_diagnostics"/><package name="web_bags_core"/><package name="wbag"/></stack><stack name="ua_language" path="/trunk/arrg/ua_language" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="Packages for natural language processing ">
    When migration is complete, this stack will contain packages for speech
    recognition, parsing, text-to-speech, and other NL-related tasks.
    </description>

    <author>Maintained by Daniel Hewlett</author>
    <license>BSD</license>  
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/ua_language</url>
    <depend stack="ros"/>
<package name="espeak"/><package name="nltk"/></stack><stack name="cturtle" path="/trunk/kul-ros-pkg/stacks/orocos_toolchain_ros/tags/cturtle" repo="kul-ros-pkg" repo_host="http://svn.mech.kuleuven.be/repos/orocos">
  <description brief="orocos_toolchain_ros">

      This stack contains all software necessary to build
      systems using both Orocos and ROS infrastructures. The complete
      <a href="http://www.orocos.org/wiki/orocos/toolchain">Orocos Toolchain</a> is integrated in the ROS build system and the
      rtt_ros_integration package allows easy communication between Orocos components
      and ROS nodes.
  
  </description>
  <author>Maintained by Ruben Smits - Steven Bellens</author>
  <license>BSD,GPL + runtime exception,LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/orocos_toolchain_ros</url>
  <depend stack="ros"/> <!-- rosbuild, roslib, std_msgs, roscpp -->

<package name="rtt_ros_integration"/><package name="typelib"/><package name="utilmm"/><package name="ocl"/><package name="rtt_exercises"/><package name="rtt_ros_integration_std_msgs"/><package name="utilrb"/><package name="orogen"/><package name="rtt_ros_integration_example"/><package name="rtt"/></stack><stack name="ethzasl_aseba" path="" repo="ethzasl_aseba" repo_host="https://github.com/ethz-asl/ros-aseba">
  <description brief="ethzasl_aseba">
    Bridge to access an ASEBA network from ROS.
    For more information about aseba, see: http://mobots.epfl.ch/aseba.html
  </description>
  <author>St√©phane Magnenat</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ethzasl_aseba</url>
  <depend stack="common"/> 
  <depend stack="common_msgs"/>
  <depend stack="ros"/>
<package name="asebaros"/></stack><stack name="cart_pushing" path="/stacks/cart_pushing/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="cart_pushing">cart_pushing</description>
  <author>Maintained by Bhaskara Marthi</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cart_pushing</url>
  <depend stack="common"/> <!-- actionlib, filters, pluginlib -->
  <depend stack="common_msgs"/> <!-- nav_msgs, sensor_msgs, actionlib_msgs, geometry_msgs -->
  <depend stack="geometry"/> <!-- tf, kdl, angles, tf_conversions, bullet -->
  <depend stack="laser_pipeline"/> <!-- laser_filters, laser_geometry -->
  <depend stack="motion_planners"/> <!-- sbpl -->
  <depend stack="navigation"/> <!-- move_base, map_server, costmap_2d, nav_view, nav_core, fake_localization, move_base_msgs, amcl, base_local_planner -->
  <depend stack="navigation_experimental"/> <!-- isolated_point_filter, twist_recovery, assisted_teleop -->
  <depend stack="pr2_common"/> <!-- pr2_machine -->
  <depend stack="pr2_controllers"/> <!-- pr2_gripper_action, pr2_controllers_msgs -->
  <depend stack="pr2_mechanism"/> <!-- pr2_mechanism_msgs, pr2_controller_manager -->
  <depend stack="pr2_navigation"/> <!-- pr2_navigation_teleop, pr2_navigation_global, pr2_navigation_perception -->
  <depend stack="pr2_simulator"/> <!-- pr2_gazebo -->
  <depend stack="ros"/> <!-- rosconsole, roscpp, roslib, std_msgs, topic_tools, rospy, rostopic -->
  <depend stack="simulator_stage"/> <!-- stage -->
  <depend stack="visualization_common"/> <!-- visualization_msgs -->

<package name="cart_local_planner"/><package name="cart_pushing_executive"/><package name="articulate_cart"/><package name="cart_pushing_stage"/><package name="cart_state_estimator"/><package name="sbpl_cart_planner"/><package name="pr2_gazebo_cartworld"/><package name="costmap_trajectory_checker"/><package name="cart_pushing_msgs"/><package name="pr2_pose_saver"/><package name="manipulation_transforms"/></stack><stack name="soem" path="/trunk/kul-ros-pkg/stacks/soem" repo="kul-ros-pkg" repo_host="http://svn.mech.kuleuven.be/repos/orocos">
  <description brief="soem">soem</description>
  <author>Maintained by Ruben Smits</author>
  <license>GPL with runtime exception,BSD,LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/soem</url>
  <depend stack="ros"/>
  <depend stack="orocos_toolchain_ros"/>

<package name="soem_beckhoff_drivers"/><package name="soem_master"/><package name="soem_core"/></stack><stack name="velodyne" path="/trunk/stacks/velodyne" repo="utexas-art-ros-pkg" repo_host="http://utexas-art-ros-pkg.googlecode.com/svn">
  <description brief="Velodyne HDL-64E 3D LIDAR support">

    ROS support for the Velodyne HDL-64E 3D LIDAR.

  </description>
  <author>Maintained by Jack O'Quin</author>
  <license>BSD</license>  
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/velodyne</url>

  <depend stack="common"/> <!-- nodelet -->
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="geometry"/> <!-- tf, angles -->
  <depend stack="ros"/> <!-- rostest, rosbag, roscpp -->
  <depend stack="visualization"/> <!-- rviz -->

<package name="velodyne_common"/><package name="velodyne_msgs"/><package name="velodyne_viz"/><package name="velodyne_ringcomp"/></stack><stack name="dynamic_voronoi" path="/trunk/dynamic_voronoi" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn" version="0.1.0">
  <description brief="Efficient computation and updating of Euclidean distance maps and Euclidean Voronoi diagrams on 2D grid maps.">

<p>
This stack provides software to compute and update Euclidean distance maps (DM) and Euclidean Voronoi diagrams (GVD) on 2D grid maps.
</p>

<p>
The program is initialized with a binary occupancy grid map and computes the corresponding DM and GVD. When provided with points that mark newly occupied or freed cells, the DM and GVD can be updated efficiently to reflect the changes in the environment.
</p>

<p>
Details on the algorithms can be found in the corresponding paper. Please cite the paper if you use it for scientific work:<br/>
B. Lau, C. Sprunk and W. Burgard, Improved Updating of Euclidean Distance Maps and Voronoi Diagrams, IEEE Intl. Conf. on Intelligent Robots and Systems (IROS), Taipei, Taiwan, 2010.<br/>
See also <a href="http://www.informatik.uni-freiburg.de/~lau/dynamicvoronoi">http://www.informatik.uni-freiburg.de/~lau/dynamicvoronoi</a>
</p>

  </description>
  <author>Boris Lau, Christoph Sprunk, Wolfram Burgard</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/dynamicvoronoi</url>
  <depend stack="ros"/>
<package name="dynamicvoronoi"/></stack><stack name="twoLevelMTTD_stack" path="/trunk/kul-ros-pkg/stacks/twoLevelMTTD_stack" repo="kul-ros-pkg" repo_host="http://svn.mech.kuleuven.be/repos/orocos">
  <description brief="twoLevelMTTD_stack">

Stack for the tracking and detection of multiple targets using the twoLevelMTTD algorithm

</description>
  <author>Maintained by Tinne De Laet</author>
  <license>LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/twoLevelMTTD_stack</url>
  <depend stack="ros"/>

<package name="twoLevelMTTDExamples"/><package name="MTTD_simulation"/><package name="readGitData"/><package name="linearAssignmentProblem"/><package name="MTTD_visualize"/><package name="MTTD_interface"/><package name="MTTD_background_subtraction"/><package name="dataAssociationMurty"/><package name="srl_people_tracker_0.2"/><package name="readLaserScannerMeasurementsFile"/><package name="twoLevelMTTD"/><package name="MTTD_msgs"/><package name="MTTDMeasurementSimulator"/><package name="background"/><package name="separateEnvironmentFromLaserScan"/><package name="RBBM"/></stack><stack name="executive_trex" path="/branches/trunk_cturtle/stacks/executive_trex" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="trex">

     trex

  </description>
  <author>Maintained by Conor McGann</author>
  <license>CreativeCommons-by-nc-sa-2.0,BSD, NOSA,ZLib,Commercial,wxWindows,binary only,NOSA,LGPL,BSD,Boost,MIT</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/executive_trex</url>
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- geometry_msgs -->
  <depend stack="ros"/> <!-- rosconsole, std_msgs, roscpp -->

<package name="PLASMA"/><package name="trex"/><package name="trex_ros"/><package name="antlr"/></stack><stack name="dance_demo" path="/branches/trunk_cturtle/stacks/dance_demo" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="dance_demo">dance_demo</description>
  <author>Maintained by Eitan Marder-Eppstein</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/dance_demo</url>
  <depend stack="ros"/>

<package name="party_follow_me"/><package name="bag_player"/><package name="foreign_relay"/><package name="trigger_msgs"/><package name="joint_trajectory_replay"/><package name="dance_bags"/><package name="trigger_commands"/><package name="robot_kaleidoscope"/><package name="auto_grip"/><package name="pose_projector"/><package name="checkerboard_finder"/></stack><stack name="unstable" path="/trunk/kul-ros-pkg/stacks/orocos_toolchain_ros/tags/unstable" repo="kul-ros-pkg" repo_host="http://svn.mech.kuleuven.be/repos/orocos">
  <description brief="orocos_toolchain_ros">

      This stack contains all software necessary to build
      systems using both Orocos and ROS infrastructures. The complete
      <a href="http://www.orocos.org/wiki/orocos/toolchain">Orocos Toolchain</a> is integrated in the ROS build system and the
      rtt_ros_integration package allows easy communication between Orocos components
      and ROS nodes.
  
  </description>
  <author>Maintained by Ruben Smits - Steven Bellens</author>
  <license>BSD,GPL + runtime exception,LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/orocos_toolchain_ros</url>
  <depend stack="ros"/> <!-- rosbuild, roslib, std_msgs, roscpp -->

<package name="rtt_ros_integration"/><package name="typelib"/><package name="utilmm"/><package name="ocl"/><package name="rtt_exercises"/><package name="rtt_ros_integration_std_msgs"/><package name="utilrb"/><package name="orogen"/><package name="rtt_ros_integration_example"/><package name="rtt"/></stack><stack name="common" path="/stacks/common/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="common code for personal robots">
    This stack contains tools built on top of ROS core which are
    commonly used throughout the ROS ecosystem.
  </description>
  <author>Maintained by Tully Foote tfoote@willowgarage.com</author>
  <license>LGPL,ZLib,Boost Software License (Poco),Mozilla Public License Version 1.1,BSD,MIT</license>  
  <review notes="2009-10-07" status="doc reviewed"/>
  <url>http://ros.org/wiki/common</url>
  <depend stack="common_msgs"/> <!-- actionlib_msgs -->
  <depend stack="ros"/> <!-- rosbuild, roslib -->
  <depend stack="ros_comm"/> <!-- rosconsole, roscpp, message_filters, std_msgs, rostest, rospy -->

<package name="nodelet_tutorial_math"/><package name="nodelet_topic_tools"/><package name="pluginlib"/><package name="yaml_cpp"/><package name="tinyxml"/><package name="bond"/><package name="smclib"/><package name="xacro"/><package name="nodelet"/><package name="filters"/><package name="bondcpp"/><package name="bfl"/><package name="test_nodelet"/><package name="bondpy"/><package name="actionlib"/><package name="test_bond"/></stack><stack name="world_db_model" path="/branches/trunk_cturtle/stacks/world_db_model" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="world_db_model">
    world_db_model is a framework for creating and maintaining a
    consistent and persistent state of the world. The idea is to
    record raw sensor data in bags and provide the results an
    interface to spatially query detector results. The results of
    detector plug-ins are calculated on demand and cached in an
    sqlite3 database. world_db_model provides a core node that
    contains the basic functionality to load plug-ins, record data
    into bags and play them back and store detection results. Further,
    it provides a plug-in for recording the tf-tree which is essential
    for spatial indexing in the bags, and a library for the easy
    creation of detector plug-ins.
  </description>
  <author>Maintained by Lorenz Moesenlechner</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/world_db_model</url>
  <depend stack="common"/> <!-- actionlib, pluginlib -->
  <depend stack="common_msgs"/> <!-- geometry_msgs, actionlib_msgs, sensor_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="point_cloud_perception_experimental"/> <!-- pcl_detectors -->
  <depend stack="ros"/> <!-- roslisp, roscpp, roslib, std_msgs, rospy, rosbag -->
  <!--depend stack="sandbox" />  model_database -->
  <depend stack="roslisp_common"/> <!-- actionlib_lisp -->

<package name="world_db_pcl_detectors"/><package name="world_db_bag_player"/><package name="world_db_core"/><package name="world_db_detector_lib"/><package name="world_db_table_highlevel"/><package name="tf_recorder_plugin"/></stack><stack name="OIT" path="/trunk/OIT" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="OIT: Overhead Interaction Toolkit">

    Overhead Interaction Toolkit: This is a collection of packages designed to operate a robot with limited or no on-board sensing. Instead, an overhead camera is used to track the position of the robot, obstacles, and other people in a scene.

  </description>
  <author>Maintained by David Feil-Seifer/dfseifer@usc.edu</author>
  <license>BSD</license>  
  <review status="Unreviewed"/>
  <url/>
  <depend stack="common_msgs"/> <!-- sensor_msgs, geometry_msgs -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure -->
  <depend stack="image_common"/> <!-- image_transport, camera_calibration_parsers -->
  <depend stack="ros"/> <!-- rospy, std_srvs, roscpp, message_filters, rosbagmigration -->
  <depend stack="vision_opencv"/> <!-- opencv2, image_geometry, cv_bridge -->

<package name="ir_finder"/><package name="overhead_planner"/><package name="color_picker"/><package name="color_blob_finder"/><package name="floor_align"/><package name="checkerboard"/><package name="obstacle_avoidance"/><package name="oit_msgs"/><package name="image_letterboxer"/><package name="oit_launch"/><package name="point_map"/></stack><stack name="vision" path="/branches/trunk_cturtle/vision" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="vision">

    These are vision-related packages.

  </description>
  <author>James Bowman jamesb@willowgarage.com</author>
  <license>BSD,BSD and GPL,LGPL,Creative Commons (Attribution-NonCommercial-ShareAlike),Public</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/vision</url>
  <depend stack="common_msgs"/> <!-- nav_msgs, sensor_msgs -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure -->
  <depend stack="geometry"/> <!-- tf, eigen -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="point_cloud_perception"/> <!-- ann, pcl, pcl_ros -->
  <depend stack="ros"/> <!-- rospy, rostest, std_msgs, roscpp, message_filters -->
  <!--depend stack="sandbox" />  vocabulary_tree -->
  <depend stack="vision_opencv"/> <!-- opencv2, image_geometry, cv_bridge -->
  <depend stack="visual_feature_detectors"/> <!-- features_2d -->
  <depend stack="vslam"/> <!-- sba -->

<package name="chamfer_matching"/><package name="scanmatcher"/><package name="cmvision"/><package name="toro"/><package name="image_segmentation"/><package name="pytoro"/></stack><stack name="ccny_vision" path="" repo="ccny-ros-pkg" repo_host="http://robotics.ccny.cuny.edu/git/ccny-ros-pkg.git/">
  <description brief="vision">CCNY Computer Vision Stack</description>
  <author>Maintained by Gautier Dumonteil, Ivan Dryanovski, William Morris et al.</author>
  <license>GPL</license>  
  <review notes="" status="unreviewed test2"/>
  <url>http://www.ros.org/wiki/ccny_vision</url>
  <depend stack="ros"/>
<package name="ar_pose"/><package name="artoolkit"/></stack><stack name="point_cloud_perception_experimental" path="/branches/trunk_cturtle/stacks/point_cloud_perception_experimental" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="point_cloud_perception_experimental">
     The point_cloud_perception_experimental stack contains algorithms and tools that deal with 3D
     point cloud data from a variety of different sensing devices, but are in an experimental stage.
   </description>
  <author>Maintained by Radu Bogdan Rusu and Caroline Pantofaru</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/point_cloud_perception_experimental</url>
<package name="pcl_detectors_clients"/><package name="pcl_detectors"/><package name="range_image_tests"/><package name="eigen_tests"/><package name="octomap2"/><package name="octovis2"/><package name="virtual_scanner"/><package name="pcl_registration_experimental"/><package name="heat_equation_solver"/><package name="data_acquisition_ptu"/><package name="pcl_opencv_bridge"/><package name="mapping_tools"/><package name="surface_reconstruction"/><package name="canon_calibrate"/><package name="object_mapping"/><package name="point_cloud_python"/><package name="pcl_point_cloud2_image_color"/></stack><stack name="mvog_mapping" path="" repo="ccny-ros-pkg" repo_host="http://robotics.ccny.cuny.edu/git/ccny-ros-pkg.git/">
  <description brief="mvog_mapping">mvog_mapping</description>
  <author>Maintained by Ivan Dryanovski</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/mvog_mapping</url>
  <depend stack="ros"/>

<package name="mvog_server"/><package name="mvog_model"/><package name="mvog_gtk_gui"/></stack><stack name="motion_planning_visualization" path="/stacks/motion_planning_visualization/branches/into_unstable" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="motion_planning_visualization">motion_planning_visualization</description>
  <author>Maintained by Sachin Chitta</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/motion_planning_visualization</url>
  <depend stack="ros"/>

<package name="motion_planning_visualization_empty_pkg"/></stack><stack name="ccny_slam_gmapping" path="" repo="ccny-ros-pkg" repo_host="http://robotics.ccny.cuny.edu/git/ccny-ros-pkg.git/">
  <description brief="Map Building with Gmapping (CCNY rev)">

    ccny_slam_gmapping contains a modification of slam_gmapping. slam_gmapping contains the gmapping package, which provides SLAM capabilities. GMapping is a Creative-Commons-licensed open source package provided by OpenSlam.

  </description>
  <author>Brian Gerkey</author>
  <license>CreativeCommons-by-nc-sa-2.0</license>  
  <review notes="" status="Doc reviewed"/>
  <url>http://ros.org/wiki/slam_gmapping</url>
  <depend stack="common_msgs"/> <!-- nav_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="navigation"/> <!-- map_server -->
  <depend stack="ros"/> <!-- rosconsole, std_msgs, roscpp, message_filters -->

<package name="ccny_gmapping"/></stack><stack name="vmi_external_dependencies" path="/trunk/vmi_external_dependencies" repo="vmi-ros-pkg" repo_host="http://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg">
  <description brief="External Dependencies">
  This stack contains various external dependencies and patches which
  cannot be installed directly by rosdep. Probably some of them will
  be moved to rosdep soon.
  
  </description>
  <author>Maintained by Luis Roalter</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/vmi_external_dependencies</url>
  <depend stack="ros"/>

<package name="python_xbee"/><package name="python_facebook"/><package name="python_twitter"/><package name="python_pmw"/><package name="python_oauth2"/><package name="artoolkitplus"/><package name="python_feedparser"/><package name="libphidgets21"/></stack><stack name="geometry_tutorials" path="/stacks/geometry_tutorials/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="geometry_tutorials">geometry_tutorials</description>
  <author>Maintained by Tully Foote</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/geometry_tutorials</url>
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="joystick_drivers_tutorials"/> <!-- turtle_teleop -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rospy, roscpp -->
  <depend stack="ros_tutorials"/> <!-- turtlesim -->

<package name="turtle_tf"/></stack><stack name="pr2_cockpit" path="/stacks/pr2_cockpit/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_cockpit">
    The pr2_cockpit stack runs the teleoperation setup at Willow
    Garage, including device drivers, realtime controllers, and launch
    scripts.
  </description>
  <author>Stuart Glaser</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_cockpit</url>
  <depend stack="common"/> <!-- actionlib, pluginlib -->
  <depend stack="common_msgs"/> <!-- sensor_msgs, geometry_msgs, diagnostic_msgs -->
  <depend stack="geometry"/> <!-- kdl, tf, tf_conversions, eigen, angles -->
  <depend stack="image_pipeline"/> <!-- image_rotate -->
  <depend stack="joystick_drivers"/> <!-- joy -->
  <depend stack="pr2_controllers"/> <!-- control_toolbox, pr2_controllers_msgs -->
  <depend stack="pr2_mechanism"/> <!-- pr2_controller_manager, pr2_mechanism_model, realtime_tools, pr2_controller_interface -->
  <depend stack="robot_model"/> <!-- kdl_parser -->
  <depend stack="ros"/> <!-- std_msgs, rospy, roscpp, std_srvs -->
  <depend stack="ros_realtime"/> <!-- rosatomic, lockfree, allocators, rosrt -->

<package name="teleop_microscribe"/><package name="infinity_pedals"/><package name="teleop_controllers"/><package name="pr2_cockpit_msgs"/><package name="microscribe"/></stack><stack name="lse_sensor_network" path="/trunk/unstable/lse_sensor_network" repo="isr-uc-ros-pkg" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="lse_sensor_network">
  
  	Stack for the sensor networks developed at LSE. Currently holds the sensornet package, however support for a wireless sensor network should be added in the future.
  
  </description>
  <author>Gon√ßalo Cabrita and Pedro Sousa</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/lse_sensor_network</url>
  <depend stack="ros"/>

<package name="sensornet"/></stack><stack name="pr2_power_drivers" path="/stacks/pr2_power_drivers/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="PR2 Power Drivers">

     Power drivers for the PR2 robot.

  </description>
  <author>Maintained by Blaise Gassend</author>
  <license>BSD</license>  
  <review notes="Dec 2009" status="Doc reviewed"/>
  <url>http://ros.org/wiki/pr2_power_drivers</url>
  <depend stack="common_msgs"/> <!-- diagnostic_msgs -->
  <depend stack="diagnostics"/> <!-- diagnostic_updater -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure -->
  <depend stack="pr2_common"/> <!-- pr2_msgs -->
  <depend stack="ros"/> <!-- rospy, std_msgs, roscpp -->

<package name="ocean_battery_driver"/><package name="power_monitor"/><package name="pr2_power_board"/></stack><stack name="joystick_drivers_tutorials" path="/stacks/joystick_drivers_tutorials/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Tutorials for the joystick_drivers stack.">
    This stack contains the turtle_teleop package, which contains tutorials
    for the joystick_drivers stack.
  </description>
  <author>Maintained by Blaise Gassend</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/joystick_drivers_tutorials</url>
  <depend stack="joystick_drivers"/> <!-- joy, spacenav_node, ps3joy, wiimote -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rospy, roscpp -->
  <depend stack="ros_tutorials"/> <!-- turtlesim -->

<package name="turtle_teleop"/></stack><stack name="dfki_sks_laser_drivers" path="/trunk/dfki_sks_laser_drivers" repo="dfki-sks-ros-pkg" repo_host="https://svn-agbkb.informatik.uni-bremen.de/dfki-sks-ros-pkg">
  <description brief="dfki_sks_laser_drivers">
    The dfki_sks_laser_drivers stack contains ROS laser rangefinder
    driver nodes developed at
    the <a href="http://www.dfki.de/">DFKI</a> <a href="http://dfki.de/sks">Safe
    and Secure Cognitive Systems</a> research department in Bremen,
    Germany.
  </description>
  <author>Maintained by Rene Wagner</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/dfki_sks_laser_drivers</url>
  <depend stack="ros"/>

<package name="rod4_node"/><package name="timeutils"/></stack><stack name="drivers_experimental" path="/branches/trunk_cturtle/stacks/drivers_experimental" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="drivers_experimental">Experimental or unsupported drivers. This stack is not intended for release and packages within it should be used individually.</description>
  <author>Maintained by Blaise Gassend</author>
  <license>BSD,unknown,Proprietary</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/drivers_experimental</url>
  <depend stack="camera_drivers"/> <!-- camera_info_manager, wge100_camera -->
  <depend stack="common_msgs"/> <!-- sensor_msgs, diagnostic_msgs -->
  <depend stack="diagnostics"/> <!-- self_test, diagnostic_updater -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure, driver_base, timestamp_tools -->
  <depend stack="geometry"/> <!-- tf, angles -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="point_cloud_perception"/> <!-- pcl -->
  <depend stack="pr2_controllers"/> <!-- ethercat_trigger_controllers, pr2_calibration_controllers, robot_mechanism_controllers -->
  <depend stack="pr2_mechanism"/> <!-- pr2_controller_manager, realtime_tools, pr2_controller_interface -->
  <depend stack="pr2_robot"/> <!-- pr2_camera_synchronizer, pr2_etherCAT -->
  <depend stack="ros"/> <!-- std_msgs, rostest, rospy, roscpp -->
  <depend stack="vision_opencv"/> <!-- opencv2, cv_bridge -->
  <depend stack="visualization_common"/> <!-- visualization_msgs -->

<package name="gevicam_puregev"/><package name="serial_port"/><package name="gevicam_camera"/><package name="nvidia_gpu_monitor"/><package name="ledwiz"/><package name="apcupsd_node"/><package name="camera_trigger_test"/><package name="ac_power_monitor"/><package name="canon_gphoto"/><package name="dp_ptu47_pan_tilt_stage"/><package name="gevicam_trigger"/><package name="hokuyo_node_plus"/></stack><stack name="shared_autonomy" path="/trunk/stacks/shared_autonomy" repo="bosch-ros-pkg" repo_host="https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg">
  <description brief="shared_autonomy">A stack for packages related to shared autonomy</description>
  <author>Maintained by Benjamin Pitzer</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/shared_autonomy</url>
  <depend stack="common_msgs"/> 
  <depend stack="navigation"/> <!-- base_local_planner, costmap_2d -->
  <depend stack="object_manipulation"/> 
  <depend stack="ros"/> <!-- roscpp -->
  <depend stack="visualization_common"/>

<package name="augmented_grasp_planner"/><package name="grabcut_3d"/><package name="interactive_rviz_msgs"/><package name="safe_teleop_base"/><package name="interactive_rviz_helper"/><package name="augmented_object_detector"/><package name="safe_teleop_stage"/><package name="safe_teleop_pr2"/></stack><stack name="sscrovers-ros-pkg" path="/sscrovers-ros-pkg" repo="sscrovers-ros-pkg" repo_host="http://subversion.assembla.com/svn/ssc-rovers">
  <description brief="sscrovers-ros-pkg">sscrovers-ros-pkg</description>
  <author>Maintained by renato</author>
  <license/>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sscrovers-ros-pkg</url>
  <depend stack="ros"/>

<package name="sscrovers_stereovision"/><package name="libdc1394v2"/><package name="pgrlibdcstereo"/><package name="target_detector"/><package name="Triclops"/><package name="bumblebee2"/><package name="pyopencv"/><package name="Aria"/><package name="ROSARIA"/><package name="sscrovers_2dnav"/><package name="sscrovers_tf_conf"/><package name="sscrovers_laser_pub"/></stack><stack name="pr2_arm_navigation_tests" path="/stacks/pr2_arm_navigation_tests/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="arm_navigation_tests_pr2">

     arm_navigation_tests_pr2

  </description>
  <author>Maintained by Sachin Chitta</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_arm_navigation_tests</url>
  <depend stack="arm_navigation"/> <!-- move_arm -->
  <depend stack="collision_environment"/> <!-- collision_space, collision_map -->
  <depend stack="common"/> <!-- pluginlib -->
  <depend stack="common_msgs"/> <!-- visualization_msgs -->
  <depend stack="diagnostics"/> <!-- diagnostic_aggregator -->
  <depend stack="image_pipeline"/> <!-- image_proc -->
  <depend stack="kinematics"/> <!-- kinematics_base -->
  <depend stack="motion_planning_common"/> <!-- planning_models -->
  <depend stack="motion_planning_environment"/> <!-- planning_environment -->
  <depend stack="pr2_arm_navigation"/> <!-- pr2_arm_navigation_kinematics, pr2_arm_navigation_perception, pr2_arm_navigation_planning, pr2_arm_navigation_actions, pr2_arm_navigation_filtering -->
  <depend stack="pr2_common"/> <!-- pr2_description -->
  <depend stack="pr2_controllers"/> <!-- pr2_head_action, single_joint_position_action, joint_trajectory_action, pr2_gripper_action -->
  <depend stack="pr2_kinematics"/> <!-- pr2_arm_kinematics -->
  <depend stack="pr2_kinematics_with_constraints"/> <!-- pr2_arm_kinematics_constraint_aware -->
  <depend stack="pr2_mechanism"/> <!-- pr2_controller_manager -->
  <depend stack="pr2_simulator"/> <!-- pr2_gazebo -->
  <depend stack="robot_model"/> <!-- robot_state_publisher -->
  <depend stack="ros"/> <!-- roslib -->
  <depend stack="ros_comm"/> <!-- roscpp, rostopic -->
  <depend stack="simulator_gazebo"/> <!-- gazebo_tools, gazebo -->

<package name="arm_navigation_tests"/><package name="pr2_arm_ik_tests"/><package name="test_collision_space"/></stack><stack name="ccny_ground_station" path="" repo="ccny-ros-pkg" repo_host="http://robotics.ccny.cuny.edu/git/ccny-ros-pkg.git/">
  <description brief="ccny_ground_station">CCNY Ground Station Tools</description>
  <author>Maintained by William Morris, Ivan Dryanovski, Gautier Dumonteil</author>
  <license>GPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ccny_ground_station</url>
  <depend stack="ros"/>

<package name="osmgpsmap"/><package name="gpsd_viewer"/><package name="ground_station"/></stack><stack name="lse_communication" path="/trunk/unstable/lse_communication" repo="isr-uc-ros-pkg" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="lse_communication">
  
  	Communication stack holding some useful tools for serial port communication, CerealPort, as well as a package for communication between robots, WifiComm.
  
  </description>
  <author>Gon√ßalo Cabrita and Pedro Sousa</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/lse_communication</url>
  <depend stack="ros"/> <!-- roscpp -->

<package name="wifi_comm"/><package name="cereal_port"/></stack><stack name="vslam" path="/stacks/vslam/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="vslam">Visual SLAM with sparse bundle adjustment</description>
  <author>Kurt Konolige, Patrick Mihelich, Helen Oleynikova</author>
  <license>Public Domain,BSD,LGPL,LGPL/GPL</license>  
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/vslam</url>
  <depend stack="common_msgs"/> <!-- nav_msgs, sensor_msgs, geometry_msgs, visualization_msgs -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure -->
  <depend stack="geometry"/> <!-- eigen3, tf -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="image_pipeline"/> <!-- stereo_msgs -->
  <depend stack="perception_pcl"/> <!-- pcl -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_msgs, roscpp, message_filters -->
  <depend stack="vision_opencv"/> <!-- opencv2, image_geometry, cv_bridge -->

<package name="sparselib"/><package name="suitesparse"/><package name="vocabulary_tree"/><package name="posest"/><package name="vslam_system"/><package name="csparse"/><package name="sba"/><package name="frame_common"/><package name="bpcg"/></stack><stack name="pr2_arm_navigation" path="/stacks/pr2_arm_navigation/branches/into_unstable" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_arm_navigation">
    This stack contains the launch files for arm navigation with the PR2 robot arms. 
  </description>
  <author>Maintained by Sachin Chitta</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_arm_navigation</url>
  <depend stack="arm_navigation"/> <!-- move_arm, collision_free_arm_trajectory_controller, move_arm_head_monitor, move_arm_msgs -->
  <depend stack="common_msgs"/> <!-- actionlib_msgs, sensor_msgs -->
  <depend stack="image_pipeline"/> <!-- stereo_image_proc -->
  <depend stack="kinematics"/> <!-- kinematics_msgs -->
  <depend stack="laser_pipeline"/> <!-- laser_filters, laser_assembler -->
  <depend stack="motion_planners"/> <!-- chomp_motion_planner, ompl_planning -->
  <depend stack="motion_planning_common"/> <!-- planning_environment_msgs, planning_environment, motion_planning_msgs, mapping_rviz_plugin, robot_self_filter, collision_environment_msgs, collision_map -->
  <depend stack="point_cloud_perception"/> <!-- point_cloud_converter -->
  <depend stack="pr2_common"/> <!-- pr2_machine, pr2_msgs -->
  <depend stack="pr2_controllers"/> <!-- pr2_mechanism_controllers, joint_trajectory_action, pr2_controllers_msgs -->
  <depend stack="pr2_kinematics"/> <!-- pr2_arm_kinematics_constraint_aware, pr2_arm_kinematics -->
  <depend stack="pr2_mechanism"/> <!-- pr2_controller_manager -->
  <depend stack="ros"/>
  <depend stack="trajectory_filters"/> <!-- trajectory_filter_server, constraint_aware_spline_smoother, spline_smoother -->

<package name="pr2_arm_navigation_actions"/><package name="pr2_arm_navigation_filtering"/><package name="pr2_arm_navigation_config"/><package name="pr2_3dnav"/><package name="pr2_arm_navigation_tutorials"/><package name="pr2_arm_navigation_planning"/><package name="pr2_arm_navigation_kinematics"/><package name="pr2_arm_navigation_perception"/></stack><stack name="neato_robot" path="/trunk/neato_robot" repo="albany-ros-pkg" repo_host="http://albany-ros-pkg.googlecode.com/svn">
  <description brief="Neato XV-11 drivers and configuration files.">
    This stack contains drivers for the Neato XV-11 robot. It also contains sample configuration files for running the Navigation stack on an XV-11.
  </description>
  <author>Maintained by Michael Ferguson</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/neato_robot</url>

  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="ros"/> <!-- std_msgs, roscpp, rospy -->
  
<package name="neato_driver"/><package name="2dnav_neato"/><package name="neato_node"/></stack><stack name="orocos_toolchain_ros-0.1.0" path="/trunk/kul-ros-pkg/stacks/orocos_toolchain_ros/tags/orocos_toolchain_ros-0.1.0" repo="kul-ros-pkg" repo_host="http://svn.mech.kuleuven.be/repos/orocos">
  <description brief="orocos_toolchain_ros">

      This stack contains all software necessary to build
      systems using both Orocos and ROS infrastructures. The complete
      orocos toolchain is integrated in the ROS build system and the
      rtt_ros_integration package allows easy communication between Orocos components
      and ROS nodes.
  
  </description>
  <author>Maintained by Ruben Smits - Steven Bellens</author>
  <license>LGPL, GPL with runtime exception</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/orocos_toolchain_ros</url>
  <depend stack="ros"/>

<package name="rtt_ros_integration"/><package name="typelib"/><package name="utilmm"/><package name="ocl"/><package name="rtt_exercises"/><package name="rtt_ros_integration_std_msgs"/><package name="utilrb"/><package name="orogen"/><package name="rtt_ros_integration_example"/><package name="rtt"/></stack><stack name="ias_common" path="/stacks/ias_common" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="ias_common">ias_common</description>
  <author>Maintained by Lorenz Moesenlechner</author>
  <license>Closed</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ias_common</url>
  <depend stack="common_msgs"/> <!-- geometry_msgs -->
  <depend stack="ros"/> <!-- roscpp -->

<package name="triangle_mesh_msgs"/><package name="navp_action"/><package name="vision_msgs"/><package name="cogman_msgs"/><package name="annotation_srvs"/><package name="vision_srvs"/></stack><stack name="mrpt_slam" path="/trunk/mrpt_slam" repo="mrpt-ros-pkg" repo_host="http://mrpt-ros-pkg.googlecode.com/svn">
  <description brief="mrpt_slam">mrpt_slam</description>
  <author>Maintained by Jose Luis</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/mrpt_slam</url>
  <depend stack="mrpt_common"/> <!-- mrpt_msgs -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- roscpp -->

<package name="mrpt_ro_slam"/><package name="mrpt_ekf_slam_3d"/><package name="mrpt_ekf_slam_2d"/></stack><stack name="pr2_navigation_apps" path="/stacks/pr2_navigation_apps/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="Navigation applications for the PR2 robot">
    This stack holds a collection of navigation applications that can be run on the PR2 robot.
  </description>
  <author>Maintained by Eitan Marder-Eppstein</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_navigation_apps</url>
  <depend stack="pr2_common"/> <!-- pr2_machine -->
  <depend stack="pr2_navigation"/> <!-- pr2_navigation_global, pr2_navigation_perception, pr2_navigation_slam, pr2_navigation_local, pr2_navigation_teleop -->
  <depend stack="ros"/>

<package name="pr2_2dnav"/><package name="pr2_2dnav_local"/><package name="pr2_2dnav_slam"/></stack><stack name="geometry_experimental" path="" repo="geometry_experimental" repo_host="https://ros-geometry-experimental.googlecode.com/hg">
  <description brief="experimental geometry and math libraries">
    The experimental geometric and math libraries used in ros.
  </description>
  <author>Maintained by Tully Foote tfoote@willowgarage.com</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/geometry_experimental</url>
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- actionlib_msgs, geometry_msgs -->
  <depend stack="geometry"/> <!-- kdl, tf, bullet -->
  <depend stack="ros"/> <!-- roscpp, message_filters, rosgraph, roslib, std_msgs, xdot, rostest, rospy, rxbag -->
  <depend stack="rx"/>

<package name="tf2_geometry_msgs"/><package name="tf2_ros"/><package name="test_tf2"/><package name="tf2_tools"/><package name="tf2_msgs"/><package name="tf2_kdl"/><package name="tf2_bullet"/><package name="tf2"/></stack><stack name="pose_tools" path="" repo="ccny-ros-pkg" repo_host="http://robotics.ccny.cuny.edu/git/ccny-ros-pkg.git/">
  <description brief="pose_tools">Pose Tools</description>
  <author>Maintained by Ivan Dryanovski, William Morris et al</author>
  <license>GPL</license>  
  <review notes="" status="unreviewed test"/>
  <url>http://ros.org/wiki/pose_tools</url>
  <depend stack="ros"/>
<package name="pose_estimation"/></stack><stack name="wu_utils" path="/stacks/wu_utils/trunk" repo="wu-ros-pkg" repo_host="https://wu-ros-pkg.svn.sourceforge.net/svnroot/wu-ros-pkg" version="0.1">
  <description brief="useful code for robotics development">
    Nodes and libraries useful for robotics development.
  </description>
  <author>Erik Karulf/erik@cse.wustl.edu</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/wu_utils</url>

  <depend stack="ros"/>
  <depend stack="common_msgs"/>
  <depend stack="geometry"/>
<package name="simulator_bridge"/><package name="rosmultimaster_test"/><package name="pymp"/><package name="geometry_util"/><package name="basic_utils"/><package name="roslaunch_tools"/><package name="rosmultimaster"/></stack><stack name="cmuipc" path="/stacks/cmuipc/trunk" repo="wu-ros-pkg" repo_host="https://wu-ros-pkg.svn.sourceforge.net/svnroot/wu-ros-pkg" version="0.1.1">
  <description brief="cmuipc">
     Packages for communicating with legacy CMU IPC systems
  </description>
  <author>Maintained by Erik Karulf</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cmuipc</url>
  <depend stack="ros"/>
  <depend stack="geometry"/>
  <depend stack="common_msgs"/>
<package name="gcm"/><package name="ipc"/></stack><stack name="seabee3-ros-pkg" path="/trunk/cturtle" repo="seabee3-ros-pkg" repo_host="http://seabee3-ros-pkg.googlecode.com/svn">
  <description brief="seabee3-ros-pkg">seabee3-ros-pkg</description>
  <author>Maintained by Edward T. Kaszubski</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/seabee3-ros-pkg</url>
  <depend stack="common"/> <!-- yaml_cpp -->
  <depend stack="common_msgs"/> <!-- nav_msgs, sensor_msgs, geometry_msgs -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure, driver_base -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="joystick_drivers"/> <!-- joy -->
  <depend stack="ros"/> <!-- roslib, std_msgs, roscpp -->
  <depend stack="vision_opencv"/> <!-- opencv2, cv_bridge -->
  <depend stack="visualization_common"/> <!-- visualization_msgs -->

<package name="demo1_tasha"/><package name="demo1_kaszubski"/><package name="demo1_gerow"/><package name="demo1_dhruv"/><package name="demo1_sagar"/><package name="demo1_sung"/><package name="libxsens"/><package name="seabee3_mission_control"/><package name="dead_reckoning_odom"/><package name="localization_defs"/><package name="filtered_odom"/><package name="base_libs"/><package name="libvml"/><package name="seabee3_driver"/><package name="waypoint_controller"/><package name="rectangle_finder"/><package name="flsl"/><package name="seabee3_teleop"/><package name="color_segmenter"/><package name="seabee3_launch"/><package name="sparse_stereo"/><package name="jaus_adapter"/><package name="xsens_node"/><package name="image_server"/><package name="seabee3_common"/><package name="stereo_image_odom"/><package name="seabee3_dashboard"/><package name="libseabee3_beestem"/><package name="seabee3_driver_base"/><package name="sonar_node"/><package name="color_classifier"/><package name="image_sync"/><package name="image_matcher"/><package name="landmark_map_server"/><package name="seabee3_physics"/><package name="landmark_finder"/></stack><stack name="motion_planners" path="/stacks/motion_planners/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="motion_planners">motion_planners</description>
  <author>Maintained by Sachin Chitta</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/motion_planners</url>
  <depend stack="collision_environment"/> <!-- collision_space, distance_field -->
  <depend stack="common"/> <!-- filters, pluginlib -->
  <depend stack="common_msgs"/> <!-- geometry_msgs, trajectory_msgs, sensor_msgs, visualization_msgs -->
  <depend stack="geometry"/> <!-- tf, kdl, eigen, angles -->
  <depend stack="kinematics"/> <!-- kinematics_base, kinematics_msgs -->
  <depend stack="motion_planning_common"/> <!-- planning_models, mapping_msgs, motion_planning_msgs, geometric_shapes -->
  <depend stack="motion_planning_environment"/> <!-- planning_environment, planning_environment_msgs -->
  <depend stack="robot_model"/> <!-- kdl_parser -->
  <depend stack="ros"/> <!-- roslib -->
  <depend stack="ros_comm"/> <!-- rosconsole, rospy, roscpp -->
  <depend stack="trajectory_filters"/> <!-- spline_smoother -->

<package name="sbpl"/><package name="chomp_motion_planner"/><package name="ik_constrained_planner"/><package name="ompl"/><package name="interpolated_ik_motion_planner"/><package name="ompl_ros"/><package name="ompl_planning"/><package name="ompl_search"/></stack><stack name="pr2_gui" path="/stacks/pr2_gui/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="GUI tools for working with PR2 robots">

    Contains GUI tools for working with PR2s.

  </description>
  <author>Maintained by Josh Faust (jfaust@willowgarage.com)</author>
  <license>BSD</license>  
  <review notes="" status="Doc reviewed"/>
  <url>http://ros.org/wiki/pr2_gui</url>
  <depend stack="diagnostics"/> <!-- robot_monitor -->
  <depend stack="pr2_common"/> <!-- pr2_msgs -->
  <depend stack="pr2_power_drivers"/> <!-- pr2_power_board -->
  <depend stack="ros"/> <!-- roslib -->
  <depend stack="ros_comm"/> <!-- std_msgs, std_srvs, rospy -->
  <depend stack="rx"/> <!-- rxtools -->

<package name="pr2_dashboard"/></stack><stack name="stanford-ros-pkg" path="/trunk" repo="stanford-ros-pkg" repo_host="https://stanford-ros-pkg.googlecode.com/svn">
  <description brief="Packages from the Stanford AI Lab">
    Various packages developed by various authors at the Stanford AI lab. 
    Some are quite functional and stable, and others are obsolete or
    otherwise broken. I have attempted to indicate at least some of their
    status by the top-level directory name.
  </description>
  <author>Various Stanford students</author>
  <license>BSD</license>
  <depend stack="geometry"/> 
  <depend stack="ros"/> 
  <depend stack="visualization_common"/> 
  <depend stack="common"/> 
  <depend stack="common_msgs"/> 
  <depend stack="laser_pipeline"/> 
<package name="recyclerbot"/><package name="spacepoint"/><package name="chessbot"/><package name="cart_interp"/><package name="projector_calibration"/><package name="projector_camera_calibration"/><package name="graycode_scanner"/><package name="projector"/><package name="sortbot"/><package name="wifi_sniffer"/><package name="locloc_erratic"/><package name="openarms"/><package name="pancakebot"/></stack><stack name="simulator_stage" path="/stacks/simulator_stage/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Stage simulator">

     2D simulation using the Stage multi-robot simulator.

  </description>
  <author>Maintained by Brian Gerkey</author>
  <license>GPL</license>  
  <review notes="2010/01/11" status="Doc reviewed"/>
  <url>http://ros.org/wiki/simulator_stage</url>
  <depend stack="common_msgs"/> <!-- nav_msgs, geometry_msgs, sensor_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_msgs, roscpp -->

<package name="stage"/></stack><stack name="linux_networking" path="/stacks/linux_networking/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Tools to work with linux networking">
    <p>
      Tools to work with linux networking. 
    </p>
  </description>
  <author>Maintained by Blaise Gassend</author>
  <license>BSD,BSD, LGPL,LGPL,GPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/linux_networking</url>
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- actionlib_msgs, diagnostic_msgs -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure -->
  <depend stack="executive_smach"/> <!-- smach_ros -->
  <depend stack="pr2_common"/> <!-- pr2_msgs -->
  <depend stack="ros"/> <!-- std_msgs, rospy, roscpp -->
  <depend stack="ros_tutorials"/> <!-- turtlesim -->

<package name="ieee80211_channels"/><package name="hostapd_access_point"/><package name="network_monitor_udp"/><package name="network_traffic_control"/><package name="access_point_control"/><package name="asmach_tutorials"/><package name="wpa_supplicant_node"/><package name="ddwrt_access_point"/><package name="asmach"/><package name="wpa_supplicant"/><package name="network_control_tests"/><package name="multi_interface_roam"/><package name="linksys_access_point"/><package name="network_detector"/></stack><stack name="camera_umd" path="" repo="umd-ros-pkg" repo_host="git://ram.umd.edu/umd-ros-pkg.git">
  <description brief="camera_umd">camera-/image-related software for stereo, streaming, ...</description>
  <author>Ken Tossell/ktossell@umd.edu</author>
  <license>GPL,BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/camera_umd</url>
  <depend stack="camera_drivers"/> <!-- camera_info_manager -->
  <depend stack="common"/> <!-- nodelet -->
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="ros"/> <!-- roscpp -->

<package name="uvc_stereo"/><package name="uvc_camera"/><package name="jpeg_streamer"/></stack><stack name="ias_web_apps" path="/stacks/ias_web_apps" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="ias_web_apps">ias_web_apps</description>
  <author>Maintained by Lorenz Moesenlechner</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ias_web_apps</url>
  <depend stack="navigation"/> <!-- map_server -->
  <depend stack="ros"/> <!-- std_msgs, roslib, rospy -->
  <depend stack="web_interface"/> <!-- rosweb, webui -->
  <depend stack="wg_common"/> <!-- willow_maps -->

<package name="ias_pr2_addons_application"/></stack><stack name="blender" path="/trunk/kul-ros-pkg/stacks/blender" repo="kul-ros-pkg" repo_host="http://svn.mech.kuleuven.be/repos/orocos">
  <description brief="blender">
    blender: Blender is the free open source 3D content creation suite, available for all major operating systems under the GNU General Public License.
             This stack assembles Blender and related example code.
   </description>
  <author>Maintained by Koen Buys</author>
  <license>GPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://www.blender.org</url>
  <depend stack="ros"/>

<package name="capt_blender_camera"/><package name="blender_25"/><package name="com_blender_example"/></stack><stack name="ua_drivers" path="/trunk/arrg/ua_drivers" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="Servo, Phidget and STOC camera drivers.">
        This stack contains ROS drivers for Phidgets pressure, RFID and 
        accelerometer sensors, Phidgets InterfaceKit, Dynamixel servos,
        Videre Stereo cameras. Also includes low level C++ serial port
        interface via Gearbox project.
    </description>

    <author>Maintained by Antons Rebguns (UA Robotics Research Group)</author>
    <license>BSD</license>
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/ua_drivers</url>

    <depend stack="ros"/>
<package name="logitech_usb_webcam"/><package name="videre_stereo_cam"/><package name="phidgets_py_api"/><package name="phidgets_ros"/><package name="ua_overhead_cam"/><package name="ax12_driver_core"/><package name="gearbox"/></stack><stack name="pr2_calibration" path="/stacks/pr2_calibration/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="Tools for calibrating the PR2's kinematics">
     Provides a toolchain running through the robot calibration process. This
     involves capturing pr2 calibration data, estimating pr2 parameters, and
     then updating the PR2 URDF.  Note that the only support API for the stack
     is the tutorial for calibrating the PR2. All of the internal APIs are not
     considered to be stable.
  </description>
  <author>Maintained by Vijay Pradeep</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_calibration</url>
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- geometry_msgs, actionlib_msgs, trajectory_msgs, sensor_msgs, visualization_msgs -->
  <depend stack="geometry"/> <!-- kdl, tf -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="image_pipeline"/> <!-- stereo_image_proc, image_view -->
  <depend stack="pr2_apps"/> <!-- pr2_teleop -->
  <depend stack="pr2_common"/> <!-- pr2_msgs -->
  <depend stack="pr2_controllers"/> <!-- robot_mechanism_controllers -->
  <depend stack="robot_model"/> <!-- kdl_parser -->
  <depend stack="ros"/> <!-- rospy, rostest, std_msgs, roscpp, message_filters -->
  <depend stack="vision_opencv"/> <!-- opencv2, cv_bridge -->

<package name="pr2_calibration_propagation"/><package name="interval_intersection"/><package name="pr2_dense_laser_snapshotter"/><package name="pr2_calibration_estimation"/><package name="pr2_calibration_launch"/><package name="laser_joint_processor"/><package name="laser_cb_detector"/><package name="dense_laser_assembler"/><package name="pr2_calibration_executive"/><package name="calibration_msgs"/><package name="joint_states_settler"/><package name="laser_joint_projector"/><package name="settlerlib"/><package name="image_cb_detector"/><package name="monocam_settler"/></stack><stack name="ihr_demos" path="" repo="iheart-ros-pkg" repo_host="git://github.com/IHeartRobotics/iheart-ros-pkg">
  <description brief="ihr_demos">I Heart Robotics ROS Demos</description>
  <author>Maintained by I Heart Robotics</author>
  <license>GPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ihr_demos</url>
  <depend stack="ros"/>
<package name="ihr_opencv"/><package name="ihr_demo_bags"/></stack><stack name="au_automow_common" path="" repo="au-automow" repo_host="http://github.com/wjwwood/au-automow">
  <description brief="Auburn University Autonomous Lawnmower - Common Components Stack">
      ROS Packages common to the Autonomous Lawnmower system, separate from drivers and simulation.
  </description>
  <author>Maintained by William Woodall</author>
  <license>BSD</license>
  <review notes="" status="experimental"/>
  <url>http://www.ros.org/wiki/au-automow-common</url>
  <depend stack="ros"/>
  <depend stack="au_automow_drivers"/>

<package name="automow_launch"/><package name="automow_maps"/><package name="automow_image_processing"/><package name="automow_robot_model"/><package name="automow_navigation"/></stack><stack name="image_common" path="/stacks/image_common/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Common code for working with images">
    Common code for working with images in ROS.
  </description>
  <author>Maintained by Patrick Mihelich</author>
  <license>BSD</license>  
  <review notes="2009/6/10" status="Doc reviewed"/>
  <url>http://ros.org/wiki/image_common</url>
  <depend stack="common"/> <!-- yaml_cpp, pluginlib -->
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="ros"/> <!-- rostest, roslib, roscpp, message_filters -->

<package name="image_transport"/><package name="camera_calibration_parsers"/><package name="polled_camera"/><package name="camera_info_manager"/></stack><stack name="create_robot" path="/branches/trunk_cturtle/stacks/create_robot" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="iRobot Create">iRobot Create drivers and configuration</description>
  <author>Maintained by Ken Conley</author>
  <license>BSD,MIT</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/create_robot</url>
  <depend stack="common_msgs"/> <!-- nav_msgs, geometry_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rospy -->

<package name="create_node"/><package name="create_bringup"/><package name="create_urdf"/><package name="create_driver"/><package name="create_navigation"/><package name="create_dashboard"/><package name="create_teleop"/></stack><stack name="knowrob" path="/tags/latest" repo="knowrob" repo_host="http://code.in.tum.de/pubsvn/knowrob">
  <description brief="knowrob">

    KnowRob is a knowledge processing framework developed in the IAS group
    at the Technische Universitaet Muenchen, Germany.

    It provides tools for knowledge acquisition, representation and reasoning
    that are tailored to the demands in mobile robotics.

  </description>
  <author>Maintained by Moritz Tenorth</author>
  <license>GPL,BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/knowrob</url>
  <depend stack="client_rosjava"/> <!-- rosjava -->
  <depend stack="ias_common"/> <!-- vision_srvs -->
  <depend stack="robot_model"/> <!-- urdf -->
  <depend stack="ros"/> <!-- rospy, std_msgs -->

<package name="ias_prolog_addons"/><package name="ias_semantic_map"/><package name="semweb"/><package name="json_prolog"/><package name="comp_ehow"/><package name="thea"/><package name="rosprolog"/><package name="comp_germandeli"/><package name="comp_cop"/><package name="ias_knowledge_base"/><package name="srldb"/><package name="mod_srdl"/><package name="mod_probcog"/><package name="opencyc"/><package name="jpl"/><package name="mary_tts"/><package name="yason"/><package name="comp_temporal"/><package name="mod_vis"/><package name="comp_spatial"/></stack><stack name="reinforcement_learning" path="/trunk/stacks/reinforcement_learning" repo="utexas-art-ros-pkg" repo_host="http://utexas-art-ros-pkg.googlecode.com/svn">
  <description brief="reinforcement_learning">
    ROS interfaces for reinforcement learning algorithms.
  </description>
  <author>Maintained by Michael Quinlan</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/reinforcement_learning</url>
  <depend stack="ros"/>

<package name="rl_msgs"/></stack><stack name="misc_umd" path="" repo="umd-ros-pkg" repo_host="git://ram.umd.edu/umd-ros-pkg.git">
  <description brief="misc_umd">Uncategorized packages from UMD</description>
  <author>Robotics@Maryland</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/misc_umd</url>
  <depend stack="ros"/>

<package name="ps3joy_umd"/></stack><stack name="cob_extern" path="" repo="cob_extern" repo_host="https://github.com/ipa320/cob_extern">
  <description brief="cob_extern">

     The cob_extern stack contains third party libraries needed for operating Care-O-bot. The packages are downloaded from the manufactorers website and not changed in any way.

  </description>
  <author>Maintained by Florian Weisshardt</author>
  <license>LGPL,proprietary</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_extern</url>
  <depend stack="ros"/>

<package name="libntcan"/><package name="libmesasr"/><package name="libphidgets"/><package name="libpcan"/><package name="libm5api"/><package name="libsiftfast"/></stack><stack name="panda3d" path="/stacks/panda3d/trunk" repo="wu-ros-pkg" repo_host="https://wu-ros-pkg.svn.sourceforge.net/svnroot/wu-ros-pkg" version="1.6.2.0">
  <description brief="panda3d game engine">
    Support for Panda3D game engine
  </description>
  <author>Maintained by Erik Karulf</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/panda3d</url>
  <depend stack="ros"/>
</stack><stack name="camera_drivers" path="/stacks/camera_drivers/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="drivers for supported cameras">
    This stack contains drivers for a variety of cameras, and some
    associated tools.
  </description>
  <author>Maintained by Jack O'Quin</author>
  <license>BSD,LGPL,Commercial,GPL</license>  
  <review notes="Jan 22 2010" status="Doc Reviewed"/>
  <url>http://ros.org/wiki/camera_drivers</url>
  <depend stack="common"/> <!-- nodelet -->
  <depend stack="common_msgs"/> <!-- sensor_msgs, diagnostic_msgs -->
  <depend stack="diagnostics"/> <!-- self_test, diagnostic_updater -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure, driver_base, timestamp_tools -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="image_common"/> <!-- polled_camera, camera_info_manager, image_transport, camera_calibration_parsers -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_msgs, rostest, rospy, roscpp -->

<package name="prosilica_camera"/><package name="camera1394"/><package name="wge100_camera"/><package name="prosilica_gige_sdk"/><package name="wge100_camera_firmware"/></stack><stack name="laser_drivers" path="/stacks/laser_drivers/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Laser drivers for Hokuyo and SICK laser rangefinders">
  This stack contains drivers for laser rangefinders, including Hokuyo SCIP 2.0-compliant and SICK models.
  </description>
  <author>Blaise Gassend</author>
  <license>BSD,LGPL</license>  
  <review notes="2010/01/18" status="Doc reviewed"/>
  <url>http://ros.org/wiki/laser_drivers</url>
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="diagnostics"/> <!-- self_test, diagnostic_updater -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure, driver_base -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- roscpp -->

<package name="hokuyo_node"/><package name="sicktoolbox"/><package name="sicktoolbox_wrapper"/></stack><stack name="ccny_kinect" path="" repo="ccny-ros-pkg" repo_host="http://robotics.ccny.cuny.edu/git/ccny-ros-pkg.git/">
  <description brief="ccny_kinect">ccny_kinect</description>
  <author>Maintained by Ivan Dryanovski</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ccny_kinect</url>
  <depend stack="ros"/>

<package name="kinect_node"/><package name="libfreenect_install"/></stack><stack name="orocos_controllers" path="" repo="orocos_controllers" repo_host="https://github.com/RCPRG-ros-pkg/orocos_controllers">
  <description brief="orocos_controllers">This stack contain packeges for building real-time controllers with orocos</description>
  <author>Maintained by Konrad Banachowicz</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/orocos_controllers</url>
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="orocos_toolchain_ros"/> <!-- rtt, rtt_ros_integration, ocl, rtt_ros_integration_std_msgs -->
  <depend stack="orocos_tools"/> <!-- rtt_ros_integration_sensor_msgs, rtt_ros_integration_trajectory_msgs, rtt_ros_integration_actionlib_msgs, oro_action_server, rtt_ros_integration_geometry_msgs -->
  <depend stack="pr2_controllers"/> <!-- pr2_controllers_msgs -->
  <depend stack="ros"/>

<package name="rtt_ros_integration_pr2_controllers_msgs"/><package name="oro_joint_trajectory_action"/><package name="oro_joint_state_publisher"/><package name="joint_spline_trajectory_generator"/><package name="oro_servo_msgs"/><package name="fake_servo"/></stack><stack name="trunk" path="/trunk/kul-ros-pkg/stacks/orocos_toolchain_ros/trunk" repo="kul-ros-pkg" repo_host="http://svn.mech.kuleuven.be/repos/orocos">
  <description brief="orocos_toolchain_ros">

      This stack contains all software necessary to build
      systems using both Orocos and ROS infrastructures. The complete
      <a href="http://www.orocos.org/wiki/orocos/toolchain">Orocos Toolchain</a> is integrated in the ROS build system and the
      rtt_ros_integration package allows easy communication between Orocos components
      and ROS nodes.
  
  </description>
  <author>Maintained by Ruben Smits - Steven Bellens</author>
  <license>BSD,GPL + runtime exception,LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/orocos_toolchain_ros</url>
  <depend stack="ros"/> <!-- rosbuild, roslib, std_msgs, roscpp -->

<package name="rtt_ros_integration"/><package name="typelib"/><package name="utilmm"/><package name="ocl"/><package name="rtt_exercises"/><package name="rtt_ros_integration_std_msgs"/><package name="utilrb"/><package name="orogen"/><package name="rtt_ros_integration_example"/><package name="rtt"/></stack><stack name="lv1" path="/trunk/lv1" repo="otl-ros-pkg" repo_host="http://otl-ros-pkg.googlecode.com/svn">
  <description brief="lv1">lv1 is the stack for Robot Kitemas LV1</description>
  <author>Maintained by Takashi Ogura</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/lv1</url>
  <depend stack="ros"/>

<package name="lv1_arm"/><package name="teleop_lv1"/><package name="lv1_twitter"/><package name="lv1_msgs"/><package name="lv1_main"/><package name="lv1_image"/></stack><stack name="driver_common" path="/stacks/driver_common/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Classes and tools useful to many driver stacks.">

  The driver_common stack contains classes and tools that are useful
  throughout the driver stacks. It currently contains:
 
  <ul>
   <li>
     dynamic_reconfigure: A dynamic reconfiguration system to allow node 
     parameters to be changed without restarting the node.
   </li>
   <li>
     driver_base: A base class for sensors to provide a consistent state machine
   (retries, error handling, etc.) and interface.
   </li>
   <li>
     timestamp_tools: Classes to help timestamp hardware events.
   </li>
  </ul>

  </description>
  <author>Blaise Gassend</author>
  <license>BSD</license>  
  <review notes="2010/1/18" status="Doc reviewed"/>
  <url>http://ros.org/wiki/driver_common</url>
  <depend stack="diagnostics"/> <!-- self_test, diagnostic_updater -->
  <depend stack="ros"/> <!-- roslib, rospy, roscpp, rosservice -->

<package name="dynamic_reconfigure"/><package name="timestamp_tools"/><package name="driver_base"/></stack><stack name="ihr_tools" path="" repo="iheart-ros-pkg" repo_host="git://github.com/IHeartRobotics/iheart-ros-pkg">
  <description brief="ihr_tools">I Heart Robotics Tools</description>
  <author>Maintained by I Heart Robotics</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ihr_tools</url>
  <depend stack="ros"/>
<package name="rind"/><package name="zeroconf"/></stack><stack name="common_msgs" path="/stacks/common_msgs/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="common messages">
    common_msgs contains messages that are widely used by other ROS packages.
These includes messages for 
actions (<a href="http://ros.org/wiki/actionlib_msgs">actionlib_msgs</a>), 
diagnostics (<a href="http://ros.org/wiki/diagnostic_msgs">diagnostic_msgs</a>), 
geometric primitives (<a href="http://ros.org/wiki/geometry_msgs">geometry_msgs</a>), 
robot navigation (<a href="http://ros.org/wiki/nav_msgs">nav_msgs</a>),
and common sensors (<a href="http://ros.org/wiki/sensor_msgs">sensor_msgs</a>), such as laser range finders, cameras, point clouds.
  </description>
  <author>Maintained by Tully Foote tfoote@willowgarage.com</author>
  <license>BSD</license>  
  <review notes="2009/09/30" status="doc reviewed"/>
  <url>http://ros.org/wiki/common_msgs</url>
  <depend stack="ros"/> <!-- rosbag, rostest, std_msgs, rosbagmigration, rospy -->
  <depend stack="ros_comm"/> <!-- REQUIRED for message generate.  roscreate-stack will not detect this do not delete -->

<package name="geometry_msgs"/><package name="actionlib_msgs"/><package name="sensor_msgs"/><package name="nav_msgs"/><package name="stereo_msgs"/><package name="test_common_msgs"/><package name="trajectory_msgs"/><package name="visualization_msgs"/><package name="diagnostic_msgs"/></stack><stack name="cwru_tour_guide" path="" repo="cwru-ros-pkg" repo_host="http://github.com/cwru-robotics/cwru-ros-pkg">
  <description brief="cwru_tour_guide">cwru_tour_guide</description>
  <author>Maintained by Jesse</author>
  <license/>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cwru_tour_guide</url>
  <depend stack="ros"/>

<package name="tour_guide_base"/><package name="tour_guide_vision"/><package name="tour_guide_executive"/></stack><stack name="pr2_controllers" path="/stacks/pr2_controllers/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="PR2 Controllers">
    Contains the controllers that run in realtime on the PR2 and supporting packages.
  </description>
  <author>Stuart Glaser sglaser@willowgarage.com</author>
  <license>BSD</license>  
  <review notes="2010/01/21" status="Doc reviewed"/>
  <url>http://ros.org/wiki/pr2_controllers</url>
  <depend stack="common"/> <!-- actionlib, filters, tinyxml, pluginlib -->
  <depend stack="common_msgs"/> <!-- nav_msgs, actionlib_msgs, trajectory_msgs, sensor_msgs, geometry_msgs, visualization_msgs, diagnostic_msgs -->
  <depend stack="control"/> <!-- control_msgs -->
  <depend stack="diagnostics"/> <!-- diagnostic_updater -->
  <depend stack="geometry"/> <!-- tf, tf_conversions, kdl, eigen, angles -->
  <depend stack="pr2_common"/> <!-- pr2_msgs -->
  <depend stack="pr2_mechanism"/> <!-- pr2_controller_manager, pr2_mechanism_msgs, pr2_mechanism_model, realtime_tools, pr2_controller_interface -->
  <depend stack="robot_model"/> <!-- kdl_parser -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rosconsole, std_srvs, roscpp, message_filters, std_msgs, rospy -->

<package name="pr2_mechanism_controllers"/><package name="control_toolbox"/><package name="pr2_head_action"/><package name="ethercat_trigger_controllers"/><package name="pr2_controllers_msgs"/><package name="joint_trajectory_action"/><package name="pr2_gripper_action"/><package name="single_joint_position_action"/><package name="pr2_calibration_controllers"/><package name="robot_mechanism_controllers"/></stack><stack name="otl_nav" path="/trunk/otl_nav" repo="otl-ros-pkg" repo_host="http://otl-ros-pkg.googlecode.com/svn" version="0.1.0">
  <description brief="OTL Navigation Test Stack">

     otl_nav incluses
     otl_roomba: roomba interface by python.
     2dnav_otl_roomba: roomba navigation using ROS navigation stack
     otl_map: map data of OTL Lab.

  </description>
  <author>Maintained by Takashi Ogura</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/otl_nav</url>

<package name="2dnav_otl_roomba"/><package name="otl_roomba"/><package name="otl_map"/></stack><stack name="odor_tools" path="/trunk/unstable/odor_tools" repo="isr-uc-ros-pkg" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="odor_tools">
  
  	This stack holds tools for mobile robot odor experiments.
  	
  </description>
  <author>Gon√ßalo Cabrita and Pedro Sousa</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/odor_tools</url>
  <depend stack="ros"/>

<package name="virtual_nose"/><package name="odor_bar"/></stack><stack name="logging" path="/trunk/logging" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="logging">logging</description>
  <author>Maintained by David Feil-Seifer</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/logging</url>
  <depend stack="ros"/>

<package name="log_msgs"/><package name="logger"/><package name="log_gui"/></stack><stack name="robot_model" path="/stacks/robot_model/branches/robot_model-1.4" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Modeling robot information">
    <tt>robot_model</tt> contains packages for modeling various
    aspects of robot information, specified in the Xml Robot
    Description Format (URDF). The core package of this stack
    is <a href="http://ros.org/wiki/urdf">urdf</a>, which parses URDF files, and constructs an
    object model (C++) of the robot.
  </description>
  <author>John Hsu johnhsu@willowgarage.com, Wim Meeussen</author>
  <license>GPL,BSD,MIT</license>  
  <review notes="2009-10-02" status="Doc reviewed"/>
  <url>http://ros.org/wiki/robot_model</url>
  <depend stack="common"/> <!-- tinyxml -->
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="geometry"/> <!-- kdl, tf, tf_conversions, angles -->
  <depend stack="ros"/> <!-- roslib -->
  <depend stack="ros_comm"/> <!-- rosconsole, roscpp -->

<package name="colladadom"/><package name="resource_retriever"/><package name="convex_decomposition"/><package name="robot_state_publisher"/><package name="collada_urdf"/><package name="urdf"/><package name="assimp"/><package name="ivcon"/><package name="kdl_parser"/></stack><stack name="pr2_plugs" path="/stacks/pr2_plugs/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_plugs">The pr2_plugs stack provides the low level actions for autonomously plugging the PR2 into a standard wall outlet.</description>
  <author>Maintained by Wim Meeussen and Melonee Wise</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_plugs</url>
  <depend stack="common"/> <!-- actionlib, bfl -->
  <depend stack="common_msgs"/> <!-- sensor_msgs, actionlib_msgs, geometry_msgs -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure -->
  <depend stack="executive_smach"/> <!-- smach_ros, smach -->
  <depend stack="geometry"/> <!-- tf, kdl, angles, tf_conversions, eigen -->
  <depend stack="geometry_experimental"/> <!-- tf2_geometry_msgs, tf2_ros -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="navigation"/> <!-- move_base_msgs, base_local_planner, costmap_2d -->
  <depend stack="pr2_common"/> <!-- pr2_msgs -->
  <depend stack="pr2_common_actions"/> <!-- joint_trajectory_action_tools, joint_trajectory_generator, pr2_tuck_arms_action, pr2_common_action_msgs, pr2_arm_move_ik -->
  <depend stack="pr2_controllers"/> <!-- pr2_controllers_msgs -->
  <depend stack="pr2_mechanism"/> <!-- pr2_controller_manager -->
  <depend stack="ros"/> <!-- std_msgs, std_srvs, rospy, roscpp -->
  <depend stack="vision_opencv"/> <!-- opencv2, image_geometry, cv_bridge -->
  <depend stack="visualization_common"/> <!-- visualization_msgs -->
  <depend stack="wg_pr2_apps"/> <!-- wg_pr2_2dnav -->

<package name="pr2_image_snapshot_recorder"/><package name="pr2_plugs_msgs"/><package name="pr2_plugs_common"/><package name="outlet_pose_estimation"/><package name="stereo_wall_detection"/><package name="pr2_plugs_executive"/><package name="checkerboard_pose_estimation"/><package name="pr2_plugs_actions"/><package name="visual_pose_estimation"/></stack><stack name="bag_experimental" path="/branches/trunk_cturtle/stacks/bag_experimental" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="bag_experimental">

     Stack for developing and testing new ROS bag-related capabilities.

  </description>
  <author>Maintained by Jeremy Leibs</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/bag_experimental</url>
  <depend stack="common_msgs"/> <!-- nav_msgs, geometry_msgs, sensor_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="ros"/> <!-- rospy, std_msgs, roscpp, rosrecord -->
  <depend stack="vision"/> <!-- cv_mech_turk -->

</stack><stack name="motion_planning_common" path="/stacks/motion_planning_common/branches/into_unstable" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="motion plannig packages from ros-pkg">
   This stack contains motion planners and supporting infrastructure.
  </description>
  <author>Sachin Chitta sachinc@willowgarage.com</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/motion_planning_common</url>
  <depend stack="common"/> <!-- actionlib, filters -->
  <depend stack="common_msgs"/> <!-- geometry_msgs, actionlib_msgs, trajectory_msgs, sensor_msgs, visualization_msgs -->
  <depend stack="geometry"/> <!-- tf, bullet, angles -->
  <depend stack="perception_pcl"/> <!-- pcl -->
  <depend stack="physics_ode"/> <!-- opende -->
  <depend stack="robot_model"/> <!-- assimp, urdf, resource_retriever -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_msgs, rosconsole, std_srvs, roscpp, message_filters -->
  <depend stack="visualization"/> <!-- rviz -->

<package name="motion_planning_msgs"/><package name="geometric_shapes"/><package name="distance_field"/><package name="geometric_shapes_msgs"/><package name="collision_space"/><package name="mapping_msgs"/><package name="motion_planning_rviz_plugin"/><package name="planning_environment"/><package name="mapping_rviz_plugin"/><package name="planning_models"/><package name="planning_environment_msgs"/><package name="collision_map"/><package name="collision_environment_msgs"/><package name="robot_self_filter"/></stack><stack name="p2os" path="/trunk/p2os" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="P2OS/ARCOS device support">
		This stack provides the p2os driver supporting any robot that uses either P2OS or ARCOS firmware. This stack also includes urdf definitions for visualization and examples to control the robot.

	</description>
  <author>Maintained by David Feil-Seifer (dfseifer@usc.edu)</author>
  <license>BSD,GPLv2</license>  
  <review notes="" status=""/>
  <url>http://ros.org/wiki/p2os</url>
  <depend stack="common"/> <!-- xacro -->
  <depend stack="common_msgs"/> <!-- nav_msgs, geometry_msgs -->
  <depend stack="diagnostics"/> <!-- diagnostic_updater, robot_monitor -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="joystick_drivers"/> <!-- joy -->
  <depend stack="robot_model"/> <!-- robot_state_publisher, urdf -->
  <depend stack="ros"/> <!-- rxtools, std_srvs, roscpp, roslib, std_msgs, rospy -->

<package name="p2os_launch"/><package name="p2os_dashboard"/><package name="p2os_urdf"/><package name="p2os_driver"/><package name="p2os_teleop"/></stack><stack name="colbot-ros-pkg" path="/trunk/colbot-ros-pkg" repo="colbot-ros-pkg" repo_host="http://colbot.googlecode.com/svn">
  <description brief="Packages for Colbot robot">
    Colbot experimental robot custom packages
  </description>
  <author>fpesquet@gmail.com</author>
  <license>BSD</license>
  <depend stack="geometry"/> 
  <depend stack="ros"/> 
  <depend stack="visualization_common"/> 
  <depend stack="common"/> 
  <depend stack="common_msgs"/> 
<package name="roscolbot"/><package name="rosqwerk"/></stack><stack name="ros_pkg_tutorials" path="/branches/trunk_cturtle/stacks/ros_pkg_tutorials" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg" version="0.1.0">
  <description brief="ros_pkg_tutorials">

     ros_pkg_tutorials is a stack for teaching different aspects of ros-pkg.

  </description>
  <author>Maintained by Melonee Wise</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ros_pkg_tutorials</url>
  <depend stack="ros_tutorials"/> <!-- turtlesim --> 
  <depend stack="joystick_drivers"/> <!-- ps3joy --> 
  <depend stack="ros"/> <!-- roscpp --> 
  <depend stack="visualization_common"/>
  <depend stack="navigation"/>
  <depend stack="geometry"/>

<package name="actionlib_tutorials"/><package name="turtle_actionlib"/><package name="pluginlib_tutorials"/><package name="turtle_tf"/></stack><stack name="simulator_gazebo" path="/stacks/simulator_gazebo/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Gazebo Simulator">
    Wrappers, tools and additional API's for using ROS with the <a href="http://ros.org/wiki/gazebo">Gazebo</a> simulator.
  </description>
  <author>Maintained by John Hsu johnhsu@willowgarage.com</author>
  <license>BSD,LGPL</license>  
  <review notes="" status="Doc reviewed"/>
  <url>http://ros.org/wiki/simulator_gazebo</url>
  <depend stack="common"/> <!-- xacro, tinyxml -->
  <depend stack="common_msgs"/> <!-- nav_msgs, sensor_msgs, geometry_msgs -->
  <depend stack="geometry"/> <!-- tf, angles, bullet -->
  <depend stack="physics_ode"/> <!-- opende -->
  <depend stack="robot_model"/> <!-- convex_decomposition, ivcon, urdf -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_msgs, rospy, roscpp -->
  <depend stack="visualization_common"/> <!-- ogre, ogre_tools -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure, driver_base -->

<package name="gazebo_worlds"/><package name="gazebo_plugins"/><package name="gazebo"/><package name="gazebo_tools"/></stack><stack name="webots" path="/webots" repo="webots-ros-pkg" repo_host="http://webots-ros-pkg.svn.sourceforge.net/svnroot/webots-ros-pkg">
  <description brief="Webots">
    Tools for using ROS with the <a href="http://www.cyberbotics.com">Webots</a> commercial simulation software.
  </description>
  <author>Maintained by Olivier Michel</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://www.ros.org/wiki/webots</url>
  <depend stack="ros"/>
  <depend stack="roscpp"/>
  <depend stack="joy"/>
<package name="webots_joystick"/></stack><stack name="bosch_manipulation_utils" path="/trunk/stacks/bosch_manipulation_utils" repo="bosch-ros-pkg" repo_host="https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg">
  <description brief="bosch_manipulation_utils">bosch_manipulation_utils</description>
  <author>Maintained by Christian Bersch</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/bosch_manipulation_utils</url>
  <depend stack="arm_navigation"/> <!-- move_arm_msgs -->
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- geometry_msgs, sensor_msgs -->
  <depend stack="geometry"/> <!-- tf, tf_conversions -->
  <depend stack="kinematics"/> <!-- kinematics_msgs -->
  <depend stack="pr2_common_actions"/> <!-- pr2_common_action_msgs -->
  <depend stack="pr2_controllers"/> <!-- trajectory_msgs, pr2_controllers_msgs -->
  <depend stack="ros"/> <!-- std_msgs, rospy, roscpp -->

<package name="simple_robot_control"/></stack><stack name="cram_pl" path="" repo="cram_pl" repo_host="http://code.in.tum.de/git/cram-pl.git">
  <description brief="The CRAM Plan Language stack">
    A set of libraries for implementing AI enabled robot control programs.
  </description>
  <author>Maintained by Lorenz Moesenlechner</author>
  <license>GPL,Public domain,,trivial-features,babel,cffi,BSD,MIT</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cram_pl</url>
  <depend stack="ros"/>
  <depend stack="roslisp_support"/> <!-- sbcl -->

<package name="process_modules"/><package name="cram_test_utilities"/><package name="cram_utilities"/><package name="cram_math"/><package name="liswip"/><package name="cram_language"/><package name="designators"/><package name="cl_store"/><package name="cl_utilities"/><package name="babel"/><package name="synchronization_tools"/><package name="alexandria"/><package name="gsd"/><package name="gsll"/><package name="trivial_garbage"/><package name="trivial_features"/><package name="cffi"/><package name="split_sequence"/><package name="cram_reasoning"/><package name="cram_execution_trace"/></stack><stack name="rosorg" path="/stacks/rosorg/trunk" repo="rosorg" repo_host="https://code.ros.org/svn/ros">
  <description brief="ros.org infrastructure">Packages to support the ROS.org infrastructure.</description>
  <author>Maintained by Ken Conley</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rosorg</url>
  <depend stack="ros"/>

<package name="roswiki"/><package name="rosbrowse"/></stack><stack name="icreate" path="" repo="cmr-ros-pkg" repo_host="lp:cmr">
  <description brief="icreate">
  Collection of tools for the iCreate.
  </description>
  <author>Maintained by Steven Martin steven.martin@qut.edu.au</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/icreate</url>
  <depend stack="ros"/>
  <depend stack="navigation"/>
<package name="icreate_waypoints"/><package name="icreate_navigation"/><package name="icreate_sensorListen"/><package name="icreate_OR_sim"/></stack><stack name="wubble_navigation" path="/trunk/arrg/wubble_navigation" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="Common configuration options for planar navigation applications on the Wubble robot.">
        The wubble_navigation stack holds common configuration options for running the
        <a href="http://www.ros.org/wiki/navigation">navigation</a> stack on a Wubble robot.
    </description>
    <author>Maintained by Antons Rebguns</author>
    <license>BSD</license>  
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/wubble_navigation</url>
    
    <depend stack="ros"/>
    <depend stack="common"/> <!-- actionlib, filters, pluginlib -->
    <depend stack="common_msgs"/> <!-- geometry_msgs, actionlib_msgs, sensor_msgs -->
    <depend stack="driver_common"/> <!-- dynamic_reconfigure -->
    <depend stack="geometry"/> <!-- tf, eigen, bullet -->
    <depend stack="laser_pipeline"/> <!-- laser_filters, laser_geometry -->
    <depend stack="navigation"/> <!-- move_base, move_base_msgs, amcl -->
    <depend stack="robot_model"/> <!-- urdf, resource_retriever -->
    <depend stack="slam_gmapping"/> <!-- gmapping -->
    <depend stack="visualization_common"/> <!-- visualization_msgs -->
<package name="wubble_navigation_slam"/><package name="wubble_navigation_config"/><package name="wubble_navigation_local"/><package name="wubble_navigation_global"/></stack><stack name="orocos_bayesian_filtering" path="/trunk/kul-ros-pkg/stacks/orocos_bayesian_filtering" repo="kul-ros-pkg" repo_host="http://svn.mech.kuleuven.be/repos/orocos">
  <description brief="orocos_bayesian_filtering">

    The stack separates the <a href="http://www.orocos.org/bfl">Bayesian Filtering Library (BFL)</a> from the Orocos Real-Time Toolkit (RTT), part of the <a href="http://www.orocos.org/wiki/orocos/toolchain">Orocos Toolchain</a>, definitions.
</description>
  <author>Maintained by Tinne De Laet</author>
  <license>LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/orocos_bayesian_filtering</url>
  <depend stack="ros"/>

<package name="orocos_bfl"/><package name="bfl_typekit"/></stack><stack name="veltrobot" path="/trunk/veltrop-ros-pkg/veltrobot" repo="veltrop-ros-pkg" repo_host="https://veltrop-ros-pkg.svn.sourceforge.net/svnroot/veltrop-ros-pkg">
  <description brief="veltrobot">
  Contains packages to control the movement of a humanoid robot, abstract sensor data, video input, teleoperation, and launch/configuration files.
  </description>
  <author>Maintained by Taylor Veltrop</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://taylor.veltrop.com/robotics/khrhumanoidv2.php?topic=veltrop-ros-pkg</url>
  <depend stack="common"/> <!-- tinyxml -->
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="joystick_drivers"/> <!-- joy, ps3joy -->
  <depend stack="robot_model"/> <!-- robot_state_publisher -->
  <depend stack="ros"/> <!-- std_msgs, roscpp -->
  <depend stack="vision_opencv"/> <!-- opencv2, cv_bridge -->
  <depend stack="ni"/> <!-- openni -->

<package name="veltrobot_gui"/><package name="veltrobot_teleop"/><package name="veltrobot_nao"/><package name="veltrobot_data"/><package name="veltrobot_sensors"/><package name="veltrobot_msgs"/><package name="veltrobot_movement"/></stack><stack name="scan_tools" path="" repo="ccny-ros-pkg" repo_host="http://robotics.ccny.cuny.edu/git/ccny-ros-pkg.git/">
  <description brief="scan_tools">Scan Manipulation Tools</description>
  <author>Maintained by Ivan Dryanovski, William Morris, Gautier Dumonteil et al</author>
  <license>GPL</license>  
  <review notes="" status="unreviewed test"/>
  <url>http://ros.org/wiki/scan_tools</url>
  <depend stack="ros"/>
<package name="polar_scan_matcher"/><package name="ccny_karto"/><package name="laser_ortho_projector"/><package name="point_cloud_filter"/><package name="laser_height_estimation"/><package name="canonical_scan_matcher"/><package name="csm_install"/><package name="laser_scan_splitter"/><package name="ncd_parser"/></stack><stack name="navigation" path="/stacks/navigation/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="planar navigation stack">
    A 2D navigation stack that takes in information from odometry, sensor
    streams, and a goal pose and outputs safe velocity commands that are sent
    to a mobile base.
  </description>
  <author>Maintained by Eitan Marder-Eppstein eitan@willowgarage.com</author>
  <license>BSD,LGPL,LGPL (amcl)</license>  
  <review notes="" status="Doc reviewed"/>
  <url>http://ros.org/wiki/navigation</url>
  <depend stack="common"/> <!-- bfl, actionlib, yaml_cpp, pluginlib -->
  <depend stack="common_msgs"/> <!-- nav_msgs, sensor_msgs, actionlib_msgs, geometry_msgs, visualization_msgs -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure -->
  <depend stack="geometry"/> <!-- tf, angles, bullet, eigen3 -->
  <depend stack="point_cloud_perception"/> <!-- pcl_tf, laser_scan_geometry, pcl, pcl_ros -->
  <depend stack="ros"/> <!-- rosconsole, std_srvs, roscpp, message_filters, roslib, std_msgs, rostest, rospy, rosmsg, rosbag, rostopic -->
  <depend stack="visualization_common"/> <!-- ogre, ogre_tools -->

<package name="costmap_2d"/><package name="nav_view"/><package name="base_local_planner"/><package name="fake_localization"/><package name="nav_core"/><package name="navfn"/><package name="move_base_msgs"/><package name="dwa_local_planner"/><package name="robot_pose_ekf"/><package name="carrot_planner"/><package name="rotate_recovery"/><package name="map_server"/><package name="move_base"/><package name="voxel_grid"/><package name="amcl"/><package name="clear_costmap_recovery"/></stack><stack name="motion_planning_research" path="/branches/trunk_cturtle/stacks/motion_planning_research" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="motion_planning">
     Motion Planning Algorithms
  </description>
  <author>Maintained by Sachin Chitta</author>
  <license>GPL,BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/motion_planning_research</url>
  <depend stack="collision_environment"/> <!-- distance_field -->
  <depend stack="common"/> <!-- pluginlib -->
  <depend stack="common_msgs"/> <!-- geometry_msgs -->
  <depend stack="geometry"/> <!-- tf, angles -->
  <depend stack="motion_planners"/> <!-- sbpl -->
  <depend stack="navigation"/> <!-- navfn, nav_core, map_server, costmap_2d -->
  <depend stack="pr2_doors"/> <!-- door_msgs, pr2_doors_common -->
  <depend stack="ros"/> <!-- rosconsole, std_msgs, roscpp -->

<package name="mpbench"/><package name="sbpl_planner_node"/><package name="sbpl_global_planner"/><package name="bfs_3d"/><package name="dynamic_planning"/><package name="sbpl_door_planner"/><package name="mpglue"/><package name="nepumuk"/><package name="libsunflower"/></stack><stack name="albany_vision" path="/trunk/albany_vision" repo="albany-ros-pkg" repo_host="http://albany-ros-pkg.googlecode.com/svn">
  <description brief="albany_vision">albany_vision</description>
  <author>Maintained by Michael Ferguson</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/albany_vision</url>

  <depend stack="ros"/>
  <depend stack="vision_opencv"/>

</stack><stack name="cob_driver" path="" repo="cob_driver" repo_host="https://github.com/ipa320/cob_driver">
  <description brief="cob_driver">

     The cob_driver stack includes packages that provide access to the Care-O-bot hardware over ROS messages and services. E.g. for mobile base, arm, camera_sensors, scanners, etc...

  </description>
  <author>Maintained by Florian Weisshardt</author>
  <license>BSD,LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_driver</url>
  <depend stack="cob_common"/> <!-- cob_utilities, cob_msgs, cob_description, cob_vision_utils, cob_srvs -->
  <depend stack="cob_extern"/> <!-- libpcan, libmesasr, libm5api, libntcan -->
  <depend stack="common"/> <!-- actionlib, tinyxml -->
  <depend stack="common_msgs"/> <!-- nav_msgs, geometry_msgs, sensor_msgs, diagnostic_msgs -->
  <depend stack="diagnostics"/> <!-- diagnostic_updater -->
  <depend stack="geometry"/> <!-- tf, kdl, eigen, tf_conversions -->
  <depend stack="image_common"/> <!-- polled_camera, image_transport -->
  <depend stack="joystick_drivers"/> <!-- joy -->
  <depend stack="kinematics"/> <!-- kinematics_msgs -->
  <depend stack="laser_drivers"/> <!-- hokuyo_node -->
  <depend stack="pr2_controllers"/> <!-- trajectory_msgs, pr2_controllers_msgs -->
  <depend stack="robot_model"/> <!-- urdf, kdl_parser -->
  <depend stack="ros"/> <!-- std_msgs, roslib, rostest, rospy, roscpp -->
  <depend stack="vision_opencv"/> <!-- opencv2, cv_bridge -->
  <depend stack="visualization_common"/> <!-- visualization_msgs -->

<package name="cob_relayboard"/><package name="cob_light"/><package name="cob_hokuyo"/><package name="cob_canopen_motor"/><package name="cob_base"/><package name="cob_undercarriage_ctrl"/><package name="cob_sick_s300"/><package name="cob_tray"/><package name="cob_manipulator"/><package name="cob_powercube_chain"/><package name="cob_joy"/><package name="cob_arm"/><package name="cob_forcetorque"/><package name="cob_generic_can"/><package name="cob_camera_sensors"/><package name="cob_base_drive_chain"/><package name="cob_battery"/><package name="cob_joint_state_aggregator"/><package name="cob_sdh"/><package name="sound_play"/><package name="cob_torso"/><package name="cob_head_axis"/><package name="cob_touch"/></stack><stack name="camera_drivers_experimental" path="/branches/trunk_cturtle/stacks/camera_drivers_experimental" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="camera_drivers_experimental">camera_drivers_experimental</description>
  <author>Maintained by Blaise Gassend</author>
  <license>GPL,BSD,LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/camera_drivers_experimental</url>
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="ros"/>

<package name="swissranger_camera"/></stack><stack name="vmi_cognitive_environment" path="/trunk/vmi_cognitive_environment" repo="vmi-ros-pkg" repo_host="http://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg">
  <description brief="The Cognitive Environment">
  The VMI Cognitive Environment Stack
  
  </description>
  <author>Maintained by Roalter Luis</author>
  <license>BSD,GPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/vmi_cognitive_environment</url>
  <depend stack="ros"/> <!-- std_msgs, rospy, roscpp -->
  <depend stack="vmi_external_dependencies"/>

<package name="ce_environment"/><package name="ce_hardware"/><package name="ce_phidgets"/><package name="ce_social"/><package name="ce_plants"/><package name="ce_infratec"/><package name="manualcontroller"/><package name="ce_remote"/><package name="ce_fan"/><package name="ce_pca"/><package name="cognitive_environment"/><package name="ce_wsn"/></stack><stack name="engagement" path="/trunk/engagement" repo="ros-engagement" repo_host="http://ros-engagement.svn.sourceforge.net/svnroot/ros-engagement" version="0.1.0">
  <description brief="engagement">
    
    Engagement is &quot;the process by which two (or more) participants
    establish, maintain and end their perceived connection during
    interactions they jointly undertake&quot; (Sidner, C.; Lee, C.; Kidd, C.; Lesh, N.; 
    and Rich, C. 2005. Explorations in Engagement for Humans and Robots. 
    Artificial Intelligence 166(1-2): 140-164).
  
  </description>
    <author>Aaron Holroyd (aholroyd (at) wpi (dot) edu),
            Brett Ponsler (bponsler (at) wpi (dot) edu)</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://sourceforge.net/projects/ros-engagement/</url>
  <depends stack="ros"/>
  <depends stack="ros_experimental"/>
<package name="engagement_realizer"/><package name="engagement_test"/><package name="engagement_generation"/><package name="engagement_srvs"/><package name="engagement_recognition"/><package name="engagement_msgs"/></stack><stack name="ride-transitional" path="/branches/trunk_diamondback/stacks/ride-transitional" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg" version="0.1">
  <description brief="video game inspired control of multiple robots">

     Video game inspired control of multiple robots.  Transitional
     version, adapted for Building Manager project, in preparation for
     RIDE version 2.  Forked from Ride 0.2.2.

  </description>
  <author>Maintained by Bill Smart</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ride-transitional</url>
  <depend stack="common_msgs"/>
  <depend stack="geometry"/>
  <depend stack="ros"/>
  <depend stack="panda3d"/>
<package name="ride_agent"/><package name="laser_threshold"/><package name="ride_core"/><package name="ride_stage"/><package name="ride_msgs"/></stack><stack name="pr2_robot" path="/stacks/pr2_robot/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_robot">

  This stack collects PR2-specific components that are used in bringing up
  a robot.

  </description>
  <author>Maintained by Wim Meeussen</author>
  <license>BSD</license>  
  <review notes="" status="Doc Reviewed"/>
  <url>http://ros.org/wiki/pr2_robot</url>
  <depend stack="camera_drivers"/> <!-- prosilica_camera, wge100_camera -->
  <depend stack="common_msgs"/> <!-- sensor_msgs, diagnostic_msgs -->
  <depend stack="diagnostics"/> <!-- diagnostic_updater, diagnostic_aggregator -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure -->
  <depend stack="geometry"/> <!-- kdl -->
  <depend stack="geometry_experimental"/> <!-- tf2_ros -->
  <depend stack="image_pipeline"/> <!-- stereo_image_proc -->
  <depend stack="imu_drivers"/> <!-- microstrain_3dmgx2_imu -->
  <depend stack="joystick_drivers"/> <!-- joy -->
  <depend stack="laser_drivers"/> <!-- hokuyo_node -->
  <depend stack="navigation"/> <!-- robot_pose_ekf -->
  <depend stack="pr2_common"/> <!-- pr2_description, pr2_dashboard_aggregator, pr2_machine, pr2_msgs -->
  <depend stack="pr2_controllers"/> <!-- single_joint_position_action, ethercat_trigger_controllers, pr2_calibration_controllers, joint_trajectory_action, robot_mechanism_controllers, pr2_mechanism_controllers, pr2_gripper_action, pr2_head_action -->
  <depend stack="pr2_ethercat_drivers"/> <!-- ethercat_hardware -->
  <depend stack="pr2_mechanism"/> <!-- pr2_controller_manager, realtime_tools, pr2_hardware_interface, pr2_mechanism_model -->
  <depend stack="pr2_power_drivers"/> <!-- pr2_power_board, ocean_battery_driver, power_monitor -->
  <depend stack="robot_model"/> <!-- robot_state_publisher -->
  <depend stack="ros"/> <!-- std_srvs, rospy, rosbag, roscpp -->
  <depend stack="sound_drivers"/> <!-- sound_play -->
  <depend stack="wifi_drivers"/> <!-- wifi_ddwrt -->

<package name="pr2_computer_monitor"/><package name="pr2_run_stop_auto_restart"/><package name="pr2_bringup"/><package name="pr2_etherCAT"/><package name="pr2_controller_configuration"/><package name="imu_monitor"/><package name="pr2_camera_synchronizer"/></stack><stack name="communication" path="/stacks/communication/trunk" repo="wu-ros-pkg" repo_host="https://wu-ros-pkg.svn.sourceforge.net/svnroot/wu-ros-pkg" version="0.1.0">
  <description brief="communcation">Packages for communicating with the world outside ROS. Right now just contains the skype_bridge package.</description>
  <author>Maintained by Dan Lazewatsky</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/communcation</url>
  <depend stack="audio"/> <!-- audio_capture, audio_msgs -->
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- actionlib_msgs -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="ros"/> <!-- std_msgs, rospy -->
  <depend stack="vision_opencv"/> <!-- opencv2, cv_bridge -->

<package name="skype_bridge"/></stack><stack name="vanadium_drivers" path="/trunk/vanadium_drivers" repo="vanadium-ros-pkg" repo_host="http://vanadium-ros-pkg.googlecode.com/svn">
  <description brief="vanadium_drivers">This stack contains drivers developed at Vanadium Labs, in particular the ArbotiX-ROS bindings.</description>
  <author>Maintained by Michael Ferguson</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/vanadium_drivers</url>
  <depend stack="ros"/>
<package name="simple_controllers"/><package name="stereo_usb_cam"/><package name="arbotix_experimental"/><package name="arbotix"/><package name="arbotix_firmware"/></stack><stack name="siue_utils" path="" repo="siue-ros-pkg" repo_host="http://github.com/siue-cs/siue-ros-pkg">
  <description brief="siue_utils">siue_utils</description>
  <author>Maintained by Nate Roney</author>
  <license>BSD,GPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/siue_utils</url>
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="ros"/> <!-- std_msgs, roscpp -->
  <depend stack="vision_opencv"/> <!-- opencv2, cv_bridge -->

<package name="pioneer_motors"/><package name="usb_camera_node"/><package name="serial_port_node"/><package name="wiimote_utils"/><package name="gps_node"/><package name="gumstix_cam_node"/></stack><stack name="shadow_robot" path="" repo="sr-ros-interface" repo_host="lp:sr-ros-interface">
  <description brief="shadow_robot">

  This stack regroups the different ros interfaces developped for Shadow Robot's 
  Hardware. It provides an interface to both simulated and real hardware.

  </description>
  <author>Maintained by Ugo Cupcic: ugo@shadowrobot.com, contact@shadowrobot.com</author>
  <license>GPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://www.shadowrobot.com</url>
  <depend stack="ros"/>

<package name="threeD_mouse"/><package name="sr_display"/><package name="sr_hand"/><package name="sr_control_gui"/><package name="dataglove_processing"/><package name="optical_synchronizer"/><package name="optical_acquisition"/><package name="cyberglove"/><package name="sr_remappers"/><package name="sr_convenient_dependencies"/></stack><stack name="hwu_osl_common" path="/trunk/hwu_osl_common" repo="hwu-osl-ros-pkg" repo_host="http://hwu-osl-ros-pkg.googlecode.com/svn">
  <description brief="hwu_osl_common">hwu_osl_common</description>
  <author>Maintained by Joel Cartwright</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>TODO</url>
  <depend stack="ros"/>

<package name="auv_msgs"/><package name="osl_core"/></stack><stack name="rovio" path="" repo="iheart-ros-pkg" repo_host="git://github.com/IHeartRobotics/iheart-ros-pkg">
  <description brief="rovio">rovio</description>
  <author>Maintained by I Heart Robotics</author>
  <license>GPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rovio</url>
  <depend stack="ros"/>
  <depend stack="joystick_drivers"/>
<package name="rovio_common"/><package name="rovio_teleop"/><package name="rovio_controller"/></stack><stack name="freiburg_tools" path="/trunk/freiburg_tools" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="freiburg_tools">
  This stack contains several tools developed by the University of Freiburg, like a Webcam driver, a checkerboard detector, the Gaussian Process library, the HOGMAN graph optimizer, etc.
  </description>
  <author>Maintained by Juergen Sturm</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/freiburg_tools</url>
  <depend stack="ros"/>
  <depend stack="common"/> <!-- plugin lib -->
  <depend stack="common_msgs"/> <!-- geometry_msgs -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="ros"/> <!-- roscpp, message_filters -->
  <depend stack="vision_opencv"/> <!-- opencv2 -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="visualization_common"/> <!-- visualization_msgs -->
<package name="gaussian_process"/><package name="uvc_cam2"/><package name="checkerboard_detector2"/><package name="hogman_minimal"/><package name="fr_tools"/></stack><stack name="behavior_engine" path="" repo="behavior_engine" repo_host="https://github.com/timn/ros-behavior_engine">
  <description brief="behavior_engine">behavior_engine</description>
  <author>Maintained by Tim Niemueller</author>
  <license>BSD and GPLv2+</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/behavior_engine</url>
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- actionlib_msgs -->
  <depend stack="ros"/> <!-- roslib, roscpp -->
</stack><stack name="nxt_apps" path="" repo="foote-nxt" repo_host="https://nxt.foote-ros-pkg.googlecode.com/hg/">
  <description brief="nxt_apps">

    nxt_apps stack provides a set of common applications that can be run with the robots provided in the nxt_robot stack or 
    other custom made robots. 

  </description>
  <author>Maintained by Tully Foote, Wim Meeussen, and Melonee Wise</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/nxt_apps</url>
  <depend stack="common_msgs"/> <!-- geometry_msgs -->
  <depend stack="joystick_drivers"/> <!-- joy -->
  <depend stack="navigation"/> <!-- base_local_planner, costmap_2d -->
  <depend stack="nxt"/> <!-- nxt_ros -->
  <depend stack="nxt_robots"/> <!-- nxt_robot_gyro_car, nxt_robot_sensor_car -->
  <depend stack="ros"/>

<package name="nxt_teleop"/><package name="nxt_assisted_teleop"/></stack><stack name="wifi_drivers" path="/stacks/wifi_drivers/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="WiFi drivers">
   This stack contains WiFi drivers
  </description>
  <author>James Bowman</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/wifi_drivers</url>
  <depend stack="common_msgs"/> <!-- nav_msgs, geometry_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="pr2_common"/> <!-- pr2_msgs -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_msgs, rostest, rospy -->
  <depend stack="visualization_common"/> <!-- visualization_msgs -->

<package name="wifi_ddwrt"/></stack><stack name="slam_gmapping" path="/stacks/slam_gmapping/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Map Building with Gmapping">

     slam_gmapping contains the gmapping package, which provides SLAM capabilities. GMapping is a Creative-Commons-licensed open source package provided by OpenSlam.

  </description>
  <author>Brian Gerkey</author>
  <license>CreativeCommons-by-nc-sa-2.0</license>  
  <review notes="" status="Doc reviewed"/>
  <url>http://ros.org/wiki/slam_gmapping</url>
  <depend stack="common_msgs"/> <!-- nav_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="navigation"/> <!-- map_server -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rosconsole, std_msgs, roscpp, message_filters -->

<package name="gmapping"/></stack><stack name="jsk_coordination_system" path="/trunk/jsk_coordination_system" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="jsk_coordination_system">jsk_coordination_system</description>
  <author>Ryohei Ueda(ueda@jsk.t.u-tokyo.ac.jp)</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/jsk_coordination_system</url>
  <depend stack="ros"/>

<package name="dynamic_tf_publisher"/></stack><stack name="janitorial" path="/branches/trunk_diamondback/stacks/janitorial" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="janitor">
    Janitorial functions for the PR2, running in continuous operations
    mode.
  </description>

  <author>Maintained by Bill Smart</author>
  <license>BSD</license>  

  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/janitor</url>

  <depend stack="ros"/>

<package name="monitors"/></stack><stack name="web_apps_experimental" path="/branches/trunk_cturtle/stacks/web_apps_experimental" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="web_apps_experimental">web_apps_experimental</description>
  <author>Maintained by Josh Tyler</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/web_apps_experimental</url>
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="image_pipeline"/> <!-- camera_calibration -->
  <depend stack="joystick_drivers"/> <!-- joy -->
  <depend stack="pr2_common"/> <!-- pr2_dashboard_aggregator -->
  <depend stack="pr2_power_drivers"/> <!-- pr2_power_board -->
  <depend stack="pr2_web_apps"/> <!-- navigation_application -->
  <depend stack="ros"/> <!-- std_msgs, roslib, rospy -->
  <depend stack="web_interface"/> <!-- rosweb, webui -->
  <depend stack="wifi_drivers"/> <!-- wifi_ddwrt -->

<package name="camera_calibration_application"/><package name="photo_booth"/><package name="fake_robot"/><package name="sample_application"/></stack><stack name="camera_pose_estimation" path="/trunk/kul-ros-pkg/stacks/camera_pose_estimation" repo="kul-ros-pkg" repo_host="http://svn.mech.kuleuven.be/repos/orocos">
  <description brief="camera_pose_estimation">
    camera_pose_estimation: this stack gathers all our package to do 3D pose estimation of objects, marker-based and markerless.
    </description>
  <author>Maintained by Steven Bellens and Koen Buys</author>
  <license>BSD, GPL, LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/camera_pose_estimation</url>
  <depend stack="ros"/>
<package name="ar_pose_world_convertor"/><package name="ar_pose_ekf"/><package name="ar_pose_demo"/></stack><stack name="people_dataset" path="/branches/trunk_cturtle/stacks/people_dataset" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="Packages for collecting and interfacing with the dataset of people in indoor environments.">people_dataset</description>
  <author>Maintained by Caroline Pantofaru</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/people_dataset</url>
  <depend stack="ros"/>
  <depend stack="common_msgs"/> <!-- sensor_msgs, geometry_msgs -->
  <depend stack="geometry"/> <!-- tf, bullet -->
  <depend stack="image_pipeline"/> <!-- stereo_msgs -->
  <depend stack="vision_opencv"/> <!-- opencv2, cv_bridge -->

<package name="people_dataset_interface"/><package name="people_dataset_msgs"/></stack><stack name="web_interface" path="/stacks/web_interface/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="web_interface">This stack contains the packages and utilities required to run the web user interface.</description>
  <author>Maintained by Josh Tyler</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/web_interface</url>
  <depend stack="common_msgs"/> <!-- diagnostic_msgs -->
  <depend stack="ros"/> <!-- roslib -->
  <depend stack="ros_comm"/> <!-- roslaunch, std_msgs, rosservice, rospy, std_srvs -->
  <depend stack="vision_opencv"/> <!-- opencv2, cv_bridge -->

<package name="ckill"/><package name="rosjson"/><package name="launchman"/><package name="ros_apache2"/><package name="webui"/><package name="pyclearsilver"/><package name="rosweb"/><package name="web_msgs"/><package name="image_stream"/></stack><stack name="ua_experimental" path="/trunk/arrg/ua_experimental" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="Experimental packages - unreliable and/or idiosyncratic">
    Experimental packages - unreliable and/or idiosyncratic
    </description>
    <author>Maintained by Daniel Hewlett</author>
    <license>BSD</license>  
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/ua_experimental</url>

    <depend stack="ros"/>
    <depend stack="ua_apps"/>
<package name="smart_arm_affordance"/><package name="time_series"/><package name="ultraspeech"/><package name="point_cloud_filters"/><package name="block_swat"/><package name="blackboard_demo"/><package name="swistrack"/><package name="ua_audio_fft"/><package name="ua_audio_capture"/><package name="ua_audio_msgs"/><package name="ua_audio_play"/><package name="pybrain"/><package name="plotter"/><package name="path_learning_experiment"/><package name="chr_6dm_imu"/></stack><stack name="vision_opencv" path="/stacks/vision_opencv/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="opencv">

    opencv c++ and python libraries.

  </description>
  <author>James Bowman</author>
  <license>BSD</license>  
  <review notes="" status="reviewed"/>
  <url>http://ros.org/wiki/vision_opencv</url>
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rostest, rospy, roscpp -->

<package name="cv_bridge"/><package name="image_geometry"/><package name="opencv_tests"/><package name="opencv2"/></stack><stack name="simulator_plumesim" path="/trunk/unstable/simulator_plumesim" repo="isr-uc-ros-pkg" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="simulator_plumesim">
  
  	Odor plume simulator for ROS.
  
  </description>
  <author>Gon√ßalo Cabrita and Pedro Sousa</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/simulator_plumesim</url>
  <depend stack="ros"/>
  <depend stack="lse_messages"/>

<package name="plumesim"/></stack><stack name="visualization_engine" path="" repo="visualization_engine" repo_host="https://bitbucket.org/jfaust/visualization_engine">
  <description brief="ROS Visualization Engine">

    Contains the ROS Visualization Engine (RVE), which is a set of libraries useful for developing 3D visualization tools.

  </description>
  <author>Josh Faust</author>
  <license>BSD,Creative Commons</license>  
  <review notes="2010/01/08" status="Doc reviewed"/>
  <url>http://ros.org/wiki/visualization</url>
  <depend stack="common"/> <!-- yaml_cpp -->
  <depend stack="common_msgs"/> <!-- nav_msgs, geometry_msgs, sensor_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="laser_pipeline"/> <!-- laser_geometry -->
  <depend stack="robot_model"/> <!-- urdf, resource_retriever -->
  <depend stack="ros"/> <!-- rxtools, rosconsole, roscpp, message_filters, wxswig, roslib, std_msgs, wxPython_swig_interface, rospy, rxbag -->
  <depend stack="visualization_common"/> <!-- visualization_msgs, ogre, ogre_tools -->
  <depend stack="image_common"/> <!-- image_transport -->
<package name="rve_pluginloader"/><package name="test_rve"/><package name="rve_qt"/><package name="rve_interface_gen"/><package name="rve_properties"/><package name="rve_msgs"/><package name="rve_rpc"/><package name="rve_interfaces"/><package name="rve_common"/><package name="rve_dynlib"/><package name="rve_transformer"/><package name="rve_mesh_loader"/><package name="rve_render_client"/><package name="rve_render_server"/><package name="rve_common_transformers"/></stack><stack name="au_automow_simulation" path="" repo="au-automow" repo_host="http://github.com/wjwwood/au-automow">
  <description brief="au_automow_simulation">au_automow_simulation</description>
  <author>Maintained by William Woodall</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/au_automow_simulation</url>
  <depend stack="ros"/>

</stack><stack name="people" path="/stacks/people/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="people">The people stack holds algorithms for perceiving people from a number of sensors.</description>
  <author>Maintained by Caroline Pantofaru</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/people</url>
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- sensor_msgs, actionlib_msgs, geometry_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="image_pipeline"/> <!-- stereo_msgs -->
  <depend stack="ros"/> <!-- std_srvs, std_msgs, roscpp, rosrecord -->
  <depend stack="vision_opencv"/> <!-- opencv2, image_geometry, cv_bridge -->

<package name="face_detector"/><package name="people_msgs"/></stack><stack name="cwru_semi_stable" path="" repo="cwru-ros-pkg" repo_host="http://github.com/cwru-robotics/cwru-ros-pkg">
  <description brief="cwru_semi_stable">cwru_semi_stable</description>
  <author>Maintained by Eric Perko</author>
  <license>LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cwru_semi_stable</url>
  <depend stack="common"/> <!-- pluginlib -->
  <depend stack="common_msgs"/> <!-- nav_msgs, geometry_msgs -->
  <depend stack="geometry"/> <!-- tf, tf_conversions -->
  <depend stack="joystick_drivers"/> <!-- joy -->
  <depend stack="laser_drivers"/> <!-- sicktoolbox_wrapper -->
  <depend stack="navigation"/> <!-- move_base, map_server, costmap_2d, nav_view, amcl, nav_core -->
  <depend stack="ros"/> <!-- std_srvs, std_msgs, roscpp, rospy -->
  <depend stack="simulator_stage"/> <!-- stage -->
  <depend stack="sound_drivers"/> <!-- sound_play -->

<package name="cwru_sim_stage"/><package name="cwru_teleop"/><package name="cwru_goal_planner"/><package name="cwru_maps"/><package name="cwru_configs"/><package name="playsound_recovery"/><package name="cwru_nav"/><package name="cwru_base"/></stack><stack name="clearpath_platform" path="/trunk/clearpath_platform" repo="clearpath-ros-pkg" repo_host="http://clearpath-ros-pkg.googlecode.com/svn">
  <description brief="clearpath mobile platforms">

     This includes packages which support ROS deployment on Clearpath Robotics platforms.

  </description>
  <author>Mike Purvis</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://clearpathrobotics.com</url>

  <depend stack="ros"/> 
<package name="clearpath_base"/><package name="clearpath_sensors"/></stack><stack name="grasping" path="/stacks/grasping" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="The simple probabilstic grasp planner">
    A libraries to select grasping positions.
  </description>
  <author>Ulrich Klank</author>
  <license>GPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sgp</url>
  <depend stack="ros"/>

<package name="simple_grasp_planner"/><package name="pc_grasp_position"/></stack><stack name="kinematics" path="/stacks/kinematics/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="kinematics">
    This stack contains a set of kinematics messages and services that can be used for kinematic computation.
  </description>
  <author>Maintained by Sachin Chitta</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/kinematics</url>
  <depend stack="common_msgs"/> <!-- trajectory_msgs, geometry_msgs -->
  <depend stack="motion_planning_common"/> <!-- motion_planning_msgs -->
  <depend stack="ros"/>

<package name="kinematics_base"/><package name="kinematics_msgs"/></stack><stack name="pr2_simulator" path="/stacks/pr2_simulator/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="PR2 simulation components">

     PR2-specific simulation components. These include
     plugins and launch scripts necessary for running PR2 in simulation.

  </description>
  <author>Maintained by John Hsu</author>
  <license>BSD</license>  
  <review notes="2010/01/21" status="Doc reviewed"/>
  <url>http://ros.org/wiki/pr2_simulator</url>
  <depend stack="common"/> <!-- tinyxml -->
  <depend stack="common_msgs"/> <!-- nav_msgs, geometry_msgs, sensor_msgs, diagnostic_msgs -->
  <depend stack="diagnostics"/> <!-- diagnostic_updater, diagnostic_aggregator -->
  <depend stack="geometry"/> <!-- bullet, angles -->
  <depend stack="image_common"/> <!-- polled_camera -->
  <depend stack="image_pipeline"/> <!-- stereo_image_proc -->
  <depend stack="navigation"/> <!-- robot_pose_ekf -->
  <depend stack="physics_ode"/> <!-- opende -->
  <depend stack="pr2_common"/> <!-- pr2_description, pr2_dashboard_aggregator, pr2_msgs -->
  <depend stack="pr2_controllers"/> <!-- single_joint_position_action, joint_trajectory_action, robot_mechanism_controllers, pr2_mechanism_controllers, pr2_gripper_action, pr2_head_action -->
  <depend stack="pr2_mechanism"/> <!-- pr2_hardware_interface, pr2_mechanism_model, pr2_controller_manager -->
  <depend stack="robot_model"/> <!-- convex_decomposition, ivcon, urdf, robot_state_publisher -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_msgs, rospy, roscpp -->
  <depend stack="simulator_gazebo"/> <!-- gazebo_tools, gazebo, gazebo_plugins, gazebo_worlds -->
  <depend stack="vision_opencv"/> <!-- opencv2, cv_bridge -->
  <depend stack="visualization_common"/> <!-- ogre_tools -->

<package name="pr2_ogre"/><package name="pr2_controller_configuration_gazebo"/><package name="pr2_gazebo"/><package name="pr2_gazebo_plugins"/><package name="pr2_fingertip_contact_translator"/><package name="pr2_examples_gazebo"/></stack><stack name="pr2_arm_motion_planners" path="/branches/trunk_cturtle/stacks/pr2_arm_motion_planners" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_arm_motion_planners">pr2_arm_motion_planners</description>
  <author>Maintained by Benjamin Cohen</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_arm_motion_planners</url>

  <depend stack="collision_environment"/> <!-- collision_space,distance_field -->
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="geometry"/> <!-- tf, kdl, eigen, angles -->
  <depend stack="motion_planning_common"/> <!-- planning_models,motion_planning_msgs, mapping_msgs -->
  <depend stack="motion_planning_environment"/> <!-- planning_environment, planning_environment_msgs -->
  <depend stack="robot_model"/> <!-- kdl_parser -->
  <depend stack="ros"/> <!-- rosconsole, roslib, roscpp -->
  <depend stack="visualization_common"/> <!-- visualization_msgs -->
  <depend stack="pr2_kinematics"/> <!--pr2_arm_kinematics -->
<package name="sbpl_arm_planner"/></stack><stack name="eros" path="/trunk" repo="eros" repo_host="https://code.ros.org/svn/eros">
  <description brief="Build environment support for embedded ros">
    This stack includes supporting components to enable ros development on embedded boards.
  </description>
  <author>Daniel Stonier (d.stonier@gmail.com)</author>
  <license>BSD</license>  
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/eros</url>
  <depend stack="ros"/>
<package name="eros_license"/><package name="eros_build"/><package name="eros_toolchains"/><package name="eros_platforms"/><package name="eros_python_tools"/><package name="eros_boost"/><package name="eros_apr"/><package name="eros_log4cxx"/><package name="eros_apr_util"/><package name="mingw_cross"/><package name="code_sourcery_arm_gnueabi"/><package name="eros_bzip2"/><package name="eros_opencv"/><package name="eros_zlib"/><package name="eros_gdbserver"/><package name="eros_rpc_latency"/><package name="eros_nodelet_latency"/><package name="eros_msg_latency"/></stack><stack name="remote_lab" path="/trunk/stacks/remote_lab" repo="bosch-ros-pkg" repo_host="https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg">
  <description brief="remote_lab">
  	A stack of tools for remote control, tele-op and remote labs. 
  </description>
  <author>Maintained by Benjamin Pitzer</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/remote_lab</url>
  <depend stack="ros"/>
<package name="wviz"/><package name="wviz_tf_manager"/><package name="ping"/><package name="wviz_scene_manager"/><package name="mjpeg_server"/><package name="pr2_pick_and_place_service"/></stack><stack name="starmac_vicon" path="" repo="starmac-ros-pkg" repo_host="lp:starmac-ros-pkg">
  <description brief="starmac_vicon">
    Drivers for using the Vicon motion capture system for indoor tracking of a vehicle
</description>
  <author>Maintained by Patrick Bouffard</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/starmac_vicon</url>
  <depend stack="ros"/>

<package name="vicon_mocap"/></stack><stack name="slam_experimental" path="/trunk/slam_experimental" repo="albany-ros-pkg" repo_host="http://albany-ros-pkg.googlecode.com/svn">
  <description brief="slam_experimental">slam_experimental</description>
  <author>Maintained by Michael Ferguson</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/slam_experimental</url>
  <depend stack="ros"/>
<package name="locator"/><package name="slam_experiments"/><package name="smart_ranger"/></stack><stack name="csiro_asl_drivers" path="" repo="csiro-asl-ros-pkg" repo_host="lp:csiro-asl-ros-pkg">
  <description brief="asl_drivers">asl_drivers</description>
  <author>Brett Grandbois, Fred Pauling</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://www.ros.org/wiki/csiro-asl-ros-pkg</url>
  <depend stack="ros"/> <!-- rospy, std_msgs, roscpp -->

<package name="sick_ldmrs"/></stack><stack name="pr2_kinematics" path="/stacks/pr2_kinematics/branches/into_unstable" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_kinematics">This stack contains an implementation of kinematics for the PR2 robot.</description>
  <author>Maintained by Sachin Chitta</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_kinematics</url>
  <depend stack="common"/> <!-- pluginlib -->
  <depend stack="common_msgs"/> <!-- geometry_msgs -->
  <depend stack="geometry"/> <!-- kdl, tf_conversions, eigen, angles -->
  <depend stack="kinematics"/> <!-- kinematics_base, kinematics_msgs -->
  <depend stack="motion_planning_common"/> <!-- collision_space, planning_environment, planning_models, mapping_msgs -->
  <depend stack="robot_model"/> <!-- urdf, kdl_parser -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- roscpp -->

<package name="pr2_arm_kinematics"/><package name="pr2_arm_kinematics_constraint_aware"/></stack><stack name="sql_database" path="/stacks/sql_database/branches/sql_database-0.2.0-branch" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="sql_database">
    Provides an easy way to use SQL databases from the ROS environment.
  </description>
  <author>Maintained by Matei Ciocarlie</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sql_database</url>
  <depend stack="common"/> <!-- yaml_cpp -->
  <depend stack="common_msgs"/> <!-- geometry_msgs -->
  <depend stack="ros"/> 
  <depend stack="ros_comm"/> <!-- roscpp -->

<package name="student_database"/><package name="database_interface"/></stack><stack name="lse_ressources" path="/trunk/unstable/lse_ressources" repo="isr-uc-ros-pkg" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="lse_ressources">
  
  	This stack holds handy ressources for other stacks to find. Currently only has maps of ISR.
  	
  </description>
  <author>Gon√ßalo Cabrita and Pedro Sousa</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/lse_ressources</url>

<package name="isr_maps"/></stack><stack name="navigation_experimental" path="/stacks/navigation_experimental/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="navigation experimental">Experimental features for future releases of the navigation stack.</description>
  <author>Maintained by Eitan Marder-Eppstein</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/navigation_experimental</url>
  <depend stack="common"/> <!-- actionlib, filters, pluginlib -->
  <depend stack="common_msgs"/> <!-- nav_msgs, sensor_msgs, geometry_msgs -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure -->
  <depend stack="geometry"/> <!-- tf, angles -->
  <depend stack="geometry_experimental"/> <!-- eigen3 -->
  <depend stack="motion_planners"/> <!-- sbpl -->
  <depend stack="navigation"/> <!-- move_base_msgs, nav_core, base_local_planner, costmap_2d -->
  <depend stack="ros"/> <!-- roslib, roscpp, message_filters -->

<package name="sbpl_lattice_planner"/><package name="twist_recovery"/><package name="pose_base_controller"/><package name="isolated_point_filter"/><package name="dwa_local_planner"/><package name="pose_follower"/><package name="move_slow_and_clear"/><package name="assisted_teleop"/><package name="sbpl_recovery"/><package name="goal_passer"/></stack><stack name="lse_erratic_toolbox" path="/trunk/unstable/lse_erratic_toolbox" repo="isr-uc-ros-pkg" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="lse_erratic_toolbox">
  
    Useful tools for the Erratic robots used at the LSE including popular tf setups, Stage world files and 2D navigation parameters and example launch files for the real and simulated robots.
  
  </description>
  <author>Gon√ßalo Cabrita and Pedro Sousa</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/lse_erratic_toolbox</url>
  <depend stack="ros"/>

<package name="lse_erratic_2dnav"/><package name="lse_erratic_tf_setup"/><package name="erratic_stage"/></stack><stack name="pr2_object_manipulation" path="/stacks/pr2_object_manipulation/branches/arm_navigation_0_3" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_object_manipulation">
    Contains PR2-specific implementations of some of the generic
    functionality needed for pickup and place tasks. 
  </description>
  <author>Maintained by Kaijen Hsiao and Matei Ciocarlie</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_object_manipulation</url>
  <depend stack="arm_navigation"/> <!-- move_arm_msgs -->
  <depend stack="common"/> <!-- actionlib, pluginlib -->
  <depend stack="common_msgs"/> <!-- geometry_msgs, actionlib_msgs, trajectory_msgs, sensor_msgs, visualization_msgs -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure -->
  <depend stack="geometry"/> <!-- kdl, tf -->
  <depend stack="motion_planners"/> <!-- interpolated_ik_motion_planner, ik_constrained_planner -->
  <depend stack="motion_planning_common"/> <!-- geometric_shapes_msgs, motion_planning_msgs -->
  <depend stack="object_manipulation"/> <!-- object_manipulator, object_manipulation_msgs -->
  <depend stack="pr2_arm_navigation"/> <!-- pr2_arm_navigation_kinematics, pr2_arm_navigation_perception, pr2_arm_navigation_filtering, pr2_arm_navigation_actions, pr2_arm_navigation_planning -->
  <depend stack="pr2_controllers"/> <!-- pr2_mechanism_controllers, robot_mechanism_controllers, joint_trajectory_action, pr2_gripper_action, pr2_controllers_msgs -->
  <depend stack="pr2_mechanism"/> <!-- pr2_mechanism_msgs, pr2_mechanism_model, realtime_tools, pr2_controller_interface -->
  <depend stack="ros"/> <!-- roslib -->
  <depend stack="ros_comm"/> <!-- std_srvs, std_msgs, roscpp, rospy -->
  <depend stack="ros_realtime"/> <!-- rosrt -->
  <depend stack="trajectory_filters"/> <!-- trajectory_filter_server -->

<package name="pr2_gripper_fingersensor_action"/><package name="pr2_gripper_reactive_approach"/><package name="pr2_gripper_sensor_msgs"/><package name="pr2_gripper_sensor_controller"/><package name="simple_Jtranspose_controller"/><package name="pr2_gripper_sensor_action"/><package name="slipgrip_controller"/><package name="pr2_gripper_grasp_planner_cluster"/><package name="pr2_gripper_grasp_controller"/><package name="pr2_object_manipulation_launch"/></stack><stack name="roslisp_common" path="/stacks/roslisp_common/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Common libraries to work with ROS in Common Lisp">
    Common libraries control ROS based robots It contains an
    implementation of actionlib (client and server) in Common Lisp, a
    transformation library and an implementation of tf in Common Lisp.
  </description>
  <author>Maintained by Bhaskara Marti and Lorenz Mosenlechner</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/roslisp_common</url>
  <depend stack="common_msgs"/> <!-- actionlib_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="ros"/>
  <depend stack="roslisp_support"/> <!-- roslisp_runtime -->

<package name="cl_tf"/><package name="actionlib_lisp"/><package name="cl_transforms"/><package name="cl_utils"/></stack><stack name="object_manipulation" path="/stacks/object_manipulation/branches/arm_navigation_0_3" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="object_manipulation">
    Functionality for performing object pickup and placing, while
    avoiding collisions with the environment. This stack is designed
    to be robot independent. It contains a complete interface for
    pickup and place tasks, as well as general implementation of most
    of the needed functionality.


  </description>
  <author>Maintained by Matei Ciocarlie</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/object_manipulation</url>
  <depend stack="arm_navigation"/> <!-- move_arm_msgs -->
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- sensor_msgs, actionlib_msgs, trajectory_msgs, geometry_msgs, visualization_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="kinematics"/> <!-- kinematics_msgs -->
  <depend stack="motion_planners"/> <!-- interpolated_ik_motion_planner -->
  <depend stack="motion_planning_common"/> <!-- geometric_shapes_msgs, motion_planning_msgs, mapping_msgs -->
  <depend stack="motion_planning_environment"/> <!-- planning_environment_msgs -->
  <depend stack="pr2_controllers"/> <!-- pr2_controllers_msgs -->
  <depend stack="ros"/> <!-- roslib -->
  <depend stack="ros_comm"/> <!-- std_msgs, rosservice, rospy, roscpp, rosgraph -->
  <depend stack="sql_database"/> <!-- database_interface -->

<package name="object_manipulation_msgs"/><package name="household_objects_database"/><package name="grasp_planner_database"/><package name="household_objects_database_msgs"/><package name="object_manipulator"/></stack><stack name="tabletop_object_perception" path="/stacks/tabletop_object_perception/branches/tabletop_object_perception-0.3.0-branch" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="tabletop_object_perception">

    One example of sensor data processing for manipulation
    tasks. Containts functionality for object segmentation, object
    recognition and collision environment management for manipulation.

  </description>
  <author>Maintained by Matei Ciocarlie</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/tabletop_object_perception</url>
  <depend stack="collision_environment"/> <!-- collision_environment_msgs, distance_field -->
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- geometry_msgs, sensor_msgs, visualization_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="motion_planning_common"/> <!-- geometric_shapes_msgs, mapping_msgs -->
  <depend stack="object_manipulation"/> <!-- household_objects_database_msgs, object_manipulation_msgs -->
  <depend stack="perception_pcl"/> <!-- pcl -->
  <depend stack="pr2_common"/> <!-- pr2_msgs -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_srvs, roscpp -->

<package name="tabletop_object_detector"/><package name="tabletop_collision_map_processing"/></stack><stack name="cob_common" path="" repo="cob_common" repo_host="https://github.com/ipa320/cob_common">
  <description brief="cob_common">

     The cob_common stack hosts common packages that are used within the Care-O-bot repository. E.g. utility packages or common message and service definitions etc. Also the urdf desciption of the robot is located in this stack.

  </description>
  <author>Maintained by Florian Weisshardt</author>
  <license>LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_common</url>
  <depend stack="common"/> <!-- actionlib, tinyxml -->
  <depend stack="common_msgs"/> <!-- geometry_msgs, actionlib_msgs, sensor_msgs -->
  <depend stack="pr2_controllers"/> <!-- trajectory_msgs -->
  <depend stack="robot_model"/> <!-- convex_decomposition, ivcon, urdf -->
  <depend stack="ros"/> <!-- std_srvs, roslib, std_msgs, roscpp -->
  <depend stack="vision_opencv"/> <!-- opencv2 -->

<package name="cob_description"/><package name="cob_utilities"/><package name="cob_srvs"/><package name="cob_vision_utils"/><package name="brics_actuator"/><package name="cob_msgs"/><package name="cob_machine"/><package name="cob_goco"/><package name="desire_description"/></stack><stack name="pr2_tabletop_manipulation_apps" path="/stacks/pr2_tabletop_manipulation_apps/branches/arm_navigation_0_3" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_tabletop_manipulation_apps">

    Brings together manipulation and perception for complete task
    execution using the PR2 robot. 

  </description>
  <author>Maintained by Matei Ciocarlie and Kaijen Hsiao</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_tabletop_manipulation_apps</url>
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- actionlib_msgs, geometry_msgs -->
  <depend stack="geometry"/> <!-- tf_conversions -->
  <depend stack="object_manipulation"/> <!-- household_objects_database, object_manipulator, object_manipulation_msgs -->
  <depend stack="pr2_object_manipulation"/> <!-- pr2_gripper_reactive_approach, pr2_object_manipulation_launch, simple_Jtranspose_controller -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- roscpp -->
  <depend stack="tabletop_object_perception"/> <!-- tabletop_object_detector, tabletop_collision_map_processing -->

<package name="pr2_tabletop_manipulation_launch"/><package name="pr2_pick_and_place_demos"/></stack><stack name="ias_nav" path="/stacks/ias_nav" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="ias_nav">ias_nav</description>
  <author>Maintained by Lorenz Moesenlechner</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ias_nav</url>
  <depend stack="common_msgs"/> <!-- actionlib_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="ias_common"/> <!-- vision_srvs, navp_action -->
  <depend stack="navigation"/> <!-- move_base_msgs, map_server -->
  <depend stack="pr2_common"/> <!-- pr2_machine -->
  <depend stack="pr2_navigation"/> <!-- pr2_navigation_global, pr2_navigation_perception, pr2_navigation_teleop -->
  <depend stack="ros"/> <!-- roscpp -->
  <depend stack="visualization_common"/> <!-- visualization_msgs -->

<package name="nav_pcontroller"/><package name="ias_maps"/><package name="rosie_move_base"/><package name="ias_pr2_2dnav"/><package name="pr2_nav_pcontroller"/></stack><stack name="calibration_experimental" path="/branches/trunk_cturtle/stacks/calibration_experimental" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="calibration_experimental">

     calibration_experimental

  </description>
  <author>Maintained by Vijay Pradeep</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/calibration_experimental</url>
  <depend stack="common_msgs"/> <!-- nav_msgs, geometry_msgs, sensor_msgs -->
  <!--depend stack="drivers_experimental" /--> <!-- camera_trigger_test in pr2_calibration_launch_old removed, circular dependency-->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="image_pipeline"/> <!-- stereo_image_proc, image_view -->
  <depend stack="pr2_calibration"/> <!-- pr2_calibration_estimation, pr2_dense_laser_snapshotter, pr2_calibration_executive -->
  <depend stack="pr2_common"/> <!-- pr2_msgs -->
  <depend stack="pr2_controllers"/> <!-- pr2_mechanism_controllers, robot_mechanism_controllers -->
  <depend stack="robot_calibration"/> <!-- laser_joint_processor, laser_cb_detector, monocam_settler, calibration_msgs, image_cb_detector, laser_joint_projector -->
  <depend stack="ros"/> <!-- rospy, roslib, std_msgs, roscpp, rxbag -->
  <!--depend stack="sandbox" /> experimental_controllers -->
  <depend stack="visualization"/> <!-- rxbag_plugins -->

<package name="mocap_msgs"/><package name="pr2_calibration_launch_old"/><package name="pr2_calibration_rxbag_plugins"/><package name="wheel_odometry_calibration"/><package name="cal_marker_playback"/><package name="experimental_calibration_msgs"/></stack><stack name="starmac_flyer" path="" repo="starmac-ros-pkg" repo_host="lp:starmac-ros-pkg">
  <description brief="starmac_flyer">

  Operation of an autonomous quadrotor vehicle: manual and autonomous control, interfaces to hardware, etc.

  </description>
  <author>Maintained by Patrick Bouffard</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/flyer</url>
  <depend stack="common_msgs"/>
  <depend stack="ros_comm"/>
<package name="flyer_kinect"/><package name="flyer_est"/><package name="asctec_adapter"/><package name="flyer_common"/><package name="flyer_controller"/></stack><stack name="bosch_drivers" path="/trunk/stacks/bosch_drivers" repo="bosch-ros-pkg" repo_host="https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg">
  <description brief="Collection of hardware drivers.">

     A collection of hardware drivers in use at Bosch RTC.

  </description>
  <author>Maintained by Benjamin Pitzer</author>
  <license>BSD,LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/bosch_drivers</url>
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="diagnostics"/> <!-- self_test -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="ros"/> <!-- std_msgs, roscpp -->
  <depend stack="vision_opencv"/> <!-- opencv2 -->

<package name="smi540"/><package name="bma180"/><package name="photo"/><package name="sub20"/><package name="amtec"/><package name="usb_cam"/></stack><stack name="ua_verbs" path="/trunk/arrg/ua_verbs" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="Packages for learning verbs from human heachers.">Packages for learning verbs from human heachers.</description>
    <author>Daniel Hewlett</author>
    <license>BSD</license>  
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/ua_verbs</url>

    <depend stack="ros"/>

    <depend stack="ua_drivers"/>
    <depend stack="ua_controllers"/>
    <depend stack="ua_robots"/>
    <depend stack="ua_vision"/>
    <depend stack="wubble_world"/>

<package name="wubble_mdp"/><package name="simulation_semantics"/><package name="oomdp_msgs"/><package name="wubble_world_2d"/><package name="simulator_state"/><package name="verb_learning"/></stack><stack name="siue_configs" path="" repo="siue-ros-pkg" repo_host="http://github.com/siue-cs/siue-ros-pkg">
  <description brief="siue_configs">siue_configs</description>
  <author>Maintained by Nate Roney</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/siue_configs</url>
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="p2os"/> <!-- p2os_driver -->
  <depend stack="ros"/> <!-- roscpp -->
  <depend stack="slam_gmapping"/> <!-- gmapping -->

<package name="siue_pioneer2_configs"/></stack><stack name="elektron_robot" path="" repo="elektron_robot" repo_host="https://github.com/RCPRG-ros-pkg/elektron_robot">
  <description brief="elektron_robot">elektron_robot</description>
  <author>Maintained by Konrad Banachowicz</author>
  <license>GPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/elektron_robot</url>
  <depend stack="common"/> <!-- xacro -->
  <depend stack="common_msgs"/> <!-- nav_msgs, geometry_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="ros"/> <!-- roscpp -->

<package name="elektron_base"/><package name="elektron_defs"/></stack><stack name="find_object" path="/branches/trunk_cturtle/stacks/find_object" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="find_object">find_object</description>
  <author>Maintained by Bhaskara Marthi</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/find_object</url>
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- nav_msgs, geometry_msgs, actionlib_msgs, sensor_msgs -->
  <depend stack="executive_smach"/> <!-- smach -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="graph_mapping"/> <!-- occupancy_grid_utils -->
  <depend stack="laser_pipeline"/> <!-- laser_assembler, laser_geometry -->
  <depend stack="navigation"/> <!-- move_base_msgs, navfn, costmap_2d -->
  <depend stack="object_manipulation"/> <!-- object_manipulator, object_manipulation_msgs -->
  <depend stack="point_cloud_perception"/> <!-- pcl -->
  <depend stack="point_cloud_perception_experimental"/> <!-- point_cloud_python -->
  <depend stack="pr2_controllers"/> <!-- pr2_controllers_msgs -->
  <depend stack="ros"/> <!-- rospy, roscpp -->
  <depend stack="tabletop_object_perception"/> <!-- tabletop_object_detector, tabletop_collision_map_processing -->

<package name="find_object_actions"/><package name="find_object_executive"/><package name="table_boundary_detector"/><package name="stage_msgs"/><package name="find_object_msgs"/><package name="find_object_planner"/><package name="table_clutter_detector"/><package name="stage_extensions"/></stack><stack name="image_transport_plugins" path="/stacks/image_transport_plugins/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Plugins for specialized network image transport">
    A set of plugins for publishing and subscribing to sensor_msgs/Image topics in representations other than raw pixel data. For example, for viewing a stream of images off-robot, a video codec will give much lower bandwidth and latency. For low frame rate tranport of high-definition images, you might prefer sending them as JPEG or PNG-compressed form.
  </description>
  <author>Maintained by Patrick Mihelich</author>
  <license>BSD</license>  
  <review notes="2010/10/10" status="Doc reviewed"/>
  <url>http://ros.org/wiki/image_transport_plugins</url>
  <depend stack="common"/> <!-- pluginlib -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rosbagmigration -->
  <depend stack="vision_opencv"/> <!-- opencv2, cv_bridge -->

<package name="compressed_image_transport"/><package name="theora_image_transport"/></stack><stack name="perception_pcl_addons" path="/stacks/perception_pcl_addons/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Point Cloud Library Addons">
    The <b>perception_pcl_addons</b> stack contains additions to the Point
    Cloud Library (PCL) such as visualization tools, tutorials and example
    code, and demos.
  </description>
  <author>Maintained by Radu Bogdan Rusu</author>
  <license>BSD,LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/perception_pcl_addons</url>
  <depend stack="geometry"/> <!-- eigen3 -->
  <depend stack="geometry_experimental"/> <!-- eigen3 -->
  <depend stack="image_pipeline"/> <!-- stereo_msgs -->
  <depend stack="perception_pcl"/> <!-- pcl, pcl_ros -->
  <depend stack="ros"/>
  <depend stack="visualization"/> <!-- wxpropgrid -->

<package name="pcl_visualization"/><package name="pcl_tutorials"/><package name="terminal_tools"/></stack><stack name="starmac_demos" path="" repo="starmac-ros-pkg" repo_host="lp:starmac-ros-pkg">
  <description brief="starmac_demos">
  
  Various demonstrations/experimental setups
  
  </description>
  <author>Maintained by Patrick Bouffard</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/starmac_demos</url>
  <depend stack="common"/> <!-- nodelet, pluginlib -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rospy -->
  <depend stack="starmac_common"/> <!-- starmac_roshlib -->
  <depend stack="starmac_flyer"/> <!-- flyer_controller, flyer_kinect, flyer_common -->

<package name="starmac_kinect_obstacle_avoidance"/></stack><stack name="ethzasl_drivers" path="" repo="ethzasl_drivers" repo_host="https://github.com/ethz-asl/ros-drivers">
  <description brief="ethzasl_drivers">ROS drivers made by ETHZ/ASL</description>
  <author>Maintained by St√©phane Magnenat</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ethzasl_drivers</url>
  <depend stack="ros"/>

<package name="panasonic_blc111"/><package name="canon_vbc50i"/><package name="microsoft_kinect"/></stack><stack name="wg_pr2_apps" path="/stacks/wg_pr2_apps/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="Applications for robots running at Willow Garage">Basic applications for PR2 robots running at Willow Garage.</description>
  <author>Maintained by Eitan Marder-Eppstein</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/wg_pr2_apps</url>
  <depend stack="navigation"/> <!-- map_server -->
  <depend stack="pr2_common"/> <!-- pr2_machine -->
  <depend stack="pr2_navigation"/> <!-- pr2_navigation_global, pr2_navigation_perception, pr2_navigation_teleop -->
  <depend stack="ros"/>
  <depend stack="wg_common"/> <!-- willow_maps -->

<package name="wg_pr2_2dnav"/></stack><stack name="gpgpu" path="" repo="umd-ros-pkg" repo_host="git://ram.umd.edu/umd-ros-pkg.git">
  <description brief="GPGPU support">
    Tools for using GPU computing technology in ROS nodes.
  </description>
  <author>Ken Tossell</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/gpgpu</url>
  <depend stack="ros"/>

<package name="cuda"/><package name="cuda_tests"/></stack><stack name="RCPRG_laser_drivers" path="" repo="RCPRG_laser_drivers" repo_host="https://github.com/RCPRG-ros-pkg/RCPRG_laser_drivers">
  <description brief="RCPRG_laser_drivers">RCPRG_laser_drivers</description>
  <author>Maintained by Konrad Banachowicz</author>
  <license>GPL,LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/RCPRG_laser_drivers</url>
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="ros"/> <!-- roscpp -->

<package name="libLMS1xx"/><package name="LMS1xx"/></stack><stack name="ride" path="/stacks/ride/trunk" repo="wu-ros-pkg" repo_host="https://wu-ros-pkg.svn.sourceforge.net/svnroot/wu-ros-pkg" version="0.2.2">
  <description brief="video game inspired control of multiple robots">

     Video game inspired control of multiple robots

  </description>
  <author>Maintained by Erik Karulf</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ride</url>
  <depend stack="common_msgs"/>
  <depend stack="geometry"/>
  <depend stack="ros"/>
  <depend stack="panda3d"/>
<package name="ride_agent"/><package name="laser_threshold"/><package name="ride_core"/><package name="ride_stage"/><package name="ride_msgs"/></stack><stack name="bosch_demos" path="/trunk/stacks/bosch_demos" repo="bosch-ros-pkg" repo_host="https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg">
  <description brief="Demos for Bosch stacks and packages">
     A collection of demos for Bosch stacks and packages.
  </description>
  <author>Maintained by Benjamin Pitzer</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/bosch_demos</url>
  <depend stack="exploration"/> <!-- explore -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="joystick_drivers"/> <!-- joy -->
  <depend stack="navigation"/> <!-- move_base -->
  <depend stack="pr2_apps"/> <!-- pr2_teleop -->
  <depend stack="pr2_navigation_apps"/> <!-- pr2_2dnav_slam -->
  <depend stack="ros"/>
  <depend stack="shared_autonomy"/> <!-- safe_teleop_base -->
  <depend stack="simulator_stage"/> <!-- stage -->
  <depend stack="slam_gmapping"/> <!-- gmapping -->

<package name="bosch_worlds"/><package name="bosch_maps"/></stack><stack name="pddl" path="/trunk/pddl" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="PDDL planning language">
    PDDL planning language for task planning.
  </description>
  <author> Ryohei Ueda(ueda@jsk.t.u-tokyo.ac.jp)</author>
  <license>Apache License 2.0</license>
  <depend stack="ros"/> <!-- rospy -->
<package name="pddl_planner"/><package name="pddl_msgs"/><package name="pddl_planner_viewer"/></stack><stack name="mrpt_hwdrivers" path="/trunk/mrpt_hwdrivers" repo="mrpt-ros-pkg" repo_host="http://mrpt-ros-pkg.googlecode.com/svn">
  <description brief="mrpt_hwdrivers">mrpt_hwdrivers</description>
  <author>Maintained by Jose Luis</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/mrpt_hwdrivers</url>
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- roscpp -->

<package name="mrpt_hokuyo"/></stack><stack name="slam_coreslam" path="/trunk/slam_coreslam" repo="albany-ros-pkg" repo_host="http://albany-ros-pkg.googlecode.com/svn">
  <description brief="slam_coreslam">Map Building with CoreSLAM</description>
  <author>Maintained by Michael Ferguson</author>
  <license>MIT</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/slam_coreslam</url>
  <depend stack="common_msgs"/> <!-- nav_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="ros"/> <!-- rosconsole, std_msgs, roscpp, message_filters -->
<package name="coreslam"/></stack><stack name="wg_hardware_test" path="/stacks/wg_hardware_test/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="PR2 hardware tests: Internal WG use only">
     Packages for testing the PR2 and components. Internal WG use only. This stack is designed to run during production testing only.
  </description>
  <author>Kevin Watts</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/wg_hardware_test</url>
  <depend stack="arm_navigation"/> <!-- collision_free_arm_trajectory_controller -->
  <depend stack="camera_drivers"/> <!-- prosilica_camera, wge100_camera -->
  <depend stack="common"/> <!-- actionlib, xacro -->
  <depend stack="common_msgs"/> <!-- geometry_msgs, sensor_msgs, diagnostic_msgs -->
  <depend stack="diagnostics"/> <!-- runtime_monitor, robot_monitor -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="image_pipeline"/> <!-- stereo_image_proc, image_proc, image_view -->
  <depend stack="imu_drivers"/> <!-- microstrain_3dmgx2_imu -->
  <depend stack="joystick_drivers"/> <!-- joy -->
  <depend stack="laser_drivers"/> <!-- hokuyo_node -->
  <depend stack="motion_planning_common"/> <!-- geometric_shapes_msgs -->
  <depend stack="motion_planning_environment"/> <!-- planning_environment -->
  <depend stack="navigation"/> <!-- map_server, amcl -->
  <depend stack="pr2_apps"/> <!-- pr2_teleop -->
  <depend stack="pr2_arm_navigation"/> <!-- pr2_arm_navigation_actions -->
  <depend stack="pr2_common"/> <!-- pr2_description, pr2_msgs -->
  <depend stack="pr2_controllers"/> <!-- pr2_mechanism_controllers, single_joint_position_action, robot_mechanism_controllers, joint_trajectory_action, ethercat_trigger_controllers -->
  <depend stack="pr2_ethercat_drivers"/> <!-- eml, fingertip_pressure, ethercat_hardware -->
  <depend stack="pr2_mechanism"/> <!-- pr2_mechanism_msgs, pr2_controller_manager -->
  <depend stack="pr2_power_drivers"/> <!-- pr2_power_board -->
  <depend stack="pr2_robot"/> <!-- pr2_controller_configuration, pr2_camera_synchronizer, pr2_bringup, pr2_etherCAT -->
  <depend stack="pr2_self_test"/> <!-- pr2_counterbalance_check, pr2_self_test_msgs, joint_qualification_controllers -->
  <depend stack="robot_model"/> <!-- robot_state_publisher, urdf -->
  <depend stack="ros"/> <!-- roslaunch, rxtools, std_srvs, roscpp, std_msgs, topic_tools, rospy, rostopic, rosrecord, rosbag -->
  <depend stack="rx"/>
  <depend stack="ros_comm"/>
  <depend stack="trajectory_filters"/> <!-- trajectory_filter_server -->
  <depend stack="vision_opencv"/> <!-- opencv2, cv_bridge -->
  <depend stack="visualization"/> <!-- rviz -->
  <depend stack="visualization_common"/> <!-- visualization_msgs -->
<package name="pr2_transmission_check"/><package name="qualification"/><package name="life_test"/><package name="ectools"/><package name="roslaunch_caller"/><package name="pr2_component_descriptions"/><package name="wg_invent_client"/><package name="wgtest_status_indicator"/><package name="pr2_drive_life_test"/><package name="pr2_hardware_test_monitor"/><package name="pr2_camera_focus"/></stack><stack name="geometry" path="" repo="geometry" repo_host="https://ros-geometry.googlecode.com/hg">
  <description brief="geometry and math libraries">
    The basic geometric and math libraries used in ros.
  </description>
  <author>Maintained by Tully Foote tfoote@willowgarage.com</author>
  <license>BSD,LGPL,ZLib</license>  
  <review notes="2009-10-07" status="doc reviewed"/>
  <url>http://ros.org/wiki/geometry</url>
  <depend stack="common_msgs"/> <!-- sensor_msgs, geometry_msgs -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rosconsole, roscpp, message_filters, rostest, rospy, roswtf -->

<package name="bullet"/><package name="kdl"/><package name="eigen_conversions"/><package name="angles"/><package name="eigen"/><package name="tf_conversions"/><package name="eigen3"/><package name="tf"/></stack><stack name="pr2_navigation" path="/stacks/pr2_navigation/branches/cturtle_branch" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="Common configuration options for planar navigation applications on the PR2 robot.">
  The pr2_navigation stack holds common configuration options for running the
  <a href="http://www.ros.org/wiki/navigation">navigation</a> stack on a PR2 robot. The packages in this stack are used by
  many PR2-specific applications that use planar navigation.
  </description>
  <author>Maintained by Eitan Marder-Eppstein</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_navigation</url>
  <depend stack="common"/> <!-- actionlib, filters, pluginlib -->
  <depend stack="common_msgs"/> <!-- sensor_msgs, actionlib_msgs, geometry_msgs -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure -->
  <depend stack="geometry"/> <!-- tf, eigen, bullet -->
  <depend stack="laser_pipeline"/> <!-- laser_filters, laser_geometry -->
  <depend stack="navigation"/> <!-- move_base_msgs, move_base, amcl -->
  <depend stack="pr2_apps"/> <!-- pr2_teleop -->
  <depend stack="pr2_common"/> <!-- pr2_msgs, pr2_machine -->
  <depend stack="pr2_controllers"/> <!-- pr2_controllers_msgs -->
  <depend stack="robot_model"/> <!-- urdf, resource_retriever -->
  <depend stack="ros"/> <!-- topic_tools, rospy, roscpp, message_filters -->
  <depend stack="slam_gmapping"/> <!-- gmapping -->
  <depend stack="visualization_common"/> <!-- visualization_msgs -->

<package name="pr2_navigation_teleop"/><package name="pr2_move_base"/><package name="laser_tilt_controller_filter"/><package name="pr2_navigation_slam"/><package name="pr2_navigation_config"/><package name="semantic_point_annotator"/><package name="pr2_navigation_self_filter"/><package name="pr2_navigation_perception"/><package name="pr2_navigation_local"/><package name="pr2_navigation_global"/></stack><stack name="exploration" path="/trunk/stacks/exploration" repo="bosch-ros-pkg" repo_host="https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg">
  <description brief="exploration stack">
     A 2D exploration library that builds on top of the 2D navigation stack provided by Willow Garage.
  </description>
  <author>Maintained by Benjamin Pitzer</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/exploration</url>
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- nav_msgs, geometry_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="navigation"/> <!-- move_base, move_base_msgs, navfn, costmap_2d -->
  <depend stack="ros"/> <!-- roslib, std_msgs, roscpp -->
  <depend stack="simulator_stage"/> <!-- stage -->
  <depend stack="slam_gmapping"/> <!-- gmapping -->
  <depend stack="visualization_common"/> <!-- visualization_msgs -->

<package name="explore_stage"/><package name="explore"/></stack><stack name="tuc_pelican" path="/trunk/stacks/tuc_pelican" repo="tuc-ros-pkg" repo_host="https://borstel.etit.tu-chemnitz.de:8080/svn/tuc-ros-pkg">
  <description brief="tuc_pelican">The tuc_pelican stack contains packages for the AscTec Pelican quadrotor.</description>
  <author>Maintained by Niko Suenderhauf, Peer Neubert, Sebastian Drews</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/tuc_pelican</url>
  <depend stack="ros"/>
  <depend stack="image_common"/>
  <depend stack="kinect"/>
  <depend stack="point_cloud_perception"/>
  <depend stack="vision_opencv"/>
  <depend stack="visualization_common"/>
<package name="kinect_utils"/></stack><stack name="wubble_navigation_apps" path="/trunk/arrg/wubble_navigation_apps" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="Navigation applications for the Wubble robot">
        This stack holds a collection of navigation applications that can be run on the Wubble robot.
    </description>
    
    <author>Maintained by Antons Rebguns</author>
    <license>BSD</license>  
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/wubble_navigation_apps</url>
    
    <depend stack="ros"/>
    <depend stack="wubble_navigation"/>
<package name="wubble_2dnav_slam"/><package name="wubble_2dnav"/><package name="wubble_2dnav_local"/></stack><stack name="otl_geometry" path="/trunk/otl_geometry" repo="otl-ros-pkg" repo_host="http://otl-ros-pkg.googlecode.com/svn">
  <description brief="otl_geometry">otl_geometry is geometric libraries of OTL</description>
  <author>Maintained by Takashi Ogura</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/otl_geometry</url>
  <depend stack="ros"/>

<package name="egeometry"/></stack><stack name="continuous_ops" path="" repo="continuous_ops" repo_host="https://continuous-ops.hg-ros-pkg.googlecode.com/hg/">
  <description brief="continuous_ops">continuous_ops</description>
  <author>Maintained by Wim Meeussen</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/continuous_ops</url>
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- geometry_msgs, actionlib_msgs, sensor_msgs, diagnostic_msgs -->
  <depend stack="executive_smach"/> <!-- smach_ros, smach -->
  <depend stack="geometry"/> <!-- kdl -->
  <depend stack="navigation"/> <!-- move_base_msgs -->
  <depend stack="pr2_common"/> <!-- pr2_msgs -->
  <depend stack="pr2_common_actions"/> <!-- pr2_common_action_msgs -->
  <depend stack="pr2_controllers"/> <!-- pr2_mechanism_controllers -->
  <depend stack="pr2_plugs"/> <!-- pr2_plugs_msgs, pr2_plugs_executive -->
  <depend stack="ros"/> <!-- std_msgs, roslib, rospy, rosbag, std_srvs -->
  <depend stack="web_interface"/> <!-- rosweb, webui -->

<package name="navigation_task"/><package name="continuous_ops_task_manager"/><package name="continuous_ops_executive"/><package name="continuous_ops_msgs"/><package name="pr2_base_recovery"/><package name="continuous_ops_test_task"/><package name="continuous_ops_web"/><package name="continuous_ops_alerts"/><package name="motor_resetter"/><package name="task_image_server"/></stack><stack name="au_automow_drivers" path="" repo="au-automow" repo_host="http://github.com/wjwwood/au-automow">
  <description brief="au_automow_drivers">
      
      Contains packages that implement drivers and interfaces to hardware elements used on Auburn University's Autonomous Lawnmower.
      The drivers include: The Roboteq AX2550 motor controller with encoder module, The Magellan DG14 GPS unit, and the SparkFun Atomic IMU.
      
  </description>
  <author>Maintained by William Woodall</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/au_automow_drivers</url>
  <depend stack="ros"/>

<package name="atomic_imu"/><package name="ax2550"/><package name="magellan_dg14"/></stack><stack name="control" path="" repo="control" repo_host="https://bitbucket.org/sglaser/control">
  <description brief="control">control</description>
  <author>Maintained by Stuart Glaser</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/control</url>
  <depend stack="common_msgs"/> <!-- actionlib_msgs, trajectory_msgs, geometry_msgs -->
  <depend stack="ros"/>

<package name="control_msgs"/></stack><stack name="pr2_ethercat_drivers" path="/stacks/pr2_ethercat_drivers/branches/pr2_ethercat_drivers-1.3" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="Drivers related to PR2 ethercat hardware">
    This stack contains drivers for the ethercat system and the peripherals
    that connect to it: motor control boards, fingertip sensors, texture
    projector, hand accelerometer.
  </description>
  <author>Maintained by Rob Wheeler</author>
  <license>BSD,binary only,GPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_ethercat_drivers</url>
  <depend stack="common"/> <!-- tinyxml, pluginlib -->
  <depend stack="common_msgs"/> <!-- geometry_msgs, diagnostic_msgs, visualization_msgs -->
  <depend stack="diagnostics"/> <!-- diagnostic_updater -->
  <depend stack="pr2_common"/> <!-- pr2_msgs -->
  <depend stack="pr2_mechanism"/> <!-- pr2_hardware_interface, realtime_tools -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rostest, rospy, roscpp -->
  <depend stack="rx"/> <!-- wxswig -->

<package name="ethercat_hardware"/><package name="eml"/><package name="fingertip_pressure"/></stack><stack name="ethzasl_message_transport" path="" repo="ethzasl_message_transport" repo_host="https://github.com/ethz-asl/ros-message-transport">
  <description brief="ethzasl_message_transport">Generic message transport plugin architecture</description>
  <author>Maintained by Cedric Pradalier</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ethzasl_message_transport</url>
  <depend stack="common"/> <!-- pluginlib -->
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="image_transport_plugins"/> <!-- libtheora -->
  <depend stack="ros"/> <!-- message_filters -->
  <depend stack="vision_opencv"/> <!-- opencv2, cv_bridge -->

<package name="pointcloud_transport"/><package name="udpmulti_transport"/><package name="imagem_transport"/><package name="message_transport_common"/><package name="sharedmem_transport"/><package name="compressed_imagem_transport"/><package name="theora_imagem_transport"/></stack><stack name="orocos_toolchain_ros-0.1.8" path="/trunk/kul-ros-pkg/stacks/orocos_toolchain_ros/tags/orocos_toolchain_ros-0.1.8" repo="kul-ros-pkg" repo_host="http://svn.mech.kuleuven.be/repos/orocos">
  <description brief="orocos_toolchain_ros">

      This stack contains all software necessary to build
      systems using both Orocos and ROS infrastructures. The complete
      <a href="http://www.orocos.org/wiki/orocos/toolchain">Orocos Toolchain</a> is integrated in the ROS build system and the
      rtt_ros_integration package allows easy communication between Orocos components
      and ROS nodes.
  
  </description>
  <author>Maintained by Ruben Smits - Steven Bellens</author>
  <license>BSD,GPL + runtime exception,LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/orocos_toolchain_ros</url>
  <depend stack="ros"/> <!-- rosbuild, roslib, std_msgs, roscpp -->

<package name="rtt_ros_integration"/><package name="typelib"/><package name="utilmm"/><package name="ocl"/><package name="rtt_exercises"/><package name="rtt_ros_integration_std_msgs"/><package name="utilrb"/><package name="orogen"/><package name="rtt_ros_integration_example"/><package name="rtt"/></stack><stack name="client_rosjava" path="" repo="client_rosjava" repo_host="http://code.in.tum.de/git/client-rosjava.git">
  <description brief="client_rosjava">client_rosjava</description>
  <author>Maintained by Lorenz Moesenlechner</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/client_rosjava</url>
  <depend stack="ros"/> <!-- roslang, roslib, rospack -->
  <depend stack="ros_comm"/> <!-- std_msgs, roscpp -->

<package name="rosjava"/><package name="test_rosjava"/></stack><stack name="albany_robots" path="/trunk/albany_robots" repo="albany-ros-pkg" repo_host="http://albany-ros-pkg.googlecode.com/svn">
  <description brief="Hardware drivers, controllers, and GUIs used in the ILS Social Robotics Lab">
    This stack contains a configuration and control code for a number of robots developed in the ILS Social Robotics Lab, at the University of Albany, State University of New York. 
  </description>
  <author>Maintained by Michael Ferguson</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/albany_robots</url>
  <depend stack="bosch_drivers"/> <!-- usb_cam -->
  <depend stack="common_msgs"/> <!-- geometry_msgs, sensor_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="ros"/> <!-- std_msgs, rospy, roscpp -->
  <depend stack="vanadium_drivers"/> <!-- arbotix -->
<package name="nelson"/><package name="social_msgs"/><package name="albany_common"/><package name="rosalyn"/></stack><stack name="pi-robot-ros-stack" path="/trunk/pi-robot-ros-stack" repo="pi-robot-ros-pkg" repo_host="http://pi-robot-ros-pkg.googlecode.com/svn">
  <description brief="pi_robot_stack">ROS Packages for the Pi Robot Project</description>
  <author>Maintained by Patrick Goebel</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://code.google.com/p/pi-robot-ros-pkg/</url>
  <depend stack="ros"/>
<package name="serializer"/><package name="pi_lib"/><package name="head_tracking_tutorial"/><package name="pi_tracker"/><package name="pi_demo"/><package name="pi_robot"/></stack><stack name="pr2_mechanism" path="/stacks/pr2_mechanism/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="PR2 mechanism">
    The <tt>pr2_mechanism</tt> stack contains the infrastructure to control the
    PR2 robot in a hard realtime control loop. The main interface to
    packages in this stack is through C++, but it is possible to
    interact with controllers through a ROS API. While the
    stack is currently aimed at controlling the PR2 robot, it should
    work on most force-controlled robots. 
  </description>
  <author>Maintained by Wim Meeussen</author>
  <license>BSD</license>  
  <review notes="2009-11-13" status="Doc reviewed"/>
  <url>http://ros.org/wiki/pr2_mechanism</url>
  <depend stack="common"/> <!-- xacro, tinyxml, pluginlib -->
  <depend stack="common_msgs"/> <!-- sensor_msgs, geometry_msgs, diagnostic_msgs -->
  <depend stack="diagnostics"/> <!-- diagnostic_updater -->
  <depend stack="geometry"/> <!-- angles -->
  <depend stack="pr2_common"/> <!-- pr2_description -->
  <depend stack="robot_model"/> <!-- robot_state_publisher, urdf, kdl_parser -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_msgs, std_srvs, rosparam, rospy, roscpp -->

<package name="pr2_mechanism_model"/><package name="pr2_hardware_interface"/><package name="pr2_controller_manager"/><package name="realtime_tools"/><package name="pr2_mechanism_msgs"/><package name="pr2_controller_interface"/><package name="pr2_mechanism_diagnostics"/></stack><stack name="object_recognition" path="/branches/trunk_diamondback/stacks/object_recognition" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="object_recognition">
     The object_recognition stack contains algorithms and tools relevant to
     object recognition from visual data.
   </description>
  <author>Maintained by Gary Bradski, Radu Bogdan Rusu, Marius Muja</author>
  <license>BSD,,LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/object_recognition</url>
  <depend stack="common"/> <!-- nodelet -->
  <depend stack="common_msgs"/> <!-- nav_msgs, geometry_msgs, sensor_msgs -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure -->
  <depend stack="drivers_experimental"/> <!-- dp_ptu47_pan_tilt_stage -->
  <depend stack="geometry"/> <!-- tf, eigen -->
  <depend stack="image_common"/> <!-- image_transport, camera_calibration_parsers -->
  <depend stack="image_pipeline"/> <!-- stereo_msgs -->
  <depend stack="perception_pcl"/> <!-- flann, pcl, pcl_ros -->
  <depend stack="perception_pcl_addons"/> <!-- pcl_visualization -->
  <depend stack="point_cloud_perception"/> <!-- pcl_tf -->
  <depend stack="point_cloud_perception_experimental"/> <!-- pcl_point_cloud2_image_color -->
  <depend stack="ros"/> <!-- rospy, std_msgs, roscpp, message_filters, rosrecord -->
  <depend stack="vision"/> <!-- chamfer_matching -->
  <depend stack="vision_opencv"/> <!-- image_geometry, opencv2, cv_bridge -->
  <depend stack="visual_feature_detectors"/> <!-- features_2d -->
  <depend stack="vslam"/> <!-- posest, vocabulary_tree -->

<package name="tod_detecting"/><package name="tod_converter"/><package name="bigg_detector"/><package name="textured_object_detection"/><package name="tod_stub"/><package name="dpm_detector"/><package name="fast_template_detector"/><package name="shape_detection"/><package name="tod_core"/><package name="tod_training"/><package name="barcode_from_picture"/><package name="vfh_cluster_classifier"/><package name="rein"/><package name="stereo_object_recognition"/></stack><stack name="point_cloud_perception" path="/stacks/point_cloud_perception/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Point Cloud Perception">
     The point_cloud_perception stack contains algorithms and tools that deal with 3D
     point cloud data from a variety of different sensing devices.
   </description>
  <author>Maintained by Radu Bogdan Rusu</author>
  <license>BSD,LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/point_cloud_perception</url>
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="ros"/> <!-- roscpp -->
  <depend stack="perception_pcl"/>

<package name="point_cloud_converter"/></stack><stack name="slam_karto" path="/stacks/slam_karto/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="slam_karto">SLAM using KARTO from SRI International</description>
  <author>Maintained by Bhaskara Marthi</author>
  <license>BSD,LGPL</license>  
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/slam_karto</url>
  <depend stack="common_msgs"/> <!-- nav_msgs, geometry_msgs, sensor_msgs, visualization_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rosconsole, roscpp, message_filters -->
  <depend stack="vslam"/> <!-- sba -->
  <depend stack="point_cloud_perception"/> <!-- eigen3 -->

<package name="karto_scan_matcher"/><package name="karto"/></stack><stack name="imu_drivers_usc" path="/trunk/imu_drivers_usc" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="imu_drivers_usc">imu_drivers_usc</description>
  <author>Maintained by Hordur Heidarsson</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/imu_drivers_usc</url>
  <depend stack="ros"/>

</stack><stack name="graph_mapping" path="/stacks/graph_mapping/branches/unstable-branch" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="graph_mapping">graph_mapping</description>
  <author>Maintained by Bhaskara Marthi</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/graph_mapping</url>
  <depend stack="common_msgs"/> <!-- nav_msgs, sensor_msgs, geometry_msgs, visualization_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="laser_pipeline"/> <!-- laser_geometry -->
  <depend stack="point_cloud_perception"/> <!-- eigen3 -->
  <depend stack="ros"/> <!-- rosbag, roscpp -->
  <depend stack="slam_karto"/> <!-- karto_scan_matcher -->
  <depend stack="vslam"/> <!-- sba -->

<package name="occupancy_grid_utils"/><package name="graph_slam"/><package name="pose_graph"/></stack><stack name="visual_feature_detectors" path="/branches/trunk_cturtle/stacks/visual_feature_detectors" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="visual_feature_detectors">

     Visual feature and object detectors.

  </description>
  <author>Patrick Mihelich</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/visual_feature_detectors</url>
  <depend stack="common_msgs"/> <!-- sensor_msgs, geometry_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="image_pipeline"/> <!-- image_proc -->
  <depend stack="ros"/> <!-- std_msgs, rostest, rospy, roscpp -->
  <depend stack="vision_opencv"/> <!-- opencv2, image_geometry, cv_bridge -->
  <depend stack="visualization_common"/> <!-- visualization_msgs -->

<package name="fast_detector"/><package name="brief_descriptor"/><package name="posedetection_msgs"/><package name="descriptors_2d"/><package name="calonder_descriptor"/><package name="checkerboard_detector"/><package name="features_2d_ros"/><package name="fast_sift"/><package name="features_2d"/><package name="descriptors_2d_gpl"/><package name="daisy"/></stack><stack name="orocos_toolchain_ros-0.1.6" path="/trunk/kul-ros-pkg/stacks/orocos_toolchain_ros/tags/orocos_toolchain_ros-0.1.6" repo="kul-ros-pkg" repo_host="http://svn.mech.kuleuven.be/repos/orocos">
  <description brief="orocos_toolchain_ros">

      This stack contains all software necessary to build
      systems using both Orocos and ROS infrastructures. The complete
      <a href="http://www.orocos.org/wiki/orocos/toolchain">Orocos Toolchain</a> is integrated in the ROS build system and the
      rtt_ros_integration package allows easy communication between Orocos components
      and ROS nodes.
  
  </description>
  <author>Maintained by Ruben Smits - Steven Bellens</author>
  <license>BSD,GPL + runtime exception,LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/orocos_toolchain_ros</url>
  <depend stack="ros"/> <!-- rosbuild, roslib, std_msgs, roscpp -->

<package name="rtt_ros_integration"/><package name="typelib"/><package name="utilmm"/><package name="ocl"/><package name="rtt_exercises"/><package name="rtt_ros_integration_std_msgs"/><package name="utilrb"/><package name="orogen"/><package name="rtt_ros_integration_example"/><package name="rtt"/></stack><stack name="cob_simulation" path="" repo="cob_simulation" repo_host="https://github.com/ipa320/cob_simulation">
  <description brief="cob_simulation">

     The cob_simulation stack includes packages to work with Care-O-bot within simulation environments, e.g. gazebo.

  </description>
  <author>Maintained by Florian Weisshardt</author>
  <license>LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_simulation</url>
  <depend stack="cob_common"/> <!-- cob_srvs, cob_description -->
  <depend stack="cob_driver"/> <!-- cob_sick_s300 -->
  <depend stack="common"/> <!-- actionlib, xacro -->
  <depend stack="common_msgs"/> <!-- actionlib_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="navigation"/> <!-- move_base_msgs -->
  <depend stack="pr2_controllers"/> <!-- single_joint_position_action, joint_trajectory_action -->
  <depend stack="pr2_mechanism"/> <!-- pr2_controller_manager -->
  <depend stack="pr2_simulator"/> <!-- pr2_gazebo_plugins, pr2_gazebo -->
  <depend stack="robot_model"/> <!-- convex_decomposition, robot_state_publisher, ivcon -->
  <depend stack="ros"/>
  <depend stack="simulator_gazebo"/> <!-- gazebo_tools, gazebo, gazebo_plugins, gazebo_worlds -->
  <depend stack="visualization_common"/> <!-- ogre_tools -->

<package name="cob_gazebo_worlds"/><package name="cob_ogre"/><package name="cob_gazebo"/><package name="cob_controller_configuration_gazebo"/></stack><stack name="pr2_common" path="/stacks/pr2_common/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="PR2 robot description and PR2-specific messages">
    URDF description of the robot kinematics and dynamics, 3D models of robot components, information required for gazebo to simulate the PR2, and messages specific to the PR2 such as detailed information about its power board and fingertip pressure sensors.
  </description>
  <author>Maintained by John Hsu</author>
  <license>BSD</license>  
  <review notes="2010/01/18" status="Doc reviewed"/>
  <url>http://ros.org/wiki/pr2_common</url>
  <depend stack="common_msgs"/> <!-- geometry_msgs -->
  <depend stack="robot_model"/> <!-- convex_decomposition, ivcon, urdf -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rosbag, rostest, std_msgs, rosbagmigration, rospy -->

<package name="pr2_dashboard_aggregator"/><package name="pr2_description"/><package name="pr2_machine"/><package name="pr2_msgs"/></stack><stack name="wg_robots_gazebo" path="/stacks/wg_robots_gazebo/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="wg_robots_gazebo">

     This stack contains a variety of tests and demos launch scripts in
simulation.

  </description>
  <author>Maintained by John Hsu</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/wg_robots_gazebo</url>
  <depend stack="arm_navigation"/> <!-- move_arm, move_arm_msgs -->
  <depend stack="common"/> <!-- actionlib, xacro -->
  <depend stack="common_msgs"/> <!-- nav_msgs, sensor_msgs, actionlib_msgs, geometry_msgs -->
  <depend stack="continuous_ops"/> <!-- navigation_task, continuous_ops_web, continuous_ops_task_manager, continuous_ops_test_task, continuous_ops_msgs, continuous_ops_executive, task_image_server -->
  <depend stack="geometry"/> <!-- tf, bullet -->
  <depend stack="image_common"/> <!-- polled_camera -->
  <depend stack="image_pipeline"/> <!-- stereo_image_proc -->
  <depend stack="kinematics"/> <!-- kinematics_msgs -->
  <depend stack="laser_pipeline"/> <!-- laser_filters, laser_assembler -->
  <depend stack="motion_planning_common"/> <!-- robot_self_filter -->
  <depend stack="navigation"/> <!-- move_base, map_server, nav_view, amcl, fake_localization, move_base_msgs, robot_pose_ekf -->
  <depend stack="object_manipulation"/> <!-- household_objects_database -->
  <depend stack="physics_ode"/> <!-- parallel_quickstep -->
  <!--depend stack="point_cloud_perception" /--> <!-- pcl_visualization data_acquisition_gazebo is blacklisted-->
  <depend stack="pr2_apps"/> <!-- pr2_teleop, pr2_tuckarm -->
  <depend stack="pr2_arm_navigation"/> <!-- pr2_arm_navigation_kinematics -->
  <depend stack="pr2_common"/> <!-- pr2_description, pr2_machine -->
  <depend stack="pr2_common_actions"/> <!-- pr2_common_action_msgs -->
  <depend stack="pr2_controllers"/> <!-- trajectory_msgs, pr2_mechanism_controllers, robot_mechanism_controllers, joint_trajectory_action, pr2_controllers_msgs -->
  <depend stack="pr2_doors"/> <!-- pr2_doors_executive, pr2_doors_actions -->
  <depend stack="pr2_mechanism"/> <!-- pr2_controller_manager, pr2_mechanism_model, pr2_controller_interface -->
  <depend stack="pr2_navigation"/> <!-- pr2_navigation_perception, pr2_navigation_teleop, semantic_point_annotator, pr2_navigation_global -->
  <depend stack="pr2_navigation_apps"/> <!-- pr2_2dnav_local -->
  <depend stack="pr2_plugs"/> <!-- pr2_plugs_executive -->
  <depend stack="pr2_robot"/> <!-- pr2_bringup -->
  <depend stack="pr2_simulator"/> <!-- pr2_gazebo_plugins, pr2_examples_gazebo, pr2_ogre, pr2_controller_configuration_gazebo, pr2_gazebo -->
  <depend stack="pr2_tabletop_manipulation_apps"/> <!-- pr2_tabletop_manipulation_launch, pr2_pick_and_place_demos -->
  <depend stack="pr2_web_apps"/> <!-- navigation_application, map_tiler, tuckarms_application, mannequin_application, pr2_base_application, camera_application, pr2_addons_application, soccer_application, doors_application, teleop_ps3_application, pr2_recharge_application -->
  <depend stack="robot_model"/> <!-- robot_state_publisher -->
  <depend stack="ros"/> <!-- rxtools, std_srvs, roscpp, roslib, std_msgs, rostest, rospy, rostopic, rosbag -->
  <depend stack="simulator_gazebo"/> <!-- gazebo_tools, gazebo, gazebo_plugins, gazebo_worlds -->
  <depend stack="slam_gmapping"/> <!-- gmapping -->
  <depend stack="visualization"/> <!-- rviz -->
  <depend stack="web_interface"/> <!-- webui -->

<package name="test_pr2_collision_gazebo"/><package name="test_pr2_mechanism_controllers_gazebo"/><package name="test_pr2_sensors_gazebo"/><package name="pr2_tabletop_manipulation_gazebo_demo"/><package name="pr2_arm_gazebo"/><package name="pr2_sr_hand_gazebo_demo"/><package name="icra_navigation_gazebo"/><package name="pr2_plugs_gazebo_demo"/><package name="test_pr2_description"/><package name="test_gazebo"/><package name="test_pr2_gazebo"/><package name="pr2_doors_gazebo_demo"/><package name="gazebo_benchmarks"/><package name="pr2_simulator_benchmarks"/><package name="ros_epic_fail"/><package name="pr2_continuous_operation_gazebo_demo"/><package name="texas_gazebo"/><package name="test_pr2_gazebo_plugins"/><package name="pr2_build_map_gazebo_demo"/><package name="pr2_bringup_gazebo_demo"/><package name="test_pr2_2dnav_gazebo"/><package name="data_acquisition_gazebo"/><package name="pr2_laban_gazebo_demo"/><package name="pr2_gazebo_wg"/><package name="test_pr2_grasping"/><package name="pr2_2dnav_gazebo"/></stack><stack name="orocos_toolchain_ros-0.1.2" path="/trunk/kul-ros-pkg/stacks/orocos_toolchain_ros/tags/orocos_toolchain_ros-0.1.2" repo="kul-ros-pkg" repo_host="http://svn.mech.kuleuven.be/repos/orocos">
  <description brief="orocos_toolchain_ros">

      This stack contains all software necessary to build
      systems using both Orocos and ROS infrastructures. The complete
      orocos toolchain is integrated in the ROS build system and the
      rtt_ros_integration package allows easy communication between Orocos components
      and ROS nodes.
  
  </description>
  <author>Maintained by Ruben Smits - Steven Bellens</author>
  <license>LGPL, GPL with runtime exception</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/orocos_toolchain_ros</url>
  <depend stack="ros"/>

<package name="rtt_ros_integration"/><package name="typelib"/><package name="utilmm"/><package name="ocl"/><package name="rtt_exercises"/><package name="rtt_ros_integration_std_msgs"/><package name="utilrb"/><package name="orogen"/><package name="rtt_ros_integration_example"/><package name="rtt"/></stack><stack name="bosch_image_proc" path="/trunk/stacks/bosch_image_proc" repo="bosch-ros-pkg" repo_host="https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg">
  <description brief="camera_robot_self_filter">camera_robot_self_filter</description>
  <author>Maintained by Christian Bersch</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/camera_robot_self_filter</url>
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="geometry"/> <!-- tf, tf_conversions -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="robot_model"/> <!-- urdf -->
  <depend stack="ros"/> <!-- roscpp, message_filters -->
  <depend stack="vision_opencv"/> <!-- image_geometry, opencv2, cv_bridge -->

<package name="camera_self_filter"/><package name="pr2_camera_self_filter"/><package name="vcglib"/></stack><stack name="arm_navigation" path="/stacks/arm_navigation/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="arm_navigation">
    The arm navigation stack contains the action/behavior used to execute collision free motion planning and control for a robot arm manipulator. Included in this stack are the messages required for an action interface that can be used to specify and abort goals for the move_arm action. An implementation for arm navigation on the PR2 robot can be found in the pr2_arm_navigation stack. 
  </description>
  <author>Maintained by Sachin Chitta</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/arm_navigation</url>
  <depend stack="common"/> <!-- actionlib, filters -->
  <depend stack="common_msgs"/> <!-- actionlib_msgs, trajectory_msgs, geometry_msgs, visualization_msgs -->
  <depend stack="geometry"/> <!-- tf, tf_conversions -->
  <depend stack="joystick_drivers"/> <!-- joy -->
  <depend stack="kinematics"/> <!-- kinematics_msgs -->
  <depend stack="motion_planning_common"/> <!-- planning_models, geometric_shapes, motion_planning_msgs, mapping_msgs, geometric_shapes_msgs -->
  <depend stack="motion_planning_environment"/> <!-- planning_environment, planning_environment_msgs -->
  <depend stack="pr2_controllers"/> <!-- pr2_controllers_msgs -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- rosconsole, std_msgs, roscpp -->

<package name="move_arm_msgs"/><package name="move_arm_head_monitor"/><package name="collision_free_arm_trajectory_controller"/><package name="move_arm"/></stack><stack name="orocos_toolchain_ros-0.1.1" path="/trunk/kul-ros-pkg/stacks/orocos_toolchain_ros/tags/orocos_toolchain_ros-0.1.1" repo="kul-ros-pkg" repo_host="http://svn.mech.kuleuven.be/repos/orocos">
  <description brief="orocos_toolchain_ros">

      This stack contains all software necessary to build
      systems using both Orocos and ROS infrastructures. The complete
      orocos toolchain is integrated in the ROS build system and the
      rtt_ros_integration package allows easy communication between Orocos components
      and ROS nodes.
  
  </description>
  <author>Maintained by Ruben Smits - Steven Bellens</author>
  <license>LGPL, GPL with runtime exception</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/orocos_toolchain_ros</url>
  <depend stack="ros"/>

<package name="rtt_ros_integration"/><package name="typelib"/><package name="utilmm"/><package name="ocl"/><package name="rtt_exercises"/><package name="rtt_ros_integration_std_msgs"/><package name="utilrb"/><package name="orogen"/><package name="rtt_ros_integration_example"/><package name="rtt"/></stack><stack name="ua_vision" path="/trunk/arrg/ua_vision" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="ua_vision">
        Contains packages related to vision on UA robots, including saliency 
        tracking based on the Nick's Machine Perception Toolkit (NMPT).
    </description>
    <author>Maintained by UA Robotics Research Group</author>
    <license>BSD</license>  
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/ua_vision</url>

    <depend stack="ros"/>
    <depend stack="vision_opencv"/>
<package name="object_tracking"/><package name="saliency_tracking"/><package name="background_filters"/><package name="nmpt"/><package name="color_based_tracking"/></stack><stack name="pr2_common_alpha" path="/stacks/pr2_common_alpha/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_common_alpha">pr2_common_alpha</description>
  <author>Maintained by John Hsu</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_common_alpha</url>
  <depend stack="common"/> <!-- xacro -->
  <depend stack="joystick_drivers"/> <!-- joy -->
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="robot_model"/>
  <depend stack="ros"/> <!-- roscpp, rosrecord -->
  <depend stack="pr2_controllers"/> 
  <depend stack="pr2_simulator"/>
<package name="teleop_head"/><package name="pr2_defs"/></stack><stack name="orocos_toolchain_ros-0.1.5" path="/trunk/kul-ros-pkg/stacks/orocos_toolchain_ros/tags/orocos_toolchain_ros-0.1.5" repo="kul-ros-pkg" repo_host="http://svn.mech.kuleuven.be/repos/orocos">
  <description brief="orocos_toolchain_ros">

      This stack contains all software necessary to build
      systems using both Orocos and ROS infrastructures. The complete
      <a href="http://www.orocos.org/wiki/orocos/toolchain">Orocos Toolchain</a> is integrated in the ROS build system and the
      rtt_ros_integration package allows easy communication between Orocos components
      and ROS nodes.
  
  </description>
  <author>Maintained by Ruben Smits - Steven Bellens</author>
  <license>LGPL, GPL with runtime exception</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/orocos_toolchain_ros</url>
  <depend stack="ros"/>

<package name="rtt_ros_integration"/><package name="typelib"/><package name="utilmm"/><package name="ocl"/><package name="rtt_exercises"/><package name="rtt_ros_integration_std_msgs"/><package name="utilrb"/><package name="orogen"/><package name="rtt_ros_integration_example"/><package name="rtt"/></stack><stack name="otl_util" path="/trunk/otl_util" repo="otl-ros-pkg" repo_host="http://otl-ros-pkg.googlecode.com/svn">
  <description brief="otl_util">otl_util</description>
  <author>Maintained by Takashi Ogura</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/otl_util</url>
  <depend stack="ros"/>

<package name="fake_voice_recog"/><package name="joy_talk"/><package name="jtalk_node"/></stack><stack name="hwu_osl_software" path="/trunk/hwu_osl_software" repo="hwu-osl-ros-pkg" repo_host="http://hwu-osl-ros-pkg.googlecode.com/svn">
  <description brief="hwu_osl_software">hwu_osl_software</description>
  <author>Maintained by Joel Cartwright</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>TODO</url>
  <depend stack="ros"/>

<package name="sim_clock"/><package name="auv_nav_sim"/><package name="auv_joy"/><package name="auv_description"/><package name="auv_pilot"/><package name="auv_sim"/><package name="auv_nav"/></stack><stack name="vmi_virtual_office" path="/trunk/vmi_virtual_office" repo="vmi-ros-pkg" repo_host="http://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg">
  <description brief="The Virtual Office">
  The Virtual Office at VMI, the simulation files for rviz and gazebo.
  
  </description>
  <author>Maintained by Luis Roalter</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/vmi_virtual_office</url>
  
  <depend stack="ros"/>
  <depend stack="vmi_cognitive_environment"/> 
  
<package name="vo_actioncomponents"/><package name="vo_virtualoffice"/><package name="vo_interface"/></stack><stack name="billiards" path="/branches/trunk_cturtle/stacks/billiards" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="billiards">billiards</description>
  <author>Maintained by Eric Berger, Josh Faust, Tim Field, Tully Foote, Brian Gerkey, Stu Glaser, John Hsu, Patrick Milhelich, Aki Oyama</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/billiards</url>
  <depend stack="ros"/>
<package name="billiards_table"/><package name="pr2_billiards_sim"/><package name="billiards_rviz_plugin"/><package name="billiards_executive"/><package name="billiards_recorder"/><package name="billiards_checkerboard"/><package name="cvblobslib"/><package name="billiards_vis"/><package name="fastfiz_msgs"/><package name="billiards_navigation"/><package name="billiard_ball_detector"/><package name="billiard_object_detector"/><package name="billiards_msgs"/><package name="fastfiz"/><package name="billiards_launch"/><package name="billiards_control"/><package name="billiards_planner"/></stack><stack name="roslisp_common_tutorials" path="/branches/trunk_cturtle/stacks/roslisp_common_tutorials" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="roslisp_common_tutorials">roslisp_common_tutorials</description>
  <author>Maintained by Lorenz Moesenlechner</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/roslisp_common_tutorials</url>
  <depend stack="ros"/>
  <depend stack="ros_pkg_tutorials"/> <!-- actionlib_tutorials -->
  <depend stack="roslisp_common"/> <!-- actionlib_lisp -->
  <depend stack="roslisp_support"/> <!-- roslisp_runtime -->

<package name="actionlib_lisp_examples"/></stack><stack name="trajectory_filters" path="/stacks/trajectory_filters/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="trajectory_filters">
  This stack contains a set of filters to work with joint trajectories. It also contains a trajectory filter server which is a ROS node that exposes a ROS service interface to a chain of filters. 
  </description>
  <author>Maintained by Sachin Chitta</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/trajectory_filters</url>
  <depend stack="common"/> <!-- filters -->
  <depend stack="common_msgs"/> <!-- trajectory_msgs -->
  <depend stack="geometry"/> <!-- tf, angles -->
  <depend stack="motion_planning_common"/> <!-- motion_planning_msgs -->
  <depend stack="motion_planning_environment"/> <!-- planning_environment -->
  <depend stack="robot_model"/> <!-- urdf -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- roscpp -->

<package name="constraint_aware_spline_smoother"/><package name="spline_smoother"/><package name="trajectory_filter_server"/><package name="joint_normalization_filters"/></stack><stack name="orocos_toolchain_ros-0.1.3" path="/trunk/kul-ros-pkg/stacks/orocos_toolchain_ros/tags/orocos_toolchain_ros-0.1.3" repo="kul-ros-pkg" repo_host="http://svn.mech.kuleuven.be/repos/orocos">
  <description brief="orocos_toolchain_ros">

      This stack contains all software necessary to build
      systems using both Orocos and ROS infrastructures. The complete
      orocos toolchain is integrated in the ROS build system and the
      rtt_ros_integration package allows easy communication between Orocos components
      and ROS nodes.
  
  </description>
  <author>Maintained by Ruben Smits - Steven Bellens</author>
  <license>LGPL, GPL with runtime exception</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/orocos_toolchain_ros</url>
  <depend stack="ros"/>

<package name="rtt_ros_integration"/><package name="typelib"/><package name="utilmm"/><package name="ocl"/><package name="rtt_exercises"/><package name="rtt_ros_integration_std_msgs"/><package name="utilrb"/><package name="orogen"/><package name="rtt_ros_integration_example"/><package name="rtt"/></stack><stack name="topological_navigation" path="/stacks/topological_navigation/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="topological_navigation">Code pertaining to navigation using a global topological graph together with local metric information</description>
  <author>Maintained by Bhaskara Marthi</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/topological_navigation</url>
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- nav_msgs, actionlib_msgs, geometry_msgs, visualization_msgs -->
  <depend stack="geometry"/> <!-- tf, bullet -->
  <depend stack="graph_mapping"/> <!-- pose_graph, occupancy_grid_utils, graph_slam -->
  <depend stack="navigation"/> <!-- move_base_msgs, navfn, costmap_2d -->
  <depend stack="point_cloud_perception"/> <!-- eigen3 -->
  <depend stack="ros"/> <!-- roslib, std_srvs, roscpp -->

<package name="topological_map"/></stack><stack name="nxt_robots" path="" repo="foote-nxt" repo_host="https://nxt.foote-ros-pkg.googlecode.com/hg/">
  <description brief="nxt_robots">
  nxt_robots provides starter robots for using NXT with ROS.
  </description>
  <author>Maintained by Tully Foote, Wim Meeussen, and Melonee Wise</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/nxt_robots</url>
  <depend stack="navigation"/> <!-- robot_pose_ekf -->
  <depend stack="nxt"/> <!-- nxt_ros, nxt_controllers -->
  <depend stack="ros"/>

<package name="nxt_robot_sensor_car"/><package name="nxt_robot_kit_test"/><package name="nxt_robot_gyro_car"/></stack><stack name="fiducials" path="/fiducials" repo="acin-tuwien" repo_host="https://svn.acin.tuwien.ac.at/ros">
  <description brief="fiducials">This stack provides notes to detect visual markers like checkerboards and estimateds there 3D pose</description>
  <author>Maintained by Markus Bader</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/fiducials</url>
  <depend stack="ros"/>

<package name="checkerboard_detection"/></stack><stack name="humanoid_navigation" path="/trunk/humanoid_navigation" repo="alufr-ros-pkg" repo_host="http://alufr-ros-pkg.googlecode.com/svn">
  <description brief="humanoid_navigation">The humanoid navigation stack will contain
  various packages for humanoid (biped) robot navigation.</description>
  <author>Maintained by Armin Hornung</author>
  <license>GPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/humanoid_navigation</url>
  <depend stack="ros"/>

<package name="footstep_planner"/></stack><stack name="starmac_common" path="" repo="starmac-ros-pkg" repo_host="lp:starmac-ros-pkg">
  <description brief="starmac_common">
  starmac_common contains general-purpose libraries, scripts, etc. These should be general
  in the sense that they might be found in ros-pkg (and in some cases maybe we'll propose
  including them there).
  </description>
  <author>Maintained by Patrick Bouffard</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/starmac_common</url>
  <depend stack="ros"/>
  <depend stack="roshpit"/>

<package name="starmac_roshlib"/><package name="starmac_templates"/></stack><stack name="cram_rosie" path="" repo="cram_rosie" repo_host="http://code.in.tum.de/git/cram-rosie.git">
  <description brief="cram_process_modules_rosie">cram_process_modules_rosie</description>
  <author>Maintained by Lorenz Moesenlechner</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cram_rosie</url>
  <depend stack="cram_highlevel"/> <!-- cram_roslisp_common, cljlo, cram_plan_actionserver, cram_plan_failures, cram_plan_knowledge, designators_ros, location_costmap, cl_json_pl_client, cljlo_utils, cram_plan_library, table_costmap, perception_process_module -->
  <depend stack="cram_pl"/> <!-- cram_reasoning, designators, cram_math, process_modules, cram_utilities, cram_language, cram_execution_trace -->
  <depend stack="ias_common"/> <!-- navp_action, cogman_msgs -->
  <depend stack="ros"/>
  <depend stack="roslisp_common"/> <!-- actionlib_lisp -->

<package name="powercube_ptu_process_module"/><package name="jlo_navp_process_module"/><package name="rosie_executive"/><package name="kuka_arm_hand_process_module"/></stack><stack name="lse_roomba_toolbox" path="/trunk/unstable/lse_roomba_toolbox" repo="isr-uc-ros-pkg" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="lse_roomba_toolbox">
  
  Useful tools for the Roomba robots used at the LSE including popular tf setups, Stage world files and 2D navigation parameters and example launch files for the real and simulated robots.
  
  </description>
  <author>Gon√ßalo Cabrita and Pedro Sousa</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/lse_roomba_toolbox</url>
  <depend stack="ros"/>

<package name="lse_roomba_2dnav"/><package name="lse_roomba_tf_setup"/><package name="roomba_stage"/></stack><stack name="lse_anemometer_drivers" path="/trunk/unstable/lse_anemometer_drivers" repo="isr-uc-ros-pkg" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="lse anemometer drivers">
  	This stack contains drivers for anemometers. Currently the only driver available is for the Windsonic, an ultrasonic wind sensor.
  </description>
  <author>Gon√ßalo Cabrita and Pedro Sousa</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/lse_anemometer_drivers</url>
  <depend stack="ros"/>	<!-- roscpp -->
  <depend stack="lse_communication"/>	<!-- cereal_port -->
  <depend stack="lse_messages"/>	<!-- lse_sensor_msgs -->

<package name="windsonic"/></stack><stack name="pr2_exploration" path="/trunk/stacks/pr2_exploration" repo="bosch-ros-pkg" repo_host="https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg">
  <description brief="Exploration stack for the PR2">
     Exploration stack for the PR2.
  </description>
  <author>Maintained by Benjamin Pitzer</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_exploration</url>
  <depend stack="exploration"/> <!-- explore -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="joystick_drivers"/> <!-- joy -->
  <depend stack="navigation"/> <!-- move_base -->
  <depend stack="pr2_apps"/> <!-- pr2_teleop -->
  <depend stack="pr2_navigation_apps"/> <!-- pr2_2dnav_slam -->
  <depend stack="ros"/>
  <depend stack="slam_gmapping"/> <!-- gmapping -->

<package name="explore_pr2"/></stack><stack name="jsk_ros_tools" path="/trunk/jsk_ros_tools" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg">
  <description brief="collection of utility script for ros">
    collection of utility script for ros
  </description>
  <author>Ryohei Ueda(ueda@jsk.t.u-tokyo.ac.jp)</author>
  <license>Apache License 2.0</license>
  <depend stack="ros"/> <!-- rospy -->
<package name="rostool-alias-generator"/><package name="jsk-rosemacs"/></stack><stack name="roomba_robot" path="/trunk/unstable/roomba_robot" repo="isr-uc-ros-pkg" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="roomba_robot">
  
  	iRobot Roomba robot stack.
  
  </description>
  <author>Gon√ßalo Cabrita</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/roomba_robot</url>
  <depend stack="ros"/>			<!-- roscpp -->
  <depend stack="common_msgs"/> 	<!-- nav_msgs, geometry_msgs -->
  <depend stack="geometry"/> 		<!-- tf -->
  
<package name="roomba_500_series"/></stack><stack name="orocos" path="/orocos-apps/public_release/orocos-pkgs" repo="kul-ros-pkg" repo_host="http://svn.mech.kuleuven.be/repos/orocos">
  <description brief="orocos">
    orocos: Open Robot Control Software, version 1.10. Version 2.x
    of the project is available as the <a href="http://www.ros.org/wiki/orocos_toolchain_ros">Orocos toolchain ROS stack</a>.
    The project's aim is to develop a general-purpose, free software, and modular framework for robot and machine control. 
  </description>
  <author>Maintained by Ruben Smits</author>
  <license>,BSD,LGPL,GPL+runtime exception</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/orocos</url>
  <depend stack="geometry"/> <!-- eigen -->
  <depend stack="ros"/>

<package name="rtt_exercises_1.10.0"/><package name="ocl_1.10"/><package name="kdl_1.0"/><package name="bfl_examples"/><package name="orocos_ros_integration"/><package name="bfl_dataAssociationBranch"/><package name="bfl_0.7"/><package name="rtt_1.10"/></stack><stack name="common_tutorials" path="/stacks/common_tutorials/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="common_tutorials">common_tutorials</description>
  <author>Maintained by Tully Foote</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/common_tutorials</url>
  <depend stack="common"/> <!-- actionlib, pluginlib -->
  <depend stack="common_msgs"/> <!-- actionlib_msgs -->
  <depend stack="geometry"/> <!-- angles -->
  <depend stack="ros"/> <!-- roslib -->
  <depend stack="ros_comm"/> <!-- std_msgs, rospy, roscpp, rosconsole -->
  <depend stack="ros_tutorials"/> <!-- turtlesim -->

<package name="actionlib_tutorials"/><package name="turtle_actionlib"/><package name="pluginlib_tutorials"/></stack><stack name="cwru_experimental" path="" repo="cwru-ros-pkg" repo_host="http://github.com/cwru-robotics/cwru-ros-pkg">
  <description brief="cwru_experimental">cwru_experimental</description>
  <author>Maintained by Eric Perko</author>
  <license>LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cwru_experimental</url>
  <depend stack="camera_drivers"/> <!-- camera1394 -->
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- nav_msgs, actionlib_msgs, geometry_msgs -->
  <depend stack="cwru_semi_stable"/> <!-- cwru_goal_planner, cwru_base, cwru_nav -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="image_pipeline"/> <!-- image_proc -->
  <depend stack="navigation"/> <!-- move_base_msgs, move_base -->
  <depend stack="ros"/> <!-- rospy, std_msgs, roscpp, rosmsg -->
  <depend stack="vision_opencv"/> <!-- opencv2, image_geometry, cv_bridge -->

<package name="cwru_jaus"/><package name="cwru_vision"/><package name="cwru_obstacle_planner"/><package name="wagon_handle_steering"/><package name="cwru_wsn_steering"/><package name="cwru_voice"/></stack><stack name="mapping" path="" repo="mapping" repo_host="http://code.in.tum.de/git/mapping.git" version="0.1">
  <description brief="mapping">

    Collection of routines and functions for 3D mapping@IAS.

  </description>
  <author>Nico Blodow, Zoltan-Csaba Marton, Dejan Pangercic</author>
  <license>BSD</license>  
  <review notes="" status=""/>
  <url>http://ros.org/wiki/mappping</url>
  <depend stack="vision_opencv"/> <!-- opencv2, cv_bridge --> 
  <depend stack="point_cloud_perception"/> <!-- pcl, pcl_ros, eigen3, vtk, pcl_visualization, point_cloud_converter --> 
  <depend stack="ros"/> <!-- roscpp, std_msgs --> 
  <depend stack="image_common"/> <!-- image_transport -->
  <depend stack="common_msgs"/> <!-- geometry_msgs, sensor_msgs --> 
  <depend stack="octomap_mapping"/> <!-- octomap, octomap_server --> 
  <depend stack="geometry"/> <!-- tf, bullet --> 
  <depend stack="ias_visualization"/> <!-- triangle_mesh_msgs --> 
  <depend stack="visualization_common"/> <!-- visualization_msgs --> 
  <depend stack="motion_planning_common"/> <!-- mapping_msgs --> 
  <depend stack="common"/> <!-- yaml_cpp, actionlib --> 
  <depend stack="pr2_common"/> <!-- pr2_msgs --> 
  <depend stack="navigation"/> <!-- move_base_msgs --> 
  <depend stack="pr2_controllers"/> <!-- pr2_controllers_msgs --> 
<package name="ias_table_msgs"/><package name="pcl_ias_sample_consensus"/><package name="ias_projected_light"/><package name="next_best_view"/><package name="pcl_cloud_algos"/><package name="handle_detection"/><package name="pcl_cloud_tools"/><package name="pointcloud_registration"/><package name="mapping_ias_msgs"/><package name="pcl_to_octree"/><package name="pcl_vtk_tools"/><package name="ias_table_srvs"/></stack><stack name="ua_apps" path="/trunk/arrg/ua_apps" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
    <description brief="Applications and demos for UA Robots">Applications and demos for UA Robots.</description>
    <author>Maintained by UA Robotics Research Group</author>
    <license>BSD</license>  
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/ua_apps</url>

    <depend stack="ros"/>

    <depend stack="ua_drivers"/>
    <depend stack="ua_controllers"/>
    <depend stack="ua_robots"/>
    <depend stack="ua_vision"/>
    <depend stack="wubble_world"/>

<package name="wubble2_robot"/><package name="ua_woz_experiment"/><package name="wubble_mapping"/><package name="wubble_teleop"/><package name="wubble_blocks"/><package name="wubble_robot"/></stack><stack name="2dnav_pr2_app" path="/branches/trunk_cturtle/applications/2dnav_pr2_app" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="A 2D navigation application for the PR2 robot platform.">
    The 2D navigation application for the PR2 robot
  </description>
  <author>Eitan eitan@willowgarage.com</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/2dnav_pr2_app</url>
  <depend stack="common"/> <!-- filters -->
  <depend stack="common_msgs"/> <!-- sensor_msgs, geometry_msgs -->
  <depend stack="driver_common"/> <!-- dynamic_reconfigure -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="laser_pipeline"/> <!-- laser_filters, laser_geometry -->
  <depend stack="navigation"/> <!-- move_base, map_server, amcl -->
  <depend stack="pr2_apps"/> <!-- pr2_teleop -->
  <depend stack="pr2_common"/> <!-- pr2_machine -->
  <depend stack="pr2_controllers"/> <!-- pr2_mechanism_controllers -->
  <depend stack="pr2_mechanism"/> <!-- pr2_controller_manager -->
  <depend stack="pr2_navigation"/> <!-- pr2_navigation_self_filter, semantic_point_annotator -->
  <depend stack="ros"/> <!-- topic_tools, roscpp, message_filters -->
  <!--depend stack="sandbox" />  explore_wg -->
  <depend stack="slam_gmapping"/> <!-- gmapping -->
  <depend stack="wg_common"/> <!-- willow_maps -->

<package name="2dnav_pr2"/></stack><stack name="openrave_planning" path="/trunk/openrave_planning" repo="jsk-ros-pkg" repo_host="https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg" version="0.1">
  <description brief="openrave packages from cmu-ros-pkg">
    These are OpenRAVE-related packages.
  </description>
  <author>Rosen Diankov rdiankov@cs.cmu.edu</author>
  <license>BSD</license>
  <review notes="" status="unreviewed"/>
  <url>http://pr.willowgarage.com/wiki/openrave</url>
  
  <depend stack="motion_planning_common"/> <!-- mapping_msgs, manipulation_msgs --> 
  <depend stack="geometry"/> <!-- tf, bullet --> 
  <depend stack="physics_ode"/> <!-- opende --> 
  <depend stack="visual_feature_detectors"/> <!-- checkerboard_detector --> 
  <depend stack="calibration_experimental"/> <!-- mocap_msgs --> 
  <depend stack="ros"/> <!-- std_msgs, roscpp --> 
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="robot_model"/> <!-- colladadom, collada_urdf -->
  <depend stack="robot_calibration"/> <!-- calibration stuff -->
<package name="openrave_calibration"/><package name="openrave_sensors"/><package name="openrave_database"/><package name="orrosplanning"/><package name="collada_robots"/><package name="openrave_robot_control"/><package name="openrave_actionlib"/><package name="roscpp_sessions"/><package name="session_tutorials"/><package name="soqt"/><package name="openrave"/><package name="openraveros"/><package name="openrave_robot_filter"/></stack><stack name="vmi_whiteboard_robot" path="/trunk/vmi_whiteboard_robot" repo="vmi-ros-pkg" repo_host="http://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg">
  <description brief="vmi_whiteboard_robot">
  
  </description>
  <author>Maintained by Luis Roalter</author>
  <license>BSD,GPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/vmi_whiteboard_robot</url>

  <depend stack="common"/> <!-- yaml_cpp -->
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="image_common"/> <!-- image_transport, camera_calibration_parsers -->
  <depend stack="ros"/> <!-- rospy, std_msgs, roscpp -->
  <depend stack="vision_opencv"/> <!-- opencv2, cv_bridge -->

<package name="wb_robot_tracking"/><package name="dynamic_uvc_cam"/><package name="wb_robot_control"/><package name="xbee_interface"/><package name="touch_display_interface"/></stack><stack name="graspit_simulator" path="/branches/trunk_diamondback/stacks/graspit_simulator" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="graspit_simulator">graspit_simulator</description>
  <author>Maintained by Matei Ciocarlie</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/graspit_simulator</url>
  <depend stack="ros"/>

<package name="graspit_interface"/><package name="graspit_interface_msgs"/><package name="graspit_pipeline"/></stack><stack name="erratic_robot" path="/stacks/erratic_robot/trunk" repo="erratic_robot" repo_host="https://ua-ros-pkg.googlecode.com/svn">
    <description brief="Packages related to Videre Erratic mobile robot">
        This stack contains packages that are used to interface with Videre
        Erratic mobile robot. These include the hardware interface driver,
        URDF description, 3D meshes, navigation stack configuration and
        launch files and keyboard teleoperation node.
    </description>

    <author>Maintained by Antons Rebguns</author>
    <license>BSD</license>  
    <review notes="" status="unreviewed"/>
    <url>http://ros.org/wiki/erratic_robot</url>

    <depend stack="ros"/>
    <depend stack="robot_model"/>
    <depend stack="common"/>
    <depend stack="simulator_gazebo"/>
    <depend stack="navigation"/>
    <depend stack="laser_pipeline"/>
    <depend stack="motion_planning_common"/>
    <depend stack="slam_gmapping"/>
    <depend stack="geometry"/>
    <depend stack="common_msgs"/>
<package name="erratic_navigation"/><package name="player"/><package name="erratic_gazebo_plugins"/><package name="erratic_player"/><package name="erratic_description"/><package name="erratic_teleop"/><package name="erratic_navigation_apps"/></stack><stack name="vicon" path="" repo="uuisrc-ros-pkg" repo_host="https://github.com/cburbridge/uuisrc-ros-pkg">
  <description brief="vicon">Vicon motion tracking system interface stack</description>
  <author>Chris Burbridge</author>
  <license>GPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/vicon</url>
  <depend stack="ros"/>

<package name="vicon_nodes"/><package name="libvicon"/></stack><stack name="wg_common" path="/stacks/wg_common/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="Common code for Willow Garage robots.">Stores pakages that are widely useful to robots operating at Willow Garage.</description>
  <author>Maintained by Eitan Marder-Eppstein</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/wg_common</url>
  <depend stack="ros"/>

<package name="willow_maps"/></stack><stack name="sarkofag_robot" path="" repo="sarkofag_robot" repo_host="https://github.com/RCPRG-ros-pkg/sarkofag_robot">
  <description brief="sarkofag_robot">sarkofag_robot</description>
  <author>Maintained by Konrad Banachowicz</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/sarkofag_robot</url>
  <depend stack="common"/> <!-- actionlib, xacro -->
  <depend stack="orocos_toolchain_ros"/> <!-- rtt, ocl -->
  <depend stack="orocos_tools"/> <!-- oro_servo_msgs, joint_spline_trajectory_generator, oro_joint_trajectory_action, fake_servo, oro_joint_state_publisher, rtt_ros_integration_sensor_msgs -->
  <depend stack="pr2_controllers"/> <!-- pr2_controllers_msgs -->
  <depend stack="ros"/>

<package name="sarkofag_launch"/><package name="sarkofag_defs"/><package name="sarkofag_servo"/></stack><stack name="lse_arduino" path="/trunk/unstable/lse_arduino" repo="isr-uc-ros-pkg" repo_host="http://isr-uc-ros-pkg.googlecode.com/svn">
  <description brief="lse_arduino">
  
  	A stack for arduino related packages for ROS.
  	
  </description>
  <author>Gon√ßalo Cabrita and Pedro Sousa</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/lse_arduino</url>
  <depend stack="ros"/>	<!-- roscpp -->
  <depend stack="lse_communication"/>	<!-- cereal_port -->

<package name="ardusim"/></stack><stack name="physics_ode" path="/stacks/physics_ode/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="physics_ode">

     Open Dynamics Physics Engines for Simulation and Planning (Collision Detection).

  </description>
  <author>Maintained by John Hsu</author>
  <license>Boost Software License,BSD,LGPL</license>  
  <review notes="2010/01/08" status="Doc reviewed"/>
  <url>http://ros.org/wiki/physics_ode</url>
  <depend stack="ros"/> <!-- rosbuild -->

<package name="opende"/><package name="parallel_quickstep"/></stack><stack name="csiro_asl_openrave_plugins" path="" repo="csiro-asl-ros-pkg" repo_host="lp:csiro-asl-ros-pkg">
  <description brief="CSIRO_openrave_plugins">CSIRO_openrave_plugins</description>
  <author>Maintained by Nick Hillier</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/CSIRO_openrave_plugins</url>
  <depend stack="ros"/>
<package name="odephysics_ORplugin"/></stack><stack name="cob_apps" path="" repo="cob_apps" repo_host="https://github.com/ipa320/cob_apps">
  <description brief="cob_apps">

     The cob_apps stack provides example applications, mainly for testing the Care-O-bot hardware drivers.

  </description>
  <author>Maintained by Florian Weisshardt</author>
  <license>BSD,LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/cob_apps</url>
  <depend stack="arm_navigation"/> <!-- move_arm_msgs -->
  <depend stack="cob_common"/> <!-- cob_utilities, cob_msgs, cob_machine, cob_srvs -->
  <depend stack="cob_driver"/> <!-- cob_relayboard, cob_sick_s300, cob_arm, cob_hokuyo, cob_tray, cob_joy, cob_base, cob_head_axis, cob_camera_sensors, cob_sdh, cob_base_drive_chain, cob_joint_state_aggregator, sound_play, cob_torso -->
  <depend stack="cob_simulation"/> <!-- cob_gazebo -->
  <depend stack="common"/> <!-- actionlib, tinyxml -->
  <depend stack="common_msgs"/> <!-- nav_msgs, sensor_msgs, geometry_msgs -->
  <depend stack="geometry"/> <!-- tf, kdl, bullet, tf_conversions -->
  <depend stack="kinematics"/> <!-- kinematics_msgs -->
  <depend stack="motion_planning_common"/> <!-- planning_models, motion_planning_msgs -->
  <depend stack="motion_planning_environment"/> <!-- planning_environment -->
  <depend stack="navigation"/> <!-- move_base_msgs, move_base -->
  <depend stack="pr2_arm_navigation"/> <!-- pr2_arm_navigation_tutorials -->
  <depend stack="pr2_controllers"/> <!-- trajectory_msgs, pr2_controllers_msgs -->
  <depend stack="robot_model"/> <!-- assimp, robot_state_publisher, kdl_parser -->
  <depend stack="ros"/> <!-- std_msgs, rospy, roscpp -->
  <depend stack="simulator_gazebo"/> <!-- gazebo -->
  <depend stack="slam_gmapping"/> <!-- gmapping -->
  <depend stack="visualization_common"/> <!-- visualization_msgs -->

<package name="cob_bringup"/><package name="cob_script_server"/><package name="cob_2dslam"/><package name="cob_webportal"/><package name="cob_dashboard"/><package name="cob_mmcontroller"/><package name="cob_tactiletools"/><package name="cob_teleop"/><package name="cob_simpletrajectories"/><package name="cob_arm_navigation"/><package name="cob_simpledrive"/><package name="cob_2dnav"/></stack><stack name="nxt" path="" repo="foote-nxt" repo_host="https://nxt.foote-ros-pkg.googlecode.com/hg/">
  <description brief="A stack for interacting with Lego NXT">
    This stack has basic interfaces for interacting with ROS and NXT. The software in this 
    stack is intended to run on top of the default NXT firmware provided by lego. 
  </description>
  <author>Maintained by Tully Foote, Wim Meeussen, and Melonee Wise</author>
  <license>BSD</license>  
  <review notes="" status="experimental"/>
  <url>http://ros.org/wiki/nxt</url>
  <depend stack="common_msgs"/> <!-- nav_msgs, sensor_msgs, geometry_msgs -->
  <depend stack="geometry"/> <!-- kdl, tf, tf_conversions -->
  <depend stack="ros"/> <!-- rospy, std_msgs, roscpp -->
  <depend stack="visualization"/> <!-- rviz -->

<package name="nxt_rviz_plugin"/><package name="nxt_python"/><package name="nxt_description"/><package name="nxt_msgs"/><package name="nxt_lxf2urdf"/><package name="nxt_ros"/><package name="nxt_controllers"/></stack><stack name="pr2_apps" path="/stacks/pr2_apps/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="PR2 applications">Basic applications for the PR2 robot</description>
  <author>Maintained by Wim Meeussen</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_apps</url>
  <depend stack="common"/> <!-- actionlib -->
  <depend stack="common_msgs"/> <!-- sensor_msgs, actionlib_msgs, trajectory_msgs, geometry_msgs -->
  <depend stack="image_common"/> <!-- polled_camera -->
  <depend stack="joystick_drivers"/> <!-- joy, ps3joy -->
  <depend stack="kinematics"/> <!-- kinematics_msgs -->
  <depend stack="pr2_common"/> <!-- pr2_msgs -->
  <depend stack="pr2_common_actions"/> <!-- pr2_common_action_msgs, pr2_tuck_arms_action -->
  <depend stack="pr2_controllers"/> <!-- pr2_controllers_msgs -->
  <depend stack="pr2_mechanism"/> <!-- pr2_controller_manager, pr2_mechanism_msgs -->
  <depend stack="robot_model"/> <!-- urdf -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_msgs, topic_tools, rospy, roscpp -->

<package name="pr2_teleop_general"/><package name="pr2_tuckarm"/><package name="pr2_mannequin_mode"/><package name="pr2_teleop"/></stack><stack name="ias_visualization" path="/stacks/ias_visualization" repo="tum-ros-pkg" repo_host="https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg">
  <description brief="ias_visualization">
    ias_visualization is a collection of visualization messages and accompanying rviz plugins
  </description>
  <author>Maintained by Nico Blodow</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ias_visualization</url>
  <depend stack="common_msgs"/> <!-- sensor_msgs, geometry_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="grasping"/> <!-- simple_grasp_planner -->
  <depend stack="ias_common"/> <!-- vision_msgs, vision_srvs -->
  <depend stack="ros"/> <!-- std_msgs, roscpp -->
  <depend stack="visualization"/> <!-- rviz -->

<package name="triangle_mesh_rviz_plugin"/><package name="position_string_rviz_plugin"/><package name="cop_rviz_plugin"/><package name="position_string_msgs"/><package name="tf_trajectory_visualization"/></stack><stack name="vanadium_robots" path="/trunk/vanadium_robots" repo="vanadium-ros-pkg" repo_host="http://vanadium-ros-pkg.googlecode.com/svn">
  <description brief="vanadium_robots">This stack contains configuration files, launch files, and application code for robots developed at Vanadium Labs.</description>
  <author>Maintained by Michael Ferguson</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/vanadium_robots</url>
  <depend stack="ros"/>

<package name="armadillo_2wd"/></stack><stack name="visualization_tutorials" path="/stacks/visualization_tutorials/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Visualization Tutorials">Tutorials related to the visualization stack such as Marker tutorials</description>
  <author>Maintained by Josh Faust</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/visualization_tutorials</url>
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- roscpp -->
  <depend stack="common_msgs"/> <!-- visualization_msgs -->
  <depend stack="visualization_common"/> <!-- backwards compatibility -->

<package name="visualization_marker_tutorials"/></stack><stack name="laser_pipeline" path="/stacks/laser_pipeline/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="laser_pipeline">

     Libraries from processing laser data, including converting laser data into 3D representations.

  </description>
  <author>Maintained by Jeremy Leibs</author>
  <license>BSD</license>  
  <review notes="09/29/2009" status="Doc reviewed"/>
  <url>http://ros.org/wiki/laser_pipeline</url>
  <depend stack="common"/> <!-- filters, pluginlib -->
  <depend stack="common_msgs"/> <!-- sensor_msgs, geometry_msgs -->
  <depend stack="geometry"/> <!-- tf, angles -->
  <depend stack="ros"/>
  <depend stack="ros_comm"/> <!-- std_msgs, roscpp, message_filters -->

<package name="laser_assembler"/><package name="laser_filters"/><package name="laser_geometry"/></stack><stack name="urdf_tools" path="/stacks/urdf_tools/trunk" repo="wu-ros-pkg" repo_host="https://wu-ros-pkg.svn.sourceforge.net/svnroot/wu-ros-pkg">
  <description brief="Tools for use with URDF Models">This package contains a number of tools for making, viewing and using URDF models.</description>
  <author>Maintained by David Lu!!</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/urdf_tools</url>
  <depend stack="ros"/>

<package name="joint_state_publisher"/><package name="simmechanics_to_urdf"/><package name="easy_state_publisher"/><package name="arm_kinematics"/><package name="urdf_tutorial"/></stack><stack name="pr2_kinematics_with_constraints" path="/stacks/pr2_kinematics_with_constraints/branches/into_unstable" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_kinematics_with_constraints">
    This stack contains an implementation of kinematics for the PR2 robot arms. The implementation can currently compute collision free position inverse kinematics for the PR2 arms. 
  </description>
  <author>Maintained by Sachin Chitta</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_kinematics_with_constraints</url>
  <depend stack="ros"/>

<package name="pr2_kinematics_with_constraints_empty_pkg"/></stack><stack name="pr2_self_test" path="/stacks/pr2_self_test/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="Runs PR2 self-checks on robot.">
Packages for running PR2 self-tests and bringup checks onboard robot.
  </description>
  <author>Kevin Watts</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_self_test</url>
  <depend stack="common"/> <!-- actionlib, pluginlib -->
  <depend stack="common_msgs"/> <!-- sensor_msgs -->
  <depend stack="image_pipeline"/> <!-- camera_calibration, image_view -->
  <depend stack="pr2_apps"/> <!-- pr2_mannequin_mode -->
  <depend stack="pr2_controllers"/> <!-- robot_mechanism_controllers, control_toolbox, pr2_controllers_msgs, ethercat_trigger_controllers -->
  <depend stack="pr2_mechanism"/> <!-- pr2_controller_manager, pr2_mechanism_model, realtime_tools, pr2_hardware_interface, pr2_controller_interface -->
  <depend stack="pr2_robot"/> <!-- pr2_controller_configuration, pr2_bringup -->
  <depend stack="robot_model"/> <!-- urdf -->
  <depend stack="ros"/> <!-- rospy, std_msgs, roscpp -->

<package name="pr2_bringup_tests"/><package name="pr2_counterbalance_check"/><package name="pr2_self_test_msgs"/><package name="joint_qualification_controllers"/></stack><stack name="ua_controllers" path="/trunk/arrg/ua_controllers" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
  <description brief="Controllers for the Wubble Robot">
  This stack contains higher level controllers for the Wubble Robot, which 
  generally depend on packages in the ua_drivers stack for interfacing with 
  the hardware. Thus, packages in this stack provide a higher level of 
  abstraction for Wubble Robot subsystems than ua_drivers.
  </description>
  <author>Maintained by UA Robotics Research Group</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ua_controllers</url>
  <depend stack="ros"/>

<package name="wubble_arm_kinematics"/><package name="ax12_controller_core"/><package name="wubble_controllers"/><package name="ua_controller_msgs"/><package name="wubble_arm_kinematics_constraint_aware"/><package name="charlie_controllers"/><package name="smart_arm_kinematics"/><package name="wubble_actions"/><package name="smart_arm_controller"/></stack><stack name="rlrobot" path="/trunk/experimental/rlrobot" repo="brown-ros-pkg" repo_host="http://brown-ros-pkg.googlecode.com/svn" version="0.1.0">
  <description brief="rlrobot">

     rlrobot

  </description>
  <author>Maintained by Sosentos</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/rlrobot</url>

<package name="exampleClient"/><package name="icreate_nav"/><package name="rosglue"/><package name="irobot_test"/><package name="discreteMove_0_0_1"/></stack><stack name="ethzasl_mapping" path="" repo="ethzasl_mapping" repo_host="https://github.com/ethz-asl/ros-mapping">
  <description brief="ethzasl_mapping">
    3D mapping tools for robotic applications
  </description>
  <author>Fran√ßois Pomerleau and St√©phane Magnenat</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ethzasl_mapping</url>
  <depend stack="common"/> 
  <depend stack="common_msgs"/>
  <depend stack="ros"/>
<package name="modular_cloud_matcher"/></stack><stack name="head_interaction_behavior" path="/trunk/head_interaction_behavior" repo="usc-ros-pkg" repo_host="https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg">
  <description brief="head_interaction_behavior">head_interaction_behavior</description>
  <author>Maintained by David Feil-Seifer</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/head_interaction_behavior</url>
  <depend stack="bandit"/> <!-- bandit_msgs -->
  <depend stack="common_msgs"/> <!-- geometry_msgs -->
  <depend stack="geometry"/> <!-- tf -->
  <depend stack="people"/> <!-- people_msgs -->
  <depend stack="ros"/>
  <depend stack="vision_opencv"/> <!-- opencv2 -->

<package name="head_follow_people"/><package name="head_traj_general"/></stack><stack name="ndi_hardware" path="/trunk/kul-ros-pkg/stacks/ndi_hardware" repo="kul-ros-pkg" repo_host="http://svn.mech.kuleuven.be/repos/orocos">
  <description brief="ndi_hardware">
    ndi_hardware is a stack with a driver and example components/applications to use NDI hardware with a Linux based system.
    At the moment implementation for: the NDI Polaris (R) 3D optical measurement system 
  </description>
  <author>Maintained by Dominick Vanthienen</author>
  <license>LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ndi_hardware</url>
  <depend stack="ros"/>
  <!--depend stack="orocos" /-->
  <depend stack="geometry"/>

<package name="ndi_polaris_orocos_tf"/><package name="ndi_polaris_orocos_20_example"/><package name="ndi_polaris"/><package name="ndi_polaris_orocos_example"/></stack><stack name="diagnostics" path="/stacks/diagnostics/trunk" repo="ros-pkg" repo_host="https://code.ros.org/svn/ros-pkg">
  <description brief="Diagnostics analysis, processing and display">
    Packages related to gathering, viewing, and analyzing diagnostics data
    from robots.
  </description>
  <author>Kevin Watts watts@willowgarage.com, Tully Foote tfoote@willowgarage.com, Blaise Gassend blaise@willowgarage.com, Josh Faust jfaust@willowgarage.com</author>
  <license>BSD</license>  
  <review notes="" status="Doc reviewed"/>
  <url>http://ros.org/wiki/diagnostics</url>
  <depend stack="common"/> <!-- pluginlib -->
  <depend stack="common_msgs"/> <!-- diagnostic_msgs -->
  <depend stack="ros"/> <!-- xmlrpcpp, rostest, rospy, roscpp, rosrecord -->
  <depend stack="rx"/>
<package name="diagnostic_updater"/><package name="test_diagnostic_aggregator"/><package name="self_test"/><package name="robot_monitor"/><package name="diagnostic_analysis"/><package name="runtime_monitor"/><package name="diagnostic_aggregator"/></stack><stack name="ua_robots" path="/trunk/arrg/ua_robots" repo="ua-ros-pkg" repo_host="http://ua-ros-pkg.googlecode.com/svn">
  <description brief="Contains URDF descriptions of UA robots.">
  This stack contains URDF description files, 3D models, meshes, textures
  and configuration parameters needed for Wubble Robot simulation.
  </description>
  <author>Maintained by UA Robotics Research Group</author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/ua_robots</url>
  <depend stack="ros"/>

<package name="videre_stoc_description"/><package name="wubble_arm_description"/><package name="wubble_description"/><package name="smart_arm_description"/><package name="overhead_cam_description"/><package name="swissranger_camera_description"/><package name="chr_6dm_imu_description"/><package name="hokuyo_urg_description"/></stack><stack name="power_supplies" path="" repo="umd-ros-pkg" repo_host="git://ram.umd.edu/umd-ros-pkg.git">
  <description brief="power_supplies">power_supplies</description>
  <author>Maintained by </author>
  <license>BSD</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/power_supplies</url>

<package name="power_srvs"/><package name="power_msgs"/><package name="ctx2140"/><package name="m4atx"/></stack><stack name="pr2_doors" path="/stacks/pr2_doors/trunk" repo="wg-ros-pkg" repo_host="https://code.ros.org/svn/wg-ros-pkg">
  <description brief="pr2_doors">The pr2_doors stack provides the building blocks and integration to allow the PR2 to autonomously detect and open doors.</description>
  <author>Maintained by Wim Meeussen</author>
  <license>BSD,LGPL</license>  
  <review notes="" status="unreviewed"/>
  <url>http://ros.org/wiki/pr2_doors</url>
  <depend stack="common"/> <!-- actionlib, pluginlib -->
  <depend stack="common_msgs"/> <!-- sensor_msgs, actionlib_msgs, geometry_msgs, diagnostic_msgs -->
  <depend stack="diagnostics"/> <!-- diagnostic_updater -->
  <depend stack="executive_smach"/> <!-- smach_ros, smach -->
  <depend stack="geometry"/> <!-- tf, kdl, angles -->
  <depend stack="image_pipeline"/> <!-- stereo_msgs -->
  <depend stack="laser_pipeline"/> <!-- laser_assembler -->
  <depend stack="motion_planning_common"/> <!-- mapping_msgs -->
  <depend stack="navigation"/> <!-- move_base_msgs, base_local_planner, costmap_2d -->
  <depend stack="pr2_common"/> <!-- pr2_machine, pr2_msgs -->
  <depend stack="pr2_common_actions"/> <!-- joint_trajectory_generator, pr2_common_action_msgs, pr2_arm_move_ik -->
  <depend stack="pr2_controllers"/> <!-- control_toolbox, pr2_controllers_msgs -->
  <depend stack="pr2_mechanism"/> <!-- pr2_mechanism_msgs, pr2_controller_manager, pr2_mechanism_model, realtime_tools, pr2_controller_interface -->
  <depend stack="pr2_navigation"/> <!-- pr2_navigation_teleop, pr2_navigation_perception, pr2_navigation_local -->
  <depend stack="ros"/> <!-- std_srvs, std_msgs, roscpp -->
  <depend stack="vision_opencv"/> <!-- opencv2, cv_bridge -->
  <depend stack="visualization_common"/> <!-- visualization_msgs -->
  <depend stack="wg_common"/> <!-- willow_maps -->

<package name="ANN_doors"/><package name="pr2_doors_common"/><package name="tff_controller"/><package name="pr2_laser_snapshotter"/><package name="door_msgs"/><package name="pr2_doors_actions"/><package name="pr2_doors_executive"/><package name="door_handle_detector"/></stack></stacks>